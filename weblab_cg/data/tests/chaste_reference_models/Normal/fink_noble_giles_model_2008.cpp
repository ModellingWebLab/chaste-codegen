//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: fink_noble_giles_model_2008
//! 
//! Processed by weblab_cg: https://github.com/ModellingWebLab/weblab-cg
//!     (translator: weblab_cg, model type: normal, options: )
//! on 2020-01-14 18:32:48
//! 
//! <autogenerated>

#include "fink_noble_giles_model_2008.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    boost::shared_ptr<RegularStimulus> Cellfink_noble_giles_model_2008FromCellML::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__cell__i_Stim_Amplitude = HeartConfig::Instance()->GetCapacitance() * -52.0; // uA_per_uF
        const double var_chaste_interface__cell__i_Stim_PulseDuration = 1.0; // millisecond
        const double var_chaste_interface__cell__i_Stim_Period = 1000.0; // millisecond
        const double var_chaste_interface__cell__i_Stim_Start = 10.0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__cell__i_Stim_Amplitude),
                var_chaste_interface__cell__i_Stim_PulseDuration,
                var_chaste_interface__cell__i_Stim_Period,
                var_chaste_interface__cell__i_Stim_Start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    Cellfink_noble_giles_model_2008FromCellML::Cellfink_noble_giles_model_2008FromCellML(boost::shared_ptr<AbstractIvpOdeSolver> pSolver, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCardiacCell(
                pSolver,
                27,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Cellfink_noble_giles_model_2008FromCellML>::Instance();
        Init();
        
        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        
    }
    
    Cellfink_noble_giles_model_2008FromCellML::~Cellfink_noble_giles_model_2008FromCellML()
    {
    }

    double Cellfink_noble_giles_model_2008FromCellML::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -86.45
        double var_chaste_interface__iKr_Markov__Or4 = rY[4];
        // Units: dimensionless; Initial value: 0.014
        double var_chaste_interface__iKs_Xs_gate__Xs = rY[11];
        // Units: dimensionless; Initial value: 0.00303
        double var_chaste_interface__ito_s_gate__s = rY[12];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ito_r_gate__r = rY[13];
        // Units: dimensionless; Initial value: 2.11e-08
        double var_chaste_interface__iNa_m_gate__m = rY[14];
        // Units: dimensionless; Initial value: 0.00132
        double var_chaste_interface__iNa_h_gate__h = rY[15];
        // Units: dimensionless; Initial value: 0.7768
        double var_chaste_interface__iNa_j_gate__j = rY[16];
        // Units: dimensionless; Initial value: 0.7766
        double var_chaste_interface__iCaL_d_gate__d = rY[17];
        // Units: dimensionless; Initial value: 5.06e-06
        double var_chaste_interface__iCaL_f_gate__f = rY[18];
        // Units: dimensionless; Initial value: 0.9999
        double var_chaste_interface__iCaL_f2_gate__f2 = rY[19];
        // Units: dimensionless; Initial value: 0.9995
        double var_chaste_interface__iCaL_fCass_gate__fCass = rY[20];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ca__Ca_i = rY[21];
        // Units: millimolar; Initial value: 0.0001092
        double var_chaste_interface__Ca__Ca_ss = rY[23];
        // Units: millimolar; Initial value: 0.0001893
        double var_chaste_interface__Na__Na_i = rY[25];
        // Units: millimolar; Initial value: 7.940167
        double var_chaste_interface__K__K_i = rY[26];
        // Units: millimolar; Initial value: 141.0167
        
        const double var_Environment__Ca_o = 2.0; // millimolar
        const double var_Environment__F = 96485.3415; // coulomb_per_mole
        const double var_Environment__K_o = 5.4; // millimolar
        const double var_Environment__Na_o = 140.0; // millimolar
        const double var_Environment__R = 8314.472; // millijoule_per_mole_kelvin
        const double var_Environment__T = 310.0; // kelvin
        const double var_ICaL__g_CaL = 2e-05; // litre_per_farad_millisecond
        const double var_ICaL__z = 2.0; // dimensionless
        const double var_ICab__g_bca = 0.0004736; // microS_per_nanoF
        const double var_IK1__g_K1_0 = 0.6821; // microS_per_nanoF
        const double var_IKr__g_Kr_0 = 0.024; // microS_per_nanoF
        const double var_IKs__g_Ks = 0.0392; // microS_per_nanoF
        const double var_INa__g_Na = 11.0; // microS_per_nanoF
        const double var_INaCa__K_NaCa = 200.0; // nanoA_per_nanoF
        const double var_INaCa__K_sat = 0.1; // dimensionless
        const double var_INaCa__Km_Ca = 1.38; // millimolar
        const double var_INaCa__Km_Nai = 87.5; // millimolar
        const double var_INaCa__alpha = 2.5; // dimensionless
        const double var_INaCa__gamma = 0.35; // dimensionless
        const double var_INaK__K_mNa = 40.0; // millimolar
        const double var_INaK__K_mk = 1.0; // millimolar
        const double var_INaK__P_NaK = 1.297; // nanoA_per_nanoF
        const double var_INab__g_bna = 0.00029; // microS_per_nanoF
        const double var_IpCa__K_pCa = 0.0005; // millimolar
        const double var_IpCa__g_pCa = 0.0619; // nanoA_per_nanoF
        const double var_IpCa__i_p_Ca = var_chaste_interface__Ca__Ca_i * var_IpCa__g_pCa / (var_chaste_interface__Ca__Ca_i + var_IpCa__K_pCa); // nanoA_per_nanoF
        const double var_IpK__g_pK = 0.00973; // microS_per_nanoF
        const double var_Ito__g_to = 0.2; // microS_per_nanoF
        const double var_INaCa__i_NaCa = (pow(var_chaste_interface__Na__Na_i, 3.0) * var_Environment__Ca_o * exp(var_Environment__F * var_INaCa__gamma * var_chaste_interface__cell__V / (var_Environment__R * var_Environment__T)) - pow(var_Environment__Na_o, 3.0) * var_chaste_interface__Ca__Ca_i * var_INaCa__alpha * exp((-1.0 + var_INaCa__gamma) * var_Environment__F * var_chaste_interface__cell__V / (var_Environment__R * var_Environment__T))) * var_INaCa__K_NaCa / ((pow(var_Environment__Na_o, 3.0) + pow(var_INaCa__Km_Nai, 3.0)) * (var_INaCa__K_sat * exp((-1.0 + var_INaCa__gamma) * var_Environment__F * var_chaste_interface__cell__V / (var_Environment__R * var_Environment__T)) + 1.0) * (var_Environment__Ca_o + var_INaCa__Km_Ca)); // nanoA_per_nanoF
        const double var_INaK__i_NaK = var_Environment__K_o * var_INaK__P_NaK * var_chaste_interface__Na__Na_i / ((var_Environment__K_o + var_INaK__K_mk) * (var_INaK__K_mNa + var_chaste_interface__Na__Na_i) * (0.0353 * exp(-var_Environment__F * var_chaste_interface__cell__V / (var_Environment__R * var_Environment__T)) + 0.1245 * exp(-0.1 * var_Environment__F * var_chaste_interface__cell__V / (var_Environment__R * var_Environment__T)) + 1.0)); // nanoA_per_nanoF
        const double var_cell__i_Stim = 0.0; // nanoA_per_nanoF
        const double var_ICaL__i_CaL = pow(var_Environment__F, 2.0) * pow(var_ICaL__z, 2.0) * (-15.0 + var_chaste_interface__cell__V) * (-var_Environment__Ca_o + 0.25 * var_chaste_interface__Ca__Ca_ss * exp((-15.0 + var_chaste_interface__cell__V) * 2.0 * var_Environment__F / (var_Environment__R * var_Environment__T))) * var_ICaL__g_CaL * var_chaste_interface__iCaL_d_gate__d * var_chaste_interface__iCaL_f2_gate__f2 * var_chaste_interface__iCaL_fCass_gate__fCass * var_chaste_interface__iCaL_f_gate__f / ((-1.0 + exp((-15.0 + var_chaste_interface__cell__V) * 2.0 * var_Environment__F / (var_Environment__R * var_Environment__T))) * var_Environment__R * var_Environment__T); // nanoA_per_nanoF
        const double var_iK1_rectification__Mg_Buf = 0.0356; // millimolar
        const double var_iK1_rectification__SPM = 0.0014613; // millimolar
        const double var_iK1_rectification__fac = 1.0648; // dimensionless
        const double var_iK1_rectification__phi = 0.8838; // dimensionless
        const double var_reversal_potentials__E_Ca = 0.5 * var_Environment__R * var_Environment__T * log(var_Environment__Ca_o / var_chaste_interface__Ca__Ca_i) / var_Environment__F; // millivolt
        const double var_ICab__i_b_Ca = (-var_reversal_potentials__E_Ca + var_chaste_interface__cell__V) * var_ICab__g_bca; // nanoA_per_nanoF
        const double var_reversal_potentials__E_K = var_Environment__R * var_Environment__T * log(var_Environment__K_o / var_chaste_interface__K__K_i) / var_Environment__F; // millivolt
        const double var_IKr__i_Kr = sqrt(var_Environment__K_o / 5.4) * (-var_reversal_potentials__E_K + var_chaste_interface__cell__V) * (var_Environment__T / 35.0 - 55.0 / 7.0) * var_IKr__g_Kr_0 * var_chaste_interface__iKr_Markov__Or4; // nanoA_per_nanoF
        const double var_IpK__i_p_K = (-var_reversal_potentials__E_K + var_chaste_interface__cell__V) * var_IpK__g_pK / (1.0 + exp((-var_chaste_interface__cell__V + 25.0) / 5.98)); // nanoA_per_nanoF
        const double var_Ito__i_to = (-var_reversal_potentials__E_K + var_chaste_interface__cell__V) * var_Ito__g_to * var_chaste_interface__ito_r_gate__r * var_chaste_interface__ito_s_gate__s; // nanoA_per_nanoF
        const double var_iK1_rectification__KbMg = 0.45 * exp((-var_chaste_interface__cell__V + var_iK1_rectification__fac * var_reversal_potentials__E_K) / 20.0); // millimolar
        const double var_iK1_rectification__Kd1SPM = 0.0007 * exp((-var_chaste_interface__cell__V + var_iK1_rectification__fac * var_reversal_potentials__E_K - 8.0 * var_iK1_rectification__Mg_Buf) / 4.8); // millimolar
        const double var_iK1_rectification__Kd2SPM = 0.04 * exp((-var_chaste_interface__cell__V + var_iK1_rectification__fac * var_reversal_potentials__E_K) / 9.1); // millimolar
        const double var_iK1_rectification__KiMg = 2.8 * exp((-var_chaste_interface__cell__V + var_iK1_rectification__fac * var_reversal_potentials__E_K) / 180.0); // millimolar
        const double var_iK1_rectification__rec2 = 1.0 / (var_iK1_rectification__SPM / var_iK1_rectification__Kd2SPM + 1.0); // dimensionless
        const double var_iK1_rectification__temp = var_iK1_rectification__Mg_Buf / var_iK1_rectification__KbMg + 1.0; // dimensionless
        const double var_iK1_rectification__rec1 = pow(var_iK1_rectification__temp, 2) / (pow(var_iK1_rectification__temp, 3) + var_iK1_rectification__SPM / var_iK1_rectification__Kd1SPM + var_iK1_rectification__Mg_Buf / var_iK1_rectification__KiMg); // dimensionless
        const double var_iK1_rectification__xK1_inf = (-var_iK1_rectification__phi + 1.0) * var_iK1_rectification__rec2 + var_iK1_rectification__phi * var_iK1_rectification__rec1; // dimensionless
        const double var_IK1__i_K1 = sqrt(var_Environment__K_o / 5.4) * (-var_reversal_potentials__E_K + var_chaste_interface__cell__V) * (var_Environment__T / 35.0 - 55.0 / 7.0) * var_IK1__g_K1_0 * var_iK1_rectification__xK1_inf; // nanoA_per_nanoF
        const double var_reversal_potentials__E_Na = var_Environment__R * var_Environment__T * log(var_Environment__Na_o / var_chaste_interface__Na__Na_i) / var_Environment__F; // millivolt
        const double var_INa__i_Na = pow(var_chaste_interface__iNa_m_gate__m, 3.0) * (-var_reversal_potentials__E_Na + var_chaste_interface__cell__V) * var_INa__g_Na * var_chaste_interface__iNa_h_gate__h * var_chaste_interface__iNa_j_gate__j; // nanoA_per_nanoF
        const double var_INab__i_b_Na = (-var_reversal_potentials__E_Na + var_chaste_interface__cell__V) * var_INab__g_bna; // nanoA_per_nanoF
        const double var_reversal_potentials__P_kna = 0.03; // dimensionless
        const double var_reversal_potentials__E_Ks = var_Environment__R * var_Environment__T * log((var_Environment__Na_o * var_reversal_potentials__P_kna + var_Environment__K_o) / (var_chaste_interface__Na__Na_i * var_reversal_potentials__P_kna + var_chaste_interface__K__K_i)) / var_Environment__F; // millivolt
        const double var_IKs__i_Ks = pow(var_chaste_interface__iKs_Xs_gate__Xs, 2.0) * (-var_reversal_potentials__E_Ks + var_chaste_interface__cell__V) * var_IKs__g_Ks; // nanoA_per_nanoF
        const double var_cell__i_tot = var_ICaL__i_CaL + var_ICab__i_b_Ca + var_IK1__i_K1 + var_IKr__i_Kr + var_IKs__i_Ks + var_INa__i_Na + var_INaCa__i_NaCa + var_INaK__i_NaK + var_INab__i_b_Na + var_IpCa__i_p_Ca + var_IpK__i_p_K + var_Ito__i_to + var_cell__i_Stim; // nanoA_per_nanoF
        const double var_chaste_interface__i_ionic = HeartConfig::Instance()->GetCapacitance() * var_cell__i_tot; // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Cellfink_noble_giles_model_2008FromCellML::EvaluateYDerivatives(double var_chaste_interface__Environment__time, const std::vector<double>& rY, std::vector<double>& rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -86.45
        double var_chaste_interface__iKr_Markov__Cr1 = rY[1];
        // Units: dimensionless; Initial value: 0.9786
        double var_chaste_interface__iKr_Markov__Cr2 = rY[2];
        // Units: dimensionless; Initial value: 0.0031
        double var_chaste_interface__iKr_Markov__Cr3 = rY[3];
        // Units: dimensionless; Initial value: 0.0029
        double var_chaste_interface__iKr_Markov__Or4 = rY[4];
        // Units: dimensionless; Initial value: 0.014
        double var_chaste_interface__iKr_Markov__Ir5 = rY[5];
        // Units: dimensionless; Initial value: 0.0014
        double var_chaste_interface__iKr_Markov_Sotalol_block__BCr1 = rY[6];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__iKr_Markov_Sotalol_block__BCr2 = rY[7];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__iKr_Markov_Sotalol_block__BCr3 = rY[8];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__iKr_Markov_Sotalol_block__BOr4 = rY[9];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__iKr_Markov_Sotalol_block__BIr5 = rY[10];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__iKs_Xs_gate__Xs = rY[11];
        // Units: dimensionless; Initial value: 0.00303
        double var_chaste_interface__ito_s_gate__s = rY[12];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ito_r_gate__r = rY[13];
        // Units: dimensionless; Initial value: 2.11e-08
        double var_chaste_interface__iNa_m_gate__m = rY[14];
        // Units: dimensionless; Initial value: 0.00132
        double var_chaste_interface__iNa_h_gate__h = rY[15];
        // Units: dimensionless; Initial value: 0.7768
        double var_chaste_interface__iNa_j_gate__j = rY[16];
        // Units: dimensionless; Initial value: 0.7766
        double var_chaste_interface__iCaL_d_gate__d = rY[17];
        // Units: dimensionless; Initial value: 5.06e-06
        double var_chaste_interface__iCaL_f_gate__f = rY[18];
        // Units: dimensionless; Initial value: 0.9999
        double var_chaste_interface__iCaL_f2_gate__f2 = rY[19];
        // Units: dimensionless; Initial value: 0.9995
        double var_chaste_interface__iCaL_fCass_gate__fCass = rY[20];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ca__Ca_i = rY[21];
        // Units: millimolar; Initial value: 0.0001092
        double var_chaste_interface__Ca__Ca_SR = rY[22];
        // Units: millimolar; Initial value: 2.7656
        double var_chaste_interface__Ca__Ca_ss = rY[23];
        // Units: millimolar; Initial value: 0.0001893
        double var_chaste_interface__Irel__R_prime = rY[24];
        // Units: dimensionless; Initial value: 0.9864
        double var_chaste_interface__Na__Na_i = rY[25];
        // Units: millimolar; Initial value: 7.940167
        double var_chaste_interface__K__K_i = rY[26];
        // Units: millimolar; Initial value: 141.0167
        
        // Mathematics
        double d_dt_chaste_interface_var_cell__V;
        const double var_Ca__V_sr = 0.001094; // nanolitre
        const double var_Ca__V_ss = 5.468e-05; // nanolitre
        const double var_Ca_buffer__Buf_c = 0.2; // millimolar
        const double var_Ca_buffer__Buf_sr = 10.0; // millimolar
        const double var_Ca_buffer__Buf_ss = 0.4; // millimolar
        const double var_Ca_buffer__K_buf_c = 0.001; // millimolar
        const double var_Ca_buffer__Ca_i_bufc = 1.0 / (pow((var_chaste_interface__Ca__Ca_i + var_Ca_buffer__K_buf_c), (-2.0)) * var_Ca_buffer__Buf_c * var_Ca_buffer__K_buf_c + 1.0); // dimensionless
        const double var_Ca_buffer__K_buf_sr = 0.3; // millimolar
        const double var_Ca_buffer__Ca_sr_bufsr = 1.0 / (pow((var_chaste_interface__Ca__Ca_SR + var_Ca_buffer__K_buf_sr), (-2.0)) * var_Ca_buffer__Buf_sr * var_Ca_buffer__K_buf_sr + 1.0); // dimensionless
        const double var_Ca_buffer__K_buf_ss = 0.00025; // millimolar
        const double var_Ca_buffer__Ca_ss_bufss = 1.0 / (pow((var_chaste_interface__Ca__Ca_ss + var_Ca_buffer__K_buf_ss), (-2.0)) * var_Ca_buffer__Buf_ss * var_Ca_buffer__K_buf_ss + 1.0); // dimensionless
        const double var_Environment__Ca_o = 2.0; // millimolar
        const double var_Environment__F = 96485.3415; // coulomb_per_mole
        const double var_Environment__K_o = 5.4; // millimolar
        const double var_Environment__Na_o = 140.0; // millimolar
        const double var_Environment__R = 8314.472; // millijoule_per_mole_kelvin
        const double var_Environment__T = 310.0; // kelvin
        const double var_ICaL__g_CaL = 2e-05; // litre_per_farad_millisecond
        const double var_ICaL__z = 2.0; // dimensionless
        const double var_ICab__g_bca = 0.0004736; // microS_per_nanoF
        const double var_IK1__g_K1_0 = 0.6821; // microS_per_nanoF
        const double var_IKr__g_Kr_0 = 0.024; // microS_per_nanoF
        const double var_IKs__g_Ks = 0.0392; // microS_per_nanoF
        const double var_INa__g_Na = 11.0; // microS_per_nanoF
        const double var_INa__shift_INa_inact = 0.0; // millivolt
        const double var_INaCa__K_NaCa = 200.0; // nanoA_per_nanoF
        const double var_INaCa__K_sat = 0.1; // dimensionless
        const double var_INaCa__Km_Ca = 1.38; // millimolar
        const double var_INaCa__Km_Nai = 87.5; // millimolar
        const double var_INaCa__alpha = 2.5; // dimensionless
        const double var_INaCa__gamma = 0.35; // dimensionless
        const double var_INaK__K_mNa = 40.0; // millimolar
        const double var_INaK__K_mk = 1.0; // millimolar
        const double var_INaK__P_NaK = 1.297; // nanoA_per_nanoF
        const double var_INab__g_bna = 0.00029; // microS_per_nanoF
        const double var_Ileak_Iup_Ixfer__K_up = 0.00025; // millimolar
        const double var_Ileak_Iup_Ixfer__Vmax_up = 0.006375; // millimolar_per_millisecond
        const double var_Ileak_Iup_Ixfer__Vol_leak = 0.00036; // per_millisecond
        const double var_Ileak_Iup_Ixfer__Vol_xfer = 0.0038; // per_millisecond
        const double var_Ileak_Iup_Ixfer__i_leak = (-var_chaste_interface__Ca__Ca_i + var_chaste_interface__Ca__Ca_SR) * var_Ileak_Iup_Ixfer__Vol_leak; // millimolar_per_millisecond
        const double var_Ileak_Iup_Ixfer__i_up = var_Ileak_Iup_Ixfer__Vmax_up / (pow(var_chaste_interface__Ca__Ca_i, (-2.0)) * pow(var_Ileak_Iup_Ixfer__K_up, 2.0) + 1.0); // millimolar_per_millisecond
        const double var_Ileak_Iup_Ixfer__i_xfer = (-var_chaste_interface__Ca__Ca_i + var_chaste_interface__Ca__Ca_ss) * var_Ileak_Iup_Ixfer__Vol_xfer; // millimolar_per_millisecond
        const double var_IpCa__K_pCa = 0.0005; // millimolar
        const double var_IpCa__g_pCa = 0.0619; // nanoA_per_nanoF
        const double var_IpCa__i_p_Ca = var_chaste_interface__Ca__Ca_i * var_IpCa__g_pCa / (var_chaste_interface__Ca__Ca_i + var_IpCa__K_pCa); // nanoA_per_nanoF
        const double var_IpK__g_pK = 0.00973; // microS_per_nanoF
        const double var_Irel__EC = 1.5; // millimolar
        const double var_Irel__Vol_rel = 0.306; // per_millisecond
        const double var_Irel__k1_prime = 0.15; // per_millimolar2_per_millisecond
        const double var_Irel__k2_prime = 0.045; // per_millimolar_per_millisecond
        const double var_Irel__k3 = 0.06; // per_millisecond
        const double var_Irel__k4 = 0.005; // per_millisecond
        const double var_Irel__max_sr = 2.5; // dimensionless
        const double var_Irel__min_sr = 1.0; // dimensionless
        const double var_Irel__kcasr = -(-var_Irel__min_sr + var_Irel__max_sr) / (pow((var_Irel__EC / var_chaste_interface__Ca__Ca_SR), 2.0) + 1.0) + var_Irel__max_sr; // dimensionless
        const double var_Irel__k1 = var_Irel__k1_prime / var_Irel__kcasr; // per_millimolar2_per_millisecond
        const double var_Irel__O = pow(var_chaste_interface__Ca__Ca_ss, 2.0) * var_chaste_interface__Irel__R_prime * var_Irel__k1 / (pow(var_chaste_interface__Ca__Ca_ss, 2.0) * var_Irel__k1 + var_Irel__k3); // dimensionless
        const double var_Irel__i_rel = (-var_chaste_interface__Ca__Ca_ss + var_chaste_interface__Ca__Ca_SR) * var_Irel__O * var_Irel__Vol_rel; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_Ca__Ca_SR = (-var_Ileak_Iup_Ixfer__i_leak - var_Irel__i_rel + var_Ileak_Iup_Ixfer__i_up) * var_Ca_buffer__Ca_sr_bufsr; // millimolar / millisecond
        const double var_Irel__k2 = var_Irel__k2_prime * var_Irel__kcasr; // per_millimolar_per_millisecond
        const double d_dt_chaste_interface_var_Irel__R_prime = (-var_chaste_interface__Irel__R_prime + 1.0) * var_Irel__k4 - var_chaste_interface__Ca__Ca_ss * var_chaste_interface__Irel__R_prime * var_Irel__k2; // 1 / millisecond
        const double var_Ito__g_to = 0.2; // microS_per_nanoF
        const double var_cell__Cm = 0.115; // nanoF
        const double var_INaCa__i_NaCa = (pow(var_chaste_interface__Na__Na_i, 3.0) * var_Environment__Ca_o * exp(var_Environment__F * var_INaCa__gamma * var_chaste_interface__cell__V / (var_Environment__R * var_Environment__T)) - pow(var_Environment__Na_o, 3.0) * var_chaste_interface__Ca__Ca_i * var_INaCa__alpha * exp((-1.0 + var_INaCa__gamma) * var_Environment__F * var_chaste_interface__cell__V / (var_Environment__R * var_Environment__T))) * var_INaCa__K_NaCa / ((pow(var_Environment__Na_o, 3.0) + pow(var_INaCa__Km_Nai, 3.0)) * (var_INaCa__K_sat * exp((-1.0 + var_INaCa__gamma) * var_Environment__F * var_chaste_interface__cell__V / (var_Environment__R * var_Environment__T)) + 1.0) * (var_Environment__Ca_o + var_INaCa__Km_Ca)); // nanoA_per_nanoF
        const double var_INaK__i_NaK = var_Environment__K_o * var_INaK__P_NaK * var_chaste_interface__Na__Na_i / ((var_Environment__K_o + var_INaK__K_mk) * (var_INaK__K_mNa + var_chaste_interface__Na__Na_i) * (0.0353 * exp(-var_Environment__F * var_chaste_interface__cell__V / (var_Environment__R * var_Environment__T)) + 0.1245 * exp(-0.1 * var_Environment__F * var_chaste_interface__cell__V / (var_Environment__R * var_Environment__T)) + 1.0)); // nanoA_per_nanoF
        const double var_cell__Vol_c = 0.016404; // nanolitre
        const double var_cell__i_Stim_converter = GetIntracellularAreaStimulus(var_chaste_interface__Environment__time); // uA_per_cm2
        const double var_cell__i_Stim = var_cell__i_Stim_converter / HeartConfig::Instance()->GetCapacitance(); // nanoA_per_nanoF
        const double var_iCaL_d_gate__alpha_d = 1.4 / (1.0 + exp((-35.0 - var_chaste_interface__cell__V) / 13.0)) + 0.25; // dimensionless
        const double var_iCaL_d_gate__beta_d = 1.4 / (1.0 + exp((5.0 + var_chaste_interface__cell__V) / 5.0)); // dimensionless
        const double var_iCaL_d_gate__d_inf_shift = 5.0; // millivolt
        const double var_iCaL_d_gate__d_inf = 1.0 / (1.0 + exp((-var_chaste_interface__cell__V + var_iCaL_d_gate__d_inf_shift) / 7.5)); // dimensionless
        const double var_iCaL_d_gate__gamma_d = 1.0 / (1.0 + exp((-var_chaste_interface__cell__V + 50.0) / 20.0)); // millisecond
        const double var_iCaL_d_gate__tau_d = 1.0 * var_iCaL_d_gate__alpha_d * var_iCaL_d_gate__beta_d + var_iCaL_d_gate__gamma_d; // millisecond
        const double d_dt_chaste_interface_var_iCaL_d_gate__d = (-var_chaste_interface__iCaL_d_gate__d + var_iCaL_d_gate__d_inf) / var_iCaL_d_gate__tau_d; // 1 / millisecond
        const double var_iCaL_f2_gate__f2_inf = 0.75 / (1.0 + exp((35.0 + var_chaste_interface__cell__V) / 7.0)) + 0.25; // dimensionless
        const double var_iCaL_f2_gate__tau_f2 = (31.0 / (1.0 + exp((-var_chaste_interface__cell__V + 25.0) / 10.0)) + 80.0 / (1.0 + exp((30.0 + var_chaste_interface__cell__V) / 10.0)) + 562.0 * exp(-pow((27.0 + var_chaste_interface__cell__V), 2.0) / 240.0)) / 2.0; // millisecond
        const double d_dt_chaste_interface_var_iCaL_f2_gate__f2 = (-var_chaste_interface__iCaL_f2_gate__f2 + var_iCaL_f2_gate__f2_inf) / var_iCaL_f2_gate__tau_f2; // 1 / millisecond
        const double var_iCaL_fCass_gate__fCass_inf = 0.4 / (pow((var_chaste_interface__Ca__Ca_ss / 0.05), 2.0) + 1.0) + 0.6; // dimensionless
        const double var_iCaL_fCass_gate__tau_fCass = 80.0 / (pow((var_chaste_interface__Ca__Ca_ss / 0.05), 2.0) + 1.0) + 2.0; // millisecond
        const double d_dt_chaste_interface_var_iCaL_fCass_gate__fCass = (-var_chaste_interface__iCaL_fCass_gate__fCass + var_iCaL_fCass_gate__fCass_inf) / var_iCaL_fCass_gate__tau_fCass; // 1 / millisecond
        const double var_ICaL__i_CaL = pow(var_Environment__F, 2.0) * pow(var_ICaL__z, 2.0) * (-15.0 + var_chaste_interface__cell__V) * (-var_Environment__Ca_o + 0.25 * var_chaste_interface__Ca__Ca_ss * exp((-15.0 + var_chaste_interface__cell__V) * 2.0 * var_Environment__F / (var_Environment__R * var_Environment__T))) * var_ICaL__g_CaL * var_chaste_interface__iCaL_d_gate__d * var_chaste_interface__iCaL_f2_gate__f2 * var_chaste_interface__iCaL_fCass_gate__fCass * var_chaste_interface__iCaL_f_gate__f / ((-1.0 + exp((-15.0 + var_chaste_interface__cell__V) * 2.0 * var_Environment__F / (var_Environment__R * var_Environment__T))) * var_Environment__R * var_Environment__T); // nanoA_per_nanoF
        const double d_dt_chaste_interface_var_Ca__Ca_ss = (var_Ca__V_sr * var_Irel__i_rel / var_Ca__V_ss - var_Ileak_Iup_Ixfer__i_xfer * var_cell__Vol_c / var_Ca__V_ss - var_ICaL__i_CaL * var_cell__Cm / (2.0 * var_Ca__V_ss * var_Environment__F)) * var_Ca_buffer__Ca_ss_bufss; // millimolar / millisecond
        const double var_iCaL_f_gate__f_inf = 1.0 / (1.0 + exp((20.0 + var_chaste_interface__cell__V) / 7.0)); // dimensionless
        const double var_iCaL_f_gate__tau_f = (200.0 / (1.0 + exp((-var_chaste_interface__cell__V + 13.0) / 10.0)) + 180.0 / (1.0 + exp((30.0 + var_chaste_interface__cell__V) / 10.0)) + 1102.5 * exp(-pow((27.0 + var_chaste_interface__cell__V), 2.0) / 225.0) + 20.0) / 4.0; // millisecond
        const double d_dt_chaste_interface_var_iCaL_f_gate__f = (-var_chaste_interface__iCaL_f_gate__f + var_iCaL_f_gate__f_inf) / var_iCaL_f_gate__tau_f; // 1 / millisecond
        const double var_iK1_rectification__Mg_Buf = 0.0356; // millimolar
        const double var_iK1_rectification__SPM = 0.0014613; // millimolar
        const double var_iK1_rectification__fac = 1.0648; // dimensionless
        const double var_iK1_rectification__phi = 0.8838; // dimensionless
        const double var_iKr_Markov__T_Base = 310.0; // kelvin
        const double var_iKr_Markov__alpha_xr1 = 1.0 * var_Environment__T * exp((-25.914 + 0.0112 * var_chaste_interface__cell__V) * var_iKr_Markov__T_Base / var_Environment__T + 24.335) / var_iKr_Markov__T_Base; // per_millisecond
        const double var_iKr_Markov__alpha_xr2 = 1.0 * var_Environment__T * exp((-25.914 + 0.0 * var_chaste_interface__cell__V) * var_iKr_Markov__T_Base / var_Environment__T + 22.746) / var_iKr_Markov__T_Base; // per_millisecond
        const double var_iKr_Markov__alpha_xr3 = 1.0 * var_Environment__T * exp((-25.914 + 0.0365 * var_chaste_interface__cell__V) * var_iKr_Markov__T_Base / var_Environment__T + 22.098) / var_iKr_Markov__T_Base; // per_millisecond
        const double var_iKr_Markov__alpha_xr4 = pow((5.4 / var_Environment__K_o), 0.4) * 1.0 * var_Environment__T * exp((-30.888 + 0.0223 * var_chaste_interface__cell__V) * var_iKr_Markov__T_Base / var_Environment__T + 30.016) / var_iKr_Markov__T_Base; // per_millisecond
        const double var_iKr_Markov__beta_xr1 = 1.0 * var_Environment__T * exp((-15.707 - 0.0603 * var_chaste_interface__cell__V) * var_iKr_Markov__T_Base / var_Environment__T + 13.688) / var_iKr_Markov__T_Base; // per_millisecond
        const double d_dt_chaste_interface_var_iKr_Markov__Cr1 = var_chaste_interface__iKr_Markov__Cr2 * var_iKr_Markov__beta_xr1 - var_chaste_interface__iKr_Markov__Cr1 * var_iKr_Markov__alpha_xr1; // 1 / millisecond
        const double var_iKr_Markov__beta_xr2 = 1.0 * var_Environment__T * exp((-15.707 + 0.0 * var_chaste_interface__cell__V) * var_iKr_Markov__T_Base / var_Environment__T + 13.193) / var_iKr_Markov__T_Base; // per_millisecond
        const double d_dt_chaste_interface_var_iKr_Markov__Cr2 = var_chaste_interface__iKr_Markov__Cr1 * var_iKr_Markov__alpha_xr1 + var_chaste_interface__iKr_Markov__Cr3 * var_iKr_Markov__beta_xr2 - (var_iKr_Markov__alpha_xr2 + var_iKr_Markov__beta_xr1) * var_chaste_interface__iKr_Markov__Cr2; // 1 / millisecond
        const double var_iKr_Markov__beta_xr3 = 1.0 * var_Environment__T * exp((-15.707 - 0.0399 * var_chaste_interface__cell__V) * var_iKr_Markov__T_Base / var_Environment__T + 7.313) / var_iKr_Markov__T_Base; // per_millisecond
        const double d_dt_chaste_interface_var_iKr_Markov__Cr3 = var_chaste_interface__iKr_Markov__Cr2 * var_iKr_Markov__alpha_xr2 + var_chaste_interface__iKr_Markov__Or4 * var_iKr_Markov__beta_xr3 - (var_iKr_Markov__alpha_xr3 + var_iKr_Markov__beta_xr2) * var_chaste_interface__iKr_Markov__Cr3; // 1 / millisecond
        const double var_iKr_Markov__beta_xr4 = 1.0 * var_Environment__T * exp((-33.243 - 0.0312 * var_chaste_interface__cell__V) * var_iKr_Markov__T_Base / var_Environment__T + 30.061) / var_iKr_Markov__T_Base; // per_millisecond
        const double d_dt_chaste_interface_var_iKr_Markov__Ir5 = var_chaste_interface__iKr_Markov__Or4 * var_iKr_Markov__alpha_xr4 - var_chaste_interface__iKr_Markov__Ir5 * var_iKr_Markov__beta_xr4; // 1 / millisecond
        const double d_dt_chaste_interface_var_iKr_Markov_Sotalol_block__BCr1 = var_iKr_Markov__beta_xr1 * var_chaste_interface__iKr_Markov_Sotalol_block__BCr2 - var_iKr_Markov__alpha_xr1 * var_chaste_interface__iKr_Markov_Sotalol_block__BCr1; // 1 / millisecond
        const double d_dt_chaste_interface_var_iKr_Markov_Sotalol_block__BCr2 = var_iKr_Markov__alpha_xr1 * var_chaste_interface__iKr_Markov_Sotalol_block__BCr1 + var_iKr_Markov__beta_xr2 * var_chaste_interface__iKr_Markov_Sotalol_block__BCr3 - (var_iKr_Markov__alpha_xr2 + var_iKr_Markov__beta_xr1) * var_chaste_interface__iKr_Markov_Sotalol_block__BCr2; // 1 / millisecond
        const double d_dt_chaste_interface_var_iKr_Markov_Sotalol_block__BCr3 = var_iKr_Markov__alpha_xr2 * var_chaste_interface__iKr_Markov_Sotalol_block__BCr2 + var_iKr_Markov__beta_xr3 * var_chaste_interface__iKr_Markov_Sotalol_block__BOr4 - (var_iKr_Markov__alpha_xr3 + var_iKr_Markov__beta_xr2) * var_chaste_interface__iKr_Markov_Sotalol_block__BCr3; // 1 / millisecond
        const double d_dt_chaste_interface_var_iKr_Markov_Sotalol_block__BIr5 = var_iKr_Markov__alpha_xr4 * var_chaste_interface__iKr_Markov_Sotalol_block__BOr4 - var_iKr_Markov__beta_xr4 * var_chaste_interface__iKr_Markov_Sotalol_block__BIr5; // 1 / millisecond
        const double var_iKr_Markov_Sotalol_block__Sotalol_mM = 0.0; // millimolar
        const double var_iKr_Markov_Sotalol_block__kBinding = 0.005; // per_millimolar_per_millisecond
        const double var_iKr_Markov_Sotalol_block__OtoB = var_chaste_interface__iKr_Markov__Or4 * var_iKr_Markov_Sotalol_block__Sotalol_mM * var_iKr_Markov_Sotalol_block__kBinding; // per_millisecond
        const double var_iKr_Markov_Sotalol_block__kDiss = 0.00125; // per_millisecond
        const double var_iKr_Markov_Sotalol_block__BtoO = var_chaste_interface__iKr_Markov_Sotalol_block__BOr4 * var_iKr_Markov_Sotalol_block__kDiss; // per_millisecond
        const double d_dt_chaste_interface_var_iKr_Markov__Or4 = -var_iKr_Markov_Sotalol_block__OtoB + var_chaste_interface__iKr_Markov__Cr3 * var_iKr_Markov__alpha_xr3 + var_chaste_interface__iKr_Markov__Ir5 * var_iKr_Markov__beta_xr4 - (var_iKr_Markov__alpha_xr4 + var_iKr_Markov__beta_xr3) * var_chaste_interface__iKr_Markov__Or4 + var_iKr_Markov_Sotalol_block__BtoO; // 1 / millisecond
        const double d_dt_chaste_interface_var_iKr_Markov_Sotalol_block__BOr4 = -var_iKr_Markov_Sotalol_block__BtoO + var_iKr_Markov__alpha_xr3 * var_chaste_interface__iKr_Markov_Sotalol_block__BCr3 + var_iKr_Markov__beta_xr4 * var_chaste_interface__iKr_Markov_Sotalol_block__BIr5 - (var_iKr_Markov__alpha_xr4 + var_iKr_Markov__beta_xr3) * var_chaste_interface__iKr_Markov_Sotalol_block__BOr4 + var_iKr_Markov_Sotalol_block__OtoB; // 1 / millisecond
        const double var_iKs_Xs_gate__alpha_xs = 1400.0 / sqrt(1.0 + exp((-var_chaste_interface__cell__V + 5.0) / 6.0)); // dimensionless
        const double var_iKs_Xs_gate__beta_xs = 1.0 / (1.0 + exp((-35.0 + var_chaste_interface__cell__V) / 15.0)); // dimensionless
        const double var_iKs_Xs_gate__tau_xs = 1.0 * var_iKs_Xs_gate__alpha_xs * var_iKs_Xs_gate__beta_xs + 80.0; // millisecond
        const double var_iKs_Xs_gate__xs_inf = 1.0 / (1.0 + exp((-5.0 - var_chaste_interface__cell__V) / 14.0)); // dimensionless
        const double d_dt_chaste_interface_var_iKs_Xs_gate__Xs = (-var_chaste_interface__iKs_Xs_gate__Xs + var_iKs_Xs_gate__xs_inf) / var_iKs_Xs_gate__tau_xs; // 1 / millisecond
        const double var_iNa_h_gate__alpha_h = ((var_chaste_interface__cell__V < -40.0 + var_INa__shift_INa_inact) ? (0.057 * exp((-80.0 - var_chaste_interface__cell__V + var_INa__shift_INa_inact) / 6.8)) : (0.0)); // per_millisecond
        const double var_iNa_h_gate__beta_h = ((var_chaste_interface__cell__V < -40.0 + var_INa__shift_INa_inact) ? (2.7 * exp((-var_INa__shift_INa_inact + var_chaste_interface__cell__V) * 0.079) + 310000.0 * exp((-var_INa__shift_INa_inact + var_chaste_interface__cell__V) * 0.3485)) : (0.77 / ((1.0 + exp(-(-var_INa__shift_INa_inact + 10.66 + var_chaste_interface__cell__V) / 11.1)) * 0.13))); // per_millisecond
        const double var_iNa_h_gate__h_inf = pow((1.0 + exp((-var_INa__shift_INa_inact + 71.55 + var_chaste_interface__cell__V) / 7.43)), (-2.0)) * 1.0; // dimensionless
        const double var_iNa_h_gate__tau_h = 1.0 / (var_iNa_h_gate__alpha_h + var_iNa_h_gate__beta_h); // millisecond
        const double d_dt_chaste_interface_var_iNa_h_gate__h = (-var_chaste_interface__iNa_h_gate__h + var_iNa_h_gate__h_inf) / var_iNa_h_gate__tau_h; // 1 / millisecond
        const double var_iNa_j_gate__alpha_j = ((var_chaste_interface__cell__V < -40.0 + var_INa__shift_INa_inact) ? ((-25428.0 * exp((-var_INa__shift_INa_inact + var_chaste_interface__cell__V) * 0.2444) - 6.948e-06 * exp(-(-var_INa__shift_INa_inact + var_chaste_interface__cell__V) * 0.04391)) * (37.78 + var_chaste_interface__cell__V) / ((1.0 + exp((-var_INa__shift_INa_inact + 79.23 + var_chaste_interface__cell__V) * 0.311)) * 1.0)) : (0.0)); // per_millisecond
        const double var_iNa_j_gate__beta_j = ((var_chaste_interface__cell__V < -40.0 + var_INa__shift_INa_inact) ? (0.02424 * exp(-(-var_INa__shift_INa_inact + var_chaste_interface__cell__V) * 0.01052) / (1.0 + exp(-(-var_INa__shift_INa_inact + 40.14 + var_chaste_interface__cell__V) * 0.1378))) : (0.6 * exp((-var_INa__shift_INa_inact + var_chaste_interface__cell__V) * 0.057) / (1.0 + exp(-(-var_INa__shift_INa_inact + 32.0 + var_chaste_interface__cell__V) * 0.1)))); // per_millisecond
        const double var_iNa_j_gate__j_inf = pow((1.0 + exp((-var_INa__shift_INa_inact + 71.55 + var_chaste_interface__cell__V) / 7.43)), (-2.0)) * 1.0; // dimensionless
        const double var_iNa_j_gate__tau_j = 1.0 / (var_iNa_j_gate__alpha_j + var_iNa_j_gate__beta_j); // millisecond
        const double d_dt_chaste_interface_var_iNa_j_gate__j = (-var_chaste_interface__iNa_j_gate__j + var_iNa_j_gate__j_inf) / var_iNa_j_gate__tau_j; // 1 / millisecond
        const double var_iNa_m_gate__alpha_m = 1.0 / (1.0 + exp((-60.0 - var_chaste_interface__cell__V) / 5.0)); // dimensionless
        const double var_iNa_m_gate__beta_m = 0.1 / (1.0 + exp((35.0 + var_chaste_interface__cell__V) / 5.0)) + 0.1 / (1.0 + exp((-50.0 + var_chaste_interface__cell__V) / 200.0)); // dimensionless
        const double var_iNa_m_gate__m_inf = pow((1.0 + exp((-56.86 - var_chaste_interface__cell__V) / 9.03)), (-2.0)) * 1.0; // dimensionless
        const double var_iNa_m_gate__tau_m = 1.0 * var_iNa_m_gate__alpha_m * var_iNa_m_gate__beta_m; // millisecond
        const double d_dt_chaste_interface_var_iNa_m_gate__m = (-var_chaste_interface__iNa_m_gate__m + var_iNa_m_gate__m_inf) / var_iNa_m_gate__tau_m; // 1 / millisecond
        const double var_ito_r_gate__r_inf = 1.0 / (1.0 + exp((-var_chaste_interface__cell__V + 20.0) / 6.0)); // dimensionless
        const double var_ito_r_gate__tau_r = 9.5 * exp(-pow((40.0 + var_chaste_interface__cell__V), 2.0) / 1800.0) + 0.8; // millisecond
        const double d_dt_chaste_interface_var_ito_r_gate__r = (-var_chaste_interface__ito_r_gate__r + var_ito_r_gate__r_inf) / var_ito_r_gate__tau_r; // 1 / millisecond
        const double var_ito_s_gate__s_inf = 1.0 / (1.0 + exp((20.0 + var_chaste_interface__cell__V) / 5.0)); // dimensionless
        const double var_ito_s_gate__tau_s = 5.0 / (1.0 + exp((-20.0 + var_chaste_interface__cell__V) / 5.0)) + 85.0 * exp(-pow((45.0 + var_chaste_interface__cell__V), 2.0) / 320.0) + 3.0; // millisecond
        const double d_dt_chaste_interface_var_ito_s_gate__s = (-var_chaste_interface__ito_s_gate__s + var_ito_s_gate__s_inf) / var_ito_s_gate__tau_s; // 1 / millisecond
        const double var_reversal_potentials__E_Ca = 0.5 * var_Environment__R * var_Environment__T * log(var_Environment__Ca_o / var_chaste_interface__Ca__Ca_i) / var_Environment__F; // millivolt
        const double var_ICab__i_b_Ca = (-var_reversal_potentials__E_Ca + var_chaste_interface__cell__V) * var_ICab__g_bca; // nanoA_per_nanoF
        const double d_dt_chaste_interface_var_Ca__Ca_i = ((-var_Ileak_Iup_Ixfer__i_up + var_Ileak_Iup_Ixfer__i_leak) * var_Ca__V_sr / var_cell__Vol_c - (-2.0 * var_INaCa__i_NaCa + var_ICab__i_b_Ca + var_IpCa__i_p_Ca) * var_cell__Cm / (2.0 * var_Environment__F * var_cell__Vol_c) + var_Ileak_Iup_Ixfer__i_xfer) * var_Ca_buffer__Ca_i_bufc; // millimolar / millisecond
        const double var_reversal_potentials__E_K = var_Environment__R * var_Environment__T * log(var_Environment__K_o / var_chaste_interface__K__K_i) / var_Environment__F; // millivolt
        const double var_IKr__i_Kr = sqrt(var_Environment__K_o / 5.4) * (-var_reversal_potentials__E_K + var_chaste_interface__cell__V) * (var_Environment__T / 35.0 - 55.0 / 7.0) * var_IKr__g_Kr_0 * var_chaste_interface__iKr_Markov__Or4; // nanoA_per_nanoF
        const double var_IpK__i_p_K = (-var_reversal_potentials__E_K + var_chaste_interface__cell__V) * var_IpK__g_pK / (1.0 + exp((-var_chaste_interface__cell__V + 25.0) / 5.98)); // nanoA_per_nanoF
        const double var_Ito__i_to = (-var_reversal_potentials__E_K + var_chaste_interface__cell__V) * var_Ito__g_to * var_chaste_interface__ito_r_gate__r * var_chaste_interface__ito_s_gate__s; // nanoA_per_nanoF
        const double var_iK1_rectification__KbMg = 0.45 * exp((-var_chaste_interface__cell__V + var_iK1_rectification__fac * var_reversal_potentials__E_K) / 20.0); // millimolar
        const double var_iK1_rectification__Kd1SPM = 0.0007 * exp((-var_chaste_interface__cell__V + var_iK1_rectification__fac * var_reversal_potentials__E_K - 8.0 * var_iK1_rectification__Mg_Buf) / 4.8); // millimolar
        const double var_iK1_rectification__Kd2SPM = 0.04 * exp((-var_chaste_interface__cell__V + var_iK1_rectification__fac * var_reversal_potentials__E_K) / 9.1); // millimolar
        const double var_iK1_rectification__KiMg = 2.8 * exp((-var_chaste_interface__cell__V + var_iK1_rectification__fac * var_reversal_potentials__E_K) / 180.0); // millimolar
        const double var_iK1_rectification__rec2 = 1.0 / (var_iK1_rectification__SPM / var_iK1_rectification__Kd2SPM + 1.0); // dimensionless
        const double var_iK1_rectification__temp = var_iK1_rectification__Mg_Buf / var_iK1_rectification__KbMg + 1.0; // dimensionless
        const double var_iK1_rectification__rec1 = pow(var_iK1_rectification__temp, 2) / (pow(var_iK1_rectification__temp, 3) + var_iK1_rectification__SPM / var_iK1_rectification__Kd1SPM + var_iK1_rectification__Mg_Buf / var_iK1_rectification__KiMg); // dimensionless
        const double var_iK1_rectification__xK1_inf = (-var_iK1_rectification__phi + 1.0) * var_iK1_rectification__rec2 + var_iK1_rectification__phi * var_iK1_rectification__rec1; // dimensionless
        const double var_IK1__i_K1 = sqrt(var_Environment__K_o / 5.4) * (-var_reversal_potentials__E_K + var_chaste_interface__cell__V) * (var_Environment__T / 35.0 - 55.0 / 7.0) * var_IK1__g_K1_0 * var_iK1_rectification__xK1_inf; // nanoA_per_nanoF
        const double var_reversal_potentials__E_Na = var_Environment__R * var_Environment__T * log(var_Environment__Na_o / var_chaste_interface__Na__Na_i) / var_Environment__F; // millivolt
        const double var_INa__i_Na = pow(var_chaste_interface__iNa_m_gate__m, 3.0) * (-var_reversal_potentials__E_Na + var_chaste_interface__cell__V) * var_INa__g_Na * var_chaste_interface__iNa_h_gate__h * var_chaste_interface__iNa_j_gate__j; // nanoA_per_nanoF
        const double var_INab__i_b_Na = (-var_reversal_potentials__E_Na + var_chaste_interface__cell__V) * var_INab__g_bna; // nanoA_per_nanoF
        const double d_dt_chaste_interface_var_Na__Na_i = (-var_INa__i_Na - var_INab__i_b_Na - 3.0 * var_INaK__i_NaK - 3.0 * var_INaCa__i_NaCa) * var_cell__Cm / (var_Environment__F * var_cell__Vol_c); // millimolar / millisecond
        const double var_reversal_potentials__P_kna = 0.03; // dimensionless
        const double var_reversal_potentials__E_Ks = var_Environment__R * var_Environment__T * log((var_Environment__Na_o * var_reversal_potentials__P_kna + var_Environment__K_o) / (var_chaste_interface__Na__Na_i * var_reversal_potentials__P_kna + var_chaste_interface__K__K_i)) / var_Environment__F; // millivolt
        const double var_IKs__i_Ks = pow(var_chaste_interface__iKs_Xs_gate__Xs, 2.0) * (-var_reversal_potentials__E_Ks + var_chaste_interface__cell__V) * var_IKs__g_Ks; // nanoA_per_nanoF
        const double d_dt_chaste_interface_var_K__K_i = (-var_IK1__i_K1 - var_IKr__i_Kr - var_IKs__i_Ks - var_IpK__i_p_K - var_Ito__i_to - var_cell__i_Stim + 2.0 * var_INaK__i_NaK) * var_cell__Cm / (var_Environment__F * var_cell__Vol_c); // millimolar / millisecond
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_cell__V = 0.0;
        }
        else
        {
            const double var_cell__i_tot = var_ICaL__i_CaL + var_ICab__i_b_Ca + var_IK1__i_K1 + var_IKr__i_Kr + var_IKs__i_Ks + var_INa__i_Na + var_INaCa__i_NaCa + var_INaK__i_NaK + var_INab__i_b_Na + var_IpCa__i_p_Ca + var_IpK__i_p_K + var_Ito__i_to + var_cell__i_Stim; // nanoA_per_nanoF
            d_dt_chaste_interface_var_cell__V = -var_cell__i_tot; // millivolt / millisecond
        }
        
        rDY[0] = d_dt_chaste_interface_var_cell__V;
        rDY[1] = d_dt_chaste_interface_var_iKr_Markov__Cr1;
        rDY[2] = d_dt_chaste_interface_var_iKr_Markov__Cr2;
        rDY[3] = d_dt_chaste_interface_var_iKr_Markov__Cr3;
        rDY[4] = d_dt_chaste_interface_var_iKr_Markov__Or4;
        rDY[5] = d_dt_chaste_interface_var_iKr_Markov__Ir5;
        rDY[6] = d_dt_chaste_interface_var_iKr_Markov_Sotalol_block__BCr1;
        rDY[7] = d_dt_chaste_interface_var_iKr_Markov_Sotalol_block__BCr2;
        rDY[8] = d_dt_chaste_interface_var_iKr_Markov_Sotalol_block__BCr3;
        rDY[9] = d_dt_chaste_interface_var_iKr_Markov_Sotalol_block__BOr4;
        rDY[10] = d_dt_chaste_interface_var_iKr_Markov_Sotalol_block__BIr5;
        rDY[11] = d_dt_chaste_interface_var_iKs_Xs_gate__Xs;
        rDY[12] = d_dt_chaste_interface_var_ito_s_gate__s;
        rDY[13] = d_dt_chaste_interface_var_ito_r_gate__r;
        rDY[14] = d_dt_chaste_interface_var_iNa_m_gate__m;
        rDY[15] = d_dt_chaste_interface_var_iNa_h_gate__h;
        rDY[16] = d_dt_chaste_interface_var_iNa_j_gate__j;
        rDY[17] = d_dt_chaste_interface_var_iCaL_d_gate__d;
        rDY[18] = d_dt_chaste_interface_var_iCaL_f_gate__f;
        rDY[19] = d_dt_chaste_interface_var_iCaL_f2_gate__f2;
        rDY[20] = d_dt_chaste_interface_var_iCaL_fCass_gate__fCass;
        rDY[21] = d_dt_chaste_interface_var_Ca__Ca_i;
        rDY[22] = d_dt_chaste_interface_var_Ca__Ca_SR;
        rDY[23] = d_dt_chaste_interface_var_Ca__Ca_ss;
        rDY[24] = d_dt_chaste_interface_var_Irel__R_prime;
        rDY[25] = d_dt_chaste_interface_var_Na__Na_i;
        rDY[26] = d_dt_chaste_interface_var_K__K_i;
    }

template<>
void OdeSystemInformation<Cellfink_noble_giles_model_2008FromCellML>::Initialise(void)
{
    this->mSystemName = "fink_noble_giles_model_2008";
    this->mFreeVariableName = "var_Environment__time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-86.45);
    
    // rY[1]:
    this->mVariableNames.push_back("var_iKr_Markov__Cr1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9786);
    
    // rY[2]:
    this->mVariableNames.push_back("var_iKr_Markov__Cr2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0031);
    
    // rY[3]:
    this->mVariableNames.push_back("var_iKr_Markov__Cr3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0029);
    
    // rY[4]:
    this->mVariableNames.push_back("var_iKr_Markov__Or4");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.014);
    
    // rY[5]:
    this->mVariableNames.push_back("var_iKr_Markov__Ir5");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0014);
    
    // rY[6]:
    this->mVariableNames.push_back("var_iKr_Markov_Sotalol_block__BCr1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);
    
    // rY[7]:
    this->mVariableNames.push_back("var_iKr_Markov_Sotalol_block__BCr2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);
    
    // rY[8]:
    this->mVariableNames.push_back("var_iKr_Markov_Sotalol_block__BCr3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);
    
    // rY[9]:
    this->mVariableNames.push_back("var_iKr_Markov_Sotalol_block__BOr4");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);
    
    // rY[10]:
    this->mVariableNames.push_back("var_iKr_Markov_Sotalol_block__BIr5");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);
    
    // rY[11]:
    this->mVariableNames.push_back("var_iKs_Xs_gate__Xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00303);
    
    // rY[12]:
    this->mVariableNames.push_back("var_ito_s_gate__s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);
    
    // rY[13]:
    this->mVariableNames.push_back("var_ito_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.11e-08);
    
    // rY[14]:
    this->mVariableNames.push_back("var_iNa_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00132);
    
    // rY[15]:
    this->mVariableNames.push_back("var_iNa_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7768);
    
    // rY[16]:
    this->mVariableNames.push_back("var_iNa_j_gate__j");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7766);
    
    // rY[17]:
    this->mVariableNames.push_back("var_iCaL_d_gate__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(5.06e-06);
    
    // rY[18]:
    this->mVariableNames.push_back("var_iCaL_f_gate__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9999);
    
    // rY[19]:
    this->mVariableNames.push_back("var_iCaL_f2_gate__f2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9995);
    
    // rY[20]:
    this->mVariableNames.push_back("var_iCaL_fCass_gate__fCass");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);
    
    // rY[21]:
    this->mVariableNames.push_back("var_Ca__Ca_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0001092);
    
    // rY[22]:
    this->mVariableNames.push_back("var_Ca__Ca_SR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(2.7656);
    
    // rY[23]:
    this->mVariableNames.push_back("var_Ca__Ca_ss");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0001893);
    
    // rY[24]:
    this->mVariableNames.push_back("var_Irel__R_prime");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9864);
    
    // rY[25]:
    this->mVariableNames.push_back("var_Na__Na_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.940167);
    
    // rY[26]:
    this->mVariableNames.push_back("var_K__K_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(141.0167);
    
    
    this->mAttributes["SuggestedForwardEulerTimestep"] = 0.001;
    this->mInitialised = true;    
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellfink_noble_giles_model_2008FromCellML)
