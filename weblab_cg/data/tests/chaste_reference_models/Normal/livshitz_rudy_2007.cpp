//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: LivshitzRudy2007
//! 
//! Processed by weblab_cg: https://github.com/ModellingWebLab/weblab-cg
//!     (translator: weblab_cg, model type: normal, options: )
//! on 2019-12-17 10:22:30
//! 
//! <autogenerated>

#include "livshitz_rudy_2007.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    boost::shared_ptr<RegularStimulus> Celllivshitz_rudy_2007FromCellML::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__cell__stim_amplitude = -15.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_uF
        const double var_chaste_interface__cell__stim_duration = 3.0; // millisecond
        const double var_chaste_interface__cell__stim_period = 400.0; // millisecond
        const double var_chaste_interface__cell__stim_offset = 100.0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__cell__stim_amplitude),
                var_chaste_interface__cell__stim_duration,
                var_chaste_interface__cell__stim_period,
                var_chaste_interface__cell__stim_offset
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    Celllivshitz_rudy_2007FromCellML::Celllivshitz_rudy_2007FromCellML(boost::shared_ptr<AbstractIvpOdeSolver> pSolver, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCardiacCell(
                pSolver,
                18,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Celllivshitz_rudy_2007FromCellML>::Instance();
        Init();
        
        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        
    }
    
    Celllivshitz_rudy_2007FromCellML::~Celllivshitz_rudy_2007FromCellML()
    {
    }

    double Celllivshitz_rudy_2007FromCellML::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: mV; Initial value: -89.4356034692784
        double var_chaste_interface__INa__H = rY[1];
        // Units: dimensionless; Initial value: 0.994401369032678
        double var_chaste_interface__INa__m = rY[2];
        // Units: dimensionless; Initial value: 0.000734780346592185
        double var_chaste_interface__INa__J = rY[3];
        // Units: dimensionless; Initial value: 0.996100688673679
        double var_chaste_interface__ICaL__d = rY[4];
        // Units: dimensionless; Initial value: 3.2514786721066e-27
        double var_chaste_interface__ICaL__f = rY[5];
        // Units: dimensionless; Initial value: 0.997404948824816
        double var_chaste_interface__IKr__xr = rY[6];
        // Units: dimensionless; Initial value: 0.000162194715543637
        double var_chaste_interface__IKs__xs1 = rY[7];
        // Units: dimensionless; Initial value: 0.0285147332973946
        double var_chaste_interface__IKs__xs2 = rY[8];
        // Units: dimensionless; Initial value: 0.0764114040188678
        double var_chaste_interface__ICaT__b = rY[9];
        // Units: dimensionless; Initial value: 0.000927461915392873
        double var_chaste_interface__ICaT__g = rY[10];
        // Units: dimensionless; Initial value: 0.952834331760863
        double var_chaste_interface__Na__Na_i = rY[12];
        // Units: mM; Initial value: 16.612739313555
        double var_chaste_interface__K__K_i = rY[13];
        // Units: mM; Initial value: 139.730914103161
        double var_chaste_interface__Ca__Ca_T = rY[14];
        // Units: mM; Initial value: 0.0257059808595638
        
        const double var_Ca__cmdnbar = 0.05; // mM
        const double var_Ca__kmcmdn = 0.00238; // mM
        const double var_Ca__kmtrpn = 0.0005; // mM
        const double var_Ca__dmyo = -var_chaste_interface__Ca__Ca_T * var_Ca__kmcmdn * var_Ca__kmtrpn; // mM3
        const double var_Ca__trpnbar = 0.07; // mM
        const double var_Ca__bmyo = -var_chaste_interface__Ca__Ca_T + var_Ca__cmdnbar + var_Ca__kmcmdn + var_Ca__kmtrpn + var_Ca__trpnbar; // mM
        const double var_Ca__cmyo = var_Ca__cmdnbar * var_Ca__kmtrpn + var_Ca__kmcmdn * var_Ca__kmtrpn + var_Ca__kmcmdn * var_Ca__trpnbar - (var_Ca__kmcmdn + var_Ca__kmtrpn) * var_chaste_interface__Ca__Ca_T; // mM2
        const double var_Ca__Ca_i = -var_Ca__bmyo / 3.0 + sqrt(pow(var_Ca__bmyo, 2) - 3.0 * var_Ca__cmyo) * 2.0 * cos(acos(pow((pow(var_Ca__bmyo, 2) - 3.0 * var_Ca__cmyo), (-1.5)) * (-pow(var_Ca__bmyo, 3) * 2.0 - 27.0 * var_Ca__dmyo + 9.0 * var_Ca__bmyo * var_Ca__cmyo) / 2.0) / 3.0) / 3.0; // mM
        const double var_Environment__Ca_o = 1.8; // mM
        const double var_Environment__F = 96485.0; // C_per_mole
        const double var_Environment__K_o = 4.5; // mM
        const double var_Environment__Na_o = 140.0; // mM
        const double var_Environment__R = 8314.0; // mJ_per_mole_K
        const double var_Environment__Temp = 310.0; // kelvin
        const double var_Environment__FonRT = var_Environment__F / (var_Environment__R * var_Environment__Temp); // per_mV
        const double var_ICaL__gacai = 1.0; // dimensionless
        const double var_ICaL__gacao = 0.341; // dimensionless
        const double var_ICaL__gaki = 0.75; // dimensionless
        const double var_ICaL__gako = 0.75; // dimensionless
        const double var_ICaL__ganai = 0.75; // dimensionless
        const double var_ICaL__ganao = 0.75; // dimensionless
        const double var_ICaL__kmca = 0.0006; // mM
        const double var_ICaL__fca = 1.0 / (var_Ca__Ca_i / var_ICaL__kmca + 1.0); // dimensionless
        const double var_ICaL__pca = 0.00054; // L_per_F_ms
        const double var_ICaL__pk = 1.93e-07; // L_per_F_ms
        const double var_ICaL__pna = 6.75e-07; // L_per_F_ms
        const double var_ICaT__gcat = 0.05; // mS_per_uF
        const double var_ICab__gcab = 0.003016; // mS_per_uF
        const double var_IK1__GK1max = 0.75; // mS_per_uF
        const double var_IK1__GK1_ = sqrt(var_Environment__K_o / 5.4) * var_IK1__GK1max; // mS_per_uF
        const double var_IKp__GKpmax = 0.00552; // mS_per_uF
        const double var_IKr__gkrmax = 0.02614; // mS_per_uF
        const double var_IKs__GKsmax = 0.433; // mS_per_uF
        const double var_IKs__gks = (0.6 / (pow((3.8e-05 / var_Ca__Ca_i), 1.4) + 1.0) + 1.0) * var_IKs__GKsmax; // mS_per_uF
        const double var_INa__GNa = 16.0; // mS_per_uF
        const double var_INaCa__c1 = 0.00025; // uA_per_uF
        const double var_INaCa__c2 = 0.0001; // dimensionless
        const double var_INaCa__gammas = 0.15; // dimensionless
        const double var_INaK__ibarnak = 2.25; // uA_per_uF
        const double var_INaK__kmko = 1.5; // mM
        const double var_INaK__kmnai = 10.0; // mM
        const double var_INaK__sigma = (-1.0 + exp(var_Environment__Na_o / 67.3)) / 7.0; // dimensionless
        const double var_INab__GNab = 0.004; // mS_per_uF
        const double var_IpCa__ibarpca = 1.15; // uA_per_uF
        const double var_IpCa__kmpca = 0.0005; // mM
        const double var_IpCa__ipca = var_Ca__Ca_i * var_IpCa__ibarpca / (var_Ca__Ca_i + var_IpCa__kmpca); // uA_per_uF
        const double var_ICaL__ibarca = (-var_Environment__Ca_o * var_ICaL__gacao + var_Ca__Ca_i * var_ICaL__gacai * exp(2.0 * var_Environment__FonRT * var_chaste_interface__cell__V)) * 4.0 * var_Environment__F * var_Environment__FonRT * var_ICaL__pca * var_chaste_interface__cell__V / (-1.0 + exp(2.0 * var_Environment__FonRT * var_chaste_interface__cell__V)); // uA_per_uF
        const double var_ICaL__ibark = (-var_Environment__K_o * var_ICaL__gako + var_ICaL__gaki * var_chaste_interface__K__K_i * exp(var_Environment__FonRT * var_chaste_interface__cell__V)) * var_Environment__F * var_Environment__FonRT * var_ICaL__pk * var_chaste_interface__cell__V / (-1.0 + exp(var_Environment__FonRT * var_chaste_interface__cell__V)); // uA_per_uF
        const double var_ICaL__ibarna = (-var_Environment__Na_o * var_ICaL__ganao + var_ICaL__ganai * var_chaste_interface__Na__Na_i * exp(var_Environment__FonRT * var_chaste_interface__cell__V)) * var_Environment__F * var_Environment__FonRT * var_ICaL__pna * var_chaste_interface__cell__V / (-1.0 + exp(var_Environment__FonRT * var_chaste_interface__cell__V)); // uA_per_uF
        const double var_ICaL__ilca = var_chaste_interface__ICaL__d * var_chaste_interface__ICaL__f * var_ICaL__fca * var_ICaL__ibarca; // uA_per_uF
        const double var_ICaL__ilcak = var_chaste_interface__ICaL__d * var_chaste_interface__ICaL__f * var_ICaL__fca * var_ICaL__ibark; // uA_per_uF
        const double var_ICaL__ilcana = var_chaste_interface__ICaL__d * var_chaste_interface__ICaL__f * var_ICaL__fca * var_ICaL__ibarna; // uA_per_uF
        const double var_ICab__icab = (-log(var_Environment__Ca_o / var_Ca__Ca_i) / (2.0 * var_Environment__FonRT) + var_chaste_interface__cell__V) * var_ICab__gcab; // uA_per_uF
        const double var_IKr__r = 1.0 / (1.0 + exp((9.0 + var_chaste_interface__cell__V) / 22.4)); // dimensionless
        const double var_INaCa__inaca = (-pow(var_Environment__Na_o, 3.0) * var_Ca__Ca_i + pow(var_chaste_interface__Na__Na_i, 3.0) * var_Environment__Ca_o * exp(var_Environment__FonRT * var_chaste_interface__cell__V)) * var_INaCa__c1 * exp((-1.0 + var_INaCa__gammas) * var_Environment__FonRT * var_chaste_interface__cell__V) / ((pow(var_Environment__Na_o, 3.0) * var_Ca__Ca_i + pow(var_chaste_interface__Na__Na_i, 3.0) * var_Environment__Ca_o * exp(var_Environment__FonRT * var_chaste_interface__cell__V)) * var_INaCa__c2 * exp((-1.0 + var_INaCa__gammas) * var_Environment__FonRT * var_chaste_interface__cell__V) + 1.0); // uA_per_uF
        const double var_INaK__fnak = 1.0 / (0.1245 * exp(-0.1 * var_Environment__FonRT * var_chaste_interface__cell__V) + 0.0365 * var_INaK__sigma * exp(-var_Environment__FonRT * var_chaste_interface__cell__V) + 1.0); // dimensionless
        const double var_INaK__inak = var_INaK__fnak * var_INaK__ibarnak / ((pow((var_INaK__kmnai / var_chaste_interface__Na__Na_i), 2.0) + 1.0) * (var_INaK__kmko / var_Environment__K_o + 1.0)); // uA_per_uF
        const double var_cell__i_Stim = 0.0; // uA_per_uF
        const double var_reversal_potentials__ECa = log(var_Environment__Ca_o / var_Ca__Ca_i) / (2.0 * var_Environment__FonRT); // mV
        const double var_ICaT__icat = pow(var_chaste_interface__ICaT__b, 2) * (-var_reversal_potentials__ECa + var_chaste_interface__cell__V) * var_chaste_interface__ICaT__g * var_ICaT__gcat; // uA_per_uF
        const double var_cell__caiont = -2.0 * var_INaCa__inaca + var_ICaL__ilca + var_ICaT__icat + var_ICab__icab + var_IpCa__ipca; // uA_per_uF
        const double var_reversal_potentials__EK = log(var_Environment__K_o / var_chaste_interface__K__K_i) / var_Environment__FonRT; // mV
        const double var_IK1__ak1 = 1.02 / (1.0 + exp((-59.215 - var_reversal_potentials__EK + var_chaste_interface__cell__V) * 0.2385)); // per_ms
        const double var_IK1__bk1 = (0.49124 * exp((-var_reversal_potentials__EK + 5.476 + var_chaste_interface__cell__V) * 0.08032) + 1.0 * exp((-594.31 - var_reversal_potentials__EK + var_chaste_interface__cell__V) * 0.06175)) / (1.0 + exp(-(-var_reversal_potentials__EK + 4.753 + var_chaste_interface__cell__V) * 0.5143)); // per_ms
        const double var_IK1__gK1 = var_IK1__GK1_ * var_IK1__ak1 / (var_IK1__ak1 + var_IK1__bk1); // mS_per_uF
        const double var_IK1__IK1 = (-var_reversal_potentials__EK + var_chaste_interface__cell__V) * var_IK1__gK1; // uA_per_uF
        const double var_IKp__ikp = (-var_reversal_potentials__EK + var_chaste_interface__cell__V) * var_IKp__GKpmax / (1.0 + exp((-var_chaste_interface__cell__V + 7.488) / 5.98)); // uA_per_uF
        const double var_IKr__ikr = sqrt(var_Environment__K_o / 5.4) * (-var_reversal_potentials__EK + var_chaste_interface__cell__V) * var_IKr__gkrmax * var_IKr__r * var_chaste_interface__IKr__xr; // uA_per_uF
        const double var_reversal_potentials__ENa = log(var_Environment__Na_o / var_chaste_interface__Na__Na_i) / var_Environment__FonRT; // mV
        const double var_INa__ina = pow(var_chaste_interface__INa__m, 3) * (-var_reversal_potentials__ENa + var_chaste_interface__cell__V) * var_INa__GNa * var_chaste_interface__INa__H * var_chaste_interface__INa__J; // uA_per_uF
        const double var_INab__inab = (-var_reversal_potentials__ENa + var_chaste_interface__cell__V) * var_INab__GNab; // uA_per_uF
        const double var_cell__naiont = 3.0 * var_INaCa__inaca + 3.0 * var_INaK__inak + var_ICaL__ilcana + var_INa__ina + var_INab__inab; // uA_per_uF
        const double var_reversal_potentials__prnak = 0.01833; // dimensionless
        const double var_reversal_potentials__EKs = log((var_Environment__Na_o * var_reversal_potentials__prnak + var_Environment__K_o) / (var_chaste_interface__Na__Na_i * var_reversal_potentials__prnak + var_chaste_interface__K__K_i)) / var_Environment__FonRT; // mV
        const double var_IKs__iks = (-var_reversal_potentials__EKs + var_chaste_interface__cell__V) * var_IKs__gks * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2; // uA_per_uF
        const double var_cell__kiont = -2.0 * var_INaK__inak + var_ICaL__ilcak + var_IK1__IK1 + var_IKp__ikp + var_IKr__ikr + var_IKs__iks + var_cell__i_Stim; // uA_per_uF
        const double var_chaste_interface__i_ionic = (var_cell__caiont + var_cell__kiont + var_cell__naiont) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Celllivshitz_rudy_2007FromCellML::EvaluateYDerivatives(double var_chaste_interface__Environment__time, const std::vector<double>& rY, std::vector<double>& rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: mV; Initial value: -89.4356034692784
        double var_chaste_interface__INa__H = rY[1];
        // Units: dimensionless; Initial value: 0.994401369032678
        double var_chaste_interface__INa__m = rY[2];
        // Units: dimensionless; Initial value: 0.000734780346592185
        double var_chaste_interface__INa__J = rY[3];
        // Units: dimensionless; Initial value: 0.996100688673679
        double var_chaste_interface__ICaL__d = rY[4];
        // Units: dimensionless; Initial value: 3.2514786721066e-27
        double var_chaste_interface__ICaL__f = rY[5];
        // Units: dimensionless; Initial value: 0.997404948824816
        double var_chaste_interface__IKr__xr = rY[6];
        // Units: dimensionless; Initial value: 0.000162194715543637
        double var_chaste_interface__IKs__xs1 = rY[7];
        // Units: dimensionless; Initial value: 0.0285147332973946
        double var_chaste_interface__IKs__xs2 = rY[8];
        // Units: dimensionless; Initial value: 0.0764114040188678
        double var_chaste_interface__ICaT__b = rY[9];
        // Units: dimensionless; Initial value: 0.000927461915392873
        double var_chaste_interface__ICaT__g = rY[10];
        // Units: dimensionless; Initial value: 0.952834331760863
        double var_chaste_interface__Irel__Rel = rY[11];
        // Units: mM_per_ms; Initial value: 1.06874246141923e-23
        double var_chaste_interface__Na__Na_i = rY[12];
        // Units: mM; Initial value: 16.612739313555
        double var_chaste_interface__K__K_i = rY[13];
        // Units: mM; Initial value: 139.730914103161
        double var_chaste_interface__Ca__Ca_T = rY[14];
        // Units: mM; Initial value: 0.0257059808595638
        double var_chaste_interface__Ca__Ca_JSR_T = rY[15];
        // Units: mM; Initial value: 7.87371650296567
        double var_chaste_interface__Ca__Ca_NSR = rY[16];
        // Units: mM; Initial value: 2.71518235696672
        
        // Units: dimensionless; Initial value: 1e-12
        
        // Mathematics
        double d_dt_chaste_interface_var_cell__V;
        const double var_Ca__cmdnbar = 0.05; // mM
        const double var_Ca__kmcmdn = 0.00238; // mM
        const double var_Ca__kmtrpn = 0.0005; // mM
        const double var_Ca__dmyo = -var_chaste_interface__Ca__Ca_T * var_Ca__kmcmdn * var_Ca__kmtrpn; // mM3
        const double var_Ca__trpnbar = 0.07; // mM
        const double var_Ca__bmyo = -var_chaste_interface__Ca__Ca_T + var_Ca__cmdnbar + var_Ca__kmcmdn + var_Ca__kmtrpn + var_Ca__trpnbar; // mM
        const double var_Ca__cmyo = var_Ca__cmdnbar * var_Ca__kmtrpn + var_Ca__kmcmdn * var_Ca__kmtrpn + var_Ca__kmcmdn * var_Ca__trpnbar - (var_Ca__kmcmdn + var_Ca__kmtrpn) * var_chaste_interface__Ca__Ca_T; // mM2
        const double var_Ca__Ca_i = -var_Ca__bmyo / 3.0 + sqrt(pow(var_Ca__bmyo, 2) - 3.0 * var_Ca__cmyo) * 2.0 * cos(acos(pow((pow(var_Ca__bmyo, 2) - 3.0 * var_Ca__cmyo), (-1.5)) * (-pow(var_Ca__bmyo, 3) * 2.0 - 27.0 * var_Ca__dmyo + 9.0 * var_Ca__bmyo * var_Ca__cmyo) / 2.0) / 3.0) / 3.0; // mM
        const double d_dt_chaste_interface_var_Ca__Over = 0.0; // 1 / millisecond
        const double var_Environment__Ca_o = 1.8; // mM
        const double var_Environment__F = 96485.0; // C_per_mole
        const double var_Environment__K_o = 4.5; // mM
        const double var_Environment__Na_o = 140.0; // mM
        const double var_Environment__R = 8314.0; // mJ_per_mole_K
        const double var_Environment__Temp = 310.0; // kelvin
        const double var_Environment__FonRT = var_Environment__F / (var_Environment__R * var_Environment__Temp); // per_mV
        const double var_ICaL__gacai = 1.0; // dimensionless
        const double var_ICaL__gacao = 0.341; // dimensionless
        const double var_ICaL__gaki = 0.75; // dimensionless
        const double var_ICaL__gako = 0.75; // dimensionless
        const double var_ICaL__ganai = 0.75; // dimensionless
        const double var_ICaL__ganao = 0.75; // dimensionless
        const double var_ICaL__kmca = 0.0006; // mM
        const double var_ICaL__fca = 1.0 / (var_Ca__Ca_i / var_ICaL__kmca + 1.0); // dimensionless
        const double var_ICaL__pca = 0.00054; // L_per_F_ms
        const double var_ICaL__pk = 1.93e-07; // L_per_F_ms
        const double var_ICaL__pna = 6.75e-07; // L_per_F_ms
        const double var_ICaT__gcat = 0.05; // mS_per_uF
        const double var_ICab__gcab = 0.003016; // mS_per_uF
        const double var_IK1__GK1max = 0.75; // mS_per_uF
        const double var_IK1__GK1_ = sqrt(var_Environment__K_o / 5.4) * var_IK1__GK1max; // mS_per_uF
        const double var_IKp__GKpmax = 0.00552; // mS_per_uF
        const double var_IKr__gkrmax = 0.02614; // mS_per_uF
        const double var_IKs__GKsmax = 0.433; // mS_per_uF
        const double var_IKs__gks = (0.6 / (pow((3.8e-05 / var_Ca__Ca_i), 1.4) + 1.0) + 1.0) * var_IKs__GKsmax; // mS_per_uF
        const double var_INa__GNa = 16.0; // mS_per_uF
        const double var_INa__perc_reduced_inact_for_IpNa = 0.0; // dimensionless
        const double var_INa__shift_h = 0.0; // mV
        const double var_INaCa__c1 = 0.00025; // uA_per_uF
        const double var_INaCa__c2 = 0.0001; // dimensionless
        const double var_INaCa__gammas = 0.15; // dimensionless
        const double var_INaK__ibarnak = 2.25; // uA_per_uF
        const double var_INaK__kmko = 1.5; // mM
        const double var_INaK__kmnai = 10.0; // mM
        const double var_INaK__sigma = (-1.0 + exp(var_Environment__Na_o / 67.3)) / 7.0; // dimensionless
        const double var_INab__GNab = 0.004; // mS_per_uF
        const double var_IpCa__ibarpca = 1.15; // uA_per_uF
        const double var_IpCa__kmpca = 0.0005; // mM
        const double var_IpCa__ipca = var_Ca__Ca_i * var_IpCa__ibarpca / (var_Ca__Ca_i + var_IpCa__kmpca); // uA_per_uF
        const double var_Irel__K_Relss = 1.0; // mM
        const double var_Irel__csqnbar = 10.0; // mM
        const double var_Irel__kappa = 0.125; // mM_per_mV_ms
        const double var_Irel__kmcsqn = 0.8; // mM
        const double var_Irel__bbb = -var_chaste_interface__Ca__Ca_JSR_T + var_Irel__csqnbar + var_Irel__kmcsqn; // mM
        const double var_Irel__c = var_chaste_interface__Ca__Ca_JSR_T * var_Irel__kmcsqn; // mM2
        const double var_Irel__Ca_JSR_free = sqrt(pow(var_Irel__bbb, 2.0) + 4.0 * var_Irel__c) / 2.0 - var_Irel__bbb / 2.0; // mM
        const double var_Irel__qn = 9.0; // dimensionless
        const double var_Irel__tau = 4.75; // ms
        const double var_Irel__alpha_Rel = var_Irel__kappa * var_Irel__tau; // mM_per_mV
        const double var_Irel__tau_Rel = var_Irel__tau / (0.0123 / var_Irel__Ca_JSR_free + 1.0); // ms
        const double var_Itr__tautr = 120.0; // ms
        const double var_Itr__itr = (-var_Irel__Ca_JSR_free + var_chaste_interface__Ca__Ca_NSR) / var_Itr__tautr; // mM_per_ms
        const double d_dt_chaste_interface_var_Ca__Ca_JSR_T = -var_chaste_interface__Irel__Rel + var_Itr__itr; // mM / millisecond
        const double var_Iup_Ileak__iupbar = 0.00875; // mM_per_ms
        const double var_Iup_Ileak__kmup = 0.00092; // mM
        const double var_Iup_Ileak__iup = var_Ca__Ca_i * var_Iup_Ileak__iupbar / (var_Ca__Ca_i + var_Iup_Ileak__kmup); // mM_per_ms
        const double var_Iup_Ileak__leak_factor = 1.0; // dimensionless
        const double var_Iup_Ileak__nsrbar = 15.0; // mM
        const double var_Iup_Ileak__ileak = var_chaste_interface__Ca__Ca_NSR * var_Iup_Ileak__iupbar * var_Iup_Ileak__leak_factor / var_Iup_Ileak__nsrbar; // mM_per_ms
        const double var_Na__conc_clamp = 1.0; // dimensionless
        const double var_ICaL__dss0 = 1.0 / (1.0 + exp((-10.0 - var_chaste_interface__cell__V) / 6.24)); // dimensionless
        const double var_ICaL__dss1 = 1.0 / (1.0 + exp((-60.0 - var_chaste_interface__cell__V) / 0.024)); // dimensionless
        const double var_ICaL__dss = var_ICaL__dss0 * var_ICaL__dss1; // dimensionless
        const double var_ICaL__fss = 1.0 / (1.0 + exp((32.0 + var_chaste_interface__cell__V) / 8.0)) + 0.6 / (1.0 + exp((-var_chaste_interface__cell__V + 50.0) / 20.0)); // dimensionless
        const double var_ICaL__ibarca = (-var_Environment__Ca_o * var_ICaL__gacao + var_Ca__Ca_i * var_ICaL__gacai * exp(2.0 * var_Environment__FonRT * var_chaste_interface__cell__V)) * 4.0 * var_Environment__F * var_Environment__FonRT * var_ICaL__pca * var_chaste_interface__cell__V / (-1.0 + exp(2.0 * var_Environment__FonRT * var_chaste_interface__cell__V)); // uA_per_uF
        const double var_ICaL__ibark = (-var_Environment__K_o * var_ICaL__gako + var_ICaL__gaki * var_chaste_interface__K__K_i * exp(var_Environment__FonRT * var_chaste_interface__cell__V)) * var_Environment__F * var_Environment__FonRT * var_ICaL__pk * var_chaste_interface__cell__V / (-1.0 + exp(var_Environment__FonRT * var_chaste_interface__cell__V)); // uA_per_uF
        const double var_ICaL__ibarna = (-var_Environment__Na_o * var_ICaL__ganao + var_ICaL__ganai * var_chaste_interface__Na__Na_i * exp(var_Environment__FonRT * var_chaste_interface__cell__V)) * var_Environment__F * var_Environment__FonRT * var_ICaL__pna * var_chaste_interface__cell__V / (-1.0 + exp(var_Environment__FonRT * var_chaste_interface__cell__V)); // uA_per_uF
        const double var_ICaL__ilca = var_chaste_interface__ICaL__d * var_chaste_interface__ICaL__f * var_ICaL__fca * var_ICaL__ibarca; // uA_per_uF
        const double var_ICaL__ilcak = var_chaste_interface__ICaL__d * var_chaste_interface__ICaL__f * var_ICaL__fca * var_ICaL__ibark; // uA_per_uF
        const double var_ICaL__ilcana = var_chaste_interface__ICaL__d * var_chaste_interface__ICaL__f * var_ICaL__fca * var_ICaL__ibarna; // uA_per_uF
        const double var_ICaL__taud = (-exp((-10.0 - var_chaste_interface__cell__V) / 6.24) + 1.0) * 1.0 * var_ICaL__dss0 / ((10.0 + var_chaste_interface__cell__V) * 0.035); // ms
        const double d_dt_chaste_interface_var_ICaL__d = (-var_chaste_interface__ICaL__d + var_ICaL__dss) / var_ICaL__taud; // 1 / millisecond
        const double var_ICaL__tauf = 1.0 / (0.0197 * exp(-pow(((10.0 + var_chaste_interface__cell__V) * 0.0337), 2.0)) + 0.02); // ms
        const double d_dt_chaste_interface_var_ICaL__f = (-var_chaste_interface__ICaL__f + var_ICaL__fss) / var_ICaL__tauf; // 1 / millisecond
        const double var_ICaT__aa = -1.0 / (1.0 + exp(-var_chaste_interface__cell__V / 0.0024)) + 1.0; // dimensionless
        const double var_ICaT__bss = 1.0 / (1.0 + exp((-14.0 - var_chaste_interface__cell__V) / 10.8)); // dimensionless
        const double var_ICaT__gss = 1.0 / (1.0 + exp((60.0 + var_chaste_interface__cell__V) / 5.6)); // dimensionless
        const double var_ICaT__taub = 6.1 / (1.0 + exp((25.0 + var_chaste_interface__cell__V) / 4.5)) + 3.7; // ms
        const double d_dt_chaste_interface_var_ICaT__b = (-var_chaste_interface__ICaT__b + var_ICaT__bss) / var_ICaT__taub; // 1 / millisecond
        const double var_ICaT__taug = (-var_ICaT__aa + 1.0) * 12.0 + (-0.875 * var_chaste_interface__cell__V + 12.0) * 1.0 * var_ICaT__aa; // ms
        const double d_dt_chaste_interface_var_ICaT__g = (-var_chaste_interface__ICaT__g + var_ICaT__gss) / var_ICaT__taug; // 1 / millisecond
        const double var_ICab__icab = (-log(var_Environment__Ca_o / var_Ca__Ca_i) / (2.0 * var_Environment__FonRT) + var_chaste_interface__cell__V) * var_ICab__gcab; // uA_per_uF
        const double var_IKr__r = 1.0 / (1.0 + exp((9.0 + var_chaste_interface__cell__V) / 22.4)); // dimensionless
        const double var_IKr__tauxr = 1.0 / ((38.9 + var_chaste_interface__cell__V) * 0.00061 / (-1.0 + exp((38.9 + var_chaste_interface__cell__V) * 0.145)) + (14.2 + var_chaste_interface__cell__V) * 0.00138 / (-exp(-(14.2 + var_chaste_interface__cell__V) * 0.123) + 1.0)); // ms
        const double var_IKr__xrss = 1.0 / (1.0 + exp((-10.085 - var_chaste_interface__cell__V) / 4.25)); // dimensionless
        const double d_dt_chaste_interface_var_IKr__xr = (-var_chaste_interface__IKr__xr + var_IKr__xrss) / var_IKr__tauxr; // 1 / millisecond
        const double var_IKs__tauxs = 1.0 / ((30.0 + var_chaste_interface__cell__V) * 0.000131 / (-1.0 + exp((30.0 + var_chaste_interface__cell__V) * 0.0687)) + (30.0 + var_chaste_interface__cell__V) * 7.19e-05 / (-exp(-(30.0 + var_chaste_interface__cell__V) * 0.148) + 1.0)); // ms
        const double var_IKs__xss = 1.0 / (1.0 + exp((-var_chaste_interface__cell__V + 1.5) / 16.7)); // dimensionless
        const double d_dt_chaste_interface_var_IKs__xs1 = (-var_chaste_interface__IKs__xs1 + var_IKs__xss) / var_IKs__tauxs; // 1 / millisecond
        const double d_dt_chaste_interface_var_IKs__xs2 = (-var_chaste_interface__IKs__xs2 + var_IKs__xss) / (4.0 * var_IKs__tauxs); // 1 / millisecond
        const double var_INa__a = -1.0 / (1.0 + exp((-40.0 - var_chaste_interface__cell__V) / 0.024)) + 1.0; // per_ms
        const double var_INa__aH = 0.135 * var_INa__a * exp(-(-var_INa__shift_h + 80.0 + var_chaste_interface__cell__V) / 6.8); // per_ms
        const double var_INa__aj = (-127140.0 * exp((-var_INa__shift_h + var_chaste_interface__cell__V) * 0.2444) - 3.474e-05 * exp(-(-var_INa__shift_h + var_chaste_interface__cell__V) * 0.04391)) * (37.78 + var_chaste_interface__cell__V) * 1.0 * var_INa__a / (1.0 + exp((79.23 + var_chaste_interface__cell__V) * 0.311)); // per_ms
        const double var_INa__am = (47.13 + var_chaste_interface__cell__V) * 0.32 * 1.0 / (-exp(-(47.13 + var_chaste_interface__cell__V) * 0.1) + 1.0); // per_ms
        const double var_INa__bH = (3.56 * exp((-var_INa__shift_h + var_chaste_interface__cell__V) * 0.079) + 100000.0 * 3.1 * exp((-var_INa__shift_h + var_chaste_interface__cell__V) * 0.35)) * var_INa__a + (-var_INa__a + 1.0) / ((1.0 + exp(-(10.66 + var_chaste_interface__cell__V) / 11.1)) * 0.13); // per_ms
        const double var_INa__H_inf = var_INa__perc_reduced_inact_for_IpNa / 100.0 + (-var_INa__perc_reduced_inact_for_IpNa / 100.0 + 1.0) * var_INa__aH / (var_INa__aH + var_INa__bH); // dimensionless
        const double var_INa__bj = (-var_INa__a + 1.0) * 0.3 * exp(-(-var_INa__shift_h + var_chaste_interface__cell__V) * 2.535e-07) / (1.0 + exp(-(32.0 + var_chaste_interface__cell__V) * 0.1)) + 0.1212 * var_INa__a * exp(-(-var_INa__shift_h + var_chaste_interface__cell__V) * 0.01052) / (1.0 + exp(-(40.14 + var_chaste_interface__cell__V) * 0.1378)); // per_ms
        const double var_INa__bm = 0.08 * exp(-var_chaste_interface__cell__V / 11.0); // per_ms
        const double d_dt_chaste_interface_var_INa__m = (-var_chaste_interface__INa__m + 1.0) * var_INa__am - var_INa__bm * var_chaste_interface__INa__m; // 1 / millisecond
        const double var_INa__j_inf = var_INa__perc_reduced_inact_for_IpNa / 100.0 + (-var_INa__perc_reduced_inact_for_IpNa / 100.0 + 1.0) * var_INa__aj / (var_INa__aj + var_INa__bj); // dimensionless
        const double var_INa__tau_H = 1.0 / (var_INa__aH + var_INa__bH); // ms
        const double d_dt_chaste_interface_var_INa__H = (-var_chaste_interface__INa__H + var_INa__H_inf) / var_INa__tau_H; // 1 / millisecond
        const double var_INa__tau_j = 1.0 / (var_INa__aj + var_INa__bj); // ms
        const double d_dt_chaste_interface_var_INa__J = (-var_chaste_interface__INa__J + var_INa__j_inf) / var_INa__tau_j; // 1 / millisecond
        const double var_INaCa__inaca = (-pow(var_Environment__Na_o, 3.0) * var_Ca__Ca_i + pow(var_chaste_interface__Na__Na_i, 3.0) * var_Environment__Ca_o * exp(var_Environment__FonRT * var_chaste_interface__cell__V)) * var_INaCa__c1 * exp((-1.0 + var_INaCa__gammas) * var_Environment__FonRT * var_chaste_interface__cell__V) / ((pow(var_Environment__Na_o, 3.0) * var_Ca__Ca_i + pow(var_chaste_interface__Na__Na_i, 3.0) * var_Environment__Ca_o * exp(var_Environment__FonRT * var_chaste_interface__cell__V)) * var_INaCa__c2 * exp((-1.0 + var_INaCa__gammas) * var_Environment__FonRT * var_chaste_interface__cell__V) + 1.0); // uA_per_uF
        const double var_INaK__fnak = 1.0 / (0.1245 * exp(-0.1 * var_Environment__FonRT * var_chaste_interface__cell__V) + 0.0365 * var_INaK__sigma * exp(-var_Environment__FonRT * var_chaste_interface__cell__V) + 1.0); // dimensionless
        const double var_INaK__inak = var_INaK__fnak * var_INaK__ibarnak / ((pow((var_INaK__kmnai / var_chaste_interface__Na__Na_i), 2.0) + 1.0) * (var_INaK__kmko / var_Environment__K_o + 1.0)); // uA_per_uF
        const double var_Irel__Rel_ss = var_ICaL__ilca * var_Irel__alpha_Rel / (pow((var_Irel__K_Relss / var_Irel__Ca_JSR_free), var_Irel__qn) + 1.0); // mM_per_ms
        const double d_dt_chaste_interface_var_Irel__Rel = (-var_chaste_interface__Irel__Rel - var_Irel__Rel_ss) / var_Irel__tau_Rel; // mM_per_ms / millisecond
        const double var_cell__l = 0.01; // cm
        const double var_cell__ra = 0.0011; // cm
        const double var_cell__ageo = M_PI * pow(var_cell__ra, 2) * 2.0 + M_PI * 2.0 * var_cell__l * var_cell__ra; // cm2
        const double var_cell__Acap = 2.0 * var_cell__ageo; // uF
        const double var_cell__AF = var_cell__Acap / var_Environment__F; // uF_mole_per_C
        const double var_cell__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__Environment__time)/ HeartConfig::Instance()->GetCapacitance(); // uA_per_uF
        const double var_cell__vcell = M_PI * pow(var_cell__ra, 2) * 1000.0 * var_cell__l; // uL
        const double var_cell__vjsr = 0.0048 * var_cell__vcell; // uL
        const double var_cell__vmyo = 0.68 * var_cell__vcell; // uL
        const double var_cell__vnsr = 0.0552 * var_cell__vcell; // uL
        const double d_dt_chaste_interface_var_Ca__Ca_NSR = -var_Iup_Ileak__ileak - var_Itr__itr * var_cell__vjsr / var_cell__vnsr + var_Iup_Ileak__iup; // mM / millisecond
        const double var_reversal_potentials__ECa = log(var_Environment__Ca_o / var_Ca__Ca_i) / (2.0 * var_Environment__FonRT); // mV
        const double var_ICaT__icat = pow(var_chaste_interface__ICaT__b, 2) * (-var_reversal_potentials__ECa + var_chaste_interface__cell__V) * var_chaste_interface__ICaT__g * var_ICaT__gcat; // uA_per_uF
        const double var_cell__caiont = -2.0 * var_INaCa__inaca + var_ICaL__ilca + var_ICaT__icat + var_ICab__icab + var_IpCa__ipca; // uA_per_uF
        const double d_dt_chaste_interface_var_Ca__Ca_T = (-var_Iup_Ileak__iup + var_Iup_Ileak__ileak) * var_cell__vnsr / var_cell__vmyo + var_chaste_interface__Irel__Rel * var_cell__vjsr / var_cell__vmyo - var_cell__AF * var_cell__caiont / (2.0 * var_cell__vmyo); // mM / millisecond
        const double var_reversal_potentials__EK = log(var_Environment__K_o / var_chaste_interface__K__K_i) / var_Environment__FonRT; // mV
        const double var_IK1__ak1 = 1.02 / (1.0 + exp((-59.215 - var_reversal_potentials__EK + var_chaste_interface__cell__V) * 0.2385)); // per_ms
        const double var_IK1__bk1 = (0.49124 * exp((-var_reversal_potentials__EK + 5.476 + var_chaste_interface__cell__V) * 0.08032) + 1.0 * exp((-594.31 - var_reversal_potentials__EK + var_chaste_interface__cell__V) * 0.06175)) / (1.0 + exp(-(-var_reversal_potentials__EK + 4.753 + var_chaste_interface__cell__V) * 0.5143)); // per_ms
        const double var_IK1__gK1 = var_IK1__GK1_ * var_IK1__ak1 / (var_IK1__ak1 + var_IK1__bk1); // mS_per_uF
        const double var_IK1__IK1 = (-var_reversal_potentials__EK + var_chaste_interface__cell__V) * var_IK1__gK1; // uA_per_uF
        const double var_IKp__ikp = (-var_reversal_potentials__EK + var_chaste_interface__cell__V) * var_IKp__GKpmax / (1.0 + exp((-var_chaste_interface__cell__V + 7.488) / 5.98)); // uA_per_uF
        const double var_IKr__ikr = sqrt(var_Environment__K_o / 5.4) * (-var_reversal_potentials__EK + var_chaste_interface__cell__V) * var_IKr__gkrmax * var_IKr__r * var_chaste_interface__IKr__xr; // uA_per_uF
        const double var_reversal_potentials__ENa = log(var_Environment__Na_o / var_chaste_interface__Na__Na_i) / var_Environment__FonRT; // mV
        const double var_INa__ina = pow(var_chaste_interface__INa__m, 3) * (-var_reversal_potentials__ENa + var_chaste_interface__cell__V) * var_INa__GNa * var_chaste_interface__INa__H * var_chaste_interface__INa__J; // uA_per_uF
        const double var_INab__inab = (-var_reversal_potentials__ENa + var_chaste_interface__cell__V) * var_INab__GNab; // uA_per_uF
        const double var_cell__naiont = 3.0 * var_INaCa__inaca + 3.0 * var_INaK__inak + var_ICaL__ilcana + var_INa__ina + var_INab__inab; // uA_per_uF
        const double d_dt_chaste_interface_var_Na__Na_i = -var_Na__conc_clamp * var_cell__AF * var_cell__naiont / var_cell__vmyo; // mM / millisecond
        const double var_reversal_potentials__prnak = 0.01833; // dimensionless
        const double var_reversal_potentials__EKs = log((var_Environment__Na_o * var_reversal_potentials__prnak + var_Environment__K_o) / (var_chaste_interface__Na__Na_i * var_reversal_potentials__prnak + var_chaste_interface__K__K_i)) / var_Environment__FonRT; // mV
        const double var_IKs__iks = (-var_reversal_potentials__EKs + var_chaste_interface__cell__V) * var_IKs__gks * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2; // uA_per_uF
        const double var_cell__kiont = -2.0 * var_INaK__inak + var_ICaL__ilcak + var_IK1__IK1 + var_IKp__ikp + var_IKr__ikr + var_IKs__iks + var_cell__i_Stim; // uA_per_uF
        const double d_dt_chaste_interface_var_K__K_i = -var_Na__conc_clamp * var_cell__AF * var_cell__kiont / var_cell__vmyo; // mM / millisecond
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_cell__V = 0.0;
        }
        else
        {
            d_dt_chaste_interface_var_cell__V = -var_cell__caiont - var_cell__kiont - var_cell__naiont; // millivolt / millisecond
        }
        
        rDY[0] = d_dt_chaste_interface_var_cell__V;
        rDY[1] = d_dt_chaste_interface_var_INa__H;
        rDY[2] = d_dt_chaste_interface_var_INa__m;
        rDY[3] = d_dt_chaste_interface_var_INa__J;
        rDY[4] = d_dt_chaste_interface_var_ICaL__d;
        rDY[5] = d_dt_chaste_interface_var_ICaL__f;
        rDY[6] = d_dt_chaste_interface_var_IKr__xr;
        rDY[7] = d_dt_chaste_interface_var_IKs__xs1;
        rDY[8] = d_dt_chaste_interface_var_IKs__xs2;
        rDY[9] = d_dt_chaste_interface_var_ICaT__b;
        rDY[10] = d_dt_chaste_interface_var_ICaT__g;
        rDY[11] = d_dt_chaste_interface_var_Irel__Rel;
        rDY[12] = d_dt_chaste_interface_var_Na__Na_i;
        rDY[13] = d_dt_chaste_interface_var_K__K_i;
        rDY[14] = d_dt_chaste_interface_var_Ca__Ca_T;
        rDY[15] = d_dt_chaste_interface_var_Ca__Ca_JSR_T;
        rDY[16] = d_dt_chaste_interface_var_Ca__Ca_NSR;
        rDY[17] = d_dt_chaste_interface_var_Ca__Over;
    }

template<>
void OdeSystemInformation<Celllivshitz_rudy_2007FromCellML>::Initialise(void)
{
    this->mSystemName = "LivshitzRudy2007";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-89.4356034692784);
    
    // rY[1]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.994401369032678);
    
    // rY[2]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000734780346592185);
    
    // rY[3]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.996100688673679);
    
    // rY[4]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.2514786721066e-27);
    
    // rY[5]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.997404948824816);
    
    // rY[6]:
    this->mVariableNames.push_back("ar_IKr__xr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000162194715543637);
    
    // rY[7]:
    this->mVariableNames.push_back("ar_IKs__xs1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0285147332973946);
    
    // rY[8]:
    this->mVariableNames.push_back("ar_IKs__xs2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0764114040188678);
    
    // rY[9]:
    this->mVariableNames.push_back("ar_ICaT__b");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000927461915392873);
    
    // rY[10]:
    this->mVariableNames.push_back("ar_ICaT__g");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.952834331760863);
    
    // rY[11]:
    this->mVariableNames.push_back("SR_release_current");
    this->mVariableUnits.push_back("mM_per_ms");
    this->mInitialConditions.push_back(1.06874246141923e-23);
    
    // rY[12]:
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(16.612739313555);
    
    // rY[13]:
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(139.730914103161);
    
    // rY[14]:
    this->mVariableNames.push_back("ar_Ca__Ca_T");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.0257059808595638);
    
    // rY[15]:
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(7.87371650296567);
    
    // rY[16]:
    this->mVariableNames.push_back("ar_Ca__Ca_NSR");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(2.71518235696672);
    
    // rY[17]:
    this->mVariableNames.push_back("ar_Ca__Over");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1e-12);
    
    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Celllivshitz_rudy_2007FromCellML)
