//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: hund_rudy_2004
//! 
//! Processed by weblab_cg: https://github.com/ModellingWebLab/weblab-cg
//!     (translator: weblab_cg, model type: normal, options: )
//! on 2019-12-17 10:26:18
//! 
//! <autogenerated>

#include "hund_rudy_2004_a.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    boost::shared_ptr<RegularStimulus> Cellhund_rudy_2004_aFromCellML::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__cell__stim_amplitude = -15.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_uF
        const double var_chaste_interface__cell__stim_duration = 3.0; // millisecond
        const double var_chaste_interface__cell__stim_period = 1000.0; // millisecond
        const double var_chaste_interface__cell__stim_offset = 0.0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__cell__stim_amplitude),
                var_chaste_interface__cell__stim_duration,
                var_chaste_interface__cell__stim_period,
                var_chaste_interface__cell__stim_offset
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    double Cellhund_rudy_2004_aFromCellML::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    
    Cellhund_rudy_2004_aFromCellML::Cellhund_rudy_2004_aFromCellML(boost::shared_ptr<AbstractIvpOdeSolver> pSolver, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCardiacCell(
                pSolver,
                29,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Cellhund_rudy_2004_aFromCellML>::Instance();
        Init();
        
        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        
    }
    
    Cellhund_rudy_2004_aFromCellML::~Cellhund_rudy_2004_aFromCellML()
    {
    }

    double Cellhund_rudy_2004_aFromCellML::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: mV; Initial value: -85.781844107117
        double var_chaste_interface__Ca__Ca_i = rY[1];
        // Units: mM; Initial value: 0.00012131666
        double var_chaste_interface__INa__H = rY[2];
        // Units: dimensionless; Initial value: 0.987317750543
        double var_chaste_interface__INa__m = rY[3];
        // Units: dimensionless; Initial value: 0.001356538159
        double var_chaste_interface__INa__J = rY[4];
        // Units: dimensionless; Initial value: 0.991924983076
        double var_chaste_interface__ICaL__d = rY[5];
        // Units: dimensionless; Initial value: 1.64013e-06
        double var_chaste_interface__ICaL__dp = rY[6];
        // Units: dimensionless; Initial value: 8.98230672628
        double var_chaste_interface__ICaL__f = rY[7];
        // Units: dimensionless; Initial value: 0.999961508634
        double var_chaste_interface__ICaL__fca = rY[8];
        // Units: dimensionless; Initial value: 0.97836624923
        double var_chaste_interface__ICaL__fca2 = rY[9];
        // Units: dimensionless; Initial value: 0.893052931249
        double var_chaste_interface__ICaL__f2 = rY[10];
        // Units: dimensionless; Initial value: 0.992234519148
        double var_chaste_interface__IKr__xr = rY[11];
        // Units: dimensionless; Initial value: 7.24074e-06
        double var_chaste_interface__IKs__xs1 = rY[12];
        // Units: dimensionless; Initial value: 0.019883138161
        double var_chaste_interface__IKs__xs2 = rY[13];
        // Units: dimensionless; Initial value: 0.019890650554
        double var_chaste_interface__Ito__ydv = rY[14];
        // Units: dimensionless; Initial value: 0.013970786703
        double var_chaste_interface__Ito__ydv2 = rY[15];
        // Units: dimensionless; Initial value: 0.99996472752
        double var_chaste_interface__Ito__zdv = rY[16];
        // Units: dimensionless; Initial value: 0.829206149767
        double var_chaste_interface__Ito2__AA = rY[17];
        // Units: dimensionless; Initial value: 0.000816605172
        double var_chaste_interface__INal__mL = rY[18];
        // Units: dimensionless; Initial value: 0.001356538159
        double var_chaste_interface__INal__hL = rY[19];
        // Units: dimensionless; Initial value: 0.26130711759
        double var_chaste_interface__Na__Na_i = rY[23];
        // Units: mM; Initial value: 12.972433387269
        double var_chaste_interface__K__K_i = rY[24];
        // Units: mM; Initial value: 135.469546216758
        double var_chaste_interface__Cl__Cl_i = rY[25];
        // Units: mM; Initial value: 15.59207157178
        double var_chaste_interface__Ca__Ca_ss = rY[28];
        // Units: mM; Initial value: 0.00012271265
        
        const double var_Environment__Ca_o = 1.8; // mM
        const double var_Environment__Cl_o = 100.0; // mM
        const double var_Environment__F = 96485.0; // C_per_mole
        const double var_Environment__FonRT = 0.0374358835078; // per_mV
        const double var_Environment__K_o = 5.4; // mM
        const double var_Environment__Na_o = 140.0; // mM
        const double var_Environment__tissue = 0.0; // dimensionless
        const double var_ICaL__G_CaL_mult = 1.0; // dimensionless
        const double var_ICaL__gacai = 1.0; // dimensionless
        const double var_ICaL__gacao = 0.341; // dimensionless
        const double var_ICaL__pca = 0.000243; // L_per_F_ms
        const double var_IClb__GClb = 0.000225; // mS_per_uF
        const double var_IKr__G_Kr_mult = 1.0; // dimensionless
        const double var_IKr__gkr = sqrt(var_Environment__K_o / 5.4) * 0.0138542; // mS_per_uF
        const double var_IKs__gks = (0.6 / (pow((3.8e-05 / var_chaste_interface__Ca__Ca_i), 1.4) + 1.0) + 1.0) * 0.0248975; // mS_per_uF
        const double var_INa__GNa = ((0.0 == var_Environment__tissue) ? (8.25) : (4.0 * 8.25)); // mS_per_uF
        const double var_INa__G_Na_mult = 1.0; // dimensionless
        const double var_INa__gNa = pow(var_chaste_interface__INa__m, 3) * var_INa__GNa * var_chaste_interface__INa__H * var_chaste_interface__INa__J; // mS_per_uF
        const double var_INaCa__KmCa = 0.000125; // mM
        const double var_INaCa__KmCai = 0.0036; // mM
        const double var_INaCa__KmCao = 1.3; // mM
        const double var_INaCa__KmNai = 12.3; // mM
        const double var_INaCa__KmNao = 87.5; // mM
        const double var_INaCa__NCXmax = 4.5; // uA_per_uF
        const double var_INaCa__ca_i_NaCa = 1.5 * var_chaste_interface__Ca__Ca_i; // mM
        const double var_INaCa__allo = 1.0 / (pow((var_INaCa__KmCa / var_INaCa__ca_i_NaCa), 2.0) + 1.0); // dimensionless
        const double var_INaCa__eta = 0.35; // dimensionless
        const double var_INaCa__ksat = 0.27; // dimensionless
        const double var_INaK__ibarnak = 0.61875; // uA_per_uF
        const double var_INaK__kmko = 1.5; // mM
        const double var_INaK__kmnai = 10.0; // mM
        const double var_INaK__sigma = (-1.0 + exp(var_Environment__Na_o / 67.3)) / 7.0; // dimensionless
        const double var_INal__GNaL = 0.0065; // mS_per_uF
        const double var_IpCa__ibarpca = 0.0575; // uA_per_uF
        const double var_IpCa__kmpca = 0.0005; // mM
        const double var_IpCa__IpCa = var_chaste_interface__Ca__Ca_i * var_IpCa__ibarpca / (var_chaste_interface__Ca__Ca_i + var_IpCa__kmpca); // uA_per_uF
        const double var_Ito__gitodv = 0.19; // mS_per_uF
        const double var_Ito2__PCl = 4e-07; // L_per_F_ms
        const double var_INaCa__denom2 = pow(var_INaCa__KmNao, 3.0) * var_INaCa__ca_i_NaCa + pow(var_chaste_interface__Na__Na_i, 3.0) * var_INaCa__KmCao + pow(var_INaCa__KmNai, 3.0) * (var_INaCa__ca_i_NaCa / var_INaCa__KmCai + 1.0) * var_Environment__Ca_o; // mM4
        const double var_INaCa__denom3 = pow(var_Environment__Na_o, 3.0) * var_INaCa__ca_i_NaCa + pow(var_chaste_interface__Na__Na_i, 3.0) * var_Environment__Ca_o + pow(var_Environment__Na_o, 3.0) * (pow((var_chaste_interface__Na__Na_i / var_INaCa__KmNai), 3.0) + 1.0) * var_INaCa__KmCai; // mM4
        const double var_ICaL__ibarca = (-15.0 + var_chaste_interface__cell__V) * (-var_Environment__Ca_o * var_ICaL__gacao + var_chaste_interface__Ca__Ca_ss * var_ICaL__gacai * exp((-15.0 + var_chaste_interface__cell__V) * 2.0 * var_Environment__FonRT)) * 4.0 * var_Environment__F * var_Environment__FonRT * var_ICaL__G_CaL_mult * var_ICaL__pca / (-1.0 + exp((-15.0 + var_chaste_interface__cell__V) * 2.0 * var_Environment__FonRT)); // uA_per_uF
        const double var_ICaL__ICaL = ((0.0 == var_Environment__tissue) ? (pow(var_chaste_interface__ICaL__d, var_chaste_interface__ICaL__dp) * var_chaste_interface__ICaL__f * var_chaste_interface__ICaL__f2 * var_chaste_interface__ICaL__fca * var_chaste_interface__ICaL__fca2 * var_ICaL__ibarca) : (var_chaste_interface__ICaL__d * var_chaste_interface__ICaL__f * var_chaste_interface__ICaL__f2 * var_chaste_interface__ICaL__fca * var_chaste_interface__ICaL__fca2 * var_ICaL__ibarca)); // uA_per_uF
        const double var_ICab__ICab = (var_chaste_interface__Ca__Ca_i * exp(2.0 * var_Environment__FonRT * var_chaste_interface__cell__V) - 0.341 * var_Environment__Ca_o) * 1.995084e-07 * 4.0 * var_Environment__F * var_Environment__FonRT * var_chaste_interface__cell__V / (-1.0 + exp(2.0 * var_Environment__FonRT * var_chaste_interface__cell__V)); // uA_per_uF
        const double var_IKr__r = 1.0 / (1.0 + exp((10.0 + var_chaste_interface__cell__V) / 15.4)); // dimensionless
        const double var_INaCa__denom1 = var_INaCa__ksat * exp((-1.0 + var_INaCa__eta) * var_Environment__FonRT * var_chaste_interface__cell__V) + 1.0; // dimensionless
        const double var_INaCa__num = pow(var_chaste_interface__Na__Na_i, 3.0) * var_Environment__Ca_o * exp(var_Environment__FonRT * var_INaCa__eta * var_chaste_interface__cell__V) - pow(var_Environment__Na_o, 3.0) * var_INaCa__ca_i_NaCa * exp((-1.0 + var_INaCa__eta) * var_Environment__FonRT * var_chaste_interface__cell__V); // mM4
        const double var_INaCa__INaCa = var_INaCa__NCXmax * var_INaCa__allo * var_INaCa__num / ((var_INaCa__denom2 + var_INaCa__denom3) * var_INaCa__denom1); // uA_per_uF
        const double var_INaK__fnak = 1.0 / (0.1245 * exp(-0.1 * var_Environment__FonRT * var_chaste_interface__cell__V) + 0.0365 * var_INaK__sigma * exp(-var_Environment__FonRT * var_chaste_interface__cell__V) + 1.0); // dimensionless
        const double var_INaK__INaK = 1.0 * var_Environment__K_o * var_INaK__fnak * var_INaK__ibarnak / ((pow((var_INaK__kmnai / var_chaste_interface__Na__Na_i), 2.0) + 1.0) * (var_Environment__K_o + var_INaK__kmko)); // uA_per_uF
        const double var_Ito__rv = exp(var_chaste_interface__cell__V / 300.0); // dimensionless
        const double var_Ito2__Ito2_max = (-var_Environment__Cl_o * exp(var_Environment__FonRT * var_chaste_interface__cell__V) + var_chaste_interface__Cl__Cl_i) * var_Environment__F * var_Environment__FonRT * var_Ito2__PCl * var_chaste_interface__cell__V / (-exp(var_Environment__FonRT * var_chaste_interface__cell__V) + 1.0); // uA_per_uF
        const double var_Ito2__Ito2 = var_chaste_interface__Ito2__AA * var_Ito2__Ito2_max; // uA_per_uF
        const double var_cell__caiont = -2.0 * var_INaCa__INaCa + var_ICaL__ICaL + var_ICab__ICab + var_IpCa__IpCa; // uA_per_uF
        const double var_cell__i_Stim = 0.0; // uA_per_uF
        const double var_reversal_potentials__ECl = -log(var_Environment__Cl_o / var_chaste_interface__Cl__Cl_i) / var_Environment__FonRT; // mV
        const double var_IClb__IClb = (-var_reversal_potentials__ECl + var_chaste_interface__cell__V) * var_IClb__GClb; // uA_per_uF
        const double var_cell__clont = 0.5 * var_cell__i_Stim + var_IClb__IClb + var_Ito2__Ito2; // uA_per_uF
        const double var_reversal_potentials__EK = log(var_Environment__K_o / var_chaste_interface__K__K_i) / var_Environment__FonRT; // mV
        const double var_IK1__ak1 = 1.02 / (1.0 + exp((-59.215 - var_reversal_potentials__EK + var_chaste_interface__cell__V) * 0.2385)); // per_ms
        const double var_IK1__bk1 = (0.49124 * exp((-var_reversal_potentials__EK + 5.476 + var_chaste_interface__cell__V) * 0.08032) + 1.0 * exp((-594.31 - var_reversal_potentials__EK + var_chaste_interface__cell__V) * 0.06175)) / (1.0 + exp(-(-var_reversal_potentials__EK + 4.753 + var_chaste_interface__cell__V) * 0.5143)); // per_ms
        const double var_IK1__IK1 = sqrt(var_Environment__K_o / 5.4) * (-var_reversal_potentials__EK + var_chaste_interface__cell__V) * 0.5 * var_IK1__ak1 / (var_IK1__ak1 + var_IK1__bk1); // uA_per_uF
        const double var_IKp__IKp = (-var_reversal_potentials__EK + var_chaste_interface__cell__V) * 0.00276 / (1.0 + exp((-var_chaste_interface__cell__V + 7.488) / 5.98)); // uA_per_uF
        const double var_IKr__IKr = (-var_reversal_potentials__EK + var_chaste_interface__cell__V) * var_IKr__G_Kr_mult * var_IKr__gkr * var_IKr__r * var_chaste_interface__IKr__xr; // uA_per_uF
        const double var_Ito__Ito = pow(var_chaste_interface__Ito__ydv, 3.0) * (-var_reversal_potentials__EK + var_chaste_interface__cell__V) * var_Ito__gitodv * var_Ito__rv * var_chaste_interface__Ito__ydv2 * var_chaste_interface__Ito__zdv; // uA_per_uF
        const double var_reversal_potentials__ENa = log(var_Environment__Na_o / var_chaste_interface__Na__Na_i) / var_Environment__FonRT; // mV
        const double var_INa__INa = (-var_reversal_potentials__ENa + var_chaste_interface__cell__V) * var_INa__G_Na_mult * var_INa__gNa; // uA_per_uF
        const double var_INal__INal = pow(var_chaste_interface__INal__mL, 3.0) * (-var_reversal_potentials__ENa + var_chaste_interface__cell__V) * var_INal__GNaL * var_chaste_interface__INal__hL; // uA_per_uF
        const double var_cell__naiont = 3.0 * var_INaCa__INaCa + 3.0 * var_INaK__INaK + var_INa__INa + var_INal__INal; // uA_per_uF
        const double var_reversal_potentials__prnak = 0.01833; // dimensionless
        const double var_reversal_potentials__EKs = log((var_Environment__Na_o * var_reversal_potentials__prnak + var_Environment__K_o) / (var_chaste_interface__Na__Na_i * var_reversal_potentials__prnak + var_chaste_interface__K__K_i)) / var_Environment__FonRT; // mV
        const double var_IKs__IKs = (-var_reversal_potentials__EKs + var_chaste_interface__cell__V) * var_IKs__gks * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2; // uA_per_uF
        const double var_cell__kiont = 0.5 * var_cell__i_Stim - 2.0 * var_INaK__INaK + var_IK1__IK1 + var_IKp__IKp + var_IKr__IKr + var_IKs__IKs + var_Ito__Ito; // uA_per_uF
        const double var_chaste_interface__i_ionic = (var_cell__caiont + var_cell__clont + var_cell__kiont + var_cell__naiont) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Cellhund_rudy_2004_aFromCellML::EvaluateYDerivatives(double var_chaste_interface__Environment__time, const std::vector<double>& rY, std::vector<double>& rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: mV; Initial value: -85.781844107117
        double var_chaste_interface__Ca__Ca_i = rY[1];
        // Units: mM; Initial value: 0.00012131666
        double var_chaste_interface__INa__H = rY[2];
        // Units: dimensionless; Initial value: 0.987317750543
        double var_chaste_interface__INa__m = rY[3];
        // Units: dimensionless; Initial value: 0.001356538159
        double var_chaste_interface__INa__J = rY[4];
        // Units: dimensionless; Initial value: 0.991924983076
        double var_chaste_interface__ICaL__d = rY[5];
        // Units: dimensionless; Initial value: 1.64013e-06
        double var_chaste_interface__ICaL__dp = rY[6];
        // Units: dimensionless; Initial value: 8.98230672628
        double var_chaste_interface__ICaL__f = rY[7];
        // Units: dimensionless; Initial value: 0.999961508634
        double var_chaste_interface__ICaL__fca = rY[8];
        // Units: dimensionless; Initial value: 0.97836624923
        double var_chaste_interface__ICaL__fca2 = rY[9];
        // Units: dimensionless; Initial value: 0.893052931249
        double var_chaste_interface__ICaL__f2 = rY[10];
        // Units: dimensionless; Initial value: 0.992234519148
        double var_chaste_interface__IKr__xr = rY[11];
        // Units: dimensionless; Initial value: 7.24074e-06
        double var_chaste_interface__IKs__xs1 = rY[12];
        // Units: dimensionless; Initial value: 0.019883138161
        double var_chaste_interface__IKs__xs2 = rY[13];
        // Units: dimensionless; Initial value: 0.019890650554
        double var_chaste_interface__Ito__ydv = rY[14];
        // Units: dimensionless; Initial value: 0.013970786703
        double var_chaste_interface__Ito__ydv2 = rY[15];
        // Units: dimensionless; Initial value: 0.99996472752
        double var_chaste_interface__Ito__zdv = rY[16];
        // Units: dimensionless; Initial value: 0.829206149767
        double var_chaste_interface__Ito2__AA = rY[17];
        // Units: dimensionless; Initial value: 0.000816605172
        double var_chaste_interface__INal__mL = rY[18];
        // Units: dimensionless; Initial value: 0.001356538159
        double var_chaste_interface__INal__hL = rY[19];
        // Units: dimensionless; Initial value: 0.26130711759
        double var_chaste_interface__Irel__CaMKtrap = rY[20];
        // Units: dimensionless; Initial value: 0.021123704774
        double var_chaste_interface__Irel__ro = rY[21];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__Irel__ri = rY[22];
        // Units: dimensionless; Initial value: 0.862666650318
        double var_chaste_interface__Na__Na_i = rY[23];
        // Units: mM; Initial value: 12.972433387269
        double var_chaste_interface__K__K_i = rY[24];
        // Units: mM; Initial value: 135.469546216758
        double var_chaste_interface__Cl__Cl_i = rY[25];
        // Units: mM; Initial value: 15.59207157178
        double var_chaste_interface__Ca__Ca_jsr = rY[26];
        // Units: mM; Initial value: 1.737580994071
        double var_chaste_interface__Ca__Ca_nsr = rY[27];
        // Units: mM; Initial value: 1.832822335168
        double var_chaste_interface__Ca__Ca_ss = rY[28];
        // Units: mM; Initial value: 0.00012271265
        
        // Mathematics
        double d_dt_chaste_interface_var_cell__V;
        const double var_Ca__BSLmax = 1.124; // mM
        const double var_Ca__BSRmax = 0.047; // mM
        const double var_Ca__KmBSL = 0.0087; // mM
        const double var_Ca__KmBSR = 0.00087; // mM
        const double var_Ca__bss = 1.0 / (pow((var_chaste_interface__Ca__Ca_ss + var_Ca__KmBSL), (-2.0)) * var_Ca__BSLmax * var_Ca__KmBSL + pow((var_chaste_interface__Ca__Ca_ss + var_Ca__KmBSR), (-2.0)) * var_Ca__BSRmax * var_Ca__KmBSR + 1.0); // dimensionless
        const double var_Ca__cbar = 0.05; // mM
        const double var_Ca__csqnbar = 10.0; // mM
        const double var_Ca__kmc = 0.00238; // mM
        const double var_Ca__kmcsqn = 0.8; // mM
        const double var_Ca__bcsqn = 1.0 / (pow((var_chaste_interface__Ca__Ca_jsr + var_Ca__kmcsqn), (-2.0)) * var_Ca__csqnbar * var_Ca__kmcsqn + 1.0); // dimensionless
        const double var_Ca__kmt = 0.0005; // mM
        const double var_Ca__tbar = 0.07; // mM
        const double var_Ca__bmyo = 1.0 / (pow((var_chaste_interface__Ca__Ca_i + var_Ca__kmc), (-2.0)) * var_Ca__cbar * var_Ca__kmc + pow((var_chaste_interface__Ca__Ca_i + var_Ca__kmt), (-2.0)) * var_Ca__kmt * var_Ca__tbar + 1.0); // dimensionless
        const double var_Environment__Ca_o = 1.8; // mM
        const double var_Environment__Cl_o = 100.0; // mM
        const double var_Environment__F = 96485.0; // C_per_mole
        const double var_Environment__FonRT = 0.0374358835078; // per_mV
        const double var_Environment__K_o = 5.4; // mM
        const double var_Environment__Na_o = 140.0; // mM
        const double var_Environment__tissue = 0.0; // dimensionless
        const double var_ICaL__G_CaL_mult = 1.0; // dimensionless
        const double var_ICaL__gacai = 1.0; // dimensionless
        const double var_ICaL__gacao = 0.341; // dimensionless
        const double var_ICaL__pca = 0.000243; // L_per_F_ms
        const double var_IClb__GClb = 0.000225; // mS_per_uF
        const double var_IKr__G_Kr_mult = 1.0; // dimensionless
        const double var_IKr__gkr = sqrt(var_Environment__K_o / 5.4) * 0.0138542; // mS_per_uF
        const double var_IKs__gks = (0.6 / (pow((3.8e-05 / var_chaste_interface__Ca__Ca_i), 1.4) + 1.0) + 1.0) * 0.0248975; // mS_per_uF
        const double var_INa__GNa = ((0.0 == var_Environment__tissue) ? (8.25) : (4.0 * 8.25)); // mS_per_uF
        const double var_INa__G_Na_mult = 1.0; // dimensionless
        const double var_INa__gNa = pow(var_chaste_interface__INa__m, 3) * var_INa__GNa * var_chaste_interface__INa__H * var_chaste_interface__INa__J; // mS_per_uF
        const double var_INaCa__KmCa = 0.000125; // mM
        const double var_INaCa__KmCai = 0.0036; // mM
        const double var_INaCa__KmCao = 1.3; // mM
        const double var_INaCa__KmNai = 12.3; // mM
        const double var_INaCa__KmNao = 87.5; // mM
        const double var_INaCa__NCXmax = 4.5; // uA_per_uF
        const double var_INaCa__ca_i_NaCa = 1.5 * var_chaste_interface__Ca__Ca_i; // mM
        const double var_INaCa__allo = 1.0 / (pow((var_INaCa__KmCa / var_INaCa__ca_i_NaCa), 2.0) + 1.0); // dimensionless
        const double var_INaCa__eta = 0.35; // dimensionless
        const double var_INaCa__ksat = 0.27; // dimensionless
        const double var_INaK__ibarnak = 0.61875; // uA_per_uF
        const double var_INaK__kmko = 1.5; // mM
        const double var_INaK__kmnai = 10.0; // mM
        const double var_INaK__sigma = (-1.0 + exp(var_Environment__Na_o / 67.3)) / 7.0; // dimensionless
        const double var_INal__GNaL = 0.0065; // mS_per_uF
        const double var_Idiff_Itr__idiff = (-var_chaste_interface__Ca__Ca_i + var_chaste_interface__Ca__Ca_ss) / 0.2; // mM_per_ms
        const double var_Idiff_Itr__itr = (-var_chaste_interface__Ca__Ca_jsr + var_chaste_interface__Ca__Ca_nsr) / 120.0; // mM_per_ms
        const double var_IpCa__ibarpca = 0.0575; // uA_per_uF
        const double var_IpCa__kmpca = 0.0005; // mM
        const double var_IpCa__IpCa = var_chaste_interface__Ca__Ca_i * var_IpCa__ibarpca / (var_chaste_interface__Ca__Ca_i + var_IpCa__kmpca); // uA_per_uF
        const double var_Irel__CaMK0 = 0.05; // dimensionless
        const double var_Irel__Km = 0.0015; // mM
        const double var_Irel__CaMKbound = (-var_chaste_interface__Irel__CaMKtrap + 1.0) * var_Irel__CaMK0 / (var_Irel__Km / var_chaste_interface__Ca__Ca_ss + 1.0); // dimensionless
        const double var_Irel__CaMKactive = var_Irel__CaMKbound + var_chaste_interface__Irel__CaMKtrap; // dimensionless
        const double d_dt_chaste_interface_var_Irel__CaMKtrap = -0.00068 * var_chaste_interface__Irel__CaMKtrap + (-var_chaste_interface__Irel__CaMKtrap + var_Irel__CaMKactive) * 0.05 * var_Irel__CaMKactive; // 1 / millisecond
        const double var_ICaL__taufca = 1.0 / (var_chaste_interface__Ca__Ca_ss / 0.003 + 1.0) + 10.0 * var_Irel__CaMKactive / (0.15 + var_Irel__CaMKactive) + 0.5; // ms
        const double var_Irel__KmCaMK = 0.15; // dimensionless
        const double var_Irel__dro_inf = pow(var_chaste_interface__Ca__Ca_jsr, 1.9) / (pow((49.28 * var_chaste_interface__Ca__Ca_ss / (0.0028 + var_chaste_interface__Ca__Ca_ss)), 1.9) + pow(var_chaste_interface__Ca__Ca_jsr, 1.9)); // dimensionless
        const double var_Irel__dtau_rel_max = 10.0; // ms
        const double var_Irel__dtau_rel = var_Irel__CaMKactive * var_Irel__dtau_rel_max / (var_Irel__CaMKactive + var_Irel__KmCaMK); // ms
        const double var_Ito__gitodv = 0.19; // mS_per_uF
        const double var_Ito2__Kmto2 = 0.1502; // mM
        const double var_Ito2__AAss = 1.0 / (var_Ito2__Kmto2 / var_chaste_interface__Ca__Ca_ss + 1.0); // dimensionless
        const double d_dt_chaste_interface_var_Ito2__AA = (-var_chaste_interface__Ito2__AA + var_Ito2__AAss) / 1.0; // 1 / millisecond
        const double var_Ito2__PCl = 4e-07; // L_per_F_ms
        const double var_Iup_Ileak__Kmup = 0.00092; // mM
        const double var_Iup_Ileak__dJupmax = 0.75; // dimensionless
        const double var_Iup_Ileak__dJup = var_Irel__CaMKactive * var_Iup_Ileak__dJupmax / (var_Irel__CaMKactive + var_Irel__KmCaMK); // dimensionless
        const double var_Iup_Ileak__dKmPLBmax = 0.00017; // mM
        const double var_Iup_Ileak__dKmPLB = var_Irel__CaMKactive * var_Iup_Ileak__dKmPLBmax / (var_Irel__CaMKactive + var_Irel__KmCaMK); // mM
        const double var_Iup_Ileak__iupmax = 0.004375; // mM_per_ms
        const double var_Iup_Ileak__iup = (1.0 + var_Iup_Ileak__dJup) * var_chaste_interface__Ca__Ca_i * var_Iup_Ileak__iupmax / (-var_Iup_Ileak__dKmPLB + var_chaste_interface__Ca__Ca_i + var_Iup_Ileak__Kmup); // mM_per_ms
        const double var_Iup_Ileak__nsrmax = 15.0; // mM
        const double var_Iup_Ileak__ileak = var_chaste_interface__Ca__Ca_nsr * var_Iup_Ileak__iupmax / var_Iup_Ileak__nsrmax; // mM_per_ms
        const double var_K__CTKClmax = 7.0756e-06; // mM_per_ms
        const double var_Na__CTNaClmax = 9.8443e-06; // mM_per_ms
        const double var_INaCa__denom2 = pow(var_INaCa__KmNao, 3.0) * var_INaCa__ca_i_NaCa + pow(var_chaste_interface__Na__Na_i, 3.0) * var_INaCa__KmCao + pow(var_INaCa__KmNai, 3.0) * (var_INaCa__ca_i_NaCa / var_INaCa__KmCai + 1.0) * var_Environment__Ca_o; // mM4
        const double var_INaCa__denom3 = pow(var_Environment__Na_o, 3.0) * var_INaCa__ca_i_NaCa + pow(var_chaste_interface__Na__Na_i, 3.0) * var_Environment__Ca_o + pow(var_Environment__Na_o, 3.0) * (pow((var_chaste_interface__Na__Na_i / var_INaCa__KmNai), 3.0) + 1.0) * var_INaCa__KmCai; // mM4
        const double var_ICaL__dpss = -8.0 / (1.0 + exp((-65.0 - var_chaste_interface__cell__V) / 3.4)) + 9.0; // dimensionless
        const double d_dt_chaste_interface_var_ICaL__dp = (-var_chaste_interface__ICaL__dp + var_ICaL__dpss) / 10.0; // 1 / millisecond
        const double var_ICaL__dss = 1.0 / (1.0 + exp((-var_chaste_interface__cell__V + 4.0) / 6.74)); // dimensionless
        const double var_ICaL__f2ss = 0.77 / (1.0 + exp((17.12 + var_chaste_interface__cell__V) / 7.0)) + 0.23; // dimensionless
        const double var_ICaL__fss = 0.7 / (1.0 + exp((17.12 + var_chaste_interface__cell__V) / 7.0)) + 0.3; // dimensionless
        const double var_ICaL__ibarca = (-15.0 + var_chaste_interface__cell__V) * (-var_Environment__Ca_o * var_ICaL__gacao + var_chaste_interface__Ca__Ca_ss * var_ICaL__gacai * exp((-15.0 + var_chaste_interface__cell__V) * 2.0 * var_Environment__FonRT)) * 4.0 * var_Environment__F * var_Environment__FonRT * var_ICaL__G_CaL_mult * var_ICaL__pca / (-1.0 + exp((-15.0 + var_chaste_interface__cell__V) * 2.0 * var_Environment__FonRT)); // uA_per_uF
        const double var_ICaL__ICaL = ((0.0 == var_Environment__tissue) ? (pow(var_chaste_interface__ICaL__d, var_chaste_interface__ICaL__dp) * var_chaste_interface__ICaL__f * var_chaste_interface__ICaL__f2 * var_chaste_interface__ICaL__fca * var_chaste_interface__ICaL__fca2 * var_ICaL__ibarca) : (var_chaste_interface__ICaL__d * var_chaste_interface__ICaL__f * var_chaste_interface__ICaL__f2 * var_chaste_interface__ICaL__fca * var_chaste_interface__ICaL__fca2 * var_ICaL__ibarca)); // uA_per_uF
        const double var_ICaL__fca2ss = 1.0 / (-var_ICaL__ICaL / 0.01 + 1.0); // dimensionless
        const double var_ICaL__fcass = 0.55 / (var_chaste_interface__Ca__Ca_ss / 0.003 + 1.0) + 0.3 / (-var_ICaL__ICaL / 0.05 + 1.0) + 0.15; // dimensionless
        const double d_dt_chaste_interface_var_ICaL__fca = (-var_chaste_interface__ICaL__fca + var_ICaL__fcass) / var_ICaL__taufca; // 1 / millisecond
        const double var_ICaL__taud = 0.8 * exp((13.0 + var_chaste_interface__cell__V) * 0.052) / (1.0 + exp((13.0 + var_chaste_interface__cell__V) * 0.132)) + 0.59; // ms
        const double d_dt_chaste_interface_var_ICaL__d = (-var_chaste_interface__ICaL__d + var_ICaL__dss) / var_ICaL__taud; // 1 / millisecond
        const double var_ICaL__tauf = 1.0 / (0.2411 * exp(-pow(((-9.6914 + var_chaste_interface__cell__V) * 0.045), 2.0)) + 0.0529); // ms
        const double d_dt_chaste_interface_var_ICaL__f = (-var_chaste_interface__ICaL__f + var_ICaL__fss) / var_ICaL__tauf; // 1 / millisecond
        const double var_ICaL__tauf2 = 1.0 / (0.0423 * exp(-pow(((-18.5726 + var_chaste_interface__cell__V) * 0.059), 2.0)) + 0.0054); // ms
        const double d_dt_chaste_interface_var_ICaL__f2 = (-var_chaste_interface__ICaL__f2 + var_ICaL__f2ss) / var_ICaL__tauf2; // 1 / millisecond
        const double var_ICaL__taufca2 = 300.0 / (1.0 + exp((-0.175 - var_ICaL__ICaL) / 0.04)) + 125.0; // ms
        const double d_dt_chaste_interface_var_ICaL__fca2 = (-var_chaste_interface__ICaL__fca2 + var_ICaL__fca2ss) / var_ICaL__taufca2; // 1 / millisecond
        const double var_ICab__ICab = (var_chaste_interface__Ca__Ca_i * exp(2.0 * var_Environment__FonRT * var_chaste_interface__cell__V) - 0.341 * var_Environment__Ca_o) * 1.995084e-07 * 4.0 * var_Environment__F * var_Environment__FonRT * var_chaste_interface__cell__V / (-1.0 + exp(2.0 * var_Environment__FonRT * var_chaste_interface__cell__V)); // uA_per_uF
        const double var_IKr__r = 1.0 / (1.0 + exp((10.0 + var_chaste_interface__cell__V) / 15.4)); // dimensionless
        const double var_IKr__tauxr = 1.0 / ((38.3608 + var_chaste_interface__cell__V) * 0.0003 / (-1.0 + exp((38.3608 + var_chaste_interface__cell__V) * 0.1522)) + (-1.7384 + var_chaste_interface__cell__V) * 0.0006 / (-exp(-(-1.7384 + var_chaste_interface__cell__V) * 0.136) + 1.0)); // ms
        const double var_IKr__xrss = 1.0 / (1.0 + exp((-10.085 - var_chaste_interface__cell__V) / 4.25)); // dimensionless
        const double d_dt_chaste_interface_var_IKr__xr = (-var_chaste_interface__IKr__xr + var_IKr__xrss) / var_IKr__tauxr; // 1 / millisecond
        const double var_IKs__tauxs = 1.0 / ((-0.55 + var_chaste_interface__cell__V) * 0.00036 / (-1.0 + exp((-0.55 + var_chaste_interface__cell__V) * 0.128)) + (44.6 + var_chaste_interface__cell__V) * 7.61e-05 / (-exp(-(44.6 + var_chaste_interface__cell__V) * 9.97) + 1.0)); // ms
        const double var_IKs__xss = 1.0 / (1.0 + exp((-var_chaste_interface__cell__V + 10.5) / 24.7)); // dimensionless
        const double d_dt_chaste_interface_var_IKs__xs1 = (-var_chaste_interface__IKs__xs1 + var_IKs__xss) / var_IKs__tauxs; // 1 / millisecond
        const double d_dt_chaste_interface_var_IKs__xs2 = (-var_chaste_interface__IKs__xs2 + var_IKs__xss) / (2.0 * var_IKs__tauxs); // 1 / millisecond
        const double var_INa__ah = ((40.0 >= -var_chaste_interface__cell__V) ? (0.0) : (0.135 * exp(-(80.0 + var_chaste_interface__cell__V) / 6.8))); // per_ms
        const double var_INa__aj = ((40.0 >= -var_chaste_interface__cell__V) ? (0.0) : ((-127140.0 * exp(0.2444 * var_chaste_interface__cell__V) - 3.474e-05 * exp(-0.04391 * var_chaste_interface__cell__V)) * (37.78 + var_chaste_interface__cell__V) * 1.0 / (1.0 + exp((79.23 + var_chaste_interface__cell__V) * 0.311)))); // per_ms
        const double var_INa__am = (47.13 + var_chaste_interface__cell__V) * 0.32 * 1.0 / (-exp(-(47.13 + var_chaste_interface__cell__V) * 0.1) + 1.0); // per_ms
        const double var_INa__bh = ((40.0 >= -var_chaste_interface__cell__V) ? (1.0 / ((1.0 + exp(-(10.66 + var_chaste_interface__cell__V) / 11.1)) * 0.13)) : (3.56 * exp(0.079 * var_chaste_interface__cell__V) + 310000.0 * exp(0.35 * var_chaste_interface__cell__V))); // per_ms
        const double d_dt_chaste_interface_var_INa__H = (-var_chaste_interface__INa__H + 1.0) * var_INa__ah - var_chaste_interface__INa__H * var_INa__bh; // 1 / millisecond
        const double var_INa__bj = ((40.0 >= -var_chaste_interface__cell__V) ? (0.3 * exp(-2.535e-07 * var_chaste_interface__cell__V) / (1.0 + exp(-(32.0 + var_chaste_interface__cell__V) * 0.1))) : (0.1212 * exp(-0.01052 * var_chaste_interface__cell__V) / (1.0 + exp(-(40.14 + var_chaste_interface__cell__V) * 0.1378)))); // per_ms
        const double d_dt_chaste_interface_var_INa__J = (-var_chaste_interface__INa__J + 1.0) * var_INa__aj - var_chaste_interface__INa__J * var_INa__bj; // 1 / millisecond
        const double var_INa__bm = 0.08 * exp(-var_chaste_interface__cell__V / 11.0); // per_ms
        const double d_dt_chaste_interface_var_INa__m = (-var_chaste_interface__INa__m + 1.0) * var_INa__am - var_INa__bm * var_chaste_interface__INa__m; // 1 / millisecond
        const double var_INaCa__denom1 = var_INaCa__ksat * exp((-1.0 + var_INaCa__eta) * var_Environment__FonRT * var_chaste_interface__cell__V) + 1.0; // dimensionless
        const double var_INaCa__num = pow(var_chaste_interface__Na__Na_i, 3.0) * var_Environment__Ca_o * exp(var_Environment__FonRT * var_INaCa__eta * var_chaste_interface__cell__V) - pow(var_Environment__Na_o, 3.0) * var_INaCa__ca_i_NaCa * exp((-1.0 + var_INaCa__eta) * var_Environment__FonRT * var_chaste_interface__cell__V); // mM4
        const double var_INaCa__INaCa = var_INaCa__NCXmax * var_INaCa__allo * var_INaCa__num / ((var_INaCa__denom2 + var_INaCa__denom3) * var_INaCa__denom1); // uA_per_uF
        const double var_INaK__fnak = 1.0 / (0.1245 * exp(-0.1 * var_Environment__FonRT * var_chaste_interface__cell__V) + 0.0365 * var_INaK__sigma * exp(-var_Environment__FonRT * var_chaste_interface__cell__V) + 1.0); // dimensionless
        const double var_INaK__INaK = 1.0 * var_Environment__K_o * var_INaK__fnak * var_INaK__ibarnak / ((pow((var_INaK__kmnai / var_chaste_interface__Na__Na_i), 2.0) + 1.0) * (var_Environment__K_o + var_INaK__kmko)); // uA_per_uF
        const double var_INal__amL = (47.13 + var_chaste_interface__cell__V) * 0.32 * 1.0 / (-exp(-(47.13 + var_chaste_interface__cell__V) * 0.1) + 1.0); // per_ms
        const double var_INal__bmL = 0.08 * exp(-var_chaste_interface__cell__V / 11.0); // per_ms
        const double d_dt_chaste_interface_var_INal__mL = (-var_chaste_interface__INal__mL + 1.0) * var_INal__amL - var_INal__bmL * var_chaste_interface__INal__mL; // 1 / millisecond
        const double var_INal__hLss = 1.0 / (1.0 + exp((91.0 + var_chaste_interface__cell__V) / 6.1)); // dimensionless
        const double d_dt_chaste_interface_var_INal__hL = (-var_chaste_interface__INal__hL + var_INal__hLss) / 600.0; // 1 / millisecond
        const double var_Irel__cafac = 1.0 / (1.0 + exp((0.05 + var_ICaL__ICaL) / 0.015)); // dimensionless
        const double var_Irel__riss = 1.0 / (1.0 + exp((-0.0004 + 0.002 * var_Irel__cafac + var_chaste_interface__Ca__Ca_ss) / 2.5e-05)); // dimensionless
        const double var_Irel__ross = var_Irel__dro_inf / (pow((1.0 / var_ICaL__ICaL), 2.0) + 1.0); // dimensionless
        const double d_dt_chaste_interface_var_Irel__ro = (-var_chaste_interface__Irel__ro + var_Irel__ross) / 3.0; // 1 / millisecond
        const double var_Irel__tauri = (-var_Irel__dtau_rel + 350.0) / (1.0 + exp((-0.003 + 0.003 * var_Irel__cafac + var_chaste_interface__Ca__Ca_ss) / 0.0002)) + 3.0 + var_Irel__dtau_rel; // ms
        const double d_dt_chaste_interface_var_Irel__ri = (-var_chaste_interface__Irel__ri + var_Irel__riss) / var_Irel__tauri; // 1 / millisecond
        const double var_Irel__vg = ((0.0 == var_Environment__tissue) ? (1.0 / (1.0 + exp((13.0 + var_ICaL__ibarca) / 5.0))) : (1.0)); // dimensionless
        const double var_Irel__Grel = 3000.0 * var_Irel__vg; // per_ms
        const double var_Irel__irelcicr = (-var_chaste_interface__Ca__Ca_ss + var_chaste_interface__Ca__Ca_jsr) * var_Irel__Grel * var_chaste_interface__Irel__ri * var_chaste_interface__Irel__ro; // mM_per_ms
        const double d_dt_chaste_interface_var_Ca__Ca_jsr = (-var_Irel__irelcicr + var_Idiff_Itr__itr) * var_Ca__bcsqn; // mM / millisecond
        const double var_Ito__ay = 25.0 * exp((-40.0 + var_chaste_interface__cell__V) / 25.0) / (1.0 + exp((-40.0 + var_chaste_interface__cell__V) / 25.0)); // per_ms
        const double var_Ito__ay2 = 0.03 / (1.0 + exp((60.0 + var_chaste_interface__cell__V) / 5.0)); // per_ms
        const double var_Ito__ay3 = 0.00225 / (1.0 + exp((60.0 + var_chaste_interface__cell__V) / 5.0)); // per_ms
        const double var_Ito__by = 25.0 * exp((-90.0 - var_chaste_interface__cell__V) / 25.0) / (1.0 + exp((-90.0 - var_chaste_interface__cell__V) / 25.0)); // per_ms
        const double d_dt_chaste_interface_var_Ito__ydv = (-var_chaste_interface__Ito__ydv + 1.0) * var_Ito__ay - var_Ito__by * var_chaste_interface__Ito__ydv; // 1 / millisecond
        const double var_Ito__by2 = 0.2 * exp((25.0 + var_chaste_interface__cell__V) / 5.0) / (1.0 + exp((25.0 + var_chaste_interface__cell__V) / 5.0)); // per_ms
        const double d_dt_chaste_interface_var_Ito__ydv2 = (-var_chaste_interface__Ito__ydv2 + 1.0) * var_Ito__ay2 - var_Ito__by2 * var_chaste_interface__Ito__ydv2; // 1 / millisecond
        const double var_Ito__by3 = 0.1 * exp((25.0 + var_chaste_interface__cell__V) / 5.0) / (1.0 + exp((25.0 + var_chaste_interface__cell__V) / 5.0)); // per_ms
        const double d_dt_chaste_interface_var_Ito__zdv = (-var_chaste_interface__Ito__zdv + 1.0) * var_Ito__ay3 - var_Ito__by3 * var_chaste_interface__Ito__zdv; // 1 / millisecond
        const double var_Ito__rv = exp(var_chaste_interface__cell__V / 300.0); // dimensionless
        const double var_Ito2__Ito2_max = (-var_Environment__Cl_o * exp(var_Environment__FonRT * var_chaste_interface__cell__V) + var_chaste_interface__Cl__Cl_i) * var_Environment__F * var_Environment__FonRT * var_Ito2__PCl * var_chaste_interface__cell__V / (-exp(var_Environment__FonRT * var_chaste_interface__cell__V) + 1.0); // uA_per_uF
        const double var_Ito2__Ito2 = var_chaste_interface__Ito2__AA * var_Ito2__Ito2_max; // uA_per_uF
        const double var_cell__a = 0.0011; // cm
        const double var_cell__l = 0.01; // cm
        const double var_cell__ageo = M_PI * pow(var_cell__a, 2) * 2.0 + M_PI * 2.0 * var_cell__a * var_cell__l; // cm2
        const double var_cell__Acap = 2.0 * var_cell__ageo; // uF
        const double var_cell__AF = var_cell__Acap / var_Environment__F; // uF_mole_per_C
        const double var_cell__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__Environment__time)/ HeartConfig::Instance()->GetCapacitance(); // uA_per_uF
        const double var_cell__vcell = M_PI * pow(var_cell__a, 2) * 1000.0 * var_cell__l; // uL
        const double var_cell__vjsr = 0.0048 * var_cell__vcell; // uL
        const double var_cell__vmyo = 0.68 * var_cell__vcell; // uL
        const double var_cell__vnsr = 0.0552 * var_cell__vcell; // uL
        const double d_dt_chaste_interface_var_Ca__Ca_nsr = -var_Iup_Ileak__ileak - var_Idiff_Itr__itr * var_cell__vjsr / var_cell__vnsr + var_Iup_Ileak__iup; // mM / millisecond
        const double var_cell__vss = 0.02 * var_cell__vcell; // uL
        const double d_dt_chaste_interface_var_Ca__Ca_i = ((-var_Iup_Ileak__iup + var_Iup_Ileak__ileak) * var_cell__vnsr / var_cell__vmyo + var_Idiff_Itr__idiff * var_cell__vss / var_cell__vmyo + (-var_ICab__ICab - var_IpCa__IpCa + 2.0 * var_INaCa__INaCa) * var_cell__AF / (2.0 * var_cell__vmyo)) * var_Ca__bmyo; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Ca__Ca_ss = (-var_Idiff_Itr__idiff + var_Irel__irelcicr * var_cell__vjsr / var_cell__vss - var_ICaL__ICaL * var_cell__AF / (2.0 * var_cell__vss)) * var_Ca__bss; // mM / millisecond
        const double var_reversal_potentials__ECl = -log(var_Environment__Cl_o / var_chaste_interface__Cl__Cl_i) / var_Environment__FonRT; // mV
        const double var_IClb__IClb = (-var_reversal_potentials__ECl + var_chaste_interface__cell__V) * var_IClb__GClb; // uA_per_uF
        const double var_cell__clont = 0.5 * var_cell__i_Stim + var_IClb__IClb + var_Ito2__Ito2; // uA_per_uF
        const double var_reversal_potentials__EK = log(var_Environment__K_o / var_chaste_interface__K__K_i) / var_Environment__FonRT; // mV
        const double var_IK1__ak1 = 1.02 / (1.0 + exp((-59.215 - var_reversal_potentials__EK + var_chaste_interface__cell__V) * 0.2385)); // per_ms
        const double var_IK1__bk1 = (0.49124 * exp((-var_reversal_potentials__EK + 5.476 + var_chaste_interface__cell__V) * 0.08032) + 1.0 * exp((-594.31 - var_reversal_potentials__EK + var_chaste_interface__cell__V) * 0.06175)) / (1.0 + exp(-(-var_reversal_potentials__EK + 4.753 + var_chaste_interface__cell__V) * 0.5143)); // per_ms
        const double var_IK1__IK1 = sqrt(var_Environment__K_o / 5.4) * (-var_reversal_potentials__EK + var_chaste_interface__cell__V) * 0.5 * var_IK1__ak1 / (var_IK1__ak1 + var_IK1__bk1); // uA_per_uF
        const double var_IKp__IKp = (-var_reversal_potentials__EK + var_chaste_interface__cell__V) * 0.00276 / (1.0 + exp((-var_chaste_interface__cell__V + 7.488) / 5.98)); // uA_per_uF
        const double var_IKr__IKr = (-var_reversal_potentials__EK + var_chaste_interface__cell__V) * var_IKr__G_Kr_mult * var_IKr__gkr * var_IKr__r * var_chaste_interface__IKr__xr; // uA_per_uF
        const double var_Ito__Ito = pow(var_chaste_interface__Ito__ydv, 3.0) * (-var_reversal_potentials__EK + var_chaste_interface__cell__V) * var_Ito__gitodv * var_Ito__rv * var_chaste_interface__Ito__ydv2 * var_chaste_interface__Ito__zdv; // uA_per_uF
        const double var_K__CTKCl = (-var_reversal_potentials__ECl + var_reversal_potentials__EK) * var_K__CTKClmax / (-var_reversal_potentials__ECl + 87.8251 + var_reversal_potentials__EK); // mM_per_ms
        const double var_reversal_potentials__ENa = log(var_Environment__Na_o / var_chaste_interface__Na__Na_i) / var_Environment__FonRT; // mV
        const double var_INa__INa = (-var_reversal_potentials__ENa + var_chaste_interface__cell__V) * var_INa__G_Na_mult * var_INa__gNa; // uA_per_uF
        const double var_INal__INal = pow(var_chaste_interface__INal__mL, 3.0) * (-var_reversal_potentials__ENa + var_chaste_interface__cell__V) * var_INal__GNaL * var_chaste_interface__INal__hL; // uA_per_uF
        const double var_Na__CTNaCl = pow((-var_reversal_potentials__ECl + var_reversal_potentials__ENa), 4.0) * var_Na__CTNaClmax / (pow((-var_reversal_potentials__ECl + var_reversal_potentials__ENa), 4.0) + pow(87.8251, 4.0)); // mM_per_ms
        const double d_dt_chaste_interface_var_Cl__Cl_i = var_cell__AF * var_cell__clont / var_cell__vmyo + var_K__CTKCl + var_Na__CTNaCl; // mM / millisecond
        const double var_cell__naiont = 3.0 * var_INaCa__INaCa + 3.0 * var_INaK__INaK + var_INa__INa + var_INal__INal; // uA_per_uF
        const double d_dt_chaste_interface_var_Na__Na_i = -var_cell__AF * var_cell__naiont / var_cell__vmyo + var_Na__CTNaCl; // mM / millisecond
        const double var_reversal_potentials__prnak = 0.01833; // dimensionless
        const double var_reversal_potentials__EKs = log((var_Environment__Na_o * var_reversal_potentials__prnak + var_Environment__K_o) / (var_chaste_interface__Na__Na_i * var_reversal_potentials__prnak + var_chaste_interface__K__K_i)) / var_Environment__FonRT; // mV
        const double var_IKs__IKs = (-var_reversal_potentials__EKs + var_chaste_interface__cell__V) * var_IKs__gks * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2; // uA_per_uF
        const double var_cell__kiont = 0.5 * var_cell__i_Stim - 2.0 * var_INaK__INaK + var_IK1__IK1 + var_IKp__IKp + var_IKr__IKr + var_IKs__IKs + var_Ito__Ito; // uA_per_uF
        const double d_dt_chaste_interface_var_K__K_i = -var_cell__AF * var_cell__kiont / var_cell__vmyo + var_K__CTKCl; // mM / millisecond
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_cell__V = 0.0;
        }
        else
        {
            const double var_cell__caiont = -2.0 * var_INaCa__INaCa + var_ICaL__ICaL + var_ICab__ICab + var_IpCa__IpCa; // uA_per_uF
            d_dt_chaste_interface_var_cell__V = -var_cell__caiont - var_cell__clont - var_cell__kiont - var_cell__naiont; // millivolt / millisecond
        }
        
        rDY[0] = d_dt_chaste_interface_var_cell__V;
        rDY[1] = d_dt_chaste_interface_var_Ca__Ca_i;
        rDY[2] = d_dt_chaste_interface_var_INa__H;
        rDY[3] = d_dt_chaste_interface_var_INa__m;
        rDY[4] = d_dt_chaste_interface_var_INa__J;
        rDY[5] = d_dt_chaste_interface_var_ICaL__d;
        rDY[6] = d_dt_chaste_interface_var_ICaL__dp;
        rDY[7] = d_dt_chaste_interface_var_ICaL__f;
        rDY[8] = d_dt_chaste_interface_var_ICaL__fca;
        rDY[9] = d_dt_chaste_interface_var_ICaL__fca2;
        rDY[10] = d_dt_chaste_interface_var_ICaL__f2;
        rDY[11] = d_dt_chaste_interface_var_IKr__xr;
        rDY[12] = d_dt_chaste_interface_var_IKs__xs1;
        rDY[13] = d_dt_chaste_interface_var_IKs__xs2;
        rDY[14] = d_dt_chaste_interface_var_Ito__ydv;
        rDY[15] = d_dt_chaste_interface_var_Ito__ydv2;
        rDY[16] = d_dt_chaste_interface_var_Ito__zdv;
        rDY[17] = d_dt_chaste_interface_var_Ito2__AA;
        rDY[18] = d_dt_chaste_interface_var_INal__mL;
        rDY[19] = d_dt_chaste_interface_var_INal__hL;
        rDY[20] = d_dt_chaste_interface_var_Irel__CaMKtrap;
        rDY[21] = d_dt_chaste_interface_var_Irel__ro;
        rDY[22] = d_dt_chaste_interface_var_Irel__ri;
        rDY[23] = d_dt_chaste_interface_var_Na__Na_i;
        rDY[24] = d_dt_chaste_interface_var_K__K_i;
        rDY[25] = d_dt_chaste_interface_var_Cl__Cl_i;
        rDY[26] = d_dt_chaste_interface_var_Ca__Ca_jsr;
        rDY[27] = d_dt_chaste_interface_var_Ca__Ca_nsr;
        rDY[28] = d_dt_chaste_interface_var_Ca__Ca_ss;
    }

template<>
void OdeSystemInformation<Cellhund_rudy_2004_aFromCellML>::Initialise(void)
{
    this->mSystemName = "hund_rudy_2004";
    this->mFreeVariableName = "ar_Environment__time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-85.781844107117);
    
    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.00012131666);
    
    // rY[2]:
    this->mVariableNames.push_back("ar_INa__H");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.987317750543);
    
    // rY[3]:
    this->mVariableNames.push_back("ar_INa__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.001356538159);
    
    // rY[4]:
    this->mVariableNames.push_back("ar_INa__J");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.991924983076);
    
    // rY[5]:
    this->mVariableNames.push_back("ar_ICaL__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.64013e-06);
    
    // rY[6]:
    this->mVariableNames.push_back("ar_ICaL__dp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.98230672628);
    
    // rY[7]:
    this->mVariableNames.push_back("ar_ICaL__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999961508634);
    
    // rY[8]:
    this->mVariableNames.push_back("ar_ICaL__fca");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.97836624923);
    
    // rY[9]:
    this->mVariableNames.push_back("ar_ICaL__fca2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.893052931249);
    
    // rY[10]:
    this->mVariableNames.push_back("ar_ICaL__f2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.992234519148);
    
    // rY[11]:
    this->mVariableNames.push_back("ar_IKr__xr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(7.24074e-06);
    
    // rY[12]:
    this->mVariableNames.push_back("ar_IKs__xs1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.019883138161);
    
    // rY[13]:
    this->mVariableNames.push_back("ar_IKs__xs2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.019890650554);
    
    // rY[14]:
    this->mVariableNames.push_back("ar_Ito__ydv");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.013970786703);
    
    // rY[15]:
    this->mVariableNames.push_back("ar_Ito__ydv2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99996472752);
    
    // rY[16]:
    this->mVariableNames.push_back("ar_Ito__zdv");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.829206149767);
    
    // rY[17]:
    this->mVariableNames.push_back("ar_Ito2__AA");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000816605172);
    
    // rY[18]:
    this->mVariableNames.push_back("ar_INal__mL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.001356538159);
    
    // rY[19]:
    this->mVariableNames.push_back("ar_INal__hL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.26130711759);
    
    // rY[20]:
    this->mVariableNames.push_back("ar_Irel__CaMKtrap");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.021123704774);
    
    // rY[21]:
    this->mVariableNames.push_back("ar_Irel__ro");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);
    
    // rY[22]:
    this->mVariableNames.push_back("ar_Irel__ri");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.862666650318);
    
    // rY[23]:
    this->mVariableNames.push_back("ar_Na__Na_i");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(12.972433387269);
    
    // rY[24]:
    this->mVariableNames.push_back("ar_K__K_i");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(135.469546216758);
    
    // rY[25]:
    this->mVariableNames.push_back("ar_Cl__Cl_i");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(15.59207157178);
    
    // rY[26]:
    this->mVariableNames.push_back("ar_Ca__Ca_jsr");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(1.737580994071);
    
    // rY[27]:
    this->mVariableNames.push_back("ar_Ca__Ca_nsr");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(1.832822335168);
    
    // rY[28]:
    this->mVariableNames.push_back("ar_Ca__Ca_ss");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.00012271265);
    
    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellhund_rudy_2004_aFromCellML)
