//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: zhang_SAN_model_2000_0D_capable
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on Wed Sep 11 11:27:21 2019
//! 
//! <autogenerated>

#include "zhang_SAN_model_2000_0D_capable.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    Dynamiczhang_SAN_model_2000_0D_capableFromCellML::Dynamiczhang_SAN_model_2000_0D_capableFromCellML(boost::shared_ptr<AbstractIvpOdeSolver> pSolver, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCardiacCell(
                pSolver,
                15,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Dynamiczhang_SAN_model_2000_0D_capableFromCellML>::Instance();
        Init();

    }
    
    Dynamiczhang_SAN_model_2000_0D_capableFromCellML::~Dynamiczhang_SAN_model_2000_0D_capableFromCellML()
    {
    }
    
    double Dynamiczhang_SAN_model_2000_0D_capableFromCellML::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -39.013558536
        double var_chaste_interface__sodium_current_m_gate__m = rY[1];
        // Units: dimensionless; Initial value: 0.092361701692
        double var_chaste_interface__sodium_current_h_gate__h1 = rY[2];
        // Units: dimensionless; Initial value: 0.015905380261
        double var_chaste_interface__sodium_current_h_gate__h2 = rY[3];
        // Units: dimensionless; Initial value: 0.01445216109
        double var_chaste_interface__L_type_Ca_channel_d_gate__d_L = rY[4];
        // Units: dimensionless; Initial value: 0.04804900895
        double var_chaste_interface__L_type_Ca_channel_f_gate__f_L = rY[5];
        // Units: dimensionless; Initial value: 0.48779845203
        double var_chaste_interface__T_type_Ca_channel_d_gate__d_T = rY[6];
        // Units: dimensionless; Initial value: 0.42074047435
        double var_chaste_interface__T_type_Ca_channel_f_gate__f_T = rY[7];
        // Units: dimensionless; Initial value: 0.038968420558
        double var_chaste_interface__four_AP_sensitive_currents_q_gate__q = rY[8];
        // Units: dimensionless; Initial value: 0.29760539675
        double var_chaste_interface__four_AP_sensitive_currents_r_gate__r = rY[9];
        // Units: dimensionless; Initial value: 0.064402950262
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af = rY[10];
        // Units: dimensionless; Initial value: 0.13034201158
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as = rY[11];
        // Units: dimensionless; Initial value: 0.46960956028
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i = rY[12];
        // Units: dimensionless; Initial value: 0.87993375273
        double var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs = rY[13];
        // Units: dimensionless; Initial value: 0.082293827208
        double var_chaste_interface__hyperpolarisation_activated_current_y_gate__y = rY[14];
        // Units: dimensionless; Initial value: 0.03889291759
        
        const double var_membrane__dCell = 0.0; // dimensionless
        const double var_membrane__FCellConstant = 1.0309347; // dimensionless
        const double var_membrane__FCell = (var_membrane__FCellConstant * var_membrane__dCell) / (1.0 + (0.77449999999999997 * exp((-((3.0 * var_membrane__dCell) - 2.0499999999999998)) / 0.29499999999999998))); // dimensionless
        const double var_membrane__R = 8314.0; // millijoule_per_mole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_membrane__F = 96845.0; // coulomb_per_mole
        const double var_membrane__CmPeriphery = 6.4999999999999994e-05; // microF
        const double var_membrane__CmCentre = 2.0000000000000002e-05; // microF
        const double var_membrane__Cm = var_membrane__CmCentre + (var_membrane__FCell * (var_membrane__CmPeriphery - var_membrane__CmCentre)); // microF
        const double var_ionic_concentrations__Na_o = 140.0; // millimolar
        const double var_sodium_current__Na_o = var_ionic_concentrations__Na_o; // millimolar
        const double var_reversal_and_equilibrium_potentials__R = var_membrane__R; // millijoule_per_mole_kelvin
        const double var_reversal_and_equilibrium_potentials__Na_o = var_ionic_concentrations__Na_o; // millimolar
        const double var_reversal_and_equilibrium_potentials__T = var_membrane__T; // kelvin
        const double var_ionic_concentrations__Na_i = 8.0; // millimolar
        const double var_reversal_and_equilibrium_potentials__Na_i = var_ionic_concentrations__Na_i; // millimolar
        const double var_reversal_and_equilibrium_potentials__F = var_membrane__F; // coulomb_per_mole
        const double var_reversal_and_equilibrium_potentials__E_Na = ((var_reversal_and_equilibrium_potentials__R * var_reversal_and_equilibrium_potentials__T) / var_reversal_and_equilibrium_potentials__F) * log(var_reversal_and_equilibrium_potentials__Na_o / var_reversal_and_equilibrium_potentials__Na_i); // millivolt
        const double var_sodium_current__E_Na = var_reversal_and_equilibrium_potentials__E_Na; // millivolt
        const double var_sodium_current__m = var_chaste_interface__sodium_current_m_gate__m; // dimensionless
        const double var_sodium_current__h2 = var_chaste_interface__sodium_current_h_gate__h2; // dimensionless
        const double var_sodium_current_h_gate__h2 = var_sodium_current__h2; // dimensionless
        const double var_sodium_current__h1 = var_chaste_interface__sodium_current_h_gate__h1; // dimensionless
        const double var_sodium_current_h_gate__h1 = var_sodium_current__h1; // dimensionless
        const double var_sodium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_current_h_gate__V = var_sodium_current__V; // millivolt
        const double var_sodium_current_h_gate__F_Na = ((0.095180000000000001 * exp((-0.063060000000000005) * (var_sodium_current_h_gate__V + 34.399999999999999))) / (1.0 + (1.6619999999999999 * exp((-0.22509999999999999) * (var_sodium_current_h_gate__V + 63.700000000000003))))) + 0.086929999999999993; // dimensionless
        const double var_sodium_current_h_gate__h = ((1.0 - var_sodium_current_h_gate__F_Na) * var_sodium_current_h_gate__h1) + (var_sodium_current_h_gate__F_Na * var_sodium_current_h_gate__h2); // dimensionless
        const double var_sodium_current__h = var_sodium_current_h_gate__h; // dimensionless
        const double var_sodium_current__F = var_membrane__F; // coulomb_per_mole
        const double var_sodium_current__FCell = var_membrane__FCell; // dimensionless
        const double var_sodium_current__g_Na_Centre = 0.0; // microlitre_per_second
        const double var_sodium_current__g_Na_Periphery = 1.204e-06; // microlitre_per_second
        const double var_sodium_current__g_Na = var_sodium_current__g_Na_Centre + (var_sodium_current__FCell * (var_sodium_current__g_Na_Periphery - var_sodium_current__g_Na_Centre)); // microlitre_per_second
        const double var_sodium_current__T = var_membrane__T; // kelvin
        const double var_sodium_current__R = var_membrane__R; // millijoule_per_mole_kelvin
        const double var_sodium_current__i_Na = ((((var_sodium_current__g_Na * pow(var_sodium_current__m, 3.0) * var_sodium_current__h * var_sodium_current__Na_o * pow(var_sodium_current__F, 2.0)) / (var_sodium_current__R * var_sodium_current__T)) * (exp(((var_sodium_current__V - var_sodium_current__E_Na) * var_sodium_current__F) / (var_sodium_current__R * var_sodium_current__T)) - 1.0)) / (exp((var_sodium_current__V * var_sodium_current__F) / (var_sodium_current__R * var_sodium_current__T)) - 1.0)) * var_sodium_current__V; // nanoA
        const double var_L_type_Ca_channel__E_Ca_L = 46.399999999999999; // millivolt
        const double var_L_type_Ca_channel__g_Ca_L_Centre = 0.0057938; // microS
        const double var_L_type_Ca_channel__g_Ca_L_Periphery = 0.065886479999999997; // microS
        const double var_L_type_Ca_channel__FCell = var_membrane__FCell; // dimensionless
        const double var_L_type_Ca_channel__g_Ca_L = var_L_type_Ca_channel__g_Ca_L_Centre + (var_L_type_Ca_channel__FCell * (var_L_type_Ca_channel__g_Ca_L_Periphery - var_L_type_Ca_channel__g_Ca_L_Centre)); // microS
        const double var_L_type_Ca_channel__d_L = var_chaste_interface__L_type_Ca_channel_d_gate__d_L; // dimensionless
        const double var_L_type_Ca_channel__f_L = var_chaste_interface__L_type_Ca_channel_f_gate__f_L; // dimensionless
        const double var_L_type_Ca_channel__V = var_chaste_interface__membrane__V; // millivolt
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__g_Ca_L * ((var_L_type_Ca_channel__f_L * var_L_type_Ca_channel__d_L) + (0.0060000000000000001 / (1.0 + exp((-(var_L_type_Ca_channel__V + 14.1)) / 6.0)))) * (var_L_type_Ca_channel__V - var_L_type_Ca_channel__E_Ca_L); // nanoA
        const double var_T_type_Ca_channel__E_Ca_T = 45.0; // millivolt
        const double var_T_type_Ca_channel__g_Ca_T_Centre = 0.0042780600000000002; // microS
        const double var_T_type_Ca_channel__g_Ca_T_Periphery = 0.0138823; // microS
        const double var_T_type_Ca_channel__FCell = var_membrane__FCell; // dimensionless
        const double var_T_type_Ca_channel__g_Ca_T = var_T_type_Ca_channel__g_Ca_T_Centre + (var_T_type_Ca_channel__FCell * (var_T_type_Ca_channel__g_Ca_T_Periphery - var_T_type_Ca_channel__g_Ca_T_Centre)); // microS
        const double var_T_type_Ca_channel__d_T = var_chaste_interface__T_type_Ca_channel_d_gate__d_T; // dimensionless
        const double var_T_type_Ca_channel__V = var_chaste_interface__membrane__V; // millivolt
        const double var_T_type_Ca_channel__f_T = var_chaste_interface__T_type_Ca_channel_f_gate__f_T; // dimensionless
        const double var_T_type_Ca_channel__i_Ca_T = var_T_type_Ca_channel__g_Ca_T * var_T_type_Ca_channel__d_T * var_T_type_Ca_channel__f_T * (var_T_type_Ca_channel__V - var_T_type_Ca_channel__E_Ca_T); // nanoA
        const double var_four_AP_sensitive_currents__g_to_Centre = 0.0049049999999999996; // microS
        const double var_four_AP_sensitive_currents__g_to_Periphery = 0.036495; // microS
        const double var_four_AP_sensitive_currents__FCell = var_membrane__FCell; // dimensionless
        const double var_four_AP_sensitive_currents__g_to = var_four_AP_sensitive_currents__g_to_Centre + (var_four_AP_sensitive_currents__FCell * (var_four_AP_sensitive_currents__g_to_Periphery - var_four_AP_sensitive_currents__g_to_Centre)); // microS
        const double var_four_AP_sensitive_currents__V = var_chaste_interface__membrane__V; // millivolt
        const double var_four_AP_sensitive_currents__q = var_chaste_interface__four_AP_sensitive_currents_q_gate__q; // dimensionless
        const double var_ionic_concentrations__K_o = 5.4000000000000004; // millimolar
        const double var_reversal_and_equilibrium_potentials__K_o = var_ionic_concentrations__K_o; // millimolar
        const double var_ionic_concentrations__K_i = 140.0; // millimolar
        const double var_reversal_and_equilibrium_potentials__K_i = var_ionic_concentrations__K_i; // millimolar
        const double var_reversal_and_equilibrium_potentials__E_K = ((var_reversal_and_equilibrium_potentials__R * var_reversal_and_equilibrium_potentials__T) / var_reversal_and_equilibrium_potentials__F) * log(var_reversal_and_equilibrium_potentials__K_o / var_reversal_and_equilibrium_potentials__K_i); // millivolt
        const double var_four_AP_sensitive_currents__E_K = var_reversal_and_equilibrium_potentials__E_K; // millivolt
        const double var_four_AP_sensitive_currents__r = var_chaste_interface__four_AP_sensitive_currents_r_gate__r; // dimensionless
        const double var_four_AP_sensitive_currents__i_to = var_four_AP_sensitive_currents__g_to * var_four_AP_sensitive_currents__q * var_four_AP_sensitive_currents__r * (var_four_AP_sensitive_currents__V - var_four_AP_sensitive_currents__E_K); // nanoA
        const double var_four_AP_sensitive_currents__g_sus_Centre = 6.6455040000000003e-05; // microS
        const double var_four_AP_sensitive_currents__g_sus_Periphery = 0.01138376; // microS
        const double var_four_AP_sensitive_currents__g_sus = var_four_AP_sensitive_currents__g_sus_Centre + (var_four_AP_sensitive_currents__FCell * (var_four_AP_sensitive_currents__g_sus_Periphery - var_four_AP_sensitive_currents__g_sus_Centre)); // microS
        const double var_four_AP_sensitive_currents__i_sus = var_four_AP_sensitive_currents__g_sus * var_four_AP_sensitive_currents__r * (var_four_AP_sensitive_currents__V - var_four_AP_sensitive_currents__E_K); // nanoA
        const double var_rapid_delayed_rectifying_potassium_current__P_as = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__P_af = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__P_a = (0.59999999999999998 * var_rapid_delayed_rectifying_potassium_current__P_af) + (0.40000000000000002 * var_rapid_delayed_rectifying_potassium_current__P_as); // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__P_i = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_rapid_delayed_rectifying_potassium_current__E_K = var_reversal_and_equilibrium_potentials__E_K; // millivolt
        const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery = 0.016; // microS
        const double var_rapid_delayed_rectifying_potassium_current__FCell = var_membrane__FCell; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre = 0.00079704000000000005; // microS
        const double var_rapid_delayed_rectifying_potassium_current__g_K_r = var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre + (var_rapid_delayed_rectifying_potassium_current__FCell * (var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery - var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre)); // microS
        const double var_rapid_delayed_rectifying_potassium_current__i_K_r = var_rapid_delayed_rectifying_potassium_current__g_K_r * var_rapid_delayed_rectifying_potassium_current__P_a * var_rapid_delayed_rectifying_potassium_current__P_i * (var_rapid_delayed_rectifying_potassium_current__V - var_rapid_delayed_rectifying_potassium_current__E_K); // nanoA
        const double var_slow_delayed_rectifying_potassium_current__xs = var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs; // dimensionless
        const double var_slow_delayed_rectifying_potassium_current__g_K_s_Centre = 0.00034450000000000003; // microS
        const double var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery = 0.0104; // microS
        const double var_slow_delayed_rectifying_potassium_current__FCell = var_membrane__FCell; // dimensionless
        const double var_slow_delayed_rectifying_potassium_current__g_K_s = var_slow_delayed_rectifying_potassium_current__g_K_s_Centre + (var_slow_delayed_rectifying_potassium_current__FCell * (var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery - var_slow_delayed_rectifying_potassium_current__g_K_s_Centre)); // microS
        const double var_slow_delayed_rectifying_potassium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_reversal_and_equilibrium_potentials__E_K_s = ((var_reversal_and_equilibrium_potentials__R * var_reversal_and_equilibrium_potentials__T) / var_reversal_and_equilibrium_potentials__F) * log((var_reversal_and_equilibrium_potentials__K_o + (0.029999999999999999 * var_reversal_and_equilibrium_potentials__Na_o)) / (var_reversal_and_equilibrium_potentials__K_i + (0.029999999999999999 * var_reversal_and_equilibrium_potentials__Na_i))); // millivolt
        const double var_slow_delayed_rectifying_potassium_current__E_K_s = var_reversal_and_equilibrium_potentials__E_K_s; // millivolt
        const double var_slow_delayed_rectifying_potassium_current__i_K_s = var_slow_delayed_rectifying_potassium_current__g_K_s * pow(var_slow_delayed_rectifying_potassium_current__xs, 2.0) * (var_slow_delayed_rectifying_potassium_current__V - var_slow_delayed_rectifying_potassium_current__E_K_s); // nanoA
        const double var_hyperpolarisation_activated_current__FCell = var_membrane__FCell; // dimensionless
        const double var_hyperpolarisation_activated_current__g_f_Na_Periphery = 0.006875; // microS
        const double var_hyperpolarisation_activated_current__g_f_Na_Centre = 0.0005465; // microS
        const double var_hyperpolarisation_activated_current__g_f_Na = var_hyperpolarisation_activated_current__g_f_Na_Centre + (var_hyperpolarisation_activated_current__FCell * (var_hyperpolarisation_activated_current__g_f_Na_Periphery - var_hyperpolarisation_activated_current__g_f_Na_Centre)); // microS
        const double var_hyperpolarisation_activated_current__E_Na = var_reversal_and_equilibrium_potentials__E_Na; // millivolt
        const double var_hyperpolarisation_activated_current__y = var_chaste_interface__hyperpolarisation_activated_current_y_gate__y; // dimensionless
        const double var_hyperpolarisation_activated_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_hyperpolarisation_activated_current__i_f_Na = var_hyperpolarisation_activated_current__g_f_Na * var_hyperpolarisation_activated_current__y * (var_hyperpolarisation_activated_current__V - var_hyperpolarisation_activated_current__E_Na); // nanoA
        const double var_hyperpolarisation_activated_current__E_K = var_reversal_and_equilibrium_potentials__E_K; // millivolt
        const double var_hyperpolarisation_activated_current__g_f_K_Centre = 0.0005465; // microS
        const double var_hyperpolarisation_activated_current__g_f_K_Periphery = 0.006875; // microS
        const double var_hyperpolarisation_activated_current__g_f_K = var_hyperpolarisation_activated_current__g_f_K_Centre + (var_hyperpolarisation_activated_current__FCell * (var_hyperpolarisation_activated_current__g_f_K_Periphery - var_hyperpolarisation_activated_current__g_f_K_Centre)); // microS
        const double var_hyperpolarisation_activated_current__i_f_K = var_hyperpolarisation_activated_current__g_f_K * var_hyperpolarisation_activated_current__y * (var_hyperpolarisation_activated_current__V - var_hyperpolarisation_activated_current__E_K); // nanoA
        const double var_sodium_background_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_background_current__E_Na = var_reversal_and_equilibrium_potentials__E_Na; // millivolt
        const double var_sodium_background_current__g_b_Na_Periphery = 0.00018880000000000001; // microS
        const double var_sodium_background_current__g_b_Na_Centre = 5.8181799999999999e-05; // microS
        const double var_sodium_background_current__FCell = var_membrane__FCell; // dimensionless
        const double var_sodium_background_current__g_b_Na = var_sodium_background_current__g_b_Na_Centre + (var_sodium_background_current__FCell * (var_sodium_background_current__g_b_Na_Periphery - var_sodium_background_current__g_b_Na_Centre)); // microS
        const double var_sodium_background_current__i_b_Na = var_sodium_background_current__g_b_Na * (var_sodium_background_current__V - var_sodium_background_current__E_Na); // nanoA
        const double var_ionic_concentrations__Ca_i = 0.0001; // millimolar
        const double var_reversal_and_equilibrium_potentials__Ca_i = var_ionic_concentrations__Ca_i; // millimolar
        const double var_ionic_concentrations__Ca_o = 2.0; // millimolar
        const double var_reversal_and_equilibrium_potentials__Ca_o = var_ionic_concentrations__Ca_o; // millimolar
        const double var_reversal_and_equilibrium_potentials__E_Ca = ((var_reversal_and_equilibrium_potentials__R * var_reversal_and_equilibrium_potentials__T) / (2.0 * var_reversal_and_equilibrium_potentials__F)) * log(var_reversal_and_equilibrium_potentials__Ca_o / var_reversal_and_equilibrium_potentials__Ca_i); // millivolt
        const double var_calcium_background_current__E_Ca = var_reversal_and_equilibrium_potentials__E_Ca; // millivolt
        const double var_calcium_background_current__g_b_Ca_Periphery = 4.2951999999999998e-05; // microS
        const double var_calcium_background_current__FCell = var_membrane__FCell; // dimensionless
        const double var_calcium_background_current__g_b_Ca_Centre = 1.3236e-05; // microS
        const double var_calcium_background_current__g_b_Ca = var_calcium_background_current__g_b_Ca_Centre + (var_calcium_background_current__FCell * (var_calcium_background_current__g_b_Ca_Periphery - var_calcium_background_current__g_b_Ca_Centre)); // microS
        const double var_calcium_background_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_calcium_background_current__i_b_Ca = var_calcium_background_current__g_b_Ca * (var_calcium_background_current__V - var_calcium_background_current__E_Ca); // nanoA
        const double var_potassium_background_current__E_K = var_reversal_and_equilibrium_potentials__E_K; // millivolt
        const double var_potassium_background_current__g_b_K_Centre = 2.5236359999999998e-05; // microS
        const double var_potassium_background_current__g_b_K_Periphery = 8.1891999999999995e-05; // microS
        const double var_potassium_background_current__FCell = var_membrane__FCell; // dimensionless
        const double var_potassium_background_current__g_b_K = var_potassium_background_current__g_b_K_Centre + (var_potassium_background_current__FCell * (var_potassium_background_current__g_b_K_Periphery - var_potassium_background_current__g_b_K_Centre)); // microS
        const double var_potassium_background_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_potassium_background_current__i_b_K = var_potassium_background_current__g_b_K * (var_potassium_background_current__V - var_potassium_background_current__E_K); // nanoA
        const double var_sodium_calcium_exchanger__gamma_NaCa = 0.5; // dimensionless
        const double var_sodium_calcium_exchanger__d_NaCa = 0.0001; // dimensionless
        const double var_sodium_calcium_exchanger__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_calcium_exchanger__Ca_i = var_ionic_concentrations__Ca_i; // millimolar
        const double var_sodium_calcium_exchanger__Na_i = var_ionic_concentrations__Na_i; // millimolar
        const double var_sodium_calcium_exchanger__Na_o = var_ionic_concentrations__Na_o; // millimolar
        const double var_sodium_calcium_exchanger__Ca_o = var_ionic_concentrations__Ca_o; // millimolar
        const double var_sodium_calcium_exchanger__k_NaCa_Centre = 2.7228999999999998e-06; // nanoA
        const double var_sodium_calcium_exchanger__k_NaCa_Periphery = 8.8358400000000004e-06; // nanoA
        const double var_sodium_calcium_exchanger__FCell = var_membrane__FCell; // dimensionless
        const double var_sodium_calcium_exchanger__k_NaCa = var_sodium_calcium_exchanger__k_NaCa_Centre + (var_sodium_calcium_exchanger__FCell * (var_sodium_calcium_exchanger__k_NaCa_Periphery - var_sodium_calcium_exchanger__k_NaCa_Centre)); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa = (var_sodium_calcium_exchanger__k_NaCa * ((pow(var_sodium_calcium_exchanger__Na_i, 3.0) * var_sodium_calcium_exchanger__Ca_o * exp(0.037429999999999998 * var_sodium_calcium_exchanger__V * var_sodium_calcium_exchanger__gamma_NaCa)) - (pow(var_sodium_calcium_exchanger__Na_o, 3.0) * var_sodium_calcium_exchanger__Ca_i * exp(0.037429999999999998 * var_sodium_calcium_exchanger__V * (var_sodium_calcium_exchanger__gamma_NaCa - 1.0))))) / (1.0 + (var_sodium_calcium_exchanger__d_NaCa * ((var_sodium_calcium_exchanger__Ca_i * pow(var_sodium_calcium_exchanger__Na_o, 3.0)) + (var_sodium_calcium_exchanger__Ca_o * pow(var_sodium_calcium_exchanger__Na_i, 3.0))))); // nanoA
        const double var_sodium_potassium_pump__K_m_Na = 5.6399999999999997; // millimolar
        const double var_sodium_potassium_pump__K_m_K = 0.621; // millimolar
        const double var_sodium_potassium_pump__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_potassium_pump__FCell = var_membrane__FCell; // dimensionless
        const double var_sodium_potassium_pump__i_p_max_Centre = 0.047825449999999999; // nanoA
        const double var_sodium_potassium_pump__i_p_max_Periphery = 0.15519359999999999; // nanoA
        const double var_sodium_potassium_pump__i_p_max = var_sodium_potassium_pump__i_p_max_Centre + (var_sodium_potassium_pump__FCell * (var_sodium_potassium_pump__i_p_max_Periphery - var_sodium_potassium_pump__i_p_max_Centre)); // nanoA
        const double var_sodium_potassium_pump__K_o = var_ionic_concentrations__K_o; // millimolar
        const double var_sodium_potassium_pump__Na_i = var_ionic_concentrations__Na_i; // millimolar
        const double var_sodium_potassium_pump__i_p = (var_sodium_potassium_pump__i_p_max * pow(var_sodium_potassium_pump__Na_i / (var_sodium_potassium_pump__K_m_Na + var_sodium_potassium_pump__Na_i), 3.0) * pow(var_sodium_potassium_pump__K_o / (var_sodium_potassium_pump__K_m_K + var_sodium_potassium_pump__K_o), 2.0) * 1.6000000000000001) / (1.5 + exp((-(var_sodium_potassium_pump__V + 60.0)) / 40.0)); // nanoA
        const double var_persistent_calcium_current__Ca_i = var_ionic_concentrations__Ca_i; // millimolar
        const double var_persistent_calcium_current__FCell = var_membrane__FCell; // dimensionless
        const double var_persistent_calcium_current__i_Ca_p_max_Centre = 0.0; // nanoA
        const double var_persistent_calcium_current__i_Ca_p_max_Periphery = 0.0; // nanoA
        const double var_persistent_calcium_current__i_Ca_p_max = var_persistent_calcium_current__i_Ca_p_max_Centre + (var_persistent_calcium_current__FCell * (var_persistent_calcium_current__i_Ca_p_max_Periphery - var_persistent_calcium_current__i_Ca_p_max_Centre)); // nanoA
        const double var_persistent_calcium_current__i_Ca_p = (var_persistent_calcium_current__i_Ca_p_max * var_persistent_calcium_current__Ca_i) / (var_persistent_calcium_current__Ca_i + 0.00040000000000000002); // nanoA
        const double var_chaste_interface__potassium_background_current__i_b_K = var_potassium_background_current__i_b_K; // nanoA
        const double var_chaste_interface__sodium_current__i_Na = var_sodium_current__i_Na; // nanoA
        const double var_chaste_interface__persistent_calcium_current__i_Ca_p = var_persistent_calcium_current__i_Ca_p; // nanoA
        const double var_chaste_interface__slow_delayed_rectifying_potassium_current__i_K_s = var_slow_delayed_rectifying_potassium_current__i_K_s; // nanoA
        const double var_chaste_interface__sodium_background_current__i_b_Na = var_sodium_background_current__i_b_Na; // nanoA
        const double var_chaste_interface__membrane__Cm = var_membrane__Cm; // microF
        const double var_chaste_interface__four_AP_sensitive_currents__i_sus = var_four_AP_sensitive_currents__i_sus; // nanoA
        const double var_chaste_interface__L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_Ca_L; // nanoA
        const double var_chaste_interface__calcium_background_current__i_b_Ca = var_calcium_background_current__i_b_Ca; // nanoA
        const double var_chaste_interface__hyperpolarisation_activated_current__i_f_Na = var_hyperpolarisation_activated_current__i_f_Na; // nanoA
        const double var_chaste_interface__sodium_calcium_exchanger__i_NaCa = var_sodium_calcium_exchanger__i_NaCa; // nanoA
        const double var_chaste_interface__four_AP_sensitive_currents__i_to = var_four_AP_sensitive_currents__i_to; // nanoA
        const double var_chaste_interface__hyperpolarisation_activated_current__i_f_K = var_hyperpolarisation_activated_current__i_f_K; // nanoA
        const double var_chaste_interface__rapid_delayed_rectifying_potassium_current__i_K_r = var_rapid_delayed_rectifying_potassium_current__i_K_r; // nanoA
        const double var_chaste_interface__sodium_potassium_pump__i_p = var_sodium_potassium_pump__i_p; // nanoA
        const double var_chaste_interface__T_type_Ca_channel__i_Ca_T = var_T_type_Ca_channel__i_Ca_T; // nanoA
        const double var_chaste_interface__i_ionic = 0.001 * (((var_chaste_interface__sodium_current__i_Na + var_chaste_interface__L_type_Ca_channel__i_Ca_L + var_chaste_interface__T_type_Ca_channel__i_Ca_T + var_chaste_interface__four_AP_sensitive_currents__i_to + var_chaste_interface__four_AP_sensitive_currents__i_sus + var_chaste_interface__rapid_delayed_rectifying_potassium_current__i_K_r + var_chaste_interface__slow_delayed_rectifying_potassium_current__i_K_s + var_chaste_interface__hyperpolarisation_activated_current__i_f_Na + var_chaste_interface__hyperpolarisation_activated_current__i_f_K + var_chaste_interface__sodium_background_current__i_b_Na + var_chaste_interface__calcium_background_current__i_b_Ca + var_chaste_interface__potassium_background_current__i_b_K + var_chaste_interface__sodium_calcium_exchanger__i_NaCa + var_chaste_interface__sodium_potassium_pump__i_p + var_chaste_interface__persistent_calcium_current__i_Ca_p) / var_chaste_interface__membrane__Cm) * HeartConfig::Instance()->GetCapacitance()); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Dynamiczhang_SAN_model_2000_0D_capableFromCellML::EvaluateYDerivatives(double var_chaste_interface__environment__time, const std::vector<double>& rY, std::vector<double>& rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -39.013558536
        double var_chaste_interface__sodium_current_m_gate__m = rY[1];
        // Units: dimensionless; Initial value: 0.092361701692
        double var_chaste_interface__sodium_current_h_gate__h1 = rY[2];
        // Units: dimensionless; Initial value: 0.015905380261
        double var_chaste_interface__sodium_current_h_gate__h2 = rY[3];
        // Units: dimensionless; Initial value: 0.01445216109
        double var_chaste_interface__L_type_Ca_channel_d_gate__d_L = rY[4];
        // Units: dimensionless; Initial value: 0.04804900895
        double var_chaste_interface__L_type_Ca_channel_f_gate__f_L = rY[5];
        // Units: dimensionless; Initial value: 0.48779845203
        double var_chaste_interface__T_type_Ca_channel_d_gate__d_T = rY[6];
        // Units: dimensionless; Initial value: 0.42074047435
        double var_chaste_interface__T_type_Ca_channel_f_gate__f_T = rY[7];
        // Units: dimensionless; Initial value: 0.038968420558
        double var_chaste_interface__four_AP_sensitive_currents_q_gate__q = rY[8];
        // Units: dimensionless; Initial value: 0.29760539675
        double var_chaste_interface__four_AP_sensitive_currents_r_gate__r = rY[9];
        // Units: dimensionless; Initial value: 0.064402950262
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af = rY[10];
        // Units: dimensionless; Initial value: 0.13034201158
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as = rY[11];
        // Units: dimensionless; Initial value: 0.46960956028
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i = rY[12];
        // Units: dimensionless; Initial value: 0.87993375273
        double var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs = rY[13];
        // Units: dimensionless; Initial value: 0.082293827208
        double var_chaste_interface__hyperpolarisation_activated_current_y_gate__y = rY[14];
        // Units: dimensionless; Initial value: 0.03889291759
        
        
        // Mathematics
        double d_dt_chaste_interface__membrane__V;
        const double var_membrane__dCell = 0.0; // dimensionless
        const double var_membrane__FCellConstant = 1.0309347; // dimensionless
        const double var_membrane__FCell = (var_membrane__FCellConstant * var_membrane__dCell) / (1.0 + (0.77449999999999997 * exp((-((3.0 * var_membrane__dCell) - 2.0499999999999998)) / 0.29499999999999998))); // dimensionless
        const double var_sodium_current__m = var_chaste_interface__sodium_current_m_gate__m; // dimensionless
        const double var_sodium_current__h2 = var_chaste_interface__sodium_current_h_gate__h2; // dimensionless
        const double var_sodium_current_h_gate__h2 = var_sodium_current__h2; // dimensionless
        const double var_sodium_current__h1 = var_chaste_interface__sodium_current_h_gate__h1; // dimensionless
        const double var_sodium_current_h_gate__h1 = var_sodium_current__h1; // dimensionless
        const double var_sodium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_current_h_gate__V = var_sodium_current__V; // millivolt
        const double var_L_type_Ca_channel__FCell = var_membrane__FCell; // dimensionless
        const double var_L_type_Ca_channel__d_L = var_chaste_interface__L_type_Ca_channel_d_gate__d_L; // dimensionless
        const double var_L_type_Ca_channel__f_L = var_chaste_interface__L_type_Ca_channel_f_gate__f_L; // dimensionless
        const double var_L_type_Ca_channel__V = var_chaste_interface__membrane__V; // millivolt
        const double var_T_type_Ca_channel__FCell = var_membrane__FCell; // dimensionless
        const double var_T_type_Ca_channel__d_T = var_chaste_interface__T_type_Ca_channel_d_gate__d_T; // dimensionless
        const double var_T_type_Ca_channel__V = var_chaste_interface__membrane__V; // millivolt
        const double var_T_type_Ca_channel__f_T = var_chaste_interface__T_type_Ca_channel_f_gate__f_T; // dimensionless
        const double var_four_AP_sensitive_currents__FCell = var_membrane__FCell; // dimensionless
        const double var_four_AP_sensitive_currents__V = var_chaste_interface__membrane__V; // millivolt
        const double var_four_AP_sensitive_currents__q = var_chaste_interface__four_AP_sensitive_currents_q_gate__q; // dimensionless
        const double var_four_AP_sensitive_currents__r = var_chaste_interface__four_AP_sensitive_currents_r_gate__r; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__P_as = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__P_af = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__P_i = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_slow_delayed_rectifying_potassium_current__xs = var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs; // dimensionless
        const double var_slow_delayed_rectifying_potassium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_hyperpolarisation_activated_current__y = var_chaste_interface__hyperpolarisation_activated_current_y_gate__y; // dimensionless
        const double var_hyperpolarisation_activated_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_current_m_gate__V = var_sodium_current__V; // millivolt
        const double var_sodium_current_m_gate__m_infinity = pow(1.0 / (1.0 + exp((-(var_sodium_current_m_gate__V + 30.32)) / 5.46)), 1.0 / 3.0); // dimensionless
        const double var_sodium_current_m_gate__tau_m = (0.00062469999999999995 / ((0.83221659999999997 * exp((-0.33566000000000001) * (var_sodium_current_m_gate__V + 56.706200000000003))) + (0.62739999999999996 * exp(0.082299999999999998 * (var_sodium_current_m_gate__V + 65.013099999999994))))) + 4.5689999999999998e-05; // second
        const double var_sodium_current_m_gate__m = var_sodium_current__m; // dimensionless
        const double var_sodium_current_m_gate__d_m_d_environment__time = (var_sodium_current_m_gate__m_infinity - var_sodium_current_m_gate__m) / var_sodium_current_m_gate__tau_m; // per_second
        const double var_sodium_current__sodium_current_m_gate__d_m_d_environment__time = var_sodium_current_m_gate__d_m_d_environment__time; // per_second
        const double var_sodium_current_h_gate__h1_infinity = 1.0 / (1.0 + exp((var_sodium_current_h_gate__V + 66.099999999999994) / 6.4000000000000004)); // dimensionless
        const double var_sodium_current_h_gate__tau_h1 = ((3.7170000000000002e-06 * exp((-0.28149999999999997) * (var_sodium_current_h_gate__V + 17.109999999999999))) / (1.0 + (0.0037320000000000001 * exp((-0.34260000000000002) * (var_sodium_current_h_gate__V + 37.759999999999998))))) + 0.00059770000000000005; // second
        const double var_sodium_current_h_gate__d_h1_d_environment__time = (var_sodium_current_h_gate__h1_infinity - var_sodium_current_h_gate__h1) / var_sodium_current_h_gate__tau_h1; // per_second
        const double var_sodium_current__sodium_current_h_gate__d_h1_d_environment__time = var_sodium_current_h_gate__d_h1_d_environment__time; // per_second
        const double var_sodium_current_h_gate__tau_h2 = ((3.1860000000000002e-08 * exp((-0.62190000000000001) * (var_sodium_current_h_gate__V + 18.800000000000001))) / (1.0 + (7.1890000000000005e-05 * exp((-0.66830000000000001) * (var_sodium_current_h_gate__V + 34.07))))) + 0.0035560000000000001; // second
        const double var_sodium_current_h_gate__h2_infinity = var_sodium_current_h_gate__h1_infinity; // dimensionless
        const double var_sodium_current_h_gate__d_h2_d_environment__time = (var_sodium_current_h_gate__h2_infinity - var_sodium_current_h_gate__h2) / var_sodium_current_h_gate__tau_h2; // per_second
        const double var_sodium_current__sodium_current_h_gate__d_h2_d_environment__time = var_sodium_current_h_gate__d_h2_d_environment__time; // per_second
        const double var_L_type_Ca_channel_d_gate__V = var_L_type_Ca_channel__V; // millivolt
        const double var_L_type_Ca_channel_d_gate__beta_d_L = (11.43 * (var_L_type_Ca_channel_d_gate__V - 5.0)) / (exp(0.40000000000000002 * (var_L_type_Ca_channel_d_gate__V - 5.0)) - 1.0); // per_second
        const double var_L_type_Ca_channel_d_gate__alpha_d_L = (((-28.390000000000001) * (var_L_type_Ca_channel_d_gate__V + 35.0)) / (exp((-(var_L_type_Ca_channel_d_gate__V + 35.0)) / 2.5) - 1.0)) - ((84.900000000000006 * var_L_type_Ca_channel_d_gate__V) / (exp((-0.20799999999999999) * var_L_type_Ca_channel_d_gate__V) - 1.0)); // per_second
        const double var_L_type_Ca_channel_d_gate__tau_d_L = 2.0 / (var_L_type_Ca_channel_d_gate__alpha_d_L + var_L_type_Ca_channel_d_gate__beta_d_L); // second
        const double var_L_type_Ca_channel_d_gate__d_L = var_L_type_Ca_channel__d_L; // dimensionless
        const double var_L_type_Ca_channel_d_gate__FCell = var_L_type_Ca_channel__FCell; // dimensionless
        const double var_L_type_Ca_channel_d_gate__d_L_infinity = 1.0 / (1.0 + exp((-(var_L_type_Ca_channel_d_gate__V + 22.300000000000001 + (0.80000000000000004 * var_L_type_Ca_channel_d_gate__FCell))) / 6.0)); // dimensionless
        const double var_L_type_Ca_channel_d_gate__d_d_L_d_environment__time = (var_L_type_Ca_channel_d_gate__d_L_infinity - var_L_type_Ca_channel_d_gate__d_L) / var_L_type_Ca_channel_d_gate__tau_d_L; // per_second
        const double var_L_type_Ca_channel__L_type_Ca_channel_d_gate__d_d_L_d_environment__time = var_L_type_Ca_channel_d_gate__d_d_L_d_environment__time; // per_second
        const double var_L_type_Ca_channel_f_gate__FCell = var_L_type_Ca_channel__FCell; // dimensionless
        const double var_L_type_Ca_channel_f_gate__V = var_L_type_Ca_channel__V; // millivolt
        const double var_L_type_Ca_channel_f_gate__alpha_f_L = (3.75 * (var_L_type_Ca_channel_f_gate__V + 28.0)) / (exp((var_L_type_Ca_channel_f_gate__V + 28.0) / 4.0) - 1.0); // per_second
        const double var_L_type_Ca_channel_f_gate__beta_f_L = 30.0 / (1.0 + exp((-(var_L_type_Ca_channel_f_gate__V + 28.0)) / 4.0)); // per_second
        const double var_L_type_Ca_channel_f_gate__tau_f_L = (1.2 - (0.20000000000000001 * var_L_type_Ca_channel_f_gate__FCell)) / (var_L_type_Ca_channel_f_gate__alpha_f_L + var_L_type_Ca_channel_f_gate__beta_f_L); // second
        const double var_L_type_Ca_channel_f_gate__f_L = var_L_type_Ca_channel__f_L; // dimensionless
        const double var_L_type_Ca_channel_f_gate__f_L_infinity = 1.0 / (1.0 + exp((var_L_type_Ca_channel_f_gate__V + 45.0) / 5.0)); // dimensionless
        const double var_L_type_Ca_channel_f_gate__d_f_L_d_environment__time = (var_L_type_Ca_channel_f_gate__f_L_infinity - var_L_type_Ca_channel_f_gate__f_L) / var_L_type_Ca_channel_f_gate__tau_f_L; // per_second
        const double var_L_type_Ca_channel__L_type_Ca_channel_f_gate__d_f_L_d_environment__time = var_L_type_Ca_channel_f_gate__d_f_L_d_environment__time; // per_second
        const double var_T_type_Ca_channel_d_gate__V = var_T_type_Ca_channel__V; // millivolt
        const double var_T_type_Ca_channel_d_gate__beta_d_T = 1068.0 * exp((-(var_T_type_Ca_channel_d_gate__V + 26.300000000000001)) / 30.0); // per_second
        const double var_T_type_Ca_channel_d_gate__alpha_d_T = 1068.0 * exp((var_T_type_Ca_channel_d_gate__V + 26.300000000000001) / 30.0); // per_second
        const double var_T_type_Ca_channel_d_gate__tau_d_T = 1.0 / (var_T_type_Ca_channel_d_gate__alpha_d_T + var_T_type_Ca_channel_d_gate__beta_d_T); // second
        const double var_T_type_Ca_channel_d_gate__d_T = var_T_type_Ca_channel__d_T; // dimensionless
        const double var_T_type_Ca_channel_d_gate__d_T_infinity = 1.0 / (1.0 + exp((-(var_T_type_Ca_channel_d_gate__V + 37.0)) / 6.7999999999999998)); // dimensionless
        const double var_T_type_Ca_channel_d_gate__d_d_T_d_environment__time = (var_T_type_Ca_channel_d_gate__d_T_infinity - var_T_type_Ca_channel_d_gate__d_T) / var_T_type_Ca_channel_d_gate__tau_d_T; // per_second
        const double var_T_type_Ca_channel__T_type_Ca_channel_d_gate__d_d_T_d_environment__time = var_T_type_Ca_channel_d_gate__d_d_T_d_environment__time; // per_second
        const double var_T_type_Ca_channel_f_gate__FCell = var_T_type_Ca_channel__FCell; // dimensionless
        const double var_T_type_Ca_channel_f_gate__V = var_T_type_Ca_channel__V; // millivolt
        const double var_T_type_Ca_channel_f_gate__alpha_f_T = 15.300000000000001 * exp((-(var_T_type_Ca_channel_f_gate__V + 71.0 + (0.69999999999999996 * var_T_type_Ca_channel_f_gate__FCell))) / 83.299999999999997); // per_second
        const double var_T_type_Ca_channel_f_gate__beta_f_T = 15.0 * exp((var_T_type_Ca_channel_f_gate__V + 71.0) / 15.380000000000001); // per_second
        const double var_T_type_Ca_channel_f_gate__tau_f_T = 1.0 / (var_T_type_Ca_channel_f_gate__alpha_f_T + var_T_type_Ca_channel_f_gate__beta_f_T); // second
        const double var_T_type_Ca_channel_f_gate__f_T = var_T_type_Ca_channel__f_T; // dimensionless
        const double var_T_type_Ca_channel_f_gate__f_T_infinity = 1.0 / (1.0 + exp((var_T_type_Ca_channel_f_gate__V + 71.0) / 9.0)); // dimensionless
        const double var_T_type_Ca_channel_f_gate__d_f_T_d_environment__time = (var_T_type_Ca_channel_f_gate__f_T_infinity - var_T_type_Ca_channel_f_gate__f_T) / var_T_type_Ca_channel_f_gate__tau_f_T; // per_second
        const double var_T_type_Ca_channel__T_type_Ca_channel_f_gate__d_f_T_d_environment__time = var_T_type_Ca_channel_f_gate__d_f_T_d_environment__time; // per_second
        const double var_four_AP_sensitive_currents_q_gate__q = var_four_AP_sensitive_currents__q; // dimensionless
        const double var_four_AP_sensitive_currents_q_gate__FCell = var_four_AP_sensitive_currents__FCell; // dimensionless
        const double var_four_AP_sensitive_currents_q_gate__V = var_four_AP_sensitive_currents__V; // millivolt
        const double var_four_AP_sensitive_currents_q_gate__tau_q = (0.001 / 3.0) * (30.309999999999999 + (195.5 / ((0.56859999999999999 * exp((-0.081610000000000002) * (var_four_AP_sensitive_currents_q_gate__V + 39.0 + (10.0 * var_four_AP_sensitive_currents_q_gate__FCell)))) + (0.71740000000000004 * exp((0.27189999999999998 - (0.1719 * var_four_AP_sensitive_currents_q_gate__FCell)) * 1.0 * (var_four_AP_sensitive_currents_q_gate__V + 40.93 + (10.0 * var_four_AP_sensitive_currents_q_gate__FCell))))))); // second
        const double var_four_AP_sensitive_currents_q_gate__q_infinity = 1.0 / (1.0 + exp((var_four_AP_sensitive_currents_q_gate__V + 59.369999999999997) / 13.1)); // dimensionless
        const double var_four_AP_sensitive_currents_q_gate__d_q_d_environment__time = (var_four_AP_sensitive_currents_q_gate__q_infinity - var_four_AP_sensitive_currents_q_gate__q) / var_four_AP_sensitive_currents_q_gate__tau_q; // per_second
        const double var_four_AP_sensitive_currents__four_AP_sensitive_currents_q_gate__d_q_d_environment__time = var_four_AP_sensitive_currents_q_gate__d_q_d_environment__time; // per_second
        const double var_four_AP_sensitive_currents_r_gate__V = var_four_AP_sensitive_currents__V; // millivolt
        const double var_four_AP_sensitive_currents_r_gate__tau_r = 0.0025000000000000001 * (1.1910000000000001 + (7.8380000000000001 / ((1.0369999999999999 * exp(0.090120000000000006 * (var_four_AP_sensitive_currents_r_gate__V + 30.609999999999999))) + (0.36899999999999999 * exp((-0.11899999999999999) * (var_four_AP_sensitive_currents_r_gate__V + 23.84)))))); // second
        const double var_four_AP_sensitive_currents_r_gate__r = var_four_AP_sensitive_currents__r; // dimensionless
        const double var_four_AP_sensitive_currents_r_gate__r_infinity = 1.0 / (1.0 + exp((-(var_four_AP_sensitive_currents_r_gate__V - 10.93)) / 19.699999999999999)); // dimensionless
        const double var_four_AP_sensitive_currents_r_gate__d_r_d_environment__time = (var_four_AP_sensitive_currents_r_gate__r_infinity - var_four_AP_sensitive_currents_r_gate__r) / var_four_AP_sensitive_currents_r_gate__tau_r; // per_second
        const double var_four_AP_sensitive_currents__four_AP_sensitive_currents_r_gate__d_r_d_environment__time = var_four_AP_sensitive_currents_r_gate__d_r_d_environment__time; // per_second
        const double var_rapid_delayed_rectifying_potassium_current_P_af_gate__P_af = var_rapid_delayed_rectifying_potassium_current__P_af; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_af_gate__V = var_rapid_delayed_rectifying_potassium_current__V; // millivolt
        const double var_rapid_delayed_rectifying_potassium_current_P_af_gate__tau_P_af = 1.0 / ((37.200000000000003 * exp((var_rapid_delayed_rectifying_potassium_current_P_af_gate__V - 9.0) / 15.9)) + (0.95999999999999996 * exp((-(var_rapid_delayed_rectifying_potassium_current_P_af_gate__V - 9.0)) / 22.5))); // second
        const double var_rapid_delayed_rectifying_potassium_current_P_af_gate__P_af_infinity = 1.0 / (1.0 + exp((-(var_rapid_delayed_rectifying_potassium_current_P_af_gate__V + 14.199999999999999)) / 10.6)); // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_af_gate__d_P_af_d_environment__time = (var_rapid_delayed_rectifying_potassium_current_P_af_gate__P_af_infinity - var_rapid_delayed_rectifying_potassium_current_P_af_gate__P_af) / var_rapid_delayed_rectifying_potassium_current_P_af_gate__tau_P_af; // per_second
        const double var_rapid_delayed_rectifying_potassium_current__rapid_delayed_rectifying_potassium_current_P_af_gate__d_P_af_d_environment__time = var_rapid_delayed_rectifying_potassium_current_P_af_gate__d_P_af_d_environment__time; // per_second
        const double var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_af_infinity = var_rapid_delayed_rectifying_potassium_current_P_af_gate__P_af_infinity; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_as_infinity = var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_af_infinity; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_as_gate__V = var_rapid_delayed_rectifying_potassium_current__V; // millivolt
        const double var_rapid_delayed_rectifying_potassium_current_P_as_gate__tau_P_as = 1.0 / ((4.2000000000000002 * exp((var_rapid_delayed_rectifying_potassium_current_P_as_gate__V - 9.0) / 17.0)) + (0.14999999999999999 * exp((-(var_rapid_delayed_rectifying_potassium_current_P_as_gate__V - 9.0)) / 21.600000000000001))); // second
        const double var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_as = var_rapid_delayed_rectifying_potassium_current__P_as; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_as_gate__d_P_as_d_environment__time = (var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_as_infinity - var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_as) / var_rapid_delayed_rectifying_potassium_current_P_as_gate__tau_P_as; // per_second
        const double var_rapid_delayed_rectifying_potassium_current__rapid_delayed_rectifying_potassium_current_P_as_gate__d_P_as_d_environment__time = var_rapid_delayed_rectifying_potassium_current_P_as_gate__d_P_as_d_environment__time; // per_second
        const double var_rapid_delayed_rectifying_potassium_current_P_i_gate__tau_P_i = 0.002; // second
        const double var_rapid_delayed_rectifying_potassium_current_P_i_gate__V = var_rapid_delayed_rectifying_potassium_current__V; // millivolt
        const double var_rapid_delayed_rectifying_potassium_current_P_i_gate__P_i_infinity = 1.0 / (1.0 + exp((var_rapid_delayed_rectifying_potassium_current_P_i_gate__V + 18.600000000000001) / 10.1)); // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_i_gate__P_i = var_rapid_delayed_rectifying_potassium_current__P_i; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time = (var_rapid_delayed_rectifying_potassium_current_P_i_gate__P_i_infinity - var_rapid_delayed_rectifying_potassium_current_P_i_gate__P_i) / var_rapid_delayed_rectifying_potassium_current_P_i_gate__tau_P_i; // per_second
        const double var_rapid_delayed_rectifying_potassium_current__rapid_delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time = var_rapid_delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time; // per_second
        const double var_slow_delayed_rectifying_potassium_current_xs_gate__xs = var_slow_delayed_rectifying_potassium_current__xs; // dimensionless
        const double var_slow_delayed_rectifying_potassium_current_xs_gate__V = var_slow_delayed_rectifying_potassium_current__V; // millivolt
        const double var_slow_delayed_rectifying_potassium_current_xs_gate__alpha_xs = 14.0 / (1.0 + exp((-(var_slow_delayed_rectifying_potassium_current_xs_gate__V - 40.0)) / 9.0)); // per_second
        const double var_slow_delayed_rectifying_potassium_current_xs_gate__beta_xs = 1.0 * exp((-var_slow_delayed_rectifying_potassium_current_xs_gate__V) / 45.0); // per_second
        const double var_slow_delayed_rectifying_potassium_current_xs_gate__d_xs_d_environment__time = (var_slow_delayed_rectifying_potassium_current_xs_gate__alpha_xs * (1.0 - var_slow_delayed_rectifying_potassium_current_xs_gate__xs)) - (var_slow_delayed_rectifying_potassium_current_xs_gate__beta_xs * var_slow_delayed_rectifying_potassium_current_xs_gate__xs); // per_second
        const double var_slow_delayed_rectifying_potassium_current__slow_delayed_rectifying_potassium_current_xs_gate__d_xs_d_environment__time = var_slow_delayed_rectifying_potassium_current_xs_gate__d_xs_d_environment__time; // per_second
        const double var_hyperpolarisation_activated_current_y_gate__V = var_hyperpolarisation_activated_current__V; // millivolt
        const double var_hyperpolarisation_activated_current_y_gate__alpha_y = 1.0 * exp((-(var_hyperpolarisation_activated_current_y_gate__V + 78.909999999999997)) / 26.629999999999999); // per_second
        const double var_hyperpolarisation_activated_current_y_gate__y = var_hyperpolarisation_activated_current__y; // dimensionless
        const double var_hyperpolarisation_activated_current_y_gate__beta_y = 1.0 * exp((var_hyperpolarisation_activated_current_y_gate__V + 75.129999999999995) / 21.25); // per_second
        const double var_hyperpolarisation_activated_current_y_gate__d_y_d_environment__time = (var_hyperpolarisation_activated_current_y_gate__alpha_y * (1.0 - var_hyperpolarisation_activated_current_y_gate__y)) - (var_hyperpolarisation_activated_current_y_gate__beta_y * var_hyperpolarisation_activated_current_y_gate__y); // per_second
        const double var_hyperpolarisation_activated_current__hyperpolarisation_activated_current_y_gate__d_y_d_environment__time = var_hyperpolarisation_activated_current_y_gate__d_y_d_environment__time; // per_second
        const double var_chaste_interface__sodium_current_m_gate__d_m_d_environment__time_converter = var_sodium_current__sodium_current_m_gate__d_m_d_environment__time; // per_second
        const double var_chaste_interface__sodium_current_m_gate__d_m_d_environment__time = 0.001 * var_chaste_interface__sodium_current_m_gate__d_m_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__sodium_current_h_gate__d_h1_d_environment__time_converter = var_sodium_current__sodium_current_h_gate__d_h1_d_environment__time; // per_second
        const double var_chaste_interface__sodium_current_h_gate__d_h1_d_environment__time = 0.001 * var_chaste_interface__sodium_current_h_gate__d_h1_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__sodium_current_h_gate__d_h2_d_environment__time_converter = var_sodium_current__sodium_current_h_gate__d_h2_d_environment__time; // per_second
        const double var_chaste_interface__sodium_current_h_gate__d_h2_d_environment__time = 0.001 * var_chaste_interface__sodium_current_h_gate__d_h2_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__L_type_Ca_channel_d_gate__d_d_L_d_environment__time_converter = var_L_type_Ca_channel__L_type_Ca_channel_d_gate__d_d_L_d_environment__time; // per_second
        const double var_chaste_interface__L_type_Ca_channel_d_gate__d_d_L_d_environment__time = 0.001 * var_chaste_interface__L_type_Ca_channel_d_gate__d_d_L_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__L_type_Ca_channel_f_gate__d_f_L_d_environment__time_converter = var_L_type_Ca_channel__L_type_Ca_channel_f_gate__d_f_L_d_environment__time; // per_second
        const double var_chaste_interface__L_type_Ca_channel_f_gate__d_f_L_d_environment__time = 0.001 * var_chaste_interface__L_type_Ca_channel_f_gate__d_f_L_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__T_type_Ca_channel_d_gate__d_d_T_d_environment__time_converter = var_T_type_Ca_channel__T_type_Ca_channel_d_gate__d_d_T_d_environment__time; // per_second
        const double var_chaste_interface__T_type_Ca_channel_d_gate__d_d_T_d_environment__time = 0.001 * var_chaste_interface__T_type_Ca_channel_d_gate__d_d_T_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__T_type_Ca_channel_f_gate__d_f_T_d_environment__time_converter = var_T_type_Ca_channel__T_type_Ca_channel_f_gate__d_f_T_d_environment__time; // per_second
        const double var_chaste_interface__T_type_Ca_channel_f_gate__d_f_T_d_environment__time = 0.001 * var_chaste_interface__T_type_Ca_channel_f_gate__d_f_T_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__four_AP_sensitive_currents_q_gate__d_q_d_environment__time_converter = var_four_AP_sensitive_currents__four_AP_sensitive_currents_q_gate__d_q_d_environment__time; // per_second
        const double var_chaste_interface__four_AP_sensitive_currents_q_gate__d_q_d_environment__time = 0.001 * var_chaste_interface__four_AP_sensitive_currents_q_gate__d_q_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__four_AP_sensitive_currents_r_gate__d_r_d_environment__time_converter = var_four_AP_sensitive_currents__four_AP_sensitive_currents_r_gate__d_r_d_environment__time; // per_second
        const double var_chaste_interface__four_AP_sensitive_currents_r_gate__d_r_d_environment__time = 0.001 * var_chaste_interface__four_AP_sensitive_currents_r_gate__d_r_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__d_P_af_d_environment__time_converter = var_rapid_delayed_rectifying_potassium_current__rapid_delayed_rectifying_potassium_current_P_af_gate__d_P_af_d_environment__time; // per_second
        const double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__d_P_af_d_environment__time = 0.001 * var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__d_P_af_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__d_P_as_d_environment__time_converter = var_rapid_delayed_rectifying_potassium_current__rapid_delayed_rectifying_potassium_current_P_as_gate__d_P_as_d_environment__time; // per_second
        const double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__d_P_as_d_environment__time = 0.001 * var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__d_P_as_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time_converter = var_rapid_delayed_rectifying_potassium_current__rapid_delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time; // per_second
        const double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time = 0.001 * var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__d_xs_d_environment__time_converter = var_slow_delayed_rectifying_potassium_current__slow_delayed_rectifying_potassium_current_xs_gate__d_xs_d_environment__time; // per_second
        const double var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__d_xs_d_environment__time = 0.001 * var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__d_xs_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__hyperpolarisation_activated_current_y_gate__d_y_d_environment__time_converter = var_hyperpolarisation_activated_current__hyperpolarisation_activated_current_y_gate__d_y_d_environment__time; // per_second
        const double var_chaste_interface__hyperpolarisation_activated_current_y_gate__d_y_d_environment__time = 0.001 * var_chaste_interface__hyperpolarisation_activated_current_y_gate__d_y_d_environment__time_converter; // 'per millisecond'
        const double d_dt_chaste_interface__sodium_current_m_gate__m = var_chaste_interface__sodium_current_m_gate__d_m_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__sodium_current_h_gate__h1 = var_chaste_interface__sodium_current_h_gate__d_h1_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__sodium_current_h_gate__h2 = var_chaste_interface__sodium_current_h_gate__d_h2_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__L_type_Ca_channel_d_gate__d_L = var_chaste_interface__L_type_Ca_channel_d_gate__d_d_L_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__L_type_Ca_channel_f_gate__f_L = var_chaste_interface__L_type_Ca_channel_f_gate__d_f_L_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__T_type_Ca_channel_d_gate__d_T = var_chaste_interface__T_type_Ca_channel_d_gate__d_d_T_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__T_type_Ca_channel_f_gate__f_T = var_chaste_interface__T_type_Ca_channel_f_gate__d_f_T_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__four_AP_sensitive_currents_q_gate__q = var_chaste_interface__four_AP_sensitive_currents_q_gate__d_q_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__four_AP_sensitive_currents_r_gate__r = var_chaste_interface__four_AP_sensitive_currents_r_gate__d_r_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__d_P_af_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__d_P_as_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs = var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__d_xs_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__hyperpolarisation_activated_current_y_gate__y = var_chaste_interface__hyperpolarisation_activated_current_y_gate__d_y_d_environment__time; // 'per millisecond'
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__membrane__V = 0.0;
        }
        else
        {
            const double var_membrane__R = 8314.0; // millijoule_per_mole_kelvin
            const double var_membrane__T = 310.0; // kelvin
            const double var_membrane__F = 96845.0; // coulomb_per_mole
            const double var_membrane__CmPeriphery = 6.4999999999999994e-05; // microF
            const double var_membrane__CmCentre = 2.0000000000000002e-05; // microF
            const double var_membrane__Cm = var_membrane__CmCentre + (var_membrane__FCell * (var_membrane__CmPeriphery - var_membrane__CmCentre)); // microF
            const double var_ionic_concentrations__Na_o = 140.0; // millimolar
            const double var_sodium_current__Na_o = var_ionic_concentrations__Na_o; // millimolar
            const double var_reversal_and_equilibrium_potentials__R = var_membrane__R; // millijoule_per_mole_kelvin
            const double var_reversal_and_equilibrium_potentials__Na_o = var_ionic_concentrations__Na_o; // millimolar
            const double var_reversal_and_equilibrium_potentials__T = var_membrane__T; // kelvin
            const double var_ionic_concentrations__Na_i = 8.0; // millimolar
            const double var_reversal_and_equilibrium_potentials__Na_i = var_ionic_concentrations__Na_i; // millimolar
            const double var_reversal_and_equilibrium_potentials__F = var_membrane__F; // coulomb_per_mole
            const double var_reversal_and_equilibrium_potentials__E_Na = ((var_reversal_and_equilibrium_potentials__R * var_reversal_and_equilibrium_potentials__T) / var_reversal_and_equilibrium_potentials__F) * log(var_reversal_and_equilibrium_potentials__Na_o / var_reversal_and_equilibrium_potentials__Na_i); // millivolt
            const double var_sodium_current__E_Na = var_reversal_and_equilibrium_potentials__E_Na; // millivolt
            const double var_sodium_current_h_gate__F_Na = ((0.095180000000000001 * exp((-0.063060000000000005) * (var_sodium_current_h_gate__V + 34.399999999999999))) / (1.0 + (1.6619999999999999 * exp((-0.22509999999999999) * (var_sodium_current_h_gate__V + 63.700000000000003))))) + 0.086929999999999993; // dimensionless
            const double var_sodium_current_h_gate__h = ((1.0 - var_sodium_current_h_gate__F_Na) * var_sodium_current_h_gate__h1) + (var_sodium_current_h_gate__F_Na * var_sodium_current_h_gate__h2); // dimensionless
            const double var_sodium_current__h = var_sodium_current_h_gate__h; // dimensionless
            const double var_sodium_current__F = var_membrane__F; // coulomb_per_mole
            const double var_sodium_current__FCell = var_membrane__FCell; // dimensionless
            const double var_sodium_current__g_Na_Centre = 0.0; // microlitre_per_second
            const double var_sodium_current__g_Na_Periphery = 1.204e-06; // microlitre_per_second
            const double var_sodium_current__g_Na = var_sodium_current__g_Na_Centre + (var_sodium_current__FCell * (var_sodium_current__g_Na_Periphery - var_sodium_current__g_Na_Centre)); // microlitre_per_second
            const double var_sodium_current__T = var_membrane__T; // kelvin
            const double var_sodium_current__R = var_membrane__R; // millijoule_per_mole_kelvin
            const double var_sodium_current__i_Na = ((((var_sodium_current__g_Na * pow(var_sodium_current__m, 3.0) * var_sodium_current__h * var_sodium_current__Na_o * pow(var_sodium_current__F, 2.0)) / (var_sodium_current__R * var_sodium_current__T)) * (exp(((var_sodium_current__V - var_sodium_current__E_Na) * var_sodium_current__F) / (var_sodium_current__R * var_sodium_current__T)) - 1.0)) / (exp((var_sodium_current__V * var_sodium_current__F) / (var_sodium_current__R * var_sodium_current__T)) - 1.0)) * var_sodium_current__V; // nanoA
            const double var_membrane__i_Na = var_sodium_current__i_Na; // nanoA
            const double var_L_type_Ca_channel__E_Ca_L = 46.399999999999999; // millivolt
            const double var_L_type_Ca_channel__g_Ca_L_Centre = 0.0057938; // microS
            const double var_L_type_Ca_channel__g_Ca_L_Periphery = 0.065886479999999997; // microS
            const double var_L_type_Ca_channel__g_Ca_L = var_L_type_Ca_channel__g_Ca_L_Centre + (var_L_type_Ca_channel__FCell * (var_L_type_Ca_channel__g_Ca_L_Periphery - var_L_type_Ca_channel__g_Ca_L_Centre)); // microS
            const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__g_Ca_L * ((var_L_type_Ca_channel__f_L * var_L_type_Ca_channel__d_L) + (0.0060000000000000001 / (1.0 + exp((-(var_L_type_Ca_channel__V + 14.1)) / 6.0)))) * (var_L_type_Ca_channel__V - var_L_type_Ca_channel__E_Ca_L); // nanoA
            const double var_membrane__i_Ca_L = var_L_type_Ca_channel__i_Ca_L; // nanoA
            const double var_T_type_Ca_channel__E_Ca_T = 45.0; // millivolt
            const double var_T_type_Ca_channel__g_Ca_T_Centre = 0.0042780600000000002; // microS
            const double var_T_type_Ca_channel__g_Ca_T_Periphery = 0.0138823; // microS
            const double var_T_type_Ca_channel__g_Ca_T = var_T_type_Ca_channel__g_Ca_T_Centre + (var_T_type_Ca_channel__FCell * (var_T_type_Ca_channel__g_Ca_T_Periphery - var_T_type_Ca_channel__g_Ca_T_Centre)); // microS
            const double var_T_type_Ca_channel__i_Ca_T = var_T_type_Ca_channel__g_Ca_T * var_T_type_Ca_channel__d_T * var_T_type_Ca_channel__f_T * (var_T_type_Ca_channel__V - var_T_type_Ca_channel__E_Ca_T); // nanoA
            const double var_membrane__i_Ca_T = var_T_type_Ca_channel__i_Ca_T; // nanoA
            const double var_four_AP_sensitive_currents__g_to_Centre = 0.0049049999999999996; // microS
            const double var_four_AP_sensitive_currents__g_to_Periphery = 0.036495; // microS
            const double var_four_AP_sensitive_currents__g_to = var_four_AP_sensitive_currents__g_to_Centre + (var_four_AP_sensitive_currents__FCell * (var_four_AP_sensitive_currents__g_to_Periphery - var_four_AP_sensitive_currents__g_to_Centre)); // microS
            const double var_ionic_concentrations__K_o = 5.4000000000000004; // millimolar
            const double var_reversal_and_equilibrium_potentials__K_o = var_ionic_concentrations__K_o; // millimolar
            const double var_ionic_concentrations__K_i = 140.0; // millimolar
            const double var_reversal_and_equilibrium_potentials__K_i = var_ionic_concentrations__K_i; // millimolar
            const double var_reversal_and_equilibrium_potentials__E_K = ((var_reversal_and_equilibrium_potentials__R * var_reversal_and_equilibrium_potentials__T) / var_reversal_and_equilibrium_potentials__F) * log(var_reversal_and_equilibrium_potentials__K_o / var_reversal_and_equilibrium_potentials__K_i); // millivolt
            const double var_four_AP_sensitive_currents__E_K = var_reversal_and_equilibrium_potentials__E_K; // millivolt
            const double var_four_AP_sensitive_currents__i_to = var_four_AP_sensitive_currents__g_to * var_four_AP_sensitive_currents__q * var_four_AP_sensitive_currents__r * (var_four_AP_sensitive_currents__V - var_four_AP_sensitive_currents__E_K); // nanoA
            const double var_membrane__i_to = var_four_AP_sensitive_currents__i_to; // nanoA
            const double var_four_AP_sensitive_currents__g_sus_Centre = 6.6455040000000003e-05; // microS
            const double var_four_AP_sensitive_currents__g_sus_Periphery = 0.01138376; // microS
            const double var_four_AP_sensitive_currents__g_sus = var_four_AP_sensitive_currents__g_sus_Centre + (var_four_AP_sensitive_currents__FCell * (var_four_AP_sensitive_currents__g_sus_Periphery - var_four_AP_sensitive_currents__g_sus_Centre)); // microS
            const double var_four_AP_sensitive_currents__i_sus = var_four_AP_sensitive_currents__g_sus * var_four_AP_sensitive_currents__r * (var_four_AP_sensitive_currents__V - var_four_AP_sensitive_currents__E_K); // nanoA
            const double var_membrane__i_sus = var_four_AP_sensitive_currents__i_sus; // nanoA
            const double var_rapid_delayed_rectifying_potassium_current__P_a = (0.59999999999999998 * var_rapid_delayed_rectifying_potassium_current__P_af) + (0.40000000000000002 * var_rapid_delayed_rectifying_potassium_current__P_as); // dimensionless
            const double var_rapid_delayed_rectifying_potassium_current__E_K = var_reversal_and_equilibrium_potentials__E_K; // millivolt
            const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery = 0.016; // microS
            const double var_rapid_delayed_rectifying_potassium_current__FCell = var_membrane__FCell; // dimensionless
            const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre = 0.00079704000000000005; // microS
            const double var_rapid_delayed_rectifying_potassium_current__g_K_r = var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre + (var_rapid_delayed_rectifying_potassium_current__FCell * (var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery - var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre)); // microS
            const double var_rapid_delayed_rectifying_potassium_current__i_K_r = var_rapid_delayed_rectifying_potassium_current__g_K_r * var_rapid_delayed_rectifying_potassium_current__P_a * var_rapid_delayed_rectifying_potassium_current__P_i * (var_rapid_delayed_rectifying_potassium_current__V - var_rapid_delayed_rectifying_potassium_current__E_K); // nanoA
            const double var_membrane__i_K_r = var_rapid_delayed_rectifying_potassium_current__i_K_r; // nanoA
            const double var_slow_delayed_rectifying_potassium_current__g_K_s_Centre = 0.00034450000000000003; // microS
            const double var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery = 0.0104; // microS
            const double var_slow_delayed_rectifying_potassium_current__FCell = var_membrane__FCell; // dimensionless
            const double var_slow_delayed_rectifying_potassium_current__g_K_s = var_slow_delayed_rectifying_potassium_current__g_K_s_Centre + (var_slow_delayed_rectifying_potassium_current__FCell * (var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery - var_slow_delayed_rectifying_potassium_current__g_K_s_Centre)); // microS
            const double var_reversal_and_equilibrium_potentials__E_K_s = ((var_reversal_and_equilibrium_potentials__R * var_reversal_and_equilibrium_potentials__T) / var_reversal_and_equilibrium_potentials__F) * log((var_reversal_and_equilibrium_potentials__K_o + (0.029999999999999999 * var_reversal_and_equilibrium_potentials__Na_o)) / (var_reversal_and_equilibrium_potentials__K_i + (0.029999999999999999 * var_reversal_and_equilibrium_potentials__Na_i))); // millivolt
            const double var_slow_delayed_rectifying_potassium_current__E_K_s = var_reversal_and_equilibrium_potentials__E_K_s; // millivolt
            const double var_slow_delayed_rectifying_potassium_current__i_K_s = var_slow_delayed_rectifying_potassium_current__g_K_s * pow(var_slow_delayed_rectifying_potassium_current__xs, 2.0) * (var_slow_delayed_rectifying_potassium_current__V - var_slow_delayed_rectifying_potassium_current__E_K_s); // nanoA
            const double var_membrane__i_K_s = var_slow_delayed_rectifying_potassium_current__i_K_s; // nanoA
            const double var_hyperpolarisation_activated_current__FCell = var_membrane__FCell; // dimensionless
            const double var_hyperpolarisation_activated_current__g_f_Na_Periphery = 0.006875; // microS
            const double var_hyperpolarisation_activated_current__g_f_Na_Centre = 0.0005465; // microS
            const double var_hyperpolarisation_activated_current__g_f_Na = var_hyperpolarisation_activated_current__g_f_Na_Centre + (var_hyperpolarisation_activated_current__FCell * (var_hyperpolarisation_activated_current__g_f_Na_Periphery - var_hyperpolarisation_activated_current__g_f_Na_Centre)); // microS
            const double var_hyperpolarisation_activated_current__E_Na = var_reversal_and_equilibrium_potentials__E_Na; // millivolt
            const double var_hyperpolarisation_activated_current__i_f_Na = var_hyperpolarisation_activated_current__g_f_Na * var_hyperpolarisation_activated_current__y * (var_hyperpolarisation_activated_current__V - var_hyperpolarisation_activated_current__E_Na); // nanoA
            const double var_membrane__i_f_Na = var_hyperpolarisation_activated_current__i_f_Na; // nanoA
            const double var_hyperpolarisation_activated_current__E_K = var_reversal_and_equilibrium_potentials__E_K; // millivolt
            const double var_hyperpolarisation_activated_current__g_f_K_Centre = 0.0005465; // microS
            const double var_hyperpolarisation_activated_current__g_f_K_Periphery = 0.006875; // microS
            const double var_hyperpolarisation_activated_current__g_f_K = var_hyperpolarisation_activated_current__g_f_K_Centre + (var_hyperpolarisation_activated_current__FCell * (var_hyperpolarisation_activated_current__g_f_K_Periphery - var_hyperpolarisation_activated_current__g_f_K_Centre)); // microS
            const double var_hyperpolarisation_activated_current__i_f_K = var_hyperpolarisation_activated_current__g_f_K * var_hyperpolarisation_activated_current__y * (var_hyperpolarisation_activated_current__V - var_hyperpolarisation_activated_current__E_K); // nanoA
            const double var_membrane__i_f_K = var_hyperpolarisation_activated_current__i_f_K; // nanoA
            const double var_sodium_background_current__V = var_chaste_interface__membrane__V; // millivolt
            const double var_sodium_background_current__E_Na = var_reversal_and_equilibrium_potentials__E_Na; // millivolt
            const double var_sodium_background_current__g_b_Na_Periphery = 0.00018880000000000001; // microS
            const double var_sodium_background_current__g_b_Na_Centre = 5.8181799999999999e-05; // microS
            const double var_sodium_background_current__FCell = var_membrane__FCell; // dimensionless
            const double var_sodium_background_current__g_b_Na = var_sodium_background_current__g_b_Na_Centre + (var_sodium_background_current__FCell * (var_sodium_background_current__g_b_Na_Periphery - var_sodium_background_current__g_b_Na_Centre)); // microS
            const double var_sodium_background_current__i_b_Na = var_sodium_background_current__g_b_Na * (var_sodium_background_current__V - var_sodium_background_current__E_Na); // nanoA
            const double var_membrane__i_b_Na = var_sodium_background_current__i_b_Na; // nanoA
            const double var_ionic_concentrations__Ca_i = 0.0001; // millimolar
            const double var_reversal_and_equilibrium_potentials__Ca_i = var_ionic_concentrations__Ca_i; // millimolar
            const double var_ionic_concentrations__Ca_o = 2.0; // millimolar
            const double var_reversal_and_equilibrium_potentials__Ca_o = var_ionic_concentrations__Ca_o; // millimolar
            const double var_reversal_and_equilibrium_potentials__E_Ca = ((var_reversal_and_equilibrium_potentials__R * var_reversal_and_equilibrium_potentials__T) / (2.0 * var_reversal_and_equilibrium_potentials__F)) * log(var_reversal_and_equilibrium_potentials__Ca_o / var_reversal_and_equilibrium_potentials__Ca_i); // millivolt
            const double var_calcium_background_current__E_Ca = var_reversal_and_equilibrium_potentials__E_Ca; // millivolt
            const double var_calcium_background_current__g_b_Ca_Periphery = 4.2951999999999998e-05; // microS
            const double var_calcium_background_current__FCell = var_membrane__FCell; // dimensionless
            const double var_calcium_background_current__g_b_Ca_Centre = 1.3236e-05; // microS
            const double var_calcium_background_current__g_b_Ca = var_calcium_background_current__g_b_Ca_Centre + (var_calcium_background_current__FCell * (var_calcium_background_current__g_b_Ca_Periphery - var_calcium_background_current__g_b_Ca_Centre)); // microS
            const double var_calcium_background_current__V = var_chaste_interface__membrane__V; // millivolt
            const double var_calcium_background_current__i_b_Ca = var_calcium_background_current__g_b_Ca * (var_calcium_background_current__V - var_calcium_background_current__E_Ca); // nanoA
            const double var_membrane__i_b_Ca = var_calcium_background_current__i_b_Ca; // nanoA
            const double var_potassium_background_current__E_K = var_reversal_and_equilibrium_potentials__E_K; // millivolt
            const double var_potassium_background_current__g_b_K_Centre = 2.5236359999999998e-05; // microS
            const double var_potassium_background_current__g_b_K_Periphery = 8.1891999999999995e-05; // microS
            const double var_potassium_background_current__FCell = var_membrane__FCell; // dimensionless
            const double var_potassium_background_current__g_b_K = var_potassium_background_current__g_b_K_Centre + (var_potassium_background_current__FCell * (var_potassium_background_current__g_b_K_Periphery - var_potassium_background_current__g_b_K_Centre)); // microS
            const double var_potassium_background_current__V = var_chaste_interface__membrane__V; // millivolt
            const double var_potassium_background_current__i_b_K = var_potassium_background_current__g_b_K * (var_potassium_background_current__V - var_potassium_background_current__E_K); // nanoA
            const double var_membrane__i_b_K = var_potassium_background_current__i_b_K; // nanoA
            const double var_sodium_calcium_exchanger__gamma_NaCa = 0.5; // dimensionless
            const double var_sodium_calcium_exchanger__d_NaCa = 0.0001; // dimensionless
            const double var_sodium_calcium_exchanger__V = var_chaste_interface__membrane__V; // millivolt
            const double var_sodium_calcium_exchanger__Ca_i = var_ionic_concentrations__Ca_i; // millimolar
            const double var_sodium_calcium_exchanger__Na_i = var_ionic_concentrations__Na_i; // millimolar
            const double var_sodium_calcium_exchanger__Na_o = var_ionic_concentrations__Na_o; // millimolar
            const double var_sodium_calcium_exchanger__Ca_o = var_ionic_concentrations__Ca_o; // millimolar
            const double var_sodium_calcium_exchanger__k_NaCa_Centre = 2.7228999999999998e-06; // nanoA
            const double var_sodium_calcium_exchanger__k_NaCa_Periphery = 8.8358400000000004e-06; // nanoA
            const double var_sodium_calcium_exchanger__FCell = var_membrane__FCell; // dimensionless
            const double var_sodium_calcium_exchanger__k_NaCa = var_sodium_calcium_exchanger__k_NaCa_Centre + (var_sodium_calcium_exchanger__FCell * (var_sodium_calcium_exchanger__k_NaCa_Periphery - var_sodium_calcium_exchanger__k_NaCa_Centre)); // nanoA
            const double var_sodium_calcium_exchanger__i_NaCa = (var_sodium_calcium_exchanger__k_NaCa * ((pow(var_sodium_calcium_exchanger__Na_i, 3.0) * var_sodium_calcium_exchanger__Ca_o * exp(0.037429999999999998 * var_sodium_calcium_exchanger__V * var_sodium_calcium_exchanger__gamma_NaCa)) - (pow(var_sodium_calcium_exchanger__Na_o, 3.0) * var_sodium_calcium_exchanger__Ca_i * exp(0.037429999999999998 * var_sodium_calcium_exchanger__V * (var_sodium_calcium_exchanger__gamma_NaCa - 1.0))))) / (1.0 + (var_sodium_calcium_exchanger__d_NaCa * ((var_sodium_calcium_exchanger__Ca_i * pow(var_sodium_calcium_exchanger__Na_o, 3.0)) + (var_sodium_calcium_exchanger__Ca_o * pow(var_sodium_calcium_exchanger__Na_i, 3.0))))); // nanoA
            const double var_membrane__i_NaCa = var_sodium_calcium_exchanger__i_NaCa; // nanoA
            const double var_sodium_potassium_pump__K_m_Na = 5.6399999999999997; // millimolar
            const double var_sodium_potassium_pump__K_m_K = 0.621; // millimolar
            const double var_sodium_potassium_pump__V = var_chaste_interface__membrane__V; // millivolt
            const double var_sodium_potassium_pump__FCell = var_membrane__FCell; // dimensionless
            const double var_sodium_potassium_pump__i_p_max_Centre = 0.047825449999999999; // nanoA
            const double var_sodium_potassium_pump__i_p_max_Periphery = 0.15519359999999999; // nanoA
            const double var_sodium_potassium_pump__i_p_max = var_sodium_potassium_pump__i_p_max_Centre + (var_sodium_potassium_pump__FCell * (var_sodium_potassium_pump__i_p_max_Periphery - var_sodium_potassium_pump__i_p_max_Centre)); // nanoA
            const double var_sodium_potassium_pump__K_o = var_ionic_concentrations__K_o; // millimolar
            const double var_sodium_potassium_pump__Na_i = var_ionic_concentrations__Na_i; // millimolar
            const double var_sodium_potassium_pump__i_p = (var_sodium_potassium_pump__i_p_max * pow(var_sodium_potassium_pump__Na_i / (var_sodium_potassium_pump__K_m_Na + var_sodium_potassium_pump__Na_i), 3.0) * pow(var_sodium_potassium_pump__K_o / (var_sodium_potassium_pump__K_m_K + var_sodium_potassium_pump__K_o), 2.0) * 1.6000000000000001) / (1.5 + exp((-(var_sodium_potassium_pump__V + 60.0)) / 40.0)); // nanoA
            const double var_membrane__i_p = var_sodium_potassium_pump__i_p; // nanoA
            const double var_persistent_calcium_current__Ca_i = var_ionic_concentrations__Ca_i; // millimolar
            const double var_persistent_calcium_current__FCell = var_membrane__FCell; // dimensionless
            const double var_persistent_calcium_current__i_Ca_p_max_Centre = 0.0; // nanoA
            const double var_persistent_calcium_current__i_Ca_p_max_Periphery = 0.0; // nanoA
            const double var_persistent_calcium_current__i_Ca_p_max = var_persistent_calcium_current__i_Ca_p_max_Centre + (var_persistent_calcium_current__FCell * (var_persistent_calcium_current__i_Ca_p_max_Periphery - var_persistent_calcium_current__i_Ca_p_max_Centre)); // nanoA
            const double var_persistent_calcium_current__i_Ca_p = (var_persistent_calcium_current__i_Ca_p_max * var_persistent_calcium_current__Ca_i) / (var_persistent_calcium_current__Ca_i + 0.00040000000000000002); // nanoA
            const double var_membrane__i_Ca_p = var_persistent_calcium_current__i_Ca_p; // nanoA
            const double var_membrane__d_V_d_environment__time = ((-1.0) / var_membrane__Cm) * (var_membrane__i_Na + var_membrane__i_Ca_L + var_membrane__i_Ca_T + var_membrane__i_to + var_membrane__i_sus + var_membrane__i_K_r + var_membrane__i_K_s + var_membrane__i_f_Na + var_membrane__i_f_K + var_membrane__i_b_Na + var_membrane__i_b_Ca + var_membrane__i_b_K + var_membrane__i_NaCa + var_membrane__i_p + var_membrane__i_Ca_p); // 'millivolt per second'
            const double var_chaste_interface__membrane__d_V_d_environment__time_converter = var_membrane__d_V_d_environment__time; // ___units_2
            const double var_chaste_interface__membrane__d_V_d_environment__time = 0.001 * var_chaste_interface__membrane__d_V_d_environment__time_converter; // 'millivolt per millisecond'
            d_dt_chaste_interface__membrane__V = var_chaste_interface__membrane__d_V_d_environment__time; // 'millivolt per millisecond'
        }
        
        rDY[0] = d_dt_chaste_interface__membrane__V;
        rDY[1] = d_dt_chaste_interface__sodium_current_m_gate__m;
        rDY[2] = d_dt_chaste_interface__sodium_current_h_gate__h1;
        rDY[3] = d_dt_chaste_interface__sodium_current_h_gate__h2;
        rDY[4] = d_dt_chaste_interface__L_type_Ca_channel_d_gate__d_L;
        rDY[5] = d_dt_chaste_interface__L_type_Ca_channel_f_gate__f_L;
        rDY[6] = d_dt_chaste_interface__T_type_Ca_channel_d_gate__d_T;
        rDY[7] = d_dt_chaste_interface__T_type_Ca_channel_f_gate__f_T;
        rDY[8] = d_dt_chaste_interface__four_AP_sensitive_currents_q_gate__q;
        rDY[9] = d_dt_chaste_interface__four_AP_sensitive_currents_r_gate__r;
        rDY[10] = d_dt_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af;
        rDY[11] = d_dt_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as;
        rDY[12] = d_dt_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i;
        rDY[13] = d_dt_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs;
        rDY[14] = d_dt_chaste_interface__hyperpolarisation_activated_current_y_gate__y;
    }
    
template<>
void OdeSystemInformation<Dynamiczhang_SAN_model_2000_0D_capableFromCellML>::Initialise(void)
{
    this->mSystemName = "zhang_SAN_model_2000_0D_capable";
    this->mFreeVariableName = "environment__time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-39.013558536);

    // rY[1]:
    this->mVariableNames.push_back("sodium_current_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.092361701692);

    // rY[2]:
    this->mVariableNames.push_back("sodium_current_h_gate__h1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.015905380261);

    // rY[3]:
    this->mVariableNames.push_back("sodium_current_h_gate__h2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.01445216109);

    // rY[4]:
    this->mVariableNames.push_back("L_type_Ca_channel_d_gate__d_L");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.04804900895);

    // rY[5]:
    this->mVariableNames.push_back("L_type_Ca_channel_f_gate__f_L");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.48779845203);

    // rY[6]:
    this->mVariableNames.push_back("T_type_Ca_channel_d_gate__d_T");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.42074047435);

    // rY[7]:
    this->mVariableNames.push_back("T_type_Ca_channel_f_gate__f_T");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.038968420558);

    // rY[8]:
    this->mVariableNames.push_back("four_AP_sensitive_currents_q_gate__q");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.29760539675);

    // rY[9]:
    this->mVariableNames.push_back("four_AP_sensitive_currents_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.064402950262);

    // rY[10]:
    this->mVariableNames.push_back("rapid_delayed_rectifying_potassium_current_P_af_gate__P_af");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.13034201158);

    // rY[11]:
    this->mVariableNames.push_back("rapid_delayed_rectifying_potassium_current_P_as_gate__P_as");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.46960956028);

    // rY[12]:
    this->mVariableNames.push_back("rapid_delayed_rectifying_potassium_current_P_i_gate__P_i");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.87993375273);

    // rY[13]:
    this->mVariableNames.push_back("slow_delayed_rectifying_potassium_current_xs_gate__xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.082293827208);

    // rY[14]:
    this->mVariableNames.push_back("hyperpolarisation_activated_current_y_gate__y");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.03889291759);

    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Dynamiczhang_SAN_model_2000_0D_capableFromCellML)
extern "C"
{
    AbstractCardiacCellInterface* MakeCardiacCell(
            boost::shared_ptr<AbstractIvpOdeSolver> pSolver,
            boost::shared_ptr<AbstractStimulusFunction> pStimulus)
    {
        return new Dynamiczhang_SAN_model_2000_0D_capableFromCellML(pSolver, pStimulus);
    }
    
}

