//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: shannon_2004
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on Wed Sep 11 11:26:11 2019
//! 
//! <autogenerated>

#include "Shannon2004.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    boost::shared_ptr<RegularStimulus> DynamicShannon2004FromCellML::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__cell__stim_start = 100.0; // millisecond
        const double var_chaste_interface__cell__stim_period = 1000.0; // millisecond
        const double var_chaste_interface__cell__stim_duration = 5.0; // millisecond
        const double var_cell__stim_amplitude = 9.5; // microA_per_microF
        const double var_chaste_interface__cell__stim_amplitude_converter = var_cell__stim_amplitude; // microA_per_microF
        const double var_chaste_interface__cell__stim_amplitude = var_chaste_interface__cell__stim_amplitude_converter * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__cell__stim_amplitude),
                var_chaste_interface__cell__stim_duration,
                var_chaste_interface__cell__stim_period,
                var_chaste_interface__cell__stim_start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    double DynamicShannon2004FromCellML::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    
    DynamicShannon2004FromCellML::DynamicShannon2004FromCellML(boost::shared_ptr<AbstractIvpOdeSolver> pSolver, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCardiacCell(
                pSolver,
                39,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<DynamicShannon2004FromCellML>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
    }
    
    DynamicShannon2004FromCellML::~DynamicShannon2004FromCellML()
    {
    }
    
    double DynamicShannon2004FromCellML::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -8.556885e1
        double var_chaste_interface__INa_h_gate__h = rY[2];
        // Units: dimensionless; Initial value: 9.867005e-1
        double var_chaste_interface__INa_j_gate__j = rY[3];
        // Units: dimensionless; Initial value: 9.91562e-1
        double var_chaste_interface__INa_m_gate__m = rY[4];
        // Units: dimensionless; Initial value: 1.405627e-3
        double var_chaste_interface__IKr_Xr_gate__Xr = rY[5];
        // Units: dimensionless; Initial value: 8.641386e-3
        double var_chaste_interface__IKs_Xs_gate__Xs = rY[6];
        // Units: dimensionless; Initial value: 5.412034e-3
        double var_chaste_interface__Itos_X_gate__X_tos = rY[7];
        // Units: dimensionless; Initial value: 4.051574e-3
        double var_chaste_interface__Itos_Y_gate__Y_tos = rY[8];
        // Units: dimensionless; Initial value: 9.945511e-1
        double var_chaste_interface__Itos_R_gate__R_tos = rY[9];
        // Units: dimensionless; Initial value: 0.9946
        double var_chaste_interface__Itof_X_gate__X_tof = rY[10];
        // Units: dimensionless; Initial value: 4.051574e-3
        double var_chaste_interface__Itof_Y_gate__Y_tof = rY[11];
        // Units: dimensionless; Initial value: 9.945511e-1
        double var_chaste_interface__ICaL_d_gate__d = rY[12];
        // Units: dimensionless; Initial value: 7.175662e-6
        double var_chaste_interface__ICaL_f_gate__f = rY[13];
        // Units: dimensionless; Initial value: 1.000681
        double var_chaste_interface__ICaL_fCa_gate__fCaB_SL = rY[14];
        // Units: dimensionless; Initial value: 1.452605e-2
        double var_chaste_interface__ICaL_fCa_gate__fCaB_jct = rY[15];
        // Units: dimensionless; Initial value: 2.421991e-2
        double var_chaste_interface__Na_buffer__Na_SL = rY[19];
        // Units: millimolar; Initial value: 8.80733
        double var_chaste_interface__Na_buffer__Na_jct = rY[20];
        // Units: millimolar; Initial value: 8.80329
        double var_chaste_interface__Na_buffer__Nai = rY[23];
        // Units: millimolar; Initial value: 8.80853
        double var_chaste_interface__Ca_buffer__Ca_SL = rY[25];
        // Units: millimolar; Initial value: 1.031812e-4
        double var_chaste_interface__Ca_buffer__Ca_jct = rY[26];
        // Units: millimolar; Initial value: 1.737475e-4
        
        const double var_INa__V = var_chaste_interface__cell__V; // millivolt
        const double var_reversal_potentials__Na_jct = var_chaste_interface__Na_buffer__Na_jct; // millimolar
        const double var_model_parameters__R = 8314.2999999999993; // joule_per_kilomole_kelvin
        const double var_reversal_potentials__R = var_model_parameters__R; // joule_per_kilomole_kelvin
        const double var_model_parameters__Nao = 140.0; // millimolar
        const double var_reversal_potentials__Nao = var_model_parameters__Nao; // millimolar
        const double var_model_parameters__F = 96485.0; // coulomb_per_mole
        const double var_reversal_potentials__F = var_model_parameters__F; // coulomb_per_mole
        const double var_model_parameters__T = 310.0; // kelvin
        const double var_reversal_potentials__T = var_model_parameters__T; // kelvin
        const double var_reversal_potentials__E_Na_jct = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Nao / var_reversal_potentials__Na_jct); // millivolt
        const double var_INa__E_Na_jct = var_reversal_potentials__E_Na_jct; // millivolt
        const double var_INa__G_INa = 16.0; // milliS_per_microF
        const double var_INa__m = var_chaste_interface__INa_m_gate__m; // dimensionless
        const double var_INa__j = var_chaste_interface__INa_j_gate__j; // dimensionless
        const double var_INa__h = var_chaste_interface__INa_h_gate__h; // dimensionless
        const double var_INa__openProb = pow(var_INa__m, 3.0) * var_INa__h * var_INa__j; // dimensionless
        const double var_INa__Fx_Na_jct = 0.11; // dimensionless
        const double var_INa__i_Na_jct = var_INa__Fx_Na_jct * var_INa__G_INa * var_INa__openProb * (var_INa__V - var_INa__E_Na_jct); // microA_per_microF
        const double var_reversal_potentials__Na_SL = var_chaste_interface__Na_buffer__Na_SL; // millimolar
        const double var_reversal_potentials__E_Na_SL = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Nao / var_reversal_potentials__Na_SL); // millivolt
        const double var_INa__E_Na_SL = var_reversal_potentials__E_Na_SL; // millivolt
        const double var_INa__Fx_Na_SL = 0.89000000000000001; // dimensionless
        const double var_INa__i_Na_SL = var_INa__Fx_Na_SL * var_INa__G_INa * var_INa__openProb * (var_INa__V - var_INa__E_Na_SL); // microA_per_microF
        const double var_INa__i_Na = var_INa__i_Na_jct + var_INa__i_Na_SL; // microA_per_microF
        const double var_INab__Fx_NaBk_jct = 0.11; // dimensionless
        const double var_INab__E_Na_jct = var_reversal_potentials__E_Na_jct; // millivolt
        const double var_INab__G_NaBk = 0.00029700000000000001; // milliS_per_microF
        const double var_INab__V = var_chaste_interface__cell__V; // millivolt
        const double var_INab__i_Nab_jct = var_INab__Fx_NaBk_jct * var_INab__G_NaBk * (var_INab__V - var_INab__E_Na_jct); // microA_per_microF
        const double var_INab__E_Na_SL = var_reversal_potentials__E_Na_SL; // millivolt
        const double var_INab__Fx_NaBk_SL = 0.89000000000000001; // dimensionless
        const double var_INab__i_Nab_SL = var_INab__Fx_NaBk_SL * var_INab__G_NaBk * (var_INab__V - var_INab__E_Na_SL); // microA_per_microF
        const double var_INab__i_Nab = var_INab__i_Nab_jct + var_INab__i_Nab_SL; // microA_per_microF
        const double var_INaK__V = var_chaste_interface__cell__V; // millivolt
        const double var_INaK__F = var_model_parameters__F; // coulomb_per_mole
        const double var_INaK__T = var_model_parameters__T; // kelvin
        const double var_INaK__Nao = var_model_parameters__Nao; // millimolar
        const double var_INaK__sigma = (exp(var_INaK__Nao / 67.299999999999997) - 1.0) / 7.0; // dimensionless
        const double var_INaK__R = var_model_parameters__R; // joule_per_kilomole_kelvin
        const double var_INaK__f_NaK = 1.0 / (1.0 + (0.1245 * exp(((-0.10000000000000001) * var_INaK__V * var_INaK__F) / (var_INaK__R * var_INaK__T))) + (0.036499999999999998 * var_INaK__sigma * exp(((-var_INaK__V) * var_INaK__F) / (var_INaK__R * var_INaK__T)))); // dimensionless
        const double var_INaK__H_NaK = 4.0; // dimensionless
        const double var_model_parameters__Ko = 5.4000000000000004; // millimolar
        const double var_INaK__Ko = var_model_parameters__Ko; // millimolar
        const double var_INaK__Km_Nai = 11.0; // millimolar
        const double var_INaK__Fx_NaK_SL = 0.89000000000000001; // dimensionless
        const double var_INaK__Na_SL = var_chaste_interface__Na_buffer__Na_SL; // millimolar
        const double var_INaK__I_NaK_max = 1.9071899999999999; // microA_per_microF
        const double var_INaK__Km_Ko = 1.5; // millimolar
        const double var_INaK__i_NaK_SL = (((var_INaK__Fx_NaK_SL * var_INaK__I_NaK_max * var_INaK__f_NaK) / (1.0 + pow(var_INaK__Km_Nai / var_INaK__Na_SL, var_INaK__H_NaK))) * var_INaK__Ko) / (var_INaK__Ko + var_INaK__Km_Ko); // microA_per_microF
        const double var_INaK__Fx_NaK_jct = 0.11; // dimensionless
        const double var_INaK__Na_jct = var_chaste_interface__Na_buffer__Na_jct; // millimolar
        const double var_INaK__i_NaK_jct = (((var_INaK__Fx_NaK_jct * var_INaK__I_NaK_max * var_INaK__f_NaK) / (1.0 + pow(var_INaK__Km_Nai / var_INaK__Na_jct, var_INaK__H_NaK))) * var_INaK__Ko) / (var_INaK__Ko + var_INaK__Km_Ko); // microA_per_microF
        const double var_INaK__i_NaK = var_INaK__i_NaK_jct + var_INaK__i_NaK_SL; // microA_per_microF
        const double var_IKr__Xr = var_chaste_interface__IKr_Xr_gate__Xr; // dimensionless
        const double var_IKr__V = var_chaste_interface__cell__V; // millivolt
        const double var_IKr_Rr_gate__V = var_IKr__V; // millivolt
        const double var_IKr_Rr_gate__Rr = 1.0 / (1.0 + exp((33.0 + var_IKr_Rr_gate__V) / 22.399999999999999)); // dimensionless
        const double var_IKr__Rr = var_IKr_Rr_gate__Rr; // dimensionless
        const double var_IKr__G_IKr_const = 0.029999999999999999; // milliS_per_microF
        const double var_IKr__Ko = var_model_parameters__Ko; // millimolar
        const double var_IKr__G_IKr = var_IKr__G_IKr_const * sqrt(var_IKr__Ko / 5.4000000000000004); // milliS_per_microF
        const double var_model_parameters__Ki = 135.0; // millimolar
        const double var_reversal_potentials__Ki = var_model_parameters__Ki; // millimolar
        const double var_reversal_potentials__Ko = var_model_parameters__Ko; // millimolar
        const double var_reversal_potentials__E_K = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Ko / var_reversal_potentials__Ki); // millivolt
        const double var_IKr__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_IKr__i_Kr = var_IKr__G_IKr * var_IKr__Xr * var_IKr__Rr * (var_IKr__V - var_IKr__E_K); // microA_per_microF
        const double var_IKs__Fx_Ks_jct = 0.11; // dimensionless
        const double var_IKs__Xs = var_chaste_interface__IKs_Xs_gate__Xs; // dimensionless
        const double var_IKs__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_IKs__pCa_jct = (-log10(var_IKs__Ca_jct / 1.0)) + 3.0; // dimensionless
        const double var_IKs__G_Ks_Max = 0.070000000000000007; // milliS_per_microF
        const double var_IKs__G_Ks_jct = var_IKs__G_Ks_Max * (0.057000000000000002 + (0.19 / (1.0 + exp(((-7.2000000000000002) + var_IKs__pCa_jct) / 0.59999999999999998)))); // milliS_per_microF
        const double var_IKs__R = var_model_parameters__R; // joule_per_kilomole_kelvin
        const double var_IKs__T = var_model_parameters__T; // kelvin
        const double var_IKs__pKNa = 0.018329999999999999; // dimensionless
        const double var_IKs__F = var_model_parameters__F; // coulomb_per_mole
        const double var_IKs__Nao = var_model_parameters__Nao; // millimolar
        const double var_IKs__Ki = var_model_parameters__Ki; // millimolar
        const double var_IKs__Ko = var_model_parameters__Ko; // millimolar
        const double var_IKs__Nai = var_chaste_interface__Na_buffer__Nai; // millimolar
        const double var_IKs__E_Ks = ((var_IKs__R * var_IKs__T) / var_IKs__F) * log((var_IKs__Ko + (var_IKs__pKNa * var_IKs__Nao)) / (var_IKs__Ki + (var_IKs__pKNa * var_IKs__Nai))); // millivolt
        const double var_IKs__V = var_chaste_interface__cell__V; // millivolt
        const double var_IKs__i_Ks_jct = var_IKs__Fx_Ks_jct * var_IKs__G_Ks_jct * pow(var_IKs__Xs, 2.0) * (var_IKs__V - var_IKs__E_Ks); // microA_per_microF
        const double var_IKs__Fx_Ks_SL = 0.89000000000000001; // dimensionless
        const double var_IKs__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
        const double var_IKs__pCa_SL = (-log10(var_IKs__Ca_SL / 1.0)) + 3.0; // dimensionless
        const double var_IKs__G_Ks_SL = var_IKs__G_Ks_Max * (0.057000000000000002 + (0.19 / (1.0 + exp(((-7.2000000000000002) + var_IKs__pCa_SL) / 0.59999999999999998)))); // milliS_per_microF
        const double var_IKs__i_Ks_SL = var_IKs__Fx_Ks_SL * var_IKs__G_Ks_SL * pow(var_IKs__Xs, 2.0) * (var_IKs__V - var_IKs__E_Ks); // microA_per_microF
        const double var_IKs__i_Ks = var_IKs__i_Ks_jct + var_IKs__i_Ks_SL; // microA_per_microF
        const double var_IKp__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_IKp__g_Kp = 0.001; // milliS_per_microF
        const double var_IKp__V = var_chaste_interface__cell__V; // millivolt
        const double var_IKp__i_Kp = (var_IKp__g_Kp * (var_IKp__V - var_IKp__E_K)) / (1.0 + exp(7.4880000000000004 - (var_IKp__V / 5.9800000000000004))); // microA_per_microF
        const double var_Itos__Y_tos = var_chaste_interface__Itos_Y_gate__Y_tos; // dimensionless
        const double var_Itos__X_tos = var_chaste_interface__Itos_X_gate__X_tos; // dimensionless
        const double var_Itos__R_tos = var_chaste_interface__Itos_R_gate__R_tos; // dimensionless
        const double var_Itos__G_tos = 0.059999999999999998; // milliS_per_microF
        const double var_Itos__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_Itos__V = var_chaste_interface__cell__V; // millivolt
        const double var_Itos__i_tos = var_Itos__G_tos * var_Itos__X_tos * (var_Itos__Y_tos + (0.5 * var_Itos__R_tos)) * (var_Itos__V - var_Itos__E_K); // microA_per_microF
        const double var_Itof__G_tof = 0.02; // milliS_per_microF
        const double var_Itof__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_Itof__X_tof = var_chaste_interface__Itof_X_gate__X_tof; // dimensionless
        const double var_Itof__Y_tof = var_chaste_interface__Itof_Y_gate__Y_tof; // dimensionless
        const double var_Itof__V = var_chaste_interface__cell__V; // millivolt
        const double var_Itof__i_tof = var_Itof__G_tof * var_Itof__X_tof * var_Itof__Y_tof * (var_Itof__V - var_Itof__E_K); // microA_per_microF
        const double var_IK1__V = var_chaste_interface__cell__V; // millivolt
        const double var_IK1_K1_gate__V = var_IK1__V; // millivolt
        const double var_IK1__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_IK1_K1_gate__E_K = var_IK1__E_K; // millivolt
        const double var_IK1_K1_gate__beta_K1 = ((0.49124000000000001 * exp(0.080320000000000003 * ((var_IK1_K1_gate__V - var_IK1_K1_gate__E_K) + 5.476))) + (1.0 * exp(0.061749999999999999 * (var_IK1_K1_gate__V - (var_IK1_K1_gate__E_K + 594.30999999999995))))) / (1.0 + exp((-0.51429999999999998) * ((var_IK1_K1_gate__V - var_IK1_K1_gate__E_K) + 4.7530000000000001))); // per_millisecond
        const double var_IK1_K1_gate__alpha_K1 = 1.02 / (1.0 + exp(0.23849999999999999 * (var_IK1_K1_gate__V - (var_IK1_K1_gate__E_K + 59.215000000000003)))); // per_millisecond
        const double var_IK1_K1_gate__K1_infinity = var_IK1_K1_gate__alpha_K1 / (var_IK1_K1_gate__alpha_K1 + var_IK1_K1_gate__beta_K1); // dimensionless
        const double var_IK1__K1_infinity = var_IK1_K1_gate__K1_infinity; // dimensionless
        const double var_IK1__Ko = var_model_parameters__Ko; // millimolar
        const double var_IK1__G_K1 = 0.90000000000000002 * sqrt(var_IK1__Ko / 5.4000000000000004); // milliS_per_microF
        const double var_IK1__i_K1 = var_IK1__G_K1 * var_IK1__K1_infinity * (var_IK1__V - var_IK1__E_K); // microA_per_microF
        const double var_INaCa__K_mNai = 12.289999999999999; // millimolar
        const double var_INaCa__HNa = 3.0; // dimensionless
        const double var_INaCa__K_mNao = 87.5; // millimolar
        const double var_INaCa__T = var_model_parameters__T; // kelvin
        const double var_model_parameters__Cao = 1.8; // millimolar
        const double var_INaCa__Cao = var_model_parameters__Cao; // millimolar
        const double var_INaCa__V = var_chaste_interface__cell__V; // millivolt
        const double var_INaCa__R = var_model_parameters__R; // joule_per_kilomole_kelvin
        const double var_INaCa__Nao = var_model_parameters__Nao; // millimolar
        const double var_INaCa__eta = 0.34999999999999998; // dimensionless
        const double var_INaCa__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_INaCa__F = var_model_parameters__F; // coulomb_per_mole
        const double var_INaCa__Na_jct = var_chaste_interface__Na_buffer__Na_jct; // millimolar
        const double var_INaCa__ksat = 0.27000000000000002; // dimensionless
        const double var_INaCa__temp_jct = ((exp((var_INaCa__eta * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)) * pow(var_INaCa__Na_jct, var_INaCa__HNa) * var_INaCa__Cao) - (exp(((var_INaCa__eta - 1.0) * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)) * pow(var_INaCa__Nao, var_INaCa__HNa) * var_INaCa__Ca_jct)) / (1.0 + (var_INaCa__ksat * exp(((var_INaCa__eta - 1.0) * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)))); // millimolar4
        const double var_INaCa__K_mCao = 1.3; // millimolar
        const double var_INaCa__V_max = 9.0; // microA_per_microF
        const double var_INaCa__K_mCai = 0.0035899999999999999; // millimolar
        const double var_INaCa__Fx_NCX_jct = 0.11; // dimensionless
        const double var_INaCa__Kd_act = 0.00025599999999999999; // millimolar
        const double var_INaCa__Ka_jct = 1.0 / (1.0 + pow(var_INaCa__Kd_act / var_INaCa__Ca_jct, 3.0)); // dimensionless
        const double var_INaCa__Q10_NCX = 1.5700000000000001; // dimensionless
        const double var_INaCa__Q_NCX = pow(var_INaCa__Q10_NCX, (var_INaCa__T - 310.0) / 10.0); // dimensionless
        const double var_INaCa__i_NaCa_jct = (var_INaCa__Fx_NCX_jct * var_INaCa__V_max * var_INaCa__Ka_jct * var_INaCa__Q_NCX * var_INaCa__temp_jct) / ((var_INaCa__K_mCai * pow(var_INaCa__Nao, var_INaCa__HNa) * (1.0 + pow(var_INaCa__Na_jct / var_INaCa__K_mNai, var_INaCa__HNa))) + (pow(var_INaCa__K_mNao, var_INaCa__HNa) * var_INaCa__Ca_jct * (1.0 + (var_INaCa__Ca_jct / var_INaCa__K_mCai))) + (var_INaCa__K_mCao * pow(var_INaCa__Na_jct, var_INaCa__HNa)) + (pow(var_INaCa__Na_jct, var_INaCa__HNa) * var_INaCa__Cao) + (pow(var_INaCa__Nao, var_INaCa__HNa) * var_INaCa__Ca_jct)); // microA_per_microF
        const double var_INaCa__Fx_NCX_SL = 0.89000000000000001; // dimensionless
        const double var_INaCa__Na_SL = var_chaste_interface__Na_buffer__Na_SL; // millimolar
        const double var_INaCa__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
        const double var_INaCa__temp_SL = ((exp((var_INaCa__eta * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)) * pow(var_INaCa__Na_SL, var_INaCa__HNa) * var_INaCa__Cao) - (exp(((var_INaCa__eta - 1.0) * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)) * pow(var_INaCa__Nao, var_INaCa__HNa) * var_INaCa__Ca_SL)) / (1.0 + (var_INaCa__ksat * exp(((var_INaCa__eta - 1.0) * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)))); // millimolar4
        const double var_INaCa__Ka_SL = 1.0 / (1.0 + pow(var_INaCa__Kd_act / var_INaCa__Ca_SL, 3.0)); // dimensionless
        const double var_INaCa__i_NaCa_SL = (var_INaCa__Fx_NCX_SL * var_INaCa__V_max * var_INaCa__Ka_SL * var_INaCa__Q_NCX * var_INaCa__temp_SL) / ((var_INaCa__K_mCai * pow(var_INaCa__Nao, var_INaCa__HNa) * (1.0 + pow(var_INaCa__Na_SL / var_INaCa__K_mNai, var_INaCa__HNa))) + (pow(var_INaCa__K_mNao, var_INaCa__HNa) * var_INaCa__Ca_SL * (1.0 + (var_INaCa__Ca_SL / var_INaCa__K_mCai))) + (var_INaCa__K_mCao * pow(var_INaCa__Na_SL, var_INaCa__HNa)) + (pow(var_INaCa__Na_SL, var_INaCa__HNa) * var_INaCa__Cao) + (pow(var_INaCa__Nao, var_INaCa__HNa) * var_INaCa__Ca_SL)); // microA_per_microF
        const double var_INaCa__i_NaCa = var_INaCa__i_NaCa_jct + var_INaCa__i_NaCa_SL; // microA_per_microF
        const double var_ICl_Ca__V = var_chaste_interface__cell__V; // millivolt
        const double var_ICl_Ca__G_Cl = 0.109625; // milliS_per_microF
        const double var_ICl_Ca__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_ICl_Ca__Kd_ClCa = 0.10000000000000001; // millimolar
        const double var_ICl_Ca__Fx_Cl_jct = 0.11; // dimensionless
        const double var_model_parameters__Cli = 15.0; // millimolar
        const double var_reversal_potentials__Cli = var_model_parameters__Cli; // millimolar
        const double var_model_parameters__Clo = 150.0; // millimolar
        const double var_reversal_potentials__Clo = var_model_parameters__Clo; // millimolar
        const double var_reversal_potentials__E_Cl = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Cli / var_reversal_potentials__Clo); // millivolt
        const double var_ICl_Ca__E_Cl = var_reversal_potentials__E_Cl; // millivolt
        const double var_ICl_Ca__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
        const double var_ICl_Ca__Fx_Cl_SL = 0.89000000000000001; // dimensionless
        const double var_ICl_Ca__i_Cl_Ca = var_ICl_Ca__G_Cl * (var_ICl_Ca__V - var_ICl_Ca__E_Cl) * ((var_ICl_Ca__Fx_Cl_jct / (1.0 + (var_ICl_Ca__Kd_ClCa / var_ICl_Ca__Ca_jct))) + (var_ICl_Ca__Fx_Cl_SL / (1.0 + (var_ICl_Ca__Kd_ClCa / var_ICl_Ca__Ca_SL)))); // microA_per_microF
        const double var_IClb__V = var_chaste_interface__cell__V; // millivolt
        const double var_IClb__G_ClBk = 0.0089999999999999993; // milliS_per_microF
        const double var_IClb__E_Cl = var_reversal_potentials__E_Cl; // millivolt
        const double var_IClb__i_Clb = var_IClb__G_ClBk * (var_IClb__V - var_IClb__E_Cl); // microA_per_microF
        const double var_ICaL__T = var_model_parameters__T; // kelvin
        const double var_ICaL__V = var_chaste_interface__cell__V; // millivolt
        const double var_ICaL__Nao = var_model_parameters__Nao; // millimolar
        const double var_ICaL__Fx_ICaL_SL = 0.10000000000000001; // dimensionless
        const double var_ICaL__R = var_model_parameters__R; // joule_per_kilomole_kelvin
        const double var_ICaL__Na_SL = var_chaste_interface__Na_buffer__Na_SL; // millimolar
        const double var_ICaL__d = var_chaste_interface__ICaL_d_gate__d; // dimensionless
        const double var_ICaL__f = var_chaste_interface__ICaL_f_gate__f; // dimensionless
        const double var_ICaL__Q10_CaL = 1.8; // dimensionless
        const double var_ICaL__Q_CaL = pow(var_ICaL__Q10_CaL, (var_ICaL__T - 310.0) / 10.0); // dimensionless
        const double var_ICaL__F = var_model_parameters__F; // coulomb_per_mole
        const double var_ICaL__temp = (0.45000000000000001 * var_ICaL__d * var_ICaL__f * var_ICaL__Q_CaL * var_ICaL__V * pow(var_ICaL__F, 2.0)) / (var_ICaL__R * var_ICaL__T); // coulomb_per_mole
        const double var_ICaL__gamma_Nao = 0.75; // dimensionless
        const double var_ICaL__gamma_Nai = 0.75; // dimensionless
        const double var_ICaL__fCaB_SL = var_chaste_interface__ICaL_fCa_gate__fCaB_SL; // dimensionless
        const double var_ICaL_fCa_gate__fCaB_SL = var_ICaL__fCaB_SL; // dimensionless
        const double var_ICaL_fCa_gate__fCa_SL = 1.0 - var_ICaL_fCa_gate__fCaB_SL; // dimensionless
        const double var_ICaL__fCa_SL = var_ICaL_fCa_gate__fCa_SL; // dimensionless
        const double var_ICaL__PNa = 1.4999999999999999e-08; // litre_per_farad_millisecond
        const double var_ICaL__i_CaL_Na_SL = (var_ICaL__temp * var_ICaL__fCa_SL * var_ICaL__Fx_ICaL_SL * var_ICaL__PNa * ((var_ICaL__gamma_Nai * var_ICaL__Na_SL * exp((var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T))) - (var_ICaL__gamma_Nao * var_ICaL__Nao))) / (exp((var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T)) - 1.0); // microA_per_microF
        const double var_ICaL__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
        const double var_ICaL__gamma_Cao = 0.34100000000000003; // dimensionless
        const double var_ICaL__gamma_Cai = 0.34100000000000003; // dimensionless
        const double var_ICaL__Cao = var_model_parameters__Cao; // millimolar
        const double var_ICaL__PCa = 0.00054000000000000001; // litre_per_farad_millisecond
        const double var_ICaL__i_CaL_Ca_SL = (var_ICaL__temp * var_ICaL__fCa_SL * var_ICaL__Fx_ICaL_SL * var_ICaL__PCa * 4.0 * ((var_ICaL__gamma_Cai * var_ICaL__Ca_SL * exp((2.0 * var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T))) - (var_ICaL__gamma_Cao * var_ICaL__Cao))) / (exp((2.0 * var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T)) - 1.0); // microA_per_microF
        const double var_ICaL__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_ICaL__fCaB_jct = var_chaste_interface__ICaL_fCa_gate__fCaB_jct; // dimensionless
        const double var_ICaL_fCa_gate__fCaB_jct = var_ICaL__fCaB_jct; // dimensionless
        const double var_ICaL_fCa_gate__fCa_jct = 1.0 - var_ICaL_fCa_gate__fCaB_jct; // dimensionless
        const double var_ICaL__fCa_jct = var_ICaL_fCa_gate__fCa_jct; // dimensionless
        const double var_ICaL__Fx_ICaL_jct = 0.90000000000000002; // dimensionless
        const double var_ICaL__i_CaL_Ca_jct = (var_ICaL__temp * var_ICaL__fCa_jct * var_ICaL__Fx_ICaL_jct * var_ICaL__PCa * 4.0 * ((var_ICaL__gamma_Cai * var_ICaL__Ca_jct * exp((2.0 * var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T))) - (var_ICaL__gamma_Cao * var_ICaL__Cao))) / (exp((2.0 * var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T)) - 1.0); // microA_per_microF
        const double var_ICaL__Na_jct = var_chaste_interface__Na_buffer__Na_jct; // millimolar
        const double var_ICaL__i_CaL_Na_jct = (var_ICaL__temp * var_ICaL__fCa_jct * var_ICaL__Fx_ICaL_jct * var_ICaL__PNa * ((var_ICaL__gamma_Nai * var_ICaL__Na_jct * exp((var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T))) - (var_ICaL__gamma_Nao * var_ICaL__Nao))) / (exp((var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T)) - 1.0); // microA_per_microF
        const double var_ICaL__Ki = var_model_parameters__Ki; // millimolar
        const double var_ICaL__PK = 2.7000000000000001e-07; // litre_per_farad_millisecond
        const double var_ICaL__Ko = var_model_parameters__Ko; // millimolar
        const double var_ICaL__gamma_Ko = 0.75; // dimensionless
        const double var_ICaL__gamma_Ki = 0.75; // dimensionless
        const double var_ICaL__i_CaL_K = (var_ICaL__temp * ((var_ICaL__fCa_SL * var_ICaL__Fx_ICaL_SL) + (var_ICaL__fCa_jct * var_ICaL__Fx_ICaL_jct)) * var_ICaL__PK * ((var_ICaL__gamma_Ki * var_ICaL__Ki * exp((var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T))) - (var_ICaL__gamma_Ko * var_ICaL__Ko))) / (exp((var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T)) - 1.0); // microA_per_microF
        const double var_ICaL__i_CaL = var_ICaL__i_CaL_Ca_SL + var_ICaL__i_CaL_Ca_jct + var_ICaL__i_CaL_Na_SL + var_ICaL__i_CaL_Na_jct + var_ICaL__i_CaL_K; // microA_per_microF
        const double var_ICab__G_CaBk = 0.00025129999999999998; // milliS_per_microF
        const double var_ICab__V = var_chaste_interface__cell__V; // millivolt
        const double var_ICab__Fx_CaBk_SL = 0.89000000000000001; // dimensionless
        const double var_reversal_potentials__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
        const double var_reversal_potentials__Cao = var_model_parameters__Cao; // millimolar
        const double var_reversal_potentials__E_Ca_SL = ((var_reversal_potentials__R * var_reversal_potentials__T) / (2.0 * var_reversal_potentials__F)) * log(var_reversal_potentials__Cao / var_reversal_potentials__Ca_SL); // millivolt
        const double var_ICab__E_Ca_SL = var_reversal_potentials__E_Ca_SL; // millivolt
        const double var_ICab__i_Cab_SL = var_ICab__G_CaBk * var_ICab__Fx_CaBk_SL * (var_ICab__V - var_ICab__E_Ca_SL); // microA_per_microF
        const double var_ICab__Fx_CaBk_jct = 0.11; // dimensionless
        const double var_reversal_potentials__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_reversal_potentials__E_Ca_jct = ((var_reversal_potentials__R * var_reversal_potentials__T) / (2.0 * var_reversal_potentials__F)) * log(var_reversal_potentials__Cao / var_reversal_potentials__Ca_jct); // millivolt
        const double var_ICab__E_Ca_jct = var_reversal_potentials__E_Ca_jct; // millivolt
        const double var_ICab__i_Cab_jct = var_ICab__G_CaBk * var_ICab__Fx_CaBk_jct * (var_ICab__V - var_ICab__E_Ca_jct); // microA_per_microF
        const double var_ICab__i_Cab = var_ICab__i_Cab_SL + var_ICab__i_Cab_jct; // microA_per_microF
        const double var_ICap__H = 1.6000000000000001; // dimensionless
        const double var_ICap__Fx_SLCaP_SL = 0.89000000000000001; // dimensionless
        const double var_ICap__Km = 0.00050000000000000001; // millimolar
        const double var_ICap__V_maxAF = 0.067299999999999999; // microA_per_microF
        const double var_ICap__Q10_SLCaP = 2.3500000000000001; // dimensionless
        const double var_ICap__T = var_model_parameters__T; // kelvin
        const double var_ICap__Q_SLCaP = pow(var_ICap__Q10_SLCaP, (var_ICap__T - 310.0) / 10.0); // dimensionless
        const double var_ICap__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
        const double var_ICap__i_Cap_SL = (var_ICap__Q_SLCaP * var_ICap__V_maxAF * var_ICap__Fx_SLCaP_SL) / (1.0 + pow(var_ICap__Km / var_ICap__Ca_SL, var_ICap__H)); // microA_per_microF
        const double var_ICap__Fx_SLCaP_jct = 0.11; // dimensionless
        const double var_ICap__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_ICap__i_Cap_jct = (var_ICap__Q_SLCaP * var_ICap__V_maxAF * var_ICap__Fx_SLCaP_jct) / (1.0 + pow(var_ICap__Km / var_ICap__Ca_jct, var_ICap__H)); // microA_per_microF
        const double var_ICap__i_Cap = var_ICap__i_Cap_jct + var_ICap__i_Cap_SL; // microA_per_microF
        const double var_chaste_interface__ICab__i_Cab = var_ICab__i_Cab; // microA_per_microF
        const double var_chaste_interface__IKp__i_Kp = var_IKp__i_Kp; // microA_per_microF
        const double var_chaste_interface__INab__i_Nab = var_INab__i_Nab; // microA_per_microF
        const double var_chaste_interface__Itos__i_tos = var_Itos__i_tos; // microA_per_microF
        const double var_chaste_interface__ICap__i_Cap = var_ICap__i_Cap; // microA_per_microF
        const double var_chaste_interface__INa__i_Na = var_INa__i_Na; // microA_per_microF
        const double var_chaste_interface__ICaL__i_CaL = var_ICaL__i_CaL; // microA_per_microF
        const double var_chaste_interface__IClb__i_Clb = var_IClb__i_Clb; // microA_per_microF
        const double var_chaste_interface__INaK__i_NaK = var_INaK__i_NaK; // microA_per_microF
        const double var_chaste_interface__IKr__i_Kr = var_IKr__i_Kr; // microA_per_microF
        const double var_chaste_interface__IK1__i_K1 = var_IK1__i_K1; // microA_per_microF
        const double var_chaste_interface__IKs__i_Ks = var_IKs__i_Ks; // microA_per_microF
        const double var_chaste_interface__INaCa__i_NaCa = var_INaCa__i_NaCa; // microA_per_microF
        const double var_chaste_interface__ICl_Ca__i_Cl_Ca = var_ICl_Ca__i_Cl_Ca; // microA_per_microF
        const double var_chaste_interface__Itof__i_tof = var_Itof__i_tof; // microA_per_microF
        const double var_chaste_interface__i_ionic = (var_chaste_interface__INa__i_Na + var_chaste_interface__INab__i_Nab + var_chaste_interface__INaK__i_NaK + var_chaste_interface__IKr__i_Kr + var_chaste_interface__IKs__i_Ks + var_chaste_interface__Itos__i_tos + var_chaste_interface__Itof__i_tof + var_chaste_interface__IK1__i_K1 + var_chaste_interface__INaCa__i_NaCa + var_chaste_interface__ICl_Ca__i_Cl_Ca + var_chaste_interface__IClb__i_Clb + var_chaste_interface__ICaL__i_CaL + var_chaste_interface__ICab__i_Cab + var_chaste_interface__ICap__i_Cap + var_chaste_interface__IKp__i_Kp) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void DynamicShannon2004FromCellML::EvaluateYDerivatives(double var_chaste_interface__environment__time, const std::vector<double>& rY, std::vector<double>& rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -8.556885e1
        double var_chaste_interface__Ca_buffer__Cai = rY[1];
        // Units: millimolar; Initial value: 8.597401e-5
        double var_chaste_interface__INa_h_gate__h = rY[2];
        // Units: dimensionless; Initial value: 9.867005e-1
        double var_chaste_interface__INa_j_gate__j = rY[3];
        // Units: dimensionless; Initial value: 9.91562e-1
        double var_chaste_interface__INa_m_gate__m = rY[4];
        // Units: dimensionless; Initial value: 1.405627e-3
        double var_chaste_interface__IKr_Xr_gate__Xr = rY[5];
        // Units: dimensionless; Initial value: 8.641386e-3
        double var_chaste_interface__IKs_Xs_gate__Xs = rY[6];
        // Units: dimensionless; Initial value: 5.412034e-3
        double var_chaste_interface__Itos_X_gate__X_tos = rY[7];
        // Units: dimensionless; Initial value: 4.051574e-3
        double var_chaste_interface__Itos_Y_gate__Y_tos = rY[8];
        // Units: dimensionless; Initial value: 9.945511e-1
        double var_chaste_interface__Itos_R_gate__R_tos = rY[9];
        // Units: dimensionless; Initial value: 0.9946
        double var_chaste_interface__Itof_X_gate__X_tof = rY[10];
        // Units: dimensionless; Initial value: 4.051574e-3
        double var_chaste_interface__Itof_Y_gate__Y_tof = rY[11];
        // Units: dimensionless; Initial value: 9.945511e-1
        double var_chaste_interface__ICaL_d_gate__d = rY[12];
        // Units: dimensionless; Initial value: 7.175662e-6
        double var_chaste_interface__ICaL_f_gate__f = rY[13];
        // Units: dimensionless; Initial value: 1.000681
        double var_chaste_interface__ICaL_fCa_gate__fCaB_SL = rY[14];
        // Units: dimensionless; Initial value: 1.452605e-2
        double var_chaste_interface__ICaL_fCa_gate__fCaB_jct = rY[15];
        // Units: dimensionless; Initial value: 2.421991e-2
        double var_chaste_interface__Jrel_SR__R = rY[16];
        // Units: dimensionless; Initial value: 8.884332e-1
        double var_chaste_interface__Jrel_SR__I = rY[17];
        // Units: dimensionless; Initial value: 1.024274e-7
        double var_chaste_interface__Jrel_SR__O = rY[18];
        // Units: dimensionless; Initial value: 8.156628e-7
        double var_chaste_interface__Na_buffer__Na_SL = rY[19];
        // Units: millimolar; Initial value: 8.80733
        double var_chaste_interface__Na_buffer__Na_jct = rY[20];
        // Units: millimolar; Initial value: 8.80329
        double var_chaste_interface__Na_buffer__Na_SL_buf = rY[21];
        // Units: millimolar; Initial value: 7.720854e-1
        double var_chaste_interface__Na_buffer__Na_jct_buf = rY[22];
        // Units: millimolar; Initial value: 3.539892
        double var_chaste_interface__Na_buffer__Nai = rY[23];
        // Units: millimolar; Initial value: 8.80853
        double var_chaste_interface__Ca_buffer__Ca_SR = rY[24];
        // Units: millimolar; Initial value: 5.545201e-1
        double var_chaste_interface__Ca_buffer__Ca_SL = rY[25];
        // Units: millimolar; Initial value: 1.031812e-4
        double var_chaste_interface__Ca_buffer__Ca_jct = rY[26];
        // Units: millimolar; Initial value: 1.737475e-4
        double var_chaste_interface__Ca_buffer__Ca_SLB_SL = rY[27];
        // Units: millimolar; Initial value: 1.110363e-1
        double var_chaste_interface__Ca_buffer__Ca_SLB_jct = rY[28];
        // Units: millimolar; Initial value: 9.566355e-3
        double var_chaste_interface__Ca_buffer__Ca_SLHigh_SL = rY[29];
        // Units: millimolar; Initial value: 7.297378e-2
        double var_chaste_interface__Ca_buffer__Ca_SLHigh_jct = rY[30];
        // Units: millimolar; Initial value: 7.347888e-3
        double var_chaste_interface__Ca_buffer__Ca_Calsequestrin = rY[31];
        // Units: millimolar; Initial value: 1.242988
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC = rY[32];
        // Units: millimolar; Initial value: 8.773191e-3
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg = rY[33];
        // Units: millimolar; Initial value: 1.078283e-1
        double var_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg = rY[34];
        // Units: millimolar; Initial value: 1.524002e-2
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_Calmodulin = rY[35];
        // Units: millimolar; Initial value: 2.911916e-4
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin = rY[36];
        // Units: millimolar; Initial value: 1.298754e-3
        double var_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin = rY[37];
        // Units: millimolar; Initial value: 1.381982e-1
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_SRB = rY[38];
        // Units: millimolar; Initial value: 2.143165e-3
        
        
        // Mathematics
        double d_dt_chaste_interface__cell__V;
        const double var_INa__V = var_chaste_interface__cell__V; // millivolt
        const double var_reversal_potentials__Na_jct = var_chaste_interface__Na_buffer__Na_jct; // millimolar
        const double var_model_parameters__R = 8314.2999999999993; // joule_per_kilomole_kelvin
        const double var_reversal_potentials__R = var_model_parameters__R; // joule_per_kilomole_kelvin
        const double var_model_parameters__Nao = 140.0; // millimolar
        const double var_reversal_potentials__Nao = var_model_parameters__Nao; // millimolar
        const double var_model_parameters__F = 96485.0; // coulomb_per_mole
        const double var_reversal_potentials__F = var_model_parameters__F; // coulomb_per_mole
        const double var_model_parameters__T = 310.0; // kelvin
        const double var_reversal_potentials__T = var_model_parameters__T; // kelvin
        const double var_reversal_potentials__E_Na_jct = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Nao / var_reversal_potentials__Na_jct); // millivolt
        const double var_INa__E_Na_jct = var_reversal_potentials__E_Na_jct; // millivolt
        const double var_INa__G_INa = 16.0; // milliS_per_microF
        const double var_INa__m = var_chaste_interface__INa_m_gate__m; // dimensionless
        const double var_INa__j = var_chaste_interface__INa_j_gate__j; // dimensionless
        const double var_INa__h = var_chaste_interface__INa_h_gate__h; // dimensionless
        const double var_INa__openProb = pow(var_INa__m, 3.0) * var_INa__h * var_INa__j; // dimensionless
        const double var_INa__Fx_Na_jct = 0.11; // dimensionless
        const double var_INa__i_Na_jct = var_INa__Fx_Na_jct * var_INa__G_INa * var_INa__openProb * (var_INa__V - var_INa__E_Na_jct); // microA_per_microF
        const double var_reversal_potentials__Na_SL = var_chaste_interface__Na_buffer__Na_SL; // millimolar
        const double var_reversal_potentials__E_Na_SL = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Nao / var_reversal_potentials__Na_SL); // millivolt
        const double var_INa__E_Na_SL = var_reversal_potentials__E_Na_SL; // millivolt
        const double var_INa__Fx_Na_SL = 0.89000000000000001; // dimensionless
        const double var_INa__i_Na_SL = var_INa__Fx_Na_SL * var_INa__G_INa * var_INa__openProb * (var_INa__V - var_INa__E_Na_SL); // microA_per_microF
        const double var_INab__Fx_NaBk_jct = 0.11; // dimensionless
        const double var_INab__E_Na_jct = var_reversal_potentials__E_Na_jct; // millivolt
        const double var_INab__G_NaBk = 0.00029700000000000001; // milliS_per_microF
        const double var_INab__V = var_chaste_interface__cell__V; // millivolt
        const double var_INab__i_Nab_jct = var_INab__Fx_NaBk_jct * var_INab__G_NaBk * (var_INab__V - var_INab__E_Na_jct); // microA_per_microF
        const double var_INab__E_Na_SL = var_reversal_potentials__E_Na_SL; // millivolt
        const double var_INab__Fx_NaBk_SL = 0.89000000000000001; // dimensionless
        const double var_INab__i_Nab_SL = var_INab__Fx_NaBk_SL * var_INab__G_NaBk * (var_INab__V - var_INab__E_Na_SL); // microA_per_microF
        const double var_INaK__V = var_chaste_interface__cell__V; // millivolt
        const double var_INaK__F = var_model_parameters__F; // coulomb_per_mole
        const double var_INaK__T = var_model_parameters__T; // kelvin
        const double var_INaK__Nao = var_model_parameters__Nao; // millimolar
        const double var_INaK__sigma = (exp(var_INaK__Nao / 67.299999999999997) - 1.0) / 7.0; // dimensionless
        const double var_INaK__R = var_model_parameters__R; // joule_per_kilomole_kelvin
        const double var_INaK__f_NaK = 1.0 / (1.0 + (0.1245 * exp(((-0.10000000000000001) * var_INaK__V * var_INaK__F) / (var_INaK__R * var_INaK__T))) + (0.036499999999999998 * var_INaK__sigma * exp(((-var_INaK__V) * var_INaK__F) / (var_INaK__R * var_INaK__T)))); // dimensionless
        const double var_INaK__H_NaK = 4.0; // dimensionless
        const double var_model_parameters__Ko = 5.4000000000000004; // millimolar
        const double var_INaK__Ko = var_model_parameters__Ko; // millimolar
        const double var_INaK__Km_Nai = 11.0; // millimolar
        const double var_INaK__Fx_NaK_SL = 0.89000000000000001; // dimensionless
        const double var_INaK__Na_SL = var_chaste_interface__Na_buffer__Na_SL; // millimolar
        const double var_INaK__I_NaK_max = 1.9071899999999999; // microA_per_microF
        const double var_INaK__Km_Ko = 1.5; // millimolar
        const double var_INaK__i_NaK_SL = (((var_INaK__Fx_NaK_SL * var_INaK__I_NaK_max * var_INaK__f_NaK) / (1.0 + pow(var_INaK__Km_Nai / var_INaK__Na_SL, var_INaK__H_NaK))) * var_INaK__Ko) / (var_INaK__Ko + var_INaK__Km_Ko); // microA_per_microF
        const double var_INaK__Fx_NaK_jct = 0.11; // dimensionless
        const double var_INaK__Na_jct = var_chaste_interface__Na_buffer__Na_jct; // millimolar
        const double var_INaK__i_NaK_jct = (((var_INaK__Fx_NaK_jct * var_INaK__I_NaK_max * var_INaK__f_NaK) / (1.0 + pow(var_INaK__Km_Nai / var_INaK__Na_jct, var_INaK__H_NaK))) * var_INaK__Ko) / (var_INaK__Ko + var_INaK__Km_Ko); // microA_per_microF
        const double var_IKr__Xr = var_chaste_interface__IKr_Xr_gate__Xr; // dimensionless
        const double var_IKr__V = var_chaste_interface__cell__V; // millivolt
        const double var_IKs__Xs = var_chaste_interface__IKs_Xs_gate__Xs; // dimensionless
        const double var_IKs__V = var_chaste_interface__cell__V; // millivolt
        const double var_Itos__Y_tos = var_chaste_interface__Itos_Y_gate__Y_tos; // dimensionless
        const double var_Itos__X_tos = var_chaste_interface__Itos_X_gate__X_tos; // dimensionless
        const double var_Itos__R_tos = var_chaste_interface__Itos_R_gate__R_tos; // dimensionless
        const double var_Itos__V = var_chaste_interface__cell__V; // millivolt
        const double var_Itof__X_tof = var_chaste_interface__Itof_X_gate__X_tof; // dimensionless
        const double var_Itof__Y_tof = var_chaste_interface__Itof_Y_gate__Y_tof; // dimensionless
        const double var_Itof__V = var_chaste_interface__cell__V; // millivolt
        const double var_INaCa__K_mNai = 12.289999999999999; // millimolar
        const double var_INaCa__HNa = 3.0; // dimensionless
        const double var_INaCa__K_mNao = 87.5; // millimolar
        const double var_INaCa__T = var_model_parameters__T; // kelvin
        const double var_model_parameters__Cao = 1.8; // millimolar
        const double var_INaCa__Cao = var_model_parameters__Cao; // millimolar
        const double var_INaCa__V = var_chaste_interface__cell__V; // millivolt
        const double var_INaCa__R = var_model_parameters__R; // joule_per_kilomole_kelvin
        const double var_INaCa__Nao = var_model_parameters__Nao; // millimolar
        const double var_INaCa__eta = 0.34999999999999998; // dimensionless
        const double var_INaCa__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_INaCa__F = var_model_parameters__F; // coulomb_per_mole
        const double var_INaCa__Na_jct = var_chaste_interface__Na_buffer__Na_jct; // millimolar
        const double var_INaCa__ksat = 0.27000000000000002; // dimensionless
        const double var_INaCa__temp_jct = ((exp((var_INaCa__eta * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)) * pow(var_INaCa__Na_jct, var_INaCa__HNa) * var_INaCa__Cao) - (exp(((var_INaCa__eta - 1.0) * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)) * pow(var_INaCa__Nao, var_INaCa__HNa) * var_INaCa__Ca_jct)) / (1.0 + (var_INaCa__ksat * exp(((var_INaCa__eta - 1.0) * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)))); // millimolar4
        const double var_INaCa__K_mCao = 1.3; // millimolar
        const double var_INaCa__V_max = 9.0; // microA_per_microF
        const double var_INaCa__K_mCai = 0.0035899999999999999; // millimolar
        const double var_INaCa__Fx_NCX_jct = 0.11; // dimensionless
        const double var_INaCa__Kd_act = 0.00025599999999999999; // millimolar
        const double var_INaCa__Ka_jct = 1.0 / (1.0 + pow(var_INaCa__Kd_act / var_INaCa__Ca_jct, 3.0)); // dimensionless
        const double var_INaCa__Q10_NCX = 1.5700000000000001; // dimensionless
        const double var_INaCa__Q_NCX = pow(var_INaCa__Q10_NCX, (var_INaCa__T - 310.0) / 10.0); // dimensionless
        const double var_INaCa__i_NaCa_jct = (var_INaCa__Fx_NCX_jct * var_INaCa__V_max * var_INaCa__Ka_jct * var_INaCa__Q_NCX * var_INaCa__temp_jct) / ((var_INaCa__K_mCai * pow(var_INaCa__Nao, var_INaCa__HNa) * (1.0 + pow(var_INaCa__Na_jct / var_INaCa__K_mNai, var_INaCa__HNa))) + (pow(var_INaCa__K_mNao, var_INaCa__HNa) * var_INaCa__Ca_jct * (1.0 + (var_INaCa__Ca_jct / var_INaCa__K_mCai))) + (var_INaCa__K_mCao * pow(var_INaCa__Na_jct, var_INaCa__HNa)) + (pow(var_INaCa__Na_jct, var_INaCa__HNa) * var_INaCa__Cao) + (pow(var_INaCa__Nao, var_INaCa__HNa) * var_INaCa__Ca_jct)); // microA_per_microF
        const double var_INaCa__Fx_NCX_SL = 0.89000000000000001; // dimensionless
        const double var_INaCa__Na_SL = var_chaste_interface__Na_buffer__Na_SL; // millimolar
        const double var_INaCa__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
        const double var_INaCa__temp_SL = ((exp((var_INaCa__eta * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)) * pow(var_INaCa__Na_SL, var_INaCa__HNa) * var_INaCa__Cao) - (exp(((var_INaCa__eta - 1.0) * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)) * pow(var_INaCa__Nao, var_INaCa__HNa) * var_INaCa__Ca_SL)) / (1.0 + (var_INaCa__ksat * exp(((var_INaCa__eta - 1.0) * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)))); // millimolar4
        const double var_INaCa__Ka_SL = 1.0 / (1.0 + pow(var_INaCa__Kd_act / var_INaCa__Ca_SL, 3.0)); // dimensionless
        const double var_INaCa__i_NaCa_SL = (var_INaCa__Fx_NCX_SL * var_INaCa__V_max * var_INaCa__Ka_SL * var_INaCa__Q_NCX * var_INaCa__temp_SL) / ((var_INaCa__K_mCai * pow(var_INaCa__Nao, var_INaCa__HNa) * (1.0 + pow(var_INaCa__Na_SL / var_INaCa__K_mNai, var_INaCa__HNa))) + (pow(var_INaCa__K_mNao, var_INaCa__HNa) * var_INaCa__Ca_SL * (1.0 + (var_INaCa__Ca_SL / var_INaCa__K_mCai))) + (var_INaCa__K_mCao * pow(var_INaCa__Na_SL, var_INaCa__HNa)) + (pow(var_INaCa__Na_SL, var_INaCa__HNa) * var_INaCa__Cao) + (pow(var_INaCa__Nao, var_INaCa__HNa) * var_INaCa__Ca_SL)); // microA_per_microF
        const double var_ICaL__T = var_model_parameters__T; // kelvin
        const double var_ICaL__V = var_chaste_interface__cell__V; // millivolt
        const double var_ICaL__Nao = var_model_parameters__Nao; // millimolar
        const double var_ICaL__Fx_ICaL_SL = 0.10000000000000001; // dimensionless
        const double var_ICaL__R = var_model_parameters__R; // joule_per_kilomole_kelvin
        const double var_ICaL__Na_SL = var_chaste_interface__Na_buffer__Na_SL; // millimolar
        const double var_ICaL__d = var_chaste_interface__ICaL_d_gate__d; // dimensionless
        const double var_ICaL__f = var_chaste_interface__ICaL_f_gate__f; // dimensionless
        const double var_ICaL__Q10_CaL = 1.8; // dimensionless
        const double var_ICaL__Q_CaL = pow(var_ICaL__Q10_CaL, (var_ICaL__T - 310.0) / 10.0); // dimensionless
        const double var_ICaL__F = var_model_parameters__F; // coulomb_per_mole
        const double var_ICaL__temp = (0.45000000000000001 * var_ICaL__d * var_ICaL__f * var_ICaL__Q_CaL * var_ICaL__V * pow(var_ICaL__F, 2.0)) / (var_ICaL__R * var_ICaL__T); // coulomb_per_mole
        const double var_ICaL__gamma_Nao = 0.75; // dimensionless
        const double var_ICaL__gamma_Nai = 0.75; // dimensionless
        const double var_ICaL__fCaB_SL = var_chaste_interface__ICaL_fCa_gate__fCaB_SL; // dimensionless
        const double var_ICaL_fCa_gate__fCaB_SL = var_ICaL__fCaB_SL; // dimensionless
        const double var_ICaL_fCa_gate__fCa_SL = 1.0 - var_ICaL_fCa_gate__fCaB_SL; // dimensionless
        const double var_ICaL__fCa_SL = var_ICaL_fCa_gate__fCa_SL; // dimensionless
        const double var_ICaL__PNa = 1.4999999999999999e-08; // litre_per_farad_millisecond
        const double var_ICaL__i_CaL_Na_SL = (var_ICaL__temp * var_ICaL__fCa_SL * var_ICaL__Fx_ICaL_SL * var_ICaL__PNa * ((var_ICaL__gamma_Nai * var_ICaL__Na_SL * exp((var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T))) - (var_ICaL__gamma_Nao * var_ICaL__Nao))) / (exp((var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T)) - 1.0); // microA_per_microF
        const double var_ICaL__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
        const double var_ICaL__gamma_Cao = 0.34100000000000003; // dimensionless
        const double var_ICaL__gamma_Cai = 0.34100000000000003; // dimensionless
        const double var_ICaL__Cao = var_model_parameters__Cao; // millimolar
        const double var_ICaL__PCa = 0.00054000000000000001; // litre_per_farad_millisecond
        const double var_ICaL__i_CaL_Ca_SL = (var_ICaL__temp * var_ICaL__fCa_SL * var_ICaL__Fx_ICaL_SL * var_ICaL__PCa * 4.0 * ((var_ICaL__gamma_Cai * var_ICaL__Ca_SL * exp((2.0 * var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T))) - (var_ICaL__gamma_Cao * var_ICaL__Cao))) / (exp((2.0 * var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T)) - 1.0); // microA_per_microF
        const double var_ICaL__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_ICaL__fCaB_jct = var_chaste_interface__ICaL_fCa_gate__fCaB_jct; // dimensionless
        const double var_ICaL_fCa_gate__fCaB_jct = var_ICaL__fCaB_jct; // dimensionless
        const double var_ICaL_fCa_gate__fCa_jct = 1.0 - var_ICaL_fCa_gate__fCaB_jct; // dimensionless
        const double var_ICaL__fCa_jct = var_ICaL_fCa_gate__fCa_jct; // dimensionless
        const double var_ICaL__Fx_ICaL_jct = 0.90000000000000002; // dimensionless
        const double var_ICaL__i_CaL_Ca_jct = (var_ICaL__temp * var_ICaL__fCa_jct * var_ICaL__Fx_ICaL_jct * var_ICaL__PCa * 4.0 * ((var_ICaL__gamma_Cai * var_ICaL__Ca_jct * exp((2.0 * var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T))) - (var_ICaL__gamma_Cao * var_ICaL__Cao))) / (exp((2.0 * var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T)) - 1.0); // microA_per_microF
        const double var_ICaL__Na_jct = var_chaste_interface__Na_buffer__Na_jct; // millimolar
        const double var_ICaL__i_CaL_Na_jct = (var_ICaL__temp * var_ICaL__fCa_jct * var_ICaL__Fx_ICaL_jct * var_ICaL__PNa * ((var_ICaL__gamma_Nai * var_ICaL__Na_jct * exp((var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T))) - (var_ICaL__gamma_Nao * var_ICaL__Nao))) / (exp((var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T)) - 1.0); // microA_per_microF
        const double var_ICab__G_CaBk = 0.00025129999999999998; // milliS_per_microF
        const double var_ICab__V = var_chaste_interface__cell__V; // millivolt
        const double var_ICab__Fx_CaBk_SL = 0.89000000000000001; // dimensionless
        const double var_reversal_potentials__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
        const double var_reversal_potentials__Cao = var_model_parameters__Cao; // millimolar
        const double var_reversal_potentials__E_Ca_SL = ((var_reversal_potentials__R * var_reversal_potentials__T) / (2.0 * var_reversal_potentials__F)) * log(var_reversal_potentials__Cao / var_reversal_potentials__Ca_SL); // millivolt
        const double var_ICab__E_Ca_SL = var_reversal_potentials__E_Ca_SL; // millivolt
        const double var_ICab__i_Cab_SL = var_ICab__G_CaBk * var_ICab__Fx_CaBk_SL * (var_ICab__V - var_ICab__E_Ca_SL); // microA_per_microF
        const double var_ICab__Fx_CaBk_jct = 0.11; // dimensionless
        const double var_reversal_potentials__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_reversal_potentials__E_Ca_jct = ((var_reversal_potentials__R * var_reversal_potentials__T) / (2.0 * var_reversal_potentials__F)) * log(var_reversal_potentials__Cao / var_reversal_potentials__Ca_jct); // millivolt
        const double var_ICab__E_Ca_jct = var_reversal_potentials__E_Ca_jct; // millivolt
        const double var_ICab__i_Cab_jct = var_ICab__G_CaBk * var_ICab__Fx_CaBk_jct * (var_ICab__V - var_ICab__E_Ca_jct); // microA_per_microF
        const double var_ICap__H = 1.6000000000000001; // dimensionless
        const double var_ICap__Fx_SLCaP_SL = 0.89000000000000001; // dimensionless
        const double var_ICap__Km = 0.00050000000000000001; // millimolar
        const double var_ICap__V_maxAF = 0.067299999999999999; // microA_per_microF
        const double var_ICap__Q10_SLCaP = 2.3500000000000001; // dimensionless
        const double var_ICap__T = var_model_parameters__T; // kelvin
        const double var_ICap__Q_SLCaP = pow(var_ICap__Q10_SLCaP, (var_ICap__T - 310.0) / 10.0); // dimensionless
        const double var_ICap__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
        const double var_ICap__i_Cap_SL = (var_ICap__Q_SLCaP * var_ICap__V_maxAF * var_ICap__Fx_SLCaP_SL) / (1.0 + pow(var_ICap__Km / var_ICap__Ca_SL, var_ICap__H)); // microA_per_microF
        const double var_ICap__Fx_SLCaP_jct = 0.11; // dimensionless
        const double var_ICap__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_ICap__i_Cap_jct = (var_ICap__Q_SLCaP * var_ICap__V_maxAF * var_ICap__Fx_SLCaP_jct) / (1.0 + pow(var_ICap__Km / var_ICap__Ca_jct, var_ICap__H)); // microA_per_microF
        const double var_model_parameters__Mgi = 1.0; // millimolar
        const double var_model_parameters__Cm = 1.3809999999999999e-10; // farad
        const double var_model_parameters__cell_length = 100.0; // micrometre
        const double var_model_parameters__cell_radius = 10.25; // micrometre
        const double var_model_parameters__Vol_Cell = (3.1415926540000001 * pow(var_model_parameters__cell_radius / 1000.0, 2.0) * var_model_parameters__cell_length) / pow(1000.0, 3.0); // litre
        const double var_model_parameters__Vol_SR = 0.035000000000000003 * var_model_parameters__Vol_Cell; // litre
        const double var_model_parameters__Vol_SL = 0.02 * var_model_parameters__Vol_Cell; // litre
        const double var_model_parameters__Vol_jct = 0.053900000000000003 * 0.01 * var_model_parameters__Vol_Cell; // litre
        const double var_model_parameters__Vol_myo = 0.65000000000000002 * var_model_parameters__Vol_Cell; // litre
        const double var_INa_h_gate__V = var_INa__V; // millivolt
        const double var_INa_h_gate__alpha_h = (var_INa_h_gate__V < (-40.0)) ? (0.13500000000000001 * exp((80.0 + var_INa_h_gate__V) / (-6.7999999999999998))) : 0.0; // per_millisecond
        const double var_INa_h_gate__h = var_INa__h; // dimensionless
        const double var_INa_h_gate__beta_h = (var_INa_h_gate__V < (-40.0)) ? ((3.5600000000000001 * exp(0.079000000000000001 * var_INa_h_gate__V)) + (310000.0 * exp(0.34999999999999998 * var_INa_h_gate__V))) : (1.0 / (0.13 * (1.0 + exp((var_INa_h_gate__V + 10.66) / (-11.1))))); // per_millisecond
        const double var_INa_h_gate__d_h_d_environment__time = (var_INa_h_gate__alpha_h * (1.0 - var_INa_h_gate__h)) - (var_INa_h_gate__beta_h * var_INa_h_gate__h); // per_millisecond
        const double var_INa__INa_h_gate__d_h_d_environment__time = var_INa_h_gate__d_h_d_environment__time; // per_millisecond
        const double var_INa_j_gate__V = var_INa__V; // millivolt
        const double var_INa_j_gate__beta_j = (var_INa_j_gate__V < (-40.0)) ? ((0.1212 * exp((-0.01052) * var_INa_j_gate__V)) / (1.0 + exp((-0.13780000000000001) * (var_INa_j_gate__V + 40.140000000000001)))) : ((0.29999999999999999 * exp((-2.5349999999999999e-07) * var_INa_j_gate__V)) / (1.0 + exp((-0.10000000000000001) * (var_INa_j_gate__V + 32.0)))); // per_millisecond
        const double var_INa_j_gate__j = var_INa__j; // dimensionless
        const double var_INa_j_gate__alpha_j = (var_INa_j_gate__V < (-40.0)) ? ((((((-127140.0) * exp(0.24440000000000001 * var_INa_j_gate__V)) - (3.4740000000000003e-05 * exp((-0.043909999999999998) * var_INa_j_gate__V))) * (var_INa_j_gate__V + 37.780000000000001)) / 1.0) / (1.0 + exp(0.311 * (var_INa_j_gate__V + 79.230000000000004)))) : 0.0; // per_millisecond
        const double var_INa_j_gate__d_j_d_environment__time = (var_INa_j_gate__alpha_j * (1.0 - var_INa_j_gate__j)) - (var_INa_j_gate__beta_j * var_INa_j_gate__j); // per_millisecond
        const double var_INa__INa_j_gate__d_j_d_environment__time = var_INa_j_gate__d_j_d_environment__time; // per_millisecond
        const double var_INa_m_gate__V = var_INa__V; // millivolt
        const double var_INa_m_gate__alpha_m = ((0.32000000000000001 * (var_INa_m_gate__V + 47.130000000000003)) / 1.0) / (1.0 - exp((-0.10000000000000001) * (var_INa_m_gate__V + 47.130000000000003))); // per_millisecond
        const double var_INa_m_gate__m = var_INa__m; // dimensionless
        const double var_INa_m_gate__beta_m = 0.080000000000000002 * exp((-var_INa_m_gate__V) / 11.0); // per_millisecond
        const double var_INa_m_gate__d_m_d_environment__time = (var_INa_m_gate__alpha_m * (1.0 - var_INa_m_gate__m)) - (var_INa_m_gate__beta_m * var_INa_m_gate__m); // per_millisecond
        const double var_INa__INa_m_gate__d_m_d_environment__time = var_INa_m_gate__d_m_d_environment__time; // per_millisecond
        const double var_IKr_Xr_gate__Xr = var_IKr__Xr; // dimensionless
        const double var_IKr_Xr_gate__V = var_IKr__V; // millivolt
        const double var_IKr_Xr_gate__tau_Xr = 1.0 / (((0.0013799999999999999 * (var_IKr_Xr_gate__V + 7.0)) / (1.0 - exp((-0.123) * (var_IKr_Xr_gate__V + 7.0)))) + ((0.00060999999999999997 * (var_IKr_Xr_gate__V + 10.0)) / (exp(0.14499999999999999 * (var_IKr_Xr_gate__V + 10.0)) - 1.0))); // millisecond
        const double var_IKr_Xr_gate__Xr_infinity = 1.0 / (1.0 + exp((-(50.0 + var_IKr_Xr_gate__V)) / 7.5)); // dimensionless
        const double var_IKr_Xr_gate__d_Xr_d_environment__time = (var_IKr_Xr_gate__Xr_infinity - var_IKr_Xr_gate__Xr) / var_IKr_Xr_gate__tau_Xr; // per_millisecond
        const double var_IKr__IKr_Xr_gate__d_Xr_d_environment__time = var_IKr_Xr_gate__d_Xr_d_environment__time; // per_millisecond
        const double var_IKs_Xs_gate__Xs = var_IKs__Xs; // dimensionless
        const double var_IKs_Xs_gate__V = var_IKs__V; // millivolt
        const double var_IKs_Xs_gate__tau_Xs = 1.0 / (((7.1899999999999999e-05 * (var_IKs_Xs_gate__V + 30.0)) / (1.0 - exp((-0.14799999999999999) * (var_IKs_Xs_gate__V + 30.0)))) + ((0.00013100000000000001 * (var_IKs_Xs_gate__V + 30.0)) / ((-1.0) + exp(0.068699999999999997 * (var_IKs_Xs_gate__V + 30.0))))); // millisecond
        const double var_IKs_Xs_gate__Xs_infinity = 1.0 / (1.0 + exp((-(var_IKs_Xs_gate__V - 1.5)) / 16.699999999999999)); // dimensionless
        const double var_IKs_Xs_gate__d_Xs_d_environment__time = (var_IKs_Xs_gate__Xs_infinity - var_IKs_Xs_gate__Xs) / var_IKs_Xs_gate__tau_Xs; // per_millisecond
        const double var_IKs__IKs_Xs_gate__d_Xs_d_environment__time = var_IKs_Xs_gate__d_Xs_d_environment__time; // per_millisecond
        const double var_Itos_X_gate__V = var_Itos__V; // millivolt
        const double var_Itos_X_gate__X_tos_infinity = 1.0 / (1.0 + exp((-(var_Itos_X_gate__V + 3.0)) / 15.0)); // dimensionless
        const double var_Itos_X_gate__tau_X_tos = (9.0 / (1.0 + exp((var_Itos_X_gate__V + 3.0) / 15.0))) + 0.5; // millisecond
        const double var_Itos_X_gate__X_tos = var_Itos__X_tos; // dimensionless
        const double var_Itos_X_gate__d_X_tos_d_environment__time = (var_Itos_X_gate__X_tos_infinity - var_Itos_X_gate__X_tos) / var_Itos_X_gate__tau_X_tos; // per_millisecond
        const double var_Itos__Itos_X_gate__d_X_tos_d_environment__time = var_Itos_X_gate__d_X_tos_d_environment__time; // per_millisecond
        const double var_Itos_Y_gate__V = var_Itos__V; // millivolt
        const double var_Itos_Y_gate__Y_tos_infinity = 1.0 / (1.0 + exp((var_Itos_Y_gate__V + 33.5) / 10.0)); // dimensionless
        const double var_Itos_Y_gate__Y_tos = var_Itos__Y_tos; // dimensionless
        const double var_Itos_Y_gate__tau_Y_tos = (3000.0 / (1.0 + exp((var_Itos_Y_gate__V + 60.0) / 10.0))) + 30.0; // millisecond
        const double var_Itos_Y_gate__d_Y_tos_d_environment__time = (var_Itos_Y_gate__Y_tos_infinity - var_Itos_Y_gate__Y_tos) / var_Itos_Y_gate__tau_Y_tos; // per_millisecond
        const double var_Itos__Itos_Y_gate__d_Y_tos_d_environment__time = var_Itos_Y_gate__d_Y_tos_d_environment__time; // per_millisecond
        const double var_Itos_R_gate__V = var_Itos__V; // millivolt
        const double var_Itos_R_gate__R_tos_infinity = 1.0 / (1.0 + exp((var_Itos_R_gate__V + 33.5) / 10.0)); // dimensionless
        const double var_Itos_R_gate__tau_R_tos = (2800.0 / (1.0 + exp((var_Itos_R_gate__V + 60.0) / 10.0))) + 220.0; // millisecond
        const double var_Itos_R_gate__R_tos = var_Itos__R_tos; // dimensionless
        const double var_Itos_R_gate__d_R_tos_d_environment__time = (var_Itos_R_gate__R_tos_infinity - var_Itos_R_gate__R_tos) / var_Itos_R_gate__tau_R_tos; // per_millisecond
        const double var_Itos__Itos_R_gate__d_R_tos_d_environment__time = var_Itos_R_gate__d_R_tos_d_environment__time; // per_millisecond
        const double var_Itof_X_gate__V = var_Itof__V; // millivolt
        const double var_Itof_X_gate__X_tof_infinity = 1.0 / (1.0 + exp((-(var_Itof_X_gate__V + 3.0)) / 15.0)); // dimensionless
        const double var_Itof_X_gate__X_tof = var_Itof__X_tof; // dimensionless
        const double var_Itof_X_gate__tau_X_tof = (3.5 * exp(-pow(var_Itof_X_gate__V / 30.0, 2.0))) + 1.5; // millisecond
        const double var_Itof_X_gate__d_X_tof_d_environment__time = (var_Itof_X_gate__X_tof_infinity - var_Itof_X_gate__X_tof) / var_Itof_X_gate__tau_X_tof; // per_millisecond
        const double var_Itof__Itof_X_gate__d_X_tof_d_environment__time = var_Itof_X_gate__d_X_tof_d_environment__time; // per_millisecond
        const double var_Itof_Y_gate__V = var_Itof__V; // millivolt
        const double var_Itof_Y_gate__Y_tof_infinity = 1.0 / (1.0 + exp((var_Itof_Y_gate__V + 33.5) / 10.0)); // dimensionless
        const double var_Itof_Y_gate__tau_Y_tof = (20.0 / (1.0 + exp((var_Itof_Y_gate__V + 33.5) / 10.0))) + 20.0; // millisecond
        const double var_Itof_Y_gate__Y_tof = var_Itof__Y_tof; // dimensionless
        const double var_Itof_Y_gate__d_Y_tof_d_environment__time = (var_Itof_Y_gate__Y_tof_infinity - var_Itof_Y_gate__Y_tof) / var_Itof_Y_gate__tau_Y_tof; // per_millisecond
        const double var_Itof__Itof_Y_gate__d_Y_tof_d_environment__time = var_Itof_Y_gate__d_Y_tof_d_environment__time; // per_millisecond
        const double var_ICaL_d_gate__d = var_ICaL__d; // dimensionless
        const double var_ICaL_d_gate__V = var_ICaL__V; // millivolt
        const double var_ICaL_d_gate__d_infinity = 1.0 / (1.0 + exp((-(var_ICaL_d_gate__V + 14.5)) / 6.0)); // dimensionless
        const double var_ICaL_d_gate__tau_d = (1.0 * var_ICaL_d_gate__d_infinity * (1.0 - exp((-(var_ICaL_d_gate__V + 14.5)) / 6.0))) / (0.035000000000000003 * (var_ICaL_d_gate__V + 14.5)); // millisecond
        const double var_ICaL_d_gate__d_d_d_environment__time = (var_ICaL_d_gate__d_infinity - var_ICaL_d_gate__d) / var_ICaL_d_gate__tau_d; // per_millisecond
        const double var_ICaL__ICaL_d_gate__d_d_d_environment__time = var_ICaL_d_gate__d_d_d_environment__time; // per_millisecond
        const double var_ICaL_f_gate__f = var_ICaL__f; // dimensionless
        const double var_ICaL_f_gate__V = var_ICaL__V; // millivolt
        const double var_ICaL_f_gate__f_infinity = (1.0 / (1.0 + exp((var_ICaL_f_gate__V + 35.060000000000002) / 3.6000000000000001))) + (0.59999999999999998 / (1.0 + exp((50.0 - var_ICaL_f_gate__V) / 20.0))); // dimensionless
        const double var_ICaL_f_gate__tau_f = 1.0 / ((0.019699999999999999 * exp(-pow(0.033700000000000001 * (var_ICaL_f_gate__V + 14.5), 2.0))) + 0.02); // millisecond
        const double var_ICaL_f_gate__d_f_d_environment__time = (var_ICaL_f_gate__f_infinity - var_ICaL_f_gate__f) / var_ICaL_f_gate__tau_f; // per_millisecond
        const double var_ICaL__ICaL_f_gate__d_f_d_environment__time = var_ICaL_f_gate__d_f_d_environment__time; // per_millisecond
        const double var_ICaL_fCa_gate__Ca_SL = var_ICaL__Ca_SL; // millimolar
        const double var_ICaL_fCa_gate__d_fCaB_SL_d_environment__time = (1.7 * var_ICaL_fCa_gate__Ca_SL * (1.0 - var_ICaL_fCa_gate__fCaB_SL)) - (0.011900000000000001 * var_ICaL_fCa_gate__fCaB_SL); // per_millisecond
        const double var_ICaL__ICaL_fCa_gate__d_fCaB_SL_d_environment__time = var_ICaL_fCa_gate__d_fCaB_SL_d_environment__time; // per_millisecond
        const double var_ICaL_fCa_gate__Ca_jct = var_ICaL__Ca_jct; // millimolar
        const double var_ICaL_fCa_gate__d_fCaB_jct_d_environment__time = (1.7 * var_ICaL_fCa_gate__Ca_jct * (1.0 - var_ICaL_fCa_gate__fCaB_jct)) - (0.011900000000000001 * var_ICaL_fCa_gate__fCaB_jct); // per_millisecond
        const double var_ICaL__ICaL_fCa_gate__d_fCaB_jct_d_environment__time = var_ICaL_fCa_gate__d_fCaB_jct_d_environment__time; // per_millisecond
        const double var_Jrel_SR__O = var_chaste_interface__Jrel_SR__O; // dimensionless
        const double var_Jrel_SR__ks = 25.0; // per_millisecond
        const double var_Jrel_SR__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_Jrel_SR__Ca_SR = var_chaste_interface__Ca_buffer__Ca_SR; // millimolar
        const double var_Jrel_SR__j_rel_SR = var_Jrel_SR__ks * var_Jrel_SR__O * (var_Jrel_SR__Ca_SR - var_Jrel_SR__Ca_jct); // millimolar_per_millisecond
        const double var_Jrel_SR__Max_SR = 15.0; // dimensionless
        const double var_Jrel_SR__Min_SR = 1.0; // dimensionless
        const double var_Jrel_SR__EC50_SR = 0.45000000000000001; // millimolar
        const double var_Jrel_SR__R = var_chaste_interface__Jrel_SR__R; // dimensionless
        const double var_Jrel_SR__I = var_chaste_interface__Jrel_SR__I; // dimensionless
        const double var_Jrel_SR__RI = ((1.0 - var_Jrel_SR__R) - var_Jrel_SR__O) - var_Jrel_SR__I; // dimensionless
        const double var_Jrel_SR__koCa = 10.0; // per_millimolar2_per_millisecond
        const double var_Jrel_SR__kom = 0.059999999999999998; // per_millisecond
        const double var_Jrel_SR__kiCa = 0.5; // per_millimolar_per_millisecond
        const double var_Jrel_SR__kim = 0.0050000000000000001; // per_millisecond
        const double var_Jrel_SR__HSR = 2.5; // dimensionless
        const double var_Jrel_SR__kCaSR = var_Jrel_SR__Max_SR - ((var_Jrel_SR__Max_SR - var_Jrel_SR__Min_SR) / (1.0 + pow(var_Jrel_SR__EC50_SR / var_Jrel_SR__Ca_SR, var_Jrel_SR__HSR))); // dimensionless
        const double var_Jrel_SR__koSRCa = var_Jrel_SR__koCa / var_Jrel_SR__kCaSR; // per_millimolar2_per_millisecond
        const double var_Jrel_SR__kiSRCa = var_Jrel_SR__kiCa * var_Jrel_SR__kCaSR; // per_millimolar_per_millisecond
        const double var_Jrel_SR__d_R_d_environment__time = ((var_Jrel_SR__kim * var_Jrel_SR__RI) - (var_Jrel_SR__kiSRCa * var_Jrel_SR__Ca_jct * var_Jrel_SR__R)) - ((var_Jrel_SR__koSRCa * pow(var_Jrel_SR__Ca_jct, 2.0) * var_Jrel_SR__R) - (var_Jrel_SR__kom * var_Jrel_SR__O)); // per_millisecond
        const double var_Jrel_SR__d_I_d_environment__time = ((var_Jrel_SR__kiSRCa * var_Jrel_SR__Ca_jct * var_Jrel_SR__O) - (var_Jrel_SR__kim * var_Jrel_SR__I)) - ((var_Jrel_SR__kom * var_Jrel_SR__I) - (var_Jrel_SR__koSRCa * pow(var_Jrel_SR__Ca_jct, 2.0) * var_Jrel_SR__RI)); // per_millisecond
        const double var_Jrel_SR__d_O_d_environment__time = ((var_Jrel_SR__koSRCa * pow(var_Jrel_SR__Ca_jct, 2.0) * var_Jrel_SR__R) - (var_Jrel_SR__kom * var_Jrel_SR__O)) - ((var_Jrel_SR__kiSRCa * var_Jrel_SR__Ca_jct * var_Jrel_SR__O) - (var_Jrel_SR__kim * var_Jrel_SR__I)); // per_millisecond
        const double var_Jleak_SR__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_Jleak_SR__Ca_SR = var_chaste_interface__Ca_buffer__Ca_SR; // millimolar
        const double var_Jleak_SR__KSRleak = 5.3480000000000003e-06; // per_millisecond
        const double var_Jleak_SR__j_leak_SR = var_Jleak_SR__KSRleak * (var_Jleak_SR__Ca_SR - var_Jleak_SR__Ca_jct); // millimolar_per_millisecond
        const double var_Jpump_SR__Ca_SR = var_chaste_interface__Ca_buffer__Ca_SR; // millimolar
        const double var_Jpump_SR__Cai = var_chaste_interface__Ca_buffer__Cai; // millimolar
        const double var_Jpump_SR__T = var_model_parameters__T; // kelvin
        const double var_Jpump_SR__Q10_SRCaP = 2.6000000000000001; // dimensionless
        const double var_Jpump_SR__Q_SRCaP = pow(var_Jpump_SR__Q10_SRCaP, (var_Jpump_SR__T - 310.0) / 10.0); // dimensionless
        const double var_Jpump_SR__Kmr = 1.7; // millimolar
        const double var_Jpump_SR__V_max = 0.0053114; // millimolar_per_millisecond
        const double var_Jpump_SR__Kmf = 0.00024600000000000002; // millimolar
        const double var_Jpump_SR__H = 1.7869999999999999; // dimensionless
        const double var_Jpump_SR__j_pump_SR = (var_Jpump_SR__Q_SRCaP * var_Jpump_SR__V_max * (pow(var_Jpump_SR__Cai / var_Jpump_SR__Kmf, var_Jpump_SR__H) - pow(var_Jpump_SR__Ca_SR / var_Jpump_SR__Kmr, var_Jpump_SR__H))) / (1.0 + pow(var_Jpump_SR__Cai / var_Jpump_SR__Kmf, var_Jpump_SR__H) + pow(var_Jpump_SR__Ca_SR / var_Jpump_SR__Kmr, var_Jpump_SR__H)); // millimolar_per_millisecond
        const double var_ion_diffusion__Na_jct = var_chaste_interface__Na_buffer__Na_jct; // millimolar
        const double var_ion_diffusion__Na_SL = var_chaste_interface__Na_buffer__Na_SL; // millimolar
        const double var_ion_diffusion__J_Na_jct_SL = (var_ion_diffusion__Na_jct - var_ion_diffusion__Na_SL) * 1.8312999999999999e-14; // millimole_per_millisecond
        const double var_ion_diffusion__Nai = var_chaste_interface__Na_buffer__Nai; // millimolar
        const double var_ion_diffusion__J_Na_SL_myo = (var_ion_diffusion__Na_SL - var_ion_diffusion__Nai) * 1.6385999999999999e-12; // millimole_per_millisecond
        const double var_ion_diffusion__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
        const double var_ion_diffusion__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_ion_diffusion__J_Ca_jct_SL = (var_ion_diffusion__Ca_jct - var_ion_diffusion__Ca_SL) * 8.2413000000000004e-13; // millimole_per_millisecond
        const double var_ion_diffusion__Cai = var_chaste_interface__Ca_buffer__Cai; // millimolar
        const double var_ion_diffusion__J_Ca_SL_myo = (var_ion_diffusion__Ca_SL - var_ion_diffusion__Cai) * 3.7243000000000002e-12; // millimole_per_millisecond
        const double var_Na_buffer__Na_SL = var_chaste_interface__Na_buffer__Na_SL; // millimolar
        const double var_Na_buffer__Na_jct = var_chaste_interface__Na_buffer__Na_jct; // millimolar
        const double var_Na_buffer__Na_SL_buf = var_chaste_interface__Na_buffer__Na_SL_buf; // millimolar
        const double var_Na_buffer__Na_jct_buf = var_chaste_interface__Na_buffer__Na_jct_buf; // millimolar
        const double var_Na_buffer__Bmax_SL = 1.6499999999999999; // millimolar
        const double var_Na_buffer__Bmax_jct = 7.5609999999999999; // millimolar
        const double var_Na_buffer__kon = 0.0001; // per_millimolar_per_millisecond
        const double var_Na_buffer__koff = 0.001; // per_millisecond
        const double var_Na_buffer__J_Na_jct_SL = var_ion_diffusion__J_Na_jct_SL; // millimole_per_millisecond
        const double var_Na_buffer__J_Na_SL_myo = var_ion_diffusion__J_Na_SL_myo; // millimole_per_millisecond
        const double var_Na_buffer__i_Na_jct = var_INa__i_Na_jct; // microA_per_microF
        const double var_Na_buffer__i_NaCa_jct = var_INaCa__i_NaCa_jct; // microA_per_microF
        const double var_Na_buffer__i_Nab_jct = var_INab__i_Nab_jct; // microA_per_microF
        const double var_Na_buffer__i_NaK_jct = var_INaK__i_NaK_jct; // microA_per_microF
        const double var_Na_buffer__i_CaL_Na_jct = var_ICaL__i_CaL_Na_jct; // microA_per_microF
        const double var_Na_buffer__i_Na_SL = var_INa__i_Na_SL; // microA_per_microF
        const double var_Na_buffer__i_NaCa_SL = var_INaCa__i_NaCa_SL; // microA_per_microF
        const double var_Na_buffer__i_Nab_SL = var_INab__i_Nab_SL; // microA_per_microF
        const double var_Na_buffer__i_NaK_SL = var_INaK__i_NaK_SL; // microA_per_microF
        const double var_Na_buffer__i_CaL_Na_SL = var_ICaL__i_CaL_Na_SL; // microA_per_microF
        const double var_Na_buffer__Vol_SL = var_model_parameters__Vol_SL; // litre
        const double var_Na_buffer__Vol_jct = var_model_parameters__Vol_jct; // litre
        const double var_Na_buffer__Vol_myo = var_model_parameters__Vol_myo; // litre
        const double var_Na_buffer__F = var_model_parameters__F; // coulomb_per_mole
        const double var_Na_buffer__Cm = var_model_parameters__Cm; // farad
        const double var_Na_buffer__dNa_jct_buf = (var_Na_buffer__kon * var_Na_buffer__Na_jct * (var_Na_buffer__Bmax_jct - var_Na_buffer__Na_jct_buf)) - (var_Na_buffer__koff * var_Na_buffer__Na_jct_buf); // millimolar_per_millisecond
        const double var_Na_buffer__dNa_SL_buf = (var_Na_buffer__kon * var_Na_buffer__Na_SL * (var_Na_buffer__Bmax_SL - var_Na_buffer__Na_SL_buf)) - (var_Na_buffer__koff * var_Na_buffer__Na_SL_buf); // millimolar_per_millisecond
        const double var_Na_buffer__d_Na_SL_d_environment__time = ((((-var_Na_buffer__Cm) * (var_Na_buffer__i_Na_SL + (3.0 * var_Na_buffer__i_NaCa_SL) + var_Na_buffer__i_Nab_SL + (3.0 * var_Na_buffer__i_NaK_SL) + var_Na_buffer__i_CaL_Na_SL)) / (var_Na_buffer__Vol_SL * var_Na_buffer__F)) + ((var_Na_buffer__J_Na_jct_SL - var_Na_buffer__J_Na_SL_myo) / var_Na_buffer__Vol_SL)) - var_Na_buffer__dNa_SL_buf; // 'millimole per litre per millisecond'
        const double var_Na_buffer__d_Na_jct_d_environment__time = ((((-var_Na_buffer__Cm) * (var_Na_buffer__i_Na_jct + (3.0 * var_Na_buffer__i_NaCa_jct) + var_Na_buffer__i_Nab_jct + (3.0 * var_Na_buffer__i_NaK_jct) + var_Na_buffer__i_CaL_Na_jct)) / (var_Na_buffer__Vol_jct * var_Na_buffer__F)) - (var_Na_buffer__J_Na_jct_SL / var_Na_buffer__Vol_jct)) - var_Na_buffer__dNa_jct_buf; // 'millimole per litre per millisecond'
        const double var_Na_buffer__d_Na_SL_buf_d_environment__time = var_Na_buffer__dNa_SL_buf; // 'millimole per litre per millisecond'
        const double var_Na_buffer__d_Na_jct_buf_d_environment__time = var_Na_buffer__dNa_jct_buf; // 'millimole per litre per millisecond'
        const double var_Na_buffer__d_Nai_d_environment__time = var_Na_buffer__J_Na_SL_myo / var_Na_buffer__Vol_myo; // 'millimole per litre per millisecond'
        const double var_Ca_buffer__Ca_SR = var_chaste_interface__Ca_buffer__Ca_SR; // millimolar
        const double var_Ca_buffer__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
        const double var_Ca_buffer__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_Ca_buffer__Cai = var_chaste_interface__Ca_buffer__Cai; // millimolar
        const double var_Ca_buffer__Mgi = var_model_parameters__Mgi; // millimolar
        const double var_Ca_buffer__Ca_SLB_SL = var_chaste_interface__Ca_buffer__Ca_SLB_SL; // millimolar
        const double var_Ca_buffer__Ca_SLB_jct = var_chaste_interface__Ca_buffer__Ca_SLB_jct; // millimolar
        const double var_Ca_buffer__Ca_SLHigh_SL = var_chaste_interface__Ca_buffer__Ca_SLHigh_SL; // millimolar
        const double var_Ca_buffer__Ca_SLHigh_jct = var_chaste_interface__Ca_buffer__Ca_SLHigh_jct; // millimolar
        const double var_Ca_buffer__Ca_Calsequestrin = var_chaste_interface__Ca_buffer__Ca_Calsequestrin; // millimolar
        const double var_Ca_buffer__Bmax_SLB_SL = 0.037400000000000003; // millimolar
        const double var_Ca_buffer__Bmax_SLB_jct = 0.0045999999999999999; // millimolar
        const double var_Ca_buffer__Bmax_SLHigh_SL = 0.0134; // millimolar
        const double var_Ca_buffer__Bmax_SLHigh_jct = 0.00165; // millimolar
        const double var_Ca_buffer__Bmax_Calsequestrin = 0.14000000000000001; // millimolar
        const double var_Ca_buffer__kon_SL = 100.0; // per_millimolar_per_millisecond
        const double var_Ca_buffer__kon_Calsequestrin = 100.0; // per_millimolar_per_millisecond
        const double var_Ca_buffer__koff_SLB = 1.3; // per_millisecond
        const double var_Ca_buffer__koff_SLHigh = 0.029999999999999999; // per_millisecond
        const double var_Ca_buffer__koff_Calsequestrin = 65.0; // per_millisecond
        const double var_Ca_buffer__i_CaL_Ca_jct = var_ICaL__i_CaL_Ca_jct; // microA_per_microF
        const double var_Ca_buffer__i_NaCa_jct = var_INaCa__i_NaCa_jct; // microA_per_microF
        const double var_Ca_buffer__i_Cab_jct = var_ICab__i_Cab_jct; // microA_per_microF
        const double var_Ca_buffer__i_Cap_jct = var_ICap__i_Cap_jct; // microA_per_microF
        const double var_Ca_buffer__i_CaL_Ca_SL = var_ICaL__i_CaL_Ca_SL; // microA_per_microF
        const double var_Ca_buffer__i_NaCa_SL = var_INaCa__i_NaCa_SL; // microA_per_microF
        const double var_Ca_buffer__i_Cab_SL = var_ICab__i_Cab_SL; // microA_per_microF
        const double var_Ca_buffer__i_Cap_SL = var_ICap__i_Cap_SL; // microA_per_microF
        const double var_Ca_buffer__j_pump_SR = var_Jpump_SR__j_pump_SR; // millimolar_per_millisecond
        const double var_Ca_buffer__j_rel_SR = var_Jrel_SR__j_rel_SR; // millimolar_per_millisecond
        const double var_Ca_buffer__j_leak_SR = var_Jleak_SR__j_leak_SR; // millimolar_per_millisecond
        const double var_Ca_buffer__J_Ca_jct_SL = var_ion_diffusion__J_Ca_jct_SL; // millimole_per_millisecond
        const double var_Ca_buffer__J_Ca_SL_myo = var_ion_diffusion__J_Ca_SL_myo; // millimole_per_millisecond
        const double var_Ca_buffer__Vol_SR = var_model_parameters__Vol_SR; // litre
        const double var_Ca_buffer__Vol_SL = var_model_parameters__Vol_SL; // litre
        const double var_Ca_buffer__Vol_jct = var_model_parameters__Vol_jct; // litre
        const double var_Ca_buffer__Vol_myo = var_model_parameters__Vol_myo; // litre
        const double var_Ca_buffer__F = var_model_parameters__F; // coulomb_per_mole
        const double var_Ca_buffer__Cm = var_model_parameters__Cm; // farad
        const double var_Ca_buffer__dCalsequestrin = (var_Ca_buffer__kon_Calsequestrin * var_Ca_buffer__Ca_SR * (((var_Ca_buffer__Bmax_Calsequestrin * var_Ca_buffer__Vol_myo) / var_Ca_buffer__Vol_SR) - var_Ca_buffer__Ca_Calsequestrin)) - (var_Ca_buffer__koff_Calsequestrin * var_Ca_buffer__Ca_Calsequestrin); // millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__Bmax_Myosin_Mg = 0.14000000000000001; // millimolar
        const double var_cytosolic_Ca_buffer__koff_Myosin_Mg = 5.7000000000000003e-05; // per_millisecond
        const double var_cytosolic_Ca_buffer__Mgi = var_Ca_buffer__Mgi; // millimolar
        const double var_cytosolic_Ca_buffer__kon_Myosin_Mg = 0.015699999999999999; // per_millimolar_per_millisecond
        const double var_Ca_buffer__Ca_Myosin = var_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin; // millimolar
        const double var_cytosolic_Ca_buffer__Ca_Myosin = var_Ca_buffer__Ca_Myosin; // millimolar
        const double var_Ca_buffer__Mg_Myosin = var_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin; // millimolar
        const double var_cytosolic_Ca_buffer__Mg_Myosin = var_Ca_buffer__Mg_Myosin; // millimolar
        const double var_cytosolic_Ca_buffer__dMg_Myosin = (var_cytosolic_Ca_buffer__kon_Myosin_Mg * var_cytosolic_Ca_buffer__Mgi * (var_cytosolic_Ca_buffer__Bmax_Myosin_Mg - (var_cytosolic_Ca_buffer__Ca_Myosin + var_cytosolic_Ca_buffer__Mg_Myosin))) - (var_cytosolic_Ca_buffer__koff_Myosin_Mg * var_cytosolic_Ca_buffer__Mg_Myosin); // millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__Bmax_TroponinC_Ca_Mg_Mg = 0.14000000000000001; // millimolar
        const double var_cytosolic_Ca_buffer__kon_TroponinC_Ca_Mg_Mg = 0.0030000000000000001; // per_millimolar_per_millisecond
        const double var_Ca_buffer__Ca_TroponinC_Ca_Mg = var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg; // millimolar
        const double var_cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg = var_Ca_buffer__Ca_TroponinC_Ca_Mg; // millimolar
        const double var_Ca_buffer__Mg_TroponinC_Ca_Mg = var_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg; // millimolar
        const double var_cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg = var_Ca_buffer__Mg_TroponinC_Ca_Mg; // millimolar
        const double var_cytosolic_Ca_buffer__koff_TroponinC_Ca_Mg_Mg = 0.0033300000000000001; // per_millisecond
        const double var_cytosolic_Ca_buffer__dMg_TroponinC_Ca_Mg = (var_cytosolic_Ca_buffer__kon_TroponinC_Ca_Mg_Mg * var_cytosolic_Ca_buffer__Mgi * (var_cytosolic_Ca_buffer__Bmax_TroponinC_Ca_Mg_Mg - (var_cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg + var_cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg))) - (var_cytosolic_Ca_buffer__koff_TroponinC_Ca_Mg_Mg * var_cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg); // millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__Cai = var_Ca_buffer__Cai; // millimolar
        const double var_cytosolic_Ca_buffer__kon_TroponinC_Ca_Mg_Ca = 2.3700000000000001; // per_millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__koff_TroponinC_Ca_Mg_Ca = 3.1999999999999999e-05; // per_millisecond
        const double var_cytosolic_Ca_buffer__Bmax_TroponinC_Ca_Mg_Ca = 0.14000000000000001; // millimolar
        const double var_cytosolic_Ca_buffer__dCa_TroponinC_Ca_Mg = (var_cytosolic_Ca_buffer__kon_TroponinC_Ca_Mg_Ca * var_cytosolic_Ca_buffer__Cai * (var_cytosolic_Ca_buffer__Bmax_TroponinC_Ca_Mg_Ca - (var_cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg + var_cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg))) - (var_cytosolic_Ca_buffer__koff_TroponinC_Ca_Mg_Ca * var_cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg); // millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__kon_Myosin_Ca = 13.800000000000001; // per_millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__Bmax_Myosin_Ca = 0.14000000000000001; // millimolar
        const double var_cytosolic_Ca_buffer__koff_Myosin_Ca = 0.00046000000000000001; // per_millisecond
        const double var_cytosolic_Ca_buffer__dCa_Myosin = (var_cytosolic_Ca_buffer__kon_Myosin_Ca * var_cytosolic_Ca_buffer__Cai * (var_cytosolic_Ca_buffer__Bmax_Myosin_Ca - (var_cytosolic_Ca_buffer__Ca_Myosin + var_cytosolic_Ca_buffer__Mg_Myosin))) - (var_cytosolic_Ca_buffer__koff_Myosin_Ca * var_cytosolic_Ca_buffer__Ca_Myosin); // millimolar_per_millisecond
        const double var_Ca_buffer__Ca_Calmodulin = var_chaste_interface__cytosolic_Ca_buffer__Ca_Calmodulin; // millimolar
        const double var_cytosolic_Ca_buffer__Ca_Calmodulin = var_Ca_buffer__Ca_Calmodulin; // millimolar
        const double var_cytosolic_Ca_buffer__koff_Calmodulin = 0.23799999999999999; // per_millisecond
        const double var_cytosolic_Ca_buffer__kon_Calmodulin = 34.0; // per_millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__Bmax_Calmodulin = 0.024; // millimolar
        const double var_cytosolic_Ca_buffer__dCa_Calmodulin = (var_cytosolic_Ca_buffer__kon_Calmodulin * var_cytosolic_Ca_buffer__Cai * (var_cytosolic_Ca_buffer__Bmax_Calmodulin - var_cytosolic_Ca_buffer__Ca_Calmodulin)) - (var_cytosolic_Ca_buffer__koff_Calmodulin * var_cytosolic_Ca_buffer__Ca_Calmodulin); // millimolar_per_millisecond
        const double var_Ca_buffer__Ca_TroponinC = var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC; // millimolar
        const double var_cytosolic_Ca_buffer__Ca_TroponinC = var_Ca_buffer__Ca_TroponinC; // millimolar
        const double var_cytosolic_Ca_buffer__Bmax_TroponinC = 0.070000000000000007; // millimolar
        const double var_cytosolic_Ca_buffer__kon_TroponinC = 32.700000000000003; // per_millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__koff_TroponinC = 0.019599999999999999; // per_millisecond
        const double var_cytosolic_Ca_buffer__dCa_TroponinC = (var_cytosolic_Ca_buffer__kon_TroponinC * var_cytosolic_Ca_buffer__Cai * (var_cytosolic_Ca_buffer__Bmax_TroponinC - var_cytosolic_Ca_buffer__Ca_TroponinC)) - (var_cytosolic_Ca_buffer__koff_TroponinC * var_cytosolic_Ca_buffer__Ca_TroponinC); // millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__koff_SRB = 0.059999999999999998; // per_millisecond
        const double var_cytosolic_Ca_buffer__Bmax_SRB = 0.017100000000000001; // millimolar
        const double var_Ca_buffer__Ca_SRB = var_chaste_interface__cytosolic_Ca_buffer__Ca_SRB; // millimolar
        const double var_cytosolic_Ca_buffer__Ca_SRB = var_Ca_buffer__Ca_SRB; // millimolar
        const double var_cytosolic_Ca_buffer__kon_SRB = 100.0; // per_millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__dCa_SRB = (var_cytosolic_Ca_buffer__kon_SRB * var_cytosolic_Ca_buffer__Cai * (var_cytosolic_Ca_buffer__Bmax_SRB - var_cytosolic_Ca_buffer__Ca_SRB)) - (var_cytosolic_Ca_buffer__koff_SRB * var_cytosolic_Ca_buffer__Ca_SRB); // millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__dCa_cytosol_tot_bound = var_cytosolic_Ca_buffer__dCa_TroponinC + var_cytosolic_Ca_buffer__dCa_TroponinC_Ca_Mg + var_cytosolic_Ca_buffer__dMg_TroponinC_Ca_Mg + var_cytosolic_Ca_buffer__dCa_Calmodulin + var_cytosolic_Ca_buffer__dCa_Myosin + var_cytosolic_Ca_buffer__dMg_Myosin + var_cytosolic_Ca_buffer__dCa_SRB; // millimolar_per_millisecond
        const double var_Ca_buffer__dCa_cytosol_tot_bound = var_cytosolic_Ca_buffer__dCa_cytosol_tot_bound; // millimolar_per_millisecond
        const double var_Ca_buffer__dCa_SLB_SL = (var_Ca_buffer__kon_SL * var_Ca_buffer__Ca_SL * (((var_Ca_buffer__Bmax_SLB_SL * var_Ca_buffer__Vol_myo) / var_Ca_buffer__Vol_SL) - var_Ca_buffer__Ca_SLB_SL)) - (var_Ca_buffer__koff_SLB * var_Ca_buffer__Ca_SLB_SL); // millimolar_per_millisecond
        const double var_Ca_buffer__dCa_SLB_jct = (var_Ca_buffer__kon_SL * var_Ca_buffer__Ca_jct * (((var_Ca_buffer__Bmax_SLB_jct * 0.10000000000000001 * var_Ca_buffer__Vol_myo) / var_Ca_buffer__Vol_jct) - var_Ca_buffer__Ca_SLB_jct)) - (var_Ca_buffer__koff_SLB * var_Ca_buffer__Ca_SLB_jct); // millimolar_per_millisecond
        const double var_Ca_buffer__dCa_SLHigh_SL = (var_Ca_buffer__kon_SL * var_Ca_buffer__Ca_SL * (((var_Ca_buffer__Bmax_SLHigh_SL * var_Ca_buffer__Vol_myo) / var_Ca_buffer__Vol_SL) - var_Ca_buffer__Ca_SLHigh_SL)) - (var_Ca_buffer__koff_SLHigh * var_Ca_buffer__Ca_SLHigh_SL); // millimolar_per_millisecond
        const double var_Ca_buffer__dCa_SLHigh_jct = (var_Ca_buffer__kon_SL * var_Ca_buffer__Ca_jct * (((var_Ca_buffer__Bmax_SLHigh_jct * 0.10000000000000001 * var_Ca_buffer__Vol_myo) / var_Ca_buffer__Vol_jct) - var_Ca_buffer__Ca_SLHigh_jct)) - (var_Ca_buffer__koff_SLHigh * var_Ca_buffer__Ca_SLHigh_jct); // millimolar_per_millisecond
        const double var_Ca_buffer__dCa_jct_tot_bound = var_Ca_buffer__dCa_SLB_jct + var_Ca_buffer__dCa_SLHigh_jct; // millimolar_per_millisecond
        const double var_Ca_buffer__dCa_SL_tot_bound = var_Ca_buffer__dCa_SLB_SL + var_Ca_buffer__dCa_SLHigh_SL; // millimolar_per_millisecond
        const double var_Ca_buffer__i_Ca_jct_tot = (var_Ca_buffer__i_CaL_Ca_jct - (2.0 * var_Ca_buffer__i_NaCa_jct)) + var_Ca_buffer__i_Cab_jct + var_Ca_buffer__i_Cap_jct; // microA_per_microF
        const double var_Ca_buffer__i_Ca_SL_tot = (var_Ca_buffer__i_CaL_Ca_SL - (2.0 * var_Ca_buffer__i_NaCa_SL)) + var_Ca_buffer__i_Cab_SL + var_Ca_buffer__i_Cap_SL; // microA_per_microF
        const double var_Ca_buffer__d_Cai_d_environment__time = ((((-var_Ca_buffer__j_pump_SR) * var_Ca_buffer__Vol_SR) / var_Ca_buffer__Vol_myo) + (var_Ca_buffer__J_Ca_SL_myo / var_Ca_buffer__Vol_myo)) - (1.0 * var_Ca_buffer__dCa_cytosol_tot_bound); // 'millimole per litre per millisecond'
        const double var_Ca_buffer__d_Ca_SR_d_environment__time = (var_Ca_buffer__j_pump_SR - (((var_Ca_buffer__j_leak_SR * var_Ca_buffer__Vol_myo) / var_Ca_buffer__Vol_SR) + var_Ca_buffer__j_rel_SR)) - var_Ca_buffer__dCalsequestrin; // 'millimole per litre per millisecond'
        const double var_Ca_buffer__d_Ca_SL_d_environment__time = ((((-var_Ca_buffer__i_Ca_SL_tot) * var_Ca_buffer__Cm) / (var_Ca_buffer__Vol_SL * 2.0 * var_Ca_buffer__F)) + ((var_Ca_buffer__J_Ca_jct_SL - var_Ca_buffer__J_Ca_SL_myo) / var_Ca_buffer__Vol_SL)) - (1.0 * var_Ca_buffer__dCa_SL_tot_bound); // 'millimole per litre per millisecond'
        const double var_Ca_buffer__d_Ca_jct_d_environment__time = (((((-var_Ca_buffer__i_Ca_jct_tot) * var_Ca_buffer__Cm) / (var_Ca_buffer__Vol_jct * 2.0 * var_Ca_buffer__F)) - (var_Ca_buffer__J_Ca_jct_SL / var_Ca_buffer__Vol_jct)) + ((var_Ca_buffer__j_rel_SR * var_Ca_buffer__Vol_SR) / var_Ca_buffer__Vol_jct) + ((var_Ca_buffer__j_leak_SR * var_Ca_buffer__Vol_myo) / var_Ca_buffer__Vol_jct)) - (1.0 * var_Ca_buffer__dCa_jct_tot_bound); // 'millimole per litre per millisecond'
        const double var_Ca_buffer__d_Ca_SLB_SL_d_environment__time = var_Ca_buffer__dCa_SLB_SL; // 'millimole per litre per millisecond'
        const double var_Ca_buffer__d_Ca_SLB_jct_d_environment__time = var_Ca_buffer__dCa_SLB_jct; // 'millimole per litre per millisecond'
        const double var_Ca_buffer__d_Ca_SLHigh_SL_d_environment__time = var_Ca_buffer__dCa_SLHigh_SL; // 'millimole per litre per millisecond'
        const double var_Ca_buffer__d_Ca_SLHigh_jct_d_environment__time = var_Ca_buffer__dCa_SLHigh_jct; // 'millimole per litre per millisecond'
        const double var_Ca_buffer__d_Ca_Calsequestrin_d_environment__time = var_Ca_buffer__dCalsequestrin; // 'millimole per litre per millisecond'
        const double var_cytosolic_Ca_buffer__d_Ca_TroponinC_d_environment__time = var_cytosolic_Ca_buffer__dCa_TroponinC; // 'millimole per litre per millisecond'
        const double var_Ca_buffer__cytosolic_Ca_buffer__d_Ca_TroponinC_d_environment__time = var_cytosolic_Ca_buffer__d_Ca_TroponinC_d_environment__time; // ___units_44
        const double var_cytosolic_Ca_buffer__d_Ca_TroponinC_Ca_Mg_d_environment__time = var_cytosolic_Ca_buffer__dCa_TroponinC_Ca_Mg; // 'millimole per litre per millisecond'
        const double var_Ca_buffer__cytosolic_Ca_buffer__d_Ca_TroponinC_Ca_Mg_d_environment__time = var_cytosolic_Ca_buffer__d_Ca_TroponinC_Ca_Mg_d_environment__time; // ___units_44
        const double var_cytosolic_Ca_buffer__d_Mg_TroponinC_Ca_Mg_d_environment__time = var_cytosolic_Ca_buffer__dMg_TroponinC_Ca_Mg; // 'millimole per litre per millisecond'
        const double var_Ca_buffer__cytosolic_Ca_buffer__d_Mg_TroponinC_Ca_Mg_d_environment__time = var_cytosolic_Ca_buffer__d_Mg_TroponinC_Ca_Mg_d_environment__time; // ___units_44
        const double var_cytosolic_Ca_buffer__d_Ca_Calmodulin_d_environment__time = var_cytosolic_Ca_buffer__dCa_Calmodulin; // 'millimole per litre per millisecond'
        const double var_Ca_buffer__cytosolic_Ca_buffer__d_Ca_Calmodulin_d_environment__time = var_cytosolic_Ca_buffer__d_Ca_Calmodulin_d_environment__time; // ___units_44
        const double var_cytosolic_Ca_buffer__d_Ca_Myosin_d_environment__time = var_cytosolic_Ca_buffer__dCa_Myosin; // 'millimole per litre per millisecond'
        const double var_Ca_buffer__cytosolic_Ca_buffer__d_Ca_Myosin_d_environment__time = var_cytosolic_Ca_buffer__d_Ca_Myosin_d_environment__time; // ___units_44
        const double var_cytosolic_Ca_buffer__d_Mg_Myosin_d_environment__time = var_cytosolic_Ca_buffer__dMg_Myosin; // 'millimole per litre per millisecond'
        const double var_Ca_buffer__cytosolic_Ca_buffer__d_Mg_Myosin_d_environment__time = var_cytosolic_Ca_buffer__d_Mg_Myosin_d_environment__time; // ___units_44
        const double var_cytosolic_Ca_buffer__d_Ca_SRB_d_environment__time = var_cytosolic_Ca_buffer__dCa_SRB; // 'millimole per litre per millisecond'
        const double var_Ca_buffer__cytosolic_Ca_buffer__d_Ca_SRB_d_environment__time = var_cytosolic_Ca_buffer__d_Ca_SRB_d_environment__time; // ___units_44
        const double var_chaste_interface__Ca_buffer__d_Cai_d_environment__time = var_Ca_buffer__d_Cai_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__INa_h_gate__d_h_d_environment__time = var_INa__INa_h_gate__d_h_d_environment__time; // per_millisecond
        const double var_chaste_interface__INa_j_gate__d_j_d_environment__time = var_INa__INa_j_gate__d_j_d_environment__time; // per_millisecond
        const double var_chaste_interface__INa_m_gate__d_m_d_environment__time = var_INa__INa_m_gate__d_m_d_environment__time; // per_millisecond
        const double var_chaste_interface__IKr_Xr_gate__d_Xr_d_environment__time = var_IKr__IKr_Xr_gate__d_Xr_d_environment__time; // per_millisecond
        const double var_chaste_interface__IKs_Xs_gate__d_Xs_d_environment__time = var_IKs__IKs_Xs_gate__d_Xs_d_environment__time; // per_millisecond
        const double var_chaste_interface__Itos_X_gate__d_X_tos_d_environment__time = var_Itos__Itos_X_gate__d_X_tos_d_environment__time; // per_millisecond
        const double var_chaste_interface__Itos_Y_gate__d_Y_tos_d_environment__time = var_Itos__Itos_Y_gate__d_Y_tos_d_environment__time; // per_millisecond
        const double var_chaste_interface__Itos_R_gate__d_R_tos_d_environment__time = var_Itos__Itos_R_gate__d_R_tos_d_environment__time; // per_millisecond
        const double var_chaste_interface__Itof_X_gate__d_X_tof_d_environment__time = var_Itof__Itof_X_gate__d_X_tof_d_environment__time; // per_millisecond
        const double var_chaste_interface__Itof_Y_gate__d_Y_tof_d_environment__time = var_Itof__Itof_Y_gate__d_Y_tof_d_environment__time; // per_millisecond
        const double var_chaste_interface__ICaL_d_gate__d_d_d_environment__time = var_ICaL__ICaL_d_gate__d_d_d_environment__time; // per_millisecond
        const double var_chaste_interface__ICaL_f_gate__d_f_d_environment__time = var_ICaL__ICaL_f_gate__d_f_d_environment__time; // per_millisecond
        const double var_chaste_interface__ICaL_fCa_gate__d_fCaB_SL_d_environment__time = var_ICaL__ICaL_fCa_gate__d_fCaB_SL_d_environment__time; // per_millisecond
        const double var_chaste_interface__ICaL_fCa_gate__d_fCaB_jct_d_environment__time = var_ICaL__ICaL_fCa_gate__d_fCaB_jct_d_environment__time; // per_millisecond
        const double var_chaste_interface__Jrel_SR__d_R_d_environment__time = var_Jrel_SR__d_R_d_environment__time; // per_millisecond
        const double var_chaste_interface__Jrel_SR__d_I_d_environment__time = var_Jrel_SR__d_I_d_environment__time; // per_millisecond
        const double var_chaste_interface__Jrel_SR__d_O_d_environment__time = var_Jrel_SR__d_O_d_environment__time; // per_millisecond
        const double var_chaste_interface__Na_buffer__d_Na_SL_d_environment__time = var_Na_buffer__d_Na_SL_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__Na_buffer__d_Na_jct_d_environment__time = var_Na_buffer__d_Na_jct_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__Na_buffer__d_Na_SL_buf_d_environment__time = var_Na_buffer__d_Na_SL_buf_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__Na_buffer__d_Na_jct_buf_d_environment__time = var_Na_buffer__d_Na_jct_buf_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__Na_buffer__d_Nai_d_environment__time = var_Na_buffer__d_Nai_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__Ca_buffer__d_Ca_SR_d_environment__time = var_Ca_buffer__d_Ca_SR_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__Ca_buffer__d_Ca_SL_d_environment__time = var_Ca_buffer__d_Ca_SL_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__Ca_buffer__d_Ca_jct_d_environment__time = var_Ca_buffer__d_Ca_jct_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__Ca_buffer__d_Ca_SLB_SL_d_environment__time = var_Ca_buffer__d_Ca_SLB_SL_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__Ca_buffer__d_Ca_SLB_jct_d_environment__time = var_Ca_buffer__d_Ca_SLB_jct_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__Ca_buffer__d_Ca_SLHigh_SL_d_environment__time = var_Ca_buffer__d_Ca_SLHigh_SL_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__Ca_buffer__d_Ca_SLHigh_jct_d_environment__time = var_Ca_buffer__d_Ca_SLHigh_jct_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__Ca_buffer__d_Ca_Calsequestrin_d_environment__time = var_Ca_buffer__d_Ca_Calsequestrin_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__cytosolic_Ca_buffer__d_Ca_TroponinC_d_environment__time = var_Ca_buffer__cytosolic_Ca_buffer__d_Ca_TroponinC_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__cytosolic_Ca_buffer__d_Ca_TroponinC_Ca_Mg_d_environment__time = var_Ca_buffer__cytosolic_Ca_buffer__d_Ca_TroponinC_Ca_Mg_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__cytosolic_Ca_buffer__d_Mg_TroponinC_Ca_Mg_d_environment__time = var_Ca_buffer__cytosolic_Ca_buffer__d_Mg_TroponinC_Ca_Mg_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__cytosolic_Ca_buffer__d_Ca_Calmodulin_d_environment__time = var_Ca_buffer__cytosolic_Ca_buffer__d_Ca_Calmodulin_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__cytosolic_Ca_buffer__d_Ca_Myosin_d_environment__time = var_Ca_buffer__cytosolic_Ca_buffer__d_Ca_Myosin_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__cytosolic_Ca_buffer__d_Mg_Myosin_d_environment__time = var_Ca_buffer__cytosolic_Ca_buffer__d_Mg_Myosin_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__cytosolic_Ca_buffer__d_Ca_SRB_d_environment__time = var_Ca_buffer__cytosolic_Ca_buffer__d_Ca_SRB_d_environment__time; // millimolar_per_millisecond
        const double d_dt_chaste_interface__Ca_buffer__Cai = var_chaste_interface__Ca_buffer__d_Cai_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__INa_h_gate__h = var_chaste_interface__INa_h_gate__d_h_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__INa_j_gate__j = var_chaste_interface__INa_j_gate__d_j_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__INa_m_gate__m = var_chaste_interface__INa_m_gate__d_m_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__IKr_Xr_gate__Xr = var_chaste_interface__IKr_Xr_gate__d_Xr_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__IKs_Xs_gate__Xs = var_chaste_interface__IKs_Xs_gate__d_Xs_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__Itos_X_gate__X_tos = var_chaste_interface__Itos_X_gate__d_X_tos_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__Itos_Y_gate__Y_tos = var_chaste_interface__Itos_Y_gate__d_Y_tos_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__Itos_R_gate__R_tos = var_chaste_interface__Itos_R_gate__d_R_tos_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__Itof_X_gate__X_tof = var_chaste_interface__Itof_X_gate__d_X_tof_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__Itof_Y_gate__Y_tof = var_chaste_interface__Itof_Y_gate__d_Y_tof_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__ICaL_d_gate__d = var_chaste_interface__ICaL_d_gate__d_d_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__ICaL_f_gate__f = var_chaste_interface__ICaL_f_gate__d_f_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__ICaL_fCa_gate__fCaB_SL = var_chaste_interface__ICaL_fCa_gate__d_fCaB_SL_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__ICaL_fCa_gate__fCaB_jct = var_chaste_interface__ICaL_fCa_gate__d_fCaB_jct_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__Jrel_SR__R = var_chaste_interface__Jrel_SR__d_R_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__Jrel_SR__I = var_chaste_interface__Jrel_SR__d_I_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__Jrel_SR__O = var_chaste_interface__Jrel_SR__d_O_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__Na_buffer__Na_SL = var_chaste_interface__Na_buffer__d_Na_SL_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Na_buffer__Na_jct = var_chaste_interface__Na_buffer__d_Na_jct_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Na_buffer__Na_SL_buf = var_chaste_interface__Na_buffer__d_Na_SL_buf_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Na_buffer__Na_jct_buf = var_chaste_interface__Na_buffer__d_Na_jct_buf_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Na_buffer__Nai = var_chaste_interface__Na_buffer__d_Nai_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_SR = var_chaste_interface__Ca_buffer__d_Ca_SR_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_SL = var_chaste_interface__Ca_buffer__d_Ca_SL_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_jct = var_chaste_interface__Ca_buffer__d_Ca_jct_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_SLB_SL = var_chaste_interface__Ca_buffer__d_Ca_SLB_SL_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_SLB_jct = var_chaste_interface__Ca_buffer__d_Ca_SLB_jct_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_SLHigh_SL = var_chaste_interface__Ca_buffer__d_Ca_SLHigh_SL_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_SLHigh_jct = var_chaste_interface__Ca_buffer__d_Ca_SLHigh_jct_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_Calsequestrin = var_chaste_interface__Ca_buffer__d_Ca_Calsequestrin_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC = var_chaste_interface__cytosolic_Ca_buffer__d_Ca_TroponinC_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg = var_chaste_interface__cytosolic_Ca_buffer__d_Ca_TroponinC_Ca_Mg_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg = var_chaste_interface__cytosolic_Ca_buffer__d_Mg_TroponinC_Ca_Mg_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_Calmodulin = var_chaste_interface__cytosolic_Ca_buffer__d_Ca_Calmodulin_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin = var_chaste_interface__cytosolic_Ca_buffer__d_Ca_Myosin_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin = var_chaste_interface__cytosolic_Ca_buffer__d_Mg_Myosin_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_SRB = var_chaste_interface__cytosolic_Ca_buffer__d_Ca_SRB_d_environment__time; // 'millimole per litre per millisecond'
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__cell__V = 0.0;
        }
        else
        {
            const double var_INa__i_Na = var_INa__i_Na_jct + var_INa__i_Na_SL; // microA_per_microF
            const double var_cell__i_Na = var_INa__i_Na; // microA_per_microF
            const double var_INab__i_Nab = var_INab__i_Nab_jct + var_INab__i_Nab_SL; // microA_per_microF
            const double var_cell__i_Nab = var_INab__i_Nab; // microA_per_microF
            const double var_INaK__i_NaK = var_INaK__i_NaK_jct + var_INaK__i_NaK_SL; // microA_per_microF
            const double var_cell__i_NaK = var_INaK__i_NaK; // microA_per_microF
            const double var_IKr_Rr_gate__V = var_IKr__V; // millivolt
            const double var_IKr_Rr_gate__Rr = 1.0 / (1.0 + exp((33.0 + var_IKr_Rr_gate__V) / 22.399999999999999)); // dimensionless
            const double var_IKr__Rr = var_IKr_Rr_gate__Rr; // dimensionless
            const double var_IKr__G_IKr_const = 0.029999999999999999; // milliS_per_microF
            const double var_IKr__Ko = var_model_parameters__Ko; // millimolar
            const double var_IKr__G_IKr = var_IKr__G_IKr_const * sqrt(var_IKr__Ko / 5.4000000000000004); // milliS_per_microF
            const double var_model_parameters__Ki = 135.0; // millimolar
            const double var_reversal_potentials__Ki = var_model_parameters__Ki; // millimolar
            const double var_reversal_potentials__Ko = var_model_parameters__Ko; // millimolar
            const double var_reversal_potentials__E_K = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Ko / var_reversal_potentials__Ki); // millivolt
            const double var_IKr__E_K = var_reversal_potentials__E_K; // millivolt
            const double var_IKr__i_Kr = var_IKr__G_IKr * var_IKr__Xr * var_IKr__Rr * (var_IKr__V - var_IKr__E_K); // microA_per_microF
            const double var_cell__i_Kr = var_IKr__i_Kr; // microA_per_microF
            const double var_IKs__Fx_Ks_jct = 0.11; // dimensionless
            const double var_IKs__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
            const double var_IKs__pCa_jct = (-log10(var_IKs__Ca_jct / 1.0)) + 3.0; // dimensionless
            const double var_IKs__G_Ks_Max = 0.070000000000000007; // milliS_per_microF
            const double var_IKs__G_Ks_jct = var_IKs__G_Ks_Max * (0.057000000000000002 + (0.19 / (1.0 + exp(((-7.2000000000000002) + var_IKs__pCa_jct) / 0.59999999999999998)))); // milliS_per_microF
            const double var_IKs__R = var_model_parameters__R; // joule_per_kilomole_kelvin
            const double var_IKs__T = var_model_parameters__T; // kelvin
            const double var_IKs__pKNa = 0.018329999999999999; // dimensionless
            const double var_IKs__F = var_model_parameters__F; // coulomb_per_mole
            const double var_IKs__Nao = var_model_parameters__Nao; // millimolar
            const double var_IKs__Ki = var_model_parameters__Ki; // millimolar
            const double var_IKs__Ko = var_model_parameters__Ko; // millimolar
            const double var_IKs__Nai = var_chaste_interface__Na_buffer__Nai; // millimolar
            const double var_IKs__E_Ks = ((var_IKs__R * var_IKs__T) / var_IKs__F) * log((var_IKs__Ko + (var_IKs__pKNa * var_IKs__Nao)) / (var_IKs__Ki + (var_IKs__pKNa * var_IKs__Nai))); // millivolt
            const double var_IKs__i_Ks_jct = var_IKs__Fx_Ks_jct * var_IKs__G_Ks_jct * pow(var_IKs__Xs, 2.0) * (var_IKs__V - var_IKs__E_Ks); // microA_per_microF
            const double var_IKs__Fx_Ks_SL = 0.89000000000000001; // dimensionless
            const double var_IKs__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
            const double var_IKs__pCa_SL = (-log10(var_IKs__Ca_SL / 1.0)) + 3.0; // dimensionless
            const double var_IKs__G_Ks_SL = var_IKs__G_Ks_Max * (0.057000000000000002 + (0.19 / (1.0 + exp(((-7.2000000000000002) + var_IKs__pCa_SL) / 0.59999999999999998)))); // milliS_per_microF
            const double var_IKs__i_Ks_SL = var_IKs__Fx_Ks_SL * var_IKs__G_Ks_SL * pow(var_IKs__Xs, 2.0) * (var_IKs__V - var_IKs__E_Ks); // microA_per_microF
            const double var_IKs__i_Ks = var_IKs__i_Ks_jct + var_IKs__i_Ks_SL; // microA_per_microF
            const double var_cell__i_Ks = var_IKs__i_Ks; // microA_per_microF
            const double var_IKp__E_K = var_reversal_potentials__E_K; // millivolt
            const double var_IKp__g_Kp = 0.001; // milliS_per_microF
            const double var_IKp__V = var_chaste_interface__cell__V; // millivolt
            const double var_IKp__i_Kp = (var_IKp__g_Kp * (var_IKp__V - var_IKp__E_K)) / (1.0 + exp(7.4880000000000004 - (var_IKp__V / 5.9800000000000004))); // microA_per_microF
            const double var_cell__i_Kp = var_IKp__i_Kp; // microA_per_microF
            const double var_Itos__G_tos = 0.059999999999999998; // milliS_per_microF
            const double var_Itos__E_K = var_reversal_potentials__E_K; // millivolt
            const double var_Itos__i_tos = var_Itos__G_tos * var_Itos__X_tos * (var_Itos__Y_tos + (0.5 * var_Itos__R_tos)) * (var_Itos__V - var_Itos__E_K); // microA_per_microF
            const double var_cell__i_tos = var_Itos__i_tos; // microA_per_microF
            const double var_Itof__G_tof = 0.02; // milliS_per_microF
            const double var_Itof__E_K = var_reversal_potentials__E_K; // millivolt
            const double var_Itof__i_tof = var_Itof__G_tof * var_Itof__X_tof * var_Itof__Y_tof * (var_Itof__V - var_Itof__E_K); // microA_per_microF
            const double var_cell__i_tof = var_Itof__i_tof; // microA_per_microF
            const double var_IK1__V = var_chaste_interface__cell__V; // millivolt
            const double var_IK1_K1_gate__V = var_IK1__V; // millivolt
            const double var_IK1__E_K = var_reversal_potentials__E_K; // millivolt
            const double var_IK1_K1_gate__E_K = var_IK1__E_K; // millivolt
            const double var_IK1_K1_gate__beta_K1 = ((0.49124000000000001 * exp(0.080320000000000003 * ((var_IK1_K1_gate__V - var_IK1_K1_gate__E_K) + 5.476))) + (1.0 * exp(0.061749999999999999 * (var_IK1_K1_gate__V - (var_IK1_K1_gate__E_K + 594.30999999999995))))) / (1.0 + exp((-0.51429999999999998) * ((var_IK1_K1_gate__V - var_IK1_K1_gate__E_K) + 4.7530000000000001))); // per_millisecond
            const double var_IK1_K1_gate__alpha_K1 = 1.02 / (1.0 + exp(0.23849999999999999 * (var_IK1_K1_gate__V - (var_IK1_K1_gate__E_K + 59.215000000000003)))); // per_millisecond
            const double var_IK1_K1_gate__K1_infinity = var_IK1_K1_gate__alpha_K1 / (var_IK1_K1_gate__alpha_K1 + var_IK1_K1_gate__beta_K1); // dimensionless
            const double var_IK1__K1_infinity = var_IK1_K1_gate__K1_infinity; // dimensionless
            const double var_IK1__Ko = var_model_parameters__Ko; // millimolar
            const double var_IK1__G_K1 = 0.90000000000000002 * sqrt(var_IK1__Ko / 5.4000000000000004); // milliS_per_microF
            const double var_IK1__i_K1 = var_IK1__G_K1 * var_IK1__K1_infinity * (var_IK1__V - var_IK1__E_K); // microA_per_microF
            const double var_cell__i_K1 = var_IK1__i_K1; // microA_per_microF
            const double var_INaCa__i_NaCa = var_INaCa__i_NaCa_jct + var_INaCa__i_NaCa_SL; // microA_per_microF
            const double var_cell__i_NaCa = var_INaCa__i_NaCa; // microA_per_microF
            const double var_ICl_Ca__V = var_chaste_interface__cell__V; // millivolt
            const double var_ICl_Ca__G_Cl = 0.109625; // milliS_per_microF
            const double var_ICl_Ca__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
            const double var_ICl_Ca__Kd_ClCa = 0.10000000000000001; // millimolar
            const double var_ICl_Ca__Fx_Cl_jct = 0.11; // dimensionless
            const double var_model_parameters__Cli = 15.0; // millimolar
            const double var_reversal_potentials__Cli = var_model_parameters__Cli; // millimolar
            const double var_model_parameters__Clo = 150.0; // millimolar
            const double var_reversal_potentials__Clo = var_model_parameters__Clo; // millimolar
            const double var_reversal_potentials__E_Cl = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Cli / var_reversal_potentials__Clo); // millivolt
            const double var_ICl_Ca__E_Cl = var_reversal_potentials__E_Cl; // millivolt
            const double var_ICl_Ca__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
            const double var_ICl_Ca__Fx_Cl_SL = 0.89000000000000001; // dimensionless
            const double var_ICl_Ca__i_Cl_Ca = var_ICl_Ca__G_Cl * (var_ICl_Ca__V - var_ICl_Ca__E_Cl) * ((var_ICl_Ca__Fx_Cl_jct / (1.0 + (var_ICl_Ca__Kd_ClCa / var_ICl_Ca__Ca_jct))) + (var_ICl_Ca__Fx_Cl_SL / (1.0 + (var_ICl_Ca__Kd_ClCa / var_ICl_Ca__Ca_SL)))); // microA_per_microF
            const double var_cell__i_Cl_Ca = var_ICl_Ca__i_Cl_Ca; // microA_per_microF
            const double var_IClb__V = var_chaste_interface__cell__V; // millivolt
            const double var_IClb__G_ClBk = 0.0089999999999999993; // milliS_per_microF
            const double var_IClb__E_Cl = var_reversal_potentials__E_Cl; // millivolt
            const double var_IClb__i_Clb = var_IClb__G_ClBk * (var_IClb__V - var_IClb__E_Cl); // microA_per_microF
            const double var_cell__i_Clb = var_IClb__i_Clb; // microA_per_microF
            const double var_ICaL__Ki = var_model_parameters__Ki; // millimolar
            const double var_ICaL__PK = 2.7000000000000001e-07; // litre_per_farad_millisecond
            const double var_ICaL__Ko = var_model_parameters__Ko; // millimolar
            const double var_ICaL__gamma_Ko = 0.75; // dimensionless
            const double var_ICaL__gamma_Ki = 0.75; // dimensionless
            const double var_ICaL__i_CaL_K = (var_ICaL__temp * ((var_ICaL__fCa_SL * var_ICaL__Fx_ICaL_SL) + (var_ICaL__fCa_jct * var_ICaL__Fx_ICaL_jct)) * var_ICaL__PK * ((var_ICaL__gamma_Ki * var_ICaL__Ki * exp((var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T))) - (var_ICaL__gamma_Ko * var_ICaL__Ko))) / (exp((var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T)) - 1.0); // microA_per_microF
            const double var_ICaL__i_CaL = var_ICaL__i_CaL_Ca_SL + var_ICaL__i_CaL_Ca_jct + var_ICaL__i_CaL_Na_SL + var_ICaL__i_CaL_Na_jct + var_ICaL__i_CaL_K; // microA_per_microF
            const double var_cell__i_CaL = var_ICaL__i_CaL; // microA_per_microF
            const double var_ICab__i_Cab = var_ICab__i_Cab_SL + var_ICab__i_Cab_jct; // microA_per_microF
            const double var_cell__i_Cab = var_ICab__i_Cab; // microA_per_microF
            const double var_ICap__i_Cap = var_ICap__i_Cap_jct + var_ICap__i_Cap_SL; // microA_per_microF
            const double var_cell__i_Cap = var_ICap__i_Cap; // microA_per_microF
            const double var_cell__chaste_interface__chaste_membrane_capacitance = HeartConfig::Instance()->GetCapacitance(); // uF_per_cm2
            const double var_chaste_interface__cell__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
            const double var_cell__i_Stim_converter = var_chaste_interface__cell__i_Stim; // uA_per_cm2
            const double var_cell__i_Stim = var_cell__i_Stim_converter / var_cell__chaste_interface__chaste_membrane_capacitance; // microA_per_microF
            const double var_cell__d_V_d_environment__time = -(var_cell__i_Na + var_cell__i_Nab + var_cell__i_NaK + var_cell__i_Kr + var_cell__i_Ks + var_cell__i_tos + var_cell__i_tof + var_cell__i_K1 + var_cell__i_NaCa + var_cell__i_Cl_Ca + var_cell__i_Clb + var_cell__i_CaL + var_cell__i_Cab + var_cell__i_Cap + var_cell__i_Kp + var_cell__i_Stim); // 'millivolt per millisecond'
            const double var_chaste_interface__cell__d_V_d_environment__time = var_cell__d_V_d_environment__time; // ___units_2
            d_dt_chaste_interface__cell__V = var_chaste_interface__cell__d_V_d_environment__time; // 'millivolt per millisecond'
        }
        
        rDY[0] = d_dt_chaste_interface__cell__V;
        rDY[1] = d_dt_chaste_interface__Ca_buffer__Cai;
        rDY[2] = d_dt_chaste_interface__INa_h_gate__h;
        rDY[3] = d_dt_chaste_interface__INa_j_gate__j;
        rDY[4] = d_dt_chaste_interface__INa_m_gate__m;
        rDY[5] = d_dt_chaste_interface__IKr_Xr_gate__Xr;
        rDY[6] = d_dt_chaste_interface__IKs_Xs_gate__Xs;
        rDY[7] = d_dt_chaste_interface__Itos_X_gate__X_tos;
        rDY[8] = d_dt_chaste_interface__Itos_Y_gate__Y_tos;
        rDY[9] = d_dt_chaste_interface__Itos_R_gate__R_tos;
        rDY[10] = d_dt_chaste_interface__Itof_X_gate__X_tof;
        rDY[11] = d_dt_chaste_interface__Itof_Y_gate__Y_tof;
        rDY[12] = d_dt_chaste_interface__ICaL_d_gate__d;
        rDY[13] = d_dt_chaste_interface__ICaL_f_gate__f;
        rDY[14] = d_dt_chaste_interface__ICaL_fCa_gate__fCaB_SL;
        rDY[15] = d_dt_chaste_interface__ICaL_fCa_gate__fCaB_jct;
        rDY[16] = d_dt_chaste_interface__Jrel_SR__R;
        rDY[17] = d_dt_chaste_interface__Jrel_SR__I;
        rDY[18] = d_dt_chaste_interface__Jrel_SR__O;
        rDY[19] = d_dt_chaste_interface__Na_buffer__Na_SL;
        rDY[20] = d_dt_chaste_interface__Na_buffer__Na_jct;
        rDY[21] = d_dt_chaste_interface__Na_buffer__Na_SL_buf;
        rDY[22] = d_dt_chaste_interface__Na_buffer__Na_jct_buf;
        rDY[23] = d_dt_chaste_interface__Na_buffer__Nai;
        rDY[24] = d_dt_chaste_interface__Ca_buffer__Ca_SR;
        rDY[25] = d_dt_chaste_interface__Ca_buffer__Ca_SL;
        rDY[26] = d_dt_chaste_interface__Ca_buffer__Ca_jct;
        rDY[27] = d_dt_chaste_interface__Ca_buffer__Ca_SLB_SL;
        rDY[28] = d_dt_chaste_interface__Ca_buffer__Ca_SLB_jct;
        rDY[29] = d_dt_chaste_interface__Ca_buffer__Ca_SLHigh_SL;
        rDY[30] = d_dt_chaste_interface__Ca_buffer__Ca_SLHigh_jct;
        rDY[31] = d_dt_chaste_interface__Ca_buffer__Ca_Calsequestrin;
        rDY[32] = d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC;
        rDY[33] = d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg;
        rDY[34] = d_dt_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg;
        rDY[35] = d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_Calmodulin;
        rDY[36] = d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin;
        rDY[37] = d_dt_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin;
        rDY[38] = d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_SRB;
    }
    
template<>
void OdeSystemInformation<DynamicShannon2004FromCellML>::Initialise(void)
{
    this->mSystemName = "shannon_2004";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-8.556885e1);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.597401e-5);

    // rY[2]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.867005e-1);

    // rY[3]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.91562e-1);

    // rY[4]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.405627e-3);

    // rY[5]:
    this->mVariableNames.push_back("IKr_Xr_gate__Xr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.641386e-3);

    // rY[6]:
    this->mVariableNames.push_back("IKs_Xs_gate__Xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(5.412034e-3);

    // rY[7]:
    this->mVariableNames.push_back("Itos_X_gate__X_tos");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(4.051574e-3);

    // rY[8]:
    this->mVariableNames.push_back("Itos_Y_gate__Y_tos");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.945511e-1);

    // rY[9]:
    this->mVariableNames.push_back("Itos_R_gate__R_tos");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9946);

    // rY[10]:
    this->mVariableNames.push_back("Itof_X_gate__X_tof");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(4.051574e-3);

    // rY[11]:
    this->mVariableNames.push_back("Itof_Y_gate__Y_tof");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.945511e-1);

    // rY[12]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(7.175662e-6);

    // rY[13]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.000681);

    // rY[14]:
    this->mVariableNames.push_back("ICaL_fCa_gate__fCaB_SL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.452605e-2);

    // rY[15]:
    this->mVariableNames.push_back("ICaL_fCa_gate__fCaB_jct");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.421991e-2);

    // rY[16]:
    this->mVariableNames.push_back("Jrel_SR__R");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.884332e-1);

    // rY[17]:
    this->mVariableNames.push_back("Jrel_SR__I");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.024274e-7);

    // rY[18]:
    this->mVariableNames.push_back("Jrel_SR__O");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.156628e-7);

    // rY[19]:
    this->mVariableNames.push_back("Na_buffer__Na_SL");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.80733);

    // rY[20]:
    this->mVariableNames.push_back("Na_buffer__Na_jct");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.80329);

    // rY[21]:
    this->mVariableNames.push_back("Na_buffer__Na_SL_buf");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.720854e-1);

    // rY[22]:
    this->mVariableNames.push_back("Na_buffer__Na_jct_buf");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(3.539892);

    // rY[23]:
    this->mVariableNames.push_back("Na_buffer__Nai");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.80853);

    // rY[24]:
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(5.545201e-1);

    // rY[25]:
    this->mVariableNames.push_back("Ca_buffer__Ca_SL");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.031812e-4);

    // rY[26]:
    this->mVariableNames.push_back("Ca_buffer__Ca_jct");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.737475e-4);

    // rY[27]:
    this->mVariableNames.push_back("Ca_buffer__Ca_SLB_SL");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.110363e-1);

    // rY[28]:
    this->mVariableNames.push_back("Ca_buffer__Ca_SLB_jct");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(9.566355e-3);

    // rY[29]:
    this->mVariableNames.push_back("Ca_buffer__Ca_SLHigh_SL");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.297378e-2);

    // rY[30]:
    this->mVariableNames.push_back("Ca_buffer__Ca_SLHigh_jct");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.347888e-3);

    // rY[31]:
    this->mVariableNames.push_back("Ca_buffer__Ca_Calsequestrin");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.242988);

    // rY[32]:
    this->mVariableNames.push_back("cytosolic_Ca_buffer__Ca_TroponinC");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.773191e-3);

    // rY[33]:
    this->mVariableNames.push_back("cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.078283e-1);

    // rY[34]:
    this->mVariableNames.push_back("cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.524002e-2);

    // rY[35]:
    this->mVariableNames.push_back("cytosolic_Ca_buffer__Ca_Calmodulin");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(2.911916e-4);

    // rY[36]:
    this->mVariableNames.push_back("cytosolic_Ca_buffer__Ca_Myosin");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.298754e-3);

    // rY[37]:
    this->mVariableNames.push_back("cytosolic_Ca_buffer__Mg_Myosin");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.381982e-1);

    // rY[38]:
    this->mVariableNames.push_back("cytosolic_Ca_buffer__Ca_SRB");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(2.143165e-3);

    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(DynamicShannon2004FromCellML)
extern "C"
{
    AbstractCardiacCellInterface* MakeCardiacCell(
            boost::shared_ptr<AbstractIvpOdeSolver> pSolver,
            boost::shared_ptr<AbstractStimulusFunction> pStimulus)
    {
        return new DynamicShannon2004FromCellML(pSolver, pStimulus);
    }
    
}

