//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: iribe_model_2006
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on Wed Sep 11 11:16:33 2019
//! 
//! <autogenerated>

#include "iribe_model_2006_without_otherwise_section.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    boost::shared_ptr<RegularStimulus> Dynamiciribe_model_2006_without_otherwise_sectionFromCellML::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_cell_parameters__Cm = 9.5000000000000005e-05; // microF
        const double var_chaste_interface__membrane_potential__stim_start = 0.0; // millisecond
        const double var_chaste_interface__membrane_potential__stim_period = 500.0; // millisecond
        const double var_chaste_interface__membrane_potential__stim_duration = 2.0; // millisecond
        const double var_membrane_potential__stim_amplitude =  -4.0; // nanoA
        const double var_chaste_interface__membrane_potential__stim_amplitude_converter = var_membrane_potential__stim_amplitude; // nanoA
        const double var_chaste_interface__membrane_potential__Cm = var_cell_parameters__Cm; // microF
        const double var_chaste_interface__membrane_potential__stim_amplitude = 0.001 * ((var_chaste_interface__membrane_potential__stim_amplitude_converter / var_chaste_interface__membrane_potential__Cm) * HeartConfig::Instance()->GetCapacitance()); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane_potential__stim_amplitude),
                var_chaste_interface__membrane_potential__stim_duration,
                var_chaste_interface__membrane_potential__stim_period,
                var_chaste_interface__membrane_potential__stim_start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    double Dynamiciribe_model_2006_without_otherwise_sectionFromCellML::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    
    Dynamiciribe_model_2006_without_otherwise_sectionFromCellML::Dynamiciribe_model_2006_without_otherwise_sectionFromCellML(boost::shared_ptr<AbstractIvpOdeSolver> pSolver, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCardiacCell(
                pSolver,
                23,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Dynamiciribe_model_2006_without_otherwise_sectionFromCellML>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
    }
    
    Dynamiciribe_model_2006_without_otherwise_sectionFromCellML::~Dynamiciribe_model_2006_without_otherwise_sectionFromCellML()
    {
    }
    
    double Dynamiciribe_model_2006_without_otherwise_sectionFromCellML::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
        // Units: millimolar; Initial value: 9.91e-6
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.0013809
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.99569
        double var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__x = rY[4];
        // Units: dimensionless; Initial value: 5.1127e-2
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[5];
        // Units: dimensionless; Initial value: 0.95854
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[6];
        // Units: dimensionless; Initial value: 1.5185e-8
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[7];
        // Units: dimensionless; Initial value: 1.7908e-8
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[8];
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[16];
        // Units: millimolar; Initial value: 5.8041
        double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[17];
        // Units: millimolar; Initial value: 138.22
        
        const double var_cell_parameters__R = 8314.4719999999998; // millijoule_per_mole_kelvin
        const double var_cell_parameters__T = 310.0; // kelvin
        const double var_cell_parameters__F = 96485.341499999995; // coulomb_per_mole
        const double var_cell_parameters__Cm = 9.5000000000000005e-05; // microF
        const double var_cell_parameters__Na_o = 140.0; // millimolar
        const double var_cell_parameters__K_o = 4.0; // millimolar
        const double var_cell_parameters__Ca_o = 2.0; // millimolar
        const double var_fast_sodium_current__g_Na = 2.5; // microS
        const double var_fast_sodium_current__h = var_chaste_interface__fast_sodium_current_h_gate__h; // dimensionless
        const double var_fast_sodium_current__V = var_chaste_interface__membrane_potential__V; // millivolt
        const double var_reversal_potentials__R = var_cell_parameters__R; // millijoule_per_mole_kelvin
        const double var_reversal_potentials__T = var_cell_parameters__T; // kelvin
        const double var_reversal_potentials__F = var_cell_parameters__F; // coulomb_per_mole
        const double var_reversal_potentials__K_i = var_chaste_interface__intracellular_potassium_concentration__K_i; // millimolar
        const double var_reversal_potentials__Na_o = var_cell_parameters__Na_o; // millimolar
        const double var_reversal_potentials__Na_i = var_chaste_interface__intracellular_sodium_concentration__Na_i; // millimolar
        const double var_reversal_potentials__K_o = var_cell_parameters__K_o; // millimolar
        const double var_reversal_potentials__E_mh = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log((var_reversal_potentials__Na_o + (0.12 * var_reversal_potentials__K_o)) / (var_reversal_potentials__Na_i + (0.12 * var_reversal_potentials__K_i))); // millivolt
        const double var_fast_sodium_current__E_mh = var_reversal_potentials__E_mh; // millivolt
        const double var_fast_sodium_current__m = var_chaste_interface__fast_sodium_current_m_gate__m; // dimensionless
        const double var_fast_sodium_current__i_Na = var_fast_sodium_current__g_Na * pow(var_fast_sodium_current__m, 3.0) * var_fast_sodium_current__h * (var_fast_sodium_current__V - var_fast_sodium_current__E_mh); // nanoA
        const double var_reversal_potentials__E_K = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__K_o / var_reversal_potentials__K_i); // millivolt
        const double var_time_independent_potassium_current__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_time_independent_potassium_current__K_o = var_cell_parameters__K_o; // millimolar
        const double var_time_independent_potassium_current__R = var_cell_parameters__R; // millijoule_per_mole_kelvin
        const double var_time_independent_potassium_current__V = var_chaste_interface__membrane_potential__V; // millivolt
        const double var_time_independent_potassium_current__T = var_cell_parameters__T; // kelvin
        const double var_time_independent_potassium_current__K_mk1 = 10.0; // millimolar
        const double var_time_independent_potassium_current__g_K1 = 1.0; // microS
        const double var_time_independent_potassium_current__F = var_cell_parameters__F; // coulomb_per_mole
        const double var_time_independent_potassium_current__i_K1 = (((var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current__K_o) / (var_time_independent_potassium_current__K_o + var_time_independent_potassium_current__K_mk1)) * (var_time_independent_potassium_current__V - var_time_independent_potassium_current__E_K)) / (1.0 + exp((2.0 * var_time_independent_potassium_current__F * ((var_time_independent_potassium_current__V - var_time_independent_potassium_current__E_K) - 10.0)) / (var_time_independent_potassium_current__R * var_time_independent_potassium_current__T))); // nanoA
        const double var_transient_outward_current__s = var_chaste_interface__transient_outward_current_s_gate__s; // dimensionless
        const double var_transient_outward_current__r = var_chaste_interface__transient_outward_current_r_gate__r; // dimensionless
        const double var_transient_outward_current__g_to = 0.0050000000000000001; // microS
        const double var_transient_outward_current__V = var_chaste_interface__membrane_potential__V; // millivolt
        const double var_transient_outward_current__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_transient_outward_current__i_to = var_transient_outward_current__g_to * var_transient_outward_current__s * var_transient_outward_current__r * (var_transient_outward_current__V - var_transient_outward_current__E_K); // nanoA
        const double var_time_dependent_rectifier_potassium_current__F = var_cell_parameters__F; // coulomb_per_mole
        const double var_time_dependent_rectifier_potassium_current__V = var_chaste_interface__membrane_potential__V; // millivolt
        const double var_time_dependent_rectifier_potassium_current__T = var_cell_parameters__T; // kelvin
        const double var_time_dependent_rectifier_potassium_current__R = var_cell_parameters__R; // millijoule_per_mole_kelvin
        const double var_time_dependent_rectifier_potassium_current__i_Kmax = 1.0; // nanoA
        const double var_time_dependent_rectifier_potassium_current__K_i = var_chaste_interface__intracellular_potassium_concentration__K_i; // millimolar
        const double var_time_dependent_rectifier_potassium_current__K_o = var_cell_parameters__K_o; // millimolar
        const double var_time_dependent_rectifier_potassium_current__x = var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__x; // dimensionless
        const double var_time_dependent_rectifier_potassium_current__i_K = (var_time_dependent_rectifier_potassium_current__i_Kmax * var_time_dependent_rectifier_potassium_current__x * (var_time_dependent_rectifier_potassium_current__K_i - (var_time_dependent_rectifier_potassium_current__K_o * exp(((-var_time_dependent_rectifier_potassium_current__V) * var_time_dependent_rectifier_potassium_current__F) / (var_time_dependent_rectifier_potassium_current__R * var_time_dependent_rectifier_potassium_current__T))))) / 140.0; // nanoA
        const double var_L_type_Ca_channel__d = var_chaste_interface__L_type_Ca_channel_d_gate__d; // dimensionless
        const double var_L_type_Ca_channel__P_Ca_L_Ca = 0.25; // nanoA_per_millimolar
        const double var_L_type_Ca_channel__f = var_chaste_interface__L_type_Ca_channel_f_gate__f; // dimensionless
        const double var_L_type_Ca_channel__K_o = var_cell_parameters__K_o; // millimolar
        const double var_L_type_Ca_channel__K_i = var_chaste_interface__intracellular_potassium_concentration__K_i; // millimolar
        const double var_L_type_Ca_channel__T = var_cell_parameters__T; // kelvin
        const double var_L_type_Ca_channel__V = var_chaste_interface__membrane_potential__V; // millivolt
        const double var_L_type_Ca_channel__F = var_cell_parameters__F; // coulomb_per_mole
        const double var_L_type_Ca_channel__R = var_cell_parameters__R; // millijoule_per_mole_kelvin
        const double var_L_type_Ca_channel__i_Ca_L_K = ((0.002 * var_L_type_Ca_channel__d * var_L_type_Ca_channel__f * var_L_type_Ca_channel__P_Ca_L_Ca * (var_L_type_Ca_channel__V - 50.0) * var_L_type_Ca_channel__F) / (var_L_type_Ca_channel__R * var_L_type_Ca_channel__T * (1.0 - exp(((-(var_L_type_Ca_channel__V - 50.0)) * var_L_type_Ca_channel__F) / (var_L_type_Ca_channel__R * var_L_type_Ca_channel__T))))) * ((var_L_type_Ca_channel__K_i * exp((50.0 * var_L_type_Ca_channel__F) / (var_L_type_Ca_channel__R * var_L_type_Ca_channel__T))) - (var_L_type_Ca_channel__K_o * exp(((-(var_L_type_Ca_channel__V - 50.0)) * var_L_type_Ca_channel__F) / (var_L_type_Ca_channel__R * var_L_type_Ca_channel__T)))); // nanoA
        const double var_L_type_Ca_channel__Ca_i = var_chaste_interface__intracellular_calcium_concentration__Ca_i; // millimolar
        const double var_L_type_Ca_channel__Ca_o = var_cell_parameters__Ca_o; // millimolar
        const double var_L_type_Ca_channel__i_Ca_L_Ca = ((4.0 * var_L_type_Ca_channel__d * var_L_type_Ca_channel__f * var_L_type_Ca_channel__P_Ca_L_Ca * (var_L_type_Ca_channel__V - 50.0) * var_L_type_Ca_channel__F) / (var_L_type_Ca_channel__R * var_L_type_Ca_channel__T * (1.0 - exp(((-2.0) * (var_L_type_Ca_channel__V - 50.0) * var_L_type_Ca_channel__F) / (var_L_type_Ca_channel__R * var_L_type_Ca_channel__T))))) * ((var_L_type_Ca_channel__Ca_i * exp((100.0 * var_L_type_Ca_channel__F) / (var_L_type_Ca_channel__R * var_L_type_Ca_channel__T))) - (var_L_type_Ca_channel__Ca_o * exp(((-2.0) * (var_L_type_Ca_channel__V - 50.0) * var_L_type_Ca_channel__F) / (var_L_type_Ca_channel__R * var_L_type_Ca_channel__T)))); // nanoA
        const double var_L_type_Ca_channel__Na_o = var_cell_parameters__Na_o; // millimolar
        const double var_L_type_Ca_channel__Na_i = var_chaste_interface__intracellular_sodium_concentration__Na_i; // millimolar
        const double var_L_type_Ca_channel__i_Ca_L_Na = ((0.01 * var_L_type_Ca_channel__d * var_L_type_Ca_channel__f * var_L_type_Ca_channel__P_Ca_L_Ca * (var_L_type_Ca_channel__V - 50.0) * var_L_type_Ca_channel__F) / (var_L_type_Ca_channel__R * var_L_type_Ca_channel__T * (1.0 - exp(((-(var_L_type_Ca_channel__V - 50.0)) * var_L_type_Ca_channel__F) / (var_L_type_Ca_channel__R * var_L_type_Ca_channel__T))))) * ((var_L_type_Ca_channel__Na_i * exp((50.0 * var_L_type_Ca_channel__F) / (var_L_type_Ca_channel__R * var_L_type_Ca_channel__T))) - (var_L_type_Ca_channel__Na_o * exp(((-(var_L_type_Ca_channel__V - 50.0)) * var_L_type_Ca_channel__F) / (var_L_type_Ca_channel__R * var_L_type_Ca_channel__T)))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_Ca_L_Ca + var_L_type_Ca_channel__i_Ca_L_K + var_L_type_Ca_channel__i_Ca_L_Na; // nanoA
        const double var_sodium_potassium_pump__V = var_chaste_interface__membrane_potential__V; // millivolt
        const double var_sodium_potassium_pump__T = var_cell_parameters__T; // kelvin
        const double var_sodium_potassium_pump__R = var_cell_parameters__R; // millijoule_per_mole_kelvin
        const double var_sodium_potassium_pump__Na_i = var_chaste_interface__intracellular_sodium_concentration__Na_i; // millimolar
        const double var_sodium_potassium_pump__F = var_cell_parameters__F; // coulomb_per_mole
        const double var_sodium_potassium_pump__i_NaK_max = 1.3600000000000001; // nanoA
        const double var_sodium_potassium_pump__K_o = var_cell_parameters__K_o; // millimolar
        const double var_sodium_potassium_pump__K_mNa = 21.699999999999999; // millimolar
        const double var_sodium_potassium_pump__K_mK = 1.0; // millimolar
        const double var_sodium_potassium_pump__i_NaK = (((((var_sodium_potassium_pump__i_NaK_max * var_sodium_potassium_pump__K_o) / (var_sodium_potassium_pump__K_mK + var_sodium_potassium_pump__K_o)) * var_sodium_potassium_pump__Na_i) / (var_sodium_potassium_pump__K_mNa + var_sodium_potassium_pump__Na_i)) * 1.0) / (1.0 + (0.1245 * exp(((-0.10000000000000001) * var_sodium_potassium_pump__V * var_sodium_potassium_pump__F) / (var_sodium_potassium_pump__R * var_sodium_potassium_pump__T))) + (0.035299999999999998 * exp(((-var_sodium_potassium_pump__V) * var_sodium_potassium_pump__F) / (var_sodium_potassium_pump__R * var_sodium_potassium_pump__T)))); // nanoA
        const double var_sodium_calcium_exchanger__V = var_chaste_interface__membrane_potential__V; // millivolt
        const double var_sodium_calcium_exchanger__gamma = 0.5; // dimensionless
        const double var_sodium_calcium_exchanger__F = var_cell_parameters__F; // coulomb_per_mole
        const double var_sodium_calcium_exchanger__Na_o = var_cell_parameters__Na_o; // millimolar
        const double var_sodium_calcium_exchanger__Ca_i = var_chaste_interface__intracellular_calcium_concentration__Ca_i; // millimolar
        const double var_sodium_calcium_exchanger__T = var_cell_parameters__T; // kelvin
        const double var_sodium_calcium_exchanger__Na_i = var_chaste_interface__intracellular_sodium_concentration__Na_i; // millimolar
        const double var_sodium_calcium_exchanger__i_NaCa_max = 0.00050000000000000001; // nanoA_per_millimolar4
        const double var_sodium_calcium_exchanger__Ca_o = var_cell_parameters__Ca_o; // millimolar
        const double var_sodium_calcium_exchanger__R = var_cell_parameters__R; // millijoule_per_mole_kelvin
        const double var_sodium_calcium_exchanger__i_NaCa = (var_sodium_calcium_exchanger__i_NaCa_max * ((exp((var_sodium_calcium_exchanger__gamma * var_sodium_calcium_exchanger__V * var_sodium_calcium_exchanger__F) / (var_sodium_calcium_exchanger__R * var_sodium_calcium_exchanger__T)) * pow(var_sodium_calcium_exchanger__Na_i, 3.0) * var_sodium_calcium_exchanger__Ca_o) - (exp(((var_sodium_calcium_exchanger__gamma - 1.0) * var_sodium_calcium_exchanger__V * var_sodium_calcium_exchanger__F) / (var_sodium_calcium_exchanger__R * var_sodium_calcium_exchanger__T)) * pow(var_sodium_calcium_exchanger__Na_o, 3.0) * var_sodium_calcium_exchanger__Ca_i))) / (1.0 + (var_sodium_calcium_exchanger__Ca_i / 0.0068999999999999999)); // nanoA
        const double var_sodium_background_current__V = var_chaste_interface__membrane_potential__V; // millivolt
        const double var_reversal_potentials__E_Na = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Na_o / var_reversal_potentials__Na_i); // millivolt
        const double var_sodium_background_current__E_Na = var_reversal_potentials__E_Na; // millivolt
        const double var_sodium_background_current__g_b_Na = 0.00059999999999999995; // microS
        const double var_sodium_background_current__i_b_Na = var_sodium_background_current__g_b_Na * (var_sodium_background_current__V - var_sodium_background_current__E_Na); // nanoA
        const double var_potassium_background_current__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_potassium_background_current__g_b_K = 0.00059999999999999995; // microS
        const double var_potassium_background_current__V = var_chaste_interface__membrane_potential__V; // millivolt
        const double var_potassium_background_current__i_b_K = var_potassium_background_current__g_b_K * (var_potassium_background_current__V - var_potassium_background_current__E_K); // nanoA
        const double var_reversal_potentials__Ca_o = var_cell_parameters__Ca_o; // millimolar
        const double var_reversal_potentials__Ca_i = var_chaste_interface__intracellular_calcium_concentration__Ca_i; // millimolar
        const double var_reversal_potentials__E_Ca = ((0.5 * var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Ca_o / var_reversal_potentials__Ca_i); // millivolt
        const double var_calcium_background_current__E_Ca = var_reversal_potentials__E_Ca; // millivolt
        const double var_calcium_background_current__g_b_Ca = 0.00025000000000000001; // microS
        const double var_calcium_background_current__V = var_chaste_interface__membrane_potential__V; // millivolt
        const double var_calcium_background_current__i_b_Ca = var_calcium_background_current__g_b_Ca * (var_calcium_background_current__V - var_calcium_background_current__E_Ca); // nanoA
        const double var_chaste_interface__membrane_potential__Cm = var_cell_parameters__Cm; // microF
        const double var_chaste_interface__potassium_background_current__i_b_K = var_potassium_background_current__i_b_K; // nanoA
        const double var_chaste_interface__time_independent_potassium_current__i_K1 = var_time_independent_potassium_current__i_K1; // nanoA
        const double var_chaste_interface__sodium_background_current__i_b_Na = var_sodium_background_current__i_b_Na; // nanoA
        const double var_chaste_interface__fast_sodium_current__i_Na = var_fast_sodium_current__i_Na; // nanoA
        const double var_chaste_interface__sodium_calcium_exchanger__i_NaCa = var_sodium_calcium_exchanger__i_NaCa; // nanoA
        const double var_chaste_interface__sodium_potassium_pump__i_NaK = var_sodium_potassium_pump__i_NaK; // nanoA
        const double var_chaste_interface__L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_Ca_L; // nanoA
        const double var_chaste_interface__transient_outward_current__i_to = var_transient_outward_current__i_to; // nanoA
        const double var_chaste_interface__calcium_background_current__i_b_Ca = var_calcium_background_current__i_b_Ca; // nanoA
        const double var_chaste_interface__time_dependent_rectifier_potassium_current__i_K = var_time_dependent_rectifier_potassium_current__i_K; // nanoA
        const double var_chaste_interface__i_ionic = 0.001 * (((var_chaste_interface__fast_sodium_current__i_Na + var_chaste_interface__sodium_background_current__i_b_Na + var_chaste_interface__time_independent_potassium_current__i_K1 + var_chaste_interface__time_dependent_rectifier_potassium_current__i_K + var_chaste_interface__transient_outward_current__i_to + var_chaste_interface__potassium_background_current__i_b_K + var_chaste_interface__L_type_Ca_channel__i_Ca_L + var_chaste_interface__calcium_background_current__i_b_Ca + var_chaste_interface__sodium_calcium_exchanger__i_NaCa + var_chaste_interface__sodium_potassium_pump__i_NaK) / var_chaste_interface__membrane_potential__Cm) * HeartConfig::Instance()->GetCapacitance()); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Dynamiciribe_model_2006_without_otherwise_sectionFromCellML::EvaluateYDerivatives(double var_chaste_interface__environment__time, const std::vector<double>& rY, std::vector<double>& rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
        // Units: millimolar; Initial value: 9.91e-6
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.0013809
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.99569
        double var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__x = rY[4];
        // Units: dimensionless; Initial value: 5.1127e-2
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[5];
        // Units: dimensionless; Initial value: 0.95854
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[6];
        // Units: dimensionless; Initial value: 1.5185e-8
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[7];
        // Units: dimensionless; Initial value: 1.7908e-8
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[8];
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__CaMKII_factor__F_CaMK = rY[9];
        // Units: dimensionless; Initial value: 1.028
        double var_chaste_interface__RyR__F_SRCa_RyR = rY[10];
        // Units: millimolar; Initial value: 0.25089
        double var_chaste_interface__RyR__F_1 = rY[11];
        // Units: dimensionless; Initial value: 0.5268
        double var_chaste_interface__RyR__F_2 = rY[12];
        // Units: dimensionless; Initial value: 8.7508e-6
        double var_chaste_interface__calmodulin__Cmdn_Ca = rY[13];
        // Units: millimolar; Initial value: 3.9636e-6
        double var_chaste_interface__troponin__Trpn_Ca = rY[14];
        // Units: millimolar; Initial value: 2.7661e-4
        double var_chaste_interface__SR_calcium_concentration__Ca_SR = rY[15];
        // Units: millimolar; Initial value: 0.24886
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[16];
        // Units: millimolar; Initial value: 5.8041
        double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[17];
        // Units: millimolar; Initial value: 138.22
        double var_chaste_interface__Force__N_0 = rY[18];
        // Units: dimensionless; Initial value: 0.99917
        double var_chaste_interface__Force__P_0 = rY[19];
        // Units: dimensionless; Initial value: 9.8593e-5
        double var_chaste_interface__Force__P_1 = rY[20];
        // Units: dimensionless; Initial value: 1.3331e-4
        double var_chaste_interface__Force__P_2 = rY[21];
        // Units: dimensionless; Initial value: 2.3505e-4
        double var_chaste_interface__Force__P_3 = rY[22];
        // Units: dimensionless; Initial value: 1.5349e-4
        
        
        // Mathematics
        double d_dt_chaste_interface__membrane_potential__V;
        const double var_cell_parameters__R = 8314.4719999999998; // millijoule_per_mole_kelvin
        const double var_cell_parameters__T = 310.0; // kelvin
        const double var_cell_parameters__F = 96485.341499999995; // coulomb_per_mole
        const double var_cell_parameters__v_i = 1.6404000000000001e-05; // microlitre
        const double var_cell_parameters__v_SR = 3.3477000000000002e-06; // microlitre
        const double var_cell_parameters__Na_o = 140.0; // millimolar
        const double var_cell_parameters__K_o = 4.0; // millimolar
        const double var_cell_parameters__Ca_o = 2.0; // millimolar
        const double var_fast_sodium_current__g_Na = 2.5; // microS
        const double var_fast_sodium_current__h = var_chaste_interface__fast_sodium_current_h_gate__h; // dimensionless
        const double var_fast_sodium_current__V = var_chaste_interface__membrane_potential__V; // millivolt
        const double var_reversal_potentials__R = var_cell_parameters__R; // millijoule_per_mole_kelvin
        const double var_reversal_potentials__T = var_cell_parameters__T; // kelvin
        const double var_reversal_potentials__F = var_cell_parameters__F; // coulomb_per_mole
        const double var_reversal_potentials__K_i = var_chaste_interface__intracellular_potassium_concentration__K_i; // millimolar
        const double var_reversal_potentials__Na_o = var_cell_parameters__Na_o; // millimolar
        const double var_reversal_potentials__Na_i = var_chaste_interface__intracellular_sodium_concentration__Na_i; // millimolar
        const double var_reversal_potentials__K_o = var_cell_parameters__K_o; // millimolar
        const double var_reversal_potentials__E_mh = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log((var_reversal_potentials__Na_o + (0.12 * var_reversal_potentials__K_o)) / (var_reversal_potentials__Na_i + (0.12 * var_reversal_potentials__K_i))); // millivolt
        const double var_fast_sodium_current__E_mh = var_reversal_potentials__E_mh; // millivolt
        const double var_fast_sodium_current__m = var_chaste_interface__fast_sodium_current_m_gate__m; // dimensionless
        const double var_fast_sodium_current__i_Na = var_fast_sodium_current__g_Na * pow(var_fast_sodium_current__m, 3.0) * var_fast_sodium_current__h * (var_fast_sodium_current__V - var_fast_sodium_current__E_mh); // nanoA
        const double var_reversal_potentials__E_K = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__K_o / var_reversal_potentials__K_i); // millivolt
        const double var_time_independent_potassium_current__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_time_independent_potassium_current__K_o = var_cell_parameters__K_o; // millimolar
        const double var_time_independent_potassium_current__R = var_cell_parameters__R; // millijoule_per_mole_kelvin
        const double var_time_independent_potassium_current__V = var_chaste_interface__membrane_potential__V; // millivolt
        const double var_time_independent_potassium_current__T = var_cell_parameters__T; // kelvin
        const double var_time_independent_potassium_current__K_mk1 = 10.0; // millimolar
        const double var_time_independent_potassium_current__g_K1 = 1.0; // microS
        const double var_time_independent_potassium_current__F = var_cell_parameters__F; // coulomb_per_mole
        const double var_time_independent_potassium_current__i_K1 = (((var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current__K_o) / (var_time_independent_potassium_current__K_o + var_time_independent_potassium_current__K_mk1)) * (var_time_independent_potassium_current__V - var_time_independent_potassium_current__E_K)) / (1.0 + exp((2.0 * var_time_independent_potassium_current__F * ((var_time_independent_potassium_current__V - var_time_independent_potassium_current__E_K) - 10.0)) / (var_time_independent_potassium_current__R * var_time_independent_potassium_current__T))); // nanoA
        const double var_transient_outward_current__s = var_chaste_interface__transient_outward_current_s_gate__s; // dimensionless
        const double var_transient_outward_current__r = var_chaste_interface__transient_outward_current_r_gate__r; // dimensionless
        const double var_transient_outward_current__g_to = 0.0050000000000000001; // microS
        const double var_transient_outward_current__V = var_chaste_interface__membrane_potential__V; // millivolt
        const double var_transient_outward_current__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_transient_outward_current__i_to = var_transient_outward_current__g_to * var_transient_outward_current__s * var_transient_outward_current__r * (var_transient_outward_current__V - var_transient_outward_current__E_K); // nanoA
        const double var_time_dependent_rectifier_potassium_current__F = var_cell_parameters__F; // coulomb_per_mole
        const double var_time_dependent_rectifier_potassium_current__V = var_chaste_interface__membrane_potential__V; // millivolt
        const double var_time_dependent_rectifier_potassium_current__T = var_cell_parameters__T; // kelvin
        const double var_time_dependent_rectifier_potassium_current__R = var_cell_parameters__R; // millijoule_per_mole_kelvin
        const double var_time_dependent_rectifier_potassium_current__i_Kmax = 1.0; // nanoA
        const double var_time_dependent_rectifier_potassium_current__K_i = var_chaste_interface__intracellular_potassium_concentration__K_i; // millimolar
        const double var_time_dependent_rectifier_potassium_current__K_o = var_cell_parameters__K_o; // millimolar
        const double var_time_dependent_rectifier_potassium_current__x = var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__x; // dimensionless
        const double var_time_dependent_rectifier_potassium_current__i_K = (var_time_dependent_rectifier_potassium_current__i_Kmax * var_time_dependent_rectifier_potassium_current__x * (var_time_dependent_rectifier_potassium_current__K_i - (var_time_dependent_rectifier_potassium_current__K_o * exp(((-var_time_dependent_rectifier_potassium_current__V) * var_time_dependent_rectifier_potassium_current__F) / (var_time_dependent_rectifier_potassium_current__R * var_time_dependent_rectifier_potassium_current__T))))) / 140.0; // nanoA
        const double var_L_type_Ca_channel__d = var_chaste_interface__L_type_Ca_channel_d_gate__d; // dimensionless
        const double var_L_type_Ca_channel__P_Ca_L_Ca = 0.25; // nanoA_per_millimolar
        const double var_L_type_Ca_channel__f = var_chaste_interface__L_type_Ca_channel_f_gate__f; // dimensionless
        const double var_L_type_Ca_channel__K_o = var_cell_parameters__K_o; // millimolar
        const double var_L_type_Ca_channel__K_i = var_chaste_interface__intracellular_potassium_concentration__K_i; // millimolar
        const double var_L_type_Ca_channel__T = var_cell_parameters__T; // kelvin
        const double var_L_type_Ca_channel__V = var_chaste_interface__membrane_potential__V; // millivolt
        const double var_L_type_Ca_channel__F = var_cell_parameters__F; // coulomb_per_mole
        const double var_L_type_Ca_channel__R = var_cell_parameters__R; // millijoule_per_mole_kelvin
        const double var_L_type_Ca_channel__i_Ca_L_K = ((0.002 * var_L_type_Ca_channel__d * var_L_type_Ca_channel__f * var_L_type_Ca_channel__P_Ca_L_Ca * (var_L_type_Ca_channel__V - 50.0) * var_L_type_Ca_channel__F) / (var_L_type_Ca_channel__R * var_L_type_Ca_channel__T * (1.0 - exp(((-(var_L_type_Ca_channel__V - 50.0)) * var_L_type_Ca_channel__F) / (var_L_type_Ca_channel__R * var_L_type_Ca_channel__T))))) * ((var_L_type_Ca_channel__K_i * exp((50.0 * var_L_type_Ca_channel__F) / (var_L_type_Ca_channel__R * var_L_type_Ca_channel__T))) - (var_L_type_Ca_channel__K_o * exp(((-(var_L_type_Ca_channel__V - 50.0)) * var_L_type_Ca_channel__F) / (var_L_type_Ca_channel__R * var_L_type_Ca_channel__T)))); // nanoA
        const double var_L_type_Ca_channel__Ca_i = var_chaste_interface__intracellular_calcium_concentration__Ca_i; // millimolar
        const double var_L_type_Ca_channel__Ca_o = var_cell_parameters__Ca_o; // millimolar
        const double var_L_type_Ca_channel__i_Ca_L_Ca = ((4.0 * var_L_type_Ca_channel__d * var_L_type_Ca_channel__f * var_L_type_Ca_channel__P_Ca_L_Ca * (var_L_type_Ca_channel__V - 50.0) * var_L_type_Ca_channel__F) / (var_L_type_Ca_channel__R * var_L_type_Ca_channel__T * (1.0 - exp(((-2.0) * (var_L_type_Ca_channel__V - 50.0) * var_L_type_Ca_channel__F) / (var_L_type_Ca_channel__R * var_L_type_Ca_channel__T))))) * ((var_L_type_Ca_channel__Ca_i * exp((100.0 * var_L_type_Ca_channel__F) / (var_L_type_Ca_channel__R * var_L_type_Ca_channel__T))) - (var_L_type_Ca_channel__Ca_o * exp(((-2.0) * (var_L_type_Ca_channel__V - 50.0) * var_L_type_Ca_channel__F) / (var_L_type_Ca_channel__R * var_L_type_Ca_channel__T)))); // nanoA
        const double var_L_type_Ca_channel__Na_o = var_cell_parameters__Na_o; // millimolar
        const double var_L_type_Ca_channel__Na_i = var_chaste_interface__intracellular_sodium_concentration__Na_i; // millimolar
        const double var_L_type_Ca_channel__i_Ca_L_Na = ((0.01 * var_L_type_Ca_channel__d * var_L_type_Ca_channel__f * var_L_type_Ca_channel__P_Ca_L_Ca * (var_L_type_Ca_channel__V - 50.0) * var_L_type_Ca_channel__F) / (var_L_type_Ca_channel__R * var_L_type_Ca_channel__T * (1.0 - exp(((-(var_L_type_Ca_channel__V - 50.0)) * var_L_type_Ca_channel__F) / (var_L_type_Ca_channel__R * var_L_type_Ca_channel__T))))) * ((var_L_type_Ca_channel__Na_i * exp((50.0 * var_L_type_Ca_channel__F) / (var_L_type_Ca_channel__R * var_L_type_Ca_channel__T))) - (var_L_type_Ca_channel__Na_o * exp(((-(var_L_type_Ca_channel__V - 50.0)) * var_L_type_Ca_channel__F) / (var_L_type_Ca_channel__R * var_L_type_Ca_channel__T)))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_Ca_L_Ca + var_L_type_Ca_channel__i_Ca_L_K + var_L_type_Ca_channel__i_Ca_L_Na; // nanoA
        const double var_sodium_potassium_pump__V = var_chaste_interface__membrane_potential__V; // millivolt
        const double var_sodium_potassium_pump__T = var_cell_parameters__T; // kelvin
        const double var_sodium_potassium_pump__R = var_cell_parameters__R; // millijoule_per_mole_kelvin
        const double var_sodium_potassium_pump__Na_i = var_chaste_interface__intracellular_sodium_concentration__Na_i; // millimolar
        const double var_sodium_potassium_pump__F = var_cell_parameters__F; // coulomb_per_mole
        const double var_sodium_potassium_pump__i_NaK_max = 1.3600000000000001; // nanoA
        const double var_sodium_potassium_pump__K_o = var_cell_parameters__K_o; // millimolar
        const double var_sodium_potassium_pump__K_mNa = 21.699999999999999; // millimolar
        const double var_sodium_potassium_pump__K_mK = 1.0; // millimolar
        const double var_sodium_potassium_pump__i_NaK = (((((var_sodium_potassium_pump__i_NaK_max * var_sodium_potassium_pump__K_o) / (var_sodium_potassium_pump__K_mK + var_sodium_potassium_pump__K_o)) * var_sodium_potassium_pump__Na_i) / (var_sodium_potassium_pump__K_mNa + var_sodium_potassium_pump__Na_i)) * 1.0) / (1.0 + (0.1245 * exp(((-0.10000000000000001) * var_sodium_potassium_pump__V * var_sodium_potassium_pump__F) / (var_sodium_potassium_pump__R * var_sodium_potassium_pump__T))) + (0.035299999999999998 * exp(((-var_sodium_potassium_pump__V) * var_sodium_potassium_pump__F) / (var_sodium_potassium_pump__R * var_sodium_potassium_pump__T)))); // nanoA
        const double var_sodium_calcium_exchanger__V = var_chaste_interface__membrane_potential__V; // millivolt
        const double var_sodium_calcium_exchanger__gamma = 0.5; // dimensionless
        const double var_sodium_calcium_exchanger__F = var_cell_parameters__F; // coulomb_per_mole
        const double var_sodium_calcium_exchanger__Na_o = var_cell_parameters__Na_o; // millimolar
        const double var_sodium_calcium_exchanger__Ca_i = var_chaste_interface__intracellular_calcium_concentration__Ca_i; // millimolar
        const double var_sodium_calcium_exchanger__T = var_cell_parameters__T; // kelvin
        const double var_sodium_calcium_exchanger__Na_i = var_chaste_interface__intracellular_sodium_concentration__Na_i; // millimolar
        const double var_sodium_calcium_exchanger__i_NaCa_max = 0.00050000000000000001; // nanoA_per_millimolar4
        const double var_sodium_calcium_exchanger__Ca_o = var_cell_parameters__Ca_o; // millimolar
        const double var_sodium_calcium_exchanger__R = var_cell_parameters__R; // millijoule_per_mole_kelvin
        const double var_sodium_calcium_exchanger__i_NaCa = (var_sodium_calcium_exchanger__i_NaCa_max * ((exp((var_sodium_calcium_exchanger__gamma * var_sodium_calcium_exchanger__V * var_sodium_calcium_exchanger__F) / (var_sodium_calcium_exchanger__R * var_sodium_calcium_exchanger__T)) * pow(var_sodium_calcium_exchanger__Na_i, 3.0) * var_sodium_calcium_exchanger__Ca_o) - (exp(((var_sodium_calcium_exchanger__gamma - 1.0) * var_sodium_calcium_exchanger__V * var_sodium_calcium_exchanger__F) / (var_sodium_calcium_exchanger__R * var_sodium_calcium_exchanger__T)) * pow(var_sodium_calcium_exchanger__Na_o, 3.0) * var_sodium_calcium_exchanger__Ca_i))) / (1.0 + (var_sodium_calcium_exchanger__Ca_i / 0.0068999999999999999)); // nanoA
        const double var_sodium_background_current__V = var_chaste_interface__membrane_potential__V; // millivolt
        const double var_reversal_potentials__E_Na = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Na_o / var_reversal_potentials__Na_i); // millivolt
        const double var_sodium_background_current__E_Na = var_reversal_potentials__E_Na; // millivolt
        const double var_sodium_background_current__g_b_Na = 0.00059999999999999995; // microS
        const double var_sodium_background_current__i_b_Na = var_sodium_background_current__g_b_Na * (var_sodium_background_current__V - var_sodium_background_current__E_Na); // nanoA
        const double var_potassium_background_current__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_potassium_background_current__g_b_K = 0.00059999999999999995; // microS
        const double var_potassium_background_current__V = var_chaste_interface__membrane_potential__V; // millivolt
        const double var_potassium_background_current__i_b_K = var_potassium_background_current__g_b_K * (var_potassium_background_current__V - var_potassium_background_current__E_K); // nanoA
        const double var_reversal_potentials__Ca_o = var_cell_parameters__Ca_o; // millimolar
        const double var_reversal_potentials__Ca_i = var_chaste_interface__intracellular_calcium_concentration__Ca_i; // millimolar
        const double var_reversal_potentials__E_Ca = ((0.5 * var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Ca_o / var_reversal_potentials__Ca_i); // millivolt
        const double var_calcium_background_current__E_Ca = var_reversal_potentials__E_Ca; // millivolt
        const double var_calcium_background_current__g_b_Ca = 0.00025000000000000001; // microS
        const double var_calcium_background_current__V = var_chaste_interface__membrane_potential__V; // millivolt
        const double var_calcium_background_current__i_b_Ca = var_calcium_background_current__g_b_Ca * (var_calcium_background_current__V - var_calcium_background_current__E_Ca); // nanoA
        const double var_fast_sodium_current__shift_INa_inact = 0.0; // millivolt
        const double var_fast_sodium_current__perc_reduced_inact_for_IpNa = 0.0; // dimensionless
        const double var_fast_sodium_current_m_gate__m = var_fast_sodium_current__m; // dimensionless
        const double var_fast_sodium_current_m_gate__V = var_fast_sodium_current__V; // millivolt
        const double var_fast_sodium_current_m_gate__E0_m = var_fast_sodium_current_m_gate__V + 41.0; // millivolt
        const double var_fast_sodium_current_m_gate__delta_m = 1.0000000000000001e-05; // millivolt
        const double var_fast_sodium_current_m_gate__alpha_m = (fabs(var_fast_sodium_current_m_gate__E0_m) < var_fast_sodium_current_m_gate__delta_m) ? 2000.0 : ((200.0 * var_fast_sodium_current_m_gate__E0_m) / (1.0 - exp((-0.10000000000000001) * var_fast_sodium_current_m_gate__E0_m))); // per_second
        const double var_fast_sodium_current_m_gate__beta_m = 8000.0 * exp((-0.056000000000000001) * (var_fast_sodium_current_m_gate__V + 66.0)); // per_second
        const double var_fast_sodium_current_m_gate__d_m_d_environment__time = (var_fast_sodium_current_m_gate__alpha_m * (1.0 - var_fast_sodium_current_m_gate__m)) - (var_fast_sodium_current_m_gate__beta_m * var_fast_sodium_current_m_gate__m); // per_second
        const double var_fast_sodium_current__fast_sodium_current_m_gate__d_m_d_environment__time = var_fast_sodium_current_m_gate__d_m_d_environment__time; // per_second
        const double var_fast_sodium_current_h_gate__perc_reduced_inact_for_IpNa = var_fast_sodium_current__perc_reduced_inact_for_IpNa; // dimensionless
        const double var_fast_sodium_current_h_gate__V = var_fast_sodium_current__V; // millivolt
        const double var_fast_sodium_current_h_gate__shift_INa_inact = var_fast_sodium_current__shift_INa_inact; // millivolt
        const double var_fast_sodium_current_h_gate__beta_h = 2000.0 / (1.0 + (320.0 * exp((-0.10000000000000001) * ((var_fast_sodium_current_h_gate__V + 75.0) - var_fast_sodium_current_h_gate__shift_INa_inact)))); // per_second
        const double var_fast_sodium_current_h_gate__alpha_h = 20.0 * exp((-0.125) * ((var_fast_sodium_current_h_gate__V + 75.0) - var_fast_sodium_current_h_gate__shift_INa_inact)); // per_second
        const double var_fast_sodium_current_h_gate__h_inf = ((var_fast_sodium_current_h_gate__alpha_h * (1.0 - (var_fast_sodium_current_h_gate__perc_reduced_inact_for_IpNa / 100.0))) / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h)) + (var_fast_sodium_current_h_gate__perc_reduced_inact_for_IpNa / 100.0); // dimensionless
        const double var_fast_sodium_current_h_gate__tau_h = 1.0 / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h); // second
        const double var_fast_sodium_current_h_gate__h = var_fast_sodium_current__h; // dimensionless
        const double var_fast_sodium_current_h_gate__d_h_d_environment__time = (var_fast_sodium_current_h_gate__h_inf - var_fast_sodium_current_h_gate__h) / var_fast_sodium_current_h_gate__tau_h; // per_second
        const double var_fast_sodium_current__fast_sodium_current_h_gate__d_h_d_environment__time = var_fast_sodium_current_h_gate__d_h_d_environment__time; // per_second
        const double var_time_dependent_rectifier_potassium_current_x_gate__V = var_time_dependent_rectifier_potassium_current__V; // millivolt
        const double var_time_dependent_rectifier_potassium_current_x_gate__beta_x = (1.3 * exp((-0.059999999999999998) * (var_time_dependent_rectifier_potassium_current_x_gate__V + 20.0))) / (1.0 + exp((-0.040000000000000001) * (var_time_dependent_rectifier_potassium_current_x_gate__V + 20.0))); // per_second
        const double var_time_dependent_rectifier_potassium_current_x_gate__alpha_x = (0.5 * exp(0.082600000000000007 * (var_time_dependent_rectifier_potassium_current_x_gate__V + 50.0))) / (1.0 + exp(0.057000000000000002 * (var_time_dependent_rectifier_potassium_current_x_gate__V + 50.0))); // per_second
        const double var_time_dependent_rectifier_potassium_current_x_gate__x = var_time_dependent_rectifier_potassium_current__x; // dimensionless
        const double var_time_dependent_rectifier_potassium_current_x_gate__d_x_d_environment__time = (var_time_dependent_rectifier_potassium_current_x_gate__alpha_x * (1.0 - var_time_dependent_rectifier_potassium_current_x_gate__x)) - (var_time_dependent_rectifier_potassium_current_x_gate__beta_x * var_time_dependent_rectifier_potassium_current_x_gate__x); // per_second
        const double var_time_dependent_rectifier_potassium_current__time_dependent_rectifier_potassium_current_x_gate__d_x_d_environment__time = var_time_dependent_rectifier_potassium_current_x_gate__d_x_d_environment__time; // per_second
        const double var_transient_outward_current_s_gate__s = var_transient_outward_current__s; // dimensionless
        const double var_transient_outward_current_s_gate__V = var_transient_outward_current__V; // millivolt
        const double var_transient_outward_current_s_gate__alpha_s = 0.033000000000000002 * exp((-var_transient_outward_current_s_gate__V) / 17.0); // per_second
        const double var_transient_outward_current_s_gate__beta_s = 33.0 / (1.0 + exp((-0.125) * (var_transient_outward_current_s_gate__V + 10.0))); // per_second
        const double var_transient_outward_current_s_gate__d_s_d_environment__time = (var_transient_outward_current_s_gate__alpha_s * (1.0 - var_transient_outward_current_s_gate__s)) - (var_transient_outward_current_s_gate__beta_s * var_transient_outward_current_s_gate__s); // per_second
        const double var_transient_outward_current__transient_outward_current_s_gate__d_s_d_environment__time = var_transient_outward_current_s_gate__d_s_d_environment__time; // per_second
        const double var_transient_outward_current_r_gate__r = var_transient_outward_current__r; // dimensionless
        const double var_transient_outward_current_r_gate__V = var_transient_outward_current__V; // millivolt
        const double var_transient_outward_current_r_gate__d_r_d_environment__time = 333.0 * ((1.0 / (1.0 + exp((-(var_transient_outward_current_r_gate__V + 4.0)) / 5.0))) - var_transient_outward_current_r_gate__r); // per_second
        const double var_transient_outward_current__transient_outward_current_r_gate__d_r_d_environment__time = var_transient_outward_current_r_gate__d_r_d_environment__time; // per_second
        const double var_L_type_Ca_channel_d_gate__V = var_L_type_Ca_channel__V; // millivolt
        const double var_L_type_Ca_channel_d_gate__E0_d = (var_L_type_Ca_channel_d_gate__V + 24.0) - 5.0; // millivolt
        const double var_L_type_Ca_channel_d_gate__speed_d = 3.0; // dimensionless
        const double var_L_type_Ca_channel_d_gate__alpha_d = (fabs(var_L_type_Ca_channel_d_gate__E0_d) < 1.0000000000000001e-05) ? (var_L_type_Ca_channel_d_gate__speed_d * 120.0) : ((var_L_type_Ca_channel_d_gate__speed_d * 30.0 * var_L_type_Ca_channel_d_gate__E0_d) / (1.0 - exp((-var_L_type_Ca_channel_d_gate__E0_d) / 4.0))); // per_second
        const double var_L_type_Ca_channel_d_gate__d = var_L_type_Ca_channel__d; // dimensionless
        const double var_L_type_Ca_channel_d_gate__beta_d = (fabs(var_L_type_Ca_channel_d_gate__E0_d) < 1.0000000000000001e-05) ? (var_L_type_Ca_channel_d_gate__speed_d * 120.0) : ((var_L_type_Ca_channel_d_gate__speed_d * (-12.0) * var_L_type_Ca_channel_d_gate__E0_d) / (1.0 - exp(var_L_type_Ca_channel_d_gate__E0_d / 10.0))); // per_second
        const double var_L_type_Ca_channel_d_gate__d_d_d_environment__time = (var_L_type_Ca_channel_d_gate__alpha_d * (1.0 - var_L_type_Ca_channel_d_gate__d)) - (var_L_type_Ca_channel_d_gate__beta_d * var_L_type_Ca_channel_d_gate__d); // per_second
        const double var_L_type_Ca_channel__L_type_Ca_channel_d_gate__d_d_d_environment__time = var_L_type_Ca_channel_d_gate__d_d_d_environment__time; // per_second
        const double var_L_type_Ca_channel_f_gate__V = var_L_type_Ca_channel__V; // millivolt
        const double var_L_type_Ca_channel_f_gate__E0_f = var_L_type_Ca_channel_f_gate__V + 34.0; // millivolt
        const double var_L_type_Ca_channel_f_gate__speed_f = 0.5; // dimensionless
        const double var_L_type_Ca_channel_f_gate__beta_f = (var_L_type_Ca_channel_f_gate__speed_f * 50.0) / (1.0 + exp((-var_L_type_Ca_channel_f_gate__E0_f) / 4.0)); // per_second
        const double var_L_type_Ca_channel_f_gate__f = var_L_type_Ca_channel__f; // dimensionless
        const double var_L_type_Ca_channel_f_gate__alpha_f = (fabs(var_L_type_Ca_channel_f_gate__E0_f) < 1.0000000000000001e-05) ? (var_L_type_Ca_channel_f_gate__speed_f * 25.0) : ((var_L_type_Ca_channel_f_gate__speed_f * 6.25 * var_L_type_Ca_channel_f_gate__E0_f) / ((-1.0) + exp(var_L_type_Ca_channel_f_gate__E0_f / 4.0))); // per_second
        const double var_L_type_Ca_channel_f_gate__d_f_d_environment__time = (var_L_type_Ca_channel_f_gate__alpha_f * (1.0 - var_L_type_Ca_channel_f_gate__f)) - (var_L_type_Ca_channel_f_gate__beta_f * var_L_type_Ca_channel_f_gate__f); // per_second
        const double var_L_type_Ca_channel__L_type_Ca_channel_f_gate__d_f_d_environment__time = var_L_type_Ca_channel_f_gate__d_f_d_environment__time; // per_second
        const double var_CaMKII_factor__F_CaMK = var_chaste_interface__CaMKII_factor__F_CaMK; // dimensionless
        const double var_CaMKII_factor__Cmdn_Ca = var_chaste_interface__calmodulin__Cmdn_Ca; // millimolar
        const double var_CaMKII_factor__Inf_CaMK = var_CaMKII_factor__Cmdn_Ca / 5.0000000000000002e-05; // dimensionless
        const double var_CaMKII_factor__Tau_CaMK = 0.80000000000000004; // second
        const double var_CaMKII_factor__d_F_CaMK_d_environment__time = (var_CaMKII_factor__Inf_CaMK - var_CaMKII_factor__F_CaMK) / var_CaMKII_factor__Tau_CaMK; // per_second
        const double var_RyR__K_leak_rate = 0.0; // per_second
        const double var_RyR__Ca_i = var_chaste_interface__intracellular_calcium_concentration__Ca_i; // millimolar
        const double var_RyR__Ca_SR = var_chaste_interface__SR_calcium_concentration__Ca_SR; // millimolar
        const double var_RyR__K_rel_max = 500.0; // per_second
        const double var_RyR__F_SRCa_RyR = var_chaste_interface__RyR__F_SRCa_RyR; // millimolar
        const double var_RyR__K_rel = (var_RyR__K_rel_max * var_RyR__F_SRCa_RyR) / (var_RyR__F_SRCa_RyR + 0.20000000000000001); // per_second
        const double var_RyR__F_2 = var_chaste_interface__RyR__F_2; // dimensionless
        const double var_RyR__F_rel = pow(var_RyR__F_2 / (var_RyR__F_2 + 0.25), 2.0); // dimensionless
        const double var_RyR__j_rel = ((var_RyR__K_rel * var_RyR__F_rel) + var_RyR__K_leak_rate) * (var_RyR__Ca_SR - var_RyR__Ca_i); // millimolar_per_second
        const double var_RyR__i_Ca_L = var_L_type_Ca_channel__i_Ca_L; // nanoA
        const double var_RyR__F_CaMK = var_chaste_interface__CaMKII_factor__F_CaMK; // dimensionless
        const double var_RyR__Tau_SRCa_RyR = 0.050000000000000003; // second
        const double var_RyR__N_CaMK = pow(var_RyR__F_CaMK / 0.69999999999999996, 2.0); // dimensionless
        const double var_RyR__gain_k1 = 1.0; // dimensionless
        const double var_RyR__gain_k2 = 1.0; // dimensionless
        const double var_RyR__gain_k3 = 1.0; // dimensionless
        const double var_RyR__gain_k4 = 1.0; // dimensionless
        const double var_RyR__k_1 = var_RyR__gain_k1 * ((30625000.0 * pow(var_RyR__Ca_i, 2.0)) - (245.0 * var_RyR__i_Ca_L)); // per_second
        const double var_RyR__k_2 = (var_RyR__gain_k2 * 450.0) / (1.0 + (0.35999999999999999 / var_RyR__Ca_SR)); // per_second
        const double var_RyR__k_3 = var_RyR__gain_k3 * 1.885 * pow(var_RyR__F_SRCa_RyR / 0.22, var_RyR__N_CaMK); // per_second
        const double var_RyR__k_4 = var_RyR__gain_k4 * 1.8; // per_second
        const double var_RyR__F_1 = var_chaste_interface__RyR__F_1; // dimensionless
        const double var_RyR__F_3 = 1.0 - (var_RyR__F_1 + var_RyR__F_2); // dimensionless
        const double var_RyR__d_F_SRCa_RyR_d_environment__time = (var_RyR__Ca_SR - var_RyR__F_SRCa_RyR) / var_RyR__Tau_SRCa_RyR; // 'millimole per litre per second'
        const double var_RyR__d_F_1_d_environment__time = ((var_RyR__k_3 * var_RyR__F_3) - (var_RyR__k_4 * var_RyR__F_1)) - (var_RyR__k_1 * var_RyR__F_1); // per_second
        const double var_RyR__d_F_2_d_environment__time = (var_RyR__k_1 * var_RyR__F_1) - (var_RyR__k_2 * var_RyR__F_2); // per_second
        const double var_SERCA__V_max_r = 0.39100000000000001; // millimolar_per_second
        const double var_SERCA__F_CaMK = var_chaste_interface__CaMKII_factor__F_CaMK; // dimensionless
        const double var_SERCA__Ca_i = var_chaste_interface__intracellular_calcium_concentration__Ca_i; // millimolar
        const double var_SERCA__f_b = pow(var_SERCA__Ca_i / 0.00024000000000000001, 2.0); // dimensionless
        const double var_SERCA__V_max_f = 0.29199999999999998; // millimolar_per_second
        const double var_SERCA__Ca_SR = var_chaste_interface__SR_calcium_concentration__Ca_SR; // millimolar
        const double var_SERCA__r_b = pow(var_SERCA__Ca_SR / 1.6399999999999999, 2.0); // dimensionless
        const double var_SERCA__j_up = ((var_SERCA__F_CaMK * var_SERCA__V_max_f * var_SERCA__f_b) - (var_SERCA__V_max_r * var_SERCA__r_b)) / (1.0 + var_SERCA__f_b + var_SERCA__r_b); // millimolar_per_second
        const double var_calmodulin__Cmdn_Ca = var_chaste_interface__calmodulin__Cmdn_Ca; // millimolar
        const double var_calmodulin__Ca_i = var_chaste_interface__intracellular_calcium_concentration__Ca_i; // millimolar
        const double var_calmodulin__Cmdn_tot = 0.02; // millimolar
        const double var_calmodulin__alpha_cmdn = 10000.0; // per_millimolar_per_second
        const double var_calmodulin__beta_cmdn = 500.0; // per_second
        const double var_calmodulin__dCmdn_Ca_dtime = (var_calmodulin__alpha_cmdn * (var_calmodulin__Cmdn_tot - var_calmodulin__Cmdn_Ca) * var_calmodulin__Ca_i) - (var_calmodulin__beta_cmdn * var_calmodulin__Cmdn_Ca); // millimolar_per_second
        const double var_calmodulin__d_Cmdn_Ca_d_environment__time = (var_calmodulin__alpha_cmdn * (var_calmodulin__Cmdn_tot - var_calmodulin__Cmdn_Ca) * var_calmodulin__Ca_i) - (var_calmodulin__beta_cmdn * var_calmodulin__Cmdn_Ca); // 'millimole per litre per second'
        const double var_troponin__Trpn_Ca = var_chaste_interface__troponin__Trpn_Ca; // millimolar
        const double var_troponin__Ca_i = var_chaste_interface__intracellular_calcium_concentration__Ca_i; // millimolar
        const double var_troponin__Trpn_tot = 0.070000000000000007; // millimolar
        const double var_troponin__alpha_trpn = 80000.0; // per_millimolar_per_second
        const double var_troponin__beta_trpn = 200.0; // per_second
        const double var_Force__SL = 2.1499999999999999; // micrometre
        const double var_Force__phi_SL = ((var_Force__SL >= 1.7) && (var_Force__SL <= 2.0)) ? ((var_Force__SL - 0.59999999999999998) / 1.3999999999999999) : ((var_Force__SL > 2.0) && (var_Force__SL <= 2.2000000000000002)) ? 1.0 : ((var_Force__SL > 2.2000000000000002) && (var_Force__SL <= 2.2999999999999998)) ? ((3.6000000000000001 - var_Force__SL) / 1.3999999999999999) : NAN; // dimensionless
        const double var_Force__P_3 = var_chaste_interface__Force__P_3; // dimensionless
        const double var_Force__f_XB = 10.0; // per_second
        const double var_Force__f_01 = 3.0 * var_Force__f_XB; // per_second
        const double var_Force__g_XB = 30.0; // per_second
        const double var_Force__f_12 = 10.0 * var_Force__f_XB; // per_second
        const double var_Force__f_23 = 7.0 * var_Force__f_XB; // per_second
        const double var_Force__sigma_paths = (1.0 * var_Force__g_XB * 2.0 * var_Force__g_XB * 3.0 * var_Force__g_XB) + (1.0 * var_Force__f_01 * 2.0 * var_Force__g_XB * 3.0 * var_Force__g_XB) + (1.0 * var_Force__f_01 * 1.0 * var_Force__f_12 * 3.0 * var_Force__g_XB) + (1.0 * var_Force__f_01 * 1.0 * var_Force__f_12 * 1.0 * var_Force__f_23); // dimensionless
        const double var_Force__P_2_max = (1.0 * var_Force__f_01 * 1.0 * var_Force__f_12 * 3.0 * var_Force__g_XB) / var_Force__sigma_paths; // dimensionless
        const double var_Force__P_1_max = (1.0 * var_Force__f_01 * 2.0 * var_Force__g_XB * 3.0 * var_Force__g_XB) / var_Force__sigma_paths; // dimensionless
        const double var_Force__P_3_max = (1.0 * var_Force__f_01 * 1.0 * var_Force__f_12 * 1.0 * var_Force__f_23) / var_Force__sigma_paths; // dimensionless
        const double var_Force__Force_max = var_Force__P_1_max + (2.0 * var_Force__P_2_max) + (3.0 * var_Force__P_3_max); // dimensionless
        const double var_Force__P_2 = var_chaste_interface__Force__P_2; // dimensionless
        const double var_Force__N_0 = var_chaste_interface__Force__N_0; // dimensionless
        const double var_Force__P_0 = var_chaste_interface__Force__P_0; // dimensionless
        const double var_Force__P_1 = var_chaste_interface__Force__P_1; // dimensionless
        const double var_Force__N_1 = 1.0 - (var_Force__N_0 + var_Force__P_0 + var_Force__P_1 + var_Force__P_2 + var_Force__P_3); // dimensionless
        const double var_Force__Force_norm = (var_Force__phi_SL * (var_Force__P_1 + var_Force__N_1 + (2.0 * var_Force__P_2) + (3.0 * var_Force__P_3))) / var_Force__Force_max; // dimensionless
        const double var_troponin__Force_norm = var_Force__Force_norm; // dimensionless
        const double var_troponin__dTrpn_Ca_dtime = (var_troponin__alpha_trpn * (var_troponin__Trpn_tot - var_troponin__Trpn_Ca) * var_troponin__Ca_i) - (((var_troponin__beta_trpn * (1.0 + (2.0 * (1.0 - var_troponin__Force_norm)))) / 3.0) * var_troponin__Trpn_Ca); // millimolar_per_second
        const double var_troponin__d_Trpn_Ca_d_environment__time = (var_troponin__alpha_trpn * (var_troponin__Trpn_tot - var_troponin__Trpn_Ca) * var_troponin__Ca_i) - (((var_troponin__beta_trpn * (1.0 + (2.0 * (1.0 - var_troponin__Force_norm)))) / 3.0) * var_troponin__Trpn_Ca); // 'millimole per litre per second'
        const double var_intracellular_calcium_concentration__i_Ca_L_Ca = var_L_type_Ca_channel__i_Ca_L_Ca; // nanoA
        const double var_intracellular_calcium_concentration__i_b_Ca = var_calcium_background_current__i_b_Ca; // nanoA
        const double var_intracellular_calcium_concentration__i_NaCa = var_sodium_calcium_exchanger__i_NaCa; // nanoA
        const double var_intracellular_calcium_concentration__j_rel = var_RyR__j_rel; // millimolar_per_second
        const double var_intracellular_calcium_concentration__j_up = var_SERCA__j_up; // millimolar_per_second
        const double var_intracellular_calcium_concentration__v_SR = var_cell_parameters__v_SR; // microlitre
        const double var_intracellular_calcium_concentration__v_i = var_cell_parameters__v_i; // microlitre
        const double var_intracellular_calcium_concentration__F = var_cell_parameters__F; // coulomb_per_mole
        const double var_intracellular_calcium_concentration__dCmdn_Ca_dtime = var_calmodulin__dCmdn_Ca_dtime; // millimolar_per_second
        const double var_intracellular_calcium_concentration__dTrpn_Ca_dtime = var_troponin__dTrpn_Ca_dtime; // millimolar_per_second
        const double var_intracellular_calcium_concentration__d_Ca_i_d_environment__time = (((((-((var_intracellular_calcium_concentration__i_Ca_L_Ca + var_intracellular_calcium_concentration__i_b_Ca) - (2.0 * var_intracellular_calcium_concentration__i_NaCa))) / (2.0 * var_intracellular_calcium_concentration__v_i * var_intracellular_calcium_concentration__F)) - var_intracellular_calcium_concentration__j_up) + ((var_intracellular_calcium_concentration__j_rel * var_intracellular_calcium_concentration__v_SR) / var_intracellular_calcium_concentration__v_i)) - var_intracellular_calcium_concentration__dCmdn_Ca_dtime) - var_intracellular_calcium_concentration__dTrpn_Ca_dtime; // 'millimole per litre per second'
        const double var_SR_calcium_concentration__j_rel = var_RyR__j_rel; // millimolar_per_second
        const double var_SR_calcium_concentration__j_up = var_SERCA__j_up; // millimolar_per_second
        const double var_SR_calcium_concentration__v_SR = var_cell_parameters__v_SR; // microlitre
        const double var_SR_calcium_concentration__v_i = var_cell_parameters__v_i; // microlitre
        const double var_SR_calcium_concentration__d_Ca_SR_d_environment__time = ((var_SR_calcium_concentration__j_up * var_SR_calcium_concentration__v_i) / var_SR_calcium_concentration__v_SR) - var_SR_calcium_concentration__j_rel; // 'millimole per litre per second'
        const double var_intracellular_sodium_concentration__i_Na = var_fast_sodium_current__i_Na; // nanoA
        const double var_intracellular_sodium_concentration__i_b_Na = var_sodium_background_current__i_b_Na; // nanoA
        const double var_intracellular_sodium_concentration__i_Ca_L_Na = var_L_type_Ca_channel__i_Ca_L_Na; // nanoA
        const double var_intracellular_sodium_concentration__i_NaCa = var_sodium_calcium_exchanger__i_NaCa; // nanoA
        const double var_intracellular_sodium_concentration__i_NaK = var_sodium_potassium_pump__i_NaK; // nanoA
        const double var_intracellular_sodium_concentration__v_i = var_cell_parameters__v_i; // microlitre
        const double var_intracellular_sodium_concentration__F = var_cell_parameters__F; // coulomb_per_mole
        const double var_intracellular_sodium_concentration__d_Na_i_d_environment__time = (-(var_intracellular_sodium_concentration__i_Na + var_intracellular_sodium_concentration__i_b_Na + var_intracellular_sodium_concentration__i_Ca_L_Na + (3.0 * var_intracellular_sodium_concentration__i_NaCa) + (3.0 * var_intracellular_sodium_concentration__i_NaK))) / (var_intracellular_sodium_concentration__v_i * var_intracellular_sodium_concentration__F); // 'millimole per litre per second'
        const double var_intracellular_potassium_concentration__i_K1 = var_time_independent_potassium_current__i_K1; // nanoA
        const double var_intracellular_potassium_concentration__i_K = var_time_dependent_rectifier_potassium_current__i_K; // nanoA
        const double var_intracellular_potassium_concentration__i_to = var_transient_outward_current__i_to; // nanoA
        const double var_intracellular_potassium_concentration__i_b_K = var_potassium_background_current__i_b_K; // nanoA
        const double var_intracellular_potassium_concentration__i_Ca_L_K = var_L_type_Ca_channel__i_Ca_L_K; // nanoA
        const double var_intracellular_potassium_concentration__i_NaK = var_sodium_potassium_pump__i_NaK; // nanoA
        const double var_intracellular_potassium_concentration__v_i = var_cell_parameters__v_i; // microlitre
        const double var_intracellular_potassium_concentration__F = var_cell_parameters__F; // coulomb_per_mole
        const double var_intracellular_potassium_concentration__d_K_i_d_environment__time = (-((var_intracellular_potassium_concentration__i_K1 + var_intracellular_potassium_concentration__i_K + var_intracellular_potassium_concentration__i_to + var_intracellular_potassium_concentration__i_b_K + var_intracellular_potassium_concentration__i_Ca_L_K) - (2.0 * var_intracellular_potassium_concentration__i_NaK))) / (var_intracellular_potassium_concentration__v_i * var_intracellular_potassium_concentration__F); // 'millimole per litre per second'
        const double var_Force__SL_norm = (var_Force__SL - 1.7) / 0.69999999999999996; // dimensionless
        const double var_Force__N_tm = 3.5 + (2.5 * var_Force__SL_norm); // dimensionless
        const double var_Force__Trpn_Ca = var_chaste_interface__troponin__Trpn_Ca; // millimolar
        const double var_Force__beta_tm = 40.0; // per_second
        const double var_Force__Trpn_tot = var_troponin__Trpn_tot; // millimolar
        const double var_Force__alpha_trpn = var_troponin__alpha_trpn; // per_millimolar_per_second
        const double var_Force__beta_trpn = var_troponin__beta_trpn; // per_second
        const double var_Force__K_tm = 1.0 / (1.0 + ((var_Force__beta_trpn / var_Force__alpha_trpn) / (0.0016999999999999999 - (0.00089999999999999998 * var_Force__SL_norm)))); // dimensionless
        const double var_Force__alpha_tm = var_Force__beta_tm * pow(var_Force__Trpn_Ca / (var_Force__Trpn_tot * var_Force__K_tm), var_Force__N_tm); // per_second
        const double var_Force__g_01 = var_Force__g_XB * (2.0 - var_Force__SL_norm); // per_second
        const double var_Force__g_12 = 2.0 * var_Force__g_XB * (2.0 - var_Force__SL_norm); // per_second
        const double var_Force__g_23 = 3.0 * var_Force__g_XB * (2.0 - var_Force__SL_norm); // per_second
        const double var_Force__d_N_0_d_environment__time = ((var_Force__beta_tm * var_Force__P_0) - (var_Force__alpha_tm * var_Force__N_0)) + (var_Force__g_01 * var_Force__N_1); // per_second
        const double var_Force__d_P_0_d_environment__time = ((-(var_Force__beta_tm + var_Force__f_01)) * var_Force__P_0) + (var_Force__alpha_tm * var_Force__N_0) + (var_Force__g_01 * var_Force__P_1); // per_second
        const double var_Force__d_P_1_d_environment__time = ((-(var_Force__beta_tm + var_Force__f_12 + var_Force__g_01)) * var_Force__P_1) + (var_Force__alpha_tm * var_Force__N_1) + (var_Force__f_01 * var_Force__P_0) + (var_Force__g_12 * var_Force__P_2); // per_second
        const double var_Force__d_P_2_d_environment__time = ((-(var_Force__f_23 + var_Force__g_12)) * var_Force__P_2) + (var_Force__f_12 * var_Force__P_1) + (var_Force__g_23 * var_Force__P_3); // per_second
        const double var_Force__d_P_3_d_environment__time = ((-var_Force__g_23) * var_Force__P_3) + (var_Force__f_23 * var_Force__P_2); // per_second
        const double var_chaste_interface__intracellular_calcium_concentration__d_Ca_i_d_environment__time_converter = var_intracellular_calcium_concentration__d_Ca_i_d_environment__time; // millimole_per_litre_per_second
        const double var_chaste_interface__intracellular_calcium_concentration__d_Ca_i_d_environment__time = 0.001 * var_chaste_interface__intracellular_calcium_concentration__d_Ca_i_d_environment__time_converter; // 'millimolar per millisecond'
        const double var_chaste_interface__fast_sodium_current_m_gate__d_m_d_environment__time_converter = var_fast_sodium_current__fast_sodium_current_m_gate__d_m_d_environment__time; // per_second
        const double var_chaste_interface__fast_sodium_current_m_gate__d_m_d_environment__time = 0.001 * var_chaste_interface__fast_sodium_current_m_gate__d_m_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__fast_sodium_current_h_gate__d_h_d_environment__time_converter = var_fast_sodium_current__fast_sodium_current_h_gate__d_h_d_environment__time; // per_second
        const double var_chaste_interface__fast_sodium_current_h_gate__d_h_d_environment__time = 0.001 * var_chaste_interface__fast_sodium_current_h_gate__d_h_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__d_x_d_environment__time_converter = var_time_dependent_rectifier_potassium_current__time_dependent_rectifier_potassium_current_x_gate__d_x_d_environment__time; // per_second
        const double var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__d_x_d_environment__time = 0.001 * var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__d_x_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__transient_outward_current_s_gate__d_s_d_environment__time_converter = var_transient_outward_current__transient_outward_current_s_gate__d_s_d_environment__time; // per_second
        const double var_chaste_interface__transient_outward_current_s_gate__d_s_d_environment__time = 0.001 * var_chaste_interface__transient_outward_current_s_gate__d_s_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__transient_outward_current_r_gate__d_r_d_environment__time_converter = var_transient_outward_current__transient_outward_current_r_gate__d_r_d_environment__time; // per_second
        const double var_chaste_interface__transient_outward_current_r_gate__d_r_d_environment__time = 0.001 * var_chaste_interface__transient_outward_current_r_gate__d_r_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__L_type_Ca_channel_d_gate__d_d_d_environment__time_converter = var_L_type_Ca_channel__L_type_Ca_channel_d_gate__d_d_d_environment__time; // per_second
        const double var_chaste_interface__L_type_Ca_channel_d_gate__d_d_d_environment__time = 0.001 * var_chaste_interface__L_type_Ca_channel_d_gate__d_d_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__L_type_Ca_channel_f_gate__d_f_d_environment__time_converter = var_L_type_Ca_channel__L_type_Ca_channel_f_gate__d_f_d_environment__time; // per_second
        const double var_chaste_interface__L_type_Ca_channel_f_gate__d_f_d_environment__time = 0.001 * var_chaste_interface__L_type_Ca_channel_f_gate__d_f_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__CaMKII_factor__d_F_CaMK_d_environment__time_converter = var_CaMKII_factor__d_F_CaMK_d_environment__time; // per_second
        const double var_chaste_interface__CaMKII_factor__d_F_CaMK_d_environment__time = 0.001 * var_chaste_interface__CaMKII_factor__d_F_CaMK_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__RyR__d_F_SRCa_RyR_d_environment__time_converter = var_RyR__d_F_SRCa_RyR_d_environment__time; // ___units_39
        const double var_chaste_interface__RyR__d_F_SRCa_RyR_d_environment__time = 0.001 * var_chaste_interface__RyR__d_F_SRCa_RyR_d_environment__time_converter; // 'millimolar per millisecond'
        const double var_chaste_interface__RyR__d_F_1_d_environment__time_converter = var_RyR__d_F_1_d_environment__time; // per_second
        const double var_chaste_interface__RyR__d_F_1_d_environment__time = 0.001 * var_chaste_interface__RyR__d_F_1_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__RyR__d_F_2_d_environment__time_converter = var_RyR__d_F_2_d_environment__time; // per_second
        const double var_chaste_interface__RyR__d_F_2_d_environment__time = 0.001 * var_chaste_interface__RyR__d_F_2_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__calmodulin__d_Cmdn_Ca_d_environment__time_converter = var_calmodulin__d_Cmdn_Ca_d_environment__time; // millimole_per_litre_per_second
        const double var_chaste_interface__calmodulin__d_Cmdn_Ca_d_environment__time = 0.001 * var_chaste_interface__calmodulin__d_Cmdn_Ca_d_environment__time_converter; // 'millimolar per millisecond'
        const double var_chaste_interface__troponin__d_Trpn_Ca_d_environment__time_converter = var_troponin__d_Trpn_Ca_d_environment__time; // millimole_per_litre_per_second
        const double var_chaste_interface__troponin__d_Trpn_Ca_d_environment__time = 0.001 * var_chaste_interface__troponin__d_Trpn_Ca_d_environment__time_converter; // 'millimolar per millisecond'
        const double var_chaste_interface__SR_calcium_concentration__d_Ca_SR_d_environment__time_converter = var_SR_calcium_concentration__d_Ca_SR_d_environment__time; // millimole_per_litre_per_second
        const double var_chaste_interface__SR_calcium_concentration__d_Ca_SR_d_environment__time = 0.001 * var_chaste_interface__SR_calcium_concentration__d_Ca_SR_d_environment__time_converter; // 'millimolar per millisecond'
        const double var_chaste_interface__intracellular_sodium_concentration__d_Na_i_d_environment__time_converter = var_intracellular_sodium_concentration__d_Na_i_d_environment__time; // millimole_per_litre_per_second
        const double var_chaste_interface__intracellular_sodium_concentration__d_Na_i_d_environment__time = 0.001 * var_chaste_interface__intracellular_sodium_concentration__d_Na_i_d_environment__time_converter; // 'millimolar per millisecond'
        const double var_chaste_interface__intracellular_potassium_concentration__d_K_i_d_environment__time_converter = var_intracellular_potassium_concentration__d_K_i_d_environment__time; // millimole_per_litre_per_second
        const double var_chaste_interface__intracellular_potassium_concentration__d_K_i_d_environment__time = 0.001 * var_chaste_interface__intracellular_potassium_concentration__d_K_i_d_environment__time_converter; // 'millimolar per millisecond'
        const double var_chaste_interface__Force__d_N_0_d_environment__time_converter = var_Force__d_N_0_d_environment__time; // per_second
        const double var_chaste_interface__Force__d_N_0_d_environment__time = 0.001 * var_chaste_interface__Force__d_N_0_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__Force__d_P_0_d_environment__time_converter = var_Force__d_P_0_d_environment__time; // per_second
        const double var_chaste_interface__Force__d_P_0_d_environment__time = 0.001 * var_chaste_interface__Force__d_P_0_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__Force__d_P_1_d_environment__time_converter = var_Force__d_P_1_d_environment__time; // per_second
        const double var_chaste_interface__Force__d_P_1_d_environment__time = 0.001 * var_chaste_interface__Force__d_P_1_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__Force__d_P_2_d_environment__time_converter = var_Force__d_P_2_d_environment__time; // per_second
        const double var_chaste_interface__Force__d_P_2_d_environment__time = 0.001 * var_chaste_interface__Force__d_P_2_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__Force__d_P_3_d_environment__time_converter = var_Force__d_P_3_d_environment__time; // per_second
        const double var_chaste_interface__Force__d_P_3_d_environment__time = 0.001 * var_chaste_interface__Force__d_P_3_d_environment__time_converter; // 'per millisecond'
        const double d_dt_chaste_interface__intracellular_calcium_concentration__Ca_i = var_chaste_interface__intracellular_calcium_concentration__d_Ca_i_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__fast_sodium_current_m_gate__m = var_chaste_interface__fast_sodium_current_m_gate__d_m_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__fast_sodium_current_h_gate__h = var_chaste_interface__fast_sodium_current_h_gate__d_h_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__x = var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__d_x_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__transient_outward_current_s_gate__s = var_chaste_interface__transient_outward_current_s_gate__d_s_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__transient_outward_current_r_gate__r = var_chaste_interface__transient_outward_current_r_gate__d_r_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__L_type_Ca_channel_d_gate__d = var_chaste_interface__L_type_Ca_channel_d_gate__d_d_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__L_type_Ca_channel_f_gate__f = var_chaste_interface__L_type_Ca_channel_f_gate__d_f_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__CaMKII_factor__F_CaMK = var_chaste_interface__CaMKII_factor__d_F_CaMK_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__RyR__F_SRCa_RyR = var_chaste_interface__RyR__d_F_SRCa_RyR_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__RyR__F_1 = var_chaste_interface__RyR__d_F_1_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__RyR__F_2 = var_chaste_interface__RyR__d_F_2_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__calmodulin__Cmdn_Ca = var_chaste_interface__calmodulin__d_Cmdn_Ca_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__troponin__Trpn_Ca = var_chaste_interface__troponin__d_Trpn_Ca_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__SR_calcium_concentration__Ca_SR = var_chaste_interface__SR_calcium_concentration__d_Ca_SR_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_sodium_concentration__Na_i = var_chaste_interface__intracellular_sodium_concentration__d_Na_i_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_potassium_concentration__K_i = var_chaste_interface__intracellular_potassium_concentration__d_K_i_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Force__N_0 = var_chaste_interface__Force__d_N_0_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Force__P_0 = var_chaste_interface__Force__d_P_0_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Force__P_1 = var_chaste_interface__Force__d_P_1_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Force__P_2 = var_chaste_interface__Force__d_P_2_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Force__P_3 = var_chaste_interface__Force__d_P_3_d_environment__time; // 'per millisecond'
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__membrane_potential__V = 0.0;
        }
        else
        {
            const double var_cell_parameters__Cm = 9.5000000000000005e-05; // microF
            const double var_membrane_potential__Cm = var_cell_parameters__Cm; // microF
            const double var_membrane_potential__i_Na = var_fast_sodium_current__i_Na; // nanoA
            const double var_membrane_potential__i_K1 = var_time_independent_potassium_current__i_K1; // nanoA
            const double var_membrane_potential__i_to = var_transient_outward_current__i_to; // nanoA
            const double var_membrane_potential__i_K = var_time_dependent_rectifier_potassium_current__i_K; // nanoA
            const double var_membrane_potential__i_Ca_L = var_L_type_Ca_channel__i_Ca_L; // nanoA
            const double var_membrane_potential__i_NaK = var_sodium_potassium_pump__i_NaK; // nanoA
            const double var_membrane_potential__i_NaCa = var_sodium_calcium_exchanger__i_NaCa; // nanoA
            const double var_membrane_potential__i_b_Na = var_sodium_background_current__i_b_Na; // nanoA
            const double var_membrane_potential__i_b_K = var_potassium_background_current__i_b_K; // nanoA
            const double var_membrane_potential__i_b_Ca = var_calcium_background_current__i_b_Ca; // nanoA
            const double var_chaste_interface__membrane_potential__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
            const double var_membrane_potential__i_Stim_converter = var_chaste_interface__membrane_potential__i_Stim; // uA_per_cm2
            const double var_membrane_potential__chaste_interface__chaste_membrane_capacitance = HeartConfig::Instance()->GetCapacitance(); // uF_per_cm2
            const double var_membrane_potential__i_Stim = 1000.0 * ((var_membrane_potential__i_Stim_converter * var_membrane_potential__Cm) / var_membrane_potential__chaste_interface__chaste_membrane_capacitance); // nanoA
            const double var_membrane_potential__d_V_d_environment__time = ((-1.0) / var_membrane_potential__Cm) * (var_membrane_potential__i_Na + var_membrane_potential__i_b_Na + var_membrane_potential__i_K1 + var_membrane_potential__i_K + var_membrane_potential__i_to + var_membrane_potential__i_b_K + var_membrane_potential__i_Ca_L + var_membrane_potential__i_b_Ca + var_membrane_potential__i_NaCa + var_membrane_potential__i_NaK + var_membrane_potential__i_Stim); // 'millivolt per second'
            const double var_chaste_interface__membrane_potential__d_V_d_environment__time_converter = var_membrane_potential__d_V_d_environment__time; // ___units_1
            const double var_chaste_interface__membrane_potential__d_V_d_environment__time = 0.001 * var_chaste_interface__membrane_potential__d_V_d_environment__time_converter; // 'millivolt per millisecond'
            d_dt_chaste_interface__membrane_potential__V = var_chaste_interface__membrane_potential__d_V_d_environment__time; // 'millivolt per millisecond'
        }
        
        rDY[0] = d_dt_chaste_interface__membrane_potential__V;
        rDY[1] = d_dt_chaste_interface__intracellular_calcium_concentration__Ca_i;
        rDY[2] = d_dt_chaste_interface__fast_sodium_current_m_gate__m;
        rDY[3] = d_dt_chaste_interface__fast_sodium_current_h_gate__h;
        rDY[4] = d_dt_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__x;
        rDY[5] = d_dt_chaste_interface__transient_outward_current_s_gate__s;
        rDY[6] = d_dt_chaste_interface__transient_outward_current_r_gate__r;
        rDY[7] = d_dt_chaste_interface__L_type_Ca_channel_d_gate__d;
        rDY[8] = d_dt_chaste_interface__L_type_Ca_channel_f_gate__f;
        rDY[9] = d_dt_chaste_interface__CaMKII_factor__F_CaMK;
        rDY[10] = d_dt_chaste_interface__RyR__F_SRCa_RyR;
        rDY[11] = d_dt_chaste_interface__RyR__F_1;
        rDY[12] = d_dt_chaste_interface__RyR__F_2;
        rDY[13] = d_dt_chaste_interface__calmodulin__Cmdn_Ca;
        rDY[14] = d_dt_chaste_interface__troponin__Trpn_Ca;
        rDY[15] = d_dt_chaste_interface__SR_calcium_concentration__Ca_SR;
        rDY[16] = d_dt_chaste_interface__intracellular_sodium_concentration__Na_i;
        rDY[17] = d_dt_chaste_interface__intracellular_potassium_concentration__K_i;
        rDY[18] = d_dt_chaste_interface__Force__N_0;
        rDY[19] = d_dt_chaste_interface__Force__P_0;
        rDY[20] = d_dt_chaste_interface__Force__P_1;
        rDY[21] = d_dt_chaste_interface__Force__P_2;
        rDY[22] = d_dt_chaste_interface__Force__P_3;
    }
    
template<>
void OdeSystemInformation<Dynamiciribe_model_2006_without_otherwise_sectionFromCellML>::Initialise(void)
{
    this->mSystemName = "iribe_model_2006";
    this->mFreeVariableName = "environment__time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-92.849333);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(9.91e-6);

    // rY[2]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0013809);

    // rY[3]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99569);

    // rY[4]:
    this->mVariableNames.push_back("time_dependent_rectifier_potassium_current_x_gate__x");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(5.1127e-2);

    // rY[5]:
    this->mVariableNames.push_back("transient_outward_current_s_gate__s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.95854);

    // rY[6]:
    this->mVariableNames.push_back("transient_outward_current_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.5185e-8);

    // rY[7]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.7908e-8);

    // rY[8]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1);

    // rY[9]:
    this->mVariableNames.push_back("CaMKII_factor__F_CaMK");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.028);

    // rY[10]:
    this->mVariableNames.push_back("RyR__F_SRCa_RyR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.25089);

    // rY[11]:
    this->mVariableNames.push_back("RyR__F_1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.5268);

    // rY[12]:
    this->mVariableNames.push_back("RyR__F_2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.7508e-6);

    // rY[13]:
    this->mVariableNames.push_back("calmodulin__Cmdn_Ca");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(3.9636e-6);

    // rY[14]:
    this->mVariableNames.push_back("troponin__Trpn_Ca");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(2.7661e-4);

    // rY[15]:
    this->mVariableNames.push_back("SR_calcium_concentration__Ca_SR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.24886);

    // rY[16]:
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(5.8041);

    // rY[17]:
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(138.22);

    // rY[18]:
    this->mVariableNames.push_back("Force__N_0");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99917);

    // rY[19]:
    this->mVariableNames.push_back("Force__P_0");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.8593e-5);

    // rY[20]:
    this->mVariableNames.push_back("Force__P_1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.3331e-4);

    // rY[21]:
    this->mVariableNames.push_back("Force__P_2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.3505e-4);

    // rY[22]:
    this->mVariableNames.push_back("Force__P_3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.5349e-4);

    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Dynamiciribe_model_2006_without_otherwise_sectionFromCellML)
extern "C"
{
    AbstractCardiacCellInterface* MakeCardiacCell(
            boost::shared_ptr<AbstractIvpOdeSolver> pSolver,
            boost::shared_ptr<AbstractStimulusFunction> pStimulus)
    {
        return new Dynamiciribe_model_2006_without_otherwise_sectionFromCellML(pSolver, pStimulus);
    }
    
}

