//! @file
//!
//! This source file was generated from CellML by chaste_codegen version 0.0.1
//!
//! Model: priebe_beuckelmann_model_1998
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: normal)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "priebe_beuckelmann_model_1998.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    boost::shared_ptr<RegularStimulus> Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__cell__stim_amplitude_converted = -15.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        const double var_chaste_interface__cell__stim_duration = 3.0; // ms
        const double var_chaste_interface__cell__stim_offset = 0; // ms
        const double var_chaste_interface__cell__stim_period = 1000.0; // ms
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__cell__stim_amplitude_converted),
                var_chaste_interface__cell__stim_duration,
                var_chaste_interface__cell__stim_period,
                var_chaste_interface__cell__stim_offset
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::Cellpriebe_beuckelmann_model_1998FromCellMLGRL2(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractGeneralizedRushLarsenCardiacCell(
                22,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellpriebe_beuckelmann_model_1998FromCellMLGRL2>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        
        this->mParameters[0] = 0.064000000000000001; // (var_ICa__g_Ca_max) [mS_per_uF]
        this->mParameters[1] = 16.0; // (var_INa__g_Na) [mS_per_uF]
        this->mParameters[2] = 0.014999999999999999; // (var_IKr__g_Kr_max) [mS_per_uF]
    }

    Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::~Cellpriebe_beuckelmann_model_1998FromCellMLGRL2()
    {
    }
    
    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: mV; Initial value: -90.7796417483135
        double var_chaste_interface__Ionic_concentrations__Cai = rY[1];
        // Units: mM; Initial value: 0.0002
        double var_chaste_interface__INa_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.000585525582501575
        double var_chaste_interface__INa_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.995865529216237
        double var_chaste_interface__INa_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.997011204496203
        double var_chaste_interface__ICa_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 2.50653215966786e-10
        double var_chaste_interface__ICa_f_gate__f = rY[6];
        // Units: dimensionless; Initial value: 0.92130376850548
        double var_chaste_interface__Ito_r_gate__r = rY[7];
        // Units: dimensionless; Initial value: 1.75032478501027e-05
        double var_chaste_interface__Ito_t_gate__t = rY[8];
        // Units: dimensionless; Initial value: 0.999897251531651
        double var_chaste_interface__IKs_Xs_gate__Xs = rY[9];
        // Units: dimensionless; Initial value: 0.00885658064818147
        double var_chaste_interface__IKr_Xr_gate__Xr = rY[10];
        // Units: dimensionless; Initial value: 0.000215523048438941
        double var_chaste_interface__Ionic_concentrations__Nai = rY[18];
        // Units: mM; Initial value: 10.0
        double var_chaste_interface__Ionic_concentrations__Ki = rY[19];
        // Units: mM; Initial value: 140.0
        
        const double var_ICa__E_Ca = 13.36287874390978 * log(10) * log10(2.0 / var_chaste_interface__Ionic_concentrations__Cai); // mV
        const double var_IK1__E_K1 = 26.725757487819561 * log(10) * log10(4.0 / var_chaste_interface__Ionic_concentrations__Ki); // mV
        const double var_INa__E_Na = 26.725757487819561 * log(10) * log10(138.0 / var_chaste_interface__Ionic_concentrations__Nai); // mV
        const double var_cell__failing = 0; // dimensionless
        const double var_cell__dVdt = -1.0 * (-var_ICa__E_Ca + var_chaste_interface__cell__V) * ((var_cell__failing == 0) ? (0.00084999999999999995) : (0.0012999999999999999)) - 1.0 * (-var_INa__E_Na + var_chaste_interface__cell__V) * ((var_cell__failing == 0) ? (0.001) : (0)) - 0.02 * pow(var_chaste_interface__IKs_Xs_gate__Xs, 2) * (-26.725757487819561 * log(10) * log10(6.5295399999999999 / (0.018329999999999999 * var_chaste_interface__Ionic_concentrations__Nai + var_chaste_interface__Ionic_concentrations__Ki)) + var_chaste_interface__cell__V) - 0.72727272727272729 * ((var_cell__failing == 0) ? (1.3) : (0.75)) / ((1.0 + 31.622776601683793 * pow(1 / var_chaste_interface__Ionic_concentrations__Nai, 1.5)) * (1.0 + 0.1245 * exp(-0.0037417087259575582 * var_chaste_interface__cell__V) + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(2.0505200594353643)) * exp(-0.037417087259575585 * var_chaste_interface__cell__V))) - 8.9708471082494193e-8 * (2.0 * pow(var_chaste_interface__Ionic_concentrations__Nai, 3) * exp(0.013095980540851452 * var_chaste_interface__cell__V) - 2628072.0 * var_chaste_interface__Ionic_concentrations__Cai * exp(-0.024321106718724127 * var_chaste_interface__cell__V)) * ((var_cell__failing == 0) ? (1000.0) : (1650.0)) / (1.0 + 0.10000000000000001 * exp(-0.024321106718724127 * var_chaste_interface__cell__V)) - 1.0 * (-26.725757487819561 * log(10) * log10(4.0 / var_chaste_interface__Ionic_concentrations__Ki) + var_chaste_interface__cell__V) * mParameters[2] * var_chaste_interface__IKr_Xr_gate__Xr / (1.0 + exp(1.1304347826086956 + 0.043478260869565216 * var_chaste_interface__cell__V)) - 1.0 * (-26.725757487819561 * log(10) * log10(9.9339999999999993 / (0.042999999999999997 * var_chaste_interface__Ionic_concentrations__Nai + var_chaste_interface__Ionic_concentrations__Ki)) + var_chaste_interface__cell__V) * ((var_cell__failing == 0) ? (0.29999999999999999) : (0.191)) * var_chaste_interface__Ito_r_gate__r * var_chaste_interface__Ito_t_gate__t - 0.10000000000000001 * (-var_IK1__E_K1 + var_chaste_interface__cell__V) * ((var_cell__failing == 0) ? (2.5) : (2.0)) / ((1.0 + exp(-12.0 + 0.059999999999999998 * var_chaste_interface__cell__V - 0.059999999999999998 * var_IK1__E_K1)) * (0.10000000000000001 / (1.0 + exp(-12.0 + 0.059999999999999998 * var_chaste_interface__cell__V - 0.059999999999999998 * var_IK1__E_K1)) + (3.0 * exp(0.02 + 0.00020000000000000001 * var_chaste_interface__cell__V - 0.00020000000000000001 * var_IK1__E_K1) + exp(-1.0 + 0.10000000000000001 * var_chaste_interface__cell__V - 0.10000000000000001 * var_IK1__E_K1)) / (1.0 + exp(0.5 * var_IK1__E_K1 - 0.5 * var_chaste_interface__cell__V)))) - 1.0 * pow(var_chaste_interface__INa_m_gate__m, 3) * (-var_INa__E_Na + var_chaste_interface__cell__V) * mParameters[1] * var_chaste_interface__INa_h_gate__h * var_chaste_interface__INa_j_gate__j - 0.00059999999999999995 * (-var_ICa__E_Ca + var_chaste_interface__cell__V) * mParameters[0] * var_chaste_interface__ICa_d_gate__d * var_chaste_interface__ICa_f_gate__f / (0.00059999999999999995 + var_chaste_interface__Ionic_concentrations__Cai); // mV_per_ms
        const double var_chaste_interface__i_ionic = HeartConfig::Instance()->GetCapacitance() * var_cell__dVdt; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::UpdateTransmembranePotential(double var_chaste_interface__environment__time)
    {
        std::vector<double>& rY = rGetStateVariables();
        const unsigned v_index = GetVoltageIndex();
        const double delta = 1e-8;
        const double yinit = rY[v_index];

        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: mV; Initial value: -90.7796417483135
        double var_chaste_interface__Ionic_concentrations__Cai = rY[1];
        // Units: mM; Initial value: 0.0002
        double var_chaste_interface__INa_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.000585525582501575
        double var_chaste_interface__INa_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.995865529216237
        double var_chaste_interface__INa_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.997011204496203
        double var_chaste_interface__ICa_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 2.50653215966786e-10
        double var_chaste_interface__ICa_f_gate__f = rY[6];
        // Units: dimensionless; Initial value: 0.92130376850548
        double var_chaste_interface__Ito_r_gate__r = rY[7];
        // Units: dimensionless; Initial value: 1.75032478501027e-05
        double var_chaste_interface__Ito_t_gate__t = rY[8];
        // Units: dimensionless; Initial value: 0.999897251531651
        double var_chaste_interface__IKs_Xs_gate__Xs = rY[9];
        // Units: dimensionless; Initial value: 0.00885658064818147
        double var_chaste_interface__IKr_Xr_gate__Xr = rY[10];
        // Units: dimensionless; Initial value: 0.000215523048438941
        double var_chaste_interface__Ionic_concentrations__Nai = rY[18];
        // Units: mM; Initial value: 10.0
        double var_chaste_interface__Ionic_concentrations__Ki = rY[19];
        // Units: mM; Initial value: 140.0
        

        // Mathematics
        double d_dt_chaste_interface_var_cell__V;
        const double var_ICa__E_Ca = 13.36287874390978 * log(10) * log10(2.0 / var_chaste_interface__Ionic_concentrations__Cai); // mV
        const double var_IK1__E_K1 = 26.725757487819561 * log(10) * log10(4.0 / var_chaste_interface__Ionic_concentrations__Ki); // mV
        const double var_INa__E_Na = 26.725757487819561 * log(10) * log10(138.0 / var_chaste_interface__Ionic_concentrations__Nai); // mV
        const double var_ICa__i_Ca = 0.00059999999999999995 * (-var_ICa__E_Ca + var_chaste_interface__cell__V) * mParameters[0] * var_chaste_interface__ICa_d_gate__d * var_chaste_interface__ICa_f_gate__f / (0.00059999999999999995 + var_chaste_interface__Ionic_concentrations__Cai); // uA_per_uF
        const double var_IKr__i_Kr = (-26.725757487819561 * log(10) * log10(4.0 / var_chaste_interface__Ionic_concentrations__Ki) + var_chaste_interface__cell__V) * mParameters[2] * var_chaste_interface__IKr_Xr_gate__Xr / (1.0 + exp(1.1304347826086956 + 0.043478260869565216 * var_chaste_interface__cell__V)); // uA_per_uF
        const double var_IKs__i_Ks = 0.02 * pow(var_chaste_interface__IKs_Xs_gate__Xs, 2) * (-26.725757487819561 * log(10) * log10(6.5295399999999999 / (0.018329999999999999 * var_chaste_interface__Ionic_concentrations__Nai + var_chaste_interface__Ionic_concentrations__Ki)) + var_chaste_interface__cell__V); // uA_per_uF
        const double var_INa__i_Na = pow(var_chaste_interface__INa_m_gate__m, 3) * (-var_INa__E_Na + var_chaste_interface__cell__V) * mParameters[1] * var_chaste_interface__INa_h_gate__h * var_chaste_interface__INa_j_gate__j; // uA_per_uF
        const double var_cell__failing = 0; // dimensionless
        const double var_ICab__i_b_Ca = (-var_ICa__E_Ca + var_chaste_interface__cell__V) * ((var_cell__failing == 0) ? (0.00084999999999999995) : (0.0012999999999999999)); // uA_per_uF
        const double var_IK1__i_K1 = 0.10000000000000001 * (-var_IK1__E_K1 + var_chaste_interface__cell__V) * ((var_cell__failing == 0) ? (2.5) : (2.0)) / ((1.0 + exp(-12.0 + 0.059999999999999998 * var_chaste_interface__cell__V - 0.059999999999999998 * var_IK1__E_K1)) * (0.10000000000000001 / (1.0 + exp(-12.0 + 0.059999999999999998 * var_chaste_interface__cell__V - 0.059999999999999998 * var_IK1__E_K1)) + (3.0 * exp(0.02 + 0.00020000000000000001 * var_chaste_interface__cell__V - 0.00020000000000000001 * var_IK1__E_K1) + exp(-1.0 + 0.10000000000000001 * var_chaste_interface__cell__V - 0.10000000000000001 * var_IK1__E_K1)) / (1.0 + exp(0.5 * var_IK1__E_K1 - 0.5 * var_chaste_interface__cell__V)))); // uA_per_uF
        const double var_INaCa__i_NaCa = 8.9708471082494193e-8 * (2.0 * pow(var_chaste_interface__Ionic_concentrations__Nai, 3) * exp(0.013095980540851452 * var_chaste_interface__cell__V) - 2628072.0 * var_chaste_interface__Ionic_concentrations__Cai * exp(-0.024321106718724127 * var_chaste_interface__cell__V)) * ((var_cell__failing == 0) ? (1000.0) : (1650.0)) / (1.0 + 0.10000000000000001 * exp(-0.024321106718724127 * var_chaste_interface__cell__V)); // uA_per_uF
        const double var_INaK__i_NaK = 0.72727272727272729 * ((var_cell__failing == 0) ? (1.3) : (0.75)) / ((1.0 + 31.622776601683793 * pow(1 / var_chaste_interface__Ionic_concentrations__Nai, 1.5)) * (1.0 + 0.1245 * exp(-0.0037417087259575582 * var_chaste_interface__cell__V) + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(2.0505200594353643)) * exp(-0.037417087259575585 * var_chaste_interface__cell__V))); // uA_per_uF
        const double var_INab__i_b_Na = (-var_INa__E_Na + var_chaste_interface__cell__V) * ((var_cell__failing == 0) ? (0.001) : (0)); // uA_per_uF
        const double var_Ito__i_to = (-26.725757487819561 * log(10) * log10(9.9339999999999993 / (0.042999999999999997 * var_chaste_interface__Ionic_concentrations__Nai + var_chaste_interface__Ionic_concentrations__Ki)) + var_chaste_interface__cell__V) * ((var_cell__failing == 0) ? (0.29999999999999999) : (0.191)) * var_chaste_interface__Ito_r_gate__r * var_chaste_interface__Ito_t_gate__t; // uA_per_uF
        const double var_cell__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time) / HeartConfig::Instance()->GetCapacitance(); // uA_per_uF
        const double var_cell__dVdt = -1.0 * var_ICa__i_Ca - 1.0 * var_ICab__i_b_Ca - 1.0 * var_IK1__i_K1 - 1.0 * var_IKr__i_Kr - 1.0 * var_IKs__i_Ks - 1.0 * var_INa__i_Na - 1.0 * var_INaCa__i_NaCa - 1.0 * var_INaK__i_NaK - 1.0 * var_INab__i_b_Na - 1.0 * var_Ito__i_to - 1.0 * var_cell__i_Stim; // mV_per_ms
        d_dt_chaste_interface_var_cell__V = var_cell__dVdt; // mV / ms

        double evalF = d_dt_chaste_interface_var_cell__V;
        mEvalF[0] = d_dt_chaste_interface_var_cell__V;
        double partialF = EvaluatePartialDerivative0(var_chaste_interface__environment__time, rY, delta, true);
        if (fabs(partialF) < delta)
        {
            rY[v_index] += 0.5*evalF*mDt;
        }
        else
        {
            rY[v_index] += (evalF/partialF)*(exp(partialF*0.5*mDt)-1.0);
        }

        rY[v_index] = yinit;
        evalF = EvaluateYDerivative0(var_chaste_interface__environment__time, rY);
        mEvalF[0] = evalF;
        partialF = EvaluatePartialDerivative0(var_chaste_interface__environment__time, rY, delta, true);
        if (fabs(partialF) < delta)
        {
            rY[v_index] = yinit + evalF*mDt;
        }
        else
        {
            rY[v_index] = yinit + (evalF/partialF)*(exp(partialF*mDt)-1.0);
        }
    }

    void Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::ComputeOneStepExceptVoltage(double var_chaste_interface__environment__time)
    {
        std::vector<double>& rY = rGetStateVariables();
        const double delta=1e-8;
        const unsigned size = GetNumberOfStateVariables();
        mYInit = rY;
        double y_save;

        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: mV; Initial value: -90.7796417483135
        double var_chaste_interface__Ionic_concentrations__Cai = rY[1];
        // Units: mM; Initial value: 0.0002
        double var_chaste_interface__INa_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.000585525582501575
        double var_chaste_interface__INa_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.995865529216237
        double var_chaste_interface__INa_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.997011204496203
        double var_chaste_interface__ICa_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 2.50653215966786e-10
        double var_chaste_interface__ICa_f_gate__f = rY[6];
        // Units: dimensionless; Initial value: 0.92130376850548
        double var_chaste_interface__Ito_r_gate__r = rY[7];
        // Units: dimensionless; Initial value: 1.75032478501027e-05
        double var_chaste_interface__Ito_t_gate__t = rY[8];
        // Units: dimensionless; Initial value: 0.999897251531651
        double var_chaste_interface__IKs_Xs_gate__Xs = rY[9];
        // Units: dimensionless; Initial value: 0.00885658064818147
        double var_chaste_interface__IKr_Xr_gate__Xr = rY[10];
        // Units: dimensionless; Initial value: 0.000215523048438941
        double var_chaste_interface__Irel__APtrack = rY[11];
        // Units: dimensionless; Initial value: -1.372158997089e-136
        double var_chaste_interface__Irel__APtrack2 = rY[12];
        // Units: dimensionless; Initial value: -7.58517896402761e-136
        double var_chaste_interface__Irel__APtrack3 = rY[13];
        // Units: dimensionless; Initial value: 4.82035353592764e-05
        double var_chaste_interface__Irel__Cainfluxtrack = rY[14];
        // Units: mM; Initial value: -7.71120176147331e-138
        double var_chaste_interface__Ionic_concentrations__Nai = rY[18];
        // Units: mM; Initial value: 10.0
        double var_chaste_interface__Ionic_concentrations__Ki = rY[19];
        // Units: mM; Initial value: 140.0
        double var_chaste_interface__Ionic_concentrations__Ca_JSR = rY[20];
        // Units: mM; Initial value: 2.5
        double var_chaste_interface__Ionic_concentrations__Ca_NSR = rY[21];
        // Units: mM; Initial value: 2.5
        
        
        // Mathematics
        double d_dt_chaste_interface_var_cell__V;
        const double d_dt_chaste_interface_var_Irel__OVRLDtrack = 0; // 1 / ms
        const double d_dt_chaste_interface_var_Irel__OVRLDtrack2 = 0; // 1 / ms
        const double d_dt_chaste_interface_var_Irel__OVRLDtrack3 = 0; // 1 / ms
        const double var_Ionic_concentrations__volume = 12100.0 * M_PI; // fL
        const double var_Ionic_concentrations__V_JSR = 0.0047999999999999996 * var_Ionic_concentrations__volume; // fL
        const double var_Ionic_concentrations__V_NSR = 0.055199999999999999 * var_Ionic_concentrations__volume; // fL
        const double var_Ionic_concentrations__V_myo = 0.68000000000000005 * var_Ionic_concentrations__volume; // fL
        const double d_dt_chaste_interface_var_Irel__APtrack2 = (((var_chaste_interface__Irel__APtrack > 0.17999999999999999) && (var_chaste_interface__Irel__APtrack < 0.20000000000000001)) ? (100.0 - 100.5 * var_chaste_interface__Irel__APtrack2) : (-0.5 * var_chaste_interface__Irel__APtrack2)); // 1 / ms
        const double d_dt_chaste_interface_var_Irel__APtrack3 = (((var_chaste_interface__Irel__APtrack > 0.17999999999999999) && (var_chaste_interface__Irel__APtrack < 0.20000000000000001)) ? (100.0 - 100.5 * var_chaste_interface__Irel__APtrack3) : (-0.01 * var_chaste_interface__Irel__APtrack3)); // 1 / ms
        const double var_Irel__i_rel = (-var_chaste_interface__Ionic_concentrations__Cai + var_chaste_interface__Ionic_concentrations__Ca_JSR) * ((var_chaste_interface__Irel__Cainfluxtrack > 5.0000000000000004e-6) ? (22.0 * (1.0 - var_chaste_interface__Irel__APtrack2) * (-5.0000000000000004e-6 + var_chaste_interface__Irel__Cainfluxtrack) * var_chaste_interface__Irel__APtrack2 / (0.00079500000000000003 + var_chaste_interface__Irel__Cainfluxtrack)) : (0)); // mM_per_ms
        const double var_Itr__i_tr = 0.0055555555555555558 * var_chaste_interface__Ionic_concentrations__Ca_NSR - 0.0055555555555555558 * var_chaste_interface__Ionic_concentrations__Ca_JSR; // mM_per_ms
        const double d_dt_chaste_interface_var_Ionic_concentrations__Ca_JSR = (-var_Irel__i_rel + var_Itr__i_tr) / (1.0 + 8.0 / pow((0.80000000000000004 + var_chaste_interface__Ionic_concentrations__Ca_JSR), 2)); // mM / ms
        const double var_ICa__E_Ca = 13.36287874390978 * log(10) * log10(2.0 / var_chaste_interface__Ionic_concentrations__Cai); // mV
        const double var_IK1__E_K1 = 26.725757487819561 * log(10) * log10(4.0 / var_chaste_interface__Ionic_concentrations__Ki); // mV
        const double var_INa__E_Na = 26.725757487819561 * log(10) * log10(138.0 / var_chaste_interface__Ionic_concentrations__Nai); // mV
        const double var_ICa__i_Ca = 0.00059999999999999995 * (-var_ICa__E_Ca + var_chaste_interface__cell__V) * mParameters[0] * var_chaste_interface__ICa_d_gate__d * var_chaste_interface__ICa_f_gate__f / (0.00059999999999999995 + var_chaste_interface__Ionic_concentrations__Cai); // uA_per_uF
        const double d_dt_chaste_interface_var_ICa_d_gate__d = -(0.14710000000000001 - 0.25101580310038191 * exp(-0.08830693125184777 * pow((-1 + 0.15937778911130945 * var_chaste_interface__cell__V), 2)) / sqrt(M_PI)) * var_chaste_interface__ICa_d_gate__d + 0.63524014987941491 * (1.0 - var_chaste_interface__ICa_d_gate__d) * exp(-0.89836705491478086 * pow((-1 + 0.044722719141323794 * var_chaste_interface__cell__V), 2)) / sqrt(M_PI); // 1 / ms
        const double d_dt_chaste_interface_var_ICa_f_gate__f = -(0.00054739999999999997 + (0.0112 + 0.068699999999999997 * exp(-1.06213655 - 0.1081 * var_chaste_interface__cell__V)) / (1.0 + exp(-2.7305064499999996 - 0.27789999999999998 * var_chaste_interface__cell__V))) * var_chaste_interface__ICa_f_gate__f + 0.0068719999999999996 * (1.0 - var_chaste_interface__ICa_f_gate__f) / (1.0 + exp(-1.0052757950443461 + 0.16333730787449161 * var_chaste_interface__cell__V)); // 1 / ms
        const double var_IKr__i_Kr = (-26.725757487819561 * log(10) * log10(4.0 / var_chaste_interface__Ionic_concentrations__Ki) + var_chaste_interface__cell__V) * mParameters[2] * var_chaste_interface__IKr_Xr_gate__Xr / (1.0 + exp(1.1304347826086956 + 0.043478260869565216 * var_chaste_interface__cell__V)); // uA_per_uF
        const double d_dt_chaste_interface_var_IKr_Xr_gate__Xr = 0.0050000000000000001 * (1.0 - var_chaste_interface__IKr_Xr_gate__Xr) * exp(0.0021416822000000003 + 0.00052660000000000001 * var_chaste_interface__cell__V) / (1.0 + exp(-0.51325540000000003 - 0.12620000000000001 * var_chaste_interface__cell__V)) - 0.016 * var_chaste_interface__IKr_Xr_gate__Xr * exp(0.105056 + 0.0016000000000000001 * var_chaste_interface__cell__V) / (1.0 + exp(5.1411779999999991 + 0.078299999999999995 * var_chaste_interface__cell__V)); // 1 / ms
        const double var_IKs__i_Ks = 0.02 * pow(var_chaste_interface__IKs_Xs_gate__Xs, 2) * (-26.725757487819561 * log(10) * log10(6.5295399999999999 / (0.018329999999999999 * var_chaste_interface__Ionic_concentrations__Nai + var_chaste_interface__Ionic_concentrations__Ki)) + var_chaste_interface__cell__V); // uA_per_uF
        const double d_dt_chaste_interface_var_IKs_Xs_gate__Xs = 0.0030130000000000001 * (1.0 - var_chaste_interface__IKs_Xs_gate__Xs) / (1.0 + exp(-0.17842998931347828 - 0.069846547135942336 * var_chaste_interface__cell__V)) - 0.0058700000000000002 * var_chaste_interface__IKs_Xs_gate__Xs / (1.0 + exp(1.0082174462705435 + 0.063211125158027806 * var_chaste_interface__cell__V)); // 1 / ms
        const double var_INa__i_Na = pow(var_chaste_interface__INa_m_gate__m, 3) * (-var_INa__E_Na + var_chaste_interface__cell__V) * mParameters[1] * var_chaste_interface__INa_h_gate__h * var_chaste_interface__INa_j_gate__j; // uA_per_uF
        const double d_dt_chaste_interface_var_INa_h_gate__h = (1.0 - var_chaste_interface__INa_h_gate__h) * ((var_chaste_interface__cell__V < -40.0) ? (0.13500000000000001 * exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__cell__V)) : (0)) - ((var_chaste_interface__cell__V < -40.0) ? (310000.0 * exp(0.34999999999999998 * var_chaste_interface__cell__V) + 3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__cell__V)) : (7.6923076923076916 / (1.0 + exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__cell__V)))) * var_chaste_interface__INa_h_gate__h; // 1 / ms
        const double d_dt_chaste_interface_var_INa_j_gate__j = (1.0 - var_chaste_interface__INa_j_gate__j) * ((var_chaste_interface__cell__V < -40.0) ? ((37.780000000000001 + var_chaste_interface__cell__V) * (-127140.0 * exp(0.24399999999999999 * var_chaste_interface__cell__V) - 3.4740000000000003e-5 * exp(-0.043909999999999998 * var_chaste_interface__cell__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__cell__V))) : (0)) - ((var_chaste_interface__cell__V < -40.0) ? (0.1212 * exp(-0.01052 * var_chaste_interface__cell__V) / (1.0 + exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__cell__V))) : (0.29999999999999999 * exp(-2.5349999999999999e-7 * var_chaste_interface__cell__V) / (1.0 + exp(-3.2000000000000002 - 0.10000000000000001 * var_chaste_interface__cell__V)))) * var_chaste_interface__INa_j_gate__j; // 1 / ms
        const double d_dt_chaste_interface_var_INa_m_gate__m = (1.0 - var_chaste_interface__INa_m_gate__m) * ((fabs(47.130000000000003 + var_chaste_interface__cell__V) > 0.001) ? (0.32000000000000001 * (47.130000000000003 + var_chaste_interface__cell__V) / (1.0 - exp(-4.7130000000000001 - 0.10000000000000001 * var_chaste_interface__cell__V))) : (3.2000000000000002)) - 0.080000000000000002 * var_chaste_interface__INa_m_gate__m * exp(-0.090909090909090912 * var_chaste_interface__cell__V); // 1 / ms
        const double d_dt_chaste_interface_var_Ito_r_gate__r = -(0.51490000000000002 * exp(0.67236288 - 0.13439999999999999 * var_chaste_interface__cell__V) + 5.1860000000000002e-5 * var_chaste_interface__cell__V) * var_chaste_interface__Ito_r_gate__r / (1.0 + exp(6.9907280000000006e-6 - 0.1348 * var_chaste_interface__cell__V)) + 0.52659999999999996 * (1.0 - var_chaste_interface__Ito_r_gate__r) * exp(0.70203392000000009 - 0.0166 * var_chaste_interface__cell__V) / (1.0 + exp(3.9880601600000003 - 0.094299999999999995 * var_chaste_interface__cell__V)); // 1 / ms
        const double d_dt_chaste_interface_var_Ito_t_gate__t = (1.0 - var_chaste_interface__Ito_t_gate__t) * (5.6119999999999998e-5 * var_chaste_interface__cell__V + 0.072099999999999997 * exp(-5.9257863000000004 - 0.17299999999999999 * var_chaste_interface__cell__V)) / (1.0 + exp(-5.9326369200000002 - 0.17319999999999999 * var_chaste_interface__cell__V)) - (0.0001215 * var_chaste_interface__cell__V + 0.076700000000000004 * exp(-5.6479010000000002e-8 - 1.6600000000000001e-9 * var_chaste_interface__cell__V)) * var_chaste_interface__Ito_t_gate__t / (1.0 + exp(-5.4573693999999993 - 0.16039999999999999 * var_chaste_interface__cell__V)); // 1 / ms
        const double var_cell__failing = 0; // dimensionless
        const double var_ICab__i_b_Ca = (-var_ICa__E_Ca + var_chaste_interface__cell__V) * ((var_cell__failing == 0) ? (0.00084999999999999995) : (0.0012999999999999999)); // uA_per_uF
        const double var_IK1__i_K1 = 0.10000000000000001 * (-var_IK1__E_K1 + var_chaste_interface__cell__V) * ((var_cell__failing == 0) ? (2.5) : (2.0)) / ((1.0 + exp(-12.0 + 0.059999999999999998 * var_chaste_interface__cell__V - 0.059999999999999998 * var_IK1__E_K1)) * (0.10000000000000001 / (1.0 + exp(-12.0 + 0.059999999999999998 * var_chaste_interface__cell__V - 0.059999999999999998 * var_IK1__E_K1)) + (3.0 * exp(0.02 + 0.00020000000000000001 * var_chaste_interface__cell__V - 0.00020000000000000001 * var_IK1__E_K1) + exp(-1.0 + 0.10000000000000001 * var_chaste_interface__cell__V - 0.10000000000000001 * var_IK1__E_K1)) / (1.0 + exp(0.5 * var_IK1__E_K1 - 0.5 * var_chaste_interface__cell__V)))); // uA_per_uF
        const double var_INaCa__i_NaCa = 8.9708471082494193e-8 * (2.0 * pow(var_chaste_interface__Ionic_concentrations__Nai, 3) * exp(0.013095980540851452 * var_chaste_interface__cell__V) - 2628072.0 * var_chaste_interface__Ionic_concentrations__Cai * exp(-0.024321106718724127 * var_chaste_interface__cell__V)) * ((var_cell__failing == 0) ? (1000.0) : (1650.0)) / (1.0 + 0.10000000000000001 * exp(-0.024321106718724127 * var_chaste_interface__cell__V)); // uA_per_uF
        const double d_dt_chaste_interface_var_Irel__Cainfluxtrack = ((var_chaste_interface__Irel__APtrack > 0.20000000000000001) ? (-0.79492821290395466 * (-var_INaCa__i_NaCa + var_ICa__i_Ca + var_ICab__i_b_Ca) / var_Ionic_concentrations__V_myo) : ((var_chaste_interface__Irel__APtrack2 > 0.01) ? (0) : (-0.5 * var_chaste_interface__Irel__Cainfluxtrack))); // mM / ms
        const double var_INaK__i_NaK = 0.72727272727272729 * ((var_cell__failing == 0) ? (1.3) : (0.75)) / ((1.0 + 31.622776601683793 * pow(1 / var_chaste_interface__Ionic_concentrations__Nai, 1.5)) * (1.0 + 0.1245 * exp(-0.0037417087259575582 * var_chaste_interface__cell__V) + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(2.0505200594353643)) * exp(-0.037417087259575585 * var_chaste_interface__cell__V))); // uA_per_uF
        const double var_INab__i_b_Na = (-var_INa__E_Na + var_chaste_interface__cell__V) * ((var_cell__failing == 0) ? (0.001) : (0)); // uA_per_uF
        const double d_dt_chaste_interface_var_Ionic_concentrations__Nai = -1.5898564258079093 * (3.0 * var_INaCa__i_NaCa + 3.0 * var_INaK__i_NaK + var_INa__i_Na + var_INab__i_b_Na) / var_Ionic_concentrations__V_myo; // mM / ms
        const double var_Ileak__i_leak = ((var_cell__failing == 0) ? (0.00025999999999999998) : (0.00017000000000000001)) * var_chaste_interface__Ionic_concentrations__Ca_NSR; // mM_per_ms
        const double var_Ito__i_to = (-26.725757487819561 * log(10) * log10(9.9339999999999993 / (0.042999999999999997 * var_chaste_interface__Ionic_concentrations__Nai + var_chaste_interface__Ionic_concentrations__Ki)) + var_chaste_interface__cell__V) * ((var_cell__failing == 0) ? (0.29999999999999999) : (0.191)) * var_chaste_interface__Ito_r_gate__r * var_chaste_interface__Ito_t_gate__t; // uA_per_uF
        const double var_Iup__i_up = ((var_cell__failing == 0) ? (0.0044999999999999997) : (0.0015)) * var_chaste_interface__Ionic_concentrations__Cai / (0.00092000000000000003 + var_chaste_interface__Ionic_concentrations__Cai); // mM_per_ms
        const double d_dt_chaste_interface_var_Ionic_concentrations__Ca_NSR = -1.0 * var_Ileak__i_leak - 1.0 * var_Ionic_concentrations__V_JSR * var_Itr__i_tr / var_Ionic_concentrations__V_NSR + var_Iup__i_up; // mM / ms
        const double d_dt_chaste_interface_var_Ionic_concentrations__Cai = (-0.79492821290395466 * (-2.0 * var_INaCa__i_NaCa + var_ICa__i_Ca + var_ICab__i_b_Ca) / var_Ionic_concentrations__V_myo + (-var_Iup__i_up + var_Ileak__i_leak) * var_Ionic_concentrations__V_NSR / var_Ionic_concentrations__V_myo + var_Ionic_concentrations__V_JSR * var_Irel__i_rel / var_Ionic_concentrations__V_myo) / (1.0 + 0.00011900000000000002 / pow((0.0023800000000000002 + var_chaste_interface__Ionic_concentrations__Cai), 2) + 3.5000000000000004e-5 / pow((0.00050000000000000001 + var_chaste_interface__Ionic_concentrations__Cai), 2)); // mM / ms
        const double var_cell__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time) / HeartConfig::Instance()->GetCapacitance(); // uA_per_uF
        const double d_dt_chaste_interface_var_Ionic_concentrations__Ki = -1.5898564258079093 * (-2.0 * var_INaK__i_NaK + var_IK1__i_K1 + var_IKr__i_Kr + var_IKs__i_Ks + var_Ito__i_to + var_cell__i_Stim) / var_Ionic_concentrations__V_myo; // mM / ms
        const double var_cell__dVdt = -1.0 * var_ICa__i_Ca - 1.0 * var_ICab__i_b_Ca - 1.0 * var_IK1__i_K1 - 1.0 * var_IKr__i_Kr - 1.0 * var_IKs__i_Ks - 1.0 * var_INa__i_Na - 1.0 * var_INaCa__i_NaCa - 1.0 * var_INaK__i_NaK - 1.0 * var_INab__i_b_Na - 1.0 * var_Ito__i_to - 1.0 * var_cell__i_Stim; // mV_per_ms
        const double d_dt_chaste_interface_var_Irel__APtrack = ((var_cell__dVdt > 150.0) ? (100.0 - 100.5 * var_chaste_interface__Irel__APtrack) : (-0.5 * var_chaste_interface__Irel__APtrack)); // 1 / ms

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_cell__V = 0.0;
        }
        else
        {
            d_dt_chaste_interface_var_cell__V = var_cell__dVdt; // mV / ms
        }
        
        mEvalF[0] = d_dt_chaste_interface_var_cell__V;
        mEvalF[1] = d_dt_chaste_interface_var_Ionic_concentrations__Cai;
        mEvalF[2] = d_dt_chaste_interface_var_INa_m_gate__m;
        mEvalF[3] = d_dt_chaste_interface_var_INa_h_gate__h;
        mEvalF[4] = d_dt_chaste_interface_var_INa_j_gate__j;
        mEvalF[5] = d_dt_chaste_interface_var_ICa_d_gate__d;
        mEvalF[6] = d_dt_chaste_interface_var_ICa_f_gate__f;
        mEvalF[7] = d_dt_chaste_interface_var_Ito_r_gate__r;
        mEvalF[8] = d_dt_chaste_interface_var_Ito_t_gate__t;
        mEvalF[9] = d_dt_chaste_interface_var_IKs_Xs_gate__Xs;
        mEvalF[10] = d_dt_chaste_interface_var_IKr_Xr_gate__Xr;
        mEvalF[11] = d_dt_chaste_interface_var_Irel__APtrack;
        mEvalF[12] = d_dt_chaste_interface_var_Irel__APtrack2;
        mEvalF[13] = d_dt_chaste_interface_var_Irel__APtrack3;
        mEvalF[14] = d_dt_chaste_interface_var_Irel__Cainfluxtrack;
        mEvalF[15] = d_dt_chaste_interface_var_Irel__OVRLDtrack;
        mEvalF[16] = d_dt_chaste_interface_var_Irel__OVRLDtrack2;
        mEvalF[17] = d_dt_chaste_interface_var_Irel__OVRLDtrack3;
        mEvalF[18] = d_dt_chaste_interface_var_Ionic_concentrations__Nai;
        mEvalF[19] = d_dt_chaste_interface_var_Ionic_concentrations__Ki;
        mEvalF[20] = d_dt_chaste_interface_var_Ionic_concentrations__Ca_JSR;
        mEvalF[21] = d_dt_chaste_interface_var_Ionic_concentrations__Ca_NSR;

        
        mPartialF[0] = EvaluatePartialDerivative0(var_chaste_interface__environment__time, rY, delta);
        mPartialF[1] = EvaluatePartialDerivative1(var_chaste_interface__environment__time, rY, delta);
        mPartialF[2] = EvaluatePartialDerivative2(var_chaste_interface__environment__time, rY, delta);
        mPartialF[3] = EvaluatePartialDerivative3(var_chaste_interface__environment__time, rY, delta);
        mPartialF[4] = EvaluatePartialDerivative4(var_chaste_interface__environment__time, rY, delta);
        mPartialF[5] = EvaluatePartialDerivative5(var_chaste_interface__environment__time, rY, delta);
        mPartialF[6] = EvaluatePartialDerivative6(var_chaste_interface__environment__time, rY, delta);
        mPartialF[7] = EvaluatePartialDerivative7(var_chaste_interface__environment__time, rY, delta);
        mPartialF[8] = EvaluatePartialDerivative8(var_chaste_interface__environment__time, rY, delta);
        mPartialF[9] = EvaluatePartialDerivative9(var_chaste_interface__environment__time, rY, delta);
        mPartialF[10] = EvaluatePartialDerivative10(var_chaste_interface__environment__time, rY, delta);
        mPartialF[11] = EvaluatePartialDerivative11(var_chaste_interface__environment__time, rY, delta);
        mPartialF[12] = EvaluatePartialDerivative12(var_chaste_interface__environment__time, rY, delta);
        mPartialF[13] = EvaluatePartialDerivative13(var_chaste_interface__environment__time, rY, delta);
        mPartialF[14] = EvaluatePartialDerivative14(var_chaste_interface__environment__time, rY, delta);
        mPartialF[15] = EvaluatePartialDerivative15(var_chaste_interface__environment__time, rY, delta);
        mPartialF[16] = EvaluatePartialDerivative16(var_chaste_interface__environment__time, rY, delta);
        mPartialF[17] = EvaluatePartialDerivative17(var_chaste_interface__environment__time, rY, delta);
        mPartialF[18] = EvaluatePartialDerivative18(var_chaste_interface__environment__time, rY, delta);
        mPartialF[19] = EvaluatePartialDerivative19(var_chaste_interface__environment__time, rY, delta);
        mPartialF[20] = EvaluatePartialDerivative20(var_chaste_interface__environment__time, rY, delta);
        mPartialF[21] = EvaluatePartialDerivative21(var_chaste_interface__environment__time, rY, delta);
        for (unsigned var=0; var<size; var++)
        {
            if (var == 0) continue;
            if (fabs(mPartialF[var]) < delta)
            {
                rY[var] = mYInit[var] + 0.5*mDt*mEvalF[var];
            }
            else
            {
                rY[var] = mYInit[var] + (mEvalF[var]/mPartialF[var])*(exp(mPartialF[var]*0.5*mDt)-1.0);
            }
            
        }
        
        
        y_save = rY[1];
        rY[1] = mYInit[1];
        mEvalF[1] = EvaluateYDerivative1(var_chaste_interface__environment__time, rY);
        mPartialF[1] = EvaluatePartialDerivative1(var_chaste_interface__environment__time, rY, delta);
        rY[1] = y_save;
        
        
        y_save = rY[2];
        rY[2] = mYInit[2];
        mEvalF[2] = EvaluateYDerivative2(var_chaste_interface__environment__time, rY);
        mPartialF[2] = EvaluatePartialDerivative2(var_chaste_interface__environment__time, rY, delta);
        rY[2] = y_save;
        
        
        y_save = rY[3];
        rY[3] = mYInit[3];
        mEvalF[3] = EvaluateYDerivative3(var_chaste_interface__environment__time, rY);
        mPartialF[3] = EvaluatePartialDerivative3(var_chaste_interface__environment__time, rY, delta);
        rY[3] = y_save;
        
        
        y_save = rY[4];
        rY[4] = mYInit[4];
        mEvalF[4] = EvaluateYDerivative4(var_chaste_interface__environment__time, rY);
        mPartialF[4] = EvaluatePartialDerivative4(var_chaste_interface__environment__time, rY, delta);
        rY[4] = y_save;
        
        
        y_save = rY[5];
        rY[5] = mYInit[5];
        mEvalF[5] = EvaluateYDerivative5(var_chaste_interface__environment__time, rY);
        mPartialF[5] = EvaluatePartialDerivative5(var_chaste_interface__environment__time, rY, delta);
        rY[5] = y_save;
        
        
        y_save = rY[6];
        rY[6] = mYInit[6];
        mEvalF[6] = EvaluateYDerivative6(var_chaste_interface__environment__time, rY);
        mPartialF[6] = EvaluatePartialDerivative6(var_chaste_interface__environment__time, rY, delta);
        rY[6] = y_save;
        
        
        y_save = rY[7];
        rY[7] = mYInit[7];
        mEvalF[7] = EvaluateYDerivative7(var_chaste_interface__environment__time, rY);
        mPartialF[7] = EvaluatePartialDerivative7(var_chaste_interface__environment__time, rY, delta);
        rY[7] = y_save;
        
        
        y_save = rY[8];
        rY[8] = mYInit[8];
        mEvalF[8] = EvaluateYDerivative8(var_chaste_interface__environment__time, rY);
        mPartialF[8] = EvaluatePartialDerivative8(var_chaste_interface__environment__time, rY, delta);
        rY[8] = y_save;
        
        
        y_save = rY[9];
        rY[9] = mYInit[9];
        mEvalF[9] = EvaluateYDerivative9(var_chaste_interface__environment__time, rY);
        mPartialF[9] = EvaluatePartialDerivative9(var_chaste_interface__environment__time, rY, delta);
        rY[9] = y_save;
        
        
        y_save = rY[10];
        rY[10] = mYInit[10];
        mEvalF[10] = EvaluateYDerivative10(var_chaste_interface__environment__time, rY);
        mPartialF[10] = EvaluatePartialDerivative10(var_chaste_interface__environment__time, rY, delta);
        rY[10] = y_save;
        
        
        y_save = rY[11];
        rY[11] = mYInit[11];
        mEvalF[11] = EvaluateYDerivative11(var_chaste_interface__environment__time, rY);
        mPartialF[11] = EvaluatePartialDerivative11(var_chaste_interface__environment__time, rY, delta);
        rY[11] = y_save;
        
        
        y_save = rY[12];
        rY[12] = mYInit[12];
        mEvalF[12] = EvaluateYDerivative12(var_chaste_interface__environment__time, rY);
        mPartialF[12] = EvaluatePartialDerivative12(var_chaste_interface__environment__time, rY, delta);
        rY[12] = y_save;
        
        
        y_save = rY[13];
        rY[13] = mYInit[13];
        mEvalF[13] = EvaluateYDerivative13(var_chaste_interface__environment__time, rY);
        mPartialF[13] = EvaluatePartialDerivative13(var_chaste_interface__environment__time, rY, delta);
        rY[13] = y_save;
        
        
        y_save = rY[14];
        rY[14] = mYInit[14];
        mEvalF[14] = EvaluateYDerivative14(var_chaste_interface__environment__time, rY);
        mPartialF[14] = EvaluatePartialDerivative14(var_chaste_interface__environment__time, rY, delta);
        rY[14] = y_save;
        
        
        y_save = rY[15];
        rY[15] = mYInit[15];
        mEvalF[15] = EvaluateYDerivative15(var_chaste_interface__environment__time, rY);
        mPartialF[15] = EvaluatePartialDerivative15(var_chaste_interface__environment__time, rY, delta);
        rY[15] = y_save;
        
        
        y_save = rY[16];
        rY[16] = mYInit[16];
        mEvalF[16] = EvaluateYDerivative16(var_chaste_interface__environment__time, rY);
        mPartialF[16] = EvaluatePartialDerivative16(var_chaste_interface__environment__time, rY, delta);
        rY[16] = y_save;
        
        
        y_save = rY[17];
        rY[17] = mYInit[17];
        mEvalF[17] = EvaluateYDerivative17(var_chaste_interface__environment__time, rY);
        mPartialF[17] = EvaluatePartialDerivative17(var_chaste_interface__environment__time, rY, delta);
        rY[17] = y_save;
        
        
        y_save = rY[18];
        rY[18] = mYInit[18];
        mEvalF[18] = EvaluateYDerivative18(var_chaste_interface__environment__time, rY);
        mPartialF[18] = EvaluatePartialDerivative18(var_chaste_interface__environment__time, rY, delta);
        rY[18] = y_save;
        
        
        y_save = rY[19];
        rY[19] = mYInit[19];
        mEvalF[19] = EvaluateYDerivative19(var_chaste_interface__environment__time, rY);
        mPartialF[19] = EvaluatePartialDerivative19(var_chaste_interface__environment__time, rY, delta);
        rY[19] = y_save;
        
        
        y_save = rY[20];
        rY[20] = mYInit[20];
        mEvalF[20] = EvaluateYDerivative20(var_chaste_interface__environment__time, rY);
        mPartialF[20] = EvaluatePartialDerivative20(var_chaste_interface__environment__time, rY, delta);
        rY[20] = y_save;
        
        
        y_save = rY[21];
        rY[21] = mYInit[21];
        mEvalF[21] = EvaluateYDerivative21(var_chaste_interface__environment__time, rY);
        mPartialF[21] = EvaluatePartialDerivative21(var_chaste_interface__environment__time, rY, delta);
        rY[21] = y_save;
                
        for (unsigned var=0; var<size; var++)
        {
            if (var == 0) continue;
            if (fabs(mPartialF[var]) < delta)
            {
                rY[var] = mYInit[var] + mDt*mEvalF[var];
            }
            else
            {
                rY[var] = mYInit[var] + (mEvalF[var]/mPartialF[var])*(exp(mPartialF[var]*mDt)-1.0);
            }
            
        }


    }
   
    
    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluateYDerivative0(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        double d_dt_chaste_interface_var_cell__V;
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: mV; Initial value: -90.7796417483135
        double var_chaste_interface__Ionic_concentrations__Cai = rY[1];
        // Units: mM; Initial value: 0.0002
        double var_chaste_interface__INa_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.000585525582501575
        double var_chaste_interface__INa_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.995865529216237
        double var_chaste_interface__INa_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.997011204496203
        double var_chaste_interface__ICa_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 2.50653215966786e-10
        double var_chaste_interface__ICa_f_gate__f = rY[6];
        // Units: dimensionless; Initial value: 0.92130376850548
        double var_chaste_interface__Ito_r_gate__r = rY[7];
        // Units: dimensionless; Initial value: 1.75032478501027e-05
        double var_chaste_interface__Ito_t_gate__t = rY[8];
        // Units: dimensionless; Initial value: 0.999897251531651
        double var_chaste_interface__IKs_Xs_gate__Xs = rY[9];
        // Units: dimensionless; Initial value: 0.00885658064818147
        double var_chaste_interface__IKr_Xr_gate__Xr = rY[10];
        // Units: dimensionless; Initial value: 0.000215523048438941
        double var_chaste_interface__Ionic_concentrations__Nai = rY[18];
        // Units: mM; Initial value: 10.0
        double var_chaste_interface__Ionic_concentrations__Ki = rY[19];
        // Units: mM; Initial value: 140.0
        
        
        // Mathematics
        const double var_ICa__E_Ca = 13.36287874390978 * log(10) * log10(2.0 / var_chaste_interface__Ionic_concentrations__Cai); // mV
        const double var_IK1__E_K1 = 26.725757487819561 * log(10) * log10(4.0 / var_chaste_interface__Ionic_concentrations__Ki); // mV
        const double var_INa__E_Na = 26.725757487819561 * log(10) * log10(138.0 / var_chaste_interface__Ionic_concentrations__Nai); // mV
        const double var_ICa__i_Ca = 0.00059999999999999995 * (-var_ICa__E_Ca + var_chaste_interface__cell__V) * mParameters[0] * var_chaste_interface__ICa_d_gate__d * var_chaste_interface__ICa_f_gate__f / (0.00059999999999999995 + var_chaste_interface__Ionic_concentrations__Cai); // uA_per_uF
        const double var_IKr__i_Kr = (-26.725757487819561 * log(10) * log10(4.0 / var_chaste_interface__Ionic_concentrations__Ki) + var_chaste_interface__cell__V) * mParameters[2] * var_chaste_interface__IKr_Xr_gate__Xr / (1.0 + exp(1.1304347826086956 + 0.043478260869565216 * var_chaste_interface__cell__V)); // uA_per_uF
        const double var_IKs__i_Ks = 0.02 * pow(var_chaste_interface__IKs_Xs_gate__Xs, 2) * (-26.725757487819561 * log(10) * log10(6.5295399999999999 / (0.018329999999999999 * var_chaste_interface__Ionic_concentrations__Nai + var_chaste_interface__Ionic_concentrations__Ki)) + var_chaste_interface__cell__V); // uA_per_uF
        const double var_INa__i_Na = pow(var_chaste_interface__INa_m_gate__m, 3) * (-var_INa__E_Na + var_chaste_interface__cell__V) * mParameters[1] * var_chaste_interface__INa_h_gate__h * var_chaste_interface__INa_j_gate__j; // uA_per_uF
        const double var_cell__failing = 0; // dimensionless
        const double var_ICab__i_b_Ca = (-var_ICa__E_Ca + var_chaste_interface__cell__V) * ((var_cell__failing == 0) ? (0.00084999999999999995) : (0.0012999999999999999)); // uA_per_uF
        const double var_IK1__i_K1 = 0.10000000000000001 * (-var_IK1__E_K1 + var_chaste_interface__cell__V) * ((var_cell__failing == 0) ? (2.5) : (2.0)) / ((1.0 + exp(-12.0 + 0.059999999999999998 * var_chaste_interface__cell__V - 0.059999999999999998 * var_IK1__E_K1)) * (0.10000000000000001 / (1.0 + exp(-12.0 + 0.059999999999999998 * var_chaste_interface__cell__V - 0.059999999999999998 * var_IK1__E_K1)) + (3.0 * exp(0.02 + 0.00020000000000000001 * var_chaste_interface__cell__V - 0.00020000000000000001 * var_IK1__E_K1) + exp(-1.0 + 0.10000000000000001 * var_chaste_interface__cell__V - 0.10000000000000001 * var_IK1__E_K1)) / (1.0 + exp(0.5 * var_IK1__E_K1 - 0.5 * var_chaste_interface__cell__V)))); // uA_per_uF
        const double var_INaCa__i_NaCa = 8.9708471082494193e-8 * (2.0 * pow(var_chaste_interface__Ionic_concentrations__Nai, 3) * exp(0.013095980540851452 * var_chaste_interface__cell__V) - 2628072.0 * var_chaste_interface__Ionic_concentrations__Cai * exp(-0.024321106718724127 * var_chaste_interface__cell__V)) * ((var_cell__failing == 0) ? (1000.0) : (1650.0)) / (1.0 + 0.10000000000000001 * exp(-0.024321106718724127 * var_chaste_interface__cell__V)); // uA_per_uF
        const double var_INaK__i_NaK = 0.72727272727272729 * ((var_cell__failing == 0) ? (1.3) : (0.75)) / ((1.0 + 31.622776601683793 * pow(1 / var_chaste_interface__Ionic_concentrations__Nai, 1.5)) * (1.0 + 0.1245 * exp(-0.0037417087259575582 * var_chaste_interface__cell__V) + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(2.0505200594353643)) * exp(-0.037417087259575585 * var_chaste_interface__cell__V))); // uA_per_uF
        const double var_INab__i_b_Na = (-var_INa__E_Na + var_chaste_interface__cell__V) * ((var_cell__failing == 0) ? (0.001) : (0)); // uA_per_uF
        const double var_Ito__i_to = (-26.725757487819561 * log(10) * log10(9.9339999999999993 / (0.042999999999999997 * var_chaste_interface__Ionic_concentrations__Nai + var_chaste_interface__Ionic_concentrations__Ki)) + var_chaste_interface__cell__V) * ((var_cell__failing == 0) ? (0.29999999999999999) : (0.191)) * var_chaste_interface__Ito_r_gate__r * var_chaste_interface__Ito_t_gate__t; // uA_per_uF
        const double var_cell__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time) / HeartConfig::Instance()->GetCapacitance(); // uA_per_uF
        const double var_cell__dVdt = -1.0 * var_ICa__i_Ca - 1.0 * var_ICab__i_b_Ca - 1.0 * var_IK1__i_K1 - 1.0 * var_IKr__i_Kr - 1.0 * var_IKs__i_Ks - 1.0 * var_INa__i_Na - 1.0 * var_INaCa__i_NaCa - 1.0 * var_INaK__i_NaK - 1.0 * var_INab__i_b_Na - 1.0 * var_Ito__i_to - 1.0 * var_cell__i_Stim; // mV_per_ms
        d_dt_chaste_interface_var_cell__V = var_cell__dVdt; // mV / ms

        return d_dt_chaste_interface_var_cell__V;
    }

    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluatePartialDerivative0(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: mV; Initial value: -90.7796417483135
            double var_chaste_interface__Ionic_concentrations__Cai = rY[1];
            // Units: mM; Initial value: 0.0002
            double var_chaste_interface__INa_m_gate__m = rY[2];
            // Units: dimensionless; Initial value: 0.000585525582501575
            double var_chaste_interface__INa_h_gate__h = rY[3];
            // Units: dimensionless; Initial value: 0.995865529216237
            double var_chaste_interface__INa_j_gate__j = rY[4];
            // Units: dimensionless; Initial value: 0.997011204496203
            double var_chaste_interface__ICa_d_gate__d = rY[5];
            // Units: dimensionless; Initial value: 2.50653215966786e-10
            double var_chaste_interface__ICa_f_gate__f = rY[6];
            // Units: dimensionless; Initial value: 0.92130376850548
            double var_chaste_interface__Ito_r_gate__r = rY[7];
            // Units: dimensionless; Initial value: 1.75032478501027e-05
            double var_chaste_interface__Ito_t_gate__t = rY[8];
            // Units: dimensionless; Initial value: 0.999897251531651
            double var_chaste_interface__IKs_Xs_gate__Xs = rY[9];
            // Units: dimensionless; Initial value: 0.00885658064818147
            double var_chaste_interface__IKr_Xr_gate__Xr = rY[10];
            // Units: dimensionless; Initial value: 0.000215523048438941
            double var_chaste_interface__Ionic_concentrations__Nai = rY[18];
            // Units: mM; Initial value: 10.0
            double var_chaste_interface__Ionic_concentrations__Ki = rY[19];
            // Units: mM; Initial value: 140.0
            
            const double var_x0 = pow(var_chaste_interface__IKs_Xs_gate__Xs, 2);
            const double var_x1 = 0.02 * var_x0;
            const double var_x2 = var_chaste_interface__Ito_r_gate__r * var_chaste_interface__Ito_t_gate__t;
            const double var_x3 = 0.29999999999999999 * var_x2;
            const double var_x4 = log(10);
            const double var_x5 = 1 / var_chaste_interface__Ionic_concentrations__Ki;
            const double var_x6 = var_x4 * log10(4.0 * var_x5);
            const double var_x7 = exp(-12.0 + 0.059999999999999998 * var_chaste_interface__cell__V - 1.6035454492691736 * var_x6);
            const double var_x8 = 1.0 + var_x7;
            const double var_x9 = 1 / var_x8;
            const double var_x10 = exp(13.36287874390978 * var_x6 - 0.5 * var_chaste_interface__cell__V);
            const double var_x11 = 1.0 + var_x10;
            const double var_x12 = 1 / var_x11;
            const double var_x13 = exp(0.02 + 0.00020000000000000001 * var_chaste_interface__cell__V - 0.0053451514975639122 * var_x6);
            const double var_x14 = 0.10000000000000001 * var_chaste_interface__cell__V;
            const double var_x15 = exp(-1.0 + var_x14 - 2.6725757487819561 * var_x6);
            const double var_x16 = var_x15 + 3.0 * var_x13;
            const double var_x17 = 0.10000000000000001 * var_x9 + var_x12 * var_x16;
            const double var_x18 = 1 / var_x17;
            const double var_x19 = var_x18 * var_x9;
            const double var_x20 = 0.25 * var_x19;
            const double var_x21 = exp(1.1304347826086956 + 0.043478260869565216 * var_chaste_interface__cell__V);
            const double var_x22 = 1.0 + var_x21;
            const double var_x23 = mParameters[2] / var_x22;
            const double var_x24 = var_x23 * var_chaste_interface__IKr_Xr_gate__Xr;
            const double var_x25 = 1.0 * var_x24;
            const double var_x26 = 1 / var_chaste_interface__Ionic_concentrations__Nai;
            const double var_x27 = pow(var_x26, 1.5);
            const double var_x28 = 1 / (1.0 + 31.622776601683793 * var_x27);
            const double var_x29 = 0.94545454545454544 * var_x28;
            const double var_x30 = exp(-0.0037417087259575582 * var_chaste_interface__cell__V);
            const double var_x31 = exp(2.0505200594353643);
            const double var_x32 = exp(-0.037417087259575585 * var_chaste_interface__cell__V);
            const double var_x33 = 1.0 + 0.1245 * var_x30 + 0.036499999999999998 * var_x32 * (-0.14285714285714285 + 0.14285714285714285 * var_x31);
            const double var_x34 = (0.00046584273638171602 * var_x30 + 0.037417087259575585 * var_x32 * (-0.0052142857142857138 + 0.0052142857142857138 * var_x31)) / pow(var_x33, 2);
            const double var_x35 = var_x7 / pow(var_x8, 2);
            const double var_x36 = -26.725757487819561 * var_x6 + var_chaste_interface__cell__V;
            const double var_x37 = var_x18 * var_x36;
            const double var_x38 = 0.014999999999999999 * var_x35 * var_x37;
            const double var_x39 = pow(var_chaste_interface__INa_m_gate__m, 3);
            const double var_x40 = var_x39 * mParameters[1] * var_chaste_interface__INa_j_gate__j;
            const double var_x41 = var_x40 * var_chaste_interface__INa_h_gate__h;
            const double var_x42 = 1.0 * var_x41;
            const double var_x43 = 0.00059999999999999995 + var_chaste_interface__Ionic_concentrations__Cai;
            const double var_x44 = 1 / var_x43;
            const double var_x45 = var_x44 * mParameters[0] * var_chaste_interface__ICa_f_gate__f;
            const double var_x46 = 0.00059999999999999995 * var_x45;
            const double var_x47 = var_x46 * var_chaste_interface__ICa_d_gate__d;
            const double var_x48 = var_x10 * var_x16 / pow(var_x11, 2);
            const double var_x49 = 0.25 * var_x36 * var_x9 / pow(var_x17, 2);
            const double var_x50 = var_x49 * (0.0060000000000000001 * var_x35 - 0.5 * var_x48 - var_x12 * (0.10000000000000001 * var_x15 + 0.00060000000000000006 * var_x13));
            const double var_x51 = 0.043478260869565216 * var_x21 * var_x36 * mParameters[2] * var_chaste_interface__IKr_Xr_gate__Xr / pow(var_x22, 2);
            const double var_x52 = exp(-0.024321106718724127 * var_chaste_interface__cell__V);
            const double var_x53 = 1.0 + 0.10000000000000001 * var_x52;
            const double var_x54 = 1 / var_x53;
            const double var_x55 = exp(0.013095980540851452 * var_chaste_interface__cell__V);
            const double var_x56 = var_x55 * pow(var_chaste_interface__Ionic_concentrations__Nai, 3);
            const double var_x57 = var_x52 * var_chaste_interface__Ionic_concentrations__Cai;
            const double var_x58 = var_x54 * (0.026191961081702905 * var_x56 + 63917.619576490761 * var_x57);
            const double var_x59 = 2.0 * var_x56 - 2628072.0 * var_x57;
            const double var_x60 = var_x52 * var_x59 / pow(var_x53, 2);
            const double var_x61 = -2.1818092987709189e-7 * var_x60 - 8.9708471082494196e-5 * var_x58;
            
            partialF = -0.0018500000000000001 + var_x38 + var_x51 + var_x61 - var_x1 - var_x20 - var_x25 - var_x3 - var_x42 - var_x47 - var_x50 - var_x29 * var_x34;
        }
        else
        {
            const double y_save = rY[0];
            rY[0] += delta;
            const double temp = EvaluateYDerivative0(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[0])/delta;
            rY[0] = y_save;
        }
        return partialF;
    }
    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluateYDerivative1(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: mV; Initial value: -90.7796417483135
        double var_chaste_interface__Ionic_concentrations__Cai = rY[1];
        // Units: mM; Initial value: 0.0002
        double var_chaste_interface__ICa_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 2.50653215966786e-10
        double var_chaste_interface__ICa_f_gate__f = rY[6];
        // Units: dimensionless; Initial value: 0.92130376850548
        double var_chaste_interface__Irel__APtrack2 = rY[12];
        // Units: dimensionless; Initial value: -7.58517896402761e-136
        double var_chaste_interface__Irel__Cainfluxtrack = rY[14];
        // Units: mM; Initial value: -7.71120176147331e-138
        double var_chaste_interface__Ionic_concentrations__Nai = rY[18];
        // Units: mM; Initial value: 10.0
        double var_chaste_interface__Ionic_concentrations__Ca_JSR = rY[20];
        // Units: mM; Initial value: 2.5
        double var_chaste_interface__Ionic_concentrations__Ca_NSR = rY[21];
        // Units: mM; Initial value: 2.5
        
        
        // Mathematics
        const double var_Ionic_concentrations__volume = 12100.0 * M_PI; // fL
        const double var_Ionic_concentrations__V_JSR = 0.0047999999999999996 * var_Ionic_concentrations__volume; // fL
        const double var_Ionic_concentrations__V_NSR = 0.055199999999999999 * var_Ionic_concentrations__volume; // fL
        const double var_Ionic_concentrations__V_myo = 0.68000000000000005 * var_Ionic_concentrations__volume; // fL
        const double var_Irel__i_rel = (-var_chaste_interface__Ionic_concentrations__Cai + var_chaste_interface__Ionic_concentrations__Ca_JSR) * ((var_chaste_interface__Irel__Cainfluxtrack > 5.0000000000000004e-6) ? (22.0 * (1.0 - var_chaste_interface__Irel__APtrack2) * (-5.0000000000000004e-6 + var_chaste_interface__Irel__Cainfluxtrack) * var_chaste_interface__Irel__APtrack2 / (0.00079500000000000003 + var_chaste_interface__Irel__Cainfluxtrack)) : (0)); // mM_per_ms
        const double var_ICa__E_Ca = 13.36287874390978 * log(10) * log10(2.0 / var_chaste_interface__Ionic_concentrations__Cai); // mV
        const double var_ICa__i_Ca = 0.00059999999999999995 * (-var_ICa__E_Ca + var_chaste_interface__cell__V) * mParameters[0] * var_chaste_interface__ICa_d_gate__d * var_chaste_interface__ICa_f_gate__f / (0.00059999999999999995 + var_chaste_interface__Ionic_concentrations__Cai); // uA_per_uF
        const double var_cell__failing = 0; // dimensionless
        const double var_ICab__i_b_Ca = (-var_ICa__E_Ca + var_chaste_interface__cell__V) * ((var_cell__failing == 0) ? (0.00084999999999999995) : (0.0012999999999999999)); // uA_per_uF
        const double var_INaCa__i_NaCa = 8.9708471082494193e-8 * (2.0 * pow(var_chaste_interface__Ionic_concentrations__Nai, 3) * exp(0.013095980540851452 * var_chaste_interface__cell__V) - 2628072.0 * var_chaste_interface__Ionic_concentrations__Cai * exp(-0.024321106718724127 * var_chaste_interface__cell__V)) * ((var_cell__failing == 0) ? (1000.0) : (1650.0)) / (1.0 + 0.10000000000000001 * exp(-0.024321106718724127 * var_chaste_interface__cell__V)); // uA_per_uF
        const double var_Ileak__i_leak = ((var_cell__failing == 0) ? (0.00025999999999999998) : (0.00017000000000000001)) * var_chaste_interface__Ionic_concentrations__Ca_NSR; // mM_per_ms
        const double var_Iup__i_up = ((var_cell__failing == 0) ? (0.0044999999999999997) : (0.0015)) * var_chaste_interface__Ionic_concentrations__Cai / (0.00092000000000000003 + var_chaste_interface__Ionic_concentrations__Cai); // mM_per_ms
        const double d_dt_chaste_interface_var_Ionic_concentrations__Cai = (-0.79492821290395466 * (-2.0 * var_INaCa__i_NaCa + var_ICa__i_Ca + var_ICab__i_b_Ca) / var_Ionic_concentrations__V_myo + (-var_Iup__i_up + var_Ileak__i_leak) * var_Ionic_concentrations__V_NSR / var_Ionic_concentrations__V_myo + var_Ionic_concentrations__V_JSR * var_Irel__i_rel / var_Ionic_concentrations__V_myo) / (1.0 + 0.00011900000000000002 / pow((0.0023800000000000002 + var_chaste_interface__Ionic_concentrations__Cai), 2) + 3.5000000000000004e-5 / pow((0.00050000000000000001 + var_chaste_interface__Ionic_concentrations__Cai), 2)); // mM / ms

        return d_dt_chaste_interface_var_Ionic_concentrations__Cai;
    }

    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluatePartialDerivative1(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: mV; Initial value: -90.7796417483135
            double var_chaste_interface__Ionic_concentrations__Cai = rY[1];
            // Units: mM; Initial value: 0.0002
            double var_chaste_interface__ICa_d_gate__d = rY[5];
            // Units: dimensionless; Initial value: 2.50653215966786e-10
            double var_chaste_interface__ICa_f_gate__f = rY[6];
            // Units: dimensionless; Initial value: 0.92130376850548
            double var_chaste_interface__Irel__APtrack2 = rY[12];
            // Units: dimensionless; Initial value: -7.58517896402761e-136
            double var_chaste_interface__Irel__Cainfluxtrack = rY[14];
            // Units: mM; Initial value: -7.71120176147331e-138
            double var_chaste_interface__Ionic_concentrations__Nai = rY[18];
            // Units: mM; Initial value: 10.0
            double var_chaste_interface__Ionic_concentrations__Ca_JSR = rY[20];
            // Units: mM; Initial value: 2.5
            double var_chaste_interface__Ionic_concentrations__Ca_NSR = rY[21];
            // Units: mM; Initial value: 2.5
            
            const double var_x4 = log(10);
            const double var_x43 = 0.00059999999999999995 + var_chaste_interface__Ionic_concentrations__Cai;
            const double var_x44 = 1 / var_x43;
            const double var_x45 = var_x44 * mParameters[0] * var_chaste_interface__ICa_f_gate__f;
            const double var_x46 = 0.00059999999999999995 * var_x45;
            const double var_x47 = var_x46 * var_chaste_interface__ICa_d_gate__d;
            const double var_x52 = exp(-0.024321106718724127 * var_chaste_interface__cell__V);
            const double var_x53 = 1.0 + 0.10000000000000001 * var_x52;
            const double var_x54 = 1 / var_x53;
            const double var_x55 = exp(0.013095980540851452 * var_chaste_interface__cell__V);
            const double var_x56 = var_x55 * pow(var_chaste_interface__Ionic_concentrations__Nai, 3);
            const double var_x57 = var_x52 * var_chaste_interface__Ionic_concentrations__Cai;
            const double var_x59 = 2.0 * var_x56 - 2628072.0 * var_x57;
            const double var_x62 = 1 / var_chaste_interface__Ionic_concentrations__Cai;
            const double var_x63 = 0.011358446932323314 * var_x62;
            const double var_x64 = var_x52 * var_x54;
            const double var_x66 = var_x4 * log10(2.0 * var_x62);
            const double var_x67 = -13.36287874390978 * var_x66 + var_chaste_interface__cell__V;
            const double var_x68 = 0.00059999999999999995 * var_x67 * mParameters[0] * var_chaste_interface__ICa_d_gate__d;
            const double var_x69 = var_x68 * var_chaste_interface__ICa_f_gate__f / pow(var_x43, 2);
            const double var_x70 = 0.0080177272463458679 * var_x45 * var_x62 * var_chaste_interface__ICa_d_gate__d;
            const double var_x103 = 0.0023800000000000002 + var_chaste_interface__Ionic_concentrations__Cai;
            const double var_x104 = 0.00050000000000000001 + var_chaste_interface__Ionic_concentrations__Cai;
            const double var_x105 = 1.0 + 0.00011900000000000002 / pow(var_x103, 2) + 3.5000000000000004e-5 / pow(var_x104, 2);
            const double var_x106 = 1 / var_x105;
            const double var_x108 = 1 / M_PI;
            const double var_x109 = 9.661256841321762e-5 * var_x108;
            const double var_x110 = 0.00079500000000000003 + var_chaste_interface__Irel__Cainfluxtrack;
            const double var_x111 = 1 / var_x110;
            const double var_x112 = 1.0 - var_chaste_interface__Irel__APtrack2;
            const double var_x113 = -5.0000000000000004e-6 + var_chaste_interface__Irel__Cainfluxtrack;
            const double var_x114 = 22.0 * var_x111 * var_x112 * var_x113;
            const double var_x115 = var_x114 * var_chaste_interface__Irel__APtrack2;
            const double var_x116 = var_chaste_interface__Irel__Cainfluxtrack > 5.0000000000000004e-6;
            const double var_x117 = ((var_x116) ? (-var_x115) : (0));
            const double var_x118 = 0.00092000000000000003 + var_chaste_interface__Ionic_concentrations__Cai;
            const double var_x119 = 1 / var_x118;
            const double var_x120 = 0.00036529411764705876 * var_x119;
            const double var_x121 = var_chaste_interface__Ionic_concentrations__Cai / pow(var_x118, 2);
            const double var_x122 = var_x63 + var_x70 - var_x69;
            const double var_x123 = -var_chaste_interface__Ionic_concentrations__Cai + var_chaste_interface__Ionic_concentrations__Ca_JSR;
            const double var_x124 = ((var_x116) ? (var_x115 * var_x123) : (0));
            const double var_x125 = var_x54 * var_x59;
            const double var_x126 = -0.011358446932323314 * var_x66 + var_x47 * var_x67;
            
            partialF = var_x106 * (-var_x120 + 0.0070588235294117632 * var_x117 + 0.00036529411764705876 * var_x121 - var_x109 * (var_x122 + 471.5206420294254 * var_x64)) + (0.00023800000000000004 / pow(var_x103, 3) + 7.0000000000000007e-5 / pow(var_x104, 3)) * (0.0070588235294117632 * var_x124 + 2.1105882352941172e-5 * var_chaste_interface__Ionic_concentrations__Ca_NSR - var_x109 * (var_x126 + 0.00084999999999999995 * var_chaste_interface__cell__V - 0.00017941694216498839 * var_x125) - var_x120 * var_chaste_interface__Ionic_concentrations__Cai) / pow(var_x105, 2);
        }
        else
        {
            const double y_save = rY[1];
            rY[1] += delta;
            const double temp = EvaluateYDerivative1(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[1])/delta;
            rY[1] = y_save;
        }
        return partialF;
    }
    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluateYDerivative2(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: mV; Initial value: -90.7796417483135
        double var_chaste_interface__INa_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.000585525582501575
        
        
        // Mathematics
        const double d_dt_chaste_interface_var_INa_m_gate__m = (1.0 - var_chaste_interface__INa_m_gate__m) * ((fabs(47.130000000000003 + var_chaste_interface__cell__V) > 0.001) ? (0.32000000000000001 * (47.130000000000003 + var_chaste_interface__cell__V) / (1.0 - exp(-4.7130000000000001 - 0.10000000000000001 * var_chaste_interface__cell__V))) : (3.2000000000000002)) - 0.080000000000000002 * var_chaste_interface__INa_m_gate__m * exp(-0.090909090909090912 * var_chaste_interface__cell__V); // 1 / ms

        return d_dt_chaste_interface_var_INa_m_gate__m;
    }

    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluatePartialDerivative2(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: mV; Initial value: -90.7796417483135
            
            const double var_x14 = 0.10000000000000001 * var_chaste_interface__cell__V;
            const double var_x137 = -var_x14;
            const double var_x138 = exp(-4.7130000000000001 + var_x137);
            const double var_x139 = 1.0 - var_x138;
            const double var_x140 = 0.32000000000000001 / var_x139;
            const double var_x141 = exp(-0.090909090909090912 * var_chaste_interface__cell__V);
            const double var_x143 = 47.130000000000003 + var_chaste_interface__cell__V;
            const double var_x144 = fabs(var_x143) > 0.001;
            const double var_x145 = -0.080000000000000002 * var_x141;
            
            partialF = ((var_x144) ? (var_x145 - var_x140 * var_x143) : (-3.2000000000000002 + var_x145));
        }
        else
        {
            const double y_save = rY[2];
            rY[2] += delta;
            const double temp = EvaluateYDerivative2(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[2])/delta;
            rY[2] = y_save;
        }
        return partialF;
    }
    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluateYDerivative3(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: mV; Initial value: -90.7796417483135
        double var_chaste_interface__INa_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.995865529216237
        
        
        // Mathematics
        const double d_dt_chaste_interface_var_INa_h_gate__h = (1.0 - var_chaste_interface__INa_h_gate__h) * ((var_chaste_interface__cell__V < -40.0) ? (0.13500000000000001 * exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__cell__V)) : (0)) - ((var_chaste_interface__cell__V < -40.0) ? (310000.0 * exp(0.34999999999999998 * var_chaste_interface__cell__V) + 3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__cell__V)) : (7.6923076923076916 / (1.0 + exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__cell__V)))) * var_chaste_interface__INa_h_gate__h; // 1 / ms

        return d_dt_chaste_interface_var_INa_h_gate__h;
    }

    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluatePartialDerivative3(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: mV; Initial value: -90.7796417483135
            
            const double var_x146 = exp(0.079000000000000001 * var_chaste_interface__cell__V);
            const double var_x147 = exp(0.34999999999999998 * var_chaste_interface__cell__V);
            const double var_x148 = exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__cell__V);
            const double var_x149 = var_chaste_interface__cell__V < -40.0;
            const double var_x150 = exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__cell__V);
            const double var_x151 = 1.0 + var_x150;
            
            partialF = ((var_x149) ? (-310000.0 * var_x147 - 0.13500000000000001 * var_x148 - 3.5600000000000001 * var_x146) : (-7.6923076923076916 / var_x151));
        }
        else
        {
            const double y_save = rY[3];
            rY[3] += delta;
            const double temp = EvaluateYDerivative3(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[3])/delta;
            rY[3] = y_save;
        }
        return partialF;
    }
    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluateYDerivative4(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: mV; Initial value: -90.7796417483135
        double var_chaste_interface__INa_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.997011204496203
        
        
        // Mathematics
        const double d_dt_chaste_interface_var_INa_j_gate__j = (1.0 - var_chaste_interface__INa_j_gate__j) * ((var_chaste_interface__cell__V < -40.0) ? ((37.780000000000001 + var_chaste_interface__cell__V) * (-127140.0 * exp(0.24399999999999999 * var_chaste_interface__cell__V) - 3.4740000000000003e-5 * exp(-0.043909999999999998 * var_chaste_interface__cell__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__cell__V))) : (0)) - ((var_chaste_interface__cell__V < -40.0) ? (0.1212 * exp(-0.01052 * var_chaste_interface__cell__V) / (1.0 + exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__cell__V))) : (0.29999999999999999 * exp(-2.5349999999999999e-7 * var_chaste_interface__cell__V) / (1.0 + exp(-3.2000000000000002 - 0.10000000000000001 * var_chaste_interface__cell__V)))) * var_chaste_interface__INa_j_gate__j; // 1 / ms

        return d_dt_chaste_interface_var_INa_j_gate__j;
    }

    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluatePartialDerivative4(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: mV; Initial value: -90.7796417483135
            
            const double var_x14 = 0.10000000000000001 * var_chaste_interface__cell__V;
            const double var_x137 = -var_x14;
            const double var_x149 = var_chaste_interface__cell__V < -40.0;
            const double var_x153 = exp(24.640530000000002 + 0.311 * var_chaste_interface__cell__V);
            const double var_x154 = 1.0 + var_x153;
            const double var_x155 = 1 / var_x154;
            const double var_x156 = exp(0.24399999999999999 * var_chaste_interface__cell__V);
            const double var_x157 = exp(-0.043909999999999998 * var_chaste_interface__cell__V);
            const double var_x158 = -127140.0 * var_x156 - 3.4740000000000003e-5 * var_x157;
            const double var_x159 = var_x155 * var_x158;
            const double var_x160 = exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__cell__V);
            const double var_x161 = 1.0 + var_x160;
            const double var_x162 = exp(-0.01052 * var_chaste_interface__cell__V);
            const double var_x163 = var_x162 / var_x161;
            const double var_x164 = 37.780000000000001 + var_chaste_interface__cell__V;
            const double var_x166 = exp(-3.2000000000000002 + var_x137);
            const double var_x167 = 1.0 + var_x166;
            const double var_x168 = exp(-2.5349999999999999e-7 * var_chaste_interface__cell__V);
            const double var_x169 = var_x168 / var_x167;
            
            partialF = ((var_x149) ? (-0.1212 * var_x163 - var_x159 * var_x164) : (-0.29999999999999999 * var_x169));
        }
        else
        {
            const double y_save = rY[4];
            rY[4] += delta;
            const double temp = EvaluateYDerivative4(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[4])/delta;
            rY[4] = y_save;
        }
        return partialF;
    }
    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluateYDerivative5(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: mV; Initial value: -90.7796417483135
        double var_chaste_interface__ICa_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 2.50653215966786e-10
        
        
        // Mathematics
        const double d_dt_chaste_interface_var_ICa_d_gate__d = -(0.14710000000000001 - 0.25101580310038191 * exp(-0.08830693125184777 * pow((-1 + 0.15937778911130945 * var_chaste_interface__cell__V), 2)) / sqrt(M_PI)) * var_chaste_interface__ICa_d_gate__d + 0.63524014987941491 * (1.0 - var_chaste_interface__ICa_d_gate__d) * exp(-0.89836705491478086 * pow((-1 + 0.044722719141323794 * var_chaste_interface__cell__V), 2)) / sqrt(M_PI); // 1 / ms

        return d_dt_chaste_interface_var_ICa_d_gate__d;
    }

    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluatePartialDerivative5(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: mV; Initial value: -90.7796417483135
            
            const double var_x170 = 1 / sqrt(M_PI);
            const double var_x171 = 0.25101580310038191 * var_x170 * exp(-0.08830693125184777 * pow((-1 + 0.15937778911130945 * var_chaste_interface__cell__V), 2));
            const double var_x172 = 0.63524014987941491 * var_x170 * exp(-0.89836705491478086 * pow((-1 + 0.044722719141323794 * var_chaste_interface__cell__V), 2));
            
            partialF = -0.14710000000000001 + var_x171 - var_x172;
        }
        else
        {
            const double y_save = rY[5];
            rY[5] += delta;
            const double temp = EvaluateYDerivative5(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[5])/delta;
            rY[5] = y_save;
        }
        return partialF;
    }
    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluateYDerivative6(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: mV; Initial value: -90.7796417483135
        double var_chaste_interface__ICa_f_gate__f = rY[6];
        // Units: dimensionless; Initial value: 0.92130376850548
        
        
        // Mathematics
        const double d_dt_chaste_interface_var_ICa_f_gate__f = -(0.00054739999999999997 + (0.0112 + 0.068699999999999997 * exp(-1.06213655 - 0.1081 * var_chaste_interface__cell__V)) / (1.0 + exp(-2.7305064499999996 - 0.27789999999999998 * var_chaste_interface__cell__V))) * var_chaste_interface__ICa_f_gate__f + 0.0068719999999999996 * (1.0 - var_chaste_interface__ICa_f_gate__f) / (1.0 + exp(-1.0052757950443461 + 0.16333730787449161 * var_chaste_interface__cell__V)); // 1 / ms

        return d_dt_chaste_interface_var_ICa_f_gate__f;
    }

    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluatePartialDerivative6(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: mV; Initial value: -90.7796417483135
            
            const double var_x173 = exp(-2.7305064499999996 - 0.27789999999999998 * var_chaste_interface__cell__V);
            const double var_x174 = 1.0 + var_x173;
            const double var_x175 = 1 / var_x174;
            const double var_x176 = exp(-1.06213655 - 0.1081 * var_chaste_interface__cell__V);
            const double var_x177 = 0.0112 + 0.068699999999999997 * var_x176;
            const double var_x178 = exp(-1.0052757950443461 + 0.16333730787449161 * var_chaste_interface__cell__V);
            const double var_x179 = 1.0 + var_x178;
            
            partialF = -0.00054739999999999997 - 0.0068719999999999996 / var_x179 - var_x175 * var_x177;
        }
        else
        {
            const double y_save = rY[6];
            rY[6] += delta;
            const double temp = EvaluateYDerivative6(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[6])/delta;
            rY[6] = y_save;
        }
        return partialF;
    }
    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluateYDerivative7(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: mV; Initial value: -90.7796417483135
        double var_chaste_interface__Ito_r_gate__r = rY[7];
        // Units: dimensionless; Initial value: 1.75032478501027e-05
        
        
        // Mathematics
        const double d_dt_chaste_interface_var_Ito_r_gate__r = -(0.51490000000000002 * exp(0.67236288 - 0.13439999999999999 * var_chaste_interface__cell__V) + 5.1860000000000002e-5 * var_chaste_interface__cell__V) * var_chaste_interface__Ito_r_gate__r / (1.0 + exp(6.9907280000000006e-6 - 0.1348 * var_chaste_interface__cell__V)) + 0.52659999999999996 * (1.0 - var_chaste_interface__Ito_r_gate__r) * exp(0.70203392000000009 - 0.0166 * var_chaste_interface__cell__V) / (1.0 + exp(3.9880601600000003 - 0.094299999999999995 * var_chaste_interface__cell__V)); // 1 / ms

        return d_dt_chaste_interface_var_Ito_r_gate__r;
    }

    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluatePartialDerivative7(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: mV; Initial value: -90.7796417483135
            
            const double var_x180 = exp(6.9907280000000006e-6 - 0.1348 * var_chaste_interface__cell__V);
            const double var_x181 = 1.0 + var_x180;
            const double var_x182 = 1 / var_x181;
            const double var_x183 = exp(0.67236288 - 0.13439999999999999 * var_chaste_interface__cell__V);
            const double var_x185 = exp(3.9880601600000003 - 0.094299999999999995 * var_chaste_interface__cell__V);
            const double var_x186 = 1.0 + var_x185;
            const double var_x187 = exp(0.70203392000000009 - 0.0166 * var_chaste_interface__cell__V);
            const double var_x188 = var_x187 / var_x186;
            const double var_x189 = 0.51490000000000002 * var_x183 + 5.1860000000000002e-5 * var_chaste_interface__cell__V;
            
            partialF = -0.52659999999999996 * var_x188 - var_x182 * var_x189;
        }
        else
        {
            const double y_save = rY[7];
            rY[7] += delta;
            const double temp = EvaluateYDerivative7(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[7])/delta;
            rY[7] = y_save;
        }
        return partialF;
    }
    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluateYDerivative8(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: mV; Initial value: -90.7796417483135
        double var_chaste_interface__Ito_t_gate__t = rY[8];
        // Units: dimensionless; Initial value: 0.999897251531651
        
        
        // Mathematics
        const double d_dt_chaste_interface_var_Ito_t_gate__t = (1.0 - var_chaste_interface__Ito_t_gate__t) * (5.6119999999999998e-5 * var_chaste_interface__cell__V + 0.072099999999999997 * exp(-5.9257863000000004 - 0.17299999999999999 * var_chaste_interface__cell__V)) / (1.0 + exp(-5.9326369200000002 - 0.17319999999999999 * var_chaste_interface__cell__V)) - (0.0001215 * var_chaste_interface__cell__V + 0.076700000000000004 * exp(-5.6479010000000002e-8 - 1.6600000000000001e-9 * var_chaste_interface__cell__V)) * var_chaste_interface__Ito_t_gate__t / (1.0 + exp(-5.4573693999999993 - 0.16039999999999999 * var_chaste_interface__cell__V)); // 1 / ms

        return d_dt_chaste_interface_var_Ito_t_gate__t;
    }

    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluatePartialDerivative8(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: mV; Initial value: -90.7796417483135
            
            const double var_x190 = exp(-5.9326369200000002 - 0.17319999999999999 * var_chaste_interface__cell__V);
            const double var_x191 = 1.0 + var_x190;
            const double var_x192 = 1 / var_x191;
            const double var_x194 = exp(-5.9257863000000004 - 0.17299999999999999 * var_chaste_interface__cell__V);
            const double var_x195 = exp(-5.4573693999999993 - 0.16039999999999999 * var_chaste_interface__cell__V);
            const double var_x196 = 1.0 + var_x195;
            const double var_x197 = 1 / var_x196;
            const double var_x198 = exp(-5.6479010000000002e-8 - 1.6600000000000001e-9 * var_chaste_interface__cell__V);
            const double var_x199 = 5.6119999999999998e-5 * var_chaste_interface__cell__V + 0.072099999999999997 * var_x194;
            const double var_x200 = 0.0001215 * var_chaste_interface__cell__V + 0.076700000000000004 * var_x198;
            
            partialF = -var_x192 * var_x199 - var_x197 * var_x200;
        }
        else
        {
            const double y_save = rY[8];
            rY[8] += delta;
            const double temp = EvaluateYDerivative8(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[8])/delta;
            rY[8] = y_save;
        }
        return partialF;
    }
    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluateYDerivative9(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: mV; Initial value: -90.7796417483135
        double var_chaste_interface__IKs_Xs_gate__Xs = rY[9];
        // Units: dimensionless; Initial value: 0.00885658064818147
        
        
        // Mathematics
        const double d_dt_chaste_interface_var_IKs_Xs_gate__Xs = 0.0030130000000000001 * (1.0 - var_chaste_interface__IKs_Xs_gate__Xs) / (1.0 + exp(-0.17842998931347828 - 0.069846547135942336 * var_chaste_interface__cell__V)) - 0.0058700000000000002 * var_chaste_interface__IKs_Xs_gate__Xs / (1.0 + exp(1.0082174462705435 + 0.063211125158027806 * var_chaste_interface__cell__V)); // 1 / ms

        return d_dt_chaste_interface_var_IKs_Xs_gate__Xs;
    }

    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluatePartialDerivative9(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: mV; Initial value: -90.7796417483135
            
            const double var_x201 = exp(-0.17842998931347828 - 0.069846547135942336 * var_chaste_interface__cell__V);
            const double var_x202 = 1.0 + var_x201;
            const double var_x203 = exp(1.0082174462705435 + 0.063211125158027806 * var_chaste_interface__cell__V);
            const double var_x204 = 1.0 + var_x203;
            
            partialF = -0.0058700000000000002 / var_x204 - 0.0030130000000000001 / var_x202;
        }
        else
        {
            const double y_save = rY[9];
            rY[9] += delta;
            const double temp = EvaluateYDerivative9(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[9])/delta;
            rY[9] = y_save;
        }
        return partialF;
    }
    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluateYDerivative10(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: mV; Initial value: -90.7796417483135
        double var_chaste_interface__IKr_Xr_gate__Xr = rY[10];
        // Units: dimensionless; Initial value: 0.000215523048438941
        
        
        // Mathematics
        const double d_dt_chaste_interface_var_IKr_Xr_gate__Xr = 0.0050000000000000001 * (1.0 - var_chaste_interface__IKr_Xr_gate__Xr) * exp(0.0021416822000000003 + 0.00052660000000000001 * var_chaste_interface__cell__V) / (1.0 + exp(-0.51325540000000003 - 0.12620000000000001 * var_chaste_interface__cell__V)) - 0.016 * var_chaste_interface__IKr_Xr_gate__Xr * exp(0.105056 + 0.0016000000000000001 * var_chaste_interface__cell__V) / (1.0 + exp(5.1411779999999991 + 0.078299999999999995 * var_chaste_interface__cell__V)); // 1 / ms

        return d_dt_chaste_interface_var_IKr_Xr_gate__Xr;
    }

    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluatePartialDerivative10(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: mV; Initial value: -90.7796417483135
            
            const double var_x206 = exp(-0.51325540000000003 - 0.12620000000000001 * var_chaste_interface__cell__V);
            const double var_x207 = 1.0 + var_x206;
            const double var_x208 = exp(0.0021416822000000003 + 0.00052660000000000001 * var_chaste_interface__cell__V);
            const double var_x209 = var_x208 / var_x207;
            const double var_x210 = exp(5.1411779999999991 + 0.078299999999999995 * var_chaste_interface__cell__V);
            const double var_x211 = 1.0 + var_x210;
            const double var_x212 = exp(0.105056 + 0.0016000000000000001 * var_chaste_interface__cell__V);
            const double var_x213 = var_x212 / var_x211;
            
            partialF = -0.016 * var_x213 - 0.0050000000000000001 * var_x209;
        }
        else
        {
            const double y_save = rY[10];
            rY[10] += delta;
            const double temp = EvaluateYDerivative10(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[10])/delta;
            rY[10] = y_save;
        }
        return partialF;
    }
    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluateYDerivative11(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: mV; Initial value: -90.7796417483135
        double var_chaste_interface__Ionic_concentrations__Cai = rY[1];
        // Units: mM; Initial value: 0.0002
        double var_chaste_interface__INa_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.000585525582501575
        double var_chaste_interface__INa_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.995865529216237
        double var_chaste_interface__INa_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.997011204496203
        double var_chaste_interface__ICa_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 2.50653215966786e-10
        double var_chaste_interface__ICa_f_gate__f = rY[6];
        // Units: dimensionless; Initial value: 0.92130376850548
        double var_chaste_interface__Ito_r_gate__r = rY[7];
        // Units: dimensionless; Initial value: 1.75032478501027e-05
        double var_chaste_interface__Ito_t_gate__t = rY[8];
        // Units: dimensionless; Initial value: 0.999897251531651
        double var_chaste_interface__IKs_Xs_gate__Xs = rY[9];
        // Units: dimensionless; Initial value: 0.00885658064818147
        double var_chaste_interface__IKr_Xr_gate__Xr = rY[10];
        // Units: dimensionless; Initial value: 0.000215523048438941
        double var_chaste_interface__Irel__APtrack = rY[11];
        // Units: dimensionless; Initial value: -1.372158997089e-136
        double var_chaste_interface__Ionic_concentrations__Nai = rY[18];
        // Units: mM; Initial value: 10.0
        double var_chaste_interface__Ionic_concentrations__Ki = rY[19];
        // Units: mM; Initial value: 140.0
        
        
        // Mathematics
        const double var_ICa__E_Ca = 13.36287874390978 * log(10) * log10(2.0 / var_chaste_interface__Ionic_concentrations__Cai); // mV
        const double var_IK1__E_K1 = 26.725757487819561 * log(10) * log10(4.0 / var_chaste_interface__Ionic_concentrations__Ki); // mV
        const double var_INa__E_Na = 26.725757487819561 * log(10) * log10(138.0 / var_chaste_interface__Ionic_concentrations__Nai); // mV
        const double var_ICa__i_Ca = 0.00059999999999999995 * (-var_ICa__E_Ca + var_chaste_interface__cell__V) * mParameters[0] * var_chaste_interface__ICa_d_gate__d * var_chaste_interface__ICa_f_gate__f / (0.00059999999999999995 + var_chaste_interface__Ionic_concentrations__Cai); // uA_per_uF
        const double var_IKr__i_Kr = (-26.725757487819561 * log(10) * log10(4.0 / var_chaste_interface__Ionic_concentrations__Ki) + var_chaste_interface__cell__V) * mParameters[2] * var_chaste_interface__IKr_Xr_gate__Xr / (1.0 + exp(1.1304347826086956 + 0.043478260869565216 * var_chaste_interface__cell__V)); // uA_per_uF
        const double var_IKs__i_Ks = 0.02 * pow(var_chaste_interface__IKs_Xs_gate__Xs, 2) * (-26.725757487819561 * log(10) * log10(6.5295399999999999 / (0.018329999999999999 * var_chaste_interface__Ionic_concentrations__Nai + var_chaste_interface__Ionic_concentrations__Ki)) + var_chaste_interface__cell__V); // uA_per_uF
        const double var_INa__i_Na = pow(var_chaste_interface__INa_m_gate__m, 3) * (-var_INa__E_Na + var_chaste_interface__cell__V) * mParameters[1] * var_chaste_interface__INa_h_gate__h * var_chaste_interface__INa_j_gate__j; // uA_per_uF
        const double var_cell__failing = 0; // dimensionless
        const double var_ICab__i_b_Ca = (-var_ICa__E_Ca + var_chaste_interface__cell__V) * ((var_cell__failing == 0) ? (0.00084999999999999995) : (0.0012999999999999999)); // uA_per_uF
        const double var_IK1__i_K1 = 0.10000000000000001 * (-var_IK1__E_K1 + var_chaste_interface__cell__V) * ((var_cell__failing == 0) ? (2.5) : (2.0)) / ((1.0 + exp(-12.0 + 0.059999999999999998 * var_chaste_interface__cell__V - 0.059999999999999998 * var_IK1__E_K1)) * (0.10000000000000001 / (1.0 + exp(-12.0 + 0.059999999999999998 * var_chaste_interface__cell__V - 0.059999999999999998 * var_IK1__E_K1)) + (3.0 * exp(0.02 + 0.00020000000000000001 * var_chaste_interface__cell__V - 0.00020000000000000001 * var_IK1__E_K1) + exp(-1.0 + 0.10000000000000001 * var_chaste_interface__cell__V - 0.10000000000000001 * var_IK1__E_K1)) / (1.0 + exp(0.5 * var_IK1__E_K1 - 0.5 * var_chaste_interface__cell__V)))); // uA_per_uF
        const double var_INaCa__i_NaCa = 8.9708471082494193e-8 * (2.0 * pow(var_chaste_interface__Ionic_concentrations__Nai, 3) * exp(0.013095980540851452 * var_chaste_interface__cell__V) - 2628072.0 * var_chaste_interface__Ionic_concentrations__Cai * exp(-0.024321106718724127 * var_chaste_interface__cell__V)) * ((var_cell__failing == 0) ? (1000.0) : (1650.0)) / (1.0 + 0.10000000000000001 * exp(-0.024321106718724127 * var_chaste_interface__cell__V)); // uA_per_uF
        const double var_INaK__i_NaK = 0.72727272727272729 * ((var_cell__failing == 0) ? (1.3) : (0.75)) / ((1.0 + 31.622776601683793 * pow(1 / var_chaste_interface__Ionic_concentrations__Nai, 1.5)) * (1.0 + 0.1245 * exp(-0.0037417087259575582 * var_chaste_interface__cell__V) + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(2.0505200594353643)) * exp(-0.037417087259575585 * var_chaste_interface__cell__V))); // uA_per_uF
        const double var_INab__i_b_Na = (-var_INa__E_Na + var_chaste_interface__cell__V) * ((var_cell__failing == 0) ? (0.001) : (0)); // uA_per_uF
        const double var_Ito__i_to = (-26.725757487819561 * log(10) * log10(9.9339999999999993 / (0.042999999999999997 * var_chaste_interface__Ionic_concentrations__Nai + var_chaste_interface__Ionic_concentrations__Ki)) + var_chaste_interface__cell__V) * ((var_cell__failing == 0) ? (0.29999999999999999) : (0.191)) * var_chaste_interface__Ito_r_gate__r * var_chaste_interface__Ito_t_gate__t; // uA_per_uF
        const double var_cell__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time) / HeartConfig::Instance()->GetCapacitance(); // uA_per_uF
        const double var_cell__dVdt = -1.0 * var_ICa__i_Ca - 1.0 * var_ICab__i_b_Ca - 1.0 * var_IK1__i_K1 - 1.0 * var_IKr__i_Kr - 1.0 * var_IKs__i_Ks - 1.0 * var_INa__i_Na - 1.0 * var_INaCa__i_NaCa - 1.0 * var_INaK__i_NaK - 1.0 * var_INab__i_b_Na - 1.0 * var_Ito__i_to - 1.0 * var_cell__i_Stim; // mV_per_ms
        const double d_dt_chaste_interface_var_Irel__APtrack = ((var_cell__dVdt > 150.0) ? (100.0 - 100.5 * var_chaste_interface__Irel__APtrack) : (-0.5 * var_chaste_interface__Irel__APtrack)); // 1 / ms

        return d_dt_chaste_interface_var_Irel__APtrack;
    }

    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluatePartialDerivative11(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: mV; Initial value: -90.7796417483135
            double var_chaste_interface__Ionic_concentrations__Cai = rY[1];
            // Units: mM; Initial value: 0.0002
            double var_chaste_interface__INa_m_gate__m = rY[2];
            // Units: dimensionless; Initial value: 0.000585525582501575
            double var_chaste_interface__INa_h_gate__h = rY[3];
            // Units: dimensionless; Initial value: 0.995865529216237
            double var_chaste_interface__INa_j_gate__j = rY[4];
            // Units: dimensionless; Initial value: 0.997011204496203
            double var_chaste_interface__ICa_d_gate__d = rY[5];
            // Units: dimensionless; Initial value: 2.50653215966786e-10
            double var_chaste_interface__ICa_f_gate__f = rY[6];
            // Units: dimensionless; Initial value: 0.92130376850548
            double var_chaste_interface__Ito_r_gate__r = rY[7];
            // Units: dimensionless; Initial value: 1.75032478501027e-05
            double var_chaste_interface__Ito_t_gate__t = rY[8];
            // Units: dimensionless; Initial value: 0.999897251531651
            double var_chaste_interface__IKs_Xs_gate__Xs = rY[9];
            // Units: dimensionless; Initial value: 0.00885658064818147
            double var_chaste_interface__IKr_Xr_gate__Xr = rY[10];
            // Units: dimensionless; Initial value: 0.000215523048438941
            double var_chaste_interface__Ionic_concentrations__Nai = rY[18];
            // Units: mM; Initial value: 10.0
            double var_chaste_interface__Ionic_concentrations__Ki = rY[19];
            // Units: mM; Initial value: 140.0
            
            const double var_x0 = pow(var_chaste_interface__IKs_Xs_gate__Xs, 2);
            const double var_x1 = 0.02 * var_x0;
            const double var_x2 = var_chaste_interface__Ito_r_gate__r * var_chaste_interface__Ito_t_gate__t;
            const double var_x3 = 0.29999999999999999 * var_x2;
            const double var_x4 = log(10);
            const double var_x5 = 1 / var_chaste_interface__Ionic_concentrations__Ki;
            const double var_x6 = var_x4 * log10(4.0 * var_x5);
            const double var_x7 = exp(-12.0 + 0.059999999999999998 * var_chaste_interface__cell__V - 1.6035454492691736 * var_x6);
            const double var_x8 = 1.0 + var_x7;
            const double var_x9 = 1 / var_x8;
            const double var_x10 = exp(13.36287874390978 * var_x6 - 0.5 * var_chaste_interface__cell__V);
            const double var_x11 = 1.0 + var_x10;
            const double var_x12 = 1 / var_x11;
            const double var_x13 = exp(0.02 + 0.00020000000000000001 * var_chaste_interface__cell__V - 0.0053451514975639122 * var_x6);
            const double var_x14 = 0.10000000000000001 * var_chaste_interface__cell__V;
            const double var_x15 = exp(-1.0 + var_x14 - 2.6725757487819561 * var_x6);
            const double var_x16 = var_x15 + 3.0 * var_x13;
            const double var_x17 = 0.10000000000000001 * var_x9 + var_x12 * var_x16;
            const double var_x18 = 1 / var_x17;
            const double var_x19 = var_x18 * var_x9;
            const double var_x20 = 0.25 * var_x19;
            const double var_x21 = exp(1.1304347826086956 + 0.043478260869565216 * var_chaste_interface__cell__V);
            const double var_x22 = 1.0 + var_x21;
            const double var_x23 = mParameters[2] / var_x22;
            const double var_x24 = var_x23 * var_chaste_interface__IKr_Xr_gate__Xr;
            const double var_x25 = 1.0 * var_x24;
            const double var_x26 = 1 / var_chaste_interface__Ionic_concentrations__Nai;
            const double var_x27 = pow(var_x26, 1.5);
            const double var_x28 = 1 / (1.0 + 31.622776601683793 * var_x27);
            const double var_x29 = 0.94545454545454544 * var_x28;
            const double var_x30 = exp(-0.0037417087259575582 * var_chaste_interface__cell__V);
            const double var_x31 = exp(2.0505200594353643);
            const double var_x32 = exp(-0.037417087259575585 * var_chaste_interface__cell__V);
            const double var_x33 = 1.0 + 0.1245 * var_x30 + 0.036499999999999998 * var_x32 * (-0.14285714285714285 + 0.14285714285714285 * var_x31);
            const double var_x36 = -26.725757487819561 * var_x6 + var_chaste_interface__cell__V;
            const double var_x39 = pow(var_chaste_interface__INa_m_gate__m, 3);
            const double var_x40 = var_x39 * mParameters[1] * var_chaste_interface__INa_j_gate__j;
            const double var_x41 = var_x40 * var_chaste_interface__INa_h_gate__h;
            const double var_x42 = 1.0 * var_x41;
            const double var_x43 = 0.00059999999999999995 + var_chaste_interface__Ionic_concentrations__Cai;
            const double var_x44 = 1 / var_x43;
            const double var_x45 = var_x44 * mParameters[0] * var_chaste_interface__ICa_f_gate__f;
            const double var_x46 = 0.00059999999999999995 * var_x45;
            const double var_x47 = var_x46 * var_chaste_interface__ICa_d_gate__d;
            const double var_x52 = exp(-0.024321106718724127 * var_chaste_interface__cell__V);
            const double var_x53 = 1.0 + 0.10000000000000001 * var_x52;
            const double var_x54 = 1 / var_x53;
            const double var_x55 = exp(0.013095980540851452 * var_chaste_interface__cell__V);
            const double var_x56 = var_x55 * pow(var_chaste_interface__Ionic_concentrations__Nai, 3);
            const double var_x57 = var_x52 * var_chaste_interface__Ionic_concentrations__Cai;
            const double var_x59 = 2.0 * var_x56 - 2628072.0 * var_x57;
            const double var_x62 = 1 / var_chaste_interface__Ionic_concentrations__Cai;
            const double var_x66 = var_x4 * log10(2.0 * var_x62);
            const double var_x67 = -13.36287874390978 * var_x66 + var_chaste_interface__cell__V;
            const double var_x71 = log10(138.0 * var_x26);
            const double var_x72 = 26.725757487819561 * var_x4;
            const double var_x73 = -var_x71 * var_x72 + var_chaste_interface__cell__V;
            const double var_x79 = 1 / (0.042999999999999997 * var_chaste_interface__Ionic_concentrations__Nai + var_chaste_interface__Ionic_concentrations__Ki);
            const double var_x80 = log10(9.9339999999999993 * var_x79);
            const double var_x83 = 1 / (0.018329999999999999 * var_chaste_interface__Ionic_concentrations__Nai + var_chaste_interface__Ionic_concentrations__Ki);
            const double var_x84 = -var_x72 * log10(6.5295399999999999 * var_x83) + var_chaste_interface__cell__V;
            const double var_x93 = 1 / var_x33;
            const double var_x125 = var_x54 * var_x59;
            const double var_x126 = -0.011358446932323314 * var_x66 + var_x47 * var_x67;
            
            partialF = ((var_x126 + 0.0018500000000000001 * var_chaste_interface__cell__V + 8.9708471082494196e-5 * var_x125 + var_x1 * var_x84 + var_x20 * var_x36 + var_x25 * var_x36 + var_x29 * var_x93 + var_x3 * (-var_x72 * var_x80 + var_chaste_interface__cell__V) + var_x42 * var_x73 + 1.0 * GetIntracellularAreaStimulus(var_chaste_interface__environment__time) / HeartConfig::Instance()->GetCapacitance() - 0.026725757487819562 * var_x4 * var_x71 < -150.0) ? (-100.5) : (-0.5));
        }
        else
        {
            const double y_save = rY[11];
            rY[11] += delta;
            const double temp = EvaluateYDerivative11(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[11])/delta;
            rY[11] = y_save;
        }
        return partialF;
    }
    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluateYDerivative12(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Irel__APtrack = rY[11];
        // Units: dimensionless; Initial value: -1.372158997089e-136
        double var_chaste_interface__Irel__APtrack2 = rY[12];
        // Units: dimensionless; Initial value: -7.58517896402761e-136
        
        
        // Mathematics
        const double d_dt_chaste_interface_var_Irel__APtrack2 = (((var_chaste_interface__Irel__APtrack > 0.17999999999999999) && (var_chaste_interface__Irel__APtrack < 0.20000000000000001)) ? (100.0 - 100.5 * var_chaste_interface__Irel__APtrack2) : (-0.5 * var_chaste_interface__Irel__APtrack2)); // 1 / ms

        return d_dt_chaste_interface_var_Irel__APtrack2;
    }

    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluatePartialDerivative12(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Irel__APtrack = rY[11];
            // Units: dimensionless; Initial value: -1.372158997089e-136
            
            const double var_x214 = (var_chaste_interface__Irel__APtrack > 0.17999999999999999) && (var_chaste_interface__Irel__APtrack < 0.20000000000000001);
            
            partialF = ((var_x214) ? (-100.5) : (-0.5));
        }
        else
        {
            const double y_save = rY[12];
            rY[12] += delta;
            const double temp = EvaluateYDerivative12(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[12])/delta;
            rY[12] = y_save;
        }
        return partialF;
    }
    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluateYDerivative13(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Irel__APtrack = rY[11];
        // Units: dimensionless; Initial value: -1.372158997089e-136
        double var_chaste_interface__Irel__APtrack3 = rY[13];
        // Units: dimensionless; Initial value: 4.82035353592764e-05
        
        
        // Mathematics
        const double d_dt_chaste_interface_var_Irel__APtrack3 = (((var_chaste_interface__Irel__APtrack > 0.17999999999999999) && (var_chaste_interface__Irel__APtrack < 0.20000000000000001)) ? (100.0 - 100.5 * var_chaste_interface__Irel__APtrack3) : (-0.01 * var_chaste_interface__Irel__APtrack3)); // 1 / ms

        return d_dt_chaste_interface_var_Irel__APtrack3;
    }

    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluatePartialDerivative13(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Irel__APtrack = rY[11];
            // Units: dimensionless; Initial value: -1.372158997089e-136
            
            const double var_x214 = (var_chaste_interface__Irel__APtrack > 0.17999999999999999) && (var_chaste_interface__Irel__APtrack < 0.20000000000000001);
            
            partialF = ((var_x214) ? (-100.5) : (-0.01));
        }
        else
        {
            const double y_save = rY[13];
            rY[13] += delta;
            const double temp = EvaluateYDerivative13(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[13])/delta;
            rY[13] = y_save;
        }
        return partialF;
    }
    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluateYDerivative14(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: mV; Initial value: -90.7796417483135
        double var_chaste_interface__Ionic_concentrations__Cai = rY[1];
        // Units: mM; Initial value: 0.0002
        double var_chaste_interface__ICa_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 2.50653215966786e-10
        double var_chaste_interface__ICa_f_gate__f = rY[6];
        // Units: dimensionless; Initial value: 0.92130376850548
        double var_chaste_interface__Irel__APtrack = rY[11];
        // Units: dimensionless; Initial value: -1.372158997089e-136
        double var_chaste_interface__Irel__APtrack2 = rY[12];
        // Units: dimensionless; Initial value: -7.58517896402761e-136
        double var_chaste_interface__Irel__Cainfluxtrack = rY[14];
        // Units: mM; Initial value: -7.71120176147331e-138
        double var_chaste_interface__Ionic_concentrations__Nai = rY[18];
        // Units: mM; Initial value: 10.0
        
        
        // Mathematics
        const double var_Ionic_concentrations__volume = 12100.0 * M_PI; // fL
        const double var_Ionic_concentrations__V_myo = 0.68000000000000005 * var_Ionic_concentrations__volume; // fL
        const double var_ICa__E_Ca = 13.36287874390978 * log(10) * log10(2.0 / var_chaste_interface__Ionic_concentrations__Cai); // mV
        const double var_ICa__i_Ca = 0.00059999999999999995 * (-var_ICa__E_Ca + var_chaste_interface__cell__V) * mParameters[0] * var_chaste_interface__ICa_d_gate__d * var_chaste_interface__ICa_f_gate__f / (0.00059999999999999995 + var_chaste_interface__Ionic_concentrations__Cai); // uA_per_uF
        const double var_cell__failing = 0; // dimensionless
        const double var_ICab__i_b_Ca = (-var_ICa__E_Ca + var_chaste_interface__cell__V) * ((var_cell__failing == 0) ? (0.00084999999999999995) : (0.0012999999999999999)); // uA_per_uF
        const double var_INaCa__i_NaCa = 8.9708471082494193e-8 * (2.0 * pow(var_chaste_interface__Ionic_concentrations__Nai, 3) * exp(0.013095980540851452 * var_chaste_interface__cell__V) - 2628072.0 * var_chaste_interface__Ionic_concentrations__Cai * exp(-0.024321106718724127 * var_chaste_interface__cell__V)) * ((var_cell__failing == 0) ? (1000.0) : (1650.0)) / (1.0 + 0.10000000000000001 * exp(-0.024321106718724127 * var_chaste_interface__cell__V)); // uA_per_uF
        const double d_dt_chaste_interface_var_Irel__Cainfluxtrack = ((var_chaste_interface__Irel__APtrack > 0.20000000000000001) ? (-0.79492821290395466 * (-var_INaCa__i_NaCa + var_ICa__i_Ca + var_ICab__i_b_Ca) / var_Ionic_concentrations__V_myo) : ((var_chaste_interface__Irel__APtrack2 > 0.01) ? (0) : (-0.5 * var_chaste_interface__Irel__Cainfluxtrack))); // mM / ms

        return d_dt_chaste_interface_var_Irel__Cainfluxtrack;
    }

    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluatePartialDerivative14(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Irel__APtrack = rY[11];
            // Units: dimensionless; Initial value: -1.372158997089e-136
            double var_chaste_interface__Irel__APtrack2 = rY[12];
            // Units: dimensionless; Initial value: -7.58517896402761e-136
            
            const double var_x215 = var_chaste_interface__Irel__APtrack > 0.20000000000000001;
            
            partialF = (((var_x215) || (var_chaste_interface__Irel__APtrack2 > 0.01)) ? (0) : (-0.5));
        }
        else
        {
            const double y_save = rY[14];
            rY[14] += delta;
            const double temp = EvaluateYDerivative14(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[14])/delta;
            rY[14] = y_save;
        }
        return partialF;
    }
    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluateYDerivative15(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        
        
        // Mathematics
        const double d_dt_chaste_interface_var_Irel__OVRLDtrack = 0; // 1 / ms

        return d_dt_chaste_interface_var_Irel__OVRLDtrack;
    }

    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluatePartialDerivative15(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            
            
            partialF = 0;
        }
        else
        {
            const double y_save = rY[15];
            rY[15] += delta;
            const double temp = EvaluateYDerivative15(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[15])/delta;
            rY[15] = y_save;
        }
        return partialF;
    }
    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluateYDerivative16(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        
        
        // Mathematics
        const double d_dt_chaste_interface_var_Irel__OVRLDtrack2 = 0; // 1 / ms

        return d_dt_chaste_interface_var_Irel__OVRLDtrack2;
    }

    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluatePartialDerivative16(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            
            
            partialF = 0;
        }
        else
        {
            const double y_save = rY[16];
            rY[16] += delta;
            const double temp = EvaluateYDerivative16(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[16])/delta;
            rY[16] = y_save;
        }
        return partialF;
    }
    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluateYDerivative17(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        
        
        // Mathematics
        const double d_dt_chaste_interface_var_Irel__OVRLDtrack3 = 0; // 1 / ms

        return d_dt_chaste_interface_var_Irel__OVRLDtrack3;
    }

    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluatePartialDerivative17(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            
            
            partialF = 0;
        }
        else
        {
            const double y_save = rY[17];
            rY[17] += delta;
            const double temp = EvaluateYDerivative17(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[17])/delta;
            rY[17] = y_save;
        }
        return partialF;
    }
    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluateYDerivative18(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: mV; Initial value: -90.7796417483135
        double var_chaste_interface__Ionic_concentrations__Cai = rY[1];
        // Units: mM; Initial value: 0.0002
        double var_chaste_interface__INa_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.000585525582501575
        double var_chaste_interface__INa_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.995865529216237
        double var_chaste_interface__INa_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.997011204496203
        double var_chaste_interface__Ionic_concentrations__Nai = rY[18];
        // Units: mM; Initial value: 10.0
        
        
        // Mathematics
        const double var_Ionic_concentrations__volume = 12100.0 * M_PI; // fL
        const double var_Ionic_concentrations__V_myo = 0.68000000000000005 * var_Ionic_concentrations__volume; // fL
        const double var_INa__E_Na = 26.725757487819561 * log(10) * log10(138.0 / var_chaste_interface__Ionic_concentrations__Nai); // mV
        const double var_INa__i_Na = pow(var_chaste_interface__INa_m_gate__m, 3) * (-var_INa__E_Na + var_chaste_interface__cell__V) * mParameters[1] * var_chaste_interface__INa_h_gate__h * var_chaste_interface__INa_j_gate__j; // uA_per_uF
        const double var_cell__failing = 0; // dimensionless
        const double var_INaCa__i_NaCa = 8.9708471082494193e-8 * (2.0 * pow(var_chaste_interface__Ionic_concentrations__Nai, 3) * exp(0.013095980540851452 * var_chaste_interface__cell__V) - 2628072.0 * var_chaste_interface__Ionic_concentrations__Cai * exp(-0.024321106718724127 * var_chaste_interface__cell__V)) * ((var_cell__failing == 0) ? (1000.0) : (1650.0)) / (1.0 + 0.10000000000000001 * exp(-0.024321106718724127 * var_chaste_interface__cell__V)); // uA_per_uF
        const double var_INaK__i_NaK = 0.72727272727272729 * ((var_cell__failing == 0) ? (1.3) : (0.75)) / ((1.0 + 31.622776601683793 * pow(1 / var_chaste_interface__Ionic_concentrations__Nai, 1.5)) * (1.0 + 0.1245 * exp(-0.0037417087259575582 * var_chaste_interface__cell__V) + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(2.0505200594353643)) * exp(-0.037417087259575585 * var_chaste_interface__cell__V))); // uA_per_uF
        const double var_INab__i_b_Na = (-var_INa__E_Na + var_chaste_interface__cell__V) * ((var_cell__failing == 0) ? (0.001) : (0)); // uA_per_uF
        const double d_dt_chaste_interface_var_Ionic_concentrations__Nai = -1.5898564258079093 * (3.0 * var_INaCa__i_NaCa + 3.0 * var_INaK__i_NaK + var_INa__i_Na + var_INab__i_b_Na) / var_Ionic_concentrations__V_myo; // mM / ms

        return d_dt_chaste_interface_var_Ionic_concentrations__Nai;
    }

    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluatePartialDerivative18(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: mV; Initial value: -90.7796417483135
            double var_chaste_interface__INa_m_gate__m = rY[2];
            // Units: dimensionless; Initial value: 0.000585525582501575
            double var_chaste_interface__INa_h_gate__h = rY[3];
            // Units: dimensionless; Initial value: 0.995865529216237
            double var_chaste_interface__INa_j_gate__j = rY[4];
            // Units: dimensionless; Initial value: 0.997011204496203
            double var_chaste_interface__Ionic_concentrations__Nai = rY[18];
            // Units: mM; Initial value: 10.0
            
            const double var_x26 = 1 / var_chaste_interface__Ionic_concentrations__Nai;
            const double var_x27 = pow(var_x26, 1.5);
            const double var_x30 = exp(-0.0037417087259575582 * var_chaste_interface__cell__V);
            const double var_x31 = exp(2.0505200594353643);
            const double var_x32 = exp(-0.037417087259575585 * var_chaste_interface__cell__V);
            const double var_x33 = 1.0 + 0.1245 * var_x30 + 0.036499999999999998 * var_x32 * (-0.14285714285714285 + 0.14285714285714285 * var_x31);
            const double var_x39 = pow(var_chaste_interface__INa_m_gate__m, 3);
            const double var_x40 = var_x39 * mParameters[1] * var_chaste_interface__INa_j_gate__j;
            const double var_x41 = var_x40 * var_chaste_interface__INa_h_gate__h;
            const double var_x52 = exp(-0.024321106718724127 * var_chaste_interface__cell__V);
            const double var_x53 = 1.0 + 0.10000000000000001 * var_x52;
            const double var_x54 = 1 / var_x53;
            const double var_x55 = exp(0.013095980540851452 * var_chaste_interface__cell__V);
            const double var_x87 = 0.026725757487819562 * var_x26;
            const double var_x90 = var_x54 * var_x55 * pow(var_chaste_interface__Ionic_concentrations__Nai, 2);
            const double var_x93 = 1 / var_x33;
            const double var_x94 = var_x26 * var_x27 * var_x93 / pow((0.031622776601683791 + var_x27), 2);
            const double var_x95 = 26.725757487819561 * var_x26 * var_x41;
            const double var_x108 = 1 / M_PI;
            const double var_x217 = 0.00019322513682643524 * var_x108;
            
            partialF = -var_x217 * (var_x87 + var_x95 + 0.0016147524794848955 * var_x90 + 0.13454054045080013 * var_x94);
        }
        else
        {
            const double y_save = rY[18];
            rY[18] += delta;
            const double temp = EvaluateYDerivative18(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[18])/delta;
            rY[18] = y_save;
        }
        return partialF;
    }
    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluateYDerivative19(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: mV; Initial value: -90.7796417483135
        double var_chaste_interface__Ito_r_gate__r = rY[7];
        // Units: dimensionless; Initial value: 1.75032478501027e-05
        double var_chaste_interface__Ito_t_gate__t = rY[8];
        // Units: dimensionless; Initial value: 0.999897251531651
        double var_chaste_interface__IKs_Xs_gate__Xs = rY[9];
        // Units: dimensionless; Initial value: 0.00885658064818147
        double var_chaste_interface__IKr_Xr_gate__Xr = rY[10];
        // Units: dimensionless; Initial value: 0.000215523048438941
        double var_chaste_interface__Ionic_concentrations__Nai = rY[18];
        // Units: mM; Initial value: 10.0
        double var_chaste_interface__Ionic_concentrations__Ki = rY[19];
        // Units: mM; Initial value: 140.0
        
        
        // Mathematics
        const double var_Ionic_concentrations__volume = 12100.0 * M_PI; // fL
        const double var_Ionic_concentrations__V_myo = 0.68000000000000005 * var_Ionic_concentrations__volume; // fL
        const double var_IK1__E_K1 = 26.725757487819561 * log(10) * log10(4.0 / var_chaste_interface__Ionic_concentrations__Ki); // mV
        const double var_IKr__i_Kr = (-26.725757487819561 * log(10) * log10(4.0 / var_chaste_interface__Ionic_concentrations__Ki) + var_chaste_interface__cell__V) * mParameters[2] * var_chaste_interface__IKr_Xr_gate__Xr / (1.0 + exp(1.1304347826086956 + 0.043478260869565216 * var_chaste_interface__cell__V)); // uA_per_uF
        const double var_IKs__i_Ks = 0.02 * pow(var_chaste_interface__IKs_Xs_gate__Xs, 2) * (-26.725757487819561 * log(10) * log10(6.5295399999999999 / (0.018329999999999999 * var_chaste_interface__Ionic_concentrations__Nai + var_chaste_interface__Ionic_concentrations__Ki)) + var_chaste_interface__cell__V); // uA_per_uF
        const double var_cell__failing = 0; // dimensionless
        const double var_IK1__i_K1 = 0.10000000000000001 * (-var_IK1__E_K1 + var_chaste_interface__cell__V) * ((var_cell__failing == 0) ? (2.5) : (2.0)) / ((1.0 + exp(-12.0 + 0.059999999999999998 * var_chaste_interface__cell__V - 0.059999999999999998 * var_IK1__E_K1)) * (0.10000000000000001 / (1.0 + exp(-12.0 + 0.059999999999999998 * var_chaste_interface__cell__V - 0.059999999999999998 * var_IK1__E_K1)) + (3.0 * exp(0.02 + 0.00020000000000000001 * var_chaste_interface__cell__V - 0.00020000000000000001 * var_IK1__E_K1) + exp(-1.0 + 0.10000000000000001 * var_chaste_interface__cell__V - 0.10000000000000001 * var_IK1__E_K1)) / (1.0 + exp(0.5 * var_IK1__E_K1 - 0.5 * var_chaste_interface__cell__V)))); // uA_per_uF
        const double var_INaK__i_NaK = 0.72727272727272729 * ((var_cell__failing == 0) ? (1.3) : (0.75)) / ((1.0 + 31.622776601683793 * pow(1 / var_chaste_interface__Ionic_concentrations__Nai, 1.5)) * (1.0 + 0.1245 * exp(-0.0037417087259575582 * var_chaste_interface__cell__V) + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(2.0505200594353643)) * exp(-0.037417087259575585 * var_chaste_interface__cell__V))); // uA_per_uF
        const double var_Ito__i_to = (-26.725757487819561 * log(10) * log10(9.9339999999999993 / (0.042999999999999997 * var_chaste_interface__Ionic_concentrations__Nai + var_chaste_interface__Ionic_concentrations__Ki)) + var_chaste_interface__cell__V) * ((var_cell__failing == 0) ? (0.29999999999999999) : (0.191)) * var_chaste_interface__Ito_r_gate__r * var_chaste_interface__Ito_t_gate__t; // uA_per_uF
        const double var_cell__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time) / HeartConfig::Instance()->GetCapacitance(); // uA_per_uF
        const double d_dt_chaste_interface_var_Ionic_concentrations__Ki = -1.5898564258079093 * (-2.0 * var_INaK__i_NaK + var_IK1__i_K1 + var_IKr__i_Kr + var_IKs__i_Ks + var_Ito__i_to + var_cell__i_Stim) / var_Ionic_concentrations__V_myo; // mM / ms

        return d_dt_chaste_interface_var_Ionic_concentrations__Ki;
    }

    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluatePartialDerivative19(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: mV; Initial value: -90.7796417483135
            double var_chaste_interface__Ito_r_gate__r = rY[7];
            // Units: dimensionless; Initial value: 1.75032478501027e-05
            double var_chaste_interface__Ito_t_gate__t = rY[8];
            // Units: dimensionless; Initial value: 0.999897251531651
            double var_chaste_interface__IKs_Xs_gate__Xs = rY[9];
            // Units: dimensionless; Initial value: 0.00885658064818147
            double var_chaste_interface__IKr_Xr_gate__Xr = rY[10];
            // Units: dimensionless; Initial value: 0.000215523048438941
            double var_chaste_interface__Ionic_concentrations__Nai = rY[18];
            // Units: mM; Initial value: 10.0
            double var_chaste_interface__Ionic_concentrations__Ki = rY[19];
            // Units: mM; Initial value: 140.0
            
            const double var_x0 = pow(var_chaste_interface__IKs_Xs_gate__Xs, 2);
            const double var_x2 = var_chaste_interface__Ito_r_gate__r * var_chaste_interface__Ito_t_gate__t;
            const double var_x4 = log(10);
            const double var_x5 = 1 / var_chaste_interface__Ionic_concentrations__Ki;
            const double var_x6 = var_x4 * log10(4.0 * var_x5);
            const double var_x7 = exp(-12.0 + 0.059999999999999998 * var_chaste_interface__cell__V - 1.6035454492691736 * var_x6);
            const double var_x8 = 1.0 + var_x7;
            const double var_x9 = 1 / var_x8;
            const double var_x10 = exp(13.36287874390978 * var_x6 - 0.5 * var_chaste_interface__cell__V);
            const double var_x11 = 1.0 + var_x10;
            const double var_x12 = 1 / var_x11;
            const double var_x13 = exp(0.02 + 0.00020000000000000001 * var_chaste_interface__cell__V - 0.0053451514975639122 * var_x6);
            const double var_x14 = 0.10000000000000001 * var_chaste_interface__cell__V;
            const double var_x15 = exp(-1.0 + var_x14 - 2.6725757487819561 * var_x6);
            const double var_x16 = var_x15 + 3.0 * var_x13;
            const double var_x17 = 0.10000000000000001 * var_x9 + var_x12 * var_x16;
            const double var_x18 = 1 / var_x17;
            const double var_x19 = var_x18 * var_x9;
            const double var_x21 = exp(1.1304347826086956 + 0.043478260869565216 * var_chaste_interface__cell__V);
            const double var_x22 = 1.0 + var_x21;
            const double var_x23 = mParameters[2] / var_x22;
            const double var_x24 = var_x23 * var_chaste_interface__IKr_Xr_gate__Xr;
            const double var_x35 = var_x7 / pow(var_x8, 2);
            const double var_x36 = -26.725757487819561 * var_x6 + var_chaste_interface__cell__V;
            const double var_x37 = var_x18 * var_x36;
            const double var_x48 = var_x10 * var_x16 / pow(var_x11, 2);
            const double var_x49 = 0.25 * var_x36 * var_x9 / pow(var_x17, 2);
            const double var_x79 = 1 / (0.042999999999999997 * var_chaste_interface__Ionic_concentrations__Nai + var_chaste_interface__Ionic_concentrations__Ki);
            const double var_x83 = 1 / (0.018329999999999999 * var_chaste_interface__Ionic_concentrations__Nai + var_chaste_interface__Ionic_concentrations__Ki);
            const double var_x88 = var_x0 * var_x83;
            const double var_x91 = var_x2 * var_x79;
            const double var_x96 = 0.53451514975639125 * var_x88;
            const double var_x97 = 6.681439371954891 * var_x19 * var_x5;
            const double var_x98 = 8.0177272463458689 * var_x91;
            const double var_x99 = var_x35 * var_x5;
            const double var_x100 = var_x49 * (0.16035454492691736 * var_x99 - var_x12 * (2.6725757487819561 * var_x15 * var_x5 + 0.016035454492691736 * var_x13 * var_x5) - 13.36287874390978 * var_x48 * var_x5);
            const double var_x101 = 26.725757487819561 * var_x24 * var_x5;
            const double var_x102 = 0.40088636231729341 * var_x37 * var_x99;
            const double var_x108 = 1 / M_PI;
            const double var_x217 = 0.00019322513682643524 * var_x108;
            
            partialF = -var_x217 * (var_x100 + var_x101 + var_x96 + var_x97 + var_x98 - var_x102);
        }
        else
        {
            const double y_save = rY[19];
            rY[19] += delta;
            const double temp = EvaluateYDerivative19(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[19])/delta;
            rY[19] = y_save;
        }
        return partialF;
    }
    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluateYDerivative20(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Ionic_concentrations__Cai = rY[1];
        // Units: mM; Initial value: 0.0002
        double var_chaste_interface__Irel__APtrack2 = rY[12];
        // Units: dimensionless; Initial value: -7.58517896402761e-136
        double var_chaste_interface__Irel__Cainfluxtrack = rY[14];
        // Units: mM; Initial value: -7.71120176147331e-138
        double var_chaste_interface__Ionic_concentrations__Ca_JSR = rY[20];
        // Units: mM; Initial value: 2.5
        double var_chaste_interface__Ionic_concentrations__Ca_NSR = rY[21];
        // Units: mM; Initial value: 2.5
        
        
        // Mathematics
        const double var_Irel__i_rel = (-var_chaste_interface__Ionic_concentrations__Cai + var_chaste_interface__Ionic_concentrations__Ca_JSR) * ((var_chaste_interface__Irel__Cainfluxtrack > 5.0000000000000004e-6) ? (22.0 * (1.0 - var_chaste_interface__Irel__APtrack2) * (-5.0000000000000004e-6 + var_chaste_interface__Irel__Cainfluxtrack) * var_chaste_interface__Irel__APtrack2 / (0.00079500000000000003 + var_chaste_interface__Irel__Cainfluxtrack)) : (0)); // mM_per_ms
        const double var_Itr__i_tr = 0.0055555555555555558 * var_chaste_interface__Ionic_concentrations__Ca_NSR - 0.0055555555555555558 * var_chaste_interface__Ionic_concentrations__Ca_JSR; // mM_per_ms
        const double d_dt_chaste_interface_var_Ionic_concentrations__Ca_JSR = (-var_Irel__i_rel + var_Itr__i_tr) / (1.0 + 8.0 / pow((0.80000000000000004 + var_chaste_interface__Ionic_concentrations__Ca_JSR), 2)); // mM / ms

        return d_dt_chaste_interface_var_Ionic_concentrations__Ca_JSR;
    }

    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluatePartialDerivative20(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Ionic_concentrations__Cai = rY[1];
            // Units: mM; Initial value: 0.0002
            double var_chaste_interface__Irel__APtrack2 = rY[12];
            // Units: dimensionless; Initial value: -7.58517896402761e-136
            double var_chaste_interface__Irel__Cainfluxtrack = rY[14];
            // Units: mM; Initial value: -7.71120176147331e-138
            double var_chaste_interface__Ionic_concentrations__Ca_JSR = rY[20];
            // Units: mM; Initial value: 2.5
            double var_chaste_interface__Ionic_concentrations__Ca_NSR = rY[21];
            // Units: mM; Initial value: 2.5
            
            const double var_x110 = 0.00079500000000000003 + var_chaste_interface__Irel__Cainfluxtrack;
            const double var_x111 = 1 / var_x110;
            const double var_x112 = 1.0 - var_chaste_interface__Irel__APtrack2;
            const double var_x113 = -5.0000000000000004e-6 + var_chaste_interface__Irel__Cainfluxtrack;
            const double var_x114 = 22.0 * var_x111 * var_x112 * var_x113;
            const double var_x115 = var_x114 * var_chaste_interface__Irel__APtrack2;
            const double var_x116 = var_chaste_interface__Irel__Cainfluxtrack > 5.0000000000000004e-6;
            const double var_x123 = -var_chaste_interface__Ionic_concentrations__Cai + var_chaste_interface__Ionic_concentrations__Ca_JSR;
            const double var_x124 = ((var_x116) ? (var_x115 * var_x123) : (0));
            const double var_x135 = ((var_x116) ? (var_x115) : (0));
            const double var_x220 = 0.80000000000000004 + var_chaste_interface__Ionic_concentrations__Ca_JSR;
            const double var_x221 = pow(var_x220, (-2));
            const double var_x222 = 1 / (1.0 + 8.0 * var_x221);
            
            partialF = var_x222 * (-0.0055555555555555558 - var_x135) + 0.25 * (-var_x124 + 0.0055555555555555558 * var_chaste_interface__Ionic_concentrations__Ca_NSR - 0.0055555555555555558 * var_chaste_interface__Ionic_concentrations__Ca_JSR) / (pow(var_x220, 3) * pow((0.125 + var_x221), 2));
        }
        else
        {
            const double y_save = rY[20];
            rY[20] += delta;
            const double temp = EvaluateYDerivative20(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[20])/delta;
            rY[20] = y_save;
        }
        return partialF;
    }
    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluateYDerivative21(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Ionic_concentrations__Cai = rY[1];
        // Units: mM; Initial value: 0.0002
        double var_chaste_interface__Ionic_concentrations__Ca_JSR = rY[20];
        // Units: mM; Initial value: 2.5
        double var_chaste_interface__Ionic_concentrations__Ca_NSR = rY[21];
        // Units: mM; Initial value: 2.5
        
        
        // Mathematics
        const double var_Ionic_concentrations__volume = 12100.0 * M_PI; // fL
        const double var_Ionic_concentrations__V_JSR = 0.0047999999999999996 * var_Ionic_concentrations__volume; // fL
        const double var_Ionic_concentrations__V_NSR = 0.055199999999999999 * var_Ionic_concentrations__volume; // fL
        const double var_Itr__i_tr = 0.0055555555555555558 * var_chaste_interface__Ionic_concentrations__Ca_NSR - 0.0055555555555555558 * var_chaste_interface__Ionic_concentrations__Ca_JSR; // mM_per_ms
        const double var_cell__failing = 0; // dimensionless
        const double var_Ileak__i_leak = ((var_cell__failing == 0) ? (0.00025999999999999998) : (0.00017000000000000001)) * var_chaste_interface__Ionic_concentrations__Ca_NSR; // mM_per_ms
        const double var_Iup__i_up = ((var_cell__failing == 0) ? (0.0044999999999999997) : (0.0015)) * var_chaste_interface__Ionic_concentrations__Cai / (0.00092000000000000003 + var_chaste_interface__Ionic_concentrations__Cai); // mM_per_ms
        const double d_dt_chaste_interface_var_Ionic_concentrations__Ca_NSR = -1.0 * var_Ileak__i_leak - 1.0 * var_Ionic_concentrations__V_JSR * var_Itr__i_tr / var_Ionic_concentrations__V_NSR + var_Iup__i_up; // mM / ms

        return d_dt_chaste_interface_var_Ionic_concentrations__Ca_NSR;
    }

    double Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::EvaluatePartialDerivative21(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            
            
            partialF = -0.00074309178743961349;
        }
        else
        {
            const double y_save = rY[21];
            rY[21] += delta;
            const double temp = EvaluateYDerivative21(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[21])/delta;
            rY[21] = y_save;
        }
        return partialF;
    }

    std::vector<double> Cellpriebe_beuckelmann_model_1998FromCellMLGRL2::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const std::vector<double> & rY)
    {
        // Inputs:
        // Time units: millisecond
        

        // Mathematics
        const double var_cell__i_Stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2

        std::vector<double> dqs(2);
        dqs[0] = var_chaste_interface__environment__time;
        dqs[1] = var_cell__i_Stim_converted;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellpriebe_beuckelmann_model_1998FromCellMLGRL2>::Initialise(void)
{
    this->mSystemName = "priebe_beuckelmann_model_1998";
    this->mFreeVariableName = "environment__time";
    this->mFreeVariableUnits = "ms";

    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("mV");
    this->mInitialConditions.push_back(-90.7796417483135);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.0002);

    // rY[2]:
    this->mVariableNames.push_back("INa_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000585525582501575);

    // rY[3]:
    this->mVariableNames.push_back("INa_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.995865529216237);

    // rY[4]:
    this->mVariableNames.push_back("INa_j_gate__j");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.997011204496203);

    // rY[5]:
    this->mVariableNames.push_back("ICa_d_gate__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.50653215966786e-10);

    // rY[6]:
    this->mVariableNames.push_back("ICa_f_gate__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.92130376850548);

    // rY[7]:
    this->mVariableNames.push_back("Ito_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.75032478501027e-05);

    // rY[8]:
    this->mVariableNames.push_back("Ito_t_gate__t");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999897251531651);

    // rY[9]:
    this->mVariableNames.push_back("IKs_Xs_gate__Xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00885658064818147);

    // rY[10]:
    this->mVariableNames.push_back("IKr_Xr_gate__Xr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000215523048438941);

    // rY[11]:
    this->mVariableNames.push_back("Irel__APtrack");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(-1.372158997089e-136);

    // rY[12]:
    this->mVariableNames.push_back("Irel__APtrack2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(-7.58517896402761e-136);

    // rY[13]:
    this->mVariableNames.push_back("Irel__APtrack3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(4.82035353592764e-05);

    // rY[14]:
    this->mVariableNames.push_back("Irel__Cainfluxtrack");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(-7.71120176147331e-138);

    // rY[15]:
    this->mVariableNames.push_back("Irel__OVRLDtrack");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1e-06);

    // rY[16]:
    this->mVariableNames.push_back("Irel__OVRLDtrack2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1e-06);

    // rY[17]:
    this->mVariableNames.push_back("Irel__OVRLDtrack3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1e-06);

    // rY[18]:
    this->mVariableNames.push_back("Ionic_concentrations__Nai");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(10.0);

    // rY[19]:
    this->mVariableNames.push_back("Ionic_concentrations__Ki");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(140.0);

    // rY[20]:
    this->mVariableNames.push_back("Ionic_concentrations__Ca_JSR");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(2.5);

    // rY[21]:
    this->mVariableNames.push_back("Ionic_concentrations__Ca_NSR");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(2.5);

    // mParameters[0]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("mS_per_uF");

    // mParameters[1]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("mS_per_uF");

    // mParameters[2]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("mS_per_uF");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("environment__time");
    this->mDerivedQuantityUnits.push_back("ms");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellpriebe_beuckelmann_model_1998FromCellMLGRL2)
