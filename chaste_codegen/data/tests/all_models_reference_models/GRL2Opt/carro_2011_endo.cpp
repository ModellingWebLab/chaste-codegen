//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: Carro_Rodriguez_Laguna_Pueyo_CinC2010_EPI
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: GeneralizedRushLarsenSecondOrderOpt)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "carro_2011_endo.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables : public AbstractLookupTableCollection
{
public:
    static Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables);
        }
        return mpInstance.get();
    }

    void FreeMemory()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }

    // Row lookup methods
    // using linear-interpolation

    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<32; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }


    const double * IndexTable0(double var_chaste_interface__membrane__V)
    {
        const double _offset_0 = var_chaste_interface__membrane__V - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }


// LCOV_EXCL_START
    bool CheckIndex0(double& var_chaste_interface__membrane__V)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__membrane__V>mTableMaxs[0] || var_chaste_interface__membrane__V<mTableMins[0])
        {
// LCOV_EXCL_START
            _oob_0 = true;
// LCOV_EXCL_STOP
        }
        return _oob_0;
    }
// LCOV_EXCL_STOP

    ~Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

    }

protected:
    Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables(const Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables&);
    Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables& operator= (const Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables&);
    Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);

        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 32;
        mTableMins[0] = -250.0;
        mTableMaxs[0] = 550.0;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;

        Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::RegenerateTables();
    }

    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);


        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][32];

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(0.010107688547106707 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][0] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-0.027328194960695912 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][1] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + 0.32000000000000001 * exp(-0.027328194960695912 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][2] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-0.037435883507802616 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][3] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.1245 * exp(-0.003743588350780262 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][4] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + exp(7.4880000000000004 - 0.16722408026755853 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][5] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(0.037435883507802616 * var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[6] < 2){
                    double left = _lookup_table_0[i-1][6];
                    double right = _lookup_table_0[i+1][6];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 6 at ["<<i<<"][6] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[6] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[6] >= 2){
                    EXCEPTION("Lookup table 6 at ["<<i<<"][6] has non-finite value: " << val);
                }
                _lookup_table_0[i][6] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = -1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[7] < 2){
                    double left = _lookup_table_0[i-1][7];
                    double right = _lookup_table_0[i+1][7];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 7 at ["<<i<<"][7] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[7] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[7] >= 2){
                    EXCEPTION("Lookup table 7 at ["<<i<<"][7] has non-finite value: " << val);
                }
                _lookup_table_0[i][7] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(0.074871767015605231 * var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[8] < 2){
                    double left = _lookup_table_0[i-1][8];
                    double right = _lookup_table_0[i+1][8];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 8 at ["<<i<<"][8] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[8] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[8] >= 2){
                    EXCEPTION("Lookup table 8 at ["<<i<<"][8] has non-finite value: " << val);
                }
                _lookup_table_0[i][8] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = -1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[9] < 2){
                    double left = _lookup_table_0[i-1][9];
                    double right = _lookup_table_0[i+1][9];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 9 at ["<<i<<"][9] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[9] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[9] >= 2){
                    EXCEPTION("Lookup table 9 at ["<<i<<"][9] has non-finite value: " << val);
                }
                _lookup_table_0[i][9] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + exp(3.0833333333333335 + 0.041666666666666664 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][10] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / pow((1.0 + exp(9.6298788694481825 + 0.13458950201884254 * var_chaste_interface__membrane__V)), 2);

                _lookup_table_0[i][11] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = ((var_chaste_interface__membrane__V >= -40.0) ? (0) : (0.057000000000000002 * exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__membrane__V))) + ((var_chaste_interface__membrane__V >= -40.0) ? (5.9230999999999998 / (1.0 + exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__membrane__V))) : (310000.0 * exp(0.34849999999999998 * var_chaste_interface__membrane__V) + 2.7000000000000002 * exp(0.079000000000000001 * var_chaste_interface__membrane__V)));

                _lookup_table_0[i][12] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = ((var_chaste_interface__membrane__V >= -40.0) ? (0) : ((37.780000000000001 + var_chaste_interface__membrane__V) * (-25428.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__V) - 6.9480000000000002e-6 * exp(-0.043909999999999998 * var_chaste_interface__membrane__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V)))) + ((var_chaste_interface__membrane__V >= -40.0) ? (0.59999999999999998 * exp(0.057000000000000002 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.2000000000000002 - 0.10000000000000001 * var_chaste_interface__membrane__V))) : (0.024240000000000001 * exp(-0.01052 * var_chaste_interface__membrane__V) / (1.0 + exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__membrane__V))));

                _lookup_table_0[i][13] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / pow((1.0 + exp(-6.2967884828349945 - 0.11074197120708749 * var_chaste_interface__membrane__V)), 2);

                _lookup_table_0[i][14] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.12920000000000001 * exp(-8.682389366752302 * pow((1 + 0.021838829438742085 * var_chaste_interface__membrane__V), 2)) + 0.064869999999999997 * exp(-0.0089012876052174655 * pow((-1 + 0.2073398299813394 * var_chaste_interface__membrane__V), 2));

                _lookup_table_0[i][15] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-0.83333333333333337 - 0.16666666666666666 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][16] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(2.5 - 0.050000000000000003 * var_chaste_interface__membrane__V)) + 1.3999999999999999 * (0.25 + 1.3999999999999999 / (1.0 + exp(-2.6923076923076925 - 0.076923076923076927 * var_chaste_interface__membrane__V))) / (1.0 + exp(1.0 + 0.20000000000000001 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][17] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(2.8571428571428572 + 0.14285714285714285 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][18] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 20.0 + 200.0 / (1.0 + exp(1.3 - 0.10000000000000001 * var_chaste_interface__membrane__V)) + 180.0 / (1.0 + exp(3.0 + 0.10000000000000001 * var_chaste_interface__membrane__V)) + 1102.5 * exp(-3.2400000000000002 * pow((1 + 0.037037037037037035 * var_chaste_interface__membrane__V), 2));

                _lookup_table_0[i][19] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.67000000000000004 / (1.0 + exp(5.0 + 0.14285714285714285 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][20] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 16.0 / (1.0 + exp(3.0 + 0.10000000000000001 * var_chaste_interface__membrane__V)) + 31.0 / (1.0 + exp(2.5 - 0.10000000000000001 * var_chaste_interface__membrane__V)) + 300.0 * exp(-3.6764705882352939 * pow((1 + 0.040000000000000001 * var_chaste_interface__membrane__V), 2));

                _lookup_table_0[i][21] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-2.0 - 0.20000000000000001 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][22] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 230.0 / (1.0 + exp(2.0 + 0.050000000000000003 * var_chaste_interface__membrane__V)) + 3300.0 / ((1.0 + exp(1.2222222222222223 + 0.1111111111111111 * var_chaste_interface__membrane__V)) * (1.0 + exp(-2.4444444444444446 - 0.1111111111111111 * var_chaste_interface__membrane__V)));

                _lookup_table_0[i][23] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-0.26666666666666666 - 0.070175438596491224 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][24] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.00100999899000101 + 0.00100999899000101 * exp(-0.17252124645892353 - 0.070821529745042494 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][25] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(1.4615384615384615 - 0.076923076923076927 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][26] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.5 + 8.5 * exp(-0.81000000000000005 * pow((1 + 0.022222222222222223 * var_chaste_interface__membrane__V), 2));

                _lookup_table_0[i][27] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.5 + 9.0 / (1.0 + exp(0.20000000000000001 + 0.066666666666666666 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][28] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(3.8999999999999999 + 0.20000000000000001 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][29] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 7.0 + 85.0 * exp(-7.2727272727272725 * pow((1 + 0.025000000000000001 * var_chaste_interface__membrane__V), 2));

                _lookup_table_0[i][30] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 30.0 + 800.0 / (1.0 + exp(6.0 + 0.10000000000000001 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][31] = val;
            }

            mNeedsRegeneration[0] = false;
        }

        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }

private:
    /** The single instance of the class */
    static std::shared_ptr<Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[32];

    // Lookup tables
    double (*_lookup_table_0)[32];
    int _lookup_table_0_num_misshit_piecewise[32] = {0};

};

std::shared_ptr<Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables> Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::mpInstance;

    boost::shared_ptr<RegularStimulus> Cellcarro_2011_endoFromCellMLGRL2Opt::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__I_Stim_Amplitude_converted = 40.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        const double var_chaste_interface__membrane__I_Stim_Period = 1000.0; // millisecond
        const double var_chaste_interface__membrane__I_Stim_PulseDuration = 1.0; // millisecond
        const double var_chaste_interface__membrane__I_Stim_Start = 0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__I_Stim_Amplitude_converted),
                var_chaste_interface__membrane__I_Stim_PulseDuration,
                var_chaste_interface__membrane__I_Stim_Period,
                var_chaste_interface__membrane__I_Stim_Start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    Cellcarro_2011_endoFromCellMLGRL2Opt::Cellcarro_2011_endoFromCellMLGRL2Opt(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractGeneralizedRushLarsenCardiacCell(
                39,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellcarro_2011_endoFromCellMLGRL2Opt>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        
        this->mParameters[0] = 0.0053114; // (var_SR_Fluxes__V_max_SR_CaP) [milliM_per_millis]
        this->mParameters[1] = 138.0; // (var_Potassium_Concentrations__K_i) [millimolar]
        this->mParameters[2] = 1.8; // (var_Calcium_Concentrations__Ca_o) [millimolar]
        this->mParameters[3] = 5.4000000000000004; // (var_Potassium_Concentrations__K_o) [millimolar]
        this->mParameters[4] = 140.0; // (var_Sodium_Concentrations__Na_o) [millimolar]
        this->mParameters[5] = 1.0; // (var_L_Type_Calcium_Current__P_scale) [dimensionless]
        this->mParameters[6] = 1.3809999999999999e-10; // (var_membrane__C_mem) [farad]
        this->mParameters[7] = 18.859999999999999; // (var_Fast_Na_Current__G_Na) [milliS_per_microF]
        this->mParameters[8] = 0.0014040000000000001; // (var_Transient_Outward_K_Current__G_to_f) [milliS_per_microF]
        this->mParameters[9] = 0.57152999999999998; // (var_Inward_Rectifier_K_Current__G_K1) [milliS_per_microF]
        this->mParameters[10] = 0.035000000000000003; // (var_Rapidly_Activating_K_Current__G_Kr) [milliS_per_microF]
        this->mParameters[11] = 0.0035000000000000001; // (var_Slowly_Activating_K_Current__G_Ks) [milliS_per_microF]
        this->mParameters[12] = 0.037595999999999997; // (var_Transient_Outward_K_Current__G_to_s) [milliS_per_microF]
        this->mParameters[13] = 4.5; // (var_Na_Ca_Exchanger_Current__Ibar_NCX) [picoA_per_picoF]
        this->mParameters[14] = 0.98999999999999999; // (var_Na_K_Pump_Current__Ibar_NaK) [picoA_per_picoF]
    }

    Cellcarro_2011_endoFromCellMLGRL2Opt::~Cellcarro_2011_endoFromCellMLGRL2Opt()
    {
    }

    AbstractLookupTableCollection* Cellcarro_2011_endoFromCellMLGRL2Opt::GetLookupTableCollection()
    {
        return Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance();
    }
    
    double Cellcarro_2011_endoFromCellMLGRL2Opt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -84.10546
        double var_chaste_interface__Fast_Na_Current__m = rY[2];
        // Units: dimensionless; Initial value: 0.002176608
        double var_chaste_interface__Fast_Na_Current__h = rY[3];
        // Units: dimensionless; Initial value: 0.7126555
        double var_chaste_interface__Fast_Na_Current__j = rY[4];
        // Units: dimensionless; Initial value: 0.7119893
        double var_chaste_interface__Rapidly_Activating_K_Current__x_Kr = rY[5];
        // Units: dimensionless; Initial value: 0.01896559
        double var_chaste_interface__Slowly_Activating_K_Current__x_Ks = rY[6];
        // Units: dimensionless; Initial value: 0.00355636
        double var_chaste_interface__Transient_Outward_K_Current__x_to_s = rY[7];
        // Units: dimensionless; Initial value: 0.0003592503
        double var_chaste_interface__Transient_Outward_K_Current__y_to_s = rY[8];
        // Units: dimensionless; Initial value: 0.8161309
        double var_chaste_interface__Transient_Outward_K_Current__x_to_f = rY[9];
        // Units: dimensionless; Initial value: 0.0003592405
        double var_chaste_interface__Transient_Outward_K_Current__y_to_f = rY[10];
        // Units: dimensionless; Initial value: 0.9999976
        double var_chaste_interface__L_Type_Calcium_Current__d = rY[11];
        // Units: dimensionless; Initial value: 1.879996e-06
        double var_chaste_interface__L_Type_Calcium_Current__f = rY[12];
        // Units: dimensionless; Initial value: 0.9789409
        double var_chaste_interface__L_Type_Calcium_Current__f_2 = rY[13];
        // Units: dimensionless; Initial value: 0.9993986
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j = rY[14];
        // Units: dimensionless; Initial value: 0.02861794
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl = rY[15];
        // Units: dimensionless; Initial value: 0.0169833
        double var_chaste_interface__Sodium_Concentrations__Na_j = rY[30];
        // Units: millimolar; Initial value: 10.0211
        double var_chaste_interface__Sodium_Concentrations__Na_sl = rY[31];
        // Units: millimolar; Initial value: 10.01974
        double var_chaste_interface__Sodium_Concentrations__Na_i = rY[32];
        // Units: millimolar; Initial value: 10.01989
        double var_chaste_interface__Calcium_Concentrations__Ca_j = rY[35];
        // Units: millimolar; Initial value: 0.0002048633
        double var_chaste_interface__Calcium_Concentrations__Ca_sl = rY[36];
        // Units: millimolar; Initial value: 0.0001188246
        
        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        const double var_Nerst_Potentials__E_K = 26.712338705498265 * log(mParameters[3] / mParameters[1]); // millivolt
        const double var_Nerst_Potentials__E_Ks = 26.712338705498265 * log((0.018329999999999999 * mParameters[4] + mParameters[3]) / (0.018329999999999999 * var_chaste_interface__Sodium_Concentrations__Na_i + mParameters[1])); // millivolt
        const double var_Nerst_Potentials__E_Na_junc = 26.712338705498265 * log(mParameters[4] / var_chaste_interface__Sodium_Concentrations__Na_j); // millivolt
        const double var_Nerst_Potentials__E_Na_sl = 26.712338705498265 * log(mParameters[4] / var_chaste_interface__Sodium_Concentrations__Na_sl); // millivolt
        const double var_Na_Ca_Exchanger_Current__I_ncx_junc = 0.11 * (pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) * mParameters[2] * _lt_0_row[0] - pow(mParameters[4], 3) * var_chaste_interface__Calcium_Concentrations__Ca_j * _lt_0_row[1]) * mParameters[13] / ((_lt_0_row[2]) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2)) * (1.3 * pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) + pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) * mParameters[2] + pow(mParameters[4], 3) * var_chaste_interface__Calcium_Concentrations__Ca_j + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Calcium_Concentrations__Ca_j) * var_chaste_interface__Calcium_Concentrations__Ca_j + 0.0035899999999999999 * pow(mParameters[4], 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3)))); // picoA_per_picoF
        const double var_Na_Ca_Exchanger_Current__I_ncx_sl = 0.89000000000000001 * (pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) * mParameters[2] * _lt_0_row[0] - pow(mParameters[4], 3) * var_chaste_interface__Calcium_Concentrations__Ca_sl * _lt_0_row[1]) * mParameters[13] / ((_lt_0_row[2]) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 2)) * (1.3 * pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) + pow(mParameters[4], 3) * var_chaste_interface__Calcium_Concentrations__Ca_sl + pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) * mParameters[2] + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Calcium_Concentrations__Ca_sl) * var_chaste_interface__Calcium_Concentrations__Ca_sl + 0.0035899999999999999 * pow(mParameters[4], 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3)))); // picoA_per_picoF
        const double var_Na_K_Pump_Current__f_NaK = 1 / (1.0 + _lt_0_row[4] + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * mParameters[4])) * _lt_0_row[3]); // dimensionless
        const double var_Na_K_Pump_Current__I_NaK_junc = 0.11 * mParameters[14] * var_Na_K_Pump_Current__f_NaK * mParameters[3] / ((1.0 + 14641.0 / pow(var_chaste_interface__Sodium_Concentrations__Na_j, 4)) * (1.5 + mParameters[3])); // picoA_per_picoF
        const double var_Na_K_Pump_Current__I_NaK_sl = 0.89000000000000001 * mParameters[14] * var_Na_K_Pump_Current__f_NaK * mParameters[3] / ((1.0 + 14641.0 / pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 4)) * (1.5 + mParameters[3])); // picoA_per_picoF
        const double var_membrane__I_tot = 0.5535668961205934 + var_Na_Ca_Exchanger_Current__I_ncx_junc + var_Na_Ca_Exchanger_Current__I_ncx_sl + var_Na_K_Pump_Current__I_NaK_junc + var_Na_K_Pump_Current__I_NaK_sl + 0.010148299999999999 * var_chaste_interface__membrane__V - 6.567e-5 * var_Nerst_Potentials__E_Na_junc - 0.00053133 * var_Nerst_Potentials__E_Na_sl - 0.00080995817805876559 * log(mParameters[2] / var_chaste_interface__Calcium_Concentrations__Ca_j) - 0.0065532979861118307 * log(mParameters[2] / var_chaste_interface__Calcium_Concentrations__Ca_sl) + 0.002 * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) / (_lt_0_row[5]) + 0.048783569999999998 * (61.507432902288166 + var_chaste_interface__membrane__V) / (1.0 + 0.10000000000000001 / var_chaste_interface__Calcium_Concentrations__Ca_sl) + 0.0074029999999999999 * pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 1.6000000000000001) / (5.2281977629563632e-6 + pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 1.6000000000000001)) + 0.0060294299999999997 * (61.507432902288166 + var_chaste_interface__membrane__V) / (1.0 + 0.10000000000000001 / var_chaste_interface__Calcium_Concentrations__Ca_j) + 0.059896999999999999 * pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 1.6000000000000001) / (5.2281977629563632e-6 + pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 1.6000000000000001)) + pow(var_chaste_interface__Slowly_Activating_K_Current__x_Ks, 2) * (-var_Nerst_Potentials__E_Ks + var_chaste_interface__membrane__V) * mParameters[11] + (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * mParameters[8] * var_chaste_interface__Transient_Outward_K_Current__x_to_f * var_chaste_interface__Transient_Outward_K_Current__y_to_f + (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * mParameters[12] * var_chaste_interface__Transient_Outward_K_Current__x_to_s * var_chaste_interface__Transient_Outward_K_Current__y_to_s + (1.0 - 0.099999999999999978 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl - 0.90000000000000002 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (5.2753173749999997e-10 * (-mParameters[3] + mParameters[1] * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 5.2753173749999997e-10 * (-mParameters[3] + mParameters[1] * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 5.2753173749999997e-10 * (-mParameters[3] + mParameters[1] * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.00019748616671718709 * (-mParameters[3] + mParameters[1] * _lt_0_row[6]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[7]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 + 0.099999999999999978 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_sl * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_sl * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_sl * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (1.0971453706510394e-5 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_sl * _lt_0_row[6]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[7]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 + 0.099999999999999978 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_sl * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.71831868267118426 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_sl * _lt_0_row[8]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[9]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 + 0.11 * pow(var_chaste_interface__Fast_Na_Current__m, 3) * (-var_Nerst_Potentials__E_Na_junc + var_chaste_interface__membrane__V) * mParameters[7] * var_chaste_interface__Fast_Na_Current__h * var_chaste_interface__Fast_Na_Current__j + 0.90000000000000002 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_j * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_j * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_j * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (1.0971453706510394e-5 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_j * _lt_0_row[6]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[7]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 + 0.90000000000000002 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_j * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.71831868267118426 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_j * _lt_0_row[8]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[9]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 + 0.43033148291193518 * sqrt(mParameters[3]) * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * mParameters[10] * var_chaste_interface__Rapidly_Activating_K_Current__x_Kr / (_lt_0_row[10]) + 0.89000000000000001 * pow(var_chaste_interface__Fast_Na_Current__m, 3) * (-var_Nerst_Potentials__E_Na_sl + var_chaste_interface__membrane__V) * mParameters[7] * var_chaste_interface__Fast_Na_Current__h * var_chaste_interface__Fast_Na_Current__j + 1.7616910247448803 * sqrt(mParameters[3]) * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * mParameters[9] / ((1.0 + exp(-6.0745197599999994 + 0.12164999999999999 * var_chaste_interface__membrane__V - 0.12164999999999999 * var_Nerst_Potentials__E_K)) * (4.0937999999999999 / (1.0 + exp(-6.0745197599999994 + 0.12164999999999999 * var_chaste_interface__membrane__V - 0.12164999999999999 * var_Nerst_Potentials__E_K)) + (15.7197 * exp(-0.21949596900000001 + 0.067390000000000005 * var_chaste_interface__membrane__V - 0.067390000000000005 * var_Nerst_Potentials__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_Nerst_Potentials__E_K)) / (1.0 + exp(-2.3135610949999998 + 0.16284999999999999 * var_Nerst_Potentials__E_K - 0.16284999999999999 * var_chaste_interface__membrane__V)))); // picoA_per_picoF
        const double var_chaste_interface__i_ionic = HeartConfig::Instance()->GetCapacitance() * var_membrane__I_tot; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellcarro_2011_endoFromCellMLGRL2Opt::UpdateTransmembranePotential(double var_chaste_interface__environment__t)
    {
        std::vector<double>& rY = rGetStateVariables();
        const unsigned v_index = GetVoltageIndex();
        const double delta = 1e-8;
        const double yinit = rY[v_index];

        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -84.10546
        double var_chaste_interface__Fast_Na_Current__m = rY[2];
        // Units: dimensionless; Initial value: 0.002176608
        double var_chaste_interface__Fast_Na_Current__h = rY[3];
        // Units: dimensionless; Initial value: 0.7126555
        double var_chaste_interface__Fast_Na_Current__j = rY[4];
        // Units: dimensionless; Initial value: 0.7119893
        double var_chaste_interface__Rapidly_Activating_K_Current__x_Kr = rY[5];
        // Units: dimensionless; Initial value: 0.01896559
        double var_chaste_interface__Slowly_Activating_K_Current__x_Ks = rY[6];
        // Units: dimensionless; Initial value: 0.00355636
        double var_chaste_interface__Transient_Outward_K_Current__x_to_s = rY[7];
        // Units: dimensionless; Initial value: 0.0003592503
        double var_chaste_interface__Transient_Outward_K_Current__y_to_s = rY[8];
        // Units: dimensionless; Initial value: 0.8161309
        double var_chaste_interface__Transient_Outward_K_Current__x_to_f = rY[9];
        // Units: dimensionless; Initial value: 0.0003592405
        double var_chaste_interface__Transient_Outward_K_Current__y_to_f = rY[10];
        // Units: dimensionless; Initial value: 0.9999976
        double var_chaste_interface__L_Type_Calcium_Current__d = rY[11];
        // Units: dimensionless; Initial value: 1.879996e-06
        double var_chaste_interface__L_Type_Calcium_Current__f = rY[12];
        // Units: dimensionless; Initial value: 0.9789409
        double var_chaste_interface__L_Type_Calcium_Current__f_2 = rY[13];
        // Units: dimensionless; Initial value: 0.9993986
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j = rY[14];
        // Units: dimensionless; Initial value: 0.02861794
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl = rY[15];
        // Units: dimensionless; Initial value: 0.0169833
        double var_chaste_interface__Sodium_Concentrations__Na_j = rY[30];
        // Units: millimolar; Initial value: 10.0211
        double var_chaste_interface__Sodium_Concentrations__Na_sl = rY[31];
        // Units: millimolar; Initial value: 10.01974
        double var_chaste_interface__Sodium_Concentrations__Na_i = rY[32];
        // Units: millimolar; Initial value: 10.01989
        double var_chaste_interface__Calcium_Concentrations__Ca_j = rY[35];
        // Units: millimolar; Initial value: 0.0002048633
        double var_chaste_interface__Calcium_Concentrations__Ca_sl = rY[36];
        // Units: millimolar; Initial value: 0.0001188246
        

        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        double d_dt_chaste_interface_var_membrane__V;
        const double var_Nerst_Potentials__E_K = 26.712338705498265 * log(mParameters[3] / mParameters[1]); // millivolt
        const double var_Nerst_Potentials__E_Ks = 26.712338705498265 * log((0.018329999999999999 * mParameters[4] + mParameters[3]) / (0.018329999999999999 * var_chaste_interface__Sodium_Concentrations__Na_i + mParameters[1])); // millivolt
        const double var_Nerst_Potentials__E_Na_junc = 26.712338705498265 * log(mParameters[4] / var_chaste_interface__Sodium_Concentrations__Na_j); // millivolt
        const double var_Nerst_Potentials__E_Na_sl = 26.712338705498265 * log(mParameters[4] / var_chaste_interface__Sodium_Concentrations__Na_sl); // millivolt
        const double var_Na_Ca_Exchanger_Current__I_ncx_junc = 0.11 * (pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) * mParameters[2] * _lt_0_row[0] - pow(mParameters[4], 3) * var_chaste_interface__Calcium_Concentrations__Ca_j * _lt_0_row[1]) * mParameters[13] / ((_lt_0_row[2]) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2)) * (1.3 * pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) + pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) * mParameters[2] + pow(mParameters[4], 3) * var_chaste_interface__Calcium_Concentrations__Ca_j + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Calcium_Concentrations__Ca_j) * var_chaste_interface__Calcium_Concentrations__Ca_j + 0.0035899999999999999 * pow(mParameters[4], 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3)))); // picoA_per_picoF
        const double var_Calcium_Concentrations__I_Ca_tot_junc = 6.0643000000000002e-5 * var_chaste_interface__membrane__V - 2.0 * var_Na_Ca_Exchanger_Current__I_ncx_junc - 0.00080995817805876559 * log(mParameters[2] / var_chaste_interface__Calcium_Concentrations__Ca_j) + 0.0074029999999999999 * pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 1.6000000000000001) / (5.2281977629563632e-6 + pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 1.6000000000000001)) + 0.90000000000000002 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_j * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.71831868267118426 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_j * _lt_0_row[8]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[9]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2; // picoA_per_picoF
        const double var_Na_Ca_Exchanger_Current__I_ncx_sl = 0.89000000000000001 * (pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) * mParameters[2] * _lt_0_row[0] - pow(mParameters[4], 3) * var_chaste_interface__Calcium_Concentrations__Ca_sl * _lt_0_row[1]) * mParameters[13] / ((_lt_0_row[2]) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 2)) * (1.3 * pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) + pow(mParameters[4], 3) * var_chaste_interface__Calcium_Concentrations__Ca_sl + pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) * mParameters[2] + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Calcium_Concentrations__Ca_sl) * var_chaste_interface__Calcium_Concentrations__Ca_sl + 0.0035899999999999999 * pow(mParameters[4], 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3)))); // picoA_per_picoF
        const double var_Calcium_Concentrations__I_Ca_tot_sl = 0.00049065700000000003 * var_chaste_interface__membrane__V - 2.0 * var_Na_Ca_Exchanger_Current__I_ncx_sl - 0.0065532979861118307 * log(mParameters[2] / var_chaste_interface__Calcium_Concentrations__Ca_sl) + 0.059896999999999999 * pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 1.6000000000000001) / (5.2281977629563632e-6 + pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 1.6000000000000001)) + 0.099999999999999978 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_sl * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.71831868267118426 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_sl * _lt_0_row[8]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[9]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2; // picoA_per_picoF
        const double var_Na_K_Pump_Current__f_NaK = 1 / (1.0 + _lt_0_row[4] + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * mParameters[4])) * _lt_0_row[3]); // dimensionless
        const double var_Na_K_Pump_Current__I_NaK_junc = 0.11 * mParameters[14] * var_Na_K_Pump_Current__f_NaK * mParameters[3] / ((1.0 + 14641.0 / pow(var_chaste_interface__Sodium_Concentrations__Na_j, 4)) * (1.5 + mParameters[3])); // picoA_per_picoF
        const double var_Na_K_Pump_Current__I_NaK_sl = 0.89000000000000001 * mParameters[14] * var_Na_K_Pump_Current__f_NaK * mParameters[3] / ((1.0 + 14641.0 / pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 4)) * (1.5 + mParameters[3])); // picoA_per_picoF
        const double var_Sodium_Concentrations__I_Na_tot_junc = 3.0 * var_Na_Ca_Exchanger_Current__I_ncx_junc + 3.0 * var_Na_K_Pump_Current__I_NaK_junc + 6.567e-5 * var_chaste_interface__membrane__V - 6.567e-5 * var_Nerst_Potentials__E_Na_junc + 0.11 * pow(var_chaste_interface__Fast_Na_Current__m, 3) * (-var_Nerst_Potentials__E_Na_junc + var_chaste_interface__membrane__V) * mParameters[7] * var_chaste_interface__Fast_Na_Current__h * var_chaste_interface__Fast_Na_Current__j + 0.90000000000000002 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_j * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_j * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_j * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (1.0971453706510394e-5 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_j * _lt_0_row[6]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[7]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2; // picoA_per_picoF
        const double var_Sodium_Concentrations__I_Na_tot_sl = 3.0 * var_Na_Ca_Exchanger_Current__I_ncx_sl + 3.0 * var_Na_K_Pump_Current__I_NaK_sl + 0.00053133 * var_chaste_interface__membrane__V - 0.00053133 * var_Nerst_Potentials__E_Na_sl + 0.099999999999999978 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_sl * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_sl * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_sl * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (1.0971453706510394e-5 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_sl * _lt_0_row[6]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[7]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 + 0.89000000000000001 * pow(var_chaste_interface__Fast_Na_Current__m, 3) * (-var_Nerst_Potentials__E_Na_sl + var_chaste_interface__membrane__V) * mParameters[7] * var_chaste_interface__Fast_Na_Current__h * var_chaste_interface__Fast_Na_Current__j; // picoA_per_picoF
        d_dt_chaste_interface_var_membrane__V = -0.5535668961205934 - var_Calcium_Concentrations__I_Ca_tot_junc - var_Calcium_Concentrations__I_Ca_tot_sl - var_Sodium_Concentrations__I_Na_tot_junc - var_Sodium_Concentrations__I_Na_tot_sl + 2.0 * var_Na_K_Pump_Current__I_NaK_junc + 2.0 * var_Na_K_Pump_Current__I_NaK_sl - 0.0089999999999999993 * var_chaste_interface__membrane__V - GetIntracellularAreaStimulus(var_chaste_interface__environment__t) / HeartConfig::Instance()->GetCapacitance() - 0.002 * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) / (_lt_0_row[5]) - 0.048783569999999998 * (61.507432902288166 + var_chaste_interface__membrane__V) / (1.0 + 0.10000000000000001 / var_chaste_interface__Calcium_Concentrations__Ca_sl) - 0.0060294299999999997 * (61.507432902288166 + var_chaste_interface__membrane__V) / (1.0 + 0.10000000000000001 / var_chaste_interface__Calcium_Concentrations__Ca_j) - pow(var_chaste_interface__Slowly_Activating_K_Current__x_Ks, 2) * (-var_Nerst_Potentials__E_Ks + var_chaste_interface__membrane__V) * mParameters[11] - (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * mParameters[8] * var_chaste_interface__Transient_Outward_K_Current__x_to_f * var_chaste_interface__Transient_Outward_K_Current__y_to_f - (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * mParameters[12] * var_chaste_interface__Transient_Outward_K_Current__x_to_s * var_chaste_interface__Transient_Outward_K_Current__y_to_s - (1.0 - 0.099999999999999978 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl - 0.90000000000000002 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (5.2753173749999997e-10 * (-mParameters[3] + mParameters[1] * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 5.2753173749999997e-10 * (-mParameters[3] + mParameters[1] * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 5.2753173749999997e-10 * (-mParameters[3] + mParameters[1] * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.00019748616671718709 * (-mParameters[3] + mParameters[1] * _lt_0_row[6]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[7]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 - 0.43033148291193518 * sqrt(mParameters[3]) * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * mParameters[10] * var_chaste_interface__Rapidly_Activating_K_Current__x_Kr / (_lt_0_row[10]) - 1.7616910247448803 * sqrt(mParameters[3]) * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * mParameters[9] / ((1.0 + exp(-6.0745197599999994 + 0.12164999999999999 * var_chaste_interface__membrane__V - 0.12164999999999999 * var_Nerst_Potentials__E_K)) * (4.0937999999999999 / (1.0 + exp(-6.0745197599999994 + 0.12164999999999999 * var_chaste_interface__membrane__V - 0.12164999999999999 * var_Nerst_Potentials__E_K)) + (15.7197 * exp(-0.21949596900000001 + 0.067390000000000005 * var_chaste_interface__membrane__V - 0.067390000000000005 * var_Nerst_Potentials__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_Nerst_Potentials__E_K)) / (1.0 + exp(-2.3135610949999998 + 0.16284999999999999 * var_Nerst_Potentials__E_K - 0.16284999999999999 * var_chaste_interface__membrane__V)))); // millivolt / millisecond

        double evalF = d_dt_chaste_interface_var_membrane__V;
        mEvalF[0] = d_dt_chaste_interface_var_membrane__V;
        double partialF = EvaluatePartialDerivative0(var_chaste_interface__environment__t, rY, delta, true);
        if (fabs(partialF) < delta)
        {
            rY[v_index] += 0.5*evalF*mDt;
        }
        else
        {
            rY[v_index] += (evalF/partialF)*(exp(partialF*0.5*mDt)-1.0);
        }

        rY[v_index] = yinit;
        evalF = EvaluateYDerivative0(var_chaste_interface__environment__t, rY);
        mEvalF[0] = evalF;
        partialF = EvaluatePartialDerivative0(var_chaste_interface__environment__t, rY, delta, true);
        if (fabs(partialF) < delta)
        {
            rY[v_index] = yinit + evalF*mDt;
        }
        else
        {
            rY[v_index] = yinit + (evalF/partialF)*(exp(partialF*mDt)-1.0);
        }
    }

    void Cellcarro_2011_endoFromCellMLGRL2Opt::ComputeOneStepExceptVoltage(double var_chaste_interface__environment__t)
    {
        std::vector<double>& rY = rGetStateVariables();
        const double delta=1e-8;
        const unsigned size = GetNumberOfStateVariables();
        mYInit = rY;
        double y_save;

        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -84.10546
        double var_chaste_interface__Calcium_Concentrations__Ca_i = rY[1];
        // Units: millimolar; Initial value: 9.719632e-05
        double var_chaste_interface__Fast_Na_Current__m = rY[2];
        // Units: dimensionless; Initial value: 0.002176608
        double var_chaste_interface__Fast_Na_Current__h = rY[3];
        // Units: dimensionless; Initial value: 0.7126555
        double var_chaste_interface__Fast_Na_Current__j = rY[4];
        // Units: dimensionless; Initial value: 0.7119893
        double var_chaste_interface__Rapidly_Activating_K_Current__x_Kr = rY[5];
        // Units: dimensionless; Initial value: 0.01896559
        double var_chaste_interface__Slowly_Activating_K_Current__x_Ks = rY[6];
        // Units: dimensionless; Initial value: 0.00355636
        double var_chaste_interface__Transient_Outward_K_Current__x_to_s = rY[7];
        // Units: dimensionless; Initial value: 0.0003592503
        double var_chaste_interface__Transient_Outward_K_Current__y_to_s = rY[8];
        // Units: dimensionless; Initial value: 0.8161309
        double var_chaste_interface__Transient_Outward_K_Current__x_to_f = rY[9];
        // Units: dimensionless; Initial value: 0.0003592405
        double var_chaste_interface__Transient_Outward_K_Current__y_to_f = rY[10];
        // Units: dimensionless; Initial value: 0.9999976
        double var_chaste_interface__L_Type_Calcium_Current__d = rY[11];
        // Units: dimensionless; Initial value: 1.879996e-06
        double var_chaste_interface__L_Type_Calcium_Current__f = rY[12];
        // Units: dimensionless; Initial value: 0.9789409
        double var_chaste_interface__L_Type_Calcium_Current__f_2 = rY[13];
        // Units: dimensionless; Initial value: 0.9993986
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j = rY[14];
        // Units: dimensionless; Initial value: 0.02861794
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl = rY[15];
        // Units: dimensionless; Initial value: 0.0169833
        double var_chaste_interface__SR_Fluxes__Ry_Rr = rY[16];
        // Units: dimensionless; Initial value: 0.8888214
        double var_chaste_interface__SR_Fluxes__Ry_Ro = rY[17];
        // Units: dimensionless; Initial value: 1.149876e-06
        double var_chaste_interface__SR_Fluxes__Ry_Ri = rY[18];
        // Units: dimensionless; Initial value: 1.43831e-07
        double var_chaste_interface__Cytosolic_Ca_Buffers__TnC_l = rY[19];
        // Units: millimolar; Initial value: 0.009811535
        double var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_c = rY[20];
        // Units: millimolar; Initial value: 0.1225802
        double var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_m = rY[21];
        // Units: millimolar; Initial value: 0.008128604
        double var_chaste_interface__Cytosolic_Ca_Buffers__CaM = rY[22];
        // Units: millimolar; Initial value: 0.0003288063
        double var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c = rY[23];
        // Units: millimolar; Initial value: 0.002522168
        double var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m = rY[24];
        // Units: millimolar; Initial value: 0.1369514
        double var_chaste_interface__Cytosolic_Ca_Buffers__SRB = rY[25];
        // Units: millimolar; Initial value: 0.00238683
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j = rY[26];
        // Units: millimolar; Initial value: 0.008606485
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl = rY[27];
        // Units: millimolar; Initial value: 0.01101044
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j = rY[28];
        // Units: millimolar; Initial value: 0.08078504
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl = rY[29];
        // Units: millimolar; Initial value: 0.1238366
        double var_chaste_interface__Sodium_Concentrations__Na_j = rY[30];
        // Units: millimolar; Initial value: 10.0211
        double var_chaste_interface__Sodium_Concentrations__Na_sl = rY[31];
        // Units: millimolar; Initial value: 10.01974
        double var_chaste_interface__Sodium_Concentrations__Na_i = rY[32];
        // Units: millimolar; Initial value: 10.01989
        double var_chaste_interface__Sodium_Concentrations__Na_B_j = rY[33];
        // Units: millimolar; Initial value: 3.785209
        double var_chaste_interface__Sodium_Concentrations__Na_B_sl = rY[34];
        // Units: millimolar; Initial value: 0.8259271
        double var_chaste_interface__Calcium_Concentrations__Ca_j = rY[35];
        // Units: millimolar; Initial value: 0.0002048633
        double var_chaste_interface__Calcium_Concentrations__Ca_sl = rY[36];
        // Units: millimolar; Initial value: 0.0001188246
        double var_chaste_interface__Calcium_Concentrations__Ca_SR = rY[37];
        // Units: millimolar; Initial value: 0.6138856
        double var_chaste_interface__Calcium_Concentrations__Csqn_b = rY[38];
        // Units: millimolar; Initial value: 1.262853
        

        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        double d_dt_chaste_interface_var_membrane__V;
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__CaM = -0.23799999999999999 * var_chaste_interface__Cytosolic_Ca_Buffers__CaM + 34.0 * (0.024 - var_chaste_interface__Cytosolic_Ca_Buffers__CaM) * var_chaste_interface__Calcium_Concentrations__Ca_i; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_c = -0.00046000000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c + 13.800000000000001 * (0.14000000000000001 - var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c - var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m) * var_chaste_interface__Calcium_Concentrations__Ca_i; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__SRB = -0.059999999999999998 * var_chaste_interface__Cytosolic_Ca_Buffers__SRB + 100.0 * (0.017100000000000001 - var_chaste_interface__Cytosolic_Ca_Buffers__SRB) * var_chaste_interface__Calcium_Concentrations__Ca_i; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_h_c = -3.1999999999999999e-5 * var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_c + 2.3700000000000001 * (0.14000000000000001 - var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_c - var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_m) * var_chaste_interface__Calcium_Concentrations__Ca_i; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_l = -0.019599999999999999 * var_chaste_interface__Cytosolic_Ca_Buffers__TnC_l + 32.700000000000003 * (0.070000000000000007 - var_chaste_interface__Cytosolic_Ca_Buffers__TnC_l) * var_chaste_interface__Calcium_Concentrations__Ca_i; // millimolar / millisecond
        const double d_dt_chaste_interface_var_L_Type_Calcium_Current__f_Ca_B_j = -0.011900000000000001 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j + 1.7 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * var_chaste_interface__Calcium_Concentrations__Ca_j; // 1 / millisecond
        const double d_dt_chaste_interface_var_L_Type_Calcium_Current__f_Ca_B_sl = -0.011900000000000001 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl + 1.7 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * var_chaste_interface__Calcium_Concentrations__Ca_sl; // 1 / millisecond
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_m = 0.0021979999999999999 - 0.015699999999999999 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c - 0.015757 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_h_m = 0.00042000000000000007 - 0.0030000000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_c - 0.0063300000000000006 * var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_m; // millimolar / millisecond
        const double var_SR_Fluxes__J_SR_leak = 5.3480000000000003e-6 * var_chaste_interface__Calcium_Concentrations__Ca_SR - 5.3480000000000003e-6 * var_chaste_interface__Calcium_Concentrations__Ca_j; // milliM_per_millis
        const double var_SR_Fluxes__RI = 1.0 - var_chaste_interface__SR_Fluxes__Ry_Ri - var_chaste_interface__SR_Fluxes__Ry_Ro - var_chaste_interface__SR_Fluxes__Ry_Rr; // dimensionless
        const double var_SR_Fluxes__J_ser_Ca = (2814485.1633595936 * pow(var_chaste_interface__Calcium_Concentrations__Ca_i, 1.7869999999999999) - 0.38742512113256738 * pow(var_chaste_interface__Calcium_Concentrations__Ca_SR, 1.7869999999999999)) * mParameters[0] / (1.0 + 0.38742512113256738 * pow(var_chaste_interface__Calcium_Concentrations__Ca_SR, 1.7869999999999999) + 2814485.1633595936 * pow(var_chaste_interface__Calcium_Concentrations__Ca_i, 1.7869999999999999)); // milliM_per_millis
        const double var_SR_Fluxes__k_Ca_SR = 15.0 - 14.0 / (1.0 + 0.13584112963311223 * pow((1 / var_chaste_interface__Calcium_Concentrations__Ca_SR), 2.5)); // dimensionless
        const double var_SR_Fluxes__ki_SR_Ca = 0.5 * var_SR_Fluxes__k_Ca_SR; // per_milliM_per_millis
        const double var_SR_Fluxes__ko_SR_Ca = 10.0 / var_SR_Fluxes__k_Ca_SR; // per_milliM2_per_millis
        const double d_dt_chaste_interface_var_SR_Fluxes__Ry_Ri = -0.065000000000000002 * var_chaste_interface__SR_Fluxes__Ry_Ri + pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2) * var_SR_Fluxes__RI * var_SR_Fluxes__ko_SR_Ca + var_chaste_interface__Calcium_Concentrations__Ca_j * var_chaste_interface__SR_Fluxes__Ry_Ro * var_SR_Fluxes__ki_SR_Ca; // 1 / millisecond
        const double d_dt_chaste_interface_var_SR_Fluxes__Ry_Ro = 0.0050000000000000001 * var_chaste_interface__SR_Fluxes__Ry_Ri - 0.059999999999999998 * var_chaste_interface__SR_Fluxes__Ry_Ro + pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2) * var_chaste_interface__SR_Fluxes__Ry_Rr * var_SR_Fluxes__ko_SR_Ca - var_chaste_interface__Calcium_Concentrations__Ca_j * var_chaste_interface__SR_Fluxes__Ry_Ro * var_SR_Fluxes__ki_SR_Ca; // 1 / millisecond
        const double d_dt_chaste_interface_var_SR_Fluxes__Ry_Rr = 0.059999999999999998 * var_chaste_interface__SR_Fluxes__Ry_Ro + 0.0050000000000000001 * var_SR_Fluxes__RI - pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2) * var_chaste_interface__SR_Fluxes__Ry_Rr * var_SR_Fluxes__ko_SR_Ca - var_chaste_interface__Calcium_Concentrations__Ca_j * var_chaste_interface__SR_Fluxes__Ry_Rr * var_SR_Fluxes__ki_SR_Ca; // 1 / millisecond
        const double var_SR_Fluxes__J_SR_Ca_rel = 25.0 * (-var_chaste_interface__Calcium_Concentrations__Ca_j + var_chaste_interface__Calcium_Concentrations__Ca_SR) * var_chaste_interface__SR_Fluxes__Ry_Ro; // milliM_per_millis
        const double d_dt_chaste_interface_var_Sodium_Concentrations__Na_B_j = -0.001 * var_chaste_interface__Sodium_Concentrations__Na_B_j + 0.0001 * (7.5609999999999999 - var_chaste_interface__Sodium_Concentrations__Na_B_j) * var_chaste_interface__Sodium_Concentrations__Na_j; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Sodium_Concentrations__Na_B_sl = -0.001 * var_chaste_interface__Sodium_Concentrations__Na_B_sl + 0.0001 * (1.6499999999999999 - var_chaste_interface__Sodium_Concentrations__Na_B_sl) * var_chaste_interface__Sodium_Concentrations__Na_sl; // millimolar / millisecond
        const double var_Nerst_Potentials__E_Na_junc = 26.712338705498265 * log(mParameters[4] / var_chaste_interface__Sodium_Concentrations__Na_j); // millivolt
        const double var_Nerst_Potentials__E_Na_sl = 26.712338705498265 * log(mParameters[4] / var_chaste_interface__Sodium_Concentrations__Na_sl); // millivolt
        const double d_dt_chaste_interface_var_Fast_Na_Current__h = (-var_chaste_interface__Fast_Na_Current__h + _lt_0_row[11]) * (_lt_0_row[12]); // 1 / millisecond
        const double d_dt_chaste_interface_var_Fast_Na_Current__j = (-var_chaste_interface__Fast_Na_Current__j + _lt_0_row[11]) * (_lt_0_row[13]); // 1 / millisecond
        const double d_dt_chaste_interface_var_Fast_Na_Current__m = (-var_chaste_interface__Fast_Na_Current__m + _lt_0_row[14]) / (_lt_0_row[15]); // 1 / millisecond
        const double d_dt_chaste_interface_var_L_Type_Calcium_Current__d = (-var_chaste_interface__L_Type_Calcium_Current__d + _lt_0_row[16]) / (_lt_0_row[17]); // 1 / millisecond
        const double d_dt_chaste_interface_var_L_Type_Calcium_Current__f = (-var_chaste_interface__L_Type_Calcium_Current__f + _lt_0_row[18]) / (_lt_0_row[19]); // 1 / millisecond
        const double d_dt_chaste_interface_var_L_Type_Calcium_Current__f_2 = (0.33000000000000002 - var_chaste_interface__L_Type_Calcium_Current__f_2 + _lt_0_row[20]) / (_lt_0_row[21]); // 1 / millisecond
        const double var_Na_Ca_Exchanger_Current__I_ncx_junc = 0.11 * (pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) * mParameters[2] * _lt_0_row[0] - pow(mParameters[4], 3) * var_chaste_interface__Calcium_Concentrations__Ca_j * _lt_0_row[1]) * mParameters[13] / ((_lt_0_row[2]) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2)) * (1.3 * pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) + pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) * mParameters[2] + pow(mParameters[4], 3) * var_chaste_interface__Calcium_Concentrations__Ca_j + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Calcium_Concentrations__Ca_j) * var_chaste_interface__Calcium_Concentrations__Ca_j + 0.0035899999999999999 * pow(mParameters[4], 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3)))); // picoA_per_picoF
        const double var_Calcium_Concentrations__I_Ca_tot_junc = 6.0643000000000002e-5 * var_chaste_interface__membrane__V - 2.0 * var_Na_Ca_Exchanger_Current__I_ncx_junc - 0.00080995817805876559 * log(mParameters[2] / var_chaste_interface__Calcium_Concentrations__Ca_j) + 0.0074029999999999999 * pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 1.6000000000000001) / (5.2281977629563632e-6 + pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 1.6000000000000001)) + 0.90000000000000002 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_j * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.71831868267118426 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_j * _lt_0_row[8]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[9]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2; // picoA_per_picoF
        const double var_Na_Ca_Exchanger_Current__I_ncx_sl = 0.89000000000000001 * (pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) * mParameters[2] * _lt_0_row[0] - pow(mParameters[4], 3) * var_chaste_interface__Calcium_Concentrations__Ca_sl * _lt_0_row[1]) * mParameters[13] / ((_lt_0_row[2]) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 2)) * (1.3 * pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) + pow(mParameters[4], 3) * var_chaste_interface__Calcium_Concentrations__Ca_sl + pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) * mParameters[2] + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Calcium_Concentrations__Ca_sl) * var_chaste_interface__Calcium_Concentrations__Ca_sl + 0.0035899999999999999 * pow(mParameters[4], 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3)))); // picoA_per_picoF
        const double var_Calcium_Concentrations__I_Ca_tot_sl = 0.00049065700000000003 * var_chaste_interface__membrane__V - 2.0 * var_Na_Ca_Exchanger_Current__I_ncx_sl - 0.0065532979861118307 * log(mParameters[2] / var_chaste_interface__Calcium_Concentrations__Ca_sl) + 0.059896999999999999 * pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 1.6000000000000001) / (5.2281977629563632e-6 + pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 1.6000000000000001)) + 0.099999999999999978 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_sl * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.71831868267118426 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_sl * _lt_0_row[8]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[9]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2; // picoA_per_picoF
        const double var_Na_K_Pump_Current__f_NaK = 1 / (1.0 + _lt_0_row[4] + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * mParameters[4])) * _lt_0_row[3]); // dimensionless
        const double var_Na_K_Pump_Current__I_NaK_junc = 0.11 * mParameters[14] * var_Na_K_Pump_Current__f_NaK * mParameters[3] / ((1.0 + 14641.0 / pow(var_chaste_interface__Sodium_Concentrations__Na_j, 4)) * (1.5 + mParameters[3])); // picoA_per_picoF
        const double var_Na_K_Pump_Current__I_NaK_sl = 0.89000000000000001 * mParameters[14] * var_Na_K_Pump_Current__f_NaK * mParameters[3] / ((1.0 + 14641.0 / pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 4)) * (1.5 + mParameters[3])); // picoA_per_picoF
        const double d_dt_chaste_interface_var_Rapidly_Activating_K_Current__x_Kr = (-var_chaste_interface__Rapidly_Activating_K_Current__x_Kr + _lt_0_row[22]) / (_lt_0_row[23]); // 1 / millisecond
        const double d_dt_chaste_interface_var_Slowly_Activating_K_Current__x_Ks = (_lt_0_row[25]) * (-var_chaste_interface__Slowly_Activating_K_Current__x_Ks + _lt_0_row[24]); // 1 / millisecond
        const double var_Sodium_Concentrations__I_Na_tot_junc = 3.0 * var_Na_Ca_Exchanger_Current__I_ncx_junc + 3.0 * var_Na_K_Pump_Current__I_NaK_junc + 6.567e-5 * var_chaste_interface__membrane__V - 6.567e-5 * var_Nerst_Potentials__E_Na_junc + 0.11 * pow(var_chaste_interface__Fast_Na_Current__m, 3) * (-var_Nerst_Potentials__E_Na_junc + var_chaste_interface__membrane__V) * mParameters[7] * var_chaste_interface__Fast_Na_Current__h * var_chaste_interface__Fast_Na_Current__j + 0.90000000000000002 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_j * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_j * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_j * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (1.0971453706510394e-5 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_j * _lt_0_row[6]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[7]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2; // picoA_per_picoF
        const double var_Sodium_Concentrations__I_Na_tot_sl = 3.0 * var_Na_Ca_Exchanger_Current__I_ncx_sl + 3.0 * var_Na_K_Pump_Current__I_NaK_sl + 0.00053133 * var_chaste_interface__membrane__V - 0.00053133 * var_Nerst_Potentials__E_Na_sl + 0.099999999999999978 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_sl * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_sl * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_sl * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (1.0971453706510394e-5 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_sl * _lt_0_row[6]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[7]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 + 0.89000000000000001 * pow(var_chaste_interface__Fast_Na_Current__m, 3) * (-var_Nerst_Potentials__E_Na_sl + var_chaste_interface__membrane__V) * mParameters[7] * var_chaste_interface__Fast_Na_Current__h * var_chaste_interface__Fast_Na_Current__j; // picoA_per_picoF
        const double var_Transient_Outward_K_Current__x_to_ss = _lt_0_row[26]; // dimensionless
        const double d_dt_chaste_interface_var_Transient_Outward_K_Current__x_to_f = (-var_chaste_interface__Transient_Outward_K_Current__x_to_f + var_Transient_Outward_K_Current__x_to_ss) / (_lt_0_row[27]); // 1 / millisecond
        const double d_dt_chaste_interface_var_Transient_Outward_K_Current__x_to_s = (-var_chaste_interface__Transient_Outward_K_Current__x_to_s + var_Transient_Outward_K_Current__x_to_ss) / (_lt_0_row[28]); // 1 / millisecond
        const double var_Transient_Outward_K_Current__y_to_ss = _lt_0_row[29]; // dimensionless
        const double d_dt_chaste_interface_var_Transient_Outward_K_Current__y_to_f = (-var_chaste_interface__Transient_Outward_K_Current__y_to_f + var_Transient_Outward_K_Current__y_to_ss) / (_lt_0_row[30]); // 1 / millisecond
        const double d_dt_chaste_interface_var_Transient_Outward_K_Current__y_to_s = (-var_chaste_interface__Transient_Outward_K_Current__y_to_s + var_Transient_Outward_K_Current__y_to_ss) / (_lt_0_row[31]); // 1 / millisecond
        const double var_membrane__V_cell = 1.050625e-11 * M_PI; // liter
        const double var_membrane__V_junc = 0.00053899999999999998 * var_membrane__V_cell; // liter
        const double d_dt_chaste_interface_var_Sodium_Concentrations__Na_j = -d_dt_chaste_interface_var_Sodium_Concentrations__Na_B_j + 1.8312999999999999e-14 * (-var_chaste_interface__Sodium_Concentrations__Na_j + var_chaste_interface__Sodium_Concentrations__Na_sl) / var_membrane__V_junc - 1.0364305332435094e-5 * var_Sodium_Concentrations__I_Na_tot_junc * mParameters[6] / var_membrane__V_junc; // millimolar / millisecond
        const double var_membrane__V_myo = 0.65000000000000002 * var_membrane__V_cell; // liter
        const double d_dt_chaste_interface_var_Sodium_Concentrations__Na_i = 1.6385999999999999e-12 * (-var_chaste_interface__Sodium_Concentrations__Na_i + var_chaste_interface__Sodium_Concentrations__Na_sl) / var_membrane__V_myo; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_j = -0.029999999999999999 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j + 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j + 0.000165 * var_membrane__V_myo / var_membrane__V_junc) * var_chaste_interface__Calcium_Concentrations__Ca_j; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_j = -1.3 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j + 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j + 0.00046000000000000001 * var_membrane__V_myo / var_membrane__V_junc) * var_chaste_interface__Calcium_Concentrations__Ca_j; // millimolar / millisecond
        const double var_membrane__V_sl = 0.02 * var_membrane__V_cell; // liter
        const double d_dt_chaste_interface_var_Sodium_Concentrations__Na_sl = -d_dt_chaste_interface_var_Sodium_Concentrations__Na_B_sl + 1.6385999999999999e-12 * (-var_chaste_interface__Sodium_Concentrations__Na_sl + var_chaste_interface__Sodium_Concentrations__Na_i) / var_membrane__V_sl + 1.8312999999999999e-14 * (-var_chaste_interface__Sodium_Concentrations__Na_sl + var_chaste_interface__Sodium_Concentrations__Na_j) / var_membrane__V_sl - 1.0364305332435094e-5 * var_Sodium_Concentrations__I_Na_tot_sl * mParameters[6] / var_membrane__V_sl; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_sl = -0.029999999999999999 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl + 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl + 0.0134 * var_membrane__V_myo / var_membrane__V_sl) * var_chaste_interface__Calcium_Concentrations__Ca_sl; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_sl = -1.3 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl + 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl + 0.037400000000000003 * var_membrane__V_myo / var_membrane__V_sl) * var_chaste_interface__Calcium_Concentrations__Ca_sl; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Calcium_Concentrations__Ca_sl = -d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_sl - d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_sl + 8.2413000000000004e-13 * (-var_chaste_interface__Calcium_Concentrations__Ca_sl + var_chaste_interface__Calcium_Concentrations__Ca_j) / var_membrane__V_sl + 3.7243000000000002e-12 * (-var_chaste_interface__Calcium_Concentrations__Ca_sl + var_chaste_interface__Calcium_Concentrations__Ca_i) / var_membrane__V_sl - 5.182152666217547e-6 * var_Calcium_Concentrations__I_Ca_tot_sl * mParameters[6] / var_membrane__V_sl; // millimolar / millisecond
        const double var_membrane__V_sr = 0.035000000000000003 * var_membrane__V_cell; // liter
        const double d_dt_chaste_interface_var_Calcium_Concentrations__Ca_i = -d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__CaM - d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_c - d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_m - d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__SRB - d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_h_c - d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_h_m - d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_l + 3.7243000000000002e-12 * (-var_chaste_interface__Calcium_Concentrations__Ca_i + var_chaste_interface__Calcium_Concentrations__Ca_sl) / var_membrane__V_myo - var_SR_Fluxes__J_ser_Ca * var_membrane__V_sr / var_membrane__V_myo; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Calcium_Concentrations__Ca_j = -d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_j - d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_j + 8.2413000000000004e-13 * (-var_chaste_interface__Calcium_Concentrations__Ca_j + var_chaste_interface__Calcium_Concentrations__Ca_sl) / var_membrane__V_junc + var_SR_Fluxes__J_SR_Ca_rel * var_membrane__V_sr / var_membrane__V_junc + var_SR_Fluxes__J_SR_leak * var_membrane__V_myo / var_membrane__V_junc - 5.182152666217547e-6 * var_Calcium_Concentrations__I_Ca_tot_junc * mParameters[6] / var_membrane__V_junc; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Calcium_Concentrations__Csqn_b = -65.0 * var_chaste_interface__Calcium_Concentrations__Csqn_b + 100.0 * (-var_chaste_interface__Calcium_Concentrations__Csqn_b + 0.14000000000000001 * var_membrane__V_myo / var_membrane__V_sr) * var_chaste_interface__Calcium_Concentrations__Ca_SR; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Calcium_Concentrations__Ca_SR = -d_dt_chaste_interface_var_Calcium_Concentrations__Csqn_b - var_SR_Fluxes__J_SR_Ca_rel - var_SR_Fluxes__J_SR_leak * var_membrane__V_myo / var_membrane__V_sr + var_SR_Fluxes__J_ser_Ca; // millimolar / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_membrane__V = 0.0;
        }
        else
        {
            const double var_Nerst_Potentials__E_K = 26.712338705498265 * log(mParameters[3] / mParameters[1]); // millivolt
            const double var_Nerst_Potentials__E_Ks = 26.712338705498265 * log((0.018329999999999999 * mParameters[4] + mParameters[3]) / (0.018329999999999999 * var_chaste_interface__Sodium_Concentrations__Na_i + mParameters[1])); // millivolt
            d_dt_chaste_interface_var_membrane__V = -0.5535668961205934 - var_Calcium_Concentrations__I_Ca_tot_junc - var_Calcium_Concentrations__I_Ca_tot_sl - var_Sodium_Concentrations__I_Na_tot_junc - var_Sodium_Concentrations__I_Na_tot_sl + 2.0 * var_Na_K_Pump_Current__I_NaK_junc + 2.0 * var_Na_K_Pump_Current__I_NaK_sl - 0.0089999999999999993 * var_chaste_interface__membrane__V - GetIntracellularAreaStimulus(var_chaste_interface__environment__t) / HeartConfig::Instance()->GetCapacitance() - 0.002 * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) / (_lt_0_row[5]) - 0.048783569999999998 * (61.507432902288166 + var_chaste_interface__membrane__V) / (1.0 + 0.10000000000000001 / var_chaste_interface__Calcium_Concentrations__Ca_sl) - 0.0060294299999999997 * (61.507432902288166 + var_chaste_interface__membrane__V) / (1.0 + 0.10000000000000001 / var_chaste_interface__Calcium_Concentrations__Ca_j) - pow(var_chaste_interface__Slowly_Activating_K_Current__x_Ks, 2) * (-var_Nerst_Potentials__E_Ks + var_chaste_interface__membrane__V) * mParameters[11] - (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * mParameters[8] * var_chaste_interface__Transient_Outward_K_Current__x_to_f * var_chaste_interface__Transient_Outward_K_Current__y_to_f - (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * mParameters[12] * var_chaste_interface__Transient_Outward_K_Current__x_to_s * var_chaste_interface__Transient_Outward_K_Current__y_to_s - (1.0 - 0.099999999999999978 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl - 0.90000000000000002 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (5.2753173749999997e-10 * (-mParameters[3] + mParameters[1] * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 5.2753173749999997e-10 * (-mParameters[3] + mParameters[1] * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 5.2753173749999997e-10 * (-mParameters[3] + mParameters[1] * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.00019748616671718709 * (-mParameters[3] + mParameters[1] * _lt_0_row[6]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[7]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 - 0.43033148291193518 * sqrt(mParameters[3]) * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * mParameters[10] * var_chaste_interface__Rapidly_Activating_K_Current__x_Kr / (_lt_0_row[10]) - 1.7616910247448803 * sqrt(mParameters[3]) * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * mParameters[9] / ((1.0 + exp(-6.0745197599999994 + 0.12164999999999999 * var_chaste_interface__membrane__V - 0.12164999999999999 * var_Nerst_Potentials__E_K)) * (4.0937999999999999 / (1.0 + exp(-6.0745197599999994 + 0.12164999999999999 * var_chaste_interface__membrane__V - 0.12164999999999999 * var_Nerst_Potentials__E_K)) + (15.7197 * exp(-0.21949596900000001 + 0.067390000000000005 * var_chaste_interface__membrane__V - 0.067390000000000005 * var_Nerst_Potentials__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_Nerst_Potentials__E_K)) / (1.0 + exp(-2.3135610949999998 + 0.16284999999999999 * var_Nerst_Potentials__E_K - 0.16284999999999999 * var_chaste_interface__membrane__V)))); // millivolt / millisecond
        }
        
        mEvalF[0] = d_dt_chaste_interface_var_membrane__V;
        mEvalF[1] = d_dt_chaste_interface_var_Calcium_Concentrations__Ca_i;
        mEvalF[2] = d_dt_chaste_interface_var_Fast_Na_Current__m;
        mEvalF[3] = d_dt_chaste_interface_var_Fast_Na_Current__h;
        mEvalF[4] = d_dt_chaste_interface_var_Fast_Na_Current__j;
        mEvalF[5] = d_dt_chaste_interface_var_Rapidly_Activating_K_Current__x_Kr;
        mEvalF[6] = d_dt_chaste_interface_var_Slowly_Activating_K_Current__x_Ks;
        mEvalF[7] = d_dt_chaste_interface_var_Transient_Outward_K_Current__x_to_s;
        mEvalF[8] = d_dt_chaste_interface_var_Transient_Outward_K_Current__y_to_s;
        mEvalF[9] = d_dt_chaste_interface_var_Transient_Outward_K_Current__x_to_f;
        mEvalF[10] = d_dt_chaste_interface_var_Transient_Outward_K_Current__y_to_f;
        mEvalF[11] = d_dt_chaste_interface_var_L_Type_Calcium_Current__d;
        mEvalF[12] = d_dt_chaste_interface_var_L_Type_Calcium_Current__f;
        mEvalF[13] = d_dt_chaste_interface_var_L_Type_Calcium_Current__f_2;
        mEvalF[14] = d_dt_chaste_interface_var_L_Type_Calcium_Current__f_Ca_B_j;
        mEvalF[15] = d_dt_chaste_interface_var_L_Type_Calcium_Current__f_Ca_B_sl;
        mEvalF[16] = d_dt_chaste_interface_var_SR_Fluxes__Ry_Rr;
        mEvalF[17] = d_dt_chaste_interface_var_SR_Fluxes__Ry_Ro;
        mEvalF[18] = d_dt_chaste_interface_var_SR_Fluxes__Ry_Ri;
        mEvalF[19] = d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_l;
        mEvalF[20] = d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_h_c;
        mEvalF[21] = d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_h_m;
        mEvalF[22] = d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__CaM;
        mEvalF[23] = d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_c;
        mEvalF[24] = d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_m;
        mEvalF[25] = d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__SRB;
        mEvalF[26] = d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_j;
        mEvalF[27] = d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_sl;
        mEvalF[28] = d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_j;
        mEvalF[29] = d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_sl;
        mEvalF[30] = d_dt_chaste_interface_var_Sodium_Concentrations__Na_j;
        mEvalF[31] = d_dt_chaste_interface_var_Sodium_Concentrations__Na_sl;
        mEvalF[32] = d_dt_chaste_interface_var_Sodium_Concentrations__Na_i;
        mEvalF[33] = d_dt_chaste_interface_var_Sodium_Concentrations__Na_B_j;
        mEvalF[34] = d_dt_chaste_interface_var_Sodium_Concentrations__Na_B_sl;
        mEvalF[35] = d_dt_chaste_interface_var_Calcium_Concentrations__Ca_j;
        mEvalF[36] = d_dt_chaste_interface_var_Calcium_Concentrations__Ca_sl;
        mEvalF[37] = d_dt_chaste_interface_var_Calcium_Concentrations__Ca_SR;
        mEvalF[38] = d_dt_chaste_interface_var_Calcium_Concentrations__Csqn_b;

        
        mPartialF[0] = EvaluatePartialDerivative0(var_chaste_interface__environment__t, rY, delta);
        mPartialF[1] = EvaluatePartialDerivative1(var_chaste_interface__environment__t, rY, delta);
        mPartialF[2] = EvaluatePartialDerivative2(var_chaste_interface__environment__t, rY, delta);
        mPartialF[3] = EvaluatePartialDerivative3(var_chaste_interface__environment__t, rY, delta);
        mPartialF[4] = EvaluatePartialDerivative4(var_chaste_interface__environment__t, rY, delta);
        mPartialF[5] = EvaluatePartialDerivative5(var_chaste_interface__environment__t, rY, delta);
        mPartialF[6] = EvaluatePartialDerivative6(var_chaste_interface__environment__t, rY, delta);
        mPartialF[7] = EvaluatePartialDerivative7(var_chaste_interface__environment__t, rY, delta);
        mPartialF[8] = EvaluatePartialDerivative8(var_chaste_interface__environment__t, rY, delta);
        mPartialF[9] = EvaluatePartialDerivative9(var_chaste_interface__environment__t, rY, delta);
        mPartialF[10] = EvaluatePartialDerivative10(var_chaste_interface__environment__t, rY, delta);
        mPartialF[11] = EvaluatePartialDerivative11(var_chaste_interface__environment__t, rY, delta);
        mPartialF[12] = EvaluatePartialDerivative12(var_chaste_interface__environment__t, rY, delta);
        mPartialF[13] = EvaluatePartialDerivative13(var_chaste_interface__environment__t, rY, delta);
        mPartialF[14] = EvaluatePartialDerivative14(var_chaste_interface__environment__t, rY, delta);
        mPartialF[15] = EvaluatePartialDerivative15(var_chaste_interface__environment__t, rY, delta);
        mPartialF[16] = EvaluatePartialDerivative16(var_chaste_interface__environment__t, rY, delta);
        mPartialF[17] = EvaluatePartialDerivative17(var_chaste_interface__environment__t, rY, delta);
        mPartialF[18] = EvaluatePartialDerivative18(var_chaste_interface__environment__t, rY, delta);
        mPartialF[19] = EvaluatePartialDerivative19(var_chaste_interface__environment__t, rY, delta);
        mPartialF[20] = EvaluatePartialDerivative20(var_chaste_interface__environment__t, rY, delta);
        mPartialF[21] = EvaluatePartialDerivative21(var_chaste_interface__environment__t, rY, delta);
        mPartialF[22] = EvaluatePartialDerivative22(var_chaste_interface__environment__t, rY, delta);
        mPartialF[23] = EvaluatePartialDerivative23(var_chaste_interface__environment__t, rY, delta);
        mPartialF[24] = EvaluatePartialDerivative24(var_chaste_interface__environment__t, rY, delta);
        mPartialF[25] = EvaluatePartialDerivative25(var_chaste_interface__environment__t, rY, delta);
        mPartialF[26] = EvaluatePartialDerivative26(var_chaste_interface__environment__t, rY, delta);
        mPartialF[27] = EvaluatePartialDerivative27(var_chaste_interface__environment__t, rY, delta);
        mPartialF[28] = EvaluatePartialDerivative28(var_chaste_interface__environment__t, rY, delta);
        mPartialF[29] = EvaluatePartialDerivative29(var_chaste_interface__environment__t, rY, delta);
        mPartialF[30] = EvaluatePartialDerivative30(var_chaste_interface__environment__t, rY, delta);
        mPartialF[31] = EvaluatePartialDerivative31(var_chaste_interface__environment__t, rY, delta);
        mPartialF[32] = EvaluatePartialDerivative32(var_chaste_interface__environment__t, rY, delta);
        mPartialF[33] = EvaluatePartialDerivative33(var_chaste_interface__environment__t, rY, delta);
        mPartialF[34] = EvaluatePartialDerivative34(var_chaste_interface__environment__t, rY, delta);
        mPartialF[35] = EvaluatePartialDerivative35(var_chaste_interface__environment__t, rY, delta);
        mPartialF[36] = EvaluatePartialDerivative36(var_chaste_interface__environment__t, rY, delta);
        mPartialF[37] = EvaluatePartialDerivative37(var_chaste_interface__environment__t, rY, delta);
        mPartialF[38] = EvaluatePartialDerivative38(var_chaste_interface__environment__t, rY, delta);
        for (unsigned var=0; var<size; var++)
        {
            if (var == 0) continue;
            if (fabs(mPartialF[var]) < delta)
            {
                rY[var] = mYInit[var] + 0.5*mDt*mEvalF[var];
            }
            else
            {
                rY[var] = mYInit[var] + (mEvalF[var]/mPartialF[var])*(exp(mPartialF[var]*0.5*mDt)-1.0);
            }
            
        }
        
        
        y_save = rY[1];
        rY[1] = mYInit[1];
        mEvalF[1] = EvaluateYDerivative1(var_chaste_interface__environment__t, rY);
        mPartialF[1] = EvaluatePartialDerivative1(var_chaste_interface__environment__t, rY, delta);
        rY[1] = y_save;
        
        
        y_save = rY[2];
        rY[2] = mYInit[2];
        mEvalF[2] = EvaluateYDerivative2(var_chaste_interface__environment__t, rY);
        mPartialF[2] = EvaluatePartialDerivative2(var_chaste_interface__environment__t, rY, delta);
        rY[2] = y_save;
        
        
        y_save = rY[3];
        rY[3] = mYInit[3];
        mEvalF[3] = EvaluateYDerivative3(var_chaste_interface__environment__t, rY);
        mPartialF[3] = EvaluatePartialDerivative3(var_chaste_interface__environment__t, rY, delta);
        rY[3] = y_save;
        
        
        y_save = rY[4];
        rY[4] = mYInit[4];
        mEvalF[4] = EvaluateYDerivative4(var_chaste_interface__environment__t, rY);
        mPartialF[4] = EvaluatePartialDerivative4(var_chaste_interface__environment__t, rY, delta);
        rY[4] = y_save;
        
        
        y_save = rY[5];
        rY[5] = mYInit[5];
        mEvalF[5] = EvaluateYDerivative5(var_chaste_interface__environment__t, rY);
        mPartialF[5] = EvaluatePartialDerivative5(var_chaste_interface__environment__t, rY, delta);
        rY[5] = y_save;
        
        
        y_save = rY[6];
        rY[6] = mYInit[6];
        mEvalF[6] = EvaluateYDerivative6(var_chaste_interface__environment__t, rY);
        mPartialF[6] = EvaluatePartialDerivative6(var_chaste_interface__environment__t, rY, delta);
        rY[6] = y_save;
        
        
        y_save = rY[7];
        rY[7] = mYInit[7];
        mEvalF[7] = EvaluateYDerivative7(var_chaste_interface__environment__t, rY);
        mPartialF[7] = EvaluatePartialDerivative7(var_chaste_interface__environment__t, rY, delta);
        rY[7] = y_save;
        
        
        y_save = rY[8];
        rY[8] = mYInit[8];
        mEvalF[8] = EvaluateYDerivative8(var_chaste_interface__environment__t, rY);
        mPartialF[8] = EvaluatePartialDerivative8(var_chaste_interface__environment__t, rY, delta);
        rY[8] = y_save;
        
        
        y_save = rY[9];
        rY[9] = mYInit[9];
        mEvalF[9] = EvaluateYDerivative9(var_chaste_interface__environment__t, rY);
        mPartialF[9] = EvaluatePartialDerivative9(var_chaste_interface__environment__t, rY, delta);
        rY[9] = y_save;
        
        
        y_save = rY[10];
        rY[10] = mYInit[10];
        mEvalF[10] = EvaluateYDerivative10(var_chaste_interface__environment__t, rY);
        mPartialF[10] = EvaluatePartialDerivative10(var_chaste_interface__environment__t, rY, delta);
        rY[10] = y_save;
        
        
        y_save = rY[11];
        rY[11] = mYInit[11];
        mEvalF[11] = EvaluateYDerivative11(var_chaste_interface__environment__t, rY);
        mPartialF[11] = EvaluatePartialDerivative11(var_chaste_interface__environment__t, rY, delta);
        rY[11] = y_save;
        
        
        y_save = rY[12];
        rY[12] = mYInit[12];
        mEvalF[12] = EvaluateYDerivative12(var_chaste_interface__environment__t, rY);
        mPartialF[12] = EvaluatePartialDerivative12(var_chaste_interface__environment__t, rY, delta);
        rY[12] = y_save;
        
        
        y_save = rY[13];
        rY[13] = mYInit[13];
        mEvalF[13] = EvaluateYDerivative13(var_chaste_interface__environment__t, rY);
        mPartialF[13] = EvaluatePartialDerivative13(var_chaste_interface__environment__t, rY, delta);
        rY[13] = y_save;
        
        
        y_save = rY[14];
        rY[14] = mYInit[14];
        mEvalF[14] = EvaluateYDerivative14(var_chaste_interface__environment__t, rY);
        mPartialF[14] = EvaluatePartialDerivative14(var_chaste_interface__environment__t, rY, delta);
        rY[14] = y_save;
        
        
        y_save = rY[15];
        rY[15] = mYInit[15];
        mEvalF[15] = EvaluateYDerivative15(var_chaste_interface__environment__t, rY);
        mPartialF[15] = EvaluatePartialDerivative15(var_chaste_interface__environment__t, rY, delta);
        rY[15] = y_save;
        
        
        y_save = rY[16];
        rY[16] = mYInit[16];
        mEvalF[16] = EvaluateYDerivative16(var_chaste_interface__environment__t, rY);
        mPartialF[16] = EvaluatePartialDerivative16(var_chaste_interface__environment__t, rY, delta);
        rY[16] = y_save;
        
        
        y_save = rY[17];
        rY[17] = mYInit[17];
        mEvalF[17] = EvaluateYDerivative17(var_chaste_interface__environment__t, rY);
        mPartialF[17] = EvaluatePartialDerivative17(var_chaste_interface__environment__t, rY, delta);
        rY[17] = y_save;
        
        
        y_save = rY[18];
        rY[18] = mYInit[18];
        mEvalF[18] = EvaluateYDerivative18(var_chaste_interface__environment__t, rY);
        mPartialF[18] = EvaluatePartialDerivative18(var_chaste_interface__environment__t, rY, delta);
        rY[18] = y_save;
        
        
        y_save = rY[19];
        rY[19] = mYInit[19];
        mEvalF[19] = EvaluateYDerivative19(var_chaste_interface__environment__t, rY);
        mPartialF[19] = EvaluatePartialDerivative19(var_chaste_interface__environment__t, rY, delta);
        rY[19] = y_save;
        
        
        y_save = rY[20];
        rY[20] = mYInit[20];
        mEvalF[20] = EvaluateYDerivative20(var_chaste_interface__environment__t, rY);
        mPartialF[20] = EvaluatePartialDerivative20(var_chaste_interface__environment__t, rY, delta);
        rY[20] = y_save;
        
        
        y_save = rY[21];
        rY[21] = mYInit[21];
        mEvalF[21] = EvaluateYDerivative21(var_chaste_interface__environment__t, rY);
        mPartialF[21] = EvaluatePartialDerivative21(var_chaste_interface__environment__t, rY, delta);
        rY[21] = y_save;
        
        
        y_save = rY[22];
        rY[22] = mYInit[22];
        mEvalF[22] = EvaluateYDerivative22(var_chaste_interface__environment__t, rY);
        mPartialF[22] = EvaluatePartialDerivative22(var_chaste_interface__environment__t, rY, delta);
        rY[22] = y_save;
        
        
        y_save = rY[23];
        rY[23] = mYInit[23];
        mEvalF[23] = EvaluateYDerivative23(var_chaste_interface__environment__t, rY);
        mPartialF[23] = EvaluatePartialDerivative23(var_chaste_interface__environment__t, rY, delta);
        rY[23] = y_save;
        
        
        y_save = rY[24];
        rY[24] = mYInit[24];
        mEvalF[24] = EvaluateYDerivative24(var_chaste_interface__environment__t, rY);
        mPartialF[24] = EvaluatePartialDerivative24(var_chaste_interface__environment__t, rY, delta);
        rY[24] = y_save;
        
        
        y_save = rY[25];
        rY[25] = mYInit[25];
        mEvalF[25] = EvaluateYDerivative25(var_chaste_interface__environment__t, rY);
        mPartialF[25] = EvaluatePartialDerivative25(var_chaste_interface__environment__t, rY, delta);
        rY[25] = y_save;
        
        
        y_save = rY[26];
        rY[26] = mYInit[26];
        mEvalF[26] = EvaluateYDerivative26(var_chaste_interface__environment__t, rY);
        mPartialF[26] = EvaluatePartialDerivative26(var_chaste_interface__environment__t, rY, delta);
        rY[26] = y_save;
        
        
        y_save = rY[27];
        rY[27] = mYInit[27];
        mEvalF[27] = EvaluateYDerivative27(var_chaste_interface__environment__t, rY);
        mPartialF[27] = EvaluatePartialDerivative27(var_chaste_interface__environment__t, rY, delta);
        rY[27] = y_save;
        
        
        y_save = rY[28];
        rY[28] = mYInit[28];
        mEvalF[28] = EvaluateYDerivative28(var_chaste_interface__environment__t, rY);
        mPartialF[28] = EvaluatePartialDerivative28(var_chaste_interface__environment__t, rY, delta);
        rY[28] = y_save;
        
        
        y_save = rY[29];
        rY[29] = mYInit[29];
        mEvalF[29] = EvaluateYDerivative29(var_chaste_interface__environment__t, rY);
        mPartialF[29] = EvaluatePartialDerivative29(var_chaste_interface__environment__t, rY, delta);
        rY[29] = y_save;
        
        
        y_save = rY[30];
        rY[30] = mYInit[30];
        mEvalF[30] = EvaluateYDerivative30(var_chaste_interface__environment__t, rY);
        mPartialF[30] = EvaluatePartialDerivative30(var_chaste_interface__environment__t, rY, delta);
        rY[30] = y_save;
        
        
        y_save = rY[31];
        rY[31] = mYInit[31];
        mEvalF[31] = EvaluateYDerivative31(var_chaste_interface__environment__t, rY);
        mPartialF[31] = EvaluatePartialDerivative31(var_chaste_interface__environment__t, rY, delta);
        rY[31] = y_save;
        
        
        y_save = rY[32];
        rY[32] = mYInit[32];
        mEvalF[32] = EvaluateYDerivative32(var_chaste_interface__environment__t, rY);
        mPartialF[32] = EvaluatePartialDerivative32(var_chaste_interface__environment__t, rY, delta);
        rY[32] = y_save;
        
        
        y_save = rY[33];
        rY[33] = mYInit[33];
        mEvalF[33] = EvaluateYDerivative33(var_chaste_interface__environment__t, rY);
        mPartialF[33] = EvaluatePartialDerivative33(var_chaste_interface__environment__t, rY, delta);
        rY[33] = y_save;
        
        
        y_save = rY[34];
        rY[34] = mYInit[34];
        mEvalF[34] = EvaluateYDerivative34(var_chaste_interface__environment__t, rY);
        mPartialF[34] = EvaluatePartialDerivative34(var_chaste_interface__environment__t, rY, delta);
        rY[34] = y_save;
        
        
        y_save = rY[35];
        rY[35] = mYInit[35];
        mEvalF[35] = EvaluateYDerivative35(var_chaste_interface__environment__t, rY);
        mPartialF[35] = EvaluatePartialDerivative35(var_chaste_interface__environment__t, rY, delta);
        rY[35] = y_save;
        
        
        y_save = rY[36];
        rY[36] = mYInit[36];
        mEvalF[36] = EvaluateYDerivative36(var_chaste_interface__environment__t, rY);
        mPartialF[36] = EvaluatePartialDerivative36(var_chaste_interface__environment__t, rY, delta);
        rY[36] = y_save;
        
        
        y_save = rY[37];
        rY[37] = mYInit[37];
        mEvalF[37] = EvaluateYDerivative37(var_chaste_interface__environment__t, rY);
        mPartialF[37] = EvaluatePartialDerivative37(var_chaste_interface__environment__t, rY, delta);
        rY[37] = y_save;
        
        
        y_save = rY[38];
        rY[38] = mYInit[38];
        mEvalF[38] = EvaluateYDerivative38(var_chaste_interface__environment__t, rY);
        mPartialF[38] = EvaluatePartialDerivative38(var_chaste_interface__environment__t, rY, delta);
        rY[38] = y_save;
                
        for (unsigned var=0; var<size; var++)
        {
            if (var == 0) continue;
            if (fabs(mPartialF[var]) < delta)
            {
                rY[var] = mYInit[var] + mDt*mEvalF[var];
            }
            else
            {
                rY[var] = mYInit[var] + (mEvalF[var]/mPartialF[var])*(exp(mPartialF[var]*mDt)-1.0);
            }
            
        }


    }
   
    
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative0(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        double d_dt_chaste_interface_var_membrane__V;
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -84.10546
        double var_chaste_interface__Fast_Na_Current__m = rY[2];
        // Units: dimensionless; Initial value: 0.002176608
        double var_chaste_interface__Fast_Na_Current__h = rY[3];
        // Units: dimensionless; Initial value: 0.7126555
        double var_chaste_interface__Fast_Na_Current__j = rY[4];
        // Units: dimensionless; Initial value: 0.7119893
        double var_chaste_interface__Rapidly_Activating_K_Current__x_Kr = rY[5];
        // Units: dimensionless; Initial value: 0.01896559
        double var_chaste_interface__Slowly_Activating_K_Current__x_Ks = rY[6];
        // Units: dimensionless; Initial value: 0.00355636
        double var_chaste_interface__Transient_Outward_K_Current__x_to_s = rY[7];
        // Units: dimensionless; Initial value: 0.0003592503
        double var_chaste_interface__Transient_Outward_K_Current__y_to_s = rY[8];
        // Units: dimensionless; Initial value: 0.8161309
        double var_chaste_interface__Transient_Outward_K_Current__x_to_f = rY[9];
        // Units: dimensionless; Initial value: 0.0003592405
        double var_chaste_interface__Transient_Outward_K_Current__y_to_f = rY[10];
        // Units: dimensionless; Initial value: 0.9999976
        double var_chaste_interface__L_Type_Calcium_Current__d = rY[11];
        // Units: dimensionless; Initial value: 1.879996e-06
        double var_chaste_interface__L_Type_Calcium_Current__f = rY[12];
        // Units: dimensionless; Initial value: 0.9789409
        double var_chaste_interface__L_Type_Calcium_Current__f_2 = rY[13];
        // Units: dimensionless; Initial value: 0.9993986
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j = rY[14];
        // Units: dimensionless; Initial value: 0.02861794
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl = rY[15];
        // Units: dimensionless; Initial value: 0.0169833
        double var_chaste_interface__Sodium_Concentrations__Na_j = rY[30];
        // Units: millimolar; Initial value: 10.0211
        double var_chaste_interface__Sodium_Concentrations__Na_sl = rY[31];
        // Units: millimolar; Initial value: 10.01974
        double var_chaste_interface__Sodium_Concentrations__Na_i = rY[32];
        // Units: millimolar; Initial value: 10.01989
        double var_chaste_interface__Calcium_Concentrations__Ca_j = rY[35];
        // Units: millimolar; Initial value: 0.0002048633
        double var_chaste_interface__Calcium_Concentrations__Ca_sl = rY[36];
        // Units: millimolar; Initial value: 0.0001188246
        

        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_Nerst_Potentials__E_K = 26.712338705498265 * log(mParameters[3] / mParameters[1]); // millivolt
        const double var_Nerst_Potentials__E_Ks = 26.712338705498265 * log((0.018329999999999999 * mParameters[4] + mParameters[3]) / (0.018329999999999999 * var_chaste_interface__Sodium_Concentrations__Na_i + mParameters[1])); // millivolt
        const double var_Nerst_Potentials__E_Na_junc = 26.712338705498265 * log(mParameters[4] / var_chaste_interface__Sodium_Concentrations__Na_j); // millivolt
        const double var_Nerst_Potentials__E_Na_sl = 26.712338705498265 * log(mParameters[4] / var_chaste_interface__Sodium_Concentrations__Na_sl); // millivolt
        const double var_Na_Ca_Exchanger_Current__I_ncx_junc = 0.11 * (pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) * mParameters[2] * _lt_0_row[0] - pow(mParameters[4], 3) * var_chaste_interface__Calcium_Concentrations__Ca_j * _lt_0_row[1]) * mParameters[13] / ((_lt_0_row[2]) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2)) * (1.3 * pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) + pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) * mParameters[2] + pow(mParameters[4], 3) * var_chaste_interface__Calcium_Concentrations__Ca_j + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Calcium_Concentrations__Ca_j) * var_chaste_interface__Calcium_Concentrations__Ca_j + 0.0035899999999999999 * pow(mParameters[4], 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3)))); // picoA_per_picoF
        const double var_Calcium_Concentrations__I_Ca_tot_junc = 6.0643000000000002e-5 * var_chaste_interface__membrane__V - 2.0 * var_Na_Ca_Exchanger_Current__I_ncx_junc - 0.00080995817805876559 * log(mParameters[2] / var_chaste_interface__Calcium_Concentrations__Ca_j) + 0.0074029999999999999 * pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 1.6000000000000001) / (5.2281977629563632e-6 + pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 1.6000000000000001)) + 0.90000000000000002 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_j * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.71831868267118426 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_j * _lt_0_row[8]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[9]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2; // picoA_per_picoF
        const double var_Na_Ca_Exchanger_Current__I_ncx_sl = 0.89000000000000001 * (pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) * mParameters[2] * _lt_0_row[0] - pow(mParameters[4], 3) * var_chaste_interface__Calcium_Concentrations__Ca_sl * _lt_0_row[1]) * mParameters[13] / ((_lt_0_row[2]) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 2)) * (1.3 * pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) + pow(mParameters[4], 3) * var_chaste_interface__Calcium_Concentrations__Ca_sl + pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) * mParameters[2] + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Calcium_Concentrations__Ca_sl) * var_chaste_interface__Calcium_Concentrations__Ca_sl + 0.0035899999999999999 * pow(mParameters[4], 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3)))); // picoA_per_picoF
        const double var_Calcium_Concentrations__I_Ca_tot_sl = 0.00049065700000000003 * var_chaste_interface__membrane__V - 2.0 * var_Na_Ca_Exchanger_Current__I_ncx_sl - 0.0065532979861118307 * log(mParameters[2] / var_chaste_interface__Calcium_Concentrations__Ca_sl) + 0.059896999999999999 * pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 1.6000000000000001) / (5.2281977629563632e-6 + pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 1.6000000000000001)) + 0.099999999999999978 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_sl * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.71831868267118426 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_sl * _lt_0_row[8]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[9]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2; // picoA_per_picoF
        const double var_Na_K_Pump_Current__f_NaK = 1 / (1.0 + _lt_0_row[4] + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * mParameters[4])) * _lt_0_row[3]); // dimensionless
        const double var_Na_K_Pump_Current__I_NaK_junc = 0.11 * mParameters[14] * var_Na_K_Pump_Current__f_NaK * mParameters[3] / ((1.0 + 14641.0 / pow(var_chaste_interface__Sodium_Concentrations__Na_j, 4)) * (1.5 + mParameters[3])); // picoA_per_picoF
        const double var_Na_K_Pump_Current__I_NaK_sl = 0.89000000000000001 * mParameters[14] * var_Na_K_Pump_Current__f_NaK * mParameters[3] / ((1.0 + 14641.0 / pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 4)) * (1.5 + mParameters[3])); // picoA_per_picoF
        const double var_Sodium_Concentrations__I_Na_tot_junc = 3.0 * var_Na_Ca_Exchanger_Current__I_ncx_junc + 3.0 * var_Na_K_Pump_Current__I_NaK_junc + 6.567e-5 * var_chaste_interface__membrane__V - 6.567e-5 * var_Nerst_Potentials__E_Na_junc + 0.11 * pow(var_chaste_interface__Fast_Na_Current__m, 3) * (-var_Nerst_Potentials__E_Na_junc + var_chaste_interface__membrane__V) * mParameters[7] * var_chaste_interface__Fast_Na_Current__h * var_chaste_interface__Fast_Na_Current__j + 0.90000000000000002 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_j * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_j * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_j * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (1.0971453706510394e-5 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_j * _lt_0_row[6]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[7]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2; // picoA_per_picoF
        const double var_Sodium_Concentrations__I_Na_tot_sl = 3.0 * var_Na_Ca_Exchanger_Current__I_ncx_sl + 3.0 * var_Na_K_Pump_Current__I_NaK_sl + 0.00053133 * var_chaste_interface__membrane__V - 0.00053133 * var_Nerst_Potentials__E_Na_sl + 0.099999999999999978 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_sl * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_sl * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_sl * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (1.0971453706510394e-5 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_sl * _lt_0_row[6]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[7]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 + 0.89000000000000001 * pow(var_chaste_interface__Fast_Na_Current__m, 3) * (-var_Nerst_Potentials__E_Na_sl + var_chaste_interface__membrane__V) * mParameters[7] * var_chaste_interface__Fast_Na_Current__h * var_chaste_interface__Fast_Na_Current__j; // picoA_per_picoF
        d_dt_chaste_interface_var_membrane__V = -0.5535668961205934 - var_Calcium_Concentrations__I_Ca_tot_junc - var_Calcium_Concentrations__I_Ca_tot_sl - var_Sodium_Concentrations__I_Na_tot_junc - var_Sodium_Concentrations__I_Na_tot_sl + 2.0 * var_Na_K_Pump_Current__I_NaK_junc + 2.0 * var_Na_K_Pump_Current__I_NaK_sl - 0.0089999999999999993 * var_chaste_interface__membrane__V - GetIntracellularAreaStimulus(var_chaste_interface__environment__t) / HeartConfig::Instance()->GetCapacitance() - 0.002 * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) / (_lt_0_row[5]) - 0.048783569999999998 * (61.507432902288166 + var_chaste_interface__membrane__V) / (1.0 + 0.10000000000000001 / var_chaste_interface__Calcium_Concentrations__Ca_sl) - 0.0060294299999999997 * (61.507432902288166 + var_chaste_interface__membrane__V) / (1.0 + 0.10000000000000001 / var_chaste_interface__Calcium_Concentrations__Ca_j) - pow(var_chaste_interface__Slowly_Activating_K_Current__x_Ks, 2) * (-var_Nerst_Potentials__E_Ks + var_chaste_interface__membrane__V) * mParameters[11] - (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * mParameters[8] * var_chaste_interface__Transient_Outward_K_Current__x_to_f * var_chaste_interface__Transient_Outward_K_Current__y_to_f - (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * mParameters[12] * var_chaste_interface__Transient_Outward_K_Current__x_to_s * var_chaste_interface__Transient_Outward_K_Current__y_to_s - (1.0 - 0.099999999999999978 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl - 0.90000000000000002 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (5.2753173749999997e-10 * (-mParameters[3] + mParameters[1] * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 5.2753173749999997e-10 * (-mParameters[3] + mParameters[1] * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 5.2753173749999997e-10 * (-mParameters[3] + mParameters[1] * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.00019748616671718709 * (-mParameters[3] + mParameters[1] * _lt_0_row[6]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[7]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 - 0.43033148291193518 * sqrt(mParameters[3]) * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * mParameters[10] * var_chaste_interface__Rapidly_Activating_K_Current__x_Kr / (_lt_0_row[10]) - 1.7616910247448803 * sqrt(mParameters[3]) * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * mParameters[9] / ((1.0 + exp(-6.0745197599999994 + 0.12164999999999999 * var_chaste_interface__membrane__V - 0.12164999999999999 * var_Nerst_Potentials__E_K)) * (4.0937999999999999 / (1.0 + exp(-6.0745197599999994 + 0.12164999999999999 * var_chaste_interface__membrane__V - 0.12164999999999999 * var_Nerst_Potentials__E_K)) + (15.7197 * exp(-0.21949596900000001 + 0.067390000000000005 * var_chaste_interface__membrane__V - 0.067390000000000005 * var_Nerst_Potentials__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_Nerst_Potentials__E_K)) / (1.0 + exp(-2.3135610949999998 + 0.16284999999999999 * var_Nerst_Potentials__E_K - 0.16284999999999999 * var_chaste_interface__membrane__V)))); // millivolt / millisecond

        return d_dt_chaste_interface_var_membrane__V;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative0(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -84.10546
            double var_chaste_interface__Fast_Na_Current__m = rY[2];
            // Units: dimensionless; Initial value: 0.002176608
            double var_chaste_interface__Fast_Na_Current__h = rY[3];
            // Units: dimensionless; Initial value: 0.7126555
            double var_chaste_interface__Fast_Na_Current__j = rY[4];
            // Units: dimensionless; Initial value: 0.7119893
            double var_chaste_interface__Rapidly_Activating_K_Current__x_Kr = rY[5];
            // Units: dimensionless; Initial value: 0.01896559
            double var_chaste_interface__Slowly_Activating_K_Current__x_Ks = rY[6];
            // Units: dimensionless; Initial value: 0.00355636
            double var_chaste_interface__Transient_Outward_K_Current__x_to_s = rY[7];
            // Units: dimensionless; Initial value: 0.0003592503
            double var_chaste_interface__Transient_Outward_K_Current__y_to_s = rY[8];
            // Units: dimensionless; Initial value: 0.8161309
            double var_chaste_interface__Transient_Outward_K_Current__x_to_f = rY[9];
            // Units: dimensionless; Initial value: 0.0003592405
            double var_chaste_interface__Transient_Outward_K_Current__y_to_f = rY[10];
            // Units: dimensionless; Initial value: 0.9999976
            double var_chaste_interface__L_Type_Calcium_Current__d = rY[11];
            // Units: dimensionless; Initial value: 1.879996e-06
            double var_chaste_interface__L_Type_Calcium_Current__f = rY[12];
            // Units: dimensionless; Initial value: 0.9789409
            double var_chaste_interface__L_Type_Calcium_Current__f_2 = rY[13];
            // Units: dimensionless; Initial value: 0.9993986
            double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j = rY[14];
            // Units: dimensionless; Initial value: 0.02861794
            double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl = rY[15];
            // Units: dimensionless; Initial value: 0.0169833
            double var_chaste_interface__Sodium_Concentrations__Na_j = rY[30];
            // Units: millimolar; Initial value: 10.0211
            double var_chaste_interface__Sodium_Concentrations__Na_sl = rY[31];
            // Units: millimolar; Initial value: 10.01974
            double var_chaste_interface__Calcium_Concentrations__Ca_j = rY[35];
            // Units: millimolar; Initial value: 0.0002048633
            double var_chaste_interface__Calcium_Concentrations__Ca_sl = rY[36];
            // Units: millimolar; Initial value: 0.0001188246
            

        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

            const double var_x0 = -mParameters[2];
            const double var_x1 = exp(9.9999999999999995e-8);
            const double var_x2 = var_x0 + var_x1 * var_chaste_interface__Calcium_Concentrations__Ca_sl;
            const double var_x3 = 1 / (-1.0 + var_x1);
            const double var_x4 = 0.35915934133559213 * mParameters[5];
            const double var_x5 = var_x3 * var_x4;
            const double var_x6 = exp(-9.9999999999999995e-8);
            const double var_x7 = var_x0 + var_x6 * var_chaste_interface__Calcium_Concentrations__Ca_sl;
            const double var_x8 = 1 / (-1.0 + var_x6);
            const double var_x9 = var_x4 * var_x8;
            const double var_x10 = var_x2 * var_x5 + var_x7 * var_x9;
            const double var_x11 = 0.099999999999999978 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl;
            const double var_x12 = -0.099999999999999978 + var_x11;
            const double var_x13 = var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2;
            const double var_x14 = var_x12 * var_x13;
            const double var_x15 = var_x14 * var_chaste_interface__L_Type_Calcium_Current__d;
            const double var_x16 = var_x0 + var_x1 * var_chaste_interface__Calcium_Concentrations__Ca_j;
            const double var_x17 = var_x0 + var_x6 * var_chaste_interface__Calcium_Concentrations__Ca_j;
            const double var_x18 = var_x16 * var_x5 + var_x17 * var_x9;
            const double var_x19 = 0.90000000000000002 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j;
            const double var_x20 = -0.90000000000000002 + var_x19;
            const double var_x21 = var_x13 * var_x20;
            const double var_x22 = var_x21 * var_chaste_interface__L_Type_Calcium_Current__d;
            const double var_x23 = -mParameters[4];
            const double var_x24 = var_x23 + var_x1 * var_chaste_interface__Sodium_Concentrations__Na_sl;
            const double var_x25 = 5.4857268532551972e-6 * mParameters[5];
            const double var_x26 = var_x25 * var_x3;
            const double var_x27 = var_x23 + var_x6 * var_chaste_interface__Sodium_Concentrations__Na_sl;
            const double var_x28 = var_x25 * var_x8;
            const double var_x29 = var_x24 * var_x26 + var_x27 * var_x28;
            const double var_x30 = var_x23 + var_x1 * var_chaste_interface__Sodium_Concentrations__Na_j;
            const double var_x31 = var_x23 + var_x6 * var_chaste_interface__Sodium_Concentrations__Na_j;
            const double var_x32 = var_x26 * var_x30 + var_x28 * var_x31;
            const double var_x33 = 9.8743083358593546e-5 * mParameters[5];
            const double var_x34 = -mParameters[3];
            const double var_x35 = var_x3 * (var_x34 + var_x1 * mParameters[1]);
            const double var_x36 = var_x8 * (var_x34 + var_x6 * mParameters[1]);
            const double var_x37 = -var_x11;
            const double var_x38 = -var_x19;
            const double var_x39 = 1.0 + var_x37 + var_x38;
            const double var_x40 = var_x13 * var_chaste_interface__L_Type_Calcium_Current__d;
            const double var_x41 = var_x39 * var_x40;
            const double var_x42 = exp(7.4880000000000004 - 0.16722408026755853 * var_chaste_interface__membrane__V);
            const double var_x43 = 1.0 + var_x42;
            const double var_x44 = 1 / var_chaste_interface__Calcium_Concentrations__Ca_sl;
            const double var_x45 = 1.0 + 0.10000000000000001 * var_x44;
            const double var_x46 = 1 / var_chaste_interface__Calcium_Concentrations__Ca_j;
            const double var_x47 = 1.0 + 0.10000000000000001 * var_x46;
            const double var_x48 = pow(var_chaste_interface__Slowly_Activating_K_Current__x_Ks, 2) * mParameters[11];
            const double var_x49 = mParameters[8] * var_chaste_interface__Transient_Outward_K_Current__y_to_f;
            const double var_x50 = mParameters[12] * var_chaste_interface__Transient_Outward_K_Current__y_to_s;
            const double var_x51 = log(mParameters[3] / mParameters[1]);
            const double var_x52 = 26.712338705498265 * var_x51;
            const double var_x53 = -var_x52 + var_chaste_interface__membrane__V;
            const double var_x54 = pow(var_chaste_interface__Fast_Na_Current__m, 3);
            const double var_x55 = var_x54 * mParameters[7] * var_chaste_interface__Fast_Na_Current__j;
            const double var_x56 = var_x55 * var_chaste_interface__Fast_Na_Current__h;
            const double var_x57 = sqrt(mParameters[3]);
            const double var_x58 = var_x57 * mParameters[10] * var_chaste_interface__Rapidly_Activating_K_Current__x_Kr;
            const double var_x59 = exp(3.0833333333333335 + 0.041666666666666664 * var_chaste_interface__membrane__V);
            const double var_x60 = 1.0 + var_x59;
            const double var_x61 = 0.43033148291193518 / var_x60;
            const double var_x62 = exp(-6.0745197599999994 + 0.12164999999999999 * var_chaste_interface__membrane__V - 3.2495560035238635 * var_x51);
            const double var_x63 = 1.0 + var_x62;
            const double var_x64 = 1 / var_x63;
            const double var_x65 = exp(-2.3135610949999998 + 4.350104358190392 * var_x51 - 0.16284999999999999 * var_chaste_interface__membrane__V);
            const double var_x66 = 1.0 + var_x65;
            const double var_x67 = 1 / var_x66;
            const double var_x68 = exp(-0.21949596900000001 + 0.067390000000000005 * var_chaste_interface__membrane__V - 1.8001445053635281 * var_x51);
            const double var_x69 = exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 1.6494869150645177 * var_x51);
            const double var_x70 = var_x69 + 15.7197 * var_x68;
            const double var_x71 = var_x67 * var_x70;
            const double var_x72 = var_x57 * mParameters[9] / (var_x71 + 4.0937999999999999 * var_x64);
            const double var_x73 = _lt_0_row[0];
            const double var_x74 = pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3);
            const double var_x75 = var_x74 * mParameters[2];
            const double var_x76 = var_x73 * var_x75;
            const double var_x77 = _lt_0_row[1];
            const double var_x78 = pow(mParameters[4], 3);
            const double var_x79 = var_x78 * var_chaste_interface__Calcium_Concentrations__Ca_j;
            const double var_x80 = var_x77 * var_x79;
            const double var_x81 = 1.0 + 0.32000000000000001 * var_x77;
            const double var_x82 = mParameters[13] / var_x81;
            const double var_x83 = pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2);
            const double var_x84 = 1 / var_x83;
            const double var_x85 = 1.0 + 2.2499999999999996e-8 * var_x84;
            const double var_x86 = 1 / var_x85;
            const double var_x87 = (1.0 + 278.55153203342621 * var_chaste_interface__Calcium_Concentrations__Ca_j) * var_chaste_interface__Calcium_Concentrations__Ca_j;
            const double var_x88 = 1.0 + 0.00053869674493876331 * var_x74;
            const double var_x89 = 0.0035899999999999999 * var_x78;
            const double var_x90 = 1 / (var_x75 + var_x79 + 669921.875 * var_x87 + 1.3 * var_x74 + var_x88 * var_x89);
            const double var_x91 = var_x86 * var_x90;
            const double var_x92 = var_x82 * var_x91;
            const double var_x93 = var_x92 * (0.010107688547106707 * var_x76 + 0.027328194960695912 * var_x80);
            const double var_x94 = pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3);
            const double var_x95 = var_x94 * mParameters[2];
            const double var_x96 = var_x73 * var_x95;
            const double var_x97 = var_x78 * var_chaste_interface__Calcium_Concentrations__Ca_sl;
            const double var_x98 = var_x77 * var_x97;
            const double var_x99 = pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, (-2));
            const double var_x100 = 1.0 + 2.2499999999999996e-8 * var_x99;
            const double var_x101 = 1 / var_x100;
            const double var_x102 = (1.0 + 278.55153203342621 * var_chaste_interface__Calcium_Concentrations__Ca_sl) * var_chaste_interface__Calcium_Concentrations__Ca_sl;
            const double var_x103 = 1.0 + 0.00053869674493876331 * var_x94;
            const double var_x104 = 1 / (var_x95 + var_x97 + 669921.875 * var_x102 + 1.3 * var_x94 + var_x103 * var_x89);
            const double var_x105 = var_x101 * var_x104;
            const double var_x106 = var_x105 * var_x82;
            const double var_x107 = var_x106 * (0.010107688547106707 * var_x96 + 0.027328194960695912 * var_x98);
            const double var_x108 = var_x62 / pow(var_x63, 2);
            const double var_x109 = pow(var_chaste_interface__Sodium_Concentrations__Na_j, (-4));
            const double var_x110 = exp(-0.003743588350780262 * var_chaste_interface__membrane__V);
            const double var_x111 = exp(0.01485884101040119 * mParameters[4]);
            const double var_x112 = 0.037435883507802616 * var_chaste_interface__membrane__V;
            const double var_x113 = exp(-var_x112);
            const double var_x114 = 1.0 + 0.1245 * var_x110 + 0.036499999999999998 * var_x113 * (-0.14285714285714285 + 0.14285714285714285 * var_x111);
            const double var_x115 = mParameters[14] * mParameters[3] / (1.5 + mParameters[3]);
            const double var_x116 = var_x115 * (0.00046607674967214262 * var_x110 + 0.037435883507802616 * var_x113 * (-0.0052142857142857138 + 0.0052142857142857138 * var_x111)) / pow(var_x114, 2);
            const double var_x117 = var_x116 / (1.0 + 14641.0 * var_x109);
            const double var_x118 = pow(var_chaste_interface__Sodium_Concentrations__Na_sl, (-4));
            const double var_x119 = var_x116 / (1.0 + 14641.0 * var_x118);
            const double var_x120 = var_x96 - var_x98;
            const double var_x121 = var_x77 * mParameters[13] / pow(var_x81, 2);
            const double var_x122 = var_x105 * var_x120 * var_x121;
            const double var_x123 = var_x53 * var_x57;
            const double var_x124 = var_x76 - var_x80;
            const double var_x125 = var_x121 * var_x124 * var_x91;
            const double var_x126 = -0.010148299999999999 - var_x48 - var_x56 - 0.002 / var_x43 - 0.11 * var_x117 - 0.11 * var_x93 - 0.89000000000000001 * var_x107 - 0.89000000000000001 * var_x119 - 0.048783569999999998 / var_x45 - 0.0077830699248061953 * var_x122 - 0.0060294299999999997 / var_x47 - 0.00096195246261649608 * var_x125 - var_x49 * var_chaste_interface__Transient_Outward_K_Current__x_to_f - var_x50 * var_chaste_interface__Transient_Outward_K_Current__x_to_s - var_x58 * var_x61 - 1.7616910247448803 * var_x64 * var_x72 + 0.21430971316021466 * var_x108 * var_x53 * var_x72 - 0.00033444816053511704 * var_x42 * var_x53 / pow(var_x43, 2) + 0.017930478454663966 * var_x53 * var_x58 * var_x59 / pow(var_x60, 2) - 0.1051178569817615 * var_x123 * var_x64 * (0.49801076999999994 * var_x108 - var_x67 * (0.061749999999999999 * var_x69 + 1.0593505830000001 * var_x68) - 0.16284999999999999 * var_x65 * var_x70 / pow(var_x66, 2)) * mParameters[9] / pow((var_x64 + 0.2442718256876252 * var_x71), 2);
            const double var_x127 = var_x126 + var_x15 * var_x29 + var_x22 * var_x32 + var_x41 * (-var_x33 * var_x35 - var_x33 * var_x36);
            const double var_x128 = fabs(var_chaste_interface__membrane__V);
            const double var_x129 = var_x128 < 1.3356169352749131e-6;
            const double var_x130 = _lt_0_row[8];
            const double var_x131 = -1.0 + var_x130;
            const double var_x132 = 1 / var_x131;
            const double var_x133 = var_x40 * mParameters[5];
            const double var_x134 = var_x132 * var_x133;
            const double var_x135 = 1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl;
            const double var_x136 = var_x130 * var_chaste_interface__Calcium_Concentrations__Ca_sl;
            const double var_x137 = var_x0 + var_x136;
            const double var_x138 = var_x135 * var_x137;
            const double var_x139 = 0.071831868267118404 * var_x138;
            const double var_x140 = var_x134 * var_x139;
            const double var_x141 = 1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j;
            const double var_x142 = var_x130 * var_chaste_interface__Calcium_Concentrations__Ca_j;
            const double var_x143 = var_x0 + var_x142;
            const double var_x144 = var_x141 * var_x143;
            const double var_x145 = 0.64648681440406586 * var_x144;
            const double var_x146 = var_x134 * var_x145;
            const double var_x147 = var_x133 * var_chaste_interface__membrane__V;
            const double var_x148 = var_x130 * var_x147 / pow(var_x131, 2);
            const double var_x149 = 0.048403610146722037 * var_x144 * var_x148;
            const double var_x150 = 0.0053781789051913368 * var_x138 * var_x148;
            const double var_x151 = var_x134 * var_chaste_interface__membrane__V;
            const double var_x152 = 0.048403610146722037 * var_x141 * var_x142 * var_x151;
            const double var_x153 = 0.0053781789051913368 * var_x135 * var_x136 * var_x151;
            const double var_x154 = var_x149 + var_x150 - var_x140 - var_x146 - var_x152 - var_x153;
            const double var_x155 = var_x128 < 2.6712338705498262e-6;
            const double var_x156 = exp(var_x112);
            const double var_x157 = -1.0 + var_x156;
            const double var_x158 = 1 / var_x157;
            const double var_x159 = var_x133 * var_x158;
            const double var_x160 = var_x156 * var_chaste_interface__Sodium_Concentrations__Na_sl;
            const double var_x161 = var_x160 + var_x23;
            const double var_x162 = var_x135 * var_x161;
            const double var_x163 = 1.0971453706510391e-6 * var_x162;
            const double var_x164 = var_x159 * var_x163;
            const double var_x165 = var_x156 * var_chaste_interface__Sodium_Concentrations__Na_j;
            const double var_x166 = var_x165 + var_x23;
            const double var_x167 = var_x141 * var_x166;
            const double var_x168 = 9.8743083358593546e-6 * var_x167;
            const double var_x169 = var_x159 * var_x168;
            const double var_x170 = var_x156 * mParameters[1];
            const double var_x171 = var_x170 + var_x34;
            const double var_x172 = var_x171 * var_x41;
            const double var_x173 = var_x158 * mParameters[5];
            const double var_x174 = 0.00019748616671718709 * var_x173;
            const double var_x175 = var_x156 / pow(var_x157, 2);
            const double var_x176 = var_x147 * var_x175;
            const double var_x177 = 4.1072606286817228e-8 * var_x162 * var_x176;
            const double var_x178 = 3.6965345658135516e-7 * var_x167 * var_x176;
            const double var_x179 = 7.3930691316271029e-6 * var_chaste_interface__membrane__V;
            const double var_x180 = var_x159 * var_chaste_interface__membrane__V;
            const double var_x181 = 4.1072606286817228e-8 * var_x135 * var_x160 * var_x180;
            const double var_x182 = 3.6965345658135516e-7 * var_x141 * var_x165 * var_x180;
            
            partialF = ((var_x129) ? (var_x127 + var_x10 * var_x15 + var_x18 * var_x22) : ((var_x155) ? (var_x127 + var_x154) : (var_x126 + var_x154 + var_x177 + var_x178 - var_x164 - var_x169 - var_x181 - var_x182 - var_x172 * var_x174 + var_x172 * var_x175 * var_x179 * mParameters[5] - var_x170 * var_x173 * var_x179 * var_x41)));
        }
        else
        {
            const double y_save = rY[0];
            rY[0] += delta;
            const double temp = EvaluateYDerivative0(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[0])/delta;
            rY[0] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative1(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Calcium_Concentrations__Ca_i = rY[1];
        // Units: millimolar; Initial value: 9.719632e-05
        double var_chaste_interface__Cytosolic_Ca_Buffers__TnC_l = rY[19];
        // Units: millimolar; Initial value: 0.009811535
        double var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_c = rY[20];
        // Units: millimolar; Initial value: 0.1225802
        double var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_m = rY[21];
        // Units: millimolar; Initial value: 0.008128604
        double var_chaste_interface__Cytosolic_Ca_Buffers__CaM = rY[22];
        // Units: millimolar; Initial value: 0.0003288063
        double var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c = rY[23];
        // Units: millimolar; Initial value: 0.002522168
        double var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m = rY[24];
        // Units: millimolar; Initial value: 0.1369514
        double var_chaste_interface__Cytosolic_Ca_Buffers__SRB = rY[25];
        // Units: millimolar; Initial value: 0.00238683
        double var_chaste_interface__Calcium_Concentrations__Ca_sl = rY[36];
        // Units: millimolar; Initial value: 0.0001188246
        double var_chaste_interface__Calcium_Concentrations__Ca_SR = rY[37];
        // Units: millimolar; Initial value: 0.6138856
        


        // Mathematics
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__CaM = -0.23799999999999999 * var_chaste_interface__Cytosolic_Ca_Buffers__CaM + 34.0 * (0.024 - var_chaste_interface__Cytosolic_Ca_Buffers__CaM) * var_chaste_interface__Calcium_Concentrations__Ca_i; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_c = -0.00046000000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c + 13.800000000000001 * (0.14000000000000001 - var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c - var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m) * var_chaste_interface__Calcium_Concentrations__Ca_i; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__SRB = -0.059999999999999998 * var_chaste_interface__Cytosolic_Ca_Buffers__SRB + 100.0 * (0.017100000000000001 - var_chaste_interface__Cytosolic_Ca_Buffers__SRB) * var_chaste_interface__Calcium_Concentrations__Ca_i; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_h_c = -3.1999999999999999e-5 * var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_c + 2.3700000000000001 * (0.14000000000000001 - var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_c - var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_m) * var_chaste_interface__Calcium_Concentrations__Ca_i; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_l = -0.019599999999999999 * var_chaste_interface__Cytosolic_Ca_Buffers__TnC_l + 32.700000000000003 * (0.070000000000000007 - var_chaste_interface__Cytosolic_Ca_Buffers__TnC_l) * var_chaste_interface__Calcium_Concentrations__Ca_i; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_m = 0.0021979999999999999 - 0.015699999999999999 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c - 0.015757 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_h_m = 0.00042000000000000007 - 0.0030000000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_c - 0.0063300000000000006 * var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_m; // millimolar / millisecond
        const double var_SR_Fluxes__J_ser_Ca = (2814485.1633595936 * pow(var_chaste_interface__Calcium_Concentrations__Ca_i, 1.7869999999999999) - 0.38742512113256738 * pow(var_chaste_interface__Calcium_Concentrations__Ca_SR, 1.7869999999999999)) * mParameters[0] / (1.0 + 0.38742512113256738 * pow(var_chaste_interface__Calcium_Concentrations__Ca_SR, 1.7869999999999999) + 2814485.1633595936 * pow(var_chaste_interface__Calcium_Concentrations__Ca_i, 1.7869999999999999)); // milliM_per_millis
        const double var_membrane__V_cell = 1.050625e-11 * M_PI; // liter
        const double var_membrane__V_myo = 0.65000000000000002 * var_membrane__V_cell; // liter
        const double var_membrane__V_sr = 0.035000000000000003 * var_membrane__V_cell; // liter
        const double d_dt_chaste_interface_var_Calcium_Concentrations__Ca_i = -d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__CaM - d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_c - d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_m - d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__SRB - d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_h_c - d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_h_m - d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_l + 3.7243000000000002e-12 * (-var_chaste_interface__Calcium_Concentrations__Ca_i + var_chaste_interface__Calcium_Concentrations__Ca_sl) / var_membrane__V_myo - var_SR_Fluxes__J_ser_Ca * var_membrane__V_sr / var_membrane__V_myo; // millimolar / millisecond

        return d_dt_chaste_interface_var_Calcium_Concentrations__Ca_i;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative1(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Calcium_Concentrations__Ca_i = rY[1];
            // Units: millimolar; Initial value: 9.719632e-05
            double var_chaste_interface__Cytosolic_Ca_Buffers__TnC_l = rY[19];
            // Units: millimolar; Initial value: 0.009811535
            double var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_c = rY[20];
            // Units: millimolar; Initial value: 0.1225802
            double var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_m = rY[21];
            // Units: millimolar; Initial value: 0.008128604
            double var_chaste_interface__Cytosolic_Ca_Buffers__CaM = rY[22];
            // Units: millimolar; Initial value: 0.0003288063
            double var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c = rY[23];
            // Units: millimolar; Initial value: 0.002522168
            double var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m = rY[24];
            // Units: millimolar; Initial value: 0.1369514
            double var_chaste_interface__Cytosolic_Ca_Buffers__SRB = rY[25];
            // Units: millimolar; Initial value: 0.00238683
            double var_chaste_interface__Calcium_Concentrations__Ca_SR = rY[37];
            // Units: millimolar; Initial value: 0.6138856
            


            const double var_x332 = 34.0 * var_chaste_interface__Cytosolic_Ca_Buffers__CaM;
            const double var_x333 = 100.0 * var_chaste_interface__Cytosolic_Ca_Buffers__SRB;
            const double var_x334 = 32.700000000000003 * var_chaste_interface__Cytosolic_Ca_Buffers__TnC_l;
            const double var_x335 = 2.3700000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_c;
            const double var_x336 = 2.3700000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_m;
            const double var_x337 = 13.800000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c;
            const double var_x338 = 13.800000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m;
            const double var_x339 = 1 / M_PI;
            const double var_x340 = 0.54536036242163555 * var_x339;
            const double var_x341 = pow(var_chaste_interface__Calcium_Concentrations__Ca_i, 0.78699999999999992);
            const double var_x342 = pow(var_chaste_interface__Calcium_Concentrations__Ca_SR, 1.7869999999999999);
            const double var_x343 = 0.38742512113256738 * var_x342;
            const double var_x344 = pow(var_chaste_interface__Calcium_Concentrations__Ca_i, 1.7869999999999999);
            const double var_x345 = 2814485.1633595936 * var_x344;
            const double var_x346 = mParameters[0] / (1.0 + var_x343 + var_x345);
            const double var_x347 = var_x341 * var_x346;
            const double var_x348 = (var_x345 - var_x343) * mParameters[0] / pow((3.5530476870814998e-7 + var_x344 + 1.3765399305573384e-7 * var_x342), 2);
            const double var_x349 = var_x341 * var_x348;
            
            partialF = -7.0788000000000011 + var_x332 + var_x333 + var_x334 + var_x335 + var_x336 + var_x337 + var_x338 - var_x340 + 3.4188518090540365e-8 * var_x349 - 270818.42237280885 * var_x347;
        }
        else
        {
            const double y_save = rY[1];
            rY[1] += delta;
            const double temp = EvaluateYDerivative1(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[1])/delta;
            rY[1] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative2(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -84.10546
        double var_chaste_interface__Fast_Na_Current__m = rY[2];
        // Units: dimensionless; Initial value: 0.002176608
        

        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double d_dt_chaste_interface_var_Fast_Na_Current__m = (-var_chaste_interface__Fast_Na_Current__m + _lt_0_row[14]) / (_lt_0_row[15]); // 1 / millisecond

        return d_dt_chaste_interface_var_Fast_Na_Current__m;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative2(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -84.10546
            


            const double var_x358 = exp(-0.0089012876052174655 * pow((-1 + 0.2073398299813394 * var_chaste_interface__membrane__V), 2));
            const double var_x359 = exp(-8.682389366752302 * pow((1 + 0.021838829438742085 * var_chaste_interface__membrane__V), 2));
            const double var_x362 = 0.12920000000000001 * var_x359;
            const double var_x363 = 0.064869999999999997 * var_x358;
            const double var_x364 = 1 / (var_x362 + var_x363);
            
            partialF = -var_x364;
        }
        else
        {
            const double y_save = rY[2];
            rY[2] += delta;
            const double temp = EvaluateYDerivative2(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[2])/delta;
            rY[2] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative3(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -84.10546
        double var_chaste_interface__Fast_Na_Current__h = rY[3];
        // Units: dimensionless; Initial value: 0.7126555
        

        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double d_dt_chaste_interface_var_Fast_Na_Current__h = (-var_chaste_interface__Fast_Na_Current__h + _lt_0_row[11]) * (_lt_0_row[12]); // 1 / millisecond

        return d_dt_chaste_interface_var_Fast_Na_Current__h;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative3(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -84.10546
            


            const double var_x365 = exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__membrane__V);
            const double var_x366 = 1.0 + var_x365;
            const double var_x371 = 1 / var_x366;
            const double var_x373 = var_chaste_interface__membrane__V >= -40.0;
            const double var_x374 = exp(0.34849999999999998 * var_chaste_interface__membrane__V);
            const double var_x375 = exp(0.079000000000000001 * var_chaste_interface__membrane__V);
            const double var_x376 = exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__membrane__V);
            const double var_x377 = 310000.0 * var_x374;
            const double var_x378 = 2.7000000000000002 * var_x375;
            const double var_x379 = 0.057000000000000002 * var_x376;
            
            partialF = ((var_x373) ? (-5.9230999999999998 * var_x371) : (-var_x377 - var_x378 - var_x379));
        }
        else
        {
            const double y_save = rY[3];
            rY[3] += delta;
            const double temp = EvaluateYDerivative3(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[3])/delta;
            rY[3] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative4(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -84.10546
        double var_chaste_interface__Fast_Na_Current__j = rY[4];
        // Units: dimensionless; Initial value: 0.7119893
        

        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double d_dt_chaste_interface_var_Fast_Na_Current__j = (-var_chaste_interface__Fast_Na_Current__j + _lt_0_row[11]) * (_lt_0_row[13]); // 1 / millisecond

        return d_dt_chaste_interface_var_Fast_Na_Current__j;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative4(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -84.10546
            


            const double var_x373 = var_chaste_interface__membrane__V >= -40.0;
            const double var_x382 = exp(-3.2000000000000002 - 0.10000000000000001 * var_chaste_interface__membrane__V);
            const double var_x383 = 1.0 + var_x382;
            const double var_x384 = exp(0.057000000000000002 * var_chaste_interface__membrane__V);
            const double var_x385 = var_x384 / var_x383;
            const double var_x386 = exp(0.24440000000000001 * var_chaste_interface__membrane__V);
            const double var_x387 = exp(-0.043909999999999998 * var_chaste_interface__membrane__V);
            const double var_x388 = -25428.0 * var_x386 - 6.9480000000000002e-6 * var_x387;
            const double var_x389 = exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V);
            const double var_x390 = 1.0 + var_x389;
            const double var_x391 = 1 / var_x390;
            const double var_x392 = var_x388 * var_x391;
            const double var_x393 = exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__membrane__V);
            const double var_x394 = 1.0 + var_x393;
            const double var_x395 = exp(-0.01052 * var_chaste_interface__membrane__V);
            const double var_x396 = var_x395 / var_x394;
            const double var_x397 = 37.780000000000001 + var_chaste_interface__membrane__V;
            const double var_x398 = 0.024240000000000001 * var_x396;
            const double var_x399 = var_x392 * var_x397;
            
            partialF = ((var_x373) ? (-0.59999999999999998 * var_x385) : (-var_x398 - var_x399));
        }
        else
        {
            const double y_save = rY[4];
            rY[4] += delta;
            const double temp = EvaluateYDerivative4(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[4])/delta;
            rY[4] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative5(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -84.10546
        double var_chaste_interface__Rapidly_Activating_K_Current__x_Kr = rY[5];
        // Units: dimensionless; Initial value: 0.01896559
        

        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double d_dt_chaste_interface_var_Rapidly_Activating_K_Current__x_Kr = (-var_chaste_interface__Rapidly_Activating_K_Current__x_Kr + _lt_0_row[22]) / (_lt_0_row[23]); // 1 / millisecond

        return d_dt_chaste_interface_var_Rapidly_Activating_K_Current__x_Kr;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative5(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -84.10546
            


            const double var_x400 = 0.050000000000000003 * var_chaste_interface__membrane__V;
            const double var_x401 = exp(2.0 + var_x400);
            const double var_x402 = 1.0 + var_x401;
            const double var_x403 = 1 / var_x402;
            const double var_x404 = 0.1111111111111111 * var_chaste_interface__membrane__V;
            const double var_x405 = exp(1.2222222222222223 + var_x404);
            const double var_x406 = 1.0 + var_x405;
            const double var_x407 = 1 / var_x406;
            const double var_x408 = exp(-2.4444444444444446 - var_x404);
            const double var_x409 = 1.0 + var_x408;
            const double var_x410 = 1 / var_x409;
            const double var_x411 = var_x407 * var_x410;
            const double var_x415 = 1 / (230.0 * var_x403 + 3300.0 * var_x411);
            
            partialF = -var_x415;
        }
        else
        {
            const double y_save = rY[5];
            rY[5] += delta;
            const double temp = EvaluateYDerivative5(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[5])/delta;
            rY[5] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative6(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -84.10546
        double var_chaste_interface__Slowly_Activating_K_Current__x_Ks = rY[6];
        // Units: dimensionless; Initial value: 0.00355636
        

        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double d_dt_chaste_interface_var_Slowly_Activating_K_Current__x_Ks = (_lt_0_row[25]) * (-var_chaste_interface__Slowly_Activating_K_Current__x_Ks + _lt_0_row[24]); // 1 / millisecond

        return d_dt_chaste_interface_var_Slowly_Activating_K_Current__x_Ks;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative6(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -84.10546
            


            const double var_x418 = exp(-0.17252124645892353 - 0.070821529745042494 * var_chaste_interface__membrane__V);
            const double var_x419 = 0.00100999899000101 * var_x418;
            
            partialF = -0.00100999899000101 - var_x419;
        }
        else
        {
            const double y_save = rY[6];
            rY[6] += delta;
            const double temp = EvaluateYDerivative6(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[6])/delta;
            rY[6] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative7(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -84.10546
        double var_chaste_interface__Transient_Outward_K_Current__x_to_s = rY[7];
        // Units: dimensionless; Initial value: 0.0003592503
        

        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_Transient_Outward_K_Current__x_to_ss = _lt_0_row[26]; // dimensionless
        const double d_dt_chaste_interface_var_Transient_Outward_K_Current__x_to_s = (-var_chaste_interface__Transient_Outward_K_Current__x_to_s + var_Transient_Outward_K_Current__x_to_ss) / (_lt_0_row[28]); // 1 / millisecond

        return d_dt_chaste_interface_var_Transient_Outward_K_Current__x_to_s;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative7(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -84.10546
            


            const double var_x420 = exp(0.20000000000000001 + 0.066666666666666666 * var_chaste_interface__membrane__V);
            const double var_x421 = 1.0 + var_x420;
            const double var_x422 = 1 / var_x421;
            const double var_x423 = 1 / (0.5 + 9.0 * var_x422);
            
            partialF = -var_x423;
        }
        else
        {
            const double y_save = rY[7];
            rY[7] += delta;
            const double temp = EvaluateYDerivative7(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[7])/delta;
            rY[7] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative8(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -84.10546
        double var_chaste_interface__Transient_Outward_K_Current__y_to_s = rY[8];
        // Units: dimensionless; Initial value: 0.8161309
        

        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_Transient_Outward_K_Current__y_to_ss = _lt_0_row[29]; // dimensionless
        const double d_dt_chaste_interface_var_Transient_Outward_K_Current__y_to_s = (-var_chaste_interface__Transient_Outward_K_Current__y_to_s + var_Transient_Outward_K_Current__y_to_ss) / (_lt_0_row[31]); // 1 / millisecond

        return d_dt_chaste_interface_var_Transient_Outward_K_Current__y_to_s;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative8(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -84.10546
            


            const double var_x429 = 0.10000000000000001 * var_chaste_interface__membrane__V;
            const double var_x430 = exp(6.0 + var_x429);
            const double var_x431 = 1.0 + var_x430;
            const double var_x432 = 1 / var_x431;
            const double var_x433 = 1 / (30.0 + 800.0 * var_x432);
            
            partialF = -var_x433;
        }
        else
        {
            const double y_save = rY[8];
            rY[8] += delta;
            const double temp = EvaluateYDerivative8(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[8])/delta;
            rY[8] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative9(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -84.10546
        double var_chaste_interface__Transient_Outward_K_Current__x_to_f = rY[9];
        // Units: dimensionless; Initial value: 0.0003592405
        

        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_Transient_Outward_K_Current__x_to_ss = _lt_0_row[26]; // dimensionless
        const double d_dt_chaste_interface_var_Transient_Outward_K_Current__x_to_f = (-var_chaste_interface__Transient_Outward_K_Current__x_to_f + var_Transient_Outward_K_Current__x_to_ss) / (_lt_0_row[27]); // 1 / millisecond

        return d_dt_chaste_interface_var_Transient_Outward_K_Current__x_to_f;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative9(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -84.10546
            


            const double var_x438 = exp(-0.81000000000000005 * pow((1 + 0.022222222222222223 * var_chaste_interface__membrane__V), 2));
            const double var_x439 = 1 / (0.5 + 8.5 * var_x438);
            
            partialF = -var_x439;
        }
        else
        {
            const double y_save = rY[9];
            rY[9] += delta;
            const double temp = EvaluateYDerivative9(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[9])/delta;
            rY[9] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative10(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -84.10546
        double var_chaste_interface__Transient_Outward_K_Current__y_to_f = rY[10];
        // Units: dimensionless; Initial value: 0.9999976
        

        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_Transient_Outward_K_Current__y_to_ss = _lt_0_row[29]; // dimensionless
        const double d_dt_chaste_interface_var_Transient_Outward_K_Current__y_to_f = (-var_chaste_interface__Transient_Outward_K_Current__y_to_f + var_Transient_Outward_K_Current__y_to_ss) / (_lt_0_row[30]); // 1 / millisecond

        return d_dt_chaste_interface_var_Transient_Outward_K_Current__y_to_f;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative10(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -84.10546
            


            const double var_x440 = exp(-7.2727272727272725 * pow((1 + 0.025000000000000001 * var_chaste_interface__membrane__V), 2));
            const double var_x441 = 1 / (7.0 + 85.0 * var_x440);
            
            partialF = -var_x441;
        }
        else
        {
            const double y_save = rY[10];
            rY[10] += delta;
            const double temp = EvaluateYDerivative10(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[10])/delta;
            rY[10] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative11(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -84.10546
        double var_chaste_interface__L_Type_Calcium_Current__d = rY[11];
        // Units: dimensionless; Initial value: 1.879996e-06
        

        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double d_dt_chaste_interface_var_L_Type_Calcium_Current__d = (-var_chaste_interface__L_Type_Calcium_Current__d + _lt_0_row[16]) / (_lt_0_row[17]); // 1 / millisecond

        return d_dt_chaste_interface_var_L_Type_Calcium_Current__d;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative11(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -84.10546
            


            const double var_x400 = 0.050000000000000003 * var_chaste_interface__membrane__V;
            const double var_x412 = 0.20000000000000001 * var_chaste_interface__membrane__V;
            const double var_x424 = -0.076923076923076927 * var_chaste_interface__membrane__V;
            const double var_x442 = exp(2.5 - var_x400);
            const double var_x443 = 1.0 + var_x442;
            const double var_x444 = 1 / var_x443;
            const double var_x445 = exp(1.0 + var_x412);
            const double var_x446 = 1.0 + var_x445;
            const double var_x447 = 1 / var_x446;
            const double var_x448 = exp(-2.6923076923076925 + var_x424);
            const double var_x449 = 1.0 + var_x448;
            const double var_x450 = 0.25 + 1.3999999999999999 / var_x449;
            const double var_x451 = var_x447 * var_x450;
            const double var_x454 = 1 / (var_x444 + 1.3999999999999999 * var_x451);
            
            partialF = -var_x454;
        }
        else
        {
            const double y_save = rY[11];
            rY[11] += delta;
            const double temp = EvaluateYDerivative11(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[11])/delta;
            rY[11] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative12(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -84.10546
        double var_chaste_interface__L_Type_Calcium_Current__f = rY[12];
        // Units: dimensionless; Initial value: 0.9789409
        

        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double d_dt_chaste_interface_var_L_Type_Calcium_Current__f = (-var_chaste_interface__L_Type_Calcium_Current__f + _lt_0_row[18]) / (_lt_0_row[19]); // 1 / millisecond

        return d_dt_chaste_interface_var_L_Type_Calcium_Current__f;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative12(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -84.10546
            


            const double var_x429 = 0.10000000000000001 * var_chaste_interface__membrane__V;
            const double var_x455 = exp(3.0 + var_x429);
            const double var_x456 = 1.0 + var_x455;
            const double var_x457 = 1 / var_x456;
            const double var_x458 = -var_x429;
            const double var_x459 = exp(1.3 + var_x458);
            const double var_x460 = 1.0 + var_x459;
            const double var_x461 = 1 / var_x460;
            const double var_x462 = exp(-3.2400000000000002 * pow((1 + 0.037037037037037035 * var_chaste_interface__membrane__V), 2));
            const double var_x467 = 1102.5 * var_x462;
            const double var_x468 = 1 / (20.0 + var_x467 + 200.0 * var_x461 + 180.0 * var_x457);
            
            partialF = -var_x468;
        }
        else
        {
            const double y_save = rY[12];
            rY[12] += delta;
            const double temp = EvaluateYDerivative12(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[12])/delta;
            rY[12] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative13(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -84.10546
        double var_chaste_interface__L_Type_Calcium_Current__f_2 = rY[13];
        // Units: dimensionless; Initial value: 0.9993986
        

        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double d_dt_chaste_interface_var_L_Type_Calcium_Current__f_2 = (0.33000000000000002 - var_chaste_interface__L_Type_Calcium_Current__f_2 + _lt_0_row[20]) / (_lt_0_row[21]); // 1 / millisecond

        return d_dt_chaste_interface_var_L_Type_Calcium_Current__f_2;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative13(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -84.10546
            


            const double var_x429 = 0.10000000000000001 * var_chaste_interface__membrane__V;
            const double var_x455 = exp(3.0 + var_x429);
            const double var_x456 = 1.0 + var_x455;
            const double var_x457 = 1 / var_x456;
            const double var_x458 = -var_x429;
            const double var_x469 = exp(2.5 + var_x458);
            const double var_x470 = 1.0 + var_x469;
            const double var_x471 = 1 / var_x470;
            const double var_x472 = exp(-3.6764705882352939 * pow((1 + 0.040000000000000001 * var_chaste_interface__membrane__V), 2));
            const double var_x475 = 300.0 * var_x472;
            const double var_x476 = 1 / (var_x475 + 16.0 * var_x457 + 31.0 * var_x471);
            
            partialF = -var_x476;
        }
        else
        {
            const double y_save = rY[13];
            rY[13] += delta;
            const double temp = EvaluateYDerivative13(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[13])/delta;
            rY[13] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative14(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j = rY[14];
        // Units: dimensionless; Initial value: 0.02861794
        double var_chaste_interface__Calcium_Concentrations__Ca_j = rY[35];
        // Units: millimolar; Initial value: 0.0002048633
        


        // Mathematics
        const double d_dt_chaste_interface_var_L_Type_Calcium_Current__f_Ca_B_j = -0.011900000000000001 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j + 1.7 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * var_chaste_interface__Calcium_Concentrations__Ca_j; // 1 / millisecond

        return d_dt_chaste_interface_var_L_Type_Calcium_Current__f_Ca_B_j;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative14(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Calcium_Concentrations__Ca_j = rY[35];
            // Units: millimolar; Initial value: 0.0002048633
            


            
            partialF = -0.011900000000000001 - 1.7 * var_chaste_interface__Calcium_Concentrations__Ca_j;
        }
        else
        {
            const double y_save = rY[14];
            rY[14] += delta;
            const double temp = EvaluateYDerivative14(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[14])/delta;
            rY[14] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative15(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl = rY[15];
        // Units: dimensionless; Initial value: 0.0169833
        double var_chaste_interface__Calcium_Concentrations__Ca_sl = rY[36];
        // Units: millimolar; Initial value: 0.0001188246
        


        // Mathematics
        const double d_dt_chaste_interface_var_L_Type_Calcium_Current__f_Ca_B_sl = -0.011900000000000001 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl + 1.7 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * var_chaste_interface__Calcium_Concentrations__Ca_sl; // 1 / millisecond

        return d_dt_chaste_interface_var_L_Type_Calcium_Current__f_Ca_B_sl;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative15(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Calcium_Concentrations__Ca_sl = rY[36];
            // Units: millimolar; Initial value: 0.0001188246
            


            
            partialF = -0.011900000000000001 - 1.7 * var_chaste_interface__Calcium_Concentrations__Ca_sl;
        }
        else
        {
            const double y_save = rY[15];
            rY[15] += delta;
            const double temp = EvaluateYDerivative15(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[15])/delta;
            rY[15] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative16(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__SR_Fluxes__Ry_Rr = rY[16];
        // Units: dimensionless; Initial value: 0.8888214
        double var_chaste_interface__SR_Fluxes__Ry_Ro = rY[17];
        // Units: dimensionless; Initial value: 1.149876e-06
        double var_chaste_interface__SR_Fluxes__Ry_Ri = rY[18];
        // Units: dimensionless; Initial value: 1.43831e-07
        double var_chaste_interface__Calcium_Concentrations__Ca_j = rY[35];
        // Units: millimolar; Initial value: 0.0002048633
        double var_chaste_interface__Calcium_Concentrations__Ca_SR = rY[37];
        // Units: millimolar; Initial value: 0.6138856
        


        // Mathematics
        const double var_SR_Fluxes__RI = 1.0 - var_chaste_interface__SR_Fluxes__Ry_Ri - var_chaste_interface__SR_Fluxes__Ry_Ro - var_chaste_interface__SR_Fluxes__Ry_Rr; // dimensionless
        const double var_SR_Fluxes__k_Ca_SR = 15.0 - 14.0 / (1.0 + 0.13584112963311223 * pow((1 / var_chaste_interface__Calcium_Concentrations__Ca_SR), 2.5)); // dimensionless
        const double var_SR_Fluxes__ki_SR_Ca = 0.5 * var_SR_Fluxes__k_Ca_SR; // per_milliM_per_millis
        const double var_SR_Fluxes__ko_SR_Ca = 10.0 / var_SR_Fluxes__k_Ca_SR; // per_milliM2_per_millis
        const double d_dt_chaste_interface_var_SR_Fluxes__Ry_Rr = 0.059999999999999998 * var_chaste_interface__SR_Fluxes__Ry_Ro + 0.0050000000000000001 * var_SR_Fluxes__RI - pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2) * var_chaste_interface__SR_Fluxes__Ry_Rr * var_SR_Fluxes__ko_SR_Ca - var_chaste_interface__Calcium_Concentrations__Ca_j * var_chaste_interface__SR_Fluxes__Ry_Rr * var_SR_Fluxes__ki_SR_Ca; // 1 / millisecond

        return d_dt_chaste_interface_var_SR_Fluxes__Ry_Rr;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative16(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Calcium_Concentrations__Ca_j = rY[35];
            // Units: millimolar; Initial value: 0.0002048633
            double var_chaste_interface__Calcium_Concentrations__Ca_SR = rY[37];
            // Units: millimolar; Initial value: 0.6138856
            


            const double var_x83 = pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2);
            const double var_x477 = 1 / var_chaste_interface__Calcium_Concentrations__Ca_SR;
            const double var_x478 = pow(var_x477, 2.5);
            const double var_x479 = 1.0 + 0.13584112963311223 * var_x478;
            const double var_x480 = 1 / var_x479;
            const double var_x481 = 7.0 * var_x480;
            const double var_x482 = -7.5 + var_x481;
            const double var_x483 = var_x482 * var_chaste_interface__Calcium_Concentrations__Ca_j;
            const double var_x484 = 1 / (15.0 - 14.0 * var_x480);
            const double var_x485 = 10.0 * var_x484 * var_x83;
            const double var_x486 = -var_x485;
            
            partialF = -0.0050000000000000001 + var_x483 + var_x486;
        }
        else
        {
            const double y_save = rY[16];
            rY[16] += delta;
            const double temp = EvaluateYDerivative16(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[16])/delta;
            rY[16] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative17(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__SR_Fluxes__Ry_Rr = rY[16];
        // Units: dimensionless; Initial value: 0.8888214
        double var_chaste_interface__SR_Fluxes__Ry_Ro = rY[17];
        // Units: dimensionless; Initial value: 1.149876e-06
        double var_chaste_interface__SR_Fluxes__Ry_Ri = rY[18];
        // Units: dimensionless; Initial value: 1.43831e-07
        double var_chaste_interface__Calcium_Concentrations__Ca_j = rY[35];
        // Units: millimolar; Initial value: 0.0002048633
        double var_chaste_interface__Calcium_Concentrations__Ca_SR = rY[37];
        // Units: millimolar; Initial value: 0.6138856
        


        // Mathematics
        const double var_SR_Fluxes__k_Ca_SR = 15.0 - 14.0 / (1.0 + 0.13584112963311223 * pow((1 / var_chaste_interface__Calcium_Concentrations__Ca_SR), 2.5)); // dimensionless
        const double var_SR_Fluxes__ki_SR_Ca = 0.5 * var_SR_Fluxes__k_Ca_SR; // per_milliM_per_millis
        const double var_SR_Fluxes__ko_SR_Ca = 10.0 / var_SR_Fluxes__k_Ca_SR; // per_milliM2_per_millis
        const double d_dt_chaste_interface_var_SR_Fluxes__Ry_Ro = 0.0050000000000000001 * var_chaste_interface__SR_Fluxes__Ry_Ri - 0.059999999999999998 * var_chaste_interface__SR_Fluxes__Ry_Ro + pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2) * var_chaste_interface__SR_Fluxes__Ry_Rr * var_SR_Fluxes__ko_SR_Ca - var_chaste_interface__Calcium_Concentrations__Ca_j * var_chaste_interface__SR_Fluxes__Ry_Ro * var_SR_Fluxes__ki_SR_Ca; // 1 / millisecond

        return d_dt_chaste_interface_var_SR_Fluxes__Ry_Ro;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative17(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Calcium_Concentrations__Ca_j = rY[35];
            // Units: millimolar; Initial value: 0.0002048633
            double var_chaste_interface__Calcium_Concentrations__Ca_SR = rY[37];
            // Units: millimolar; Initial value: 0.6138856
            


            const double var_x477 = 1 / var_chaste_interface__Calcium_Concentrations__Ca_SR;
            const double var_x478 = pow(var_x477, 2.5);
            const double var_x479 = 1.0 + 0.13584112963311223 * var_x478;
            const double var_x480 = 1 / var_x479;
            const double var_x481 = 7.0 * var_x480;
            const double var_x482 = -7.5 + var_x481;
            const double var_x483 = var_x482 * var_chaste_interface__Calcium_Concentrations__Ca_j;
            
            partialF = -0.059999999999999998 + var_x483;
        }
        else
        {
            const double y_save = rY[17];
            rY[17] += delta;
            const double temp = EvaluateYDerivative17(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[17])/delta;
            rY[17] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative18(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__SR_Fluxes__Ry_Rr = rY[16];
        // Units: dimensionless; Initial value: 0.8888214
        double var_chaste_interface__SR_Fluxes__Ry_Ro = rY[17];
        // Units: dimensionless; Initial value: 1.149876e-06
        double var_chaste_interface__SR_Fluxes__Ry_Ri = rY[18];
        // Units: dimensionless; Initial value: 1.43831e-07
        double var_chaste_interface__Calcium_Concentrations__Ca_j = rY[35];
        // Units: millimolar; Initial value: 0.0002048633
        double var_chaste_interface__Calcium_Concentrations__Ca_SR = rY[37];
        // Units: millimolar; Initial value: 0.6138856
        


        // Mathematics
        const double var_SR_Fluxes__RI = 1.0 - var_chaste_interface__SR_Fluxes__Ry_Ri - var_chaste_interface__SR_Fluxes__Ry_Ro - var_chaste_interface__SR_Fluxes__Ry_Rr; // dimensionless
        const double var_SR_Fluxes__k_Ca_SR = 15.0 - 14.0 / (1.0 + 0.13584112963311223 * pow((1 / var_chaste_interface__Calcium_Concentrations__Ca_SR), 2.5)); // dimensionless
        const double var_SR_Fluxes__ki_SR_Ca = 0.5 * var_SR_Fluxes__k_Ca_SR; // per_milliM_per_millis
        const double var_SR_Fluxes__ko_SR_Ca = 10.0 / var_SR_Fluxes__k_Ca_SR; // per_milliM2_per_millis
        const double d_dt_chaste_interface_var_SR_Fluxes__Ry_Ri = -0.065000000000000002 * var_chaste_interface__SR_Fluxes__Ry_Ri + pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2) * var_SR_Fluxes__RI * var_SR_Fluxes__ko_SR_Ca + var_chaste_interface__Calcium_Concentrations__Ca_j * var_chaste_interface__SR_Fluxes__Ry_Ro * var_SR_Fluxes__ki_SR_Ca; // 1 / millisecond

        return d_dt_chaste_interface_var_SR_Fluxes__Ry_Ri;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative18(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Calcium_Concentrations__Ca_j = rY[35];
            // Units: millimolar; Initial value: 0.0002048633
            double var_chaste_interface__Calcium_Concentrations__Ca_SR = rY[37];
            // Units: millimolar; Initial value: 0.6138856
            


            const double var_x83 = pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2);
            const double var_x477 = 1 / var_chaste_interface__Calcium_Concentrations__Ca_SR;
            const double var_x478 = pow(var_x477, 2.5);
            const double var_x479 = 1.0 + 0.13584112963311223 * var_x478;
            const double var_x480 = 1 / var_x479;
            const double var_x484 = 1 / (15.0 - 14.0 * var_x480);
            const double var_x485 = 10.0 * var_x484 * var_x83;
            const double var_x486 = -var_x485;
            
            partialF = -0.065000000000000002 + var_x486;
        }
        else
        {
            const double y_save = rY[18];
            rY[18] += delta;
            const double temp = EvaluateYDerivative18(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[18])/delta;
            rY[18] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative19(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Calcium_Concentrations__Ca_i = rY[1];
        // Units: millimolar; Initial value: 9.719632e-05
        double var_chaste_interface__Cytosolic_Ca_Buffers__TnC_l = rY[19];
        // Units: millimolar; Initial value: 0.009811535
        


        // Mathematics
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_l = -0.019599999999999999 * var_chaste_interface__Cytosolic_Ca_Buffers__TnC_l + 32.700000000000003 * (0.070000000000000007 - var_chaste_interface__Cytosolic_Ca_Buffers__TnC_l) * var_chaste_interface__Calcium_Concentrations__Ca_i; // millimolar / millisecond

        return d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_l;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative19(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Calcium_Concentrations__Ca_i = rY[1];
            // Units: millimolar; Initial value: 9.719632e-05
            


            const double var_x350 = 32.700000000000003 * var_chaste_interface__Calcium_Concentrations__Ca_i;
            
            partialF = -0.019599999999999999 - var_x350;
        }
        else
        {
            const double y_save = rY[19];
            rY[19] += delta;
            const double temp = EvaluateYDerivative19(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[19])/delta;
            rY[19] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative20(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Calcium_Concentrations__Ca_i = rY[1];
        // Units: millimolar; Initial value: 9.719632e-05
        double var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_c = rY[20];
        // Units: millimolar; Initial value: 0.1225802
        double var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_m = rY[21];
        // Units: millimolar; Initial value: 0.008128604
        


        // Mathematics
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_h_c = -3.1999999999999999e-5 * var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_c + 2.3700000000000001 * (0.14000000000000001 - var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_c - var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_m) * var_chaste_interface__Calcium_Concentrations__Ca_i; // millimolar / millisecond

        return d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_h_c;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative20(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Calcium_Concentrations__Ca_i = rY[1];
            // Units: millimolar; Initial value: 9.719632e-05
            


            const double var_x351 = 2.3700000000000001 * var_chaste_interface__Calcium_Concentrations__Ca_i;
            const double var_x497 = -var_x351;
            
            partialF = -3.1999999999999999e-5 + var_x497;
        }
        else
        {
            const double y_save = rY[20];
            rY[20] += delta;
            const double temp = EvaluateYDerivative20(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[20])/delta;
            rY[20] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative21(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_c = rY[20];
        // Units: millimolar; Initial value: 0.1225802
        double var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_m = rY[21];
        // Units: millimolar; Initial value: 0.008128604
        


        // Mathematics
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_h_m = 0.00042000000000000007 - 0.0030000000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_c - 0.0063300000000000006 * var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_m; // millimolar / millisecond

        return d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_h_m;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative21(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            


            
            partialF = -0.0063300000000000006;
        }
        else
        {
            const double y_save = rY[21];
            rY[21] += delta;
            const double temp = EvaluateYDerivative21(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[21])/delta;
            rY[21] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative22(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Calcium_Concentrations__Ca_i = rY[1];
        // Units: millimolar; Initial value: 9.719632e-05
        double var_chaste_interface__Cytosolic_Ca_Buffers__CaM = rY[22];
        // Units: millimolar; Initial value: 0.0003288063
        


        // Mathematics
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__CaM = -0.23799999999999999 * var_chaste_interface__Cytosolic_Ca_Buffers__CaM + 34.0 * (0.024 - var_chaste_interface__Cytosolic_Ca_Buffers__CaM) * var_chaste_interface__Calcium_Concentrations__Ca_i; // millimolar / millisecond

        return d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__CaM;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative22(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Calcium_Concentrations__Ca_i = rY[1];
            // Units: millimolar; Initial value: 9.719632e-05
            


            const double var_x352 = 34.0 * var_chaste_interface__Calcium_Concentrations__Ca_i;
            
            partialF = -0.23799999999999999 - var_x352;
        }
        else
        {
            const double y_save = rY[22];
            rY[22] += delta;
            const double temp = EvaluateYDerivative22(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[22])/delta;
            rY[22] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative23(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Calcium_Concentrations__Ca_i = rY[1];
        // Units: millimolar; Initial value: 9.719632e-05
        double var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c = rY[23];
        // Units: millimolar; Initial value: 0.002522168
        double var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m = rY[24];
        // Units: millimolar; Initial value: 0.1369514
        


        // Mathematics
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_c = -0.00046000000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c + 13.800000000000001 * (0.14000000000000001 - var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c - var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m) * var_chaste_interface__Calcium_Concentrations__Ca_i; // millimolar / millisecond

        return d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_c;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative23(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Calcium_Concentrations__Ca_i = rY[1];
            // Units: millimolar; Initial value: 9.719632e-05
            


            const double var_x353 = 13.800000000000001 * var_chaste_interface__Calcium_Concentrations__Ca_i;
            const double var_x498 = -var_x353;
            
            partialF = -0.00046000000000000001 + var_x498;
        }
        else
        {
            const double y_save = rY[23];
            rY[23] += delta;
            const double temp = EvaluateYDerivative23(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[23])/delta;
            rY[23] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative24(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c = rY[23];
        // Units: millimolar; Initial value: 0.002522168
        double var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m = rY[24];
        // Units: millimolar; Initial value: 0.1369514
        


        // Mathematics
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_m = 0.0021979999999999999 - 0.015699999999999999 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c - 0.015757 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m; // millimolar / millisecond

        return d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_m;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative24(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            


            
            partialF = -0.015757;
        }
        else
        {
            const double y_save = rY[24];
            rY[24] += delta;
            const double temp = EvaluateYDerivative24(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[24])/delta;
            rY[24] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative25(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Calcium_Concentrations__Ca_i = rY[1];
        // Units: millimolar; Initial value: 9.719632e-05
        double var_chaste_interface__Cytosolic_Ca_Buffers__SRB = rY[25];
        // Units: millimolar; Initial value: 0.00238683
        


        // Mathematics
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__SRB = -0.059999999999999998 * var_chaste_interface__Cytosolic_Ca_Buffers__SRB + 100.0 * (0.017100000000000001 - var_chaste_interface__Cytosolic_Ca_Buffers__SRB) * var_chaste_interface__Calcium_Concentrations__Ca_i; // millimolar / millisecond

        return d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__SRB;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative25(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Calcium_Concentrations__Ca_i = rY[1];
            // Units: millimolar; Initial value: 9.719632e-05
            


            const double var_x354 = 100.0 * var_chaste_interface__Calcium_Concentrations__Ca_i;
            
            partialF = -0.059999999999999998 - var_x354;
        }
        else
        {
            const double y_save = rY[25];
            rY[25] += delta;
            const double temp = EvaluateYDerivative25(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[25])/delta;
            rY[25] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative26(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j = rY[26];
        // Units: millimolar; Initial value: 0.008606485
        double var_chaste_interface__Calcium_Concentrations__Ca_j = rY[35];
        // Units: millimolar; Initial value: 0.0002048633
        


        // Mathematics
        const double var_membrane__V_cell = 1.050625e-11 * M_PI; // liter
        const double var_membrane__V_junc = 0.00053899999999999998 * var_membrane__V_cell; // liter
        const double var_membrane__V_myo = 0.65000000000000002 * var_membrane__V_cell; // liter
        const double d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_j = -1.3 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j + 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j + 0.00046000000000000001 * var_membrane__V_myo / var_membrane__V_junc) * var_chaste_interface__Calcium_Concentrations__Ca_j; // millimolar / millisecond

        return d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_j;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative26(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Calcium_Concentrations__Ca_j = rY[35];
            // Units: millimolar; Initial value: 0.0002048633
            


            const double var_x499 = 100.0 * var_chaste_interface__Calcium_Concentrations__Ca_j;
            const double var_x500 = -var_x499;
            
            partialF = -1.3 + var_x500;
        }
        else
        {
            const double y_save = rY[26];
            rY[26] += delta;
            const double temp = EvaluateYDerivative26(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[26])/delta;
            rY[26] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative27(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl = rY[27];
        // Units: millimolar; Initial value: 0.01101044
        double var_chaste_interface__Calcium_Concentrations__Ca_sl = rY[36];
        // Units: millimolar; Initial value: 0.0001188246
        


        // Mathematics
        const double var_membrane__V_cell = 1.050625e-11 * M_PI; // liter
        const double var_membrane__V_myo = 0.65000000000000002 * var_membrane__V_cell; // liter
        const double var_membrane__V_sl = 0.02 * var_membrane__V_cell; // liter
        const double d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_sl = -1.3 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl + 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl + 0.037400000000000003 * var_membrane__V_myo / var_membrane__V_sl) * var_chaste_interface__Calcium_Concentrations__Ca_sl; // millimolar / millisecond

        return d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_sl;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative27(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Calcium_Concentrations__Ca_sl = rY[36];
            // Units: millimolar; Initial value: 0.0001188246
            


            const double var_x502 = 100.0 * var_chaste_interface__Calcium_Concentrations__Ca_sl;
            const double var_x503 = -var_x502;
            
            partialF = -1.3 + var_x503;
        }
        else
        {
            const double y_save = rY[27];
            rY[27] += delta;
            const double temp = EvaluateYDerivative27(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[27])/delta;
            rY[27] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative28(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j = rY[28];
        // Units: millimolar; Initial value: 0.08078504
        double var_chaste_interface__Calcium_Concentrations__Ca_j = rY[35];
        // Units: millimolar; Initial value: 0.0002048633
        


        // Mathematics
        const double var_membrane__V_cell = 1.050625e-11 * M_PI; // liter
        const double var_membrane__V_junc = 0.00053899999999999998 * var_membrane__V_cell; // liter
        const double var_membrane__V_myo = 0.65000000000000002 * var_membrane__V_cell; // liter
        const double d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_j = -0.029999999999999999 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j + 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j + 0.000165 * var_membrane__V_myo / var_membrane__V_junc) * var_chaste_interface__Calcium_Concentrations__Ca_j; // millimolar / millisecond

        return d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_j;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative28(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Calcium_Concentrations__Ca_j = rY[35];
            // Units: millimolar; Initial value: 0.0002048633
            


            const double var_x499 = 100.0 * var_chaste_interface__Calcium_Concentrations__Ca_j;
            const double var_x500 = -var_x499;
            
            partialF = -0.029999999999999999 + var_x500;
        }
        else
        {
            const double y_save = rY[28];
            rY[28] += delta;
            const double temp = EvaluateYDerivative28(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[28])/delta;
            rY[28] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative29(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl = rY[29];
        // Units: millimolar; Initial value: 0.1238366
        double var_chaste_interface__Calcium_Concentrations__Ca_sl = rY[36];
        // Units: millimolar; Initial value: 0.0001188246
        


        // Mathematics
        const double var_membrane__V_cell = 1.050625e-11 * M_PI; // liter
        const double var_membrane__V_myo = 0.65000000000000002 * var_membrane__V_cell; // liter
        const double var_membrane__V_sl = 0.02 * var_membrane__V_cell; // liter
        const double d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_sl = -0.029999999999999999 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl + 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl + 0.0134 * var_membrane__V_myo / var_membrane__V_sl) * var_chaste_interface__Calcium_Concentrations__Ca_sl; // millimolar / millisecond

        return d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_sl;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative29(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Calcium_Concentrations__Ca_sl = rY[36];
            // Units: millimolar; Initial value: 0.0001188246
            


            const double var_x502 = 100.0 * var_chaste_interface__Calcium_Concentrations__Ca_sl;
            const double var_x503 = -var_x502;
            
            partialF = -0.029999999999999999 + var_x503;
        }
        else
        {
            const double y_save = rY[29];
            rY[29] += delta;
            const double temp = EvaluateYDerivative29(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[29])/delta;
            rY[29] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative30(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -84.10546
        double var_chaste_interface__Fast_Na_Current__m = rY[2];
        // Units: dimensionless; Initial value: 0.002176608
        double var_chaste_interface__Fast_Na_Current__h = rY[3];
        // Units: dimensionless; Initial value: 0.7126555
        double var_chaste_interface__Fast_Na_Current__j = rY[4];
        // Units: dimensionless; Initial value: 0.7119893
        double var_chaste_interface__L_Type_Calcium_Current__d = rY[11];
        // Units: dimensionless; Initial value: 1.879996e-06
        double var_chaste_interface__L_Type_Calcium_Current__f = rY[12];
        // Units: dimensionless; Initial value: 0.9789409
        double var_chaste_interface__L_Type_Calcium_Current__f_2 = rY[13];
        // Units: dimensionless; Initial value: 0.9993986
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j = rY[14];
        // Units: dimensionless; Initial value: 0.02861794
        double var_chaste_interface__Sodium_Concentrations__Na_j = rY[30];
        // Units: millimolar; Initial value: 10.0211
        double var_chaste_interface__Sodium_Concentrations__Na_sl = rY[31];
        // Units: millimolar; Initial value: 10.01974
        double var_chaste_interface__Sodium_Concentrations__Na_B_j = rY[33];
        // Units: millimolar; Initial value: 3.785209
        double var_chaste_interface__Calcium_Concentrations__Ca_j = rY[35];
        // Units: millimolar; Initial value: 0.0002048633
        

        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double d_dt_chaste_interface_var_Sodium_Concentrations__Na_B_j = -0.001 * var_chaste_interface__Sodium_Concentrations__Na_B_j + 0.0001 * (7.5609999999999999 - var_chaste_interface__Sodium_Concentrations__Na_B_j) * var_chaste_interface__Sodium_Concentrations__Na_j; // millimolar / millisecond
        const double var_Nerst_Potentials__E_Na_junc = 26.712338705498265 * log(mParameters[4] / var_chaste_interface__Sodium_Concentrations__Na_j); // millivolt
        const double var_Na_Ca_Exchanger_Current__I_ncx_junc = 0.11 * (pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) * mParameters[2] * _lt_0_row[0] - pow(mParameters[4], 3) * var_chaste_interface__Calcium_Concentrations__Ca_j * _lt_0_row[1]) * mParameters[13] / ((_lt_0_row[2]) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2)) * (1.3 * pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) + pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) * mParameters[2] + pow(mParameters[4], 3) * var_chaste_interface__Calcium_Concentrations__Ca_j + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Calcium_Concentrations__Ca_j) * var_chaste_interface__Calcium_Concentrations__Ca_j + 0.0035899999999999999 * pow(mParameters[4], 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3)))); // picoA_per_picoF
        const double var_Na_K_Pump_Current__f_NaK = 1 / (1.0 + _lt_0_row[4] + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * mParameters[4])) * _lt_0_row[3]); // dimensionless
        const double var_Na_K_Pump_Current__I_NaK_junc = 0.11 * mParameters[14] * var_Na_K_Pump_Current__f_NaK * mParameters[3] / ((1.0 + 14641.0 / pow(var_chaste_interface__Sodium_Concentrations__Na_j, 4)) * (1.5 + mParameters[3])); // picoA_per_picoF
        const double var_Sodium_Concentrations__I_Na_tot_junc = 3.0 * var_Na_Ca_Exchanger_Current__I_ncx_junc + 3.0 * var_Na_K_Pump_Current__I_NaK_junc + 6.567e-5 * var_chaste_interface__membrane__V - 6.567e-5 * var_Nerst_Potentials__E_Na_junc + 0.11 * pow(var_chaste_interface__Fast_Na_Current__m, 3) * (-var_Nerst_Potentials__E_Na_junc + var_chaste_interface__membrane__V) * mParameters[7] * var_chaste_interface__Fast_Na_Current__h * var_chaste_interface__Fast_Na_Current__j + 0.90000000000000002 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_j * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_j * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_j * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (1.0971453706510394e-5 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_j * _lt_0_row[6]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[7]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2; // picoA_per_picoF
        const double var_membrane__V_cell = 1.050625e-11 * M_PI; // liter
        const double var_membrane__V_junc = 0.00053899999999999998 * var_membrane__V_cell; // liter
        const double d_dt_chaste_interface_var_Sodium_Concentrations__Na_j = -d_dt_chaste_interface_var_Sodium_Concentrations__Na_B_j + 1.8312999999999999e-14 * (-var_chaste_interface__Sodium_Concentrations__Na_j + var_chaste_interface__Sodium_Concentrations__Na_sl) / var_membrane__V_junc - 1.0364305332435094e-5 * var_Sodium_Concentrations__I_Na_tot_junc * mParameters[6] / var_membrane__V_junc; // millimolar / millisecond

        return d_dt_chaste_interface_var_Sodium_Concentrations__Na_j;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative30(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -84.10546
            double var_chaste_interface__Fast_Na_Current__m = rY[2];
            // Units: dimensionless; Initial value: 0.002176608
            double var_chaste_interface__Fast_Na_Current__h = rY[3];
            // Units: dimensionless; Initial value: 0.7126555
            double var_chaste_interface__Fast_Na_Current__j = rY[4];
            // Units: dimensionless; Initial value: 0.7119893
            double var_chaste_interface__L_Type_Calcium_Current__d = rY[11];
            // Units: dimensionless; Initial value: 1.879996e-06
            double var_chaste_interface__L_Type_Calcium_Current__f = rY[12];
            // Units: dimensionless; Initial value: 0.9789409
            double var_chaste_interface__L_Type_Calcium_Current__f_2 = rY[13];
            // Units: dimensionless; Initial value: 0.9993986
            double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j = rY[14];
            // Units: dimensionless; Initial value: 0.02861794
            double var_chaste_interface__Sodium_Concentrations__Na_j = rY[30];
            // Units: millimolar; Initial value: 10.0211
            double var_chaste_interface__Sodium_Concentrations__Na_B_j = rY[33];
            // Units: millimolar; Initial value: 3.785209
            double var_chaste_interface__Calcium_Concentrations__Ca_j = rY[35];
            // Units: millimolar; Initial value: 0.0002048633
            

        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

            const double var_x1 = exp(9.9999999999999995e-8);
            const double var_x3 = 1 / (-1.0 + var_x1);
            const double var_x6 = exp(-9.9999999999999995e-8);
            const double var_x8 = 1 / (-1.0 + var_x6);
            const double var_x13 = var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2;
            const double var_x19 = 0.90000000000000002 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j;
            const double var_x38 = -var_x19;
            const double var_x40 = var_x13 * var_chaste_interface__L_Type_Calcium_Current__d;
            const double var_x54 = pow(var_chaste_interface__Fast_Na_Current__m, 3);
            const double var_x55 = var_x54 * mParameters[7] * var_chaste_interface__Fast_Na_Current__j;
            const double var_x56 = var_x55 * var_chaste_interface__Fast_Na_Current__h;
            const double var_x73 = _lt_0_row[0];
            const double var_x74 = pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3);
            const double var_x75 = var_x74 * mParameters[2];
            const double var_x76 = var_x73 * var_x75;
            const double var_x77 = _lt_0_row[1];
            const double var_x78 = pow(mParameters[4], 3);
            const double var_x79 = var_x78 * var_chaste_interface__Calcium_Concentrations__Ca_j;
            const double var_x80 = var_x77 * var_x79;
            const double var_x81 = 1.0 + 0.32000000000000001 * var_x77;
            const double var_x82 = mParameters[13] / var_x81;
            const double var_x83 = pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2);
            const double var_x84 = 1 / var_x83;
            const double var_x85 = 1.0 + 2.2499999999999996e-8 * var_x84;
            const double var_x86 = 1 / var_x85;
            const double var_x87 = (1.0 + 278.55153203342621 * var_chaste_interface__Calcium_Concentrations__Ca_j) * var_chaste_interface__Calcium_Concentrations__Ca_j;
            const double var_x88 = 1.0 + 0.00053869674493876331 * var_x74;
            const double var_x89 = 0.0035899999999999999 * var_x78;
            const double var_x90 = 1 / (var_x75 + var_x79 + 669921.875 * var_x87 + 1.3 * var_x74 + var_x88 * var_x89);
            const double var_x91 = var_x86 * var_x90;
            const double var_x92 = var_x82 * var_x91;
            const double var_x109 = pow(var_chaste_interface__Sodium_Concentrations__Na_j, (-4));
            const double var_x110 = exp(-0.003743588350780262 * var_chaste_interface__membrane__V);
            const double var_x111 = exp(0.01485884101040119 * mParameters[4]);
            const double var_x112 = 0.037435883507802616 * var_chaste_interface__membrane__V;
            const double var_x113 = exp(-var_x112);
            const double var_x114 = 1.0 + 0.1245 * var_x110 + 0.036499999999999998 * var_x113 * (-0.14285714285714285 + 0.14285714285714285 * var_x111);
            const double var_x115 = mParameters[14] * mParameters[3] / (1.5 + mParameters[3]);
            const double var_x124 = var_x76 - var_x80;
            const double var_x128 = fabs(var_chaste_interface__membrane__V);
            const double var_x133 = var_x40 * mParameters[5];
            const double var_x141 = 1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j;
            const double var_x155 = var_x128 < 2.6712338705498262e-6;
            const double var_x156 = exp(var_x112);
            const double var_x157 = -1.0 + var_x156;
            const double var_x158 = 1 / var_x157;
            const double var_x159 = var_x133 * var_x158;
            const double var_x180 = var_x159 * var_chaste_interface__membrane__V;
            const double var_x183 = 1 / var_chaste_interface__Sodium_Concentrations__Na_j;
            const double var_x210 = 0.5 + 187179.41753901311 * var_chaste_interface__membrane__V;
            const double var_x211 = 2.9307318749999998e-11 * mParameters[5];
            const double var_x212 = var_x211 * var_x3;
            const double var_x213 = var_x211 * var_x8;
            const double var_x270 = 9.8743083358593546e-6 * var_x180;
            const double var_x280 = var_x213 * var_x6;
            const double var_x281 = -var_x280 + var_x210 * (var_x280 + var_x1 * var_x212);
            const double var_x282 = 0.001754199282790071 * var_x183;
            const double var_x283 = 2.9383572576048089 * var_x183 * var_x56;
            const double var_x284 = var_x115 / var_x114;
            const double var_x285 = var_x284 / (pow((6.8301345536507063e-5 + var_x109), 2) * pow(var_chaste_interface__Sodium_Concentrations__Na_j, 5));
            const double var_x286 = pow(var_chaste_interface__Sodium_Concentrations__Na_j, 2);
            const double var_x287 = 3 * mParameters[2];
            const double var_x288 = 5.8017639429904805e-6 * var_x78;
            const double var_x289 = -3.9000000000000004 * var_x286 - var_x286 * var_x287 - var_x286 * var_x288;
            const double var_x290 = 5.3588338192419823e-9 * var_x78;
            const double var_x291 = var_x124 * var_x82;
            const double var_x292 = var_x291 * var_x86 / pow((var_x87 + 1.9405247813411081e-6 * var_x74 + 1.4927113702623908e-6 * var_x75 + 1.4927113702623908e-6 * var_x79 + var_x290 * var_x88), 2);
            const double var_x294 = var_x73 * mParameters[2];
            const double var_x295 = var_x286 * var_x294 * var_x92;
            const double var_x297 = var_x141 * var_x156 * var_x270;
            const double var_x339 = 1 / M_PI;
            const double var_x507 = 0.90000000000000002 + var_x38;
            const double var_x508 = var_x40 * var_x507;
            const double var_x510 = var_x339 * mParameters[6];
            const double var_x511 = 1830221710.9367216 * var_x510;
            const double var_x518 = 0.0001 * var_chaste_interface__Sodium_Concentrations__Na_B_j;
            const double var_x519 = 3.2338732908121877 * var_x339;
            const double var_x520 = 7.3530178752050587e-13 * var_x292;
            const double var_x521 = var_x282 + var_x283 + 9.0157776108189337e-5 * var_x285 + 0.98999999999999999 * var_x295 + var_x289 * var_x520;
            
            partialF = -0.0007561 + var_x518 - var_x519 - var_x511 * ((var_x155) ? (var_x521 + var_x281 * var_x508) : (var_x297 + var_x521));
        }
        else
        {
            const double y_save = rY[30];
            rY[30] += delta;
            const double temp = EvaluateYDerivative30(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[30])/delta;
            rY[30] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative31(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -84.10546
        double var_chaste_interface__Fast_Na_Current__m = rY[2];
        // Units: dimensionless; Initial value: 0.002176608
        double var_chaste_interface__Fast_Na_Current__h = rY[3];
        // Units: dimensionless; Initial value: 0.7126555
        double var_chaste_interface__Fast_Na_Current__j = rY[4];
        // Units: dimensionless; Initial value: 0.7119893
        double var_chaste_interface__L_Type_Calcium_Current__d = rY[11];
        // Units: dimensionless; Initial value: 1.879996e-06
        double var_chaste_interface__L_Type_Calcium_Current__f = rY[12];
        // Units: dimensionless; Initial value: 0.9789409
        double var_chaste_interface__L_Type_Calcium_Current__f_2 = rY[13];
        // Units: dimensionless; Initial value: 0.9993986
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl = rY[15];
        // Units: dimensionless; Initial value: 0.0169833
        double var_chaste_interface__Sodium_Concentrations__Na_j = rY[30];
        // Units: millimolar; Initial value: 10.0211
        double var_chaste_interface__Sodium_Concentrations__Na_sl = rY[31];
        // Units: millimolar; Initial value: 10.01974
        double var_chaste_interface__Sodium_Concentrations__Na_i = rY[32];
        // Units: millimolar; Initial value: 10.01989
        double var_chaste_interface__Sodium_Concentrations__Na_B_sl = rY[34];
        // Units: millimolar; Initial value: 0.8259271
        double var_chaste_interface__Calcium_Concentrations__Ca_sl = rY[36];
        // Units: millimolar; Initial value: 0.0001188246
        

        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double d_dt_chaste_interface_var_Sodium_Concentrations__Na_B_sl = -0.001 * var_chaste_interface__Sodium_Concentrations__Na_B_sl + 0.0001 * (1.6499999999999999 - var_chaste_interface__Sodium_Concentrations__Na_B_sl) * var_chaste_interface__Sodium_Concentrations__Na_sl; // millimolar / millisecond
        const double var_Nerst_Potentials__E_Na_sl = 26.712338705498265 * log(mParameters[4] / var_chaste_interface__Sodium_Concentrations__Na_sl); // millivolt
        const double var_Na_Ca_Exchanger_Current__I_ncx_sl = 0.89000000000000001 * (pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) * mParameters[2] * _lt_0_row[0] - pow(mParameters[4], 3) * var_chaste_interface__Calcium_Concentrations__Ca_sl * _lt_0_row[1]) * mParameters[13] / ((_lt_0_row[2]) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 2)) * (1.3 * pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) + pow(mParameters[4], 3) * var_chaste_interface__Calcium_Concentrations__Ca_sl + pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) * mParameters[2] + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Calcium_Concentrations__Ca_sl) * var_chaste_interface__Calcium_Concentrations__Ca_sl + 0.0035899999999999999 * pow(mParameters[4], 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3)))); // picoA_per_picoF
        const double var_Na_K_Pump_Current__f_NaK = 1 / (1.0 + _lt_0_row[4] + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * mParameters[4])) * _lt_0_row[3]); // dimensionless
        const double var_Na_K_Pump_Current__I_NaK_sl = 0.89000000000000001 * mParameters[14] * var_Na_K_Pump_Current__f_NaK * mParameters[3] / ((1.0 + 14641.0 / pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 4)) * (1.5 + mParameters[3])); // picoA_per_picoF
        const double var_Sodium_Concentrations__I_Na_tot_sl = 3.0 * var_Na_Ca_Exchanger_Current__I_ncx_sl + 3.0 * var_Na_K_Pump_Current__I_NaK_sl + 0.00053133 * var_chaste_interface__membrane__V - 0.00053133 * var_Nerst_Potentials__E_Na_sl + 0.099999999999999978 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_sl * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_sl * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_sl * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (1.0971453706510394e-5 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_sl * _lt_0_row[6]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[7]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 + 0.89000000000000001 * pow(var_chaste_interface__Fast_Na_Current__m, 3) * (-var_Nerst_Potentials__E_Na_sl + var_chaste_interface__membrane__V) * mParameters[7] * var_chaste_interface__Fast_Na_Current__h * var_chaste_interface__Fast_Na_Current__j; // picoA_per_picoF
        const double var_membrane__V_cell = 1.050625e-11 * M_PI; // liter
        const double var_membrane__V_sl = 0.02 * var_membrane__V_cell; // liter
        const double d_dt_chaste_interface_var_Sodium_Concentrations__Na_sl = -d_dt_chaste_interface_var_Sodium_Concentrations__Na_B_sl + 1.6385999999999999e-12 * (-var_chaste_interface__Sodium_Concentrations__Na_sl + var_chaste_interface__Sodium_Concentrations__Na_i) / var_membrane__V_sl + 1.8312999999999999e-14 * (-var_chaste_interface__Sodium_Concentrations__Na_sl + var_chaste_interface__Sodium_Concentrations__Na_j) / var_membrane__V_sl - 1.0364305332435094e-5 * var_Sodium_Concentrations__I_Na_tot_sl * mParameters[6] / var_membrane__V_sl; // millimolar / millisecond

        return d_dt_chaste_interface_var_Sodium_Concentrations__Na_sl;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative31(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -84.10546
            double var_chaste_interface__Fast_Na_Current__m = rY[2];
            // Units: dimensionless; Initial value: 0.002176608
            double var_chaste_interface__Fast_Na_Current__h = rY[3];
            // Units: dimensionless; Initial value: 0.7126555
            double var_chaste_interface__Fast_Na_Current__j = rY[4];
            // Units: dimensionless; Initial value: 0.7119893
            double var_chaste_interface__L_Type_Calcium_Current__d = rY[11];
            // Units: dimensionless; Initial value: 1.879996e-06
            double var_chaste_interface__L_Type_Calcium_Current__f = rY[12];
            // Units: dimensionless; Initial value: 0.9789409
            double var_chaste_interface__L_Type_Calcium_Current__f_2 = rY[13];
            // Units: dimensionless; Initial value: 0.9993986
            double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl = rY[15];
            // Units: dimensionless; Initial value: 0.0169833
            double var_chaste_interface__Sodium_Concentrations__Na_sl = rY[31];
            // Units: millimolar; Initial value: 10.01974
            double var_chaste_interface__Sodium_Concentrations__Na_B_sl = rY[34];
            // Units: millimolar; Initial value: 0.8259271
            double var_chaste_interface__Calcium_Concentrations__Ca_sl = rY[36];
            // Units: millimolar; Initial value: 0.0001188246
            

        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

            const double var_x1 = exp(9.9999999999999995e-8);
            const double var_x3 = 1 / (-1.0 + var_x1);
            const double var_x6 = exp(-9.9999999999999995e-8);
            const double var_x8 = 1 / (-1.0 + var_x6);
            const double var_x11 = 0.099999999999999978 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl;
            const double var_x13 = var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2;
            const double var_x37 = -var_x11;
            const double var_x40 = var_x13 * var_chaste_interface__L_Type_Calcium_Current__d;
            const double var_x54 = pow(var_chaste_interface__Fast_Na_Current__m, 3);
            const double var_x55 = var_x54 * mParameters[7] * var_chaste_interface__Fast_Na_Current__j;
            const double var_x56 = var_x55 * var_chaste_interface__Fast_Na_Current__h;
            const double var_x73 = _lt_0_row[0];
            const double var_x77 = _lt_0_row[1];
            const double var_x78 = pow(mParameters[4], 3);
            const double var_x81 = 1.0 + 0.32000000000000001 * var_x77;
            const double var_x82 = mParameters[13] / var_x81;
            const double var_x89 = 0.0035899999999999999 * var_x78;
            const double var_x94 = pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3);
            const double var_x95 = var_x94 * mParameters[2];
            const double var_x96 = var_x73 * var_x95;
            const double var_x97 = var_x78 * var_chaste_interface__Calcium_Concentrations__Ca_sl;
            const double var_x98 = var_x77 * var_x97;
            const double var_x99 = pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, (-2));
            const double var_x100 = 1.0 + 2.2499999999999996e-8 * var_x99;
            const double var_x101 = 1 / var_x100;
            const double var_x102 = (1.0 + 278.55153203342621 * var_chaste_interface__Calcium_Concentrations__Ca_sl) * var_chaste_interface__Calcium_Concentrations__Ca_sl;
            const double var_x103 = 1.0 + 0.00053869674493876331 * var_x94;
            const double var_x104 = 1 / (var_x95 + var_x97 + 669921.875 * var_x102 + 1.3 * var_x94 + var_x103 * var_x89);
            const double var_x105 = var_x101 * var_x104;
            const double var_x106 = var_x105 * var_x82;
            const double var_x110 = exp(-0.003743588350780262 * var_chaste_interface__membrane__V);
            const double var_x111 = exp(0.01485884101040119 * mParameters[4]);
            const double var_x112 = 0.037435883507802616 * var_chaste_interface__membrane__V;
            const double var_x113 = exp(-var_x112);
            const double var_x114 = 1.0 + 0.1245 * var_x110 + 0.036499999999999998 * var_x113 * (-0.14285714285714285 + 0.14285714285714285 * var_x111);
            const double var_x115 = mParameters[14] * mParameters[3] / (1.5 + mParameters[3]);
            const double var_x118 = pow(var_chaste_interface__Sodium_Concentrations__Na_sl, (-4));
            const double var_x120 = var_x96 - var_x98;
            const double var_x128 = fabs(var_chaste_interface__membrane__V);
            const double var_x133 = var_x40 * mParameters[5];
            const double var_x135 = 1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl;
            const double var_x155 = var_x128 < 2.6712338705498262e-6;
            const double var_x156 = exp(var_x112);
            const double var_x157 = -1.0 + var_x156;
            const double var_x158 = 1 / var_x157;
            const double var_x159 = var_x133 * var_x158;
            const double var_x180 = var_x159 * var_chaste_interface__membrane__V;
            const double var_x188 = 1 / var_chaste_interface__Sodium_Concentrations__Na_sl;
            const double var_x210 = 0.5 + 187179.41753901311 * var_chaste_interface__membrane__V;
            const double var_x211 = 2.9307318749999998e-11 * mParameters[5];
            const double var_x212 = var_x211 * var_x3;
            const double var_x213 = var_x211 * var_x8;
            const double var_x278 = 1.0971453706510391e-6 * var_x180;
            const double var_x280 = var_x213 * var_x6;
            const double var_x281 = -var_x280 + var_x210 * (var_x280 + var_x1 * var_x212);
            const double var_x284 = var_x115 / var_x114;
            const double var_x287 = 3 * mParameters[2];
            const double var_x288 = 5.8017639429904805e-6 * var_x78;
            const double var_x290 = 5.3588338192419823e-9 * var_x78;
            const double var_x294 = var_x73 * mParameters[2];
            const double var_x298 = 0.014193066924392391 * var_x188;
            const double var_x299 = 23.773981447893455 * var_x188 * var_x56;
            const double var_x300 = pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 2);
            const double var_x301 = -3.9000000000000004 * var_x300 - var_x287 * var_x300 - var_x288 * var_x300;
            const double var_x302 = var_x120 * var_x82;
            const double var_x303 = var_x101 * var_x302 / pow((var_x102 + 1.9405247813411081e-6 * var_x94 + 1.4927113702623908e-6 * var_x95 + 1.4927113702623908e-6 * var_x97 + var_x103 * var_x290), 2);
            const double var_x305 = var_x284 / (pow((6.8301345536507063e-5 + var_x118), 2) * pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 5));
            const double var_x306 = var_x106 * var_x294 * var_x300;
            const double var_x308 = var_x135 * var_x156 * var_x278;
            const double var_x339 = 1 / M_PI;
            const double var_x510 = var_x339 * mParameters[6];
            const double var_x523 = 0.099999999999999978 + var_x37;
            const double var_x524 = var_x40 * var_x523;
            const double var_x526 = 49324475.109744646 * var_x510;
            const double var_x530 = 0.0001 * var_chaste_interface__Sodium_Concentrations__Na_B_sl;
            const double var_x531 = 5.9492599172113663e-12 * var_x303;
            const double var_x532 = var_x298 + var_x299 + 8.0099999999999998 * var_x306 + 0.00072945837032989554 * var_x305 + var_x301 * var_x531;
            
            partialF = -0.000165 + var_x530 - 7.8853682331945265 * var_x339 - var_x526 * ((var_x155) ? (var_x532 + var_x281 * var_x524) : (var_x308 + var_x532));
        }
        else
        {
            const double y_save = rY[31];
            rY[31] += delta;
            const double temp = EvaluateYDerivative31(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[31])/delta;
            rY[31] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative32(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Sodium_Concentrations__Na_sl = rY[31];
        // Units: millimolar; Initial value: 10.01974
        double var_chaste_interface__Sodium_Concentrations__Na_i = rY[32];
        // Units: millimolar; Initial value: 10.01989
        


        // Mathematics
        const double var_membrane__V_cell = 1.050625e-11 * M_PI; // liter
        const double var_membrane__V_myo = 0.65000000000000002 * var_membrane__V_cell; // liter
        const double d_dt_chaste_interface_var_Sodium_Concentrations__Na_i = 1.6385999999999999e-12 * (-var_chaste_interface__Sodium_Concentrations__Na_i + var_chaste_interface__Sodium_Concentrations__Na_sl) / var_membrane__V_myo; // millimolar / millisecond

        return d_dt_chaste_interface_var_Sodium_Concentrations__Na_i;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative32(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            


            const double var_x339 = 1 / M_PI;
            const double var_x534 = 0.23994508763098887 * var_x339;
            
            partialF = -var_x534;
        }
        else
        {
            const double y_save = rY[32];
            rY[32] += delta;
            const double temp = EvaluateYDerivative32(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[32])/delta;
            rY[32] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative33(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Sodium_Concentrations__Na_j = rY[30];
        // Units: millimolar; Initial value: 10.0211
        double var_chaste_interface__Sodium_Concentrations__Na_B_j = rY[33];
        // Units: millimolar; Initial value: 3.785209
        


        // Mathematics
        const double d_dt_chaste_interface_var_Sodium_Concentrations__Na_B_j = -0.001 * var_chaste_interface__Sodium_Concentrations__Na_B_j + 0.0001 * (7.5609999999999999 - var_chaste_interface__Sodium_Concentrations__Na_B_j) * var_chaste_interface__Sodium_Concentrations__Na_j; // millimolar / millisecond

        return d_dt_chaste_interface_var_Sodium_Concentrations__Na_B_j;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative33(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Sodium_Concentrations__Na_j = rY[30];
            // Units: millimolar; Initial value: 10.0211
            


            const double var_x522 = 0.0001 * var_chaste_interface__Sodium_Concentrations__Na_j;
            
            partialF = -0.001 - var_x522;
        }
        else
        {
            const double y_save = rY[33];
            rY[33] += delta;
            const double temp = EvaluateYDerivative33(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[33])/delta;
            rY[33] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative34(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Sodium_Concentrations__Na_sl = rY[31];
        // Units: millimolar; Initial value: 10.01974
        double var_chaste_interface__Sodium_Concentrations__Na_B_sl = rY[34];
        // Units: millimolar; Initial value: 0.8259271
        


        // Mathematics
        const double d_dt_chaste_interface_var_Sodium_Concentrations__Na_B_sl = -0.001 * var_chaste_interface__Sodium_Concentrations__Na_B_sl + 0.0001 * (1.6499999999999999 - var_chaste_interface__Sodium_Concentrations__Na_B_sl) * var_chaste_interface__Sodium_Concentrations__Na_sl; // millimolar / millisecond

        return d_dt_chaste_interface_var_Sodium_Concentrations__Na_B_sl;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative34(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Sodium_Concentrations__Na_sl = rY[31];
            // Units: millimolar; Initial value: 10.01974
            


            const double var_x533 = 0.0001 * var_chaste_interface__Sodium_Concentrations__Na_sl;
            
            partialF = -0.001 - var_x533;
        }
        else
        {
            const double y_save = rY[34];
            rY[34] += delta;
            const double temp = EvaluateYDerivative34(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[34])/delta;
            rY[34] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative35(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -84.10546
        double var_chaste_interface__L_Type_Calcium_Current__d = rY[11];
        // Units: dimensionless; Initial value: 1.879996e-06
        double var_chaste_interface__L_Type_Calcium_Current__f = rY[12];
        // Units: dimensionless; Initial value: 0.9789409
        double var_chaste_interface__L_Type_Calcium_Current__f_2 = rY[13];
        // Units: dimensionless; Initial value: 0.9993986
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j = rY[14];
        // Units: dimensionless; Initial value: 0.02861794
        double var_chaste_interface__SR_Fluxes__Ry_Ro = rY[17];
        // Units: dimensionless; Initial value: 1.149876e-06
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j = rY[26];
        // Units: millimolar; Initial value: 0.008606485
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j = rY[28];
        // Units: millimolar; Initial value: 0.08078504
        double var_chaste_interface__Sodium_Concentrations__Na_j = rY[30];
        // Units: millimolar; Initial value: 10.0211
        double var_chaste_interface__Calcium_Concentrations__Ca_j = rY[35];
        // Units: millimolar; Initial value: 0.0002048633
        double var_chaste_interface__Calcium_Concentrations__Ca_sl = rY[36];
        // Units: millimolar; Initial value: 0.0001188246
        double var_chaste_interface__Calcium_Concentrations__Ca_SR = rY[37];
        // Units: millimolar; Initial value: 0.6138856
        

        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_SR_Fluxes__J_SR_leak = 5.3480000000000003e-6 * var_chaste_interface__Calcium_Concentrations__Ca_SR - 5.3480000000000003e-6 * var_chaste_interface__Calcium_Concentrations__Ca_j; // milliM_per_millis
        const double var_SR_Fluxes__J_SR_Ca_rel = 25.0 * (-var_chaste_interface__Calcium_Concentrations__Ca_j + var_chaste_interface__Calcium_Concentrations__Ca_SR) * var_chaste_interface__SR_Fluxes__Ry_Ro; // milliM_per_millis
        const double var_Na_Ca_Exchanger_Current__I_ncx_junc = 0.11 * (pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) * mParameters[2] * _lt_0_row[0] - pow(mParameters[4], 3) * var_chaste_interface__Calcium_Concentrations__Ca_j * _lt_0_row[1]) * mParameters[13] / ((_lt_0_row[2]) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2)) * (1.3 * pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) + pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) * mParameters[2] + pow(mParameters[4], 3) * var_chaste_interface__Calcium_Concentrations__Ca_j + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Calcium_Concentrations__Ca_j) * var_chaste_interface__Calcium_Concentrations__Ca_j + 0.0035899999999999999 * pow(mParameters[4], 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3)))); // picoA_per_picoF
        const double var_Calcium_Concentrations__I_Ca_tot_junc = 6.0643000000000002e-5 * var_chaste_interface__membrane__V - 2.0 * var_Na_Ca_Exchanger_Current__I_ncx_junc - 0.00080995817805876559 * log(mParameters[2] / var_chaste_interface__Calcium_Concentrations__Ca_j) + 0.0074029999999999999 * pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 1.6000000000000001) / (5.2281977629563632e-6 + pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 1.6000000000000001)) + 0.90000000000000002 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_j * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.71831868267118426 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_j * _lt_0_row[8]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[9]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2; // picoA_per_picoF
        const double var_membrane__V_cell = 1.050625e-11 * M_PI; // liter
        const double var_membrane__V_junc = 0.00053899999999999998 * var_membrane__V_cell; // liter
        const double var_membrane__V_myo = 0.65000000000000002 * var_membrane__V_cell; // liter
        const double d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_j = -0.029999999999999999 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j + 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j + 0.000165 * var_membrane__V_myo / var_membrane__V_junc) * var_chaste_interface__Calcium_Concentrations__Ca_j; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_j = -1.3 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j + 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j + 0.00046000000000000001 * var_membrane__V_myo / var_membrane__V_junc) * var_chaste_interface__Calcium_Concentrations__Ca_j; // millimolar / millisecond
        const double var_membrane__V_sr = 0.035000000000000003 * var_membrane__V_cell; // liter
        const double d_dt_chaste_interface_var_Calcium_Concentrations__Ca_j = -d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_j - d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_j + 8.2413000000000004e-13 * (-var_chaste_interface__Calcium_Concentrations__Ca_j + var_chaste_interface__Calcium_Concentrations__Ca_sl) / var_membrane__V_junc + var_SR_Fluxes__J_SR_Ca_rel * var_membrane__V_sr / var_membrane__V_junc + var_SR_Fluxes__J_SR_leak * var_membrane__V_myo / var_membrane__V_junc - 5.182152666217547e-6 * var_Calcium_Concentrations__I_Ca_tot_junc * mParameters[6] / var_membrane__V_junc; // millimolar / millisecond

        return d_dt_chaste_interface_var_Calcium_Concentrations__Ca_j;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative35(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -84.10546
            double var_chaste_interface__L_Type_Calcium_Current__d = rY[11];
            // Units: dimensionless; Initial value: 1.879996e-06
            double var_chaste_interface__L_Type_Calcium_Current__f = rY[12];
            // Units: dimensionless; Initial value: 0.9789409
            double var_chaste_interface__L_Type_Calcium_Current__f_2 = rY[13];
            // Units: dimensionless; Initial value: 0.9993986
            double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j = rY[14];
            // Units: dimensionless; Initial value: 0.02861794
            double var_chaste_interface__SR_Fluxes__Ry_Ro = rY[17];
            // Units: dimensionless; Initial value: 1.149876e-06
            double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j = rY[26];
            // Units: millimolar; Initial value: 0.008606485
            double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j = rY[28];
            // Units: millimolar; Initial value: 0.08078504
            double var_chaste_interface__Sodium_Concentrations__Na_j = rY[30];
            // Units: millimolar; Initial value: 10.0211
            double var_chaste_interface__Calcium_Concentrations__Ca_j = rY[35];
            // Units: millimolar; Initial value: 0.0002048633
            

        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

            const double var_x1 = exp(9.9999999999999995e-8);
            const double var_x3 = 1 / (-1.0 + var_x1);
            const double var_x6 = exp(-9.9999999999999995e-8);
            const double var_x8 = 1 / (-1.0 + var_x6);
            const double var_x13 = var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2;
            const double var_x19 = 0.90000000000000002 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j;
            const double var_x38 = -var_x19;
            const double var_x40 = var_x13 * var_chaste_interface__L_Type_Calcium_Current__d;
            const double var_x46 = 1 / var_chaste_interface__Calcium_Concentrations__Ca_j;
            const double var_x73 = _lt_0_row[0];
            const double var_x74 = pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3);
            const double var_x75 = var_x74 * mParameters[2];
            const double var_x76 = var_x73 * var_x75;
            const double var_x77 = _lt_0_row[1];
            const double var_x78 = pow(mParameters[4], 3);
            const double var_x79 = var_x78 * var_chaste_interface__Calcium_Concentrations__Ca_j;
            const double var_x80 = var_x77 * var_x79;
            const double var_x81 = 1.0 + 0.32000000000000001 * var_x77;
            const double var_x82 = mParameters[13] / var_x81;
            const double var_x83 = pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2);
            const double var_x84 = 1 / var_x83;
            const double var_x85 = 1.0 + 2.2499999999999996e-8 * var_x84;
            const double var_x86 = 1 / var_x85;
            const double var_x87 = (1.0 + 278.55153203342621 * var_chaste_interface__Calcium_Concentrations__Ca_j) * var_chaste_interface__Calcium_Concentrations__Ca_j;
            const double var_x88 = 1.0 + 0.00053869674493876331 * var_x74;
            const double var_x89 = 0.0035899999999999999 * var_x78;
            const double var_x90 = 1 / (var_x75 + var_x79 + 669921.875 * var_x87 + 1.3 * var_x74 + var_x88 * var_x89);
            const double var_x91 = var_x86 * var_x90;
            const double var_x92 = var_x82 * var_x91;
            const double var_x124 = var_x76 - var_x80;
            const double var_x128 = fabs(var_chaste_interface__membrane__V);
            const double var_x129 = var_x128 < 1.3356169352749131e-6;
            const double var_x130 = _lt_0_row[8];
            const double var_x131 = -1.0 + var_x130;
            const double var_x132 = 1 / var_x131;
            const double var_x133 = var_x40 * mParameters[5];
            const double var_x134 = var_x132 * var_x133;
            const double var_x141 = 1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j;
            const double var_x151 = var_x134 * var_chaste_interface__membrane__V;
            const double var_x196 = 0.5 + 374358.83507802623 * var_chaste_interface__membrane__V;
            const double var_x197 = 9.5939859749999992e-7 * mParameters[5];
            const double var_x198 = var_x197 * var_x3;
            const double var_x199 = var_x197 * var_x8;
            const double var_x268 = 0.64648681440406586 * var_x151;
            const double var_x290 = 5.3588338192419823e-9 * var_x78;
            const double var_x291 = var_x124 * var_x82;
            const double var_x292 = var_x291 * var_x86 / pow((var_x87 + 1.9405247813411081e-6 * var_x74 + 1.4927113702623908e-6 * var_x75 + 1.4927113702623908e-6 * var_x79 + var_x290 * var_x88), 2);
            const double var_x309 = var_x199 * var_x6;
            const double var_x310 = -var_x309 + var_x196 * (var_x309 + var_x1 * var_x198);
            const double var_x311 = 0.00080995817805876559 * var_x46;
            const double var_x312 = 5.2281977629563632e-6 + pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 1.6000000000000001);
            const double var_x313 = 0.011844800000000001 * pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2.2000000000000002) / pow(var_x312, 2);
            const double var_x314 = 0.011844800000000001 * pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 0.60000000000000009) / var_x312;
            const double var_x316 = var_x77 * var_x78;
            const double var_x317 = var_x316 * var_x92;
            const double var_x318 = -669921.875 - var_x78;
            const double var_x319 = var_x318 - 373215529.24791086 * var_chaste_interface__Calcium_Concentrations__Ca_j;
            const double var_x320 = var_x291 * var_x90 / (pow(var_x85, 2) * pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 3));
            const double var_x322 = var_x130 * var_x141 * var_x268;
            const double var_x339 = 1 / M_PI;
            const double var_x501 = 100.0 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j;
            const double var_x505 = 100.0 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j;
            const double var_x507 = 0.90000000000000002 + var_x38;
            const double var_x508 = var_x40 * var_x507;
            const double var_x510 = var_x339 * mParameters[6];
            const double var_x536 = 915110855.46836078 * var_x510;
            const double var_x540 = 4.9020119168033731e-13 * var_x292;
            const double var_x541 = 1623.3766233766237 * var_chaste_interface__SR_Fluxes__Ry_Ro;
            const double var_x542 = 145.53224458892856 * var_x339;
            const double var_x543 = var_x311 + var_x314 - var_x313 + 0.22 * var_x317 - 9.8999999999999977e-9 * var_x320 - var_x319 * var_x540;
            
            partialF = -75.377506864564012 + var_x501 + var_x505 - var_x541 - var_x542 - var_x536 * ((var_x129) ? (var_x543 + var_x310 * var_x508) : (var_x322 + var_x543));
        }
        else
        {
            const double y_save = rY[35];
            rY[35] += delta;
            const double temp = EvaluateYDerivative35(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[35])/delta;
            rY[35] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative36(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -84.10546
        double var_chaste_interface__Calcium_Concentrations__Ca_i = rY[1];
        // Units: millimolar; Initial value: 9.719632e-05
        double var_chaste_interface__L_Type_Calcium_Current__d = rY[11];
        // Units: dimensionless; Initial value: 1.879996e-06
        double var_chaste_interface__L_Type_Calcium_Current__f = rY[12];
        // Units: dimensionless; Initial value: 0.9789409
        double var_chaste_interface__L_Type_Calcium_Current__f_2 = rY[13];
        // Units: dimensionless; Initial value: 0.9993986
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl = rY[15];
        // Units: dimensionless; Initial value: 0.0169833
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl = rY[27];
        // Units: millimolar; Initial value: 0.01101044
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl = rY[29];
        // Units: millimolar; Initial value: 0.1238366
        double var_chaste_interface__Sodium_Concentrations__Na_sl = rY[31];
        // Units: millimolar; Initial value: 10.01974
        double var_chaste_interface__Calcium_Concentrations__Ca_j = rY[35];
        // Units: millimolar; Initial value: 0.0002048633
        double var_chaste_interface__Calcium_Concentrations__Ca_sl = rY[36];
        // Units: millimolar; Initial value: 0.0001188246
        

        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_Na_Ca_Exchanger_Current__I_ncx_sl = 0.89000000000000001 * (pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) * mParameters[2] * _lt_0_row[0] - pow(mParameters[4], 3) * var_chaste_interface__Calcium_Concentrations__Ca_sl * _lt_0_row[1]) * mParameters[13] / ((_lt_0_row[2]) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 2)) * (1.3 * pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) + pow(mParameters[4], 3) * var_chaste_interface__Calcium_Concentrations__Ca_sl + pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) * mParameters[2] + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Calcium_Concentrations__Ca_sl) * var_chaste_interface__Calcium_Concentrations__Ca_sl + 0.0035899999999999999 * pow(mParameters[4], 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3)))); // picoA_per_picoF
        const double var_Calcium_Concentrations__I_Ca_tot_sl = 0.00049065700000000003 * var_chaste_interface__membrane__V - 2.0 * var_Na_Ca_Exchanger_Current__I_ncx_sl - 0.0065532979861118307 * log(mParameters[2] / var_chaste_interface__Calcium_Concentrations__Ca_sl) + 0.059896999999999999 * pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 1.6000000000000001) / (5.2281977629563632e-6 + pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 1.6000000000000001)) + 0.099999999999999978 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_sl * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.71831868267118426 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_sl * _lt_0_row[8]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[9]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2; // picoA_per_picoF
        const double var_membrane__V_cell = 1.050625e-11 * M_PI; // liter
        const double var_membrane__V_myo = 0.65000000000000002 * var_membrane__V_cell; // liter
        const double var_membrane__V_sl = 0.02 * var_membrane__V_cell; // liter
        const double d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_sl = -0.029999999999999999 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl + 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl + 0.0134 * var_membrane__V_myo / var_membrane__V_sl) * var_chaste_interface__Calcium_Concentrations__Ca_sl; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_sl = -1.3 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl + 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl + 0.037400000000000003 * var_membrane__V_myo / var_membrane__V_sl) * var_chaste_interface__Calcium_Concentrations__Ca_sl; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Calcium_Concentrations__Ca_sl = -d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_sl - d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_sl + 8.2413000000000004e-13 * (-var_chaste_interface__Calcium_Concentrations__Ca_sl + var_chaste_interface__Calcium_Concentrations__Ca_j) / var_membrane__V_sl + 3.7243000000000002e-12 * (-var_chaste_interface__Calcium_Concentrations__Ca_sl + var_chaste_interface__Calcium_Concentrations__Ca_i) / var_membrane__V_sl - 5.182152666217547e-6 * var_Calcium_Concentrations__I_Ca_tot_sl * mParameters[6] / var_membrane__V_sl; // millimolar / millisecond

        return d_dt_chaste_interface_var_Calcium_Concentrations__Ca_sl;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative36(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -84.10546
            double var_chaste_interface__L_Type_Calcium_Current__d = rY[11];
            // Units: dimensionless; Initial value: 1.879996e-06
            double var_chaste_interface__L_Type_Calcium_Current__f = rY[12];
            // Units: dimensionless; Initial value: 0.9789409
            double var_chaste_interface__L_Type_Calcium_Current__f_2 = rY[13];
            // Units: dimensionless; Initial value: 0.9993986
            double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl = rY[15];
            // Units: dimensionless; Initial value: 0.0169833
            double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl = rY[27];
            // Units: millimolar; Initial value: 0.01101044
            double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl = rY[29];
            // Units: millimolar; Initial value: 0.1238366
            double var_chaste_interface__Sodium_Concentrations__Na_sl = rY[31];
            // Units: millimolar; Initial value: 10.01974
            double var_chaste_interface__Calcium_Concentrations__Ca_sl = rY[36];
            // Units: millimolar; Initial value: 0.0001188246
            

        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

            const double var_x1 = exp(9.9999999999999995e-8);
            const double var_x3 = 1 / (-1.0 + var_x1);
            const double var_x6 = exp(-9.9999999999999995e-8);
            const double var_x8 = 1 / (-1.0 + var_x6);
            const double var_x11 = 0.099999999999999978 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl;
            const double var_x13 = var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2;
            const double var_x37 = -var_x11;
            const double var_x40 = var_x13 * var_chaste_interface__L_Type_Calcium_Current__d;
            const double var_x44 = 1 / var_chaste_interface__Calcium_Concentrations__Ca_sl;
            const double var_x73 = _lt_0_row[0];
            const double var_x77 = _lt_0_row[1];
            const double var_x78 = pow(mParameters[4], 3);
            const double var_x81 = 1.0 + 0.32000000000000001 * var_x77;
            const double var_x82 = mParameters[13] / var_x81;
            const double var_x89 = 0.0035899999999999999 * var_x78;
            const double var_x94 = pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3);
            const double var_x95 = var_x94 * mParameters[2];
            const double var_x96 = var_x73 * var_x95;
            const double var_x97 = var_x78 * var_chaste_interface__Calcium_Concentrations__Ca_sl;
            const double var_x98 = var_x77 * var_x97;
            const double var_x99 = pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, (-2));
            const double var_x100 = 1.0 + 2.2499999999999996e-8 * var_x99;
            const double var_x101 = 1 / var_x100;
            const double var_x102 = (1.0 + 278.55153203342621 * var_chaste_interface__Calcium_Concentrations__Ca_sl) * var_chaste_interface__Calcium_Concentrations__Ca_sl;
            const double var_x103 = 1.0 + 0.00053869674493876331 * var_x94;
            const double var_x104 = 1 / (var_x95 + var_x97 + 669921.875 * var_x102 + 1.3 * var_x94 + var_x103 * var_x89);
            const double var_x105 = var_x101 * var_x104;
            const double var_x106 = var_x105 * var_x82;
            const double var_x120 = var_x96 - var_x98;
            const double var_x128 = fabs(var_chaste_interface__membrane__V);
            const double var_x129 = var_x128 < 1.3356169352749131e-6;
            const double var_x130 = _lt_0_row[8];
            const double var_x131 = -1.0 + var_x130;
            const double var_x132 = 1 / var_x131;
            const double var_x133 = var_x40 * mParameters[5];
            const double var_x134 = var_x132 * var_x133;
            const double var_x135 = 1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl;
            const double var_x151 = var_x134 * var_chaste_interface__membrane__V;
            const double var_x196 = 0.5 + 374358.83507802623 * var_chaste_interface__membrane__V;
            const double var_x197 = 9.5939859749999992e-7 * mParameters[5];
            const double var_x198 = var_x197 * var_x3;
            const double var_x199 = var_x197 * var_x8;
            const double var_x276 = 0.071831868267118404 * var_x151;
            const double var_x290 = 5.3588338192419823e-9 * var_x78;
            const double var_x302 = var_x120 * var_x82;
            const double var_x303 = var_x101 * var_x302 / pow((var_x102 + 1.9405247813411081e-6 * var_x94 + 1.4927113702623908e-6 * var_x95 + 1.4927113702623908e-6 * var_x97 + var_x103 * var_x290), 2);
            const double var_x309 = var_x199 * var_x6;
            const double var_x310 = -var_x309 + var_x196 * (var_x309 + var_x1 * var_x198);
            const double var_x316 = var_x77 * var_x78;
            const double var_x318 = -669921.875 - var_x78;
            const double var_x323 = 0.0065532979861118307 * var_x44;
            const double var_x324 = 5.2281977629563632e-6 + pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 1.6000000000000001);
            const double var_x325 = 0.095835200000000009 * pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 2.2000000000000002) / pow(var_x324, 2);
            const double var_x326 = 0.095835200000000009 * pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 0.60000000000000009) / var_x324;
            const double var_x327 = var_x106 * var_x316;
            const double var_x328 = var_x318 - 373215529.24791086 * var_chaste_interface__Calcium_Concentrations__Ca_sl;
            const double var_x329 = var_x104 * var_x302 / (pow(var_x100, 2) * pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 3));
            const double var_x331 = var_x130 * var_x135 * var_x276;
            const double var_x339 = 1 / M_PI;
            const double var_x504 = 100.0 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl;
            const double var_x506 = 100.0 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl;
            const double var_x510 = var_x339 * mParameters[6];
            const double var_x523 = 0.099999999999999978 + var_x37;
            const double var_x524 = var_x40 * var_x523;
            const double var_x545 = 24662237.554872323 * var_x510;
            const double var_x548 = 3.9661732781409103e-12 * var_x303;
            const double var_x549 = var_x323 + var_x326 - var_x325 + 1.78 * var_x327 - 8.0099999999999983e-8 * var_x329 - var_x328 * var_x548;
            
            partialF = -165.10000000000002 + var_x504 + var_x506 - 21.646305770374777 * var_x339 - var_x545 * ((var_x129) ? (var_x549 + var_x310 * var_x524) : (var_x331 + var_x549));
        }
        else
        {
            const double y_save = rY[36];
            rY[36] += delta;
            const double temp = EvaluateYDerivative36(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[36])/delta;
            rY[36] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative37(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Calcium_Concentrations__Ca_i = rY[1];
        // Units: millimolar; Initial value: 9.719632e-05
        double var_chaste_interface__SR_Fluxes__Ry_Ro = rY[17];
        // Units: dimensionless; Initial value: 1.149876e-06
        double var_chaste_interface__Calcium_Concentrations__Ca_j = rY[35];
        // Units: millimolar; Initial value: 0.0002048633
        double var_chaste_interface__Calcium_Concentrations__Ca_SR = rY[37];
        // Units: millimolar; Initial value: 0.6138856
        double var_chaste_interface__Calcium_Concentrations__Csqn_b = rY[38];
        // Units: millimolar; Initial value: 1.262853
        


        // Mathematics
        const double var_SR_Fluxes__J_SR_leak = 5.3480000000000003e-6 * var_chaste_interface__Calcium_Concentrations__Ca_SR - 5.3480000000000003e-6 * var_chaste_interface__Calcium_Concentrations__Ca_j; // milliM_per_millis
        const double var_SR_Fluxes__J_ser_Ca = (2814485.1633595936 * pow(var_chaste_interface__Calcium_Concentrations__Ca_i, 1.7869999999999999) - 0.38742512113256738 * pow(var_chaste_interface__Calcium_Concentrations__Ca_SR, 1.7869999999999999)) * mParameters[0] / (1.0 + 0.38742512113256738 * pow(var_chaste_interface__Calcium_Concentrations__Ca_SR, 1.7869999999999999) + 2814485.1633595936 * pow(var_chaste_interface__Calcium_Concentrations__Ca_i, 1.7869999999999999)); // milliM_per_millis
        const double var_SR_Fluxes__J_SR_Ca_rel = 25.0 * (-var_chaste_interface__Calcium_Concentrations__Ca_j + var_chaste_interface__Calcium_Concentrations__Ca_SR) * var_chaste_interface__SR_Fluxes__Ry_Ro; // milliM_per_millis
        const double var_membrane__V_cell = 1.050625e-11 * M_PI; // liter
        const double var_membrane__V_myo = 0.65000000000000002 * var_membrane__V_cell; // liter
        const double var_membrane__V_sr = 0.035000000000000003 * var_membrane__V_cell; // liter
        const double d_dt_chaste_interface_var_Calcium_Concentrations__Csqn_b = -65.0 * var_chaste_interface__Calcium_Concentrations__Csqn_b + 100.0 * (-var_chaste_interface__Calcium_Concentrations__Csqn_b + 0.14000000000000001 * var_membrane__V_myo / var_membrane__V_sr) * var_chaste_interface__Calcium_Concentrations__Ca_SR; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Calcium_Concentrations__Ca_SR = -d_dt_chaste_interface_var_Calcium_Concentrations__Csqn_b - var_SR_Fluxes__J_SR_Ca_rel - var_SR_Fluxes__J_SR_leak * var_membrane__V_myo / var_membrane__V_sr + var_SR_Fluxes__J_ser_Ca; // millimolar / millisecond

        return d_dt_chaste_interface_var_Calcium_Concentrations__Ca_SR;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative37(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Calcium_Concentrations__Ca_i = rY[1];
            // Units: millimolar; Initial value: 9.719632e-05
            double var_chaste_interface__SR_Fluxes__Ry_Ro = rY[17];
            // Units: dimensionless; Initial value: 1.149876e-06
            double var_chaste_interface__Calcium_Concentrations__Ca_SR = rY[37];
            // Units: millimolar; Initial value: 0.6138856
            double var_chaste_interface__Calcium_Concentrations__Csqn_b = rY[38];
            // Units: millimolar; Initial value: 1.262853
            


            const double var_x342 = pow(var_chaste_interface__Calcium_Concentrations__Ca_SR, 1.7869999999999999);
            const double var_x343 = 0.38742512113256738 * var_x342;
            const double var_x344 = pow(var_chaste_interface__Calcium_Concentrations__Ca_i, 1.7869999999999999);
            const double var_x345 = 2814485.1633595936 * var_x344;
            const double var_x346 = mParameters[0] / (1.0 + var_x343 + var_x345);
            const double var_x348 = (var_x345 - var_x343) * mParameters[0] / pow((3.5530476870814998e-7 + var_x344 + 1.3765399305573384e-7 * var_x342), 2);
            const double var_x355 = pow(var_chaste_interface__Calcium_Concentrations__Ca_SR, 0.78699999999999992);
            const double var_x356 = var_x346 * var_x355;
            const double var_x357 = var_x348 * var_x355;
            const double var_x550 = 25.0 * var_chaste_interface__SR_Fluxes__Ry_Ro;
            const double var_x551 = 100.0 * var_chaste_interface__Calcium_Concentrations__Csqn_b;
            
            partialF = -260.00009932 + var_x551 - var_x550 - 0.69232869146389786 * var_x356 - 8.7400597733819945e-14 * var_x357;
        }
        else
        {
            const double y_save = rY[37];
            rY[37] += delta;
            const double temp = EvaluateYDerivative37(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[37])/delta;
            rY[37] = y_save;
        }
        return partialF;
    }
    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluateYDerivative38(double var_chaste_interface__environment__t, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Calcium_Concentrations__Ca_SR = rY[37];
        // Units: millimolar; Initial value: 0.6138856
        double var_chaste_interface__Calcium_Concentrations__Csqn_b = rY[38];
        // Units: millimolar; Initial value: 1.262853
        


        // Mathematics
        const double var_membrane__V_cell = 1.050625e-11 * M_PI; // liter
        const double var_membrane__V_myo = 0.65000000000000002 * var_membrane__V_cell; // liter
        const double var_membrane__V_sr = 0.035000000000000003 * var_membrane__V_cell; // liter
        const double d_dt_chaste_interface_var_Calcium_Concentrations__Csqn_b = -65.0 * var_chaste_interface__Calcium_Concentrations__Csqn_b + 100.0 * (-var_chaste_interface__Calcium_Concentrations__Csqn_b + 0.14000000000000001 * var_membrane__V_myo / var_membrane__V_sr) * var_chaste_interface__Calcium_Concentrations__Ca_SR; // millimolar / millisecond

        return d_dt_chaste_interface_var_Calcium_Concentrations__Csqn_b;
    }

    double Cellcarro_2011_endoFromCellMLGRL2Opt::EvaluatePartialDerivative38(double var_chaste_interface__environment__t, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Calcium_Concentrations__Ca_SR = rY[37];
            // Units: millimolar; Initial value: 0.6138856
            


            const double var_x552 = 100.0 * var_chaste_interface__Calcium_Concentrations__Ca_SR;
            
            partialF = -65.0 - var_x552;
        }
        else
        {
            const double y_save = rY[38];
            rY[38] += delta;
            const double temp = EvaluateYDerivative38(var_chaste_interface__environment__t, rY);
            partialF = (temp-mEvalF[38])/delta;
            rY[38] = y_save;
        }
        return partialF;
    }

    std::vector<double> Cellcarro_2011_endoFromCellMLGRL2Opt::ComputeDerivedQuantities(double var_chaste_interface__environment__t, const std::vector<double> & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -84.10546
        double var_chaste_interface__Fast_Na_Current__m = rY[2];
        // Units: dimensionless; Initial value: 0.002176608
        double var_chaste_interface__Fast_Na_Current__h = rY[3];
        // Units: dimensionless; Initial value: 0.7126555
        double var_chaste_interface__Fast_Na_Current__j = rY[4];
        // Units: dimensionless; Initial value: 0.7119893
        double var_chaste_interface__Rapidly_Activating_K_Current__x_Kr = rY[5];
        // Units: dimensionless; Initial value: 0.01896559
        double var_chaste_interface__Slowly_Activating_K_Current__x_Ks = rY[6];
        // Units: dimensionless; Initial value: 0.00355636
        double var_chaste_interface__Transient_Outward_K_Current__x_to_s = rY[7];
        // Units: dimensionless; Initial value: 0.0003592503
        double var_chaste_interface__Transient_Outward_K_Current__y_to_s = rY[8];
        // Units: dimensionless; Initial value: 0.8161309
        double var_chaste_interface__Transient_Outward_K_Current__x_to_f = rY[9];
        // Units: dimensionless; Initial value: 0.0003592405
        double var_chaste_interface__Transient_Outward_K_Current__y_to_f = rY[10];
        // Units: dimensionless; Initial value: 0.9999976
        double var_chaste_interface__L_Type_Calcium_Current__d = rY[11];
        // Units: dimensionless; Initial value: 1.879996e-06
        double var_chaste_interface__L_Type_Calcium_Current__f = rY[12];
        // Units: dimensionless; Initial value: 0.9789409
        double var_chaste_interface__L_Type_Calcium_Current__f_2 = rY[13];
        // Units: dimensionless; Initial value: 0.9993986
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j = rY[14];
        // Units: dimensionless; Initial value: 0.02861794
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl = rY[15];
        // Units: dimensionless; Initial value: 0.0169833
        double var_chaste_interface__Sodium_Concentrations__Na_j = rY[30];
        // Units: millimolar; Initial value: 10.0211
        double var_chaste_interface__Sodium_Concentrations__Na_sl = rY[31];
        // Units: millimolar; Initial value: 10.01974
        double var_chaste_interface__Sodium_Concentrations__Na_i = rY[32];
        // Units: millimolar; Initial value: 10.01989
        double var_chaste_interface__Calcium_Concentrations__Ca_j = rY[35];
        // Units: millimolar; Initial value: 0.0002048633
        double var_chaste_interface__Calcium_Concentrations__Ca_sl = rY[36];
        // Units: millimolar; Initial value: 0.0001188246
        
        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_Na_K_Pump_Current__Km_Ko = 1.5; // millimolar
        const double var_Na_K_Pump_Current__Km_Naip = 11.0; // millimolar
        const double var_Nerst_Potentials__p_Na_K = 0.018329999999999999; // dimensionless
        const double var_Na_K_Pump_Current__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * mParameters[4]); // dimensionless
        const double var_membrane__C_mem_converted = 1000000.0 * mParameters[6]; // uF
        const double var_membrane__F_junc = 0.11; // dimensionless
        const double var_membrane__F_junc_Ca_L = 0.90000000000000002; // dimensionless
        const double var_membrane__F_sl = 1.0 - var_membrane__F_junc; // dimensionless
        const double var_membrane__F_sl_Ca_L = 1.0 - var_membrane__F_junc_Ca_L; // dimensionless
        const double var_membrane__Frdy = 96485.0; // coulomb_per_mole
        const double var_membrane__I_Stim_converted = -GetIntracellularAreaStimulus(var_chaste_interface__environment__t); // uA_per_cm2
        const double var_membrane__R = 8314.0; // joule_per_kmole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_membrane__FoRT = var_membrane__Frdy / (var_membrane__R * var_membrane__T); // per_milliV
        const double var_Nerst_Potentials__E_K = log(mParameters[3] / mParameters[1]) / var_membrane__FoRT; // millivolt
        const double var_Nerst_Potentials__E_Ks = log((var_Nerst_Potentials__p_Na_K * mParameters[4] + mParameters[3]) / (var_Nerst_Potentials__p_Na_K * var_chaste_interface__Sodium_Concentrations__Na_i + mParameters[1])) / var_membrane__FoRT; // millivolt
        const double var_Nerst_Potentials__E_Na_junc = log(mParameters[4] / var_chaste_interface__Sodium_Concentrations__Na_j) / var_membrane__FoRT; // millivolt
        const double var_Nerst_Potentials__E_Na_sl = log(mParameters[4] / var_chaste_interface__Sodium_Concentrations__Na_sl) / var_membrane__FoRT; // millivolt
        const double var_Fast_Na_Current__I_Na_junc = pow(var_chaste_interface__Fast_Na_Current__m, 3) * (-var_Nerst_Potentials__E_Na_junc + var_chaste_interface__membrane__V) * mParameters[7] * var_chaste_interface__Fast_Na_Current__h * var_chaste_interface__Fast_Na_Current__j * var_membrane__F_junc; // picoA_per_picoF
        const double var_Fast_Na_Current__I_Na_sl = pow(var_chaste_interface__Fast_Na_Current__m, 3) * (-var_Nerst_Potentials__E_Na_sl + var_chaste_interface__membrane__V) * mParameters[7] * var_chaste_interface__Fast_Na_Current__h * var_chaste_interface__Fast_Na_Current__j * var_membrane__F_sl; // picoA_per_picoF
        const double var_Fast_Na_Current__I_Na = var_Fast_Na_Current__I_Na_junc + var_Fast_Na_Current__I_Na_sl; // picoA_per_picoF
        const double var_Fast_Na_Current__I_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_Fast_Na_Current__I_Na; // uA_per_cm2
        const double var_Inward_Rectifier_K_Current__a_K1 = 4.0937999999999999 / (1.0 + exp(-6.0745197599999994 + 0.12164999999999999 * var_chaste_interface__membrane__V - 0.12164999999999999 * var_Nerst_Potentials__E_K)); // dimensionless
        const double var_Inward_Rectifier_K_Current__b_K1 = (15.7197 * exp(-0.21949596900000001 + 0.067390000000000005 * var_chaste_interface__membrane__V - 0.067390000000000005 * var_Nerst_Potentials__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_Nerst_Potentials__E_K)) / (1.0 + exp(-2.3135610949999998 + 0.16284999999999999 * var_Nerst_Potentials__E_K - 0.16284999999999999 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_Inward_Rectifier_K_Current__K1_ss = var_Inward_Rectifier_K_Current__a_K1 / (var_Inward_Rectifier_K_Current__a_K1 + var_Inward_Rectifier_K_Current__b_K1); // dimensionless
        const double var_Inward_Rectifier_K_Current__I_K1 = 0.43033148291193518 * sqrt(mParameters[3]) * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * mParameters[9] * var_Inward_Rectifier_K_Current__K1_ss; // picoA_per_picoF
        const double var_Inward_Rectifier_K_Current__I_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_Inward_Rectifier_K_Current__I_K1; // uA_per_cm2
        const double var_L_Type_Calcium_Current__Ibar_Ca_j = ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_j * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.71831868267118426 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_j * _lt_0_row[8]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[9]))); // picoA_per_picoF
        const double var_L_Type_Calcium_Current__I_Ca_junc = (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * var_L_Type_Calcium_Current__Ibar_Ca_j * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 * var_membrane__F_junc_Ca_L; // picoA_per_picoF
        const double var_L_Type_Calcium_Current__Ibar_Ca_sl = ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_sl * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 9.5939859749999992e-7 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.71831868267118426 * (-mParameters[2] + var_chaste_interface__Calcium_Concentrations__Ca_sl * _lt_0_row[8]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[9]))); // picoA_per_picoF
        const double var_L_Type_Calcium_Current__I_Ca_sl = (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * var_L_Type_Calcium_Current__Ibar_Ca_sl * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 * var_membrane__F_sl_Ca_L; // picoA_per_picoF
        const double var_L_Type_Calcium_Current__I_Ca = var_L_Type_Calcium_Current__I_Ca_junc + var_L_Type_Calcium_Current__I_Ca_sl; // picoA_per_picoF
        const double var_L_Type_Calcium_Current__Ibar_K = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (5.2753173749999997e-10 * (-mParameters[3] + mParameters[1] * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 5.2753173749999997e-10 * (-mParameters[3] + mParameters[1] * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 5.2753173749999997e-10 * (-mParameters[3] + mParameters[1] * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.00019748616671718709 * (-mParameters[3] + mParameters[1] * _lt_0_row[6]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[7]))); // picoA_per_picoF
        const double var_L_Type_Calcium_Current__I_Ca_K = ((1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * var_membrane__F_junc_Ca_L + (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * var_membrane__F_sl_Ca_L) * var_L_Type_Calcium_Current__Ibar_K * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2; // picoA_per_picoF
        const double var_L_Type_Calcium_Current__Ibar_Na_j = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_j * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_j * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_j * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (1.0971453706510394e-5 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_j * _lt_0_row[6]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[7]))); // picoA_per_picoF
        const double var_L_Type_Calcium_Current__I_Ca_Na_junc = (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * var_L_Type_Calcium_Current__Ibar_Na_j * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 * var_membrane__F_junc_Ca_L; // picoA_per_picoF
        const double var_L_Type_Calcium_Current__Ibar_Na_sl = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_sl * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_sl * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) - 2.9307318749999998e-11 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_sl * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) : (1.0971453706510394e-5 * (-mParameters[4] + var_chaste_interface__Sodium_Concentrations__Na_sl * _lt_0_row[6]) * mParameters[5] * var_chaste_interface__membrane__V / (_lt_0_row[7]))); // picoA_per_picoF
        const double var_L_Type_Calcium_Current__I_Ca_Na_sl = (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * var_L_Type_Calcium_Current__Ibar_Na_sl * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 * var_membrane__F_sl_Ca_L; // picoA_per_picoF
        const double var_L_Type_Calcium_Current__I_Ca_Na = var_L_Type_Calcium_Current__I_Ca_Na_junc + var_L_Type_Calcium_Current__I_Ca_Na_sl; // picoA_per_picoF
        const double var_L_Type_Calcium_Current__I_Ca_L = var_L_Type_Calcium_Current__I_Ca + var_L_Type_Calcium_Current__I_Ca_K + var_L_Type_Calcium_Current__I_Ca_Na; // picoA_per_picoF
        const double var_L_Type_Calcium_Current__I_Ca_L_converted = HeartConfig::Instance()->GetCapacitance() * var_L_Type_Calcium_Current__I_Ca_L; // uA_per_cm2
        const double var_Na_K_Pump_Current__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_membrane__FoRT * var_chaste_interface__membrane__V) + 0.036499999999999998 * var_Na_K_Pump_Current__sigma * exp(-var_membrane__FoRT * var_chaste_interface__membrane__V)); // dimensionless
        const double var_Na_K_Pump_Current__I_NaK_junc = mParameters[14] * var_Na_K_Pump_Current__f_NaK * mParameters[3] * var_membrane__F_junc / ((1.0 + pow(var_Na_K_Pump_Current__Km_Naip, 4) / pow(var_chaste_interface__Sodium_Concentrations__Na_j, 4)) * (var_Na_K_Pump_Current__Km_Ko + mParameters[3])); // picoA_per_picoF
        const double var_Na_K_Pump_Current__I_NaK_sl = mParameters[14] * var_Na_K_Pump_Current__f_NaK * mParameters[3] * var_membrane__F_sl / ((1.0 + pow(var_Na_K_Pump_Current__Km_Naip, 4) / pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 4)) * (var_Na_K_Pump_Current__Km_Ko + mParameters[3])); // picoA_per_picoF
        const double var_Na_K_Pump_Current__I_NaK = var_Na_K_Pump_Current__I_NaK_junc + var_Na_K_Pump_Current__I_NaK_sl; // picoA_per_picoF
        const double var_Na_K_Pump_Current__I_NaK_converted = HeartConfig::Instance()->GetCapacitance() * var_Na_K_Pump_Current__I_NaK; // uA_per_cm2
        const double var_Rapidly_Activating_K_Current__r_Kr = 1 / (_lt_0_row[10]); // dimensionless
        const double var_Rapidly_Activating_K_Current__I_Kr = 0.43033148291193518 * sqrt(mParameters[3]) * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * mParameters[10] * var_Rapidly_Activating_K_Current__r_Kr * var_chaste_interface__Rapidly_Activating_K_Current__x_Kr; // picoA_per_picoF
        const double var_Rapidly_Activating_K_Current__I_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_Rapidly_Activating_K_Current__I_Kr; // uA_per_cm2
        const double var_Slowly_Activating_K_Current__I_Ks_junc = pow(var_chaste_interface__Slowly_Activating_K_Current__x_Ks, 2) * (-var_Nerst_Potentials__E_Ks + var_chaste_interface__membrane__V) * mParameters[11] * var_membrane__F_junc; // picoA_per_picoF
        const double var_Slowly_Activating_K_Current__I_Ks_sl = pow(var_chaste_interface__Slowly_Activating_K_Current__x_Ks, 2) * (-var_Nerst_Potentials__E_Ks + var_chaste_interface__membrane__V) * mParameters[11] * var_membrane__F_sl; // picoA_per_picoF
        const double var_Slowly_Activating_K_Current__I_Ks = var_Slowly_Activating_K_Current__I_Ks_junc + var_Slowly_Activating_K_Current__I_Ks_sl; // picoA_per_picoF
        const double var_Slowly_Activating_K_Current__I_Ks_converted = HeartConfig::Instance()->GetCapacitance() * var_Slowly_Activating_K_Current__I_Ks; // uA_per_cm2
        const double var_Transient_Outward_K_Current__I_to_f = (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * mParameters[8] * var_chaste_interface__Transient_Outward_K_Current__x_to_f * var_chaste_interface__Transient_Outward_K_Current__y_to_f; // picoA_per_picoF
        const double var_Transient_Outward_K_Current__I_to_s = (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * mParameters[12] * var_chaste_interface__Transient_Outward_K_Current__x_to_s * var_chaste_interface__Transient_Outward_K_Current__y_to_s; // picoA_per_picoF
        const double var_Transient_Outward_K_Current__I_to = var_Transient_Outward_K_Current__I_to_f + var_Transient_Outward_K_Current__I_to_s; // picoA_per_picoF
        const double var_Transient_Outward_K_Current__I_to_converted = HeartConfig::Instance()->GetCapacitance() * var_Transient_Outward_K_Current__I_to; // uA_per_cm2

        std::vector<double> dqs(10);
        dqs[0] = var_L_Type_Calcium_Current__I_Ca_L_converted;
        dqs[1] = var_membrane__C_mem_converted;
        dqs[2] = var_Fast_Na_Current__I_Na_converted;
        dqs[3] = var_Inward_Rectifier_K_Current__I_K1_converted;
        dqs[4] = var_Rapidly_Activating_K_Current__I_Kr_converted;
        dqs[5] = var_Slowly_Activating_K_Current__I_Ks_converted;
        dqs[6] = var_Na_K_Pump_Current__I_NaK_converted;
        dqs[7] = var_membrane__I_Stim_converted;
        dqs[8] = var_Transient_Outward_K_Current__I_to_converted;
        dqs[9] = var_chaste_interface__environment__t;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellcarro_2011_endoFromCellMLGRL2Opt>::Initialise(void)
{
    this->mSystemName = "Carro_Rodriguez_Laguna_Pueyo_CinC2010_EPI";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-84.10546);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(9.719632e-05);

    // rY[2]:
    this->mVariableNames.push_back("Fast_Na_Current__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.002176608);

    // rY[3]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7126555);

    // rY[4]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7119893);

    // rY[5]:
    this->mVariableNames.push_back("Rapidly_Activating_K_Current__x_Kr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.01896559);

    // rY[6]:
    this->mVariableNames.push_back("Slowly_Activating_K_Current__x_Ks");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00355636);

    // rY[7]:
    this->mVariableNames.push_back("Transient_Outward_K_Current__x_to_s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0003592503);

    // rY[8]:
    this->mVariableNames.push_back("Transient_Outward_K_Current__y_to_s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.8161309);

    // rY[9]:
    this->mVariableNames.push_back("Transient_Outward_K_Current__x_to_f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0003592405);

    // rY[10]:
    this->mVariableNames.push_back("Transient_Outward_K_Current__y_to_f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9999976);

    // rY[11]:
    this->mVariableNames.push_back("L_Type_Calcium_Current__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.879996e-06);

    // rY[12]:
    this->mVariableNames.push_back("L_Type_Calcium_Current__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9789409);

    // rY[13]:
    this->mVariableNames.push_back("L_Type_Calcium_Current__f_2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9993986);

    // rY[14]:
    this->mVariableNames.push_back("L_Type_Calcium_Current__f_Ca_B_j");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.02861794);

    // rY[15]:
    this->mVariableNames.push_back("L_Type_Calcium_Current__f_Ca_B_sl");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0169833);

    // rY[16]:
    this->mVariableNames.push_back("SR_Fluxes__Ry_Rr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.8888214);

    // rY[17]:
    this->mVariableNames.push_back("SR_Fluxes__Ry_Ro");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.149876e-06);

    // rY[18]:
    this->mVariableNames.push_back("SR_Fluxes__Ry_Ri");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.43831e-07);

    // rY[19]:
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__TnC_l");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.009811535);

    // rY[20]:
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__TnC_h_c");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.1225802);

    // rY[21]:
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__TnC_h_m");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.008128604);

    // rY[22]:
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__CaM");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0003288063);

    // rY[23]:
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__Myo_c");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.002522168);

    // rY[24]:
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__Myo_m");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.1369514);

    // rY[25]:
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__SRB");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.00238683);

    // rY[26]:
    this->mVariableNames.push_back("Junctional_and_SL_Ca_Buffers__SLL_j");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.008606485);

    // rY[27]:
    this->mVariableNames.push_back("Junctional_and_SL_Ca_Buffers__SLL_sl");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.01101044);

    // rY[28]:
    this->mVariableNames.push_back("Junctional_and_SL_Ca_Buffers__SLH_j");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.08078504);

    // rY[29]:
    this->mVariableNames.push_back("Junctional_and_SL_Ca_Buffers__SLH_sl");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.1238366);

    // rY[30]:
    this->mVariableNames.push_back("Sodium_Concentrations__Na_j");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(10.0211);

    // rY[31]:
    this->mVariableNames.push_back("Sodium_Concentrations__Na_sl");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(10.01974);

    // rY[32]:
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(10.01989);

    // rY[33]:
    this->mVariableNames.push_back("Sodium_Concentrations__Na_B_j");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(3.785209);

    // rY[34]:
    this->mVariableNames.push_back("Sodium_Concentrations__Na_B_sl");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.8259271);

    // rY[35]:
    this->mVariableNames.push_back("Calcium_Concentrations__Ca_j");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0002048633);

    // rY[36]:
    this->mVariableNames.push_back("Calcium_Concentrations__Ca_sl");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0001188246);

    // rY[37]:
    this->mVariableNames.push_back("Calcium_Concentrations__Ca_SR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.6138856);

    // rY[38]:
    this->mVariableNames.push_back("Calcium_Concentrations__Csqn_b");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.262853);

    // mParameters[0]:
    this->mParameterNames.push_back("SR_uptake_current_max");
    this->mParameterUnits.push_back("milliM_per_millis");

    // mParameters[1]:
    this->mParameterNames.push_back("cytosolic_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[2]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[3]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[4]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[5]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[6]:
    this->mParameterNames.push_back("membrane__C_mem");
    this->mParameterUnits.push_back("farad");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_fast_transient_outward_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[12]:
    this->mParameterNames.push_back("membrane_slow_transient_outward_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[13]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("picoA_per_picoF");

    // mParameters[14]:
    this->mParameterNames.push_back("membrane_sodium_potassium_pump_current_permeability");
    this->mParameterUnits.push_back("picoA_per_picoF");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_capacitance");
    this->mDerivedQuantityUnits.push_back("uF");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_potassium_pump_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellcarro_2011_endoFromCellMLGRL2Opt)

