//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: maltsev_2009
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: GeneralizedRushLarsenSecondOrderOpt)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "maltsev_2009.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables : public AbstractLookupTableCollection
{
public:
    static Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables);
        }
        return mpInstance.get();
    }

    void FreeMemory()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }

    // Row lookup methods
    // using linear-interpolation

    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<28; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }


    const double * IndexTable0(double var_chaste_interface__Vm__Vm)
    {
        const double _offset_0 = var_chaste_interface__Vm__Vm - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }


// LCOV_EXCL_START
    bool CheckIndex0(double& var_chaste_interface__Vm__Vm)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__Vm__Vm>mTableMaxs[0] || var_chaste_interface__Vm__Vm<mTableMins[0])
        {
// LCOV_EXCL_START
            _oob_0 = true;
// LCOV_EXCL_STOP
        }
        return _oob_0;
    }
// LCOV_EXCL_STOP

    ~Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

    }

protected:
    Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables(const Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables&);
    Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables& operator= (const Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables&);
    Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);

        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 28;
        mTableMins[0] = -250.0;
        mTableMaxs[0] = 550.0;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;

        Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::RegenerateTables();
    }

    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);


        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][28];

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__Vm__Vm) {
                    return exp(-0.0051222473865587962 * var_chaste_interface__Vm__Vm);
                };
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][0] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__Vm__Vm) {
                    return exp(0.0080724972509135153 * var_chaste_interface__Vm__Vm);
                };
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][1] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__Vm__Vm) {
                    return exp(-0.0080724972509135153 * var_chaste_interface__Vm__Vm);
                };
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][2] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__Vm__Vm) {
                    return 1 / (1.0 + exp(3.7692307692307692 + 0.076923076923076927 * var_chaste_interface__Vm__Vm));
                };
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][3] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__Vm__Vm) {
                    return 6.0599999999999996 + 39.101999999999997 / (0.065000000000000002 * exp(4.593 + 0.10000000000000001 * var_chaste_interface__Vm__Vm) + 0.56999999999999995 * exp(-3.52 - 0.080000000000000002 * var_chaste_interface__Vm__Vm));
                };
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][4] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__Vm__Vm) {
                    return 1 / (1.0 + exp(1.2866666666666666 - 0.066666666666666666 * var_chaste_interface__Vm__Vm));
                };
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][5] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__Vm__Vm) {
                    return 2.75352 + 14.40516 / (1.0369999999999999 * exp(2.7548999999999997 + 0.089999999999999997 * var_chaste_interface__Vm__Vm) + 0.36899999999999999 * exp(-2.8607999999999998 - 0.12 * var_chaste_interface__Vm__Vm));
                };
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][6] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__Vm__Vm) {
                    return 1 / (1.0 + exp(-2.25 - 0.16666666666666666 * var_chaste_interface__Vm__Vm));
                };
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][7] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__Vm__Vm) {
                    return ((fabs(-5.0 + var_chaste_interface__Vm__Vm) < 2.5000000000025002e-7) ? (-2.8575000000028576e-9 / (-1.0 + exp(-1.0000000000010001e-7)) + 1999999.9999979998 * (-4.9999997499999997 + var_chaste_interface__Vm__Vm) * (2.8575000000028576e-9 / (-1.0 + exp(1.0000000000010001e-7)) + 2.8575000000028576e-9 / (-1.0 + exp(-1.0000000000010001e-7)))) : (0.011429999999999999 * (-5.0 + var_chaste_interface__Vm__Vm) / (-1.0 + exp(-2.0 + 0.40000000000000002 * var_chaste_interface__Vm__Vm)))) + ((fabs(35.0 + var_chaste_interface__Vm__Vm) < 2.5000000000718892e-7) ? (-7.0975000009920736e-9 / (-1.0 + exp(-1.000000000139778e-7)) - 0.084900000000000003 * var_chaste_interface__Vm__Vm / (-1.0 + exp(-0.20833333333333334 * var_chaste_interface__Vm__Vm)) - 1999999.9999424887 * (34.999999750000001 + var_chaste_interface__Vm__Vm) * (7.0975000009920736e-9 / (-1.0 + exp(-1.000000000139778e-7)) + 7.0974999994161126e-9 / (-1.0 + exp(9.9999999991773334e-8)))) : ((fabs(var_chaste_interface__Vm__Vm) < 4.7999999999999996e-7) ? (-4.0752e-8 / (-1.0 + exp(-9.9999999999999995e-8)) - 0.028389999999999999 * (35.0 + var_chaste_interface__Vm__Vm) / (-1.0 + exp(-14.0 - 0.40000000000000002 * var_chaste_interface__Vm__Vm)) - 1041666.6666666667 * (-4.7999999999999996e-7 + var_chaste_interface__Vm__Vm) * (4.0752e-8 / (-1.0 + exp(9.9999999999999995e-8)) + 4.0752e-8 / (-1.0 + exp(-9.9999999999999995e-8)))) : (-0.028389999999999999 * (35.0 + var_chaste_interface__Vm__Vm) / (-1.0 + exp(-14.0 - 0.40000000000000002 * var_chaste_interface__Vm__Vm)) - 0.084900000000000003 * var_chaste_interface__Vm__Vm / (-1.0 + exp(-0.20833333333333334 * var_chaste_interface__Vm__Vm)))));
                };
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][8] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__Vm__Vm) {
                    return 1 / (1.0 + exp(4.794520547945206 + 0.13698630136986301 * var_chaste_interface__Vm__Vm));
                };
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][9] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__Vm__Vm) {
                    return 44.299999999999997 + 257.10000000000002 * exp(-5.4668495419491743 * pow((1 + 0.030769230769230771 * var_chaste_interface__Vm__Vm), 2));
                };
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][10] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__Vm__Vm) {
                    return 1 / (1.0 + exp(-4.3833333333333337 - 0.16666666666666666 * var_chaste_interface__Vm__Vm));
                };
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][11] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__Vm__Vm) {
                    return 1.0680000000000001 * exp(0.87666666666666671 + 0.033333333333333333 * var_chaste_interface__Vm__Vm) + 1.0680000000000001 * exp(-0.87666666666666671 - 0.033333333333333333 * var_chaste_interface__Vm__Vm);
                };
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][12] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__Vm__Vm) {
                    return 1 / (1.0 + exp(11.017857142857144 + 0.17857142857142858 * var_chaste_interface__Vm__Vm));
                };
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][13] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__Vm__Vm) {
                    return 0.014999999999999999 * exp(4.0117035110533159 + 0.065019505851755519 * var_chaste_interface__Vm__Vm) + 0.015299999999999999 * exp(-0.74069627851140463 - 0.012004801920768308 * var_chaste_interface__Vm__Vm);
                };
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][14] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__Vm__Vm) {
                    return 1 / (1.0 + exp(-2.1886792452830188 - 0.094339622641509441 * var_chaste_interface__Vm__Vm));
                };
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][15] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__Vm__Vm) {
                    return 0.043942879265498072 * exp(0.062893081761006289 * var_chaste_interface__Vm__Vm) + 0.0011340097874967246 * exp(-0.044444444444444446 * var_chaste_interface__Vm__Vm);
                };
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][16] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__Vm__Vm) {
                    return 0.0049612928202981696 * exp(0.058823529411764705 * var_chaste_interface__Vm__Vm) + 0.0001771890292963632 * exp(-0.046296296296296294 * var_chaste_interface__Vm__Vm);
                };
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][17] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__Vm__Vm) {
                    return 1 / (1.0 + exp(1.672514619883041 + 0.058479532163742687 * var_chaste_interface__Vm__Vm));
                };
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][18] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__Vm__Vm) {
                    return 0.10000000000000001 * exp(-0.018299935950224173 * var_chaste_interface__Vm__Vm) + 0.65600000000000003 * exp(0.009420009985210585 * var_chaste_interface__Vm__Vm);
                };
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][19] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__Vm__Vm) {
                    return 0.014 / (1.0 + exp(4.4444444444444446 - 0.1111111111111111 * var_chaste_interface__Vm__Vm));
                };
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][20] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__Vm__Vm) {
                    return 0.001 * exp(-0.022222222222222223 * var_chaste_interface__Vm__Vm);
                };
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][21] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__Vm__Vm) {
                    return 1 / (1.0 + exp(4.7407407407407405 + 0.07407407407407407 * var_chaste_interface__Vm__Vm));
                };
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][22] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__Vm__Vm) {
                    return 1.3953756414018557 * exp(-8.5404617897664554 - 0.022074080614542406 * var_chaste_interface__Vm__Vm) + 1.3953756414018557 * exp(-3.8001143986272159 + 0.051999376007487906 * var_chaste_interface__Vm__Vm);
                };
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][23] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__Vm__Vm) {
                    return 1 / (1.0 + exp(-11.4 - 0.20000000000000001 * var_chaste_interface__Vm__Vm));
                };
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][24] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__Vm__Vm) {
                    return 1 / (16.0 * exp(0.125 * var_chaste_interface__Vm__Vm) + 15.0 * exp(0.02 * var_chaste_interface__Vm__Vm)) + 1 / (0.20000000000000001 * exp(-0.0014285714285714286 * var_chaste_interface__Vm__Vm) + 0.14999999999999999 * exp(-0.090909090909090912 * var_chaste_interface__Vm__Vm));
                };
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][25] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__Vm__Vm) {
                    return 1 / (700.0 * exp(0.014285714285714285 * var_chaste_interface__Vm__Vm) + 3100.0 * exp(0.076923076923076927 * var_chaste_interface__Vm__Vm));
                };
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][26] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__Vm__Vm) {
                    return 1 / (50.0 * exp(-0.0014285714285714286 * var_chaste_interface__Vm__Vm) + 95.0 * exp(-0.10000000000000001 * var_chaste_interface__Vm__Vm)) + 0.00022900000000000001 / (1.0 + exp(-0.20000000000000001 * var_chaste_interface__Vm__Vm));
                };
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][27] = val;
            }

            mNeedsRegeneration[0] = false;
        }

        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }

private:
    /** The single instance of the class */
    static std::shared_ptr<Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[28];

    // Lookup tables
    double (*_lookup_table_0)[28];
    int _lookup_table_0_num_misshit_piecewise[28] = {0};

};

std::shared_ptr<Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables> Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::mpInstance;


    double Cellmaltsev_2009FromCellMLGRL2Opt::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    Cellmaltsev_2009FromCellMLGRL2Opt::Cellmaltsev_2009FromCellMLGRL2Opt(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractGeneralizedRushLarsenCardiacCell(
                29,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellmaltsev_2009FromCellMLGRL2Opt>::Instance();
        Init();
        
        this->mParameters[0] = 140.0; // (var_model_parameters__Ki) [millimolar]
        this->mParameters[1] = 10.0; // (var_model_parameters__Nai) [millimolar]
        this->mParameters[2] = 2.0; // (var_model_parameters__Cao) [millimolar]
        this->mParameters[3] = 5.4000000000000004; // (var_model_parameters__Ko) [millimolar]
        this->mParameters[4] = 140.0; // (var_model_parameters__Nao) [millimolar]
        this->mParameters[5] = 0.46400000000000002; // (var_i_CaL__g_CaL) [nanoS_per_picoF]
        this->mParameters[6] = 0.61670000000000003; // (var_i_f__g_if_K) [dimensionless]
        this->mParameters[7] = 0.38329999999999997; // (var_i_f__g_if_Na) [dimensionless]
        this->mParameters[8] = 0.081139729999999993; // (var_i_Kr__g_Kr) [nanoS_per_picoF]
        this->mParameters[9] = 32.0; // (var_model_parameters__Cm) [picoF]
    }

    Cellmaltsev_2009FromCellMLGRL2Opt::~Cellmaltsev_2009FromCellMLGRL2Opt()
    {
    }

    AbstractLookupTableCollection* Cellmaltsev_2009FromCellMLGRL2Opt::GetLookupTableCollection()
    {
        return Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance();
    }
    
    double Cellmaltsev_2009FromCellMLGRL2Opt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__i_CaL_dL_gate__dL = rY[2];
        // Units: dimensionless; Initial value: 0.000584545564405
        double var_chaste_interface__i_CaL_fL_gate__fL = rY[3];
        // Units: dimensionless; Initial value: 0.862381249774
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[4];
        // Units: dimensionless; Initial value: 0.711395919653
        double var_chaste_interface__i_CaT_dT_gate__dT = rY[5];
        // Units: dimensionless; Initial value: 0.00504393374639
        double var_chaste_interface__i_CaT_fT_gate__fT = rY[6];
        // Units: dimensionless; Initial value: 0.420757825415
        double var_chaste_interface__i_Kr_pa_gate__paS = rY[7];
        // Units: dimensionless; Initial value: 0.453100576739
        double var_chaste_interface__i_Kr_pa_gate__paF = rY[8];
        // Units: dimensionless; Initial value: 0.144755091176
        double var_chaste_interface__i_Kr_pi_gate__pi_ = rY[9];
        // Units: dimensionless; Initial value: 0.849409822329
        double var_chaste_interface__i_Ks_n_gate__n = rY[10];
        // Units: dimensionless; Initial value: 0.0264600410928
        double var_chaste_interface__AP_sensitive_currents_q_gate__q = rY[11];
        // Units: dimensionless; Initial value: 0.694241313965
        double var_chaste_interface__AP_sensitive_currents_r_gate__r = rY[12];
        // Units: dimensionless; Initial value: 0.00558131733359
        double var_chaste_interface__i_f_y_gate__y = rY[13];
        // Units: dimensionless; Initial value: 0.113643187247
        double var_chaste_interface__i_st_qa_gate__qa = rY[14];
        // Units: dimensionless; Initial value: 0.42380243163
        double var_chaste_interface__i_st_qi_gate__qi = rY[15];
        // Units: dimensionless; Initial value: 0.447294008304
        double var_chaste_interface__calcium_dynamics__Ca_sub = rY[28];
        // Units: millimolar; Initial value: 0.000138112560112
        
        // Lookup table indexing
        const bool _oob_0 = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm__Vm);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm__Vm);

        const double var_i_NaCa__Qco = 0; // dimensionless
        const double var_i_CaT__i_CaT = 0.1832 * (-45.0 + var_chaste_interface__Vm__Vm) * var_chaste_interface__i_CaT_dT_gate__dT * var_chaste_interface__i_CaT_fT_gate__fT * mParameters[9]; // picoA
        const double var_i_b_Ca__i_b_Ca = 0.00059999999999999995 * (-45.0 + var_chaste_interface__Vm__Vm) * mParameters[9]; // picoA
        const double var_i_st__i_st = 0.0030000000000000001 * (-37.399999999999999 + var_chaste_interface__Vm__Vm) * var_chaste_interface__i_st_qa_gate__qa * var_chaste_interface__i_st_qi_gate__qi * mParameters[9]; // picoA
        const double var_model_parameters__Cm_converted = 9.9999999999999995e-7 * mParameters[9]; // uF
        const double var_i_CaL__i_CaL_converted = 9.9999999999999995e-7 * (-45.0 + var_chaste_interface__Vm__Vm) * HeartConfig::Instance()->GetCapacitance() * mParameters[5] * var_chaste_interface__i_CaL_dL_gate__dL * var_chaste_interface__i_CaL_fCa_gate__fCa * var_chaste_interface__i_CaL_fL_gate__fL * mParameters[9] / var_model_parameters__Cm_converted; // uA_per_cm2
        const double var_i_NaCa__k43 = mParameters[1] / (26.440000000000001 + mParameters[1]); // dimensionless
        const double var_i_NaCa__k34 = mParameters[4] / (4.6630000000000003 + mParameters[4]); // dimensionless
        const double var_electric_potentials__E_K = 26.726549826397882 * log(mParameters[3] / mParameters[0]); // millivolt
        const double var_AP_sensitive_currents__i_sus = 0.02 * (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * var_chaste_interface__AP_sensitive_currents_r_gate__r * mParameters[9]; // picoA
        const double var_AP_sensitive_currents__i_to = 0.252 * (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * var_chaste_interface__AP_sensitive_currents_q_gate__q * var_chaste_interface__AP_sensitive_currents_r_gate__r * mParameters[9]; // picoA
        const double var_electric_potentials__E_Na = 26.726549826397882 * log(mParameters[4] / mParameters[1]); // millivolt
        const double var_i_Kr__i_Kr_converted = 9.9999999999999995e-7 * (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * (0.40000000000000002 * var_chaste_interface__i_Kr_pa_gate__paS + 0.59999999999999998 * var_chaste_interface__i_Kr_pa_gate__paF) * HeartConfig::Instance()->GetCapacitance() * mParameters[8] * var_chaste_interface__i_Kr_pi_gate__pi_ * mParameters[9] / var_model_parameters__Cm_converted; // uA_per_cm2
        const double var_i_Ks__i_Ks = 0.025899999999999999 * pow(var_chaste_interface__i_Ks_n_gate__n, 2) * (-26.726549826397882 * log((mParameters[3] + 0.12 * mParameters[4]) / (mParameters[0] + 0.12 * mParameters[1])) + var_chaste_interface__Vm__Vm) * mParameters[9]; // picoA
        const double var_i_NaCa__di = 1.0 + 48.309178743961354 * (1.0 + 0.037821482602117998 * mParameters[1] + _lt_0_row[0]) * var_chaste_interface__calcium_dynamics__Ca_sub + 0.0025297242600556538 * (1.0 + 0.43687199650502401 * (1.0 + 0.037821482602117998 * mParameters[1]) * mParameters[1]) * mParameters[1]; // dimensionless
        const double var_i_NaCa__do = 1.0 + 0.27300027300027302 * (1.0 + exp(0.037415977988011662 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qco)) * mParameters[2] + 0.00061425061425061424 * (1.0 + 0.0017812611328820807 * (1.0 + 0.2144542140253056 * mParameters[4]) * mParameters[4]) * mParameters[4]; // dimensionless
        const double var_i_NaCa__k12 = 48.309178743961354 * var_chaste_interface__calcium_dynamics__Ca_sub * _lt_0_row[0] / var_i_NaCa__di; // dimensionless
        const double var_i_NaCa__k14 = 0.0011051656880977081 * pow(mParameters[1], 2) * (1.0 + 0.037821482602117998 * mParameters[1]) * _lt_0_row[1] / var_i_NaCa__di; // dimensionless
        const double var_i_NaCa__k21 = 0.27300027300027302 * mParameters[2] * exp(0.037415977988011662 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qco) / var_i_NaCa__do; // dimensionless
        const double var_i_NaCa__k23 = 1.094140745013563e-6 * pow(mParameters[4], 2) * (1.0 + 0.2144542140253056 * mParameters[4]) * _lt_0_row[2] / var_i_NaCa__do; // dimensionless
        const double var_i_NaCa__k32 = _lt_0_row[1]; // dimensionless
        const double var_i_NaCa__k41 = _lt_0_row[2]; // dimensionless
        const double var_i_NaCa__i_NaCa = 187.5 * (((var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k32 * var_i_NaCa__k43 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k12 * var_i_NaCa__k41) * var_i_NaCa__k21 - ((var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k34 * var_i_NaCa__k41 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k21 * var_i_NaCa__k32) * var_i_NaCa__k12) * mParameters[9] / ((var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k23 * var_i_NaCa__k34 + (var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k32 * var_i_NaCa__k43 + (var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k14 * var_i_NaCa__k43 + (var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k34 * var_i_NaCa__k41 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k12 * var_i_NaCa__k41 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k14 * var_i_NaCa__k21 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k12 * var_i_NaCa__k23 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k21 * var_i_NaCa__k32); // picoA
        const double var_i_NaK__i_NaK = 2.8799999999999999 * mParameters[9] / ((1.0 + 1.4974545260150962 * pow((1 / mParameters[3]), 1.2)) * (1.0 + 30.900566853219949 * pow((1 / mParameters[1]), 1.3)) * (1.0 + exp(-4.0 + 0.033333333333333333 * var_electric_potentials__E_Na - 0.033333333333333333 * var_chaste_interface__Vm__Vm))); // picoA
        const double var_i_b_Na__i_b_Na = 0.0048599999999999997 * (-var_electric_potentials__E_Na + var_chaste_interface__Vm__Vm) * mParameters[9]; // picoA
        const double var_i_f__i_f_converted = 9.9999999999999995e-7 * (0.14999999999999999 * pow(var_chaste_interface__i_f_y_gate__y, 2) * (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * mParameters[6] * mParameters[9] + 0.14999999999999999 * pow(var_chaste_interface__i_f_y_gate__y, 2) * (-var_electric_potentials__E_Na + var_chaste_interface__Vm__Vm) * mParameters[7] * mParameters[9]) * HeartConfig::Instance()->GetCapacitance() / var_model_parameters__Cm_converted; // uA_per_cm2
        const double var_chaste_interface__i_ionic = ((var_i_CaL__i_CaL_converted + var_i_Kr__i_Kr_converted + var_i_f__i_f_converted) * var_model_parameters__Cm_converted + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_AP_sensitive_currents__i_sus + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_AP_sensitive_currents__i_to + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_CaT__i_CaT + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_Ks__i_Ks + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_NaCa__i_NaCa + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_NaK__i_NaK + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_b_Ca__i_b_Ca + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_b_Na__i_b_Na + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_st__i_st) / var_model_parameters__Cm_converted; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellmaltsev_2009FromCellMLGRL2Opt::UpdateTransmembranePotential(double var_chaste_interface__environment__time)
    {
        std::vector<double>& rY = rGetStateVariables();
        const unsigned v_index = GetVoltageIndex();
        const double delta = 1e-8;
        const double yinit = rY[v_index];

        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__i_CaL_dL_gate__dL = rY[2];
        // Units: dimensionless; Initial value: 0.000584545564405
        double var_chaste_interface__i_CaL_fL_gate__fL = rY[3];
        // Units: dimensionless; Initial value: 0.862381249774
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[4];
        // Units: dimensionless; Initial value: 0.711395919653
        double var_chaste_interface__i_CaT_dT_gate__dT = rY[5];
        // Units: dimensionless; Initial value: 0.00504393374639
        double var_chaste_interface__i_CaT_fT_gate__fT = rY[6];
        // Units: dimensionless; Initial value: 0.420757825415
        double var_chaste_interface__i_Kr_pa_gate__paS = rY[7];
        // Units: dimensionless; Initial value: 0.453100576739
        double var_chaste_interface__i_Kr_pa_gate__paF = rY[8];
        // Units: dimensionless; Initial value: 0.144755091176
        double var_chaste_interface__i_Kr_pi_gate__pi_ = rY[9];
        // Units: dimensionless; Initial value: 0.849409822329
        double var_chaste_interface__i_Ks_n_gate__n = rY[10];
        // Units: dimensionless; Initial value: 0.0264600410928
        double var_chaste_interface__AP_sensitive_currents_q_gate__q = rY[11];
        // Units: dimensionless; Initial value: 0.694241313965
        double var_chaste_interface__AP_sensitive_currents_r_gate__r = rY[12];
        // Units: dimensionless; Initial value: 0.00558131733359
        double var_chaste_interface__i_f_y_gate__y = rY[13];
        // Units: dimensionless; Initial value: 0.113643187247
        double var_chaste_interface__i_st_qa_gate__qa = rY[14];
        // Units: dimensionless; Initial value: 0.42380243163
        double var_chaste_interface__i_st_qi_gate__qi = rY[15];
        // Units: dimensionless; Initial value: 0.447294008304
        double var_chaste_interface__calcium_dynamics__Ca_sub = rY[28];
        // Units: millimolar; Initial value: 0.000138112560112
        

        // Lookup table indexing
        const bool _oob_0 = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm__Vm);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm__Vm);

        // Mathematics
        double d_dt_chaste_interface_var_Vm__Vm;
        const double var_i_NaCa__Qco = 0; // dimensionless
        const double var_i_CaL__i_CaL = (-45.0 + var_chaste_interface__Vm__Vm) * mParameters[5] * var_chaste_interface__i_CaL_dL_gate__dL * var_chaste_interface__i_CaL_fCa_gate__fCa * var_chaste_interface__i_CaL_fL_gate__fL * mParameters[9]; // picoA
        const double var_i_CaT__i_CaT = 0.1832 * (-45.0 + var_chaste_interface__Vm__Vm) * var_chaste_interface__i_CaT_dT_gate__dT * var_chaste_interface__i_CaT_fT_gate__fT * mParameters[9]; // picoA
        const double var_i_b_Ca__i_b_Ca = 0.00059999999999999995 * (-45.0 + var_chaste_interface__Vm__Vm) * mParameters[9]; // picoA
        const double var_i_NaCa__k43 = mParameters[1] / (26.440000000000001 + mParameters[1]); // dimensionless
        const double var_i_NaCa__k34 = mParameters[4] / (4.6630000000000003 + mParameters[4]); // dimensionless
        const double var_electric_potentials__E_K = 26.726549826397882 * log(mParameters[3] / mParameters[0]); // millivolt
        const double var_electric_potentials__E_Na = 26.726549826397882 * log(mParameters[4] / mParameters[1]); // millivolt
        const double var_i_NaCa__di = 1.0 + 48.309178743961354 * (1.0 + 0.037821482602117998 * mParameters[1] + _lt_0_row[0]) * var_chaste_interface__calcium_dynamics__Ca_sub + 0.0025297242600556538 * (1.0 + 0.43687199650502401 * (1.0 + 0.037821482602117998 * mParameters[1]) * mParameters[1]) * mParameters[1]; // dimensionless
        const double var_i_NaCa__do = 1.0 + 0.27300027300027302 * (1.0 + exp(0.037415977988011662 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qco)) * mParameters[2] + 0.00061425061425061424 * (1.0 + 0.0017812611328820807 * (1.0 + 0.2144542140253056 * mParameters[4]) * mParameters[4]) * mParameters[4]; // dimensionless
        const double var_i_NaCa__k12 = 48.309178743961354 * var_chaste_interface__calcium_dynamics__Ca_sub * _lt_0_row[0] / var_i_NaCa__di; // dimensionless
        const double var_i_NaCa__k14 = 0.0011051656880977081 * pow(mParameters[1], 2) * (1.0 + 0.037821482602117998 * mParameters[1]) * _lt_0_row[1] / var_i_NaCa__di; // dimensionless
        const double var_i_NaCa__k21 = 0.27300027300027302 * mParameters[2] * exp(0.037415977988011662 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qco) / var_i_NaCa__do; // dimensionless
        const double var_i_NaCa__k23 = 1.094140745013563e-6 * pow(mParameters[4], 2) * (1.0 + 0.2144542140253056 * mParameters[4]) * _lt_0_row[2] / var_i_NaCa__do; // dimensionless
        const double var_i_NaCa__k32 = _lt_0_row[1]; // dimensionless
        const double var_i_NaCa__k41 = _lt_0_row[2]; // dimensionless
        const double var_i_NaCa__i_NaCa = 187.5 * (((var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k32 * var_i_NaCa__k43 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k12 * var_i_NaCa__k41) * var_i_NaCa__k21 - ((var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k34 * var_i_NaCa__k41 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k21 * var_i_NaCa__k32) * var_i_NaCa__k12) * mParameters[9] / ((var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k23 * var_i_NaCa__k34 + (var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k32 * var_i_NaCa__k43 + (var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k14 * var_i_NaCa__k43 + (var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k34 * var_i_NaCa__k41 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k12 * var_i_NaCa__k41 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k14 * var_i_NaCa__k21 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k12 * var_i_NaCa__k23 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k21 * var_i_NaCa__k32); // picoA
        d_dt_chaste_interface_var_Vm__Vm = (-var_i_CaL__i_CaL - var_i_CaT__i_CaT - var_i_NaCa__i_NaCa - var_i_b_Ca__i_b_Ca - 0.0048599999999999997 * (-var_electric_potentials__E_Na + var_chaste_interface__Vm__Vm) * mParameters[9] - 0.025899999999999999 * pow(var_chaste_interface__i_Ks_n_gate__n, 2) * (-26.726549826397882 * log((mParameters[3] + 0.12 * mParameters[4]) / (mParameters[0] + 0.12 * mParameters[1])) + var_chaste_interface__Vm__Vm) * mParameters[9] - 0.02 * (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * var_chaste_interface__AP_sensitive_currents_r_gate__r * mParameters[9] - 0.252 * (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * var_chaste_interface__AP_sensitive_currents_q_gate__q * var_chaste_interface__AP_sensitive_currents_r_gate__r * mParameters[9] - 2.8799999999999999 * mParameters[9] / ((1.0 + 1.4974545260150962 * pow((1 / mParameters[3]), 1.2)) * (1.0 + 30.900566853219949 * pow((1 / mParameters[1]), 1.3)) * (1.0 + exp(-4.0 + 0.033333333333333333 * var_electric_potentials__E_Na - 0.033333333333333333 * var_chaste_interface__Vm__Vm))) - 0.0030000000000000001 * (-37.399999999999999 + var_chaste_interface__Vm__Vm) * var_chaste_interface__i_st_qa_gate__qa * var_chaste_interface__i_st_qi_gate__qi * mParameters[9] - 0.14999999999999999 * pow(var_chaste_interface__i_f_y_gate__y, 2) * (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * mParameters[6] * mParameters[9] - 0.14999999999999999 * pow(var_chaste_interface__i_f_y_gate__y, 2) * (-var_electric_potentials__E_Na + var_chaste_interface__Vm__Vm) * mParameters[7] * mParameters[9] - (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * (0.40000000000000002 * var_chaste_interface__i_Kr_pa_gate__paS + 0.59999999999999998 * var_chaste_interface__i_Kr_pa_gate__paF) * mParameters[8] * var_chaste_interface__i_Kr_pi_gate__pi_ * mParameters[9]) / mParameters[9]; // millivolt / millisecond

        double evalF = d_dt_chaste_interface_var_Vm__Vm;
        mEvalF[0] = d_dt_chaste_interface_var_Vm__Vm;
        double partialF = EvaluatePartialDerivative0(var_chaste_interface__environment__time, rY, delta, true);
        if (fabs(partialF) < delta)
        {
            rY[v_index] += 0.5*evalF*mDt;
        }
        else
        {
            rY[v_index] += (evalF/partialF)*(exp(partialF*0.5*mDt)-1.0);
        }

        rY[v_index] = yinit;
        evalF = EvaluateYDerivative0(var_chaste_interface__environment__time, rY);
        mEvalF[0] = evalF;
        partialF = EvaluatePartialDerivative0(var_chaste_interface__environment__time, rY, delta, true);
        if (fabs(partialF) < delta)
        {
            rY[v_index] = yinit + evalF*mDt;
        }
        else
        {
            rY[v_index] = yinit + (evalF/partialF)*(exp(partialF*mDt)-1.0);
        }
    }

    void Cellmaltsev_2009FromCellMLGRL2Opt::ComputeOneStepExceptVoltage(double var_chaste_interface__environment__time)
    {
        std::vector<double>& rY = rGetStateVariables();
        const double delta=1e-8;
        const unsigned size = GetNumberOfStateVariables();
        mYInit = rY;
        double y_save;

        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000150018670943
        double var_chaste_interface__i_CaL_dL_gate__dL = rY[2];
        // Units: dimensionless; Initial value: 0.000584545564405
        double var_chaste_interface__i_CaL_fL_gate__fL = rY[3];
        // Units: dimensionless; Initial value: 0.862381249774
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[4];
        // Units: dimensionless; Initial value: 0.711395919653
        double var_chaste_interface__i_CaT_dT_gate__dT = rY[5];
        // Units: dimensionless; Initial value: 0.00504393374639
        double var_chaste_interface__i_CaT_fT_gate__fT = rY[6];
        // Units: dimensionless; Initial value: 0.420757825415
        double var_chaste_interface__i_Kr_pa_gate__paS = rY[7];
        // Units: dimensionless; Initial value: 0.453100576739
        double var_chaste_interface__i_Kr_pa_gate__paF = rY[8];
        // Units: dimensionless; Initial value: 0.144755091176
        double var_chaste_interface__i_Kr_pi_gate__pi_ = rY[9];
        // Units: dimensionless; Initial value: 0.849409822329
        double var_chaste_interface__i_Ks_n_gate__n = rY[10];
        // Units: dimensionless; Initial value: 0.0264600410928
        double var_chaste_interface__AP_sensitive_currents_q_gate__q = rY[11];
        // Units: dimensionless; Initial value: 0.694241313965
        double var_chaste_interface__AP_sensitive_currents_r_gate__r = rY[12];
        // Units: dimensionless; Initial value: 0.00558131733359
        double var_chaste_interface__i_f_y_gate__y = rY[13];
        // Units: dimensionless; Initial value: 0.113643187247
        double var_chaste_interface__i_st_qa_gate__qa = rY[14];
        // Units: dimensionless; Initial value: 0.42380243163
        double var_chaste_interface__i_st_qi_gate__qi = rY[15];
        // Units: dimensionless; Initial value: 0.447294008304
        double var_chaste_interface__j_SRCarel__R = rY[16];
        // Units: dimensionless; Initial value: 0.688047760973
        double var_chaste_interface__j_SRCarel__O = rY[17];
        // Units: dimensionless; Initial value: 1.7340201253e-07
        double var_chaste_interface__j_SRCarel__I = rY[18];
        // Units: dimensionless; Initial value: 7.86181717518e-08
        double var_chaste_interface__j_SRCarel__RI = rY[19];
        // Units: dimensionless; Initial value: 0.311951987007
        double var_chaste_interface__calcium_buffering__fTMM = rY[20];
        // Units: dimensionless; Initial value: 0.501049376634
        double var_chaste_interface__calcium_buffering__fCMi = rY[21];
        // Units: dimensionless; Initial value: 0.0594880901438
        double var_chaste_interface__calcium_buffering__fCMs = rY[22];
        // Units: dimensionless; Initial value: 0.054381370046
        double var_chaste_interface__calcium_buffering__fTC = rY[23];
        // Units: dimensionless; Initial value: 0.0291316176172
        double var_chaste_interface__calcium_buffering__fTMC = rY[24];
        // Units: dimensionless; Initial value: 0.432694959597
        double var_chaste_interface__calcium_buffering__fCQ = rY[25];
        // Units: dimensionless; Initial value: 0.273207128393
        double var_chaste_interface__calcium_dynamics__Ca_nsr = rY[26];
        // Units: millimolar; Initial value: 1.49348117734
        double var_chaste_interface__calcium_dynamics__Ca_jsr = rY[27];
        // Units: millimolar; Initial value: 0.316762674605
        double var_chaste_interface__calcium_dynamics__Ca_sub = rY[28];
        // Units: millimolar; Initial value: 0.000138112560112
        

        // Lookup table indexing
        const bool _oob_0 = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm__Vm);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm__Vm);

        // Mathematics
        double d_dt_chaste_interface_var_Vm__Vm;
        const double d_dt_chaste_interface_var_AP_sensitive_currents_q_gate__q = (-var_chaste_interface__AP_sensitive_currents_q_gate__q + _lt_0_row[3]) / (_lt_0_row[4]); // 1 / millisecond
        const double d_dt_chaste_interface_var_AP_sensitive_currents_r_gate__r = (-var_chaste_interface__AP_sensitive_currents_r_gate__r + _lt_0_row[5]) / (_lt_0_row[6]); // 1 / millisecond
        const double var_calcium_buffering__delta_fCQ = -0.44500000000000001 * var_chaste_interface__calcium_buffering__fCQ + 0.53400000000000003 * (1.0 - var_chaste_interface__calcium_buffering__fCQ) * var_chaste_interface__calcium_dynamics__Ca_jsr; // per_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__fCQ = var_calcium_buffering__delta_fCQ; // 1 / millisecond
        const double var_calcium_buffering__delta_fCMs = -0.54200000000000004 * var_chaste_interface__calcium_buffering__fCMs + 227.69999999999999 * (1.0 - var_chaste_interface__calcium_buffering__fCMs) * var_chaste_interface__calcium_dynamics__Ca_sub; // per_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__fCMs = var_calcium_buffering__delta_fCMs; // 1 / millisecond
        const double var_calcium_buffering__delta_fCMi = -0.54200000000000004 * var_chaste_interface__calcium_buffering__fCMi + 227.69999999999999 * (1.0 - var_chaste_interface__calcium_buffering__fCMi) * var_chaste_interface__calcium_dynamics__Cai; // per_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__fCMi = var_calcium_buffering__delta_fCMi; // 1 / millisecond
        const double var_calcium_buffering__delta_fTC = -0.44600000000000001 * var_chaste_interface__calcium_buffering__fTC + 88.799999999999997 * (1.0 - var_chaste_interface__calcium_buffering__fTC) * var_chaste_interface__calcium_dynamics__Cai; // per_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__fTC = var_calcium_buffering__delta_fTC; // 1 / millisecond
        const double var_calcium_buffering__delta_fTMC = -0.0075100000000000002 * var_chaste_interface__calcium_buffering__fTMC + 227.69999999999999 * (1.0 - var_chaste_interface__calcium_buffering__fTMC - var_chaste_interface__calcium_buffering__fTMM) * var_chaste_interface__calcium_dynamics__Cai; // per_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__fTMC = var_calcium_buffering__delta_fTMC; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaL_dL_gate__dL = (-var_chaste_interface__i_CaL_dL_gate__dL + _lt_0_row[7]) * (_lt_0_row[8]); // 1 / millisecond
        const double var_i_CaL_fCa_gate__fCa_infinity = 0.00035 / (0.00035 + var_chaste_interface__calcium_dynamics__Ca_sub); // dimensionless
        const double d_dt_chaste_interface_var_i_CaL_fCa_gate__fCa = 0.021000000000000001 * (-var_chaste_interface__i_CaL_fCa_gate__fCa + var_i_CaL_fCa_gate__fCa_infinity) / var_i_CaL_fCa_gate__fCa_infinity; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaL_fL_gate__fL = (-var_chaste_interface__i_CaL_fL_gate__fL + _lt_0_row[9]) / (_lt_0_row[10]); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaT_dT_gate__dT = (-var_chaste_interface__i_CaT_dT_gate__dT + _lt_0_row[11]) * (_lt_0_row[12]); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaT_fT_gate__fT = (-var_chaste_interface__i_CaT_fT_gate__fT + _lt_0_row[13]) * (_lt_0_row[14]); // 1 / millisecond
        const double var_i_Kr_pa_gate__pa_infinity = _lt_0_row[15]; // dimensionless
        const double d_dt_chaste_interface_var_i_Kr_pa_gate__paF = (-var_chaste_interface__i_Kr_pa_gate__paF + var_i_Kr_pa_gate__pa_infinity) * (_lt_0_row[16]); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Kr_pa_gate__paS = (-var_chaste_interface__i_Kr_pa_gate__paS + var_i_Kr_pa_gate__pa_infinity) * (_lt_0_row[17]); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Kr_pi_gate__pi_ = (-var_chaste_interface__i_Kr_pi_gate__pi_ + _lt_0_row[18]) * (_lt_0_row[19]); // 1 / millisecond
        const double var_i_Ks_n_gate__alpha_n = _lt_0_row[20]; // per_millisecond
        const double var_i_Ks_n_gate__beta_n = _lt_0_row[21]; // per_millisecond
        const double d_dt_chaste_interface_var_i_Ks_n_gate__n = (-var_chaste_interface__i_Ks_n_gate__n + var_i_Ks_n_gate__alpha_n / (var_i_Ks_n_gate__alpha_n + var_i_Ks_n_gate__beta_n)) * (var_i_Ks_n_gate__alpha_n + var_i_Ks_n_gate__beta_n); // 1 / millisecond
        const double var_i_NaCa__Qco = 0; // dimensionless
        const double d_dt_chaste_interface_var_i_f_y_gate__y = (-var_chaste_interface__i_f_y_gate__y + _lt_0_row[22]) * (_lt_0_row[23]); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_st_qa_gate__qa = (-var_chaste_interface__i_st_qa_gate__qa + _lt_0_row[24]) * (_lt_0_row[25]); // 1 / millisecond
        const double var_i_st_qi_gate__alpha_qi = _lt_0_row[26]; // per_millisecond
        const double var_i_st_qi_gate__beta_qi = _lt_0_row[27]; // per_millisecond
        const double d_dt_chaste_interface_var_i_st_qi_gate__qi = (-var_chaste_interface__i_st_qi_gate__qi + var_i_st_qi_gate__alpha_qi / (var_i_st_qi_gate__alpha_qi + var_i_st_qi_gate__beta_qi)) * (0.15037593984962405 * var_i_st_qi_gate__alpha_qi + 0.15037593984962405 * var_i_st_qi_gate__beta_qi); // 1 / millisecond
        const double var_intracellular_calcium_fluxes__j_up = 0.012 / (1.0 + 0.00059999999999999995 / var_chaste_interface__calcium_dynamics__Cai); // millimolar_per_millisecond
        const double var_intracellular_calcium_fluxes__j_Ca_dif = 25.0 * var_chaste_interface__calcium_dynamics__Ca_sub - 25.0 * var_chaste_interface__calcium_dynamics__Cai; // millimolar_per_millisecond
        const double var_intracellular_calcium_fluxes__j_tr = 0.025000000000000001 * var_chaste_interface__calcium_dynamics__Ca_nsr - 0.025000000000000001 * var_chaste_interface__calcium_dynamics__Ca_jsr; // millimolar_per_millisecond
        const double var_j_SRCarel__kCaSR = 15.0 - 14.0 / (1.0 + 0.13584112963311223 * pow((1 / var_chaste_interface__calcium_dynamics__Ca_jsr), 2.5)); // dimensionless
        const double var_j_SRCarel__kiSRCa = 0.5 * var_j_SRCarel__kCaSR; // per_millimolar_millisecond
        const double var_j_SRCarel__koSRCa = 10.0 / var_j_SRCarel__kCaSR; // per_millimolar2_millisecond
        const double d_dt_chaste_interface_var_j_SRCarel__I = -0.065000000000000002 * var_chaste_interface__j_SRCarel__I + pow(var_chaste_interface__calcium_dynamics__Ca_sub, 2) * var_chaste_interface__j_SRCarel__RI * var_j_SRCarel__koSRCa + var_chaste_interface__calcium_dynamics__Ca_sub * var_chaste_interface__j_SRCarel__O * var_j_SRCarel__kiSRCa; // 1 / millisecond
        const double d_dt_chaste_interface_var_j_SRCarel__O = 0.0050000000000000001 * var_chaste_interface__j_SRCarel__I - 0.059999999999999998 * var_chaste_interface__j_SRCarel__O + pow(var_chaste_interface__calcium_dynamics__Ca_sub, 2) * var_chaste_interface__j_SRCarel__R * var_j_SRCarel__koSRCa - var_chaste_interface__calcium_dynamics__Ca_sub * var_chaste_interface__j_SRCarel__O * var_j_SRCarel__kiSRCa; // 1 / millisecond
        const double d_dt_chaste_interface_var_j_SRCarel__R = 0.059999999999999998 * var_chaste_interface__j_SRCarel__O + 0.0050000000000000001 * var_chaste_interface__j_SRCarel__RI - pow(var_chaste_interface__calcium_dynamics__Ca_sub, 2) * var_chaste_interface__j_SRCarel__R * var_j_SRCarel__koSRCa - var_chaste_interface__calcium_dynamics__Ca_sub * var_chaste_interface__j_SRCarel__R * var_j_SRCarel__kiSRCa; // 1 / millisecond
        const double d_dt_chaste_interface_var_j_SRCarel__RI = 0.059999999999999998 * var_chaste_interface__j_SRCarel__I - 0.0050000000000000001 * var_chaste_interface__j_SRCarel__RI + var_chaste_interface__calcium_dynamics__Ca_sub * var_chaste_interface__j_SRCarel__R * var_j_SRCarel__kiSRCa - pow(var_chaste_interface__calcium_dynamics__Ca_sub, 2) * var_chaste_interface__j_SRCarel__RI * var_j_SRCarel__koSRCa; // 1 / millisecond
        const double var_j_SRCarel__j_SRCarel = 250000.0 * (-var_chaste_interface__calcium_dynamics__Ca_sub + var_chaste_interface__calcium_dynamics__Ca_jsr) * var_chaste_interface__j_SRCarel__O; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_jsr = -var_j_SRCarel__j_SRCarel - 10.0 * var_calcium_buffering__delta_fCQ + var_intracellular_calcium_fluxes__j_tr; // millimolar / millisecond
        const double var_i_CaL__i_CaL = (-45.0 + var_chaste_interface__Vm__Vm) * mParameters[5] * var_chaste_interface__i_CaL_dL_gate__dL * var_chaste_interface__i_CaL_fCa_gate__fCa * var_chaste_interface__i_CaL_fL_gate__fL * mParameters[9]; // picoA
        const double var_i_CaT__i_CaT = 0.1832 * (-45.0 + var_chaste_interface__Vm__Vm) * var_chaste_interface__i_CaT_dT_gate__dT * var_chaste_interface__i_CaT_fT_gate__fT * mParameters[9]; // picoA
        const double var_i_b_Ca__i_b_Ca = 0.00059999999999999995 * (-45.0 + var_chaste_interface__Vm__Vm) * mParameters[9]; // picoA
        const double d_dt_chaste_interface_var_calcium_buffering__fTMM = 5.6925000000000008 - 5.6925000000000008 * var_chaste_interface__calcium_buffering__fTMC - 6.4435000000000002 * var_chaste_interface__calcium_buffering__fTMM; // 1 / millisecond
        const double var_i_NaCa__k43 = mParameters[1] / (26.440000000000001 + mParameters[1]); // dimensionless
        const double var_i_NaCa__k34 = mParameters[4] / (4.6630000000000003 + mParameters[4]); // dimensionless
        const double var_i_NaCa__di = 1.0 + 48.309178743961354 * (1.0 + 0.037821482602117998 * mParameters[1] + _lt_0_row[0]) * var_chaste_interface__calcium_dynamics__Ca_sub + 0.0025297242600556538 * (1.0 + 0.43687199650502401 * (1.0 + 0.037821482602117998 * mParameters[1]) * mParameters[1]) * mParameters[1]; // dimensionless
        const double var_i_NaCa__do = 1.0 + 0.27300027300027302 * (1.0 + exp(0.037415977988011662 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qco)) * mParameters[2] + 0.00061425061425061424 * (1.0 + 0.0017812611328820807 * (1.0 + 0.2144542140253056 * mParameters[4]) * mParameters[4]) * mParameters[4]; // dimensionless
        const double var_i_NaCa__k12 = 48.309178743961354 * var_chaste_interface__calcium_dynamics__Ca_sub * _lt_0_row[0] / var_i_NaCa__di; // dimensionless
        const double var_i_NaCa__k14 = 0.0011051656880977081 * pow(mParameters[1], 2) * (1.0 + 0.037821482602117998 * mParameters[1]) * _lt_0_row[1] / var_i_NaCa__di; // dimensionless
        const double var_i_NaCa__k21 = 0.27300027300027302 * mParameters[2] * exp(0.037415977988011662 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qco) / var_i_NaCa__do; // dimensionless
        const double var_i_NaCa__k23 = 1.094140745013563e-6 * pow(mParameters[4], 2) * (1.0 + 0.2144542140253056 * mParameters[4]) * _lt_0_row[2] / var_i_NaCa__do; // dimensionless
        const double var_i_NaCa__k32 = _lt_0_row[1]; // dimensionless
        const double var_i_NaCa__k41 = _lt_0_row[2]; // dimensionless
        const double var_i_NaCa__i_NaCa = 187.5 * (((var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k32 * var_i_NaCa__k43 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k12 * var_i_NaCa__k41) * var_i_NaCa__k21 - ((var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k34 * var_i_NaCa__k41 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k21 * var_i_NaCa__k32) * var_i_NaCa__k12) * mParameters[9] / ((var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k23 * var_i_NaCa__k34 + (var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k32 * var_i_NaCa__k43 + (var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k14 * var_i_NaCa__k43 + (var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k34 * var_i_NaCa__k41 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k12 * var_i_NaCa__k41 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k14 * var_i_NaCa__k21 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k12 * var_i_NaCa__k23 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k21 * var_i_NaCa__k32); // picoA
        const double var_model_parameters__V_cell = 1.1200000000000001 * M_PI; // picolitre
        const double var_model_parameters__V_jsr = 0.0011999999999999999 * var_model_parameters__V_cell; // picolitre
        const double var_model_parameters__V_nsr = 0.011599999999999999 * var_model_parameters__V_cell; // picolitre
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_nsr = -var_intracellular_calcium_fluxes__j_tr * var_model_parameters__V_jsr / var_model_parameters__V_nsr + var_intracellular_calcium_fluxes__j_up; // millimolar / millisecond
        const double var_model_parameters__V_sub = 0.011172 * M_PI; // picolitre
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_sub = -var_intracellular_calcium_fluxes__j_Ca_dif - 0.044999999999999998 * var_calcium_buffering__delta_fCMs - 5.182152666217547e-6 * (-2.0 * var_i_NaCa__i_NaCa + var_i_CaL__i_CaL + var_i_CaT__i_CaT + var_i_b_Ca__i_b_Ca) / var_model_parameters__V_sub + var_j_SRCarel__j_SRCarel * var_model_parameters__V_jsr / var_model_parameters__V_sub; // millimolar / millisecond
        const double d_dt_chaste_interface_var_calcium_dynamics__Cai = -0.031 * var_calcium_buffering__delta_fTC - 0.062 * var_calcium_buffering__delta_fTMC - 0.044999999999999998 * var_calcium_buffering__delta_fCMi + (var_intracellular_calcium_fluxes__j_Ca_dif * var_model_parameters__V_sub - var_intracellular_calcium_fluxes__j_up * var_model_parameters__V_nsr) / (-var_model_parameters__V_sub + 0.46000000000000002 * var_model_parameters__V_cell); // millimolar / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_Vm__Vm = 0.0;
        }
        else
        {
            const double var_electric_potentials__E_K = 26.726549826397882 * log(mParameters[3] / mParameters[0]); // millivolt
            const double var_electric_potentials__E_Na = 26.726549826397882 * log(mParameters[4] / mParameters[1]); // millivolt
            d_dt_chaste_interface_var_Vm__Vm = (-var_i_CaL__i_CaL - var_i_CaT__i_CaT - var_i_NaCa__i_NaCa - var_i_b_Ca__i_b_Ca - 0.0048599999999999997 * (-var_electric_potentials__E_Na + var_chaste_interface__Vm__Vm) * mParameters[9] - 0.025899999999999999 * pow(var_chaste_interface__i_Ks_n_gate__n, 2) * (-26.726549826397882 * log((mParameters[3] + 0.12 * mParameters[4]) / (mParameters[0] + 0.12 * mParameters[1])) + var_chaste_interface__Vm__Vm) * mParameters[9] - 0.02 * (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * var_chaste_interface__AP_sensitive_currents_r_gate__r * mParameters[9] - 0.252 * (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * var_chaste_interface__AP_sensitive_currents_q_gate__q * var_chaste_interface__AP_sensitive_currents_r_gate__r * mParameters[9] - 2.8799999999999999 * mParameters[9] / ((1.0 + 1.4974545260150962 * pow((1 / mParameters[3]), 1.2)) * (1.0 + 30.900566853219949 * pow((1 / mParameters[1]), 1.3)) * (1.0 + exp(-4.0 + 0.033333333333333333 * var_electric_potentials__E_Na - 0.033333333333333333 * var_chaste_interface__Vm__Vm))) - 0.0030000000000000001 * (-37.399999999999999 + var_chaste_interface__Vm__Vm) * var_chaste_interface__i_st_qa_gate__qa * var_chaste_interface__i_st_qi_gate__qi * mParameters[9] - 0.14999999999999999 * pow(var_chaste_interface__i_f_y_gate__y, 2) * (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * mParameters[6] * mParameters[9] - 0.14999999999999999 * pow(var_chaste_interface__i_f_y_gate__y, 2) * (-var_electric_potentials__E_Na + var_chaste_interface__Vm__Vm) * mParameters[7] * mParameters[9] - (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * (0.40000000000000002 * var_chaste_interface__i_Kr_pa_gate__paS + 0.59999999999999998 * var_chaste_interface__i_Kr_pa_gate__paF) * mParameters[8] * var_chaste_interface__i_Kr_pi_gate__pi_ * mParameters[9]) / mParameters[9]; // millivolt / millisecond
        }
        
        mEvalF[0] = d_dt_chaste_interface_var_Vm__Vm;
        mEvalF[1] = d_dt_chaste_interface_var_calcium_dynamics__Cai;
        mEvalF[2] = d_dt_chaste_interface_var_i_CaL_dL_gate__dL;
        mEvalF[3] = d_dt_chaste_interface_var_i_CaL_fL_gate__fL;
        mEvalF[4] = d_dt_chaste_interface_var_i_CaL_fCa_gate__fCa;
        mEvalF[5] = d_dt_chaste_interface_var_i_CaT_dT_gate__dT;
        mEvalF[6] = d_dt_chaste_interface_var_i_CaT_fT_gate__fT;
        mEvalF[7] = d_dt_chaste_interface_var_i_Kr_pa_gate__paS;
        mEvalF[8] = d_dt_chaste_interface_var_i_Kr_pa_gate__paF;
        mEvalF[9] = d_dt_chaste_interface_var_i_Kr_pi_gate__pi_;
        mEvalF[10] = d_dt_chaste_interface_var_i_Ks_n_gate__n;
        mEvalF[11] = d_dt_chaste_interface_var_AP_sensitive_currents_q_gate__q;
        mEvalF[12] = d_dt_chaste_interface_var_AP_sensitive_currents_r_gate__r;
        mEvalF[13] = d_dt_chaste_interface_var_i_f_y_gate__y;
        mEvalF[14] = d_dt_chaste_interface_var_i_st_qa_gate__qa;
        mEvalF[15] = d_dt_chaste_interface_var_i_st_qi_gate__qi;
        mEvalF[16] = d_dt_chaste_interface_var_j_SRCarel__R;
        mEvalF[17] = d_dt_chaste_interface_var_j_SRCarel__O;
        mEvalF[18] = d_dt_chaste_interface_var_j_SRCarel__I;
        mEvalF[19] = d_dt_chaste_interface_var_j_SRCarel__RI;
        mEvalF[20] = d_dt_chaste_interface_var_calcium_buffering__fTMM;
        mEvalF[21] = d_dt_chaste_interface_var_calcium_buffering__fCMi;
        mEvalF[22] = d_dt_chaste_interface_var_calcium_buffering__fCMs;
        mEvalF[23] = d_dt_chaste_interface_var_calcium_buffering__fTC;
        mEvalF[24] = d_dt_chaste_interface_var_calcium_buffering__fTMC;
        mEvalF[25] = d_dt_chaste_interface_var_calcium_buffering__fCQ;
        mEvalF[26] = d_dt_chaste_interface_var_calcium_dynamics__Ca_nsr;
        mEvalF[27] = d_dt_chaste_interface_var_calcium_dynamics__Ca_jsr;
        mEvalF[28] = d_dt_chaste_interface_var_calcium_dynamics__Ca_sub;

        
        mPartialF[0] = EvaluatePartialDerivative0(var_chaste_interface__environment__time, rY, delta);
        mPartialF[1] = EvaluatePartialDerivative1(var_chaste_interface__environment__time, rY, delta);
        mPartialF[2] = EvaluatePartialDerivative2(var_chaste_interface__environment__time, rY, delta);
        mPartialF[3] = EvaluatePartialDerivative3(var_chaste_interface__environment__time, rY, delta);
        mPartialF[4] = EvaluatePartialDerivative4(var_chaste_interface__environment__time, rY, delta);
        mPartialF[5] = EvaluatePartialDerivative5(var_chaste_interface__environment__time, rY, delta);
        mPartialF[6] = EvaluatePartialDerivative6(var_chaste_interface__environment__time, rY, delta);
        mPartialF[7] = EvaluatePartialDerivative7(var_chaste_interface__environment__time, rY, delta);
        mPartialF[8] = EvaluatePartialDerivative8(var_chaste_interface__environment__time, rY, delta);
        mPartialF[9] = EvaluatePartialDerivative9(var_chaste_interface__environment__time, rY, delta);
        mPartialF[10] = EvaluatePartialDerivative10(var_chaste_interface__environment__time, rY, delta);
        mPartialF[11] = EvaluatePartialDerivative11(var_chaste_interface__environment__time, rY, delta);
        mPartialF[12] = EvaluatePartialDerivative12(var_chaste_interface__environment__time, rY, delta);
        mPartialF[13] = EvaluatePartialDerivative13(var_chaste_interface__environment__time, rY, delta);
        mPartialF[14] = EvaluatePartialDerivative14(var_chaste_interface__environment__time, rY, delta);
        mPartialF[15] = EvaluatePartialDerivative15(var_chaste_interface__environment__time, rY, delta);
        mPartialF[16] = EvaluatePartialDerivative16(var_chaste_interface__environment__time, rY, delta);
        mPartialF[17] = EvaluatePartialDerivative17(var_chaste_interface__environment__time, rY, delta);
        mPartialF[18] = EvaluatePartialDerivative18(var_chaste_interface__environment__time, rY, delta);
        mPartialF[19] = EvaluatePartialDerivative19(var_chaste_interface__environment__time, rY, delta);
        mPartialF[20] = EvaluatePartialDerivative20(var_chaste_interface__environment__time, rY, delta);
        mPartialF[21] = EvaluatePartialDerivative21(var_chaste_interface__environment__time, rY, delta);
        mPartialF[22] = EvaluatePartialDerivative22(var_chaste_interface__environment__time, rY, delta);
        mPartialF[23] = EvaluatePartialDerivative23(var_chaste_interface__environment__time, rY, delta);
        mPartialF[24] = EvaluatePartialDerivative24(var_chaste_interface__environment__time, rY, delta);
        mPartialF[25] = EvaluatePartialDerivative25(var_chaste_interface__environment__time, rY, delta);
        mPartialF[26] = EvaluatePartialDerivative26(var_chaste_interface__environment__time, rY, delta);
        mPartialF[27] = EvaluatePartialDerivative27(var_chaste_interface__environment__time, rY, delta);
        mPartialF[28] = EvaluatePartialDerivative28(var_chaste_interface__environment__time, rY, delta);
        for (unsigned var=0; var<size; var++)
        {
            if (var == 0) continue;
            if (fabs(mPartialF[var]) < delta)
            {
                rY[var] = mYInit[var] + 0.5*mDt*mEvalF[var];
            }
            else
            {
                rY[var] = mYInit[var] + (mEvalF[var]/mPartialF[var])*(exp(mPartialF[var]*0.5*mDt)-1.0);
            }
            
        }
        
        
        y_save = rY[1];
        rY[1] = mYInit[1];
        mEvalF[1] = EvaluateYDerivative1(var_chaste_interface__environment__time, rY);
        mPartialF[1] = EvaluatePartialDerivative1(var_chaste_interface__environment__time, rY, delta);
        rY[1] = y_save;
        
        
        y_save = rY[2];
        rY[2] = mYInit[2];
        mEvalF[2] = EvaluateYDerivative2(var_chaste_interface__environment__time, rY);
        mPartialF[2] = EvaluatePartialDerivative2(var_chaste_interface__environment__time, rY, delta);
        rY[2] = y_save;
        
        
        y_save = rY[3];
        rY[3] = mYInit[3];
        mEvalF[3] = EvaluateYDerivative3(var_chaste_interface__environment__time, rY);
        mPartialF[3] = EvaluatePartialDerivative3(var_chaste_interface__environment__time, rY, delta);
        rY[3] = y_save;
        
        
        y_save = rY[4];
        rY[4] = mYInit[4];
        mEvalF[4] = EvaluateYDerivative4(var_chaste_interface__environment__time, rY);
        mPartialF[4] = EvaluatePartialDerivative4(var_chaste_interface__environment__time, rY, delta);
        rY[4] = y_save;
        
        
        y_save = rY[5];
        rY[5] = mYInit[5];
        mEvalF[5] = EvaluateYDerivative5(var_chaste_interface__environment__time, rY);
        mPartialF[5] = EvaluatePartialDerivative5(var_chaste_interface__environment__time, rY, delta);
        rY[5] = y_save;
        
        
        y_save = rY[6];
        rY[6] = mYInit[6];
        mEvalF[6] = EvaluateYDerivative6(var_chaste_interface__environment__time, rY);
        mPartialF[6] = EvaluatePartialDerivative6(var_chaste_interface__environment__time, rY, delta);
        rY[6] = y_save;
        
        
        y_save = rY[7];
        rY[7] = mYInit[7];
        mEvalF[7] = EvaluateYDerivative7(var_chaste_interface__environment__time, rY);
        mPartialF[7] = EvaluatePartialDerivative7(var_chaste_interface__environment__time, rY, delta);
        rY[7] = y_save;
        
        
        y_save = rY[8];
        rY[8] = mYInit[8];
        mEvalF[8] = EvaluateYDerivative8(var_chaste_interface__environment__time, rY);
        mPartialF[8] = EvaluatePartialDerivative8(var_chaste_interface__environment__time, rY, delta);
        rY[8] = y_save;
        
        
        y_save = rY[9];
        rY[9] = mYInit[9];
        mEvalF[9] = EvaluateYDerivative9(var_chaste_interface__environment__time, rY);
        mPartialF[9] = EvaluatePartialDerivative9(var_chaste_interface__environment__time, rY, delta);
        rY[9] = y_save;
        
        
        y_save = rY[10];
        rY[10] = mYInit[10];
        mEvalF[10] = EvaluateYDerivative10(var_chaste_interface__environment__time, rY);
        mPartialF[10] = EvaluatePartialDerivative10(var_chaste_interface__environment__time, rY, delta);
        rY[10] = y_save;
        
        
        y_save = rY[11];
        rY[11] = mYInit[11];
        mEvalF[11] = EvaluateYDerivative11(var_chaste_interface__environment__time, rY);
        mPartialF[11] = EvaluatePartialDerivative11(var_chaste_interface__environment__time, rY, delta);
        rY[11] = y_save;
        
        
        y_save = rY[12];
        rY[12] = mYInit[12];
        mEvalF[12] = EvaluateYDerivative12(var_chaste_interface__environment__time, rY);
        mPartialF[12] = EvaluatePartialDerivative12(var_chaste_interface__environment__time, rY, delta);
        rY[12] = y_save;
        
        
        y_save = rY[13];
        rY[13] = mYInit[13];
        mEvalF[13] = EvaluateYDerivative13(var_chaste_interface__environment__time, rY);
        mPartialF[13] = EvaluatePartialDerivative13(var_chaste_interface__environment__time, rY, delta);
        rY[13] = y_save;
        
        
        y_save = rY[14];
        rY[14] = mYInit[14];
        mEvalF[14] = EvaluateYDerivative14(var_chaste_interface__environment__time, rY);
        mPartialF[14] = EvaluatePartialDerivative14(var_chaste_interface__environment__time, rY, delta);
        rY[14] = y_save;
        
        
        y_save = rY[15];
        rY[15] = mYInit[15];
        mEvalF[15] = EvaluateYDerivative15(var_chaste_interface__environment__time, rY);
        mPartialF[15] = EvaluatePartialDerivative15(var_chaste_interface__environment__time, rY, delta);
        rY[15] = y_save;
        
        
        y_save = rY[16];
        rY[16] = mYInit[16];
        mEvalF[16] = EvaluateYDerivative16(var_chaste_interface__environment__time, rY);
        mPartialF[16] = EvaluatePartialDerivative16(var_chaste_interface__environment__time, rY, delta);
        rY[16] = y_save;
        
        
        y_save = rY[17];
        rY[17] = mYInit[17];
        mEvalF[17] = EvaluateYDerivative17(var_chaste_interface__environment__time, rY);
        mPartialF[17] = EvaluatePartialDerivative17(var_chaste_interface__environment__time, rY, delta);
        rY[17] = y_save;
        
        
        y_save = rY[18];
        rY[18] = mYInit[18];
        mEvalF[18] = EvaluateYDerivative18(var_chaste_interface__environment__time, rY);
        mPartialF[18] = EvaluatePartialDerivative18(var_chaste_interface__environment__time, rY, delta);
        rY[18] = y_save;
        
        
        y_save = rY[19];
        rY[19] = mYInit[19];
        mEvalF[19] = EvaluateYDerivative19(var_chaste_interface__environment__time, rY);
        mPartialF[19] = EvaluatePartialDerivative19(var_chaste_interface__environment__time, rY, delta);
        rY[19] = y_save;
        
        
        y_save = rY[20];
        rY[20] = mYInit[20];
        mEvalF[20] = EvaluateYDerivative20(var_chaste_interface__environment__time, rY);
        mPartialF[20] = EvaluatePartialDerivative20(var_chaste_interface__environment__time, rY, delta);
        rY[20] = y_save;
        
        
        y_save = rY[21];
        rY[21] = mYInit[21];
        mEvalF[21] = EvaluateYDerivative21(var_chaste_interface__environment__time, rY);
        mPartialF[21] = EvaluatePartialDerivative21(var_chaste_interface__environment__time, rY, delta);
        rY[21] = y_save;
        
        
        y_save = rY[22];
        rY[22] = mYInit[22];
        mEvalF[22] = EvaluateYDerivative22(var_chaste_interface__environment__time, rY);
        mPartialF[22] = EvaluatePartialDerivative22(var_chaste_interface__environment__time, rY, delta);
        rY[22] = y_save;
        
        
        y_save = rY[23];
        rY[23] = mYInit[23];
        mEvalF[23] = EvaluateYDerivative23(var_chaste_interface__environment__time, rY);
        mPartialF[23] = EvaluatePartialDerivative23(var_chaste_interface__environment__time, rY, delta);
        rY[23] = y_save;
        
        
        y_save = rY[24];
        rY[24] = mYInit[24];
        mEvalF[24] = EvaluateYDerivative24(var_chaste_interface__environment__time, rY);
        mPartialF[24] = EvaluatePartialDerivative24(var_chaste_interface__environment__time, rY, delta);
        rY[24] = y_save;
        
        
        y_save = rY[25];
        rY[25] = mYInit[25];
        mEvalF[25] = EvaluateYDerivative25(var_chaste_interface__environment__time, rY);
        mPartialF[25] = EvaluatePartialDerivative25(var_chaste_interface__environment__time, rY, delta);
        rY[25] = y_save;
        
        
        y_save = rY[26];
        rY[26] = mYInit[26];
        mEvalF[26] = EvaluateYDerivative26(var_chaste_interface__environment__time, rY);
        mPartialF[26] = EvaluatePartialDerivative26(var_chaste_interface__environment__time, rY, delta);
        rY[26] = y_save;
        
        
        y_save = rY[27];
        rY[27] = mYInit[27];
        mEvalF[27] = EvaluateYDerivative27(var_chaste_interface__environment__time, rY);
        mPartialF[27] = EvaluatePartialDerivative27(var_chaste_interface__environment__time, rY, delta);
        rY[27] = y_save;
        
        
        y_save = rY[28];
        rY[28] = mYInit[28];
        mEvalF[28] = EvaluateYDerivative28(var_chaste_interface__environment__time, rY);
        mPartialF[28] = EvaluatePartialDerivative28(var_chaste_interface__environment__time, rY, delta);
        rY[28] = y_save;
                
        for (unsigned var=0; var<size; var++)
        {
            if (var == 0) continue;
            if (fabs(mPartialF[var]) < delta)
            {
                rY[var] = mYInit[var] + mDt*mEvalF[var];
            }
            else
            {
                rY[var] = mYInit[var] + (mEvalF[var]/mPartialF[var])*(exp(mPartialF[var]*mDt)-1.0);
            }
            
        }


    }
   
    
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative0(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        double d_dt_chaste_interface_var_Vm__Vm;
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__i_CaL_dL_gate__dL = rY[2];
        // Units: dimensionless; Initial value: 0.000584545564405
        double var_chaste_interface__i_CaL_fL_gate__fL = rY[3];
        // Units: dimensionless; Initial value: 0.862381249774
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[4];
        // Units: dimensionless; Initial value: 0.711395919653
        double var_chaste_interface__i_CaT_dT_gate__dT = rY[5];
        // Units: dimensionless; Initial value: 0.00504393374639
        double var_chaste_interface__i_CaT_fT_gate__fT = rY[6];
        // Units: dimensionless; Initial value: 0.420757825415
        double var_chaste_interface__i_Kr_pa_gate__paS = rY[7];
        // Units: dimensionless; Initial value: 0.453100576739
        double var_chaste_interface__i_Kr_pa_gate__paF = rY[8];
        // Units: dimensionless; Initial value: 0.144755091176
        double var_chaste_interface__i_Kr_pi_gate__pi_ = rY[9];
        // Units: dimensionless; Initial value: 0.849409822329
        double var_chaste_interface__i_Ks_n_gate__n = rY[10];
        // Units: dimensionless; Initial value: 0.0264600410928
        double var_chaste_interface__AP_sensitive_currents_q_gate__q = rY[11];
        // Units: dimensionless; Initial value: 0.694241313965
        double var_chaste_interface__AP_sensitive_currents_r_gate__r = rY[12];
        // Units: dimensionless; Initial value: 0.00558131733359
        double var_chaste_interface__i_f_y_gate__y = rY[13];
        // Units: dimensionless; Initial value: 0.113643187247
        double var_chaste_interface__i_st_qa_gate__qa = rY[14];
        // Units: dimensionless; Initial value: 0.42380243163
        double var_chaste_interface__i_st_qi_gate__qi = rY[15];
        // Units: dimensionless; Initial value: 0.447294008304
        double var_chaste_interface__calcium_dynamics__Ca_sub = rY[28];
        // Units: millimolar; Initial value: 0.000138112560112
        

        // Lookup table indexing
        const bool _oob_0 = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm__Vm);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm__Vm);

        // Mathematics
        const double var_i_NaCa__Qco = 0; // dimensionless
        const double var_i_CaL__i_CaL = (-45.0 + var_chaste_interface__Vm__Vm) * mParameters[5] * var_chaste_interface__i_CaL_dL_gate__dL * var_chaste_interface__i_CaL_fCa_gate__fCa * var_chaste_interface__i_CaL_fL_gate__fL * mParameters[9]; // picoA
        const double var_i_CaT__i_CaT = 0.1832 * (-45.0 + var_chaste_interface__Vm__Vm) * var_chaste_interface__i_CaT_dT_gate__dT * var_chaste_interface__i_CaT_fT_gate__fT * mParameters[9]; // picoA
        const double var_i_b_Ca__i_b_Ca = 0.00059999999999999995 * (-45.0 + var_chaste_interface__Vm__Vm) * mParameters[9]; // picoA
        const double var_i_NaCa__k43 = mParameters[1] / (26.440000000000001 + mParameters[1]); // dimensionless
        const double var_i_NaCa__k34 = mParameters[4] / (4.6630000000000003 + mParameters[4]); // dimensionless
        const double var_electric_potentials__E_K = 26.726549826397882 * log(mParameters[3] / mParameters[0]); // millivolt
        const double var_electric_potentials__E_Na = 26.726549826397882 * log(mParameters[4] / mParameters[1]); // millivolt
        const double var_i_NaCa__di = 1.0 + 48.309178743961354 * (1.0 + 0.037821482602117998 * mParameters[1] + _lt_0_row[0]) * var_chaste_interface__calcium_dynamics__Ca_sub + 0.0025297242600556538 * (1.0 + 0.43687199650502401 * (1.0 + 0.037821482602117998 * mParameters[1]) * mParameters[1]) * mParameters[1]; // dimensionless
        const double var_i_NaCa__do = 1.0 + 0.27300027300027302 * (1.0 + exp(0.037415977988011662 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qco)) * mParameters[2] + 0.00061425061425061424 * (1.0 + 0.0017812611328820807 * (1.0 + 0.2144542140253056 * mParameters[4]) * mParameters[4]) * mParameters[4]; // dimensionless
        const double var_i_NaCa__k12 = 48.309178743961354 * var_chaste_interface__calcium_dynamics__Ca_sub * _lt_0_row[0] / var_i_NaCa__di; // dimensionless
        const double var_i_NaCa__k14 = 0.0011051656880977081 * pow(mParameters[1], 2) * (1.0 + 0.037821482602117998 * mParameters[1]) * _lt_0_row[1] / var_i_NaCa__di; // dimensionless
        const double var_i_NaCa__k21 = 0.27300027300027302 * mParameters[2] * exp(0.037415977988011662 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qco) / var_i_NaCa__do; // dimensionless
        const double var_i_NaCa__k23 = 1.094140745013563e-6 * pow(mParameters[4], 2) * (1.0 + 0.2144542140253056 * mParameters[4]) * _lt_0_row[2] / var_i_NaCa__do; // dimensionless
        const double var_i_NaCa__k32 = _lt_0_row[1]; // dimensionless
        const double var_i_NaCa__k41 = _lt_0_row[2]; // dimensionless
        const double var_i_NaCa__i_NaCa = 187.5 * (((var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k32 * var_i_NaCa__k43 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k12 * var_i_NaCa__k41) * var_i_NaCa__k21 - ((var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k34 * var_i_NaCa__k41 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k21 * var_i_NaCa__k32) * var_i_NaCa__k12) * mParameters[9] / ((var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k23 * var_i_NaCa__k34 + (var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k32 * var_i_NaCa__k43 + (var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k14 * var_i_NaCa__k43 + (var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k34 * var_i_NaCa__k41 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k12 * var_i_NaCa__k41 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k14 * var_i_NaCa__k21 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k12 * var_i_NaCa__k23 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k21 * var_i_NaCa__k32); // picoA
        d_dt_chaste_interface_var_Vm__Vm = (-var_i_CaL__i_CaL - var_i_CaT__i_CaT - var_i_NaCa__i_NaCa - var_i_b_Ca__i_b_Ca - 0.0048599999999999997 * (-var_electric_potentials__E_Na + var_chaste_interface__Vm__Vm) * mParameters[9] - 0.025899999999999999 * pow(var_chaste_interface__i_Ks_n_gate__n, 2) * (-26.726549826397882 * log((mParameters[3] + 0.12 * mParameters[4]) / (mParameters[0] + 0.12 * mParameters[1])) + var_chaste_interface__Vm__Vm) * mParameters[9] - 0.02 * (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * var_chaste_interface__AP_sensitive_currents_r_gate__r * mParameters[9] - 0.252 * (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * var_chaste_interface__AP_sensitive_currents_q_gate__q * var_chaste_interface__AP_sensitive_currents_r_gate__r * mParameters[9] - 2.8799999999999999 * mParameters[9] / ((1.0 + 1.4974545260150962 * pow((1 / mParameters[3]), 1.2)) * (1.0 + 30.900566853219949 * pow((1 / mParameters[1]), 1.3)) * (1.0 + exp(-4.0 + 0.033333333333333333 * var_electric_potentials__E_Na - 0.033333333333333333 * var_chaste_interface__Vm__Vm))) - 0.0030000000000000001 * (-37.399999999999999 + var_chaste_interface__Vm__Vm) * var_chaste_interface__i_st_qa_gate__qa * var_chaste_interface__i_st_qi_gate__qi * mParameters[9] - 0.14999999999999999 * pow(var_chaste_interface__i_f_y_gate__y, 2) * (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * mParameters[6] * mParameters[9] - 0.14999999999999999 * pow(var_chaste_interface__i_f_y_gate__y, 2) * (-var_electric_potentials__E_Na + var_chaste_interface__Vm__Vm) * mParameters[7] * mParameters[9] - (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * (0.40000000000000002 * var_chaste_interface__i_Kr_pa_gate__paS + 0.59999999999999998 * var_chaste_interface__i_Kr_pa_gate__paF) * mParameters[8] * var_chaste_interface__i_Kr_pi_gate__pi_ * mParameters[9]) / mParameters[9]; // millivolt / millisecond

        return d_dt_chaste_interface_var_Vm__Vm;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative0(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -57.9639346865
            double var_chaste_interface__i_CaL_dL_gate__dL = rY[2];
            // Units: dimensionless; Initial value: 0.000584545564405
            double var_chaste_interface__i_CaL_fL_gate__fL = rY[3];
            // Units: dimensionless; Initial value: 0.862381249774
            double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[4];
            // Units: dimensionless; Initial value: 0.711395919653
            double var_chaste_interface__i_CaT_dT_gate__dT = rY[5];
            // Units: dimensionless; Initial value: 0.00504393374639
            double var_chaste_interface__i_CaT_fT_gate__fT = rY[6];
            // Units: dimensionless; Initial value: 0.420757825415
            double var_chaste_interface__i_Kr_pa_gate__paS = rY[7];
            // Units: dimensionless; Initial value: 0.453100576739
            double var_chaste_interface__i_Kr_pa_gate__paF = rY[8];
            // Units: dimensionless; Initial value: 0.144755091176
            double var_chaste_interface__i_Kr_pi_gate__pi_ = rY[9];
            // Units: dimensionless; Initial value: 0.849409822329
            double var_chaste_interface__i_Ks_n_gate__n = rY[10];
            // Units: dimensionless; Initial value: 0.0264600410928
            double var_chaste_interface__AP_sensitive_currents_q_gate__q = rY[11];
            // Units: dimensionless; Initial value: 0.694241313965
            double var_chaste_interface__AP_sensitive_currents_r_gate__r = rY[12];
            // Units: dimensionless; Initial value: 0.00558131733359
            double var_chaste_interface__i_f_y_gate__y = rY[13];
            // Units: dimensionless; Initial value: 0.113643187247
            double var_chaste_interface__i_st_qa_gate__qa = rY[14];
            // Units: dimensionless; Initial value: 0.42380243163
            double var_chaste_interface__i_st_qi_gate__qi = rY[15];
            // Units: dimensionless; Initial value: 0.447294008304
            double var_chaste_interface__calcium_dynamics__Ca_sub = rY[28];
            // Units: millimolar; Initial value: 0.000138112560112
            

        // Lookup table indexing
        const bool _oob_0 = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm__Vm);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm__Vm);

            const double var_x0 = 1 / mParameters[9];
            const double var_x1 = var_chaste_interface__AP_sensitive_currents_r_gate__r * mParameters[9];
            const double var_x2 = pow(var_chaste_interface__calcium_dynamics__Ca_sub, 2);
            const double var_x3 = _lt_0_row[0];
            const double var_x4 = 1.0 + 0.037821482602117998 * mParameters[1];
            const double var_x5 = (var_x3 + var_x4) * var_chaste_interface__calcium_dynamics__Ca_sub;
            const double var_x6 = (1.0 + 0.43687199650502401 * var_x4 * mParameters[1]) * mParameters[1];
            const double var_x7 = pow((0.0207 + var_x5 + 5.2365292183152033e-5 * var_x6), (-2));
            const double var_x8 = var_x2 * var_x7 * pow(var_x3, 2);
            const double var_x9 = 0.0051222473865587962 * var_x8;
            const double var_x10 = 1 / (1.0 + 48.309178743961354 * var_x5 + 0.0025297242600556538 * var_x6);
            const double var_x11 = var_x3 * var_chaste_interface__calcium_dynamics__Ca_sub;
            const double var_x12 = var_x10 * var_x11;
            const double var_x13 = 0.24745156456805778 * var_x12;
            const double var_x14 = pow(mParameters[1], 2);
            const double var_x15 = 0.0080724972509135153 * var_chaste_interface__Vm__Vm;
            const double var_x16 = exp(var_x15);
            const double var_x17 = var_x16 * var_x4;
            const double var_x18 = var_x14 * var_x17;
            const double var_x19 = var_x10 * var_x18;
            const double var_x20 = 1.1718129359175982e-7 * var_x11 * var_x7;
            const double var_x21 = var_x9 - var_x13 + 8.9214469789726909e-6 * var_x19 + var_x18 * var_x20;
            const double var_x22 = 1 / (26.440000000000001 + mParameters[1]);
            const double var_x23 = var_x22 * mParameters[1];
            const double var_x24 = var_x16 * var_x23;
            const double var_x25 = var_x21 * var_x24;
            const double var_x26 = 48.309178743961354 * var_x3;
            const double var_x27 = var_x10 * var_x26;
            const double var_x28 = var_x27 * var_chaste_interface__calcium_dynamics__Ca_sub;
            const double var_x29 = var_x28 + 0.0011051656880977081 * var_x19;
            const double var_x30 = var_x24 * var_x29;
            const double var_x31 = 0.0080724972509135153 * var_x30;
            const double var_x32 = exp(-var_x15);
            const double var_x33 = 1 / (4.6630000000000003 + mParameters[4]);
            const double var_x34 = var_x33 * mParameters[4];
            const double var_x35 = var_x16 + var_x34;
            const double var_x36 = var_x32 * var_x35;
            const double var_x37 = var_x36 * var_x9;
            const double var_x38 = var_x16 * var_x32;
            const double var_x39 = 0.38997571260451763 * var_x12 * var_x38;
            const double var_x40 = var_x12 * var_x36;
            const double var_x41 = 0.63742727717257541 * var_x40;
            const double var_x42 = 0.27300027300027302 * mParameters[2];
            const double var_x43 = exp(0);
            const double var_x44 = 1.0 + 0.2144542140253056 * mParameters[4];
            const double var_x45 = 1 / (1.0 + var_x42 * (1.0 + var_x43) + 0.00061425061425061424 * (1.0 + 0.0017812611328820807 * var_x44 * mParameters[4]) * mParameters[4]);
            const double var_x46 = var_x43 * var_x45;
            const double var_x47 = var_x42 * var_x46;
            const double var_x48 = pow(mParameters[4], 2);
            const double var_x49 = var_x44 * var_x45;
            const double var_x50 = var_x32 * var_x49;
            const double var_x51 = 1.094140745013563e-6 * var_x50;
            const double var_x52 = var_x48 * var_x51;
            const double var_x53 = var_x47 + var_x52;
            const double var_x54 = var_x32 * var_x34 * var_x53;
            const double var_x55 = var_x23 + var_x32;
            const double var_x56 = var_x16 * var_x55;
            const double var_x57 = var_x54 + var_x47 * var_x56;
            const double var_x58 = 0.0080724972509135153 * var_x54;
            const double var_x59 = var_x46 * mParameters[2];
            const double var_x60 = 0.002203793953293343 * var_x59;
            const double var_x61 = var_x56 * var_x60;
            const double var_x62 = var_x49 * pow(var_x32, 2);
            const double var_x63 = var_x33 * pow(mParameters[4], 3);
            const double var_x64 = 8.8324481562344527e-9 * var_x63;
            const double var_x65 = var_x62 * var_x64;
            const double var_x66 = var_x38 * var_x60;
            const double var_x67 = var_x13 * var_x57 + var_x47 * (var_x25 + var_x31 + var_x37 + var_x39 - var_x41) - var_x28 * (var_x61 - var_x58 - var_x65 - var_x66) - var_x57 * var_x9;
            const double var_x68 = pow(mParameters[1], 3);
            const double var_x69 = var_x17 * var_x22 * var_x53 * var_x68;
            const double var_x70 = var_x10 * var_x69;
            const double var_x71 = var_x29 * var_x63;
            const double var_x72 = var_x19 * var_x35;
            const double var_x73 = var_x59 * var_x72;
            const double var_x74 = var_x12 * var_x48;
            const double var_x75 = var_x50 * var_x55;
            const double var_x76 = 5.285704082191126e-5 * var_x75;
            const double var_x77 = var_x30 + var_x28 * var_x36;
            const double var_x78 = mParameters[9] / (var_x57 + var_x77 + 0.0011051656880977081 * var_x70 + 0.00030171053456120889 * var_x73 + var_x51 * var_x71 + var_x74 * var_x76);
            const double var_x79 = 187.5 * var_x78;
            const double var_x80 = mParameters[6] * mParameters[9];
            const double var_x81 = 0.14999999999999999 * pow(var_chaste_interface__i_f_y_gate__y, 2);
            const double var_x82 = mParameters[7] * mParameters[9];
            const double var_x83 = var_chaste_interface__i_CaT_fT_gate__fT * mParameters[9];
            const double var_x84 = 0.1832 * var_x83 * var_chaste_interface__i_CaT_dT_gate__dT;
            const double var_x85 = -0.40000000000000002 * var_chaste_interface__i_Kr_pa_gate__paS - 0.59999999999999998 * var_chaste_interface__i_Kr_pa_gate__paF;
            const double var_x86 = mParameters[8] * var_chaste_interface__i_Kr_pi_gate__pi_;
            const double var_x87 = var_x51 * var_x63;
            const double var_x88 = 2.4355574608170059e-6 * var_x59;
            const double var_x89 = var_x10 * var_x48;
            const double var_x90 = var_x18 * var_x35 * var_x59;
            const double var_x91 = var_x41 + var_x58 + var_x65 + var_x66 - var_x25 - var_x31 - var_x37 - var_x39 - var_x61 - 8.9214469789726909e-6 * var_x70 - var_x20 * var_x69 - var_x21 * var_x87 - var_x72 * var_x88 + 6.9743515593756862e-7 * var_x74 * var_x75 + 4.2668831672630211e-7 * var_x62 * var_x74 + var_x29 * var_x50 * var_x64 - 5.6044595716732166e-9 * var_x48 * var_x75 * var_x8 - 3.1990525141075577e-8 * var_x11 * var_x7 * var_x90 - var_x10 * var_x14 * var_x4 * var_x88 * pow(var_x16, 2) + 9.7613186441721821e-12 * var_x17 * var_x22 * var_x50 * var_x68 * var_x89;
            const double var_x92 = 2.2648713421780755e-8 * var_x50;
            const double var_x93 = (var_x47 * var_x77 - var_x28 * var_x57) * mParameters[9] / pow((var_x40 + 0.0207 * var_x30 + 0.0207 * var_x54 + 2.2876929743622558e-5 * var_x70 + 6.2454080654170234e-6 * var_x73 + var_x71 * var_x92 + 0.0056511056511056512 * var_x56 * var_x59 + var_x12 * var_x52 * var_x55), 2);
            const double var_x94 = 0.080341874999999993 * var_x93;
            const double var_x95 = var_chaste_interface__i_CaL_dL_gate__dL * var_chaste_interface__i_CaL_fL_gate__fL;
            const double var_x96 = mParameters[5] * var_chaste_interface__i_CaL_fCa_gate__fCa;
            const double var_x97 = var_x96 * mParameters[9];
            const double var_x98 = var_x95 * var_x97;
            const double var_x99 = 1 / mParameters[1];
            const double var_x100 = log(var_x99 * mParameters[4]);
            const double var_x101 = 0.033333333333333333 * var_chaste_interface__Vm__Vm;
            const double var_x102 = -var_x101;
            const double var_x103 = exp(-4.0 + var_x102 + 0.89088499421326273 * var_x100);
            
            partialF = var_x0 * (-var_x84 - var_x98 - 0.02 * var_x1 - 0.0054599999999999996 * mParameters[9] - var_x67 * var_x79 - var_x80 * var_x81 - var_x81 * var_x82 - var_x91 * var_x94 - 0.252 * var_x1 * var_chaste_interface__AP_sensitive_currents_q_gate__q - 0.025899999999999999 * pow(var_chaste_interface__i_Ks_n_gate__n, 2) * mParameters[9] + var_x85 * var_x86 * mParameters[9] - 0.0030000000000000001 * var_chaste_interface__i_st_qa_gate__qa * var_chaste_interface__i_st_qi_gate__qi * mParameters[9] - 0.096000000000000002 * var_x103 * mParameters[9] / (pow((1.0 + var_x103), 2) * (1.0 + 1.4974545260150962 * pow((1 / mParameters[3]), 1.2)) * (1.0 + 30.900566853219949 * pow(var_x99, 1.3))));
        }
        else
        {
            const double y_save = rY[0];
            rY[0] += delta;
            const double temp = EvaluateYDerivative0(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[0])/delta;
            rY[0] = y_save;
        }
        return partialF;
    }
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative1(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000150018670943
        double var_chaste_interface__calcium_buffering__fTMM = rY[20];
        // Units: dimensionless; Initial value: 0.501049376634
        double var_chaste_interface__calcium_buffering__fCMi = rY[21];
        // Units: dimensionless; Initial value: 0.0594880901438
        double var_chaste_interface__calcium_buffering__fTC = rY[23];
        // Units: dimensionless; Initial value: 0.0291316176172
        double var_chaste_interface__calcium_buffering__fTMC = rY[24];
        // Units: dimensionless; Initial value: 0.432694959597
        double var_chaste_interface__calcium_dynamics__Ca_sub = rY[28];
        // Units: millimolar; Initial value: 0.000138112560112
        


        // Mathematics
        const double var_calcium_buffering__delta_fCMi = -0.54200000000000004 * var_chaste_interface__calcium_buffering__fCMi + 227.69999999999999 * (1.0 - var_chaste_interface__calcium_buffering__fCMi) * var_chaste_interface__calcium_dynamics__Cai; // per_millisecond
        const double var_calcium_buffering__delta_fTC = -0.44600000000000001 * var_chaste_interface__calcium_buffering__fTC + 88.799999999999997 * (1.0 - var_chaste_interface__calcium_buffering__fTC) * var_chaste_interface__calcium_dynamics__Cai; // per_millisecond
        const double var_calcium_buffering__delta_fTMC = -0.0075100000000000002 * var_chaste_interface__calcium_buffering__fTMC + 227.69999999999999 * (1.0 - var_chaste_interface__calcium_buffering__fTMC - var_chaste_interface__calcium_buffering__fTMM) * var_chaste_interface__calcium_dynamics__Cai; // per_millisecond
        const double var_intracellular_calcium_fluxes__j_up = 0.012 / (1.0 + 0.00059999999999999995 / var_chaste_interface__calcium_dynamics__Cai); // millimolar_per_millisecond
        const double var_intracellular_calcium_fluxes__j_Ca_dif = 25.0 * var_chaste_interface__calcium_dynamics__Ca_sub - 25.0 * var_chaste_interface__calcium_dynamics__Cai; // millimolar_per_millisecond
        const double var_model_parameters__V_cell = 1.1200000000000001 * M_PI; // picolitre
        const double var_model_parameters__V_nsr = 0.011599999999999999 * var_model_parameters__V_cell; // picolitre
        const double var_model_parameters__V_sub = 0.011172 * M_PI; // picolitre
        const double d_dt_chaste_interface_var_calcium_dynamics__Cai = -0.031 * var_calcium_buffering__delta_fTC - 0.062 * var_calcium_buffering__delta_fTMC - 0.044999999999999998 * var_calcium_buffering__delta_fCMi + (var_intracellular_calcium_fluxes__j_Ca_dif * var_model_parameters__V_sub - var_intracellular_calcium_fluxes__j_up * var_model_parameters__V_nsr) / (-var_model_parameters__V_sub + 0.46000000000000002 * var_model_parameters__V_cell); // millimolar / millisecond

        return d_dt_chaste_interface_var_calcium_dynamics__Cai;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative1(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__calcium_dynamics__Cai = rY[1];
            // Units: millimolar; Initial value: 0.000150018670943
            double var_chaste_interface__calcium_buffering__fTMM = rY[20];
            // Units: dimensionless; Initial value: 0.501049376634
            double var_chaste_interface__calcium_buffering__fCMi = rY[21];
            // Units: dimensionless; Initial value: 0.0594880901438
            double var_chaste_interface__calcium_buffering__fTC = rY[23];
            // Units: dimensionless; Initial value: 0.0291316176172
            double var_chaste_interface__calcium_buffering__fTMC = rY[24];
            // Units: dimensionless; Initial value: 0.432694959597
            


            const double var_x124 = 1 / M_PI;
            const double var_x125 = 1 / (pow((1.0 + 0.00059999999999999995 / var_chaste_interface__calcium_dynamics__Cai), 2) * pow(var_chaste_interface__calcium_dynamics__Cai, 2));
            
            partialF = -27.116699999999998 + 10.246499999999999 * var_chaste_interface__calcium_buffering__fCMi + 2.7527999999999997 * var_chaste_interface__calcium_buffering__fTC + 14.1174 * var_chaste_interface__calcium_buffering__fTMC + 14.1174 * var_chaste_interface__calcium_buffering__fTMM + 1.9840167609735966 * var_x124 * (-0.27929999999999999 * M_PI - 9.3542399999999987e-8 * M_PI * var_x125);
        }
        else
        {
            const double y_save = rY[1];
            rY[1] += delta;
            const double temp = EvaluateYDerivative1(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[1])/delta;
            rY[1] = y_save;
        }
        return partialF;
    }
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative2(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__i_CaL_dL_gate__dL = rY[2];
        // Units: dimensionless; Initial value: 0.000584545564405
        

        // Lookup table indexing
        const bool _oob_0 = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm__Vm);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm__Vm);

        // Mathematics
        const double d_dt_chaste_interface_var_i_CaL_dL_gate__dL = (-var_chaste_interface__i_CaL_dL_gate__dL + _lt_0_row[7]) * (_lt_0_row[8]); // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_dL_gate__dL;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative2(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -57.9639346865
            


            const double var_x131 = 1 / (-1.0 + exp(1.0000000000010001e-7));
            const double var_x132 = 1 / (-1.0 + exp(-1.0000000000010001e-7));
            const double var_x133 = exp(-0.20833333333333334 * var_chaste_interface__Vm__Vm);
            const double var_x134 = -1.0 + var_x133;
            const double var_x135 = 0.084900000000000003 / var_x134;
            const double var_x137 = 0.40000000000000002 * var_chaste_interface__Vm__Vm;
            const double var_x138 = exp(-14.0 - var_x137);
            const double var_x139 = -1.0 + var_x138;
            const double var_x140 = 0.028389999999999999 / var_x139;
            const double var_x141 = 35.0 + var_chaste_interface__Vm__Vm;
            const double var_x144 = 2.8575000000028576e-9 * var_x132;
            const double var_x145 = 1999999.9999979998 * (-4.9999997499999997 + var_chaste_interface__Vm__Vm) * (var_x144 + 2.8575000000028576e-9 * var_x131);
            const double var_x146 = var_x140 * var_x141;
            const double var_x148 = var_x135 * var_chaste_interface__Vm__Vm;
            const double var_x152 = -5.0 + var_chaste_interface__Vm__Vm;
            const double var_x153 = fabs(var_x152) < 2.5000000000025002e-7;
            const double var_x154 = 1 / (-1.0 + exp(9.9999999991773334e-8));
            const double var_x155 = 1 / (-1.0 + exp(-1.000000000139778e-7));
            const double var_x156 = exp(-2.0 + var_x137);
            const double var_x157 = -1.0 + var_x156;
            const double var_x158 = 0.011429999999999999 / var_x157;
            const double var_x160 = 7.0975000009920736e-9 * var_x155;
            const double var_x161 = var_x152 * var_x158;
            const double var_x162 = 1999999.9999424887 * (34.999999750000001 + var_chaste_interface__Vm__Vm) * (var_x160 + 7.0974999994161126e-9 * var_x154);
            const double var_x163 = fabs(var_x141) < 2.5000000000718892e-7;
            const double var_x164 = 1 / (-1.0 + exp(9.9999999999999995e-8));
            const double var_x165 = 1 / (-1.0 + exp(-9.9999999999999995e-8));
            const double var_x166 = 4.0752e-8 * var_x165;
            const double var_x167 = 1041666.6666666667 * (-4.7999999999999996e-7 + var_chaste_interface__Vm__Vm) * (var_x166 + 4.0752e-8 * var_x164);
            const double var_x168 = fabs(var_chaste_interface__Vm__Vm) < 4.7999999999999996e-7;
            const double var_x169 = var_x146 + var_x148;
            const double var_x170 = -var_x161;
            
            partialF = ((var_x153) ? (var_x144 + var_x169 - var_x145) : ((var_x163) ? (var_x148 + var_x160 + var_x162 + var_x170) : ((var_x168) ? (var_x146 + var_x166 + var_x167 + var_x170) : (var_x169 + var_x170))));
        }
        else
        {
            const double y_save = rY[2];
            rY[2] += delta;
            const double temp = EvaluateYDerivative2(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[2])/delta;
            rY[2] = y_save;
        }
        return partialF;
    }
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative3(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__i_CaL_fL_gate__fL = rY[3];
        // Units: dimensionless; Initial value: 0.862381249774
        

        // Lookup table indexing
        const bool _oob_0 = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm__Vm);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm__Vm);

        // Mathematics
        const double d_dt_chaste_interface_var_i_CaL_fL_gate__fL = (-var_chaste_interface__i_CaL_fL_gate__fL + _lt_0_row[9]) / (_lt_0_row[10]); // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_fL_gate__fL;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative3(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -57.9639346865
            


            const double var_x173 = exp(-5.4668495419491743 * pow((1 + 0.030769230769230771 * var_chaste_interface__Vm__Vm), 2));
            const double var_x174 = 1 / (44.299999999999997 + 257.10000000000002 * var_x173);
            
            partialF = -var_x174;
        }
        else
        {
            const double y_save = rY[3];
            rY[3] += delta;
            const double temp = EvaluateYDerivative3(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[3])/delta;
            rY[3] = y_save;
        }
        return partialF;
    }
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative4(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[4];
        // Units: dimensionless; Initial value: 0.711395919653
        double var_chaste_interface__calcium_dynamics__Ca_sub = rY[28];
        // Units: millimolar; Initial value: 0.000138112560112
        


        // Mathematics
        const double var_i_CaL_fCa_gate__fCa_infinity = 0.00035 / (0.00035 + var_chaste_interface__calcium_dynamics__Ca_sub); // dimensionless
        const double d_dt_chaste_interface_var_i_CaL_fCa_gate__fCa = 0.021000000000000001 * (-var_chaste_interface__i_CaL_fCa_gate__fCa + var_i_CaL_fCa_gate__fCa_infinity) / var_i_CaL_fCa_gate__fCa_infinity; // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_fCa_gate__fCa;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative4(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__calcium_dynamics__Ca_sub = rY[28];
            // Units: millimolar; Initial value: 0.000138112560112
            


            const double var_x175 = 60.000000000000007 * var_chaste_interface__calcium_dynamics__Ca_sub;
            
            partialF = -0.021000000000000001 - var_x175;
        }
        else
        {
            const double y_save = rY[4];
            rY[4] += delta;
            const double temp = EvaluateYDerivative4(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[4])/delta;
            rY[4] = y_save;
        }
        return partialF;
    }
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative5(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__i_CaT_dT_gate__dT = rY[5];
        // Units: dimensionless; Initial value: 0.00504393374639
        

        // Lookup table indexing
        const bool _oob_0 = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm__Vm);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm__Vm);

        // Mathematics
        const double d_dt_chaste_interface_var_i_CaT_dT_gate__dT = (-var_chaste_interface__i_CaT_dT_gate__dT + _lt_0_row[11]) * (_lt_0_row[12]); // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaT_dT_gate__dT;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative5(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -57.9639346865
            


            const double var_x101 = 0.033333333333333333 * var_chaste_interface__Vm__Vm;
            const double var_x102 = -var_x101;
            const double var_x179 = exp(0.87666666666666671 + var_x101);
            const double var_x180 = exp(-0.87666666666666671 + var_x102);
            const double var_x181 = 1.0680000000000001 * var_x179;
            const double var_x182 = 1.0680000000000001 * var_x180;
            
            partialF = -var_x181 - var_x182;
        }
        else
        {
            const double y_save = rY[5];
            rY[5] += delta;
            const double temp = EvaluateYDerivative5(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[5])/delta;
            rY[5] = y_save;
        }
        return partialF;
    }
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative6(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__i_CaT_fT_gate__fT = rY[6];
        // Units: dimensionless; Initial value: 0.420757825415
        

        // Lookup table indexing
        const bool _oob_0 = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm__Vm);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm__Vm);

        // Mathematics
        const double d_dt_chaste_interface_var_i_CaT_fT_gate__fT = (-var_chaste_interface__i_CaT_fT_gate__fT + _lt_0_row[13]) * (_lt_0_row[14]); // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaT_fT_gate__fT;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative6(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -57.9639346865
            


            const double var_x185 = exp(4.0117035110533159 + 0.065019505851755519 * var_chaste_interface__Vm__Vm);
            const double var_x186 = exp(-0.74069627851140463 - 0.012004801920768308 * var_chaste_interface__Vm__Vm);
            const double var_x187 = 0.014999999999999999 * var_x185;
            const double var_x188 = 0.015299999999999999 * var_x186;
            
            partialF = -var_x187 - var_x188;
        }
        else
        {
            const double y_save = rY[6];
            rY[6] += delta;
            const double temp = EvaluateYDerivative6(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[6])/delta;
            rY[6] = y_save;
        }
        return partialF;
    }
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative7(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__i_Kr_pa_gate__paS = rY[7];
        // Units: dimensionless; Initial value: 0.453100576739
        

        // Lookup table indexing
        const bool _oob_0 = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm__Vm);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm__Vm);

        // Mathematics
        const double var_i_Kr_pa_gate__pa_infinity = _lt_0_row[15]; // dimensionless
        const double d_dt_chaste_interface_var_i_Kr_pa_gate__paS = (-var_chaste_interface__i_Kr_pa_gate__paS + var_i_Kr_pa_gate__pa_infinity) * (_lt_0_row[17]); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Kr_pa_gate__paS;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative7(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -57.9639346865
            


            const double var_x192 = exp(0.058823529411764705 * var_chaste_interface__Vm__Vm);
            const double var_x193 = exp(-0.046296296296296294 * var_chaste_interface__Vm__Vm);
            const double var_x194 = 0.0049612928202981696 * var_x192;
            const double var_x195 = 0.0001771890292963632 * var_x193;
            
            partialF = -var_x194 - var_x195;
        }
        else
        {
            const double y_save = rY[7];
            rY[7] += delta;
            const double temp = EvaluateYDerivative7(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[7])/delta;
            rY[7] = y_save;
        }
        return partialF;
    }
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative8(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__i_Kr_pa_gate__paF = rY[8];
        // Units: dimensionless; Initial value: 0.144755091176
        

        // Lookup table indexing
        const bool _oob_0 = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm__Vm);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm__Vm);

        // Mathematics
        const double var_i_Kr_pa_gate__pa_infinity = _lt_0_row[15]; // dimensionless
        const double d_dt_chaste_interface_var_i_Kr_pa_gate__paF = (-var_chaste_interface__i_Kr_pa_gate__paF + var_i_Kr_pa_gate__pa_infinity) * (_lt_0_row[16]); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Kr_pa_gate__paF;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative8(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -57.9639346865
            


            const double var_x197 = exp(0.062893081761006289 * var_chaste_interface__Vm__Vm);
            const double var_x198 = exp(-0.044444444444444446 * var_chaste_interface__Vm__Vm);
            const double var_x199 = 0.043942879265498072 * var_x197;
            const double var_x200 = 0.0011340097874967246 * var_x198;
            
            partialF = -var_x199 - var_x200;
        }
        else
        {
            const double y_save = rY[8];
            rY[8] += delta;
            const double temp = EvaluateYDerivative8(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[8])/delta;
            rY[8] = y_save;
        }
        return partialF;
    }
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative9(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__i_Kr_pi_gate__pi_ = rY[9];
        // Units: dimensionless; Initial value: 0.849409822329
        

        // Lookup table indexing
        const bool _oob_0 = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm__Vm);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm__Vm);

        // Mathematics
        const double d_dt_chaste_interface_var_i_Kr_pi_gate__pi_ = (-var_chaste_interface__i_Kr_pi_gate__pi_ + _lt_0_row[18]) * (_lt_0_row[19]); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Kr_pi_gate__pi_;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative9(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -57.9639346865
            


            const double var_x203 = exp(0.009420009985210585 * var_chaste_interface__Vm__Vm);
            const double var_x204 = exp(-0.018299935950224173 * var_chaste_interface__Vm__Vm);
            const double var_x205 = 0.10000000000000001 * var_x204;
            const double var_x206 = 0.65600000000000003 * var_x203;
            
            partialF = -var_x205 - var_x206;
        }
        else
        {
            const double y_save = rY[9];
            rY[9] += delta;
            const double temp = EvaluateYDerivative9(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[9])/delta;
            rY[9] = y_save;
        }
        return partialF;
    }
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative10(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__i_Ks_n_gate__n = rY[10];
        // Units: dimensionless; Initial value: 0.0264600410928
        

        // Lookup table indexing
        const bool _oob_0 = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm__Vm);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm__Vm);

        // Mathematics
        const double var_i_Ks_n_gate__alpha_n = _lt_0_row[20]; // per_millisecond
        const double var_i_Ks_n_gate__beta_n = _lt_0_row[21]; // per_millisecond
        const double d_dt_chaste_interface_var_i_Ks_n_gate__n = (-var_chaste_interface__i_Ks_n_gate__n + var_i_Ks_n_gate__alpha_n / (var_i_Ks_n_gate__alpha_n + var_i_Ks_n_gate__beta_n)) * (var_i_Ks_n_gate__alpha_n + var_i_Ks_n_gate__beta_n); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Ks_n_gate__n;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative10(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -57.9639346865
            


            const double var_x207 = exp(-0.022222222222222223 * var_chaste_interface__Vm__Vm);
            const double var_x208 = 0.001 * var_x207;
            const double var_x209 = exp(4.4444444444444446 - 0.1111111111111111 * var_chaste_interface__Vm__Vm);
            const double var_x210 = 1.0 + var_x209;
            const double var_x211 = 1 / var_x210;
            const double var_x212 = 0.014 * var_x211;
            
            partialF = -var_x208 - var_x212;
        }
        else
        {
            const double y_save = rY[10];
            rY[10] += delta;
            const double temp = EvaluateYDerivative10(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[10])/delta;
            rY[10] = y_save;
        }
        return partialF;
    }
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative11(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__AP_sensitive_currents_q_gate__q = rY[11];
        // Units: dimensionless; Initial value: 0.694241313965
        

        // Lookup table indexing
        const bool _oob_0 = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm__Vm);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm__Vm);

        // Mathematics
        const double d_dt_chaste_interface_var_AP_sensitive_currents_q_gate__q = (-var_chaste_interface__AP_sensitive_currents_q_gate__q + _lt_0_row[3]) / (_lt_0_row[4]); // 1 / millisecond

        return d_dt_chaste_interface_var_AP_sensitive_currents_q_gate__q;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative11(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -57.9639346865
            


            const double var_x220 = exp(4.593 + 0.10000000000000001 * var_chaste_interface__Vm__Vm);
            const double var_x221 = exp(-3.52 - 0.080000000000000002 * var_chaste_interface__Vm__Vm);
            const double var_x222 = 1 / (0.065000000000000002 * var_x220 + 0.56999999999999995 * var_x221);
            const double var_x223 = 1 / (6.0599999999999996 + 39.101999999999997 * var_x222);
            
            partialF = -var_x223;
        }
        else
        {
            const double y_save = rY[11];
            rY[11] += delta;
            const double temp = EvaluateYDerivative11(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[11])/delta;
            rY[11] = y_save;
        }
        return partialF;
    }
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative12(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__AP_sensitive_currents_r_gate__r = rY[12];
        // Units: dimensionless; Initial value: 0.00558131733359
        

        // Lookup table indexing
        const bool _oob_0 = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm__Vm);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm__Vm);

        // Mathematics
        const double d_dt_chaste_interface_var_AP_sensitive_currents_r_gate__r = (-var_chaste_interface__AP_sensitive_currents_r_gate__r + _lt_0_row[5]) / (_lt_0_row[6]); // 1 / millisecond

        return d_dt_chaste_interface_var_AP_sensitive_currents_r_gate__r;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative12(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -57.9639346865
            


            const double var_x226 = exp(2.7548999999999997 + 0.089999999999999997 * var_chaste_interface__Vm__Vm);
            const double var_x227 = exp(-2.8607999999999998 - 0.12 * var_chaste_interface__Vm__Vm);
            const double var_x228 = 1 / (1.0369999999999999 * var_x226 + 0.36899999999999999 * var_x227);
            const double var_x229 = 1 / (2.75352 + 14.40516 * var_x228);
            
            partialF = -var_x229;
        }
        else
        {
            const double y_save = rY[12];
            rY[12] += delta;
            const double temp = EvaluateYDerivative12(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[12])/delta;
            rY[12] = y_save;
        }
        return partialF;
    }
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative13(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__i_f_y_gate__y = rY[13];
        // Units: dimensionless; Initial value: 0.113643187247
        

        // Lookup table indexing
        const bool _oob_0 = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm__Vm);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm__Vm);

        // Mathematics
        const double d_dt_chaste_interface_var_i_f_y_gate__y = (-var_chaste_interface__i_f_y_gate__y + _lt_0_row[22]) * (_lt_0_row[23]); // 1 / millisecond

        return d_dt_chaste_interface_var_i_f_y_gate__y;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative13(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -57.9639346865
            


            const double var_x232 = exp(-3.8001143986272159 + 0.051999376007487906 * var_chaste_interface__Vm__Vm);
            const double var_x233 = exp(-8.5404617897664554 - 0.022074080614542406 * var_chaste_interface__Vm__Vm);
            const double var_x234 = 1.3953756414018557 * var_x233;
            const double var_x235 = 1.3953756414018557 * var_x232;
            
            partialF = -var_x234 - var_x235;
        }
        else
        {
            const double y_save = rY[13];
            rY[13] += delta;
            const double temp = EvaluateYDerivative13(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[13])/delta;
            rY[13] = y_save;
        }
        return partialF;
    }
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative14(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__i_st_qa_gate__qa = rY[14];
        // Units: dimensionless; Initial value: 0.42380243163
        

        // Lookup table indexing
        const bool _oob_0 = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm__Vm);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm__Vm);

        // Mathematics
        const double d_dt_chaste_interface_var_i_st_qa_gate__qa = (-var_chaste_interface__i_st_qa_gate__qa + _lt_0_row[24]) * (_lt_0_row[25]); // 1 / millisecond

        return d_dt_chaste_interface_var_i_st_qa_gate__qa;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative14(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -57.9639346865
            


            const double var_x239 = exp(0.02 * var_chaste_interface__Vm__Vm);
            const double var_x240 = exp(0.125 * var_chaste_interface__Vm__Vm);
            const double var_x241 = exp(-0.090909090909090912 * var_chaste_interface__Vm__Vm);
            const double var_x242 = exp(-0.0014285714285714286 * var_chaste_interface__Vm__Vm);
            const double var_x243 = 1 / (16.0 * var_x240 + 15.0 * var_x239);
            const double var_x244 = 1 / (0.20000000000000001 * var_x242 + 0.14999999999999999 * var_x241);
            
            partialF = -var_x243 - var_x244;
        }
        else
        {
            const double y_save = rY[14];
            rY[14] += delta;
            const double temp = EvaluateYDerivative14(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[14])/delta;
            rY[14] = y_save;
        }
        return partialF;
    }
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative15(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__i_st_qi_gate__qi = rY[15];
        // Units: dimensionless; Initial value: 0.447294008304
        

        // Lookup table indexing
        const bool _oob_0 = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm__Vm);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm__Vm);

        // Mathematics
        const double var_i_st_qi_gate__alpha_qi = _lt_0_row[26]; // per_millisecond
        const double var_i_st_qi_gate__beta_qi = _lt_0_row[27]; // per_millisecond
        const double d_dt_chaste_interface_var_i_st_qi_gate__qi = (-var_chaste_interface__i_st_qi_gate__qi + var_i_st_qi_gate__alpha_qi / (var_i_st_qi_gate__alpha_qi + var_i_st_qi_gate__beta_qi)) * (0.15037593984962405 * var_i_st_qi_gate__alpha_qi + 0.15037593984962405 * var_i_st_qi_gate__beta_qi); // 1 / millisecond

        return d_dt_chaste_interface_var_i_st_qi_gate__qi;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative15(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -57.9639346865
            


            const double var_x217 = 0.076923076923076927 * var_chaste_interface__Vm__Vm;
            const double var_x236 = -0.20000000000000001 * var_chaste_interface__Vm__Vm;
            const double var_x242 = exp(-0.0014285714285714286 * var_chaste_interface__Vm__Vm);
            const double var_x245 = exp(-0.10000000000000001 * var_chaste_interface__Vm__Vm);
            const double var_x246 = 1 / (50.0 * var_x242 + 95.0 * var_x245);
            const double var_x247 = exp(0.014285714285714285 * var_chaste_interface__Vm__Vm);
            const double var_x248 = exp(var_x217);
            const double var_x249 = 1 / (700.0 * var_x247 + 3100.0 * var_x248);
            const double var_x251 = exp(var_x236);
            const double var_x252 = 1.0 + var_x251;
            const double var_x253 = 1 / var_x252;
            const double var_x260 = 3.4436090225563911e-5 * var_x253;
            const double var_x261 = 0.15037593984962405 * var_x246;
            const double var_x262 = 0.15037593984962405 * var_x249;
            
            partialF = -var_x260 - var_x261 - var_x262;
        }
        else
        {
            const double y_save = rY[15];
            rY[15] += delta;
            const double temp = EvaluateYDerivative15(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[15])/delta;
            rY[15] = y_save;
        }
        return partialF;
    }
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative16(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__j_SRCarel__R = rY[16];
        // Units: dimensionless; Initial value: 0.688047760973
        double var_chaste_interface__j_SRCarel__O = rY[17];
        // Units: dimensionless; Initial value: 1.7340201253e-07
        double var_chaste_interface__j_SRCarel__RI = rY[19];
        // Units: dimensionless; Initial value: 0.311951987007
        double var_chaste_interface__calcium_dynamics__Ca_jsr = rY[27];
        // Units: millimolar; Initial value: 0.316762674605
        double var_chaste_interface__calcium_dynamics__Ca_sub = rY[28];
        // Units: millimolar; Initial value: 0.000138112560112
        


        // Mathematics
        const double var_j_SRCarel__kCaSR = 15.0 - 14.0 / (1.0 + 0.13584112963311223 * pow((1 / var_chaste_interface__calcium_dynamics__Ca_jsr), 2.5)); // dimensionless
        const double var_j_SRCarel__kiSRCa = 0.5 * var_j_SRCarel__kCaSR; // per_millimolar_millisecond
        const double var_j_SRCarel__koSRCa = 10.0 / var_j_SRCarel__kCaSR; // per_millimolar2_millisecond
        const double d_dt_chaste_interface_var_j_SRCarel__R = 0.059999999999999998 * var_chaste_interface__j_SRCarel__O + 0.0050000000000000001 * var_chaste_interface__j_SRCarel__RI - pow(var_chaste_interface__calcium_dynamics__Ca_sub, 2) * var_chaste_interface__j_SRCarel__R * var_j_SRCarel__koSRCa - var_chaste_interface__calcium_dynamics__Ca_sub * var_chaste_interface__j_SRCarel__R * var_j_SRCarel__kiSRCa; // 1 / millisecond

        return d_dt_chaste_interface_var_j_SRCarel__R;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative16(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__calcium_dynamics__Ca_jsr = rY[27];
            // Units: millimolar; Initial value: 0.316762674605
            double var_chaste_interface__calcium_dynamics__Ca_sub = rY[28];
            // Units: millimolar; Initial value: 0.000138112560112
            


            const double var_x2 = pow(var_chaste_interface__calcium_dynamics__Ca_sub, 2);
            const double var_x263 = 1 / var_chaste_interface__calcium_dynamics__Ca_jsr;
            const double var_x264 = pow(var_x263, 2.5);
            const double var_x265 = 1.0 + 0.13584112963311223 * var_x264;
            const double var_x266 = 1 / var_x265;
            const double var_x267 = 7.0 * var_x266;
            const double var_x268 = -7.5 + var_x267;
            const double var_x269 = var_x268 * var_chaste_interface__calcium_dynamics__Ca_sub;
            const double var_x270 = 1 / (15.0 - 14.0 * var_x266);
            const double var_x271 = 10.0 * var_x2 * var_x270;
            const double var_x272 = -var_x271;
            
            partialF = var_x269 + var_x272;
        }
        else
        {
            const double y_save = rY[16];
            rY[16] += delta;
            const double temp = EvaluateYDerivative16(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[16])/delta;
            rY[16] = y_save;
        }
        return partialF;
    }
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative17(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__j_SRCarel__R = rY[16];
        // Units: dimensionless; Initial value: 0.688047760973
        double var_chaste_interface__j_SRCarel__O = rY[17];
        // Units: dimensionless; Initial value: 1.7340201253e-07
        double var_chaste_interface__j_SRCarel__I = rY[18];
        // Units: dimensionless; Initial value: 7.86181717518e-08
        double var_chaste_interface__calcium_dynamics__Ca_jsr = rY[27];
        // Units: millimolar; Initial value: 0.316762674605
        double var_chaste_interface__calcium_dynamics__Ca_sub = rY[28];
        // Units: millimolar; Initial value: 0.000138112560112
        


        // Mathematics
        const double var_j_SRCarel__kCaSR = 15.0 - 14.0 / (1.0 + 0.13584112963311223 * pow((1 / var_chaste_interface__calcium_dynamics__Ca_jsr), 2.5)); // dimensionless
        const double var_j_SRCarel__kiSRCa = 0.5 * var_j_SRCarel__kCaSR; // per_millimolar_millisecond
        const double var_j_SRCarel__koSRCa = 10.0 / var_j_SRCarel__kCaSR; // per_millimolar2_millisecond
        const double d_dt_chaste_interface_var_j_SRCarel__O = 0.0050000000000000001 * var_chaste_interface__j_SRCarel__I - 0.059999999999999998 * var_chaste_interface__j_SRCarel__O + pow(var_chaste_interface__calcium_dynamics__Ca_sub, 2) * var_chaste_interface__j_SRCarel__R * var_j_SRCarel__koSRCa - var_chaste_interface__calcium_dynamics__Ca_sub * var_chaste_interface__j_SRCarel__O * var_j_SRCarel__kiSRCa; // 1 / millisecond

        return d_dt_chaste_interface_var_j_SRCarel__O;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative17(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__calcium_dynamics__Ca_jsr = rY[27];
            // Units: millimolar; Initial value: 0.316762674605
            double var_chaste_interface__calcium_dynamics__Ca_sub = rY[28];
            // Units: millimolar; Initial value: 0.000138112560112
            


            const double var_x263 = 1 / var_chaste_interface__calcium_dynamics__Ca_jsr;
            const double var_x264 = pow(var_x263, 2.5);
            const double var_x265 = 1.0 + 0.13584112963311223 * var_x264;
            const double var_x266 = 1 / var_x265;
            const double var_x267 = 7.0 * var_x266;
            const double var_x268 = -7.5 + var_x267;
            const double var_x269 = var_x268 * var_chaste_interface__calcium_dynamics__Ca_sub;
            
            partialF = -0.059999999999999998 + var_x269;
        }
        else
        {
            const double y_save = rY[17];
            rY[17] += delta;
            const double temp = EvaluateYDerivative17(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[17])/delta;
            rY[17] = y_save;
        }
        return partialF;
    }
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative18(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__j_SRCarel__O = rY[17];
        // Units: dimensionless; Initial value: 1.7340201253e-07
        double var_chaste_interface__j_SRCarel__I = rY[18];
        // Units: dimensionless; Initial value: 7.86181717518e-08
        double var_chaste_interface__j_SRCarel__RI = rY[19];
        // Units: dimensionless; Initial value: 0.311951987007
        double var_chaste_interface__calcium_dynamics__Ca_jsr = rY[27];
        // Units: millimolar; Initial value: 0.316762674605
        double var_chaste_interface__calcium_dynamics__Ca_sub = rY[28];
        // Units: millimolar; Initial value: 0.000138112560112
        


        // Mathematics
        const double var_j_SRCarel__kCaSR = 15.0 - 14.0 / (1.0 + 0.13584112963311223 * pow((1 / var_chaste_interface__calcium_dynamics__Ca_jsr), 2.5)); // dimensionless
        const double var_j_SRCarel__kiSRCa = 0.5 * var_j_SRCarel__kCaSR; // per_millimolar_millisecond
        const double var_j_SRCarel__koSRCa = 10.0 / var_j_SRCarel__kCaSR; // per_millimolar2_millisecond
        const double d_dt_chaste_interface_var_j_SRCarel__I = -0.065000000000000002 * var_chaste_interface__j_SRCarel__I + pow(var_chaste_interface__calcium_dynamics__Ca_sub, 2) * var_chaste_interface__j_SRCarel__RI * var_j_SRCarel__koSRCa + var_chaste_interface__calcium_dynamics__Ca_sub * var_chaste_interface__j_SRCarel__O * var_j_SRCarel__kiSRCa; // 1 / millisecond

        return d_dt_chaste_interface_var_j_SRCarel__I;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative18(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            


            
            partialF = -0.065000000000000002;
        }
        else
        {
            const double y_save = rY[18];
            rY[18] += delta;
            const double temp = EvaluateYDerivative18(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[18])/delta;
            rY[18] = y_save;
        }
        return partialF;
    }
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative19(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__j_SRCarel__R = rY[16];
        // Units: dimensionless; Initial value: 0.688047760973
        double var_chaste_interface__j_SRCarel__I = rY[18];
        // Units: dimensionless; Initial value: 7.86181717518e-08
        double var_chaste_interface__j_SRCarel__RI = rY[19];
        // Units: dimensionless; Initial value: 0.311951987007
        double var_chaste_interface__calcium_dynamics__Ca_jsr = rY[27];
        // Units: millimolar; Initial value: 0.316762674605
        double var_chaste_interface__calcium_dynamics__Ca_sub = rY[28];
        // Units: millimolar; Initial value: 0.000138112560112
        


        // Mathematics
        const double var_j_SRCarel__kCaSR = 15.0 - 14.0 / (1.0 + 0.13584112963311223 * pow((1 / var_chaste_interface__calcium_dynamics__Ca_jsr), 2.5)); // dimensionless
        const double var_j_SRCarel__kiSRCa = 0.5 * var_j_SRCarel__kCaSR; // per_millimolar_millisecond
        const double var_j_SRCarel__koSRCa = 10.0 / var_j_SRCarel__kCaSR; // per_millimolar2_millisecond
        const double d_dt_chaste_interface_var_j_SRCarel__RI = 0.059999999999999998 * var_chaste_interface__j_SRCarel__I - 0.0050000000000000001 * var_chaste_interface__j_SRCarel__RI + var_chaste_interface__calcium_dynamics__Ca_sub * var_chaste_interface__j_SRCarel__R * var_j_SRCarel__kiSRCa - pow(var_chaste_interface__calcium_dynamics__Ca_sub, 2) * var_chaste_interface__j_SRCarel__RI * var_j_SRCarel__koSRCa; // 1 / millisecond

        return d_dt_chaste_interface_var_j_SRCarel__RI;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative19(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__calcium_dynamics__Ca_jsr = rY[27];
            // Units: millimolar; Initial value: 0.316762674605
            double var_chaste_interface__calcium_dynamics__Ca_sub = rY[28];
            // Units: millimolar; Initial value: 0.000138112560112
            


            const double var_x2 = pow(var_chaste_interface__calcium_dynamics__Ca_sub, 2);
            const double var_x263 = 1 / var_chaste_interface__calcium_dynamics__Ca_jsr;
            const double var_x264 = pow(var_x263, 2.5);
            const double var_x265 = 1.0 + 0.13584112963311223 * var_x264;
            const double var_x266 = 1 / var_x265;
            const double var_x270 = 1 / (15.0 - 14.0 * var_x266);
            const double var_x271 = 10.0 * var_x2 * var_x270;
            const double var_x272 = -var_x271;
            
            partialF = -0.0050000000000000001 + var_x272;
        }
        else
        {
            const double y_save = rY[19];
            rY[19] += delta;
            const double temp = EvaluateYDerivative19(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[19])/delta;
            rY[19] = y_save;
        }
        return partialF;
    }
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative20(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__calcium_buffering__fTMM = rY[20];
        // Units: dimensionless; Initial value: 0.501049376634
        double var_chaste_interface__calcium_buffering__fTMC = rY[24];
        // Units: dimensionless; Initial value: 0.432694959597
        


        // Mathematics
        const double d_dt_chaste_interface_var_calcium_buffering__fTMM = 5.6925000000000008 - 5.6925000000000008 * var_chaste_interface__calcium_buffering__fTMC - 6.4435000000000002 * var_chaste_interface__calcium_buffering__fTMM; // 1 / millisecond

        return d_dt_chaste_interface_var_calcium_buffering__fTMM;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative20(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            


            
            partialF = -6.4435000000000002;
        }
        else
        {
            const double y_save = rY[20];
            rY[20] += delta;
            const double temp = EvaluateYDerivative20(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[20])/delta;
            rY[20] = y_save;
        }
        return partialF;
    }
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative21(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000150018670943
        double var_chaste_interface__calcium_buffering__fCMi = rY[21];
        // Units: dimensionless; Initial value: 0.0594880901438
        


        // Mathematics
        const double var_calcium_buffering__delta_fCMi = -0.54200000000000004 * var_chaste_interface__calcium_buffering__fCMi + 227.69999999999999 * (1.0 - var_chaste_interface__calcium_buffering__fCMi) * var_chaste_interface__calcium_dynamics__Cai; // per_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__fCMi = var_calcium_buffering__delta_fCMi; // 1 / millisecond

        return d_dt_chaste_interface_var_calcium_buffering__fCMi;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative21(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__calcium_dynamics__Cai = rY[1];
            // Units: millimolar; Initial value: 0.000150018670943
            


            const double var_x286 = -227.69999999999999 * var_chaste_interface__calcium_dynamics__Cai;
            
            partialF = -0.54200000000000004 + var_x286;
        }
        else
        {
            const double y_save = rY[21];
            rY[21] += delta;
            const double temp = EvaluateYDerivative21(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[21])/delta;
            rY[21] = y_save;
        }
        return partialF;
    }
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative22(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__calcium_buffering__fCMs = rY[22];
        // Units: dimensionless; Initial value: 0.054381370046
        double var_chaste_interface__calcium_dynamics__Ca_sub = rY[28];
        // Units: millimolar; Initial value: 0.000138112560112
        


        // Mathematics
        const double var_calcium_buffering__delta_fCMs = -0.54200000000000004 * var_chaste_interface__calcium_buffering__fCMs + 227.69999999999999 * (1.0 - var_chaste_interface__calcium_buffering__fCMs) * var_chaste_interface__calcium_dynamics__Ca_sub; // per_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__fCMs = var_calcium_buffering__delta_fCMs; // 1 / millisecond

        return d_dt_chaste_interface_var_calcium_buffering__fCMs;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative22(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__calcium_dynamics__Ca_sub = rY[28];
            // Units: millimolar; Initial value: 0.000138112560112
            


            
            partialF = -0.54200000000000004 - 227.69999999999999 * var_chaste_interface__calcium_dynamics__Ca_sub;
        }
        else
        {
            const double y_save = rY[22];
            rY[22] += delta;
            const double temp = EvaluateYDerivative22(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[22])/delta;
            rY[22] = y_save;
        }
        return partialF;
    }
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative23(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000150018670943
        double var_chaste_interface__calcium_buffering__fTC = rY[23];
        // Units: dimensionless; Initial value: 0.0291316176172
        


        // Mathematics
        const double var_calcium_buffering__delta_fTC = -0.44600000000000001 * var_chaste_interface__calcium_buffering__fTC + 88.799999999999997 * (1.0 - var_chaste_interface__calcium_buffering__fTC) * var_chaste_interface__calcium_dynamics__Cai; // per_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__fTC = var_calcium_buffering__delta_fTC; // 1 / millisecond

        return d_dt_chaste_interface_var_calcium_buffering__fTC;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative23(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__calcium_dynamics__Cai = rY[1];
            // Units: millimolar; Initial value: 0.000150018670943
            


            
            partialF = -0.44600000000000001 - 88.799999999999997 * var_chaste_interface__calcium_dynamics__Cai;
        }
        else
        {
            const double y_save = rY[23];
            rY[23] += delta;
            const double temp = EvaluateYDerivative23(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[23])/delta;
            rY[23] = y_save;
        }
        return partialF;
    }
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative24(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000150018670943
        double var_chaste_interface__calcium_buffering__fTMM = rY[20];
        // Units: dimensionless; Initial value: 0.501049376634
        double var_chaste_interface__calcium_buffering__fTMC = rY[24];
        // Units: dimensionless; Initial value: 0.432694959597
        


        // Mathematics
        const double var_calcium_buffering__delta_fTMC = -0.0075100000000000002 * var_chaste_interface__calcium_buffering__fTMC + 227.69999999999999 * (1.0 - var_chaste_interface__calcium_buffering__fTMC - var_chaste_interface__calcium_buffering__fTMM) * var_chaste_interface__calcium_dynamics__Cai; // per_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__fTMC = var_calcium_buffering__delta_fTMC; // 1 / millisecond

        return d_dt_chaste_interface_var_calcium_buffering__fTMC;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative24(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__calcium_dynamics__Cai = rY[1];
            // Units: millimolar; Initial value: 0.000150018670943
            


            const double var_x286 = -227.69999999999999 * var_chaste_interface__calcium_dynamics__Cai;
            
            partialF = -0.0075100000000000002 + var_x286;
        }
        else
        {
            const double y_save = rY[24];
            rY[24] += delta;
            const double temp = EvaluateYDerivative24(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[24])/delta;
            rY[24] = y_save;
        }
        return partialF;
    }
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative25(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__calcium_buffering__fCQ = rY[25];
        // Units: dimensionless; Initial value: 0.273207128393
        double var_chaste_interface__calcium_dynamics__Ca_jsr = rY[27];
        // Units: millimolar; Initial value: 0.316762674605
        


        // Mathematics
        const double var_calcium_buffering__delta_fCQ = -0.44500000000000001 * var_chaste_interface__calcium_buffering__fCQ + 0.53400000000000003 * (1.0 - var_chaste_interface__calcium_buffering__fCQ) * var_chaste_interface__calcium_dynamics__Ca_jsr; // per_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__fCQ = var_calcium_buffering__delta_fCQ; // 1 / millisecond

        return d_dt_chaste_interface_var_calcium_buffering__fCQ;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative25(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__calcium_dynamics__Ca_jsr = rY[27];
            // Units: millimolar; Initial value: 0.316762674605
            


            
            partialF = -0.44500000000000001 - 0.53400000000000003 * var_chaste_interface__calcium_dynamics__Ca_jsr;
        }
        else
        {
            const double y_save = rY[25];
            rY[25] += delta;
            const double temp = EvaluateYDerivative25(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[25])/delta;
            rY[25] = y_save;
        }
        return partialF;
    }
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative26(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000150018670943
        double var_chaste_interface__calcium_dynamics__Ca_nsr = rY[26];
        // Units: millimolar; Initial value: 1.49348117734
        double var_chaste_interface__calcium_dynamics__Ca_jsr = rY[27];
        // Units: millimolar; Initial value: 0.316762674605
        


        // Mathematics
        const double var_intracellular_calcium_fluxes__j_up = 0.012 / (1.0 + 0.00059999999999999995 / var_chaste_interface__calcium_dynamics__Cai); // millimolar_per_millisecond
        const double var_intracellular_calcium_fluxes__j_tr = 0.025000000000000001 * var_chaste_interface__calcium_dynamics__Ca_nsr - 0.025000000000000001 * var_chaste_interface__calcium_dynamics__Ca_jsr; // millimolar_per_millisecond
        const double var_model_parameters__V_cell = 1.1200000000000001 * M_PI; // picolitre
        const double var_model_parameters__V_jsr = 0.0011999999999999999 * var_model_parameters__V_cell; // picolitre
        const double var_model_parameters__V_nsr = 0.011599999999999999 * var_model_parameters__V_cell; // picolitre
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_nsr = -var_intracellular_calcium_fluxes__j_tr * var_model_parameters__V_jsr / var_model_parameters__V_nsr + var_intracellular_calcium_fluxes__j_up; // millimolar / millisecond

        return d_dt_chaste_interface_var_calcium_dynamics__Ca_nsr;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative26(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            


            
            partialF = -0.0025862068965517241;
        }
        else
        {
            const double y_save = rY[26];
            rY[26] += delta;
            const double temp = EvaluateYDerivative26(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[26])/delta;
            rY[26] = y_save;
        }
        return partialF;
    }
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative27(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__j_SRCarel__O = rY[17];
        // Units: dimensionless; Initial value: 1.7340201253e-07
        double var_chaste_interface__calcium_buffering__fCQ = rY[25];
        // Units: dimensionless; Initial value: 0.273207128393
        double var_chaste_interface__calcium_dynamics__Ca_nsr = rY[26];
        // Units: millimolar; Initial value: 1.49348117734
        double var_chaste_interface__calcium_dynamics__Ca_jsr = rY[27];
        // Units: millimolar; Initial value: 0.316762674605
        double var_chaste_interface__calcium_dynamics__Ca_sub = rY[28];
        // Units: millimolar; Initial value: 0.000138112560112
        


        // Mathematics
        const double var_calcium_buffering__delta_fCQ = -0.44500000000000001 * var_chaste_interface__calcium_buffering__fCQ + 0.53400000000000003 * (1.0 - var_chaste_interface__calcium_buffering__fCQ) * var_chaste_interface__calcium_dynamics__Ca_jsr; // per_millisecond
        const double var_intracellular_calcium_fluxes__j_tr = 0.025000000000000001 * var_chaste_interface__calcium_dynamics__Ca_nsr - 0.025000000000000001 * var_chaste_interface__calcium_dynamics__Ca_jsr; // millimolar_per_millisecond
        const double var_j_SRCarel__j_SRCarel = 250000.0 * (-var_chaste_interface__calcium_dynamics__Ca_sub + var_chaste_interface__calcium_dynamics__Ca_jsr) * var_chaste_interface__j_SRCarel__O; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_jsr = -var_j_SRCarel__j_SRCarel - 10.0 * var_calcium_buffering__delta_fCQ + var_intracellular_calcium_fluxes__j_tr; // millimolar / millisecond

        return d_dt_chaste_interface_var_calcium_dynamics__Ca_jsr;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative27(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__j_SRCarel__O = rY[17];
            // Units: dimensionless; Initial value: 1.7340201253e-07
            double var_chaste_interface__calcium_buffering__fCQ = rY[25];
            // Units: dimensionless; Initial value: 0.273207128393
            


            const double var_x287 = 250000.0 * var_chaste_interface__j_SRCarel__O;
            
            partialF = -5.3650000000000002 - var_x287 + 5.3399999999999999 * var_chaste_interface__calcium_buffering__fCQ;
        }
        else
        {
            const double y_save = rY[27];
            rY[27] += delta;
            const double temp = EvaluateYDerivative27(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[27])/delta;
            rY[27] = y_save;
        }
        return partialF;
    }
    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluateYDerivative28(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000150018670943
        double var_chaste_interface__i_CaL_dL_gate__dL = rY[2];
        // Units: dimensionless; Initial value: 0.000584545564405
        double var_chaste_interface__i_CaL_fL_gate__fL = rY[3];
        // Units: dimensionless; Initial value: 0.862381249774
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[4];
        // Units: dimensionless; Initial value: 0.711395919653
        double var_chaste_interface__i_CaT_dT_gate__dT = rY[5];
        // Units: dimensionless; Initial value: 0.00504393374639
        double var_chaste_interface__i_CaT_fT_gate__fT = rY[6];
        // Units: dimensionless; Initial value: 0.420757825415
        double var_chaste_interface__j_SRCarel__O = rY[17];
        // Units: dimensionless; Initial value: 1.7340201253e-07
        double var_chaste_interface__calcium_buffering__fCMs = rY[22];
        // Units: dimensionless; Initial value: 0.054381370046
        double var_chaste_interface__calcium_dynamics__Ca_jsr = rY[27];
        // Units: millimolar; Initial value: 0.316762674605
        double var_chaste_interface__calcium_dynamics__Ca_sub = rY[28];
        // Units: millimolar; Initial value: 0.000138112560112
        

        // Lookup table indexing
        const bool _oob_0 = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm__Vm);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm__Vm);

        // Mathematics
        const double var_calcium_buffering__delta_fCMs = -0.54200000000000004 * var_chaste_interface__calcium_buffering__fCMs + 227.69999999999999 * (1.0 - var_chaste_interface__calcium_buffering__fCMs) * var_chaste_interface__calcium_dynamics__Ca_sub; // per_millisecond
        const double var_i_NaCa__Qco = 0; // dimensionless
        const double var_intracellular_calcium_fluxes__j_Ca_dif = 25.0 * var_chaste_interface__calcium_dynamics__Ca_sub - 25.0 * var_chaste_interface__calcium_dynamics__Cai; // millimolar_per_millisecond
        const double var_j_SRCarel__j_SRCarel = 250000.0 * (-var_chaste_interface__calcium_dynamics__Ca_sub + var_chaste_interface__calcium_dynamics__Ca_jsr) * var_chaste_interface__j_SRCarel__O; // millimolar_per_millisecond
        const double var_i_CaL__i_CaL = (-45.0 + var_chaste_interface__Vm__Vm) * mParameters[5] * var_chaste_interface__i_CaL_dL_gate__dL * var_chaste_interface__i_CaL_fCa_gate__fCa * var_chaste_interface__i_CaL_fL_gate__fL * mParameters[9]; // picoA
        const double var_i_CaT__i_CaT = 0.1832 * (-45.0 + var_chaste_interface__Vm__Vm) * var_chaste_interface__i_CaT_dT_gate__dT * var_chaste_interface__i_CaT_fT_gate__fT * mParameters[9]; // picoA
        const double var_i_b_Ca__i_b_Ca = 0.00059999999999999995 * (-45.0 + var_chaste_interface__Vm__Vm) * mParameters[9]; // picoA
        const double var_i_NaCa__k43 = mParameters[1] / (26.440000000000001 + mParameters[1]); // dimensionless
        const double var_i_NaCa__k34 = mParameters[4] / (4.6630000000000003 + mParameters[4]); // dimensionless
        const double var_i_NaCa__di = 1.0 + 48.309178743961354 * (1.0 + 0.037821482602117998 * mParameters[1] + _lt_0_row[0]) * var_chaste_interface__calcium_dynamics__Ca_sub + 0.0025297242600556538 * (1.0 + 0.43687199650502401 * (1.0 + 0.037821482602117998 * mParameters[1]) * mParameters[1]) * mParameters[1]; // dimensionless
        const double var_i_NaCa__do = 1.0 + 0.27300027300027302 * (1.0 + exp(0.037415977988011662 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qco)) * mParameters[2] + 0.00061425061425061424 * (1.0 + 0.0017812611328820807 * (1.0 + 0.2144542140253056 * mParameters[4]) * mParameters[4]) * mParameters[4]; // dimensionless
        const double var_i_NaCa__k12 = 48.309178743961354 * var_chaste_interface__calcium_dynamics__Ca_sub * _lt_0_row[0] / var_i_NaCa__di; // dimensionless
        const double var_i_NaCa__k14 = 0.0011051656880977081 * pow(mParameters[1], 2) * (1.0 + 0.037821482602117998 * mParameters[1]) * _lt_0_row[1] / var_i_NaCa__di; // dimensionless
        const double var_i_NaCa__k21 = 0.27300027300027302 * mParameters[2] * exp(0.037415977988011662 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qco) / var_i_NaCa__do; // dimensionless
        const double var_i_NaCa__k23 = 1.094140745013563e-6 * pow(mParameters[4], 2) * (1.0 + 0.2144542140253056 * mParameters[4]) * _lt_0_row[2] / var_i_NaCa__do; // dimensionless
        const double var_i_NaCa__k32 = _lt_0_row[1]; // dimensionless
        const double var_i_NaCa__k41 = _lt_0_row[2]; // dimensionless
        const double var_i_NaCa__i_NaCa = 187.5 * (((var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k32 * var_i_NaCa__k43 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k12 * var_i_NaCa__k41) * var_i_NaCa__k21 - ((var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k34 * var_i_NaCa__k41 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k21 * var_i_NaCa__k32) * var_i_NaCa__k12) * mParameters[9] / ((var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k23 * var_i_NaCa__k34 + (var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k32 * var_i_NaCa__k43 + (var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k14 * var_i_NaCa__k43 + (var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k34 * var_i_NaCa__k41 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k12 * var_i_NaCa__k41 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k14 * var_i_NaCa__k21 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k12 * var_i_NaCa__k23 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k21 * var_i_NaCa__k32); // picoA
        const double var_model_parameters__V_cell = 1.1200000000000001 * M_PI; // picolitre
        const double var_model_parameters__V_jsr = 0.0011999999999999999 * var_model_parameters__V_cell; // picolitre
        const double var_model_parameters__V_sub = 0.011172 * M_PI; // picolitre
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_sub = -var_intracellular_calcium_fluxes__j_Ca_dif - 0.044999999999999998 * var_calcium_buffering__delta_fCMs - 5.182152666217547e-6 * (-2.0 * var_i_NaCa__i_NaCa + var_i_CaL__i_CaL + var_i_CaT__i_CaT + var_i_b_Ca__i_b_Ca) / var_model_parameters__V_sub + var_j_SRCarel__j_SRCarel * var_model_parameters__V_jsr / var_model_parameters__V_sub; // millimolar / millisecond

        return d_dt_chaste_interface_var_calcium_dynamics__Ca_sub;
    }

    double Cellmaltsev_2009FromCellMLGRL2Opt::EvaluatePartialDerivative28(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -57.9639346865
            double var_chaste_interface__j_SRCarel__O = rY[17];
            // Units: dimensionless; Initial value: 1.7340201253e-07
            double var_chaste_interface__calcium_buffering__fCMs = rY[22];
            // Units: dimensionless; Initial value: 0.054381370046
            double var_chaste_interface__calcium_dynamics__Ca_sub = rY[28];
            // Units: millimolar; Initial value: 0.000138112560112
            

        // Lookup table indexing
        const bool _oob_0 = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm__Vm);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellmaltsev_2009FromCellMLGRL2Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm__Vm);

            const double var_x3 = _lt_0_row[0];
            const double var_x4 = 1.0 + 0.037821482602117998 * mParameters[1];
            const double var_x5 = (var_x3 + var_x4) * var_chaste_interface__calcium_dynamics__Ca_sub;
            const double var_x6 = (1.0 + 0.43687199650502401 * var_x4 * mParameters[1]) * mParameters[1];
            const double var_x7 = pow((0.0207 + var_x5 + 5.2365292183152033e-5 * var_x6), (-2));
            const double var_x10 = 1 / (1.0 + 48.309178743961354 * var_x5 + 0.0025297242600556538 * var_x6);
            const double var_x11 = var_x3 * var_chaste_interface__calcium_dynamics__Ca_sub;
            const double var_x12 = var_x10 * var_x11;
            const double var_x14 = pow(mParameters[1], 2);
            const double var_x15 = 0.0080724972509135153 * var_chaste_interface__Vm__Vm;
            const double var_x16 = exp(var_x15);
            const double var_x17 = var_x16 * var_x4;
            const double var_x18 = var_x14 * var_x17;
            const double var_x19 = var_x10 * var_x18;
            const double var_x22 = 1 / (26.440000000000001 + mParameters[1]);
            const double var_x23 = var_x22 * mParameters[1];
            const double var_x24 = var_x16 * var_x23;
            const double var_x26 = 48.309178743961354 * var_x3;
            const double var_x27 = var_x10 * var_x26;
            const double var_x28 = var_x27 * var_chaste_interface__calcium_dynamics__Ca_sub;
            const double var_x29 = var_x28 + 0.0011051656880977081 * var_x19;
            const double var_x30 = var_x24 * var_x29;
            const double var_x32 = exp(-var_x15);
            const double var_x33 = 1 / (4.6630000000000003 + mParameters[4]);
            const double var_x34 = var_x33 * mParameters[4];
            const double var_x35 = var_x16 + var_x34;
            const double var_x36 = var_x32 * var_x35;
            const double var_x40 = var_x12 * var_x36;
            const double var_x42 = 0.27300027300027302 * mParameters[2];
            const double var_x43 = exp(0);
            const double var_x44 = 1.0 + 0.2144542140253056 * mParameters[4];
            const double var_x45 = 1 / (1.0 + var_x42 * (1.0 + var_x43) + 0.00061425061425061424 * (1.0 + 0.0017812611328820807 * var_x44 * mParameters[4]) * mParameters[4]);
            const double var_x46 = var_x43 * var_x45;
            const double var_x47 = var_x42 * var_x46;
            const double var_x48 = pow(mParameters[4], 2);
            const double var_x49 = var_x44 * var_x45;
            const double var_x50 = var_x32 * var_x49;
            const double var_x51 = 1.094140745013563e-6 * var_x50;
            const double var_x52 = var_x48 * var_x51;
            const double var_x53 = var_x47 + var_x52;
            const double var_x54 = var_x32 * var_x34 * var_x53;
            const double var_x55 = var_x23 + var_x32;
            const double var_x56 = var_x16 * var_x55;
            const double var_x57 = var_x54 + var_x47 * var_x56;
            const double var_x59 = var_x46 * mParameters[2];
            const double var_x63 = var_x33 * pow(mParameters[4], 3);
            const double var_x68 = pow(mParameters[1], 3);
            const double var_x69 = var_x17 * var_x22 * var_x53 * var_x68;
            const double var_x70 = var_x10 * var_x69;
            const double var_x71 = var_x29 * var_x63;
            const double var_x72 = var_x19 * var_x35;
            const double var_x73 = var_x59 * var_x72;
            const double var_x74 = var_x12 * var_x48;
            const double var_x75 = var_x50 * var_x55;
            const double var_x76 = 5.285704082191126e-5 * var_x75;
            const double var_x77 = var_x30 + var_x28 * var_x36;
            const double var_x78 = mParameters[9] / (var_x57 + var_x77 + 0.0011051656880977081 * var_x70 + 0.00030171053456120889 * var_x73 + var_x51 * var_x71 + var_x74 * var_x76);
            const double var_x87 = var_x51 * var_x63;
            const double var_x89 = var_x10 * var_x48;
            const double var_x90 = var_x18 * var_x35 * var_x59;
            const double var_x92 = 2.2648713421780755e-8 * var_x50;
            const double var_x93 = (var_x47 * var_x77 - var_x28 * var_x57) * mParameters[9] / pow((var_x40 + 0.0207 * var_x30 + 0.0207 * var_x54 + 2.2876929743622558e-5 * var_x70 + 6.2454080654170234e-6 * var_x73 + var_x71 * var_x92 + 0.0056511056511056512 * var_x56 * var_x59 + var_x12 * var_x52 * var_x55), 2);
            const double var_x114 = var_x7 * (-48.309178743961354 - var_x26 - 1.8271247633873431 * mParameters[1]);
            const double var_x115 = var_x11 * var_x114;
            const double var_x116 = 0.0207 * var_x115;
            const double var_x117 = 4.7355244569298691e-7 * var_x114;
            const double var_x118 = var_x116 + var_x27 + var_x117 * var_x18;
            const double var_x119 = var_x118 * var_x24;
            const double var_x120 = var_x27 * var_x36;
            const double var_x121 = var_x116 * var_x36;
            const double var_x122 = var_x47 * (var_x119 + var_x120 + var_x121) - var_x116 * var_x57 - var_x27 * var_x57;
            const double var_x123 = -var_x119 - var_x120 - var_x121 - var_x117 * var_x69 - var_x118 * var_x87 - 1.2927994695413239e-7 * var_x114 * var_x90 - var_x3 * var_x76 * var_x89 - var_x115 * var_x48 * var_x55 * var_x92;
            const double var_x124 = 1 / M_PI;
            const double var_x288 = 375.0 * var_x78;
            const double var_x289 = 0.16068374999999999 * var_x93;
            const double var_x290 = 0.00046385183192065399 * var_x124;
            const double var_x294 = 30075.187969924809 * var_chaste_interface__j_SRCarel__O;
            
            partialF = -35.246499999999997 - var_x294 + 10.246499999999999 * var_chaste_interface__calcium_buffering__fCMs - var_x290 * (-var_x122 * var_x288 - var_x123 * var_x289);
        }
        else
        {
            const double y_save = rY[28];
            rY[28] += delta;
            const double temp = EvaluateYDerivative28(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[28])/delta;
            rY[28] = y_save;
        }
        return partialF;
    }

    std::vector<double> Cellmaltsev_2009FromCellMLGRL2Opt::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const std::vector<double> & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__i_CaL_dL_gate__dL = rY[2];
        // Units: dimensionless; Initial value: 0.000584545564405
        double var_chaste_interface__i_CaL_fL_gate__fL = rY[3];
        // Units: dimensionless; Initial value: 0.862381249774
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[4];
        // Units: dimensionless; Initial value: 0.711395919653
        double var_chaste_interface__i_Kr_pa_gate__paS = rY[7];
        // Units: dimensionless; Initial value: 0.453100576739
        double var_chaste_interface__i_Kr_pa_gate__paF = rY[8];
        // Units: dimensionless; Initial value: 0.144755091176
        double var_chaste_interface__i_Kr_pi_gate__pi_ = rY[9];
        // Units: dimensionless; Initial value: 0.849409822329
        double var_chaste_interface__i_f_y_gate__y = rY[13];
        // Units: dimensionless; Initial value: 0.113643187247
        

        // Mathematics
        const double var_i_CaL__E_CaL = 45.0; // millivolt
        const double var_i_f__g_if = 0.14999999999999999; // nanoS_per_picoF
        const double var_i_CaL__i_CaL = (-var_i_CaL__E_CaL + var_chaste_interface__Vm__Vm) * mParameters[5] * var_chaste_interface__i_CaL_dL_gate__dL * var_chaste_interface__i_CaL_fCa_gate__fCa * var_chaste_interface__i_CaL_fL_gate__fL * mParameters[9]; // picoA
        const double var_model_parameters__Cm_converted = 9.9999999999999995e-7 * mParameters[9]; // uF
        const double var_i_CaL__i_CaL_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_CaL__i_CaL / var_model_parameters__Cm_converted; // uA_per_cm2
        const double var_model_parameters__F = 96485.0; // coulomb_per_mole
        const double var_model_parameters__R = 8314.3999999999996; // joule_per_kilomole_kelvin
        const double var_model_parameters__T = 310.14999999999998; // kelvin
        const double var_electric_potentials__E_K = var_model_parameters__R * var_model_parameters__T * log(mParameters[3] / mParameters[0]) / var_model_parameters__F; // millivolt
        const double var_electric_potentials__E_Na = var_model_parameters__R * var_model_parameters__T * log(mParameters[4] / mParameters[1]) / var_model_parameters__F; // millivolt
        const double var_i_Kr__i_Kr = (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * (0.40000000000000002 * var_chaste_interface__i_Kr_pa_gate__paS + 0.59999999999999998 * var_chaste_interface__i_Kr_pa_gate__paF) * mParameters[8] * var_chaste_interface__i_Kr_pi_gate__pi_ * mParameters[9]; // picoA
        const double var_i_Kr__i_Kr_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_Kr__i_Kr / var_model_parameters__Cm_converted; // uA_per_cm2
        const double var_i_f__i_f_K = pow(var_chaste_interface__i_f_y_gate__y, 2) * (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * var_i_f__g_if * mParameters[6] * mParameters[9]; // picoA
        const double var_i_f__i_f_Na = pow(var_chaste_interface__i_f_y_gate__y, 2) * (-var_electric_potentials__E_Na + var_chaste_interface__Vm__Vm) * var_i_f__g_if * mParameters[7] * mParameters[9]; // picoA
        const double var_i_f__i_f = var_i_f__i_f_K + var_i_f__i_f_Na; // picoA
        const double var_i_f__i_f_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_f__i_f / var_model_parameters__Cm_converted; // uA_per_cm2

        std::vector<double> dqs(7);
        dqs[0] = var_i_CaL__i_CaL_converted;
        dqs[1] = var_model_parameters__Cm_converted;
        dqs[2] = var_i_f__i_f_converted;
        dqs[3] = var_i_f__i_f_K;
        dqs[4] = var_i_f__i_f_Na;
        dqs[5] = var_i_Kr__i_Kr_converted;
        dqs[6] = var_chaste_interface__environment__time;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellmaltsev_2009FromCellMLGRL2Opt>::Initialise(void)
{
    this->mSystemName = "maltsev_2009";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-57.9639346865);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.000150018670943);

    // rY[2]:
    this->mVariableNames.push_back("i_CaL_dL_gate__dL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000584545564405);

    // rY[3]:
    this->mVariableNames.push_back("i_CaL_fL_gate__fL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.862381249774);

    // rY[4]:
    this->mVariableNames.push_back("i_CaL_fCa_gate__fCa");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.711395919653);

    // rY[5]:
    this->mVariableNames.push_back("i_CaT_dT_gate__dT");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00504393374639);

    // rY[6]:
    this->mVariableNames.push_back("i_CaT_fT_gate__fT");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.420757825415);

    // rY[7]:
    this->mVariableNames.push_back("i_Kr_pa_gate__paS");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.453100576739);

    // rY[8]:
    this->mVariableNames.push_back("i_Kr_pa_gate__paF");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.144755091176);

    // rY[9]:
    this->mVariableNames.push_back("i_Kr_pi_gate__pi_");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.849409822329);

    // rY[10]:
    this->mVariableNames.push_back("i_Ks_n_gate__n");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0264600410928);

    // rY[11]:
    this->mVariableNames.push_back("AP_sensitive_currents_q_gate__q");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.694241313965);

    // rY[12]:
    this->mVariableNames.push_back("AP_sensitive_currents_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00558131733359);

    // rY[13]:
    this->mVariableNames.push_back("i_f_y_gate__y");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.113643187247);

    // rY[14]:
    this->mVariableNames.push_back("i_st_qa_gate__qa");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.42380243163);

    // rY[15]:
    this->mVariableNames.push_back("i_st_qi_gate__qi");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.447294008304);

    // rY[16]:
    this->mVariableNames.push_back("j_SRCarel__R");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.688047760973);

    // rY[17]:
    this->mVariableNames.push_back("j_SRCarel__O");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.7340201253e-07);

    // rY[18]:
    this->mVariableNames.push_back("j_SRCarel__I");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(7.86181717518e-08);

    // rY[19]:
    this->mVariableNames.push_back("j_SRCarel__RI");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.311951987007);

    // rY[20]:
    this->mVariableNames.push_back("calcium_buffering__fTMM");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.501049376634);

    // rY[21]:
    this->mVariableNames.push_back("calcium_buffering__fCMi");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0594880901438);

    // rY[22]:
    this->mVariableNames.push_back("calcium_buffering__fCMs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.054381370046);

    // rY[23]:
    this->mVariableNames.push_back("calcium_buffering__fTC");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0291316176172);

    // rY[24]:
    this->mVariableNames.push_back("calcium_buffering__fTMC");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.432694959597);

    // rY[25]:
    this->mVariableNames.push_back("calcium_buffering__fCQ");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.273207128393);

    // rY[26]:
    this->mVariableNames.push_back("NSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.49348117734);

    // rY[27]:
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.316762674605);

    // rY[28]:
    this->mVariableNames.push_back("dyadic_space_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.000138112560112);

    // mParameters[0]:
    this->mParameterNames.push_back("cytosolic_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[1]:
    this->mParameterNames.push_back("cytosolic_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[2]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[3]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[4]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[5]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("nanoS_per_picoF");

    // mParameters[6]:
    this->mParameterNames.push_back("membrane_hyperpolarisation_activated_funny_current_potassium_component_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_hyperpolarisation_activated_funny_current_sodium_component_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("nanoS_per_picoF");

    // mParameters[9]:
    this->mParameterNames.push_back("model_parameters__Cm");
    this->mParameterUnits.push_back("picoF");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_capacitance");
    this->mDerivedQuantityUnits.push_back("uF");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_hyperpolarisation_activated_funny_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_hyperpolarisation_activated_funny_current_potassium_component");
    this->mDerivedQuantityUnits.push_back("picoA");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_hyperpolarisation_activated_funny_current_sodium_component");
    this->mDerivedQuantityUnits.push_back("picoA");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellmaltsev_2009FromCellMLGRL2Opt)

