#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: Carro_Rodriguez_Laguna_Pueyo_CinC2010_EPI
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: NumericCvodeOpt)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "carro_2011_endo.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class Cellcarro_2011_endoFromCellMLCvodeOpt_LookupTables : public AbstractLookupTableCollection
{
public:
    static Cellcarro_2011_endoFromCellMLCvodeOpt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new Cellcarro_2011_endoFromCellMLCvodeOpt_LookupTables);
        }
        return mpInstance.get();
    }

    void FreeMemory()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }

    // Row lookup methods
    // using linear-interpolation

    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<32; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }


    const double * IndexTable0(double var_chaste_interface__membrane__V)
    {
        const double _offset_0 = var_chaste_interface__membrane__V - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLCvodeOpt_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }


// LCOV_EXCL_START
    bool CheckIndex0(double& var_chaste_interface__membrane__V)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__membrane__V>mTableMaxs[0] || var_chaste_interface__membrane__V<mTableMins[0])
        {
// LCOV_EXCL_START
            _oob_0 = true;
// LCOV_EXCL_STOP
        }
        return _oob_0;
    }
// LCOV_EXCL_STOP

    ~Cellcarro_2011_endoFromCellMLCvodeOpt_LookupTables()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

    }

protected:
    Cellcarro_2011_endoFromCellMLCvodeOpt_LookupTables(const Cellcarro_2011_endoFromCellMLCvodeOpt_LookupTables&);
    Cellcarro_2011_endoFromCellMLCvodeOpt_LookupTables& operator= (const Cellcarro_2011_endoFromCellMLCvodeOpt_LookupTables&);
    Cellcarro_2011_endoFromCellMLCvodeOpt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);

        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 32;
        mTableMins[0] = -250.0001;
        mTableMaxs[0] = 549.9999;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;

        Cellcarro_2011_endoFromCellMLCvodeOpt_LookupTables::RegenerateTables();
    }

    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);


        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][32];

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(0.010107688547106707 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][0] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-0.027328194960695912 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][1] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + 0.32000000000000001 * exp(-0.027328194960695912 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][2] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-0.037435883507802616 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][3] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.1245 * exp(-0.003743588350780262 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][4] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + exp(7.4880000000000004 - 0.16722408026755853 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][5] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + exp(3.0833333333333335 + 0.041666666666666664 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][6] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(0.074871767015605231 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][7] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = -1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][8] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(0.037435883507802616 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][9] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = -1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][10] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / pow((1.0 + exp(9.6298788694481825 + 0.13458950201884254 * var_chaste_interface__membrane__V)), 2);

                _lookup_table_0[i][11] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = ((var_chaste_interface__membrane__V >= -40.0) ? (0) : (0.057000000000000002 * exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__membrane__V))) + ((var_chaste_interface__membrane__V >= -40.0) ? (5.9230999999999998 / (1.0 + exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__membrane__V))) : (310000.0 * exp(0.34849999999999998 * var_chaste_interface__membrane__V) + 2.7000000000000002 * exp(0.079000000000000001 * var_chaste_interface__membrane__V)));

                _lookup_table_0[i][12] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = ((var_chaste_interface__membrane__V >= -40.0) ? (0) : ((37.780000000000001 + var_chaste_interface__membrane__V) * (-25428.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__V) - 6.9480000000000002e-6 * exp(-0.043909999999999998 * var_chaste_interface__membrane__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V)))) + ((var_chaste_interface__membrane__V >= -40.0) ? (0.59999999999999998 * exp(0.057000000000000002 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.2000000000000002 - 0.10000000000000001 * var_chaste_interface__membrane__V))) : (0.024240000000000001 * exp(-0.01052 * var_chaste_interface__membrane__V) / (1.0 + exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__membrane__V))));

                _lookup_table_0[i][13] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / pow((1.0 + exp(-6.2967884828349945 - 0.11074197120708749 * var_chaste_interface__membrane__V)), 2);

                _lookup_table_0[i][14] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.12920000000000001 * exp(-8.682389366752302 * pow((1 + 0.021838829438742085 * var_chaste_interface__membrane__V), 2)) + 0.064869999999999997 * exp(-0.0089012876052174655 * pow((-1 + 0.2073398299813394 * var_chaste_interface__membrane__V), 2));

                _lookup_table_0[i][15] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-0.83333333333333337 - 0.16666666666666666 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][16] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(2.5 - 0.050000000000000003 * var_chaste_interface__membrane__V)) + 1.3999999999999999 * (0.25 + 1.3999999999999999 / (1.0 + exp(-2.6923076923076925 - 0.076923076923076927 * var_chaste_interface__membrane__V))) / (1.0 + exp(1.0 + 0.20000000000000001 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][17] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(2.8571428571428572 + 0.14285714285714285 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][18] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 20.0 + 200.0 / (1.0 + exp(1.3 - 0.10000000000000001 * var_chaste_interface__membrane__V)) + 180.0 / (1.0 + exp(3.0 + 0.10000000000000001 * var_chaste_interface__membrane__V)) + 1102.5 * exp(-3.2400000000000002 * pow((1 + 0.037037037037037035 * var_chaste_interface__membrane__V), 2));

                _lookup_table_0[i][19] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.67000000000000004 / (1.0 + exp(5.0 + 0.14285714285714285 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][20] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 16.0 / (1.0 + exp(3.0 + 0.10000000000000001 * var_chaste_interface__membrane__V)) + 31.0 / (1.0 + exp(2.5 - 0.10000000000000001 * var_chaste_interface__membrane__V)) + 300.0 * exp(-3.6764705882352939 * pow((1 + 0.040000000000000001 * var_chaste_interface__membrane__V), 2));

                _lookup_table_0[i][21] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-2.0 - 0.20000000000000001 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][22] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 230.0 / (1.0 + exp(2.0 + 0.050000000000000003 * var_chaste_interface__membrane__V)) + 3300.0 / ((1.0 + exp(1.2222222222222223 + 0.1111111111111111 * var_chaste_interface__membrane__V)) * (1.0 + exp(-2.4444444444444446 - 0.1111111111111111 * var_chaste_interface__membrane__V)));

                _lookup_table_0[i][23] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-0.26666666666666666 - 0.070175438596491224 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][24] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.00100999899000101 + 0.00100999899000101 * exp(-0.17252124645892353 - 0.070821529745042494 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][25] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(1.4615384615384615 - 0.076923076923076927 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][26] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.5 + 8.5 * exp(-0.81000000000000005 * pow((1 + 0.022222222222222223 * var_chaste_interface__membrane__V), 2));

                _lookup_table_0[i][27] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.5 + 9.0 / (1.0 + exp(0.20000000000000001 + 0.066666666666666666 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][28] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(3.8999999999999999 + 0.20000000000000001 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][29] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 7.0 + 85.0 * exp(-7.2727272727272725 * pow((1 + 0.025000000000000001 * var_chaste_interface__membrane__V), 2));

                _lookup_table_0[i][30] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 30.0 + 800.0 / (1.0 + exp(6.0 + 0.10000000000000001 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][31] = val;
            }

            mNeedsRegeneration[0] = false;
        }

        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }

private:
    /** The single instance of the class */
    static std::shared_ptr<Cellcarro_2011_endoFromCellMLCvodeOpt_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[32];

    // Lookup tables
    double (*_lookup_table_0)[32];
    int _lookup_table_0_num_misshit_piecewise[32] = {0};

};

std::shared_ptr<Cellcarro_2011_endoFromCellMLCvodeOpt_LookupTables> Cellcarro_2011_endoFromCellMLCvodeOpt_LookupTables::mpInstance;

    boost::shared_ptr<RegularStimulus> Cellcarro_2011_endoFromCellMLCvodeOpt::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__I_Stim_Amplitude_converted = 40.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        const double var_chaste_interface__membrane__I_Stim_Period = 1000.0; // millisecond
        const double var_chaste_interface__membrane__I_Stim_PulseDuration = 1.0; // millisecond
        const double var_chaste_interface__membrane__I_Stim_Start = 0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__I_Stim_Amplitude_converted),
                var_chaste_interface__membrane__I_Stim_PulseDuration,
                var_chaste_interface__membrane__I_Stim_Period,
                var_chaste_interface__membrane__I_Stim_Start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }

    double Cellcarro_2011_endoFromCellMLCvodeOpt::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Cellcarro_2011_endoFromCellMLCvodeOpt::Cellcarro_2011_endoFromCellMLCvodeOpt(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                39,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellcarro_2011_endoFromCellMLCvodeOpt>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        
        NV_Ith_S(this->mParameters, 0) = 0.0053114; // (var_SR_Fluxes__V_max_SR_CaP) [milliM_per_millis]
        NV_Ith_S(this->mParameters, 1) = 138.0; // (var_Potassium_Concentrations__K_i) [millimolar]
        NV_Ith_S(this->mParameters, 2) = 1.8; // (var_Calcium_Concentrations__Ca_o) [millimolar]
        NV_Ith_S(this->mParameters, 3) = 5.4000000000000004; // (var_Potassium_Concentrations__K_o) [millimolar]
        NV_Ith_S(this->mParameters, 4) = 140.0; // (var_Sodium_Concentrations__Na_o) [millimolar]
        NV_Ith_S(this->mParameters, 5) = 1.0; // (var_L_Type_Calcium_Current__P_scale) [dimensionless]
        NV_Ith_S(this->mParameters, 6) = 1.3809999999999999e-10; // (var_membrane__C_mem) [farad]
        NV_Ith_S(this->mParameters, 7) = 18.859999999999999; // (var_Fast_Na_Current__G_Na) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 8) = 0.0014040000000000001; // (var_Transient_Outward_K_Current__G_to_f) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 9) = 0.57152999999999998; // (var_Inward_Rectifier_K_Current__G_K1) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 10) = 0.035000000000000003; // (var_Rapidly_Activating_K_Current__G_Kr) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 11) = 0.0035000000000000001; // (var_Slowly_Activating_K_Current__G_Ks) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 12) = 0.037595999999999997; // (var_Transient_Outward_K_Current__G_to_s) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 13) = 4.5; // (var_Na_Ca_Exchanger_Current__Ibar_NCX) [picoA_per_picoF]
        NV_Ith_S(this->mParameters, 14) = 0.98999999999999999; // (var_Na_K_Pump_Current__Ibar_NaK) [picoA_per_picoF]
    }

    Cellcarro_2011_endoFromCellMLCvodeOpt::~Cellcarro_2011_endoFromCellMLCvodeOpt()
    {
    }

    AbstractLookupTableCollection* Cellcarro_2011_endoFromCellMLCvodeOpt::GetLookupTableCollection()
    {
        return Cellcarro_2011_endoFromCellMLCvodeOpt_LookupTables::Instance();
    }
    
    double Cellcarro_2011_endoFromCellMLCvodeOpt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -84.10546
        double var_chaste_interface__Fast_Na_Current__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.002176608
        double var_chaste_interface__Fast_Na_Current__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.7126555
        double var_chaste_interface__Fast_Na_Current__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.7119893
        double var_chaste_interface__Rapidly_Activating_K_Current__x_Kr = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.01896559
        double var_chaste_interface__Slowly_Activating_K_Current__x_Ks = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.00355636
        double var_chaste_interface__Transient_Outward_K_Current__x_to_s = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.0003592503
        double var_chaste_interface__Transient_Outward_K_Current__y_to_s = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.8161309
        double var_chaste_interface__Transient_Outward_K_Current__x_to_f = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.0003592405
        double var_chaste_interface__Transient_Outward_K_Current__y_to_f = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.9999976
        double var_chaste_interface__L_Type_Calcium_Current__d = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 1.879996e-06
        double var_chaste_interface__L_Type_Calcium_Current__f = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.9789409
        double var_chaste_interface__L_Type_Calcium_Current__f_2 = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.9993986
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.02861794
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.0169833
        double var_chaste_interface__Sodium_Concentrations__Na_j = NV_Ith_S(rY, 30);
        // Units: millimolar; Initial value: 10.0211
        double var_chaste_interface__Sodium_Concentrations__Na_sl = NV_Ith_S(rY, 31);
        // Units: millimolar; Initial value: 10.01974
        double var_chaste_interface__Sodium_Concentrations__Na_i = NV_Ith_S(rY, 32);
        // Units: millimolar; Initial value: 10.01989
        double var_chaste_interface__Calcium_Concentrations__Ca_j = NV_Ith_S(rY, 35);
        // Units: millimolar; Initial value: 0.0002048633
        double var_chaste_interface__Calcium_Concentrations__Ca_sl = NV_Ith_S(rY, 36);
        // Units: millimolar; Initial value: 0.0001188246
        
        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        const double var_Nerst_Potentials__E_K = 26.712338705498265 * log(NV_Ith_S(mParameters, 3) / NV_Ith_S(mParameters, 1)); // millivolt
        const double var_Nerst_Potentials__E_Ks = 26.712338705498265 * log((0.018329999999999999 * NV_Ith_S(mParameters, 4) + NV_Ith_S(mParameters, 3)) / (0.018329999999999999 * var_chaste_interface__Sodium_Concentrations__Na_i + NV_Ith_S(mParameters, 1))); // millivolt
        const double var_Nerst_Potentials__E_Na_junc = 26.712338705498265 * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__Sodium_Concentrations__Na_j); // millivolt
        const double var_Nerst_Potentials__E_Na_sl = 26.712338705498265 * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__Sodium_Concentrations__Na_sl); // millivolt
        const double var_Na_Ca_Exchanger_Current__I_ncx_junc = 0.11 * (pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) * NV_Ith_S(mParameters, 2) * _lt_0_row[0] - pow(NV_Ith_S(mParameters, 4), 3) * var_chaste_interface__Calcium_Concentrations__Ca_j * _lt_0_row[1]) * NV_Ith_S(mParameters, 13) / ((_lt_0_row[2]) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2)) * (1.3 * pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) + pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) * NV_Ith_S(mParameters, 2) + pow(NV_Ith_S(mParameters, 4), 3) * var_chaste_interface__Calcium_Concentrations__Ca_j + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Calcium_Concentrations__Ca_j) * var_chaste_interface__Calcium_Concentrations__Ca_j + 0.0035899999999999999 * pow(NV_Ith_S(mParameters, 4), 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3)))); // picoA_per_picoF
        const double var_Na_Ca_Exchanger_Current__I_ncx_sl = 0.89000000000000001 * (pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) * NV_Ith_S(mParameters, 2) * _lt_0_row[0] - pow(NV_Ith_S(mParameters, 4), 3) * var_chaste_interface__Calcium_Concentrations__Ca_sl * _lt_0_row[1]) * NV_Ith_S(mParameters, 13) / ((_lt_0_row[2]) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 2)) * (1.3 * pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) + pow(NV_Ith_S(mParameters, 4), 3) * var_chaste_interface__Calcium_Concentrations__Ca_sl + pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) * NV_Ith_S(mParameters, 2) + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Calcium_Concentrations__Ca_sl) * var_chaste_interface__Calcium_Concentrations__Ca_sl + 0.0035899999999999999 * pow(NV_Ith_S(mParameters, 4), 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3)))); // picoA_per_picoF
        const double var_Na_K_Pump_Current__f_NaK = 1 / (1.0 + _lt_0_row[4] + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * NV_Ith_S(mParameters, 4))) * _lt_0_row[3]); // dimensionless
        const double var_Na_K_Pump_Current__I_NaK_junc = 0.11 * NV_Ith_S(mParameters, 14) * var_Na_K_Pump_Current__f_NaK * NV_Ith_S(mParameters, 3) / ((1.0 + 14641.0 / pow(var_chaste_interface__Sodium_Concentrations__Na_j, 4)) * (1.5 + NV_Ith_S(mParameters, 3))); // picoA_per_picoF
        const double var_Na_K_Pump_Current__I_NaK_sl = 0.89000000000000001 * NV_Ith_S(mParameters, 14) * var_Na_K_Pump_Current__f_NaK * NV_Ith_S(mParameters, 3) / ((1.0 + 14641.0 / pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 4)) * (1.5 + NV_Ith_S(mParameters, 3))); // picoA_per_picoF
        const double var_membrane__I_tot = 0.5535668961205934 + var_Na_Ca_Exchanger_Current__I_ncx_junc + var_Na_Ca_Exchanger_Current__I_ncx_sl + var_Na_K_Pump_Current__I_NaK_junc + var_Na_K_Pump_Current__I_NaK_sl + 0.010148299999999999 * var_chaste_interface__membrane__V - 6.567e-5 * var_Nerst_Potentials__E_Na_junc - 0.00053133 * var_Nerst_Potentials__E_Na_sl - 0.00080995817805876559 * log(NV_Ith_S(mParameters, 2) / var_chaste_interface__Calcium_Concentrations__Ca_j) - 0.0065532979861118307 * log(NV_Ith_S(mParameters, 2) / var_chaste_interface__Calcium_Concentrations__Ca_sl) + 0.002 * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) / (_lt_0_row[5]) + 0.048783569999999998 * (61.507432902288166 + var_chaste_interface__membrane__V) / (1.0 + 0.10000000000000001 / var_chaste_interface__Calcium_Concentrations__Ca_sl) + 0.0074029999999999999 * pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 1.6000000000000001) / (5.2281977629563632e-6 + pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 1.6000000000000001)) + 0.0060294299999999997 * (61.507432902288166 + var_chaste_interface__membrane__V) / (1.0 + 0.10000000000000001 / var_chaste_interface__Calcium_Concentrations__Ca_j) + 0.059896999999999999 * pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 1.6000000000000001) / (5.2281977629563632e-6 + pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 1.6000000000000001)) + pow(var_chaste_interface__Slowly_Activating_K_Current__x_Ks, 2) * (-var_Nerst_Potentials__E_Ks + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 11) + (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 8) * var_chaste_interface__Transient_Outward_K_Current__x_to_f * var_chaste_interface__Transient_Outward_K_Current__y_to_f + (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 12) * var_chaste_interface__Transient_Outward_K_Current__x_to_s * var_chaste_interface__Transient_Outward_K_Current__y_to_s + 0.11 * pow(var_chaste_interface__Fast_Na_Current__m, 3) * (-var_Nerst_Potentials__E_Na_junc + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 7) * var_chaste_interface__Fast_Na_Current__h * var_chaste_interface__Fast_Na_Current__j + 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 3)) * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 10) * var_chaste_interface__Rapidly_Activating_K_Current__x_Kr / (_lt_0_row[6]) + 0.89000000000000001 * pow(var_chaste_interface__Fast_Na_Current__m, 3) * (-var_Nerst_Potentials__E_Na_sl + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 7) * var_chaste_interface__Fast_Na_Current__h * var_chaste_interface__Fast_Na_Current__j + 1.7616910247448803 * sqrt(NV_Ith_S(mParameters, 3)) * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 9) / ((1.0 + exp(-6.0745197599999994 + 0.12164999999999999 * var_chaste_interface__membrane__V - 0.12164999999999999 * var_Nerst_Potentials__E_K)) * (4.0937999999999999 / (1.0 + exp(-6.0745197599999994 + 0.12164999999999999 * var_chaste_interface__membrane__V - 0.12164999999999999 * var_Nerst_Potentials__E_K)) + (15.7197 * exp(-0.21949596900000001 + 0.067390000000000005 * var_chaste_interface__membrane__V - 0.067390000000000005 * var_Nerst_Potentials__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_Nerst_Potentials__E_K)) / (1.0 + exp(-2.3135610949999998 + 0.16284999999999999 * var_Nerst_Potentials__E_K - 0.16284999999999999 * var_chaste_interface__membrane__V)))) + 0.64648681440406586 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_j * _lt_0_row[7]) * NV_Ith_S(mParameters, 5) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 * var_chaste_interface__membrane__V / (_lt_0_row[8]) + 0.071831868267118404 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_sl * _lt_0_row[7]) * NV_Ith_S(mParameters, 5) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 * var_chaste_interface__membrane__V / (_lt_0_row[8]) + 0.00019748616671718709 * (-NV_Ith_S(mParameters, 3) + NV_Ith_S(mParameters, 1) * _lt_0_row[9]) * (1.0 - 0.099999999999999978 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl - 0.90000000000000002 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * NV_Ith_S(mParameters, 5) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 * var_chaste_interface__membrane__V / (_lt_0_row[10]) + 1.0971453706510391e-6 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_sl * _lt_0_row[9]) * NV_Ith_S(mParameters, 5) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 * var_chaste_interface__membrane__V / (_lt_0_row[10]) + 9.8743083358593546e-6 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_j * _lt_0_row[9]) * NV_Ith_S(mParameters, 5) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 * var_chaste_interface__membrane__V / (_lt_0_row[10]); // picoA_per_picoF
        const double var_chaste_interface__i_ionic = HeartConfig::Instance()->GetCapacitance() * var_membrane__I_tot; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellcarro_2011_endoFromCellMLCvodeOpt::EvaluateYDerivatives(double var_chaste_interface__environment__t, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -84.10546
        double var_chaste_interface__Calcium_Concentrations__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 9.719632e-05
        double var_chaste_interface__Fast_Na_Current__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.002176608
        double var_chaste_interface__Fast_Na_Current__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.7126555
        double var_chaste_interface__Fast_Na_Current__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.7119893
        double var_chaste_interface__Rapidly_Activating_K_Current__x_Kr = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.01896559
        double var_chaste_interface__Slowly_Activating_K_Current__x_Ks = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.00355636
        double var_chaste_interface__Transient_Outward_K_Current__x_to_s = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.0003592503
        double var_chaste_interface__Transient_Outward_K_Current__y_to_s = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.8161309
        double var_chaste_interface__Transient_Outward_K_Current__x_to_f = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.0003592405
        double var_chaste_interface__Transient_Outward_K_Current__y_to_f = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.9999976
        double var_chaste_interface__L_Type_Calcium_Current__d = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 1.879996e-06
        double var_chaste_interface__L_Type_Calcium_Current__f = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.9789409
        double var_chaste_interface__L_Type_Calcium_Current__f_2 = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.9993986
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.02861794
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.0169833
        double var_chaste_interface__SR_Fluxes__Ry_Rr = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.8888214
        double var_chaste_interface__SR_Fluxes__Ry_Ro = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 1.149876e-06
        double var_chaste_interface__SR_Fluxes__Ry_Ri = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 1.43831e-07
        double var_chaste_interface__Cytosolic_Ca_Buffers__TnC_l = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 0.009811535
        double var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_c = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 0.1225802
        double var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_m = NV_Ith_S(rY, 21);
        // Units: millimolar; Initial value: 0.008128604
        double var_chaste_interface__Cytosolic_Ca_Buffers__CaM = NV_Ith_S(rY, 22);
        // Units: millimolar; Initial value: 0.0003288063
        double var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 0.002522168
        double var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 0.1369514
        double var_chaste_interface__Cytosolic_Ca_Buffers__SRB = NV_Ith_S(rY, 25);
        // Units: millimolar; Initial value: 0.00238683
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j = NV_Ith_S(rY, 26);
        // Units: millimolar; Initial value: 0.008606485
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl = NV_Ith_S(rY, 27);
        // Units: millimolar; Initial value: 0.01101044
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j = NV_Ith_S(rY, 28);
        // Units: millimolar; Initial value: 0.08078504
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl = NV_Ith_S(rY, 29);
        // Units: millimolar; Initial value: 0.1238366
        double var_chaste_interface__Sodium_Concentrations__Na_j = NV_Ith_S(rY, 30);
        // Units: millimolar; Initial value: 10.0211
        double var_chaste_interface__Sodium_Concentrations__Na_sl = NV_Ith_S(rY, 31);
        // Units: millimolar; Initial value: 10.01974
        double var_chaste_interface__Sodium_Concentrations__Na_i = NV_Ith_S(rY, 32);
        // Units: millimolar; Initial value: 10.01989
        double var_chaste_interface__Sodium_Concentrations__Na_B_j = NV_Ith_S(rY, 33);
        // Units: millimolar; Initial value: 3.785209
        double var_chaste_interface__Sodium_Concentrations__Na_B_sl = NV_Ith_S(rY, 34);
        // Units: millimolar; Initial value: 0.8259271
        double var_chaste_interface__Calcium_Concentrations__Ca_j = NV_Ith_S(rY, 35);
        // Units: millimolar; Initial value: 0.0002048633
        double var_chaste_interface__Calcium_Concentrations__Ca_sl = NV_Ith_S(rY, 36);
        // Units: millimolar; Initial value: 0.0001188246
        double var_chaste_interface__Calcium_Concentrations__Ca_SR = NV_Ith_S(rY, 37);
        // Units: millimolar; Initial value: 0.6138856
        double var_chaste_interface__Calcium_Concentrations__Csqn_b = NV_Ith_S(rY, 38);
        // Units: millimolar; Initial value: 1.262853

        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        double d_dt_chaste_interface_var_membrane__V;
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__CaM = -0.23799999999999999 * var_chaste_interface__Cytosolic_Ca_Buffers__CaM + 34.0 * (0.024 - var_chaste_interface__Cytosolic_Ca_Buffers__CaM) * var_chaste_interface__Calcium_Concentrations__Ca_i; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_c = -0.00046000000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c + 13.800000000000001 * (0.14000000000000001 - var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c - var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m) * var_chaste_interface__Calcium_Concentrations__Ca_i; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__SRB = -0.059999999999999998 * var_chaste_interface__Cytosolic_Ca_Buffers__SRB + 100.0 * (0.017100000000000001 - var_chaste_interface__Cytosolic_Ca_Buffers__SRB) * var_chaste_interface__Calcium_Concentrations__Ca_i; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_h_c = -3.1999999999999999e-5 * var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_c + 2.3700000000000001 * (0.14000000000000001 - var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_c - var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_m) * var_chaste_interface__Calcium_Concentrations__Ca_i; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_l = -0.019599999999999999 * var_chaste_interface__Cytosolic_Ca_Buffers__TnC_l + 32.700000000000003 * (0.070000000000000007 - var_chaste_interface__Cytosolic_Ca_Buffers__TnC_l) * var_chaste_interface__Calcium_Concentrations__Ca_i; // millimolar / millisecond
        const double d_dt_chaste_interface_var_L_Type_Calcium_Current__f_Ca_B_j = -0.011900000000000001 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j + 1.7 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * var_chaste_interface__Calcium_Concentrations__Ca_j; // 1 / millisecond
        const double d_dt_chaste_interface_var_L_Type_Calcium_Current__f_Ca_B_sl = -0.011900000000000001 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl + 1.7 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * var_chaste_interface__Calcium_Concentrations__Ca_sl; // 1 / millisecond
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_m = 0.0021979999999999999 - 0.015699999999999999 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c - 0.015757 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_h_m = 0.00042000000000000007 - 0.0030000000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_c - 0.0063300000000000006 * var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_m; // millimolar / millisecond
        const double var_SR_Fluxes__J_SR_leak = 5.3480000000000003e-6 * var_chaste_interface__Calcium_Concentrations__Ca_SR - 5.3480000000000003e-6 * var_chaste_interface__Calcium_Concentrations__Ca_j; // milliM_per_millis
        const double var_SR_Fluxes__RI = 1.0 - var_chaste_interface__SR_Fluxes__Ry_Ri - var_chaste_interface__SR_Fluxes__Ry_Ro - var_chaste_interface__SR_Fluxes__Ry_Rr; // dimensionless
        const double var_SR_Fluxes__J_ser_Ca = (2814485.1633595936 * pow(var_chaste_interface__Calcium_Concentrations__Ca_i, 1.7869999999999999) - 0.38742512113256738 * pow(var_chaste_interface__Calcium_Concentrations__Ca_SR, 1.7869999999999999)) * NV_Ith_S(mParameters, 0) / (1.0 + 0.38742512113256738 * pow(var_chaste_interface__Calcium_Concentrations__Ca_SR, 1.7869999999999999) + 2814485.1633595936 * pow(var_chaste_interface__Calcium_Concentrations__Ca_i, 1.7869999999999999)); // milliM_per_millis
        const double var_SR_Fluxes__k_Ca_SR = 15.0 - 14.0 / (1.0 + 0.13584112963311223 * pow((1 / var_chaste_interface__Calcium_Concentrations__Ca_SR), 2.5)); // dimensionless
        const double var_SR_Fluxes__ki_SR_Ca = 0.5 * var_SR_Fluxes__k_Ca_SR; // per_milliM_per_millis
        const double var_SR_Fluxes__ko_SR_Ca = 10.0 / var_SR_Fluxes__k_Ca_SR; // per_milliM2_per_millis
        const double d_dt_chaste_interface_var_SR_Fluxes__Ry_Ri = -0.065000000000000002 * var_chaste_interface__SR_Fluxes__Ry_Ri + pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2) * var_SR_Fluxes__RI * var_SR_Fluxes__ko_SR_Ca + var_chaste_interface__Calcium_Concentrations__Ca_j * var_chaste_interface__SR_Fluxes__Ry_Ro * var_SR_Fluxes__ki_SR_Ca; // 1 / millisecond
        const double d_dt_chaste_interface_var_SR_Fluxes__Ry_Ro = 0.0050000000000000001 * var_chaste_interface__SR_Fluxes__Ry_Ri - 0.059999999999999998 * var_chaste_interface__SR_Fluxes__Ry_Ro + pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2) * var_chaste_interface__SR_Fluxes__Ry_Rr * var_SR_Fluxes__ko_SR_Ca - var_chaste_interface__Calcium_Concentrations__Ca_j * var_chaste_interface__SR_Fluxes__Ry_Ro * var_SR_Fluxes__ki_SR_Ca; // 1 / millisecond
        const double d_dt_chaste_interface_var_SR_Fluxes__Ry_Rr = 0.059999999999999998 * var_chaste_interface__SR_Fluxes__Ry_Ro + 0.0050000000000000001 * var_SR_Fluxes__RI - pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2) * var_chaste_interface__SR_Fluxes__Ry_Rr * var_SR_Fluxes__ko_SR_Ca - var_chaste_interface__Calcium_Concentrations__Ca_j * var_chaste_interface__SR_Fluxes__Ry_Rr * var_SR_Fluxes__ki_SR_Ca; // 1 / millisecond
        const double var_SR_Fluxes__J_SR_Ca_rel = 25.0 * (-var_chaste_interface__Calcium_Concentrations__Ca_j + var_chaste_interface__Calcium_Concentrations__Ca_SR) * var_chaste_interface__SR_Fluxes__Ry_Ro; // milliM_per_millis
        const double d_dt_chaste_interface_var_Sodium_Concentrations__Na_B_j = -0.001 * var_chaste_interface__Sodium_Concentrations__Na_B_j + 0.0001 * (7.5609999999999999 - var_chaste_interface__Sodium_Concentrations__Na_B_j) * var_chaste_interface__Sodium_Concentrations__Na_j; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Sodium_Concentrations__Na_B_sl = -0.001 * var_chaste_interface__Sodium_Concentrations__Na_B_sl + 0.0001 * (1.6499999999999999 - var_chaste_interface__Sodium_Concentrations__Na_B_sl) * var_chaste_interface__Sodium_Concentrations__Na_sl; // millimolar / millisecond
        const double var_Nerst_Potentials__E_Na_junc = 26.712338705498265 * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__Sodium_Concentrations__Na_j); // millivolt
        const double var_Nerst_Potentials__E_Na_sl = 26.712338705498265 * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__Sodium_Concentrations__Na_sl); // millivolt
        const double d_dt_chaste_interface_var_Fast_Na_Current__h = (-var_chaste_interface__Fast_Na_Current__h + _lt_0_row[11]) * (_lt_0_row[12]); // 1 / millisecond
        const double d_dt_chaste_interface_var_Fast_Na_Current__j = (-var_chaste_interface__Fast_Na_Current__j + _lt_0_row[11]) * (_lt_0_row[13]); // 1 / millisecond
        const double d_dt_chaste_interface_var_Fast_Na_Current__m = (-var_chaste_interface__Fast_Na_Current__m + _lt_0_row[14]) / (_lt_0_row[15]); // 1 / millisecond
        const double d_dt_chaste_interface_var_L_Type_Calcium_Current__d = (-var_chaste_interface__L_Type_Calcium_Current__d + _lt_0_row[16]) / (_lt_0_row[17]); // 1 / millisecond
        const double d_dt_chaste_interface_var_L_Type_Calcium_Current__f = (-var_chaste_interface__L_Type_Calcium_Current__f + _lt_0_row[18]) / (_lt_0_row[19]); // 1 / millisecond
        const double d_dt_chaste_interface_var_L_Type_Calcium_Current__f_2 = (0.33000000000000002 - var_chaste_interface__L_Type_Calcium_Current__f_2 + _lt_0_row[20]) / (_lt_0_row[21]); // 1 / millisecond
        const double var_Na_Ca_Exchanger_Current__I_ncx_junc = 0.11 * (pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) * NV_Ith_S(mParameters, 2) * _lt_0_row[0] - pow(NV_Ith_S(mParameters, 4), 3) * var_chaste_interface__Calcium_Concentrations__Ca_j * _lt_0_row[1]) * NV_Ith_S(mParameters, 13) / ((_lt_0_row[2]) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2)) * (1.3 * pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) + pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) * NV_Ith_S(mParameters, 2) + pow(NV_Ith_S(mParameters, 4), 3) * var_chaste_interface__Calcium_Concentrations__Ca_j + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Calcium_Concentrations__Ca_j) * var_chaste_interface__Calcium_Concentrations__Ca_j + 0.0035899999999999999 * pow(NV_Ith_S(mParameters, 4), 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3)))); // picoA_per_picoF
        const double var_Calcium_Concentrations__I_Ca_tot_junc = 6.0643000000000002e-5 * var_chaste_interface__membrane__V - 2.0 * var_Na_Ca_Exchanger_Current__I_ncx_junc - 0.00080995817805876559 * log(NV_Ith_S(mParameters, 2) / var_chaste_interface__Calcium_Concentrations__Ca_j) + 0.0074029999999999999 * pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 1.6000000000000001) / (5.2281977629563632e-6 + pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 1.6000000000000001)) + 0.64648681440406586 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_j * _lt_0_row[7]) * NV_Ith_S(mParameters, 5) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 * var_chaste_interface__membrane__V / (_lt_0_row[8]); // picoA_per_picoF
        const double var_Na_Ca_Exchanger_Current__I_ncx_sl = 0.89000000000000001 * (pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) * NV_Ith_S(mParameters, 2) * _lt_0_row[0] - pow(NV_Ith_S(mParameters, 4), 3) * var_chaste_interface__Calcium_Concentrations__Ca_sl * _lt_0_row[1]) * NV_Ith_S(mParameters, 13) / ((_lt_0_row[2]) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 2)) * (1.3 * pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) + pow(NV_Ith_S(mParameters, 4), 3) * var_chaste_interface__Calcium_Concentrations__Ca_sl + pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) * NV_Ith_S(mParameters, 2) + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Calcium_Concentrations__Ca_sl) * var_chaste_interface__Calcium_Concentrations__Ca_sl + 0.0035899999999999999 * pow(NV_Ith_S(mParameters, 4), 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3)))); // picoA_per_picoF
        const double var_Calcium_Concentrations__I_Ca_tot_sl = 0.00049065700000000003 * var_chaste_interface__membrane__V - 2.0 * var_Na_Ca_Exchanger_Current__I_ncx_sl - 0.0065532979861118307 * log(NV_Ith_S(mParameters, 2) / var_chaste_interface__Calcium_Concentrations__Ca_sl) + 0.059896999999999999 * pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 1.6000000000000001) / (5.2281977629563632e-6 + pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 1.6000000000000001)) + 0.071831868267118404 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_sl * _lt_0_row[7]) * NV_Ith_S(mParameters, 5) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 * var_chaste_interface__membrane__V / (_lt_0_row[8]); // picoA_per_picoF
        const double var_Na_K_Pump_Current__f_NaK = 1 / (1.0 + _lt_0_row[4] + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * NV_Ith_S(mParameters, 4))) * _lt_0_row[3]); // dimensionless
        const double var_Na_K_Pump_Current__I_NaK_junc = 0.11 * NV_Ith_S(mParameters, 14) * var_Na_K_Pump_Current__f_NaK * NV_Ith_S(mParameters, 3) / ((1.0 + 14641.0 / pow(var_chaste_interface__Sodium_Concentrations__Na_j, 4)) * (1.5 + NV_Ith_S(mParameters, 3))); // picoA_per_picoF
        const double var_Na_K_Pump_Current__I_NaK_sl = 0.89000000000000001 * NV_Ith_S(mParameters, 14) * var_Na_K_Pump_Current__f_NaK * NV_Ith_S(mParameters, 3) / ((1.0 + 14641.0 / pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 4)) * (1.5 + NV_Ith_S(mParameters, 3))); // picoA_per_picoF
        const double d_dt_chaste_interface_var_Rapidly_Activating_K_Current__x_Kr = (-var_chaste_interface__Rapidly_Activating_K_Current__x_Kr + _lt_0_row[22]) / (_lt_0_row[23]); // 1 / millisecond
        const double d_dt_chaste_interface_var_Slowly_Activating_K_Current__x_Ks = (_lt_0_row[25]) * (-var_chaste_interface__Slowly_Activating_K_Current__x_Ks + _lt_0_row[24]); // 1 / millisecond
        const double var_Sodium_Concentrations__I_Na_tot_junc = 3.0 * var_Na_Ca_Exchanger_Current__I_ncx_junc + 3.0 * var_Na_K_Pump_Current__I_NaK_junc + 6.567e-5 * var_chaste_interface__membrane__V - 6.567e-5 * var_Nerst_Potentials__E_Na_junc + 0.11 * pow(var_chaste_interface__Fast_Na_Current__m, 3) * (-var_Nerst_Potentials__E_Na_junc + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 7) * var_chaste_interface__Fast_Na_Current__h * var_chaste_interface__Fast_Na_Current__j + 9.8743083358593546e-6 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_j * _lt_0_row[9]) * NV_Ith_S(mParameters, 5) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 * var_chaste_interface__membrane__V / (_lt_0_row[10]); // picoA_per_picoF
        const double var_Sodium_Concentrations__I_Na_tot_sl = 3.0 * var_Na_Ca_Exchanger_Current__I_ncx_sl + 3.0 * var_Na_K_Pump_Current__I_NaK_sl + 0.00053133 * var_chaste_interface__membrane__V - 0.00053133 * var_Nerst_Potentials__E_Na_sl + 0.89000000000000001 * pow(var_chaste_interface__Fast_Na_Current__m, 3) * (-var_Nerst_Potentials__E_Na_sl + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 7) * var_chaste_interface__Fast_Na_Current__h * var_chaste_interface__Fast_Na_Current__j + 1.0971453706510391e-6 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_sl * _lt_0_row[9]) * NV_Ith_S(mParameters, 5) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 * var_chaste_interface__membrane__V / (_lt_0_row[10]); // picoA_per_picoF
        const double var_Transient_Outward_K_Current__x_to_ss = _lt_0_row[26]; // dimensionless
        const double d_dt_chaste_interface_var_Transient_Outward_K_Current__x_to_f = (-var_chaste_interface__Transient_Outward_K_Current__x_to_f + var_Transient_Outward_K_Current__x_to_ss) / (_lt_0_row[27]); // 1 / millisecond
        const double d_dt_chaste_interface_var_Transient_Outward_K_Current__x_to_s = (-var_chaste_interface__Transient_Outward_K_Current__x_to_s + var_Transient_Outward_K_Current__x_to_ss) / (_lt_0_row[28]); // 1 / millisecond
        const double var_Transient_Outward_K_Current__y_to_ss = _lt_0_row[29]; // dimensionless
        const double d_dt_chaste_interface_var_Transient_Outward_K_Current__y_to_f = (-var_chaste_interface__Transient_Outward_K_Current__y_to_f + var_Transient_Outward_K_Current__y_to_ss) / (_lt_0_row[30]); // 1 / millisecond
        const double d_dt_chaste_interface_var_Transient_Outward_K_Current__y_to_s = (-var_chaste_interface__Transient_Outward_K_Current__y_to_s + var_Transient_Outward_K_Current__y_to_ss) / (_lt_0_row[31]); // 1 / millisecond
        const double var_membrane__V_cell = 1.050625e-11 * M_PI; // liter
        const double var_membrane__V_junc = 0.00053899999999999998 * var_membrane__V_cell; // liter
        const double d_dt_chaste_interface_var_Sodium_Concentrations__Na_j = -d_dt_chaste_interface_var_Sodium_Concentrations__Na_B_j + 1.8312999999999999e-14 * (-var_chaste_interface__Sodium_Concentrations__Na_j + var_chaste_interface__Sodium_Concentrations__Na_sl) / var_membrane__V_junc - 1.0364305332435094e-5 * var_Sodium_Concentrations__I_Na_tot_junc * NV_Ith_S(mParameters, 6) / var_membrane__V_junc; // millimolar / millisecond
        const double var_membrane__V_myo = 0.65000000000000002 * var_membrane__V_cell; // liter
        const double d_dt_chaste_interface_var_Sodium_Concentrations__Na_i = 1.6385999999999999e-12 * (-var_chaste_interface__Sodium_Concentrations__Na_i + var_chaste_interface__Sodium_Concentrations__Na_sl) / var_membrane__V_myo; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_j = -0.029999999999999999 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j + 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j + 0.000165 * var_membrane__V_myo / var_membrane__V_junc) * var_chaste_interface__Calcium_Concentrations__Ca_j; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_j = -1.3 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j + 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j + 0.00046000000000000001 * var_membrane__V_myo / var_membrane__V_junc) * var_chaste_interface__Calcium_Concentrations__Ca_j; // millimolar / millisecond
        const double var_membrane__V_sl = 0.02 * var_membrane__V_cell; // liter
        const double d_dt_chaste_interface_var_Sodium_Concentrations__Na_sl = -d_dt_chaste_interface_var_Sodium_Concentrations__Na_B_sl + 1.6385999999999999e-12 * (-var_chaste_interface__Sodium_Concentrations__Na_sl + var_chaste_interface__Sodium_Concentrations__Na_i) / var_membrane__V_sl + 1.8312999999999999e-14 * (-var_chaste_interface__Sodium_Concentrations__Na_sl + var_chaste_interface__Sodium_Concentrations__Na_j) / var_membrane__V_sl - 1.0364305332435094e-5 * var_Sodium_Concentrations__I_Na_tot_sl * NV_Ith_S(mParameters, 6) / var_membrane__V_sl; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_sl = -0.029999999999999999 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl + 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl + 0.0134 * var_membrane__V_myo / var_membrane__V_sl) * var_chaste_interface__Calcium_Concentrations__Ca_sl; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_sl = -1.3 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl + 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl + 0.037400000000000003 * var_membrane__V_myo / var_membrane__V_sl) * var_chaste_interface__Calcium_Concentrations__Ca_sl; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Calcium_Concentrations__Ca_sl = -d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_sl - d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_sl + 8.2413000000000004e-13 * (-var_chaste_interface__Calcium_Concentrations__Ca_sl + var_chaste_interface__Calcium_Concentrations__Ca_j) / var_membrane__V_sl + 3.7243000000000002e-12 * (-var_chaste_interface__Calcium_Concentrations__Ca_sl + var_chaste_interface__Calcium_Concentrations__Ca_i) / var_membrane__V_sl - 5.182152666217547e-6 * var_Calcium_Concentrations__I_Ca_tot_sl * NV_Ith_S(mParameters, 6) / var_membrane__V_sl; // millimolar / millisecond
        const double var_membrane__V_sr = 0.035000000000000003 * var_membrane__V_cell; // liter
        const double d_dt_chaste_interface_var_Calcium_Concentrations__Ca_i = -d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__CaM - d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_c - d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_m - d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__SRB - d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_h_c - d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_h_m - d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_l + 3.7243000000000002e-12 * (-var_chaste_interface__Calcium_Concentrations__Ca_i + var_chaste_interface__Calcium_Concentrations__Ca_sl) / var_membrane__V_myo - var_SR_Fluxes__J_ser_Ca * var_membrane__V_sr / var_membrane__V_myo; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Calcium_Concentrations__Ca_j = -d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_j - d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_j + 8.2413000000000004e-13 * (-var_chaste_interface__Calcium_Concentrations__Ca_j + var_chaste_interface__Calcium_Concentrations__Ca_sl) / var_membrane__V_junc + var_SR_Fluxes__J_SR_Ca_rel * var_membrane__V_sr / var_membrane__V_junc + var_SR_Fluxes__J_SR_leak * var_membrane__V_myo / var_membrane__V_junc - 5.182152666217547e-6 * var_Calcium_Concentrations__I_Ca_tot_junc * NV_Ith_S(mParameters, 6) / var_membrane__V_junc; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Calcium_Concentrations__Csqn_b = -65.0 * var_chaste_interface__Calcium_Concentrations__Csqn_b + 100.0 * (-var_chaste_interface__Calcium_Concentrations__Csqn_b + 0.14000000000000001 * var_membrane__V_myo / var_membrane__V_sr) * var_chaste_interface__Calcium_Concentrations__Ca_SR; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Calcium_Concentrations__Ca_SR = -d_dt_chaste_interface_var_Calcium_Concentrations__Csqn_b - var_SR_Fluxes__J_SR_Ca_rel - var_SR_Fluxes__J_SR_leak * var_membrane__V_myo / var_membrane__V_sr + var_SR_Fluxes__J_ser_Ca; // millimolar / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_membrane__V = 0.0;
        }
        else
        {
            const double var_Nerst_Potentials__E_K = 26.712338705498265 * log(NV_Ith_S(mParameters, 3) / NV_Ith_S(mParameters, 1)); // millivolt
            const double var_Nerst_Potentials__E_Ks = 26.712338705498265 * log((0.018329999999999999 * NV_Ith_S(mParameters, 4) + NV_Ith_S(mParameters, 3)) / (0.018329999999999999 * var_chaste_interface__Sodium_Concentrations__Na_i + NV_Ith_S(mParameters, 1))); // millivolt
            d_dt_chaste_interface_var_membrane__V = -0.5535668961205934 - var_Calcium_Concentrations__I_Ca_tot_junc - var_Calcium_Concentrations__I_Ca_tot_sl - var_Sodium_Concentrations__I_Na_tot_junc - var_Sodium_Concentrations__I_Na_tot_sl + 2.0 * var_Na_K_Pump_Current__I_NaK_junc + 2.0 * var_Na_K_Pump_Current__I_NaK_sl - 0.0089999999999999993 * var_chaste_interface__membrane__V - GetIntracellularAreaStimulus(var_chaste_interface__environment__t) / HeartConfig::Instance()->GetCapacitance() - 0.002 * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) / (_lt_0_row[5]) - 0.048783569999999998 * (61.507432902288166 + var_chaste_interface__membrane__V) / (1.0 + 0.10000000000000001 / var_chaste_interface__Calcium_Concentrations__Ca_sl) - 0.0060294299999999997 * (61.507432902288166 + var_chaste_interface__membrane__V) / (1.0 + 0.10000000000000001 / var_chaste_interface__Calcium_Concentrations__Ca_j) - pow(var_chaste_interface__Slowly_Activating_K_Current__x_Ks, 2) * (-var_Nerst_Potentials__E_Ks + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 11) - (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 8) * var_chaste_interface__Transient_Outward_K_Current__x_to_f * var_chaste_interface__Transient_Outward_K_Current__y_to_f - (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 12) * var_chaste_interface__Transient_Outward_K_Current__x_to_s * var_chaste_interface__Transient_Outward_K_Current__y_to_s - 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 3)) * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 10) * var_chaste_interface__Rapidly_Activating_K_Current__x_Kr / (_lt_0_row[6]) - 1.7616910247448803 * sqrt(NV_Ith_S(mParameters, 3)) * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 9) / ((1.0 + exp(-6.0745197599999994 + 0.12164999999999999 * var_chaste_interface__membrane__V - 0.12164999999999999 * var_Nerst_Potentials__E_K)) * (4.0937999999999999 / (1.0 + exp(-6.0745197599999994 + 0.12164999999999999 * var_chaste_interface__membrane__V - 0.12164999999999999 * var_Nerst_Potentials__E_K)) + (15.7197 * exp(-0.21949596900000001 + 0.067390000000000005 * var_chaste_interface__membrane__V - 0.067390000000000005 * var_Nerst_Potentials__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_Nerst_Potentials__E_K)) / (1.0 + exp(-2.3135610949999998 + 0.16284999999999999 * var_Nerst_Potentials__E_K - 0.16284999999999999 * var_chaste_interface__membrane__V)))) - 0.00019748616671718709 * (-NV_Ith_S(mParameters, 3) + NV_Ith_S(mParameters, 1) * _lt_0_row[9]) * (1.0 - 0.099999999999999978 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl - 0.90000000000000002 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * NV_Ith_S(mParameters, 5) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 * var_chaste_interface__membrane__V / (_lt_0_row[10]); // millivolt / millisecond
        }
        
        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_membrane__V;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_Calcium_Concentrations__Ca_i;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_Fast_Na_Current__m;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_Fast_Na_Current__h;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_Fast_Na_Current__j;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_Rapidly_Activating_K_Current__x_Kr;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_Slowly_Activating_K_Current__x_Ks;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_Transient_Outward_K_Current__x_to_s;
        NV_Ith_S(rDY,8) = d_dt_chaste_interface_var_Transient_Outward_K_Current__y_to_s;
        NV_Ith_S(rDY,9) = d_dt_chaste_interface_var_Transient_Outward_K_Current__x_to_f;
        NV_Ith_S(rDY,10) = d_dt_chaste_interface_var_Transient_Outward_K_Current__y_to_f;
        NV_Ith_S(rDY,11) = d_dt_chaste_interface_var_L_Type_Calcium_Current__d;
        NV_Ith_S(rDY,12) = d_dt_chaste_interface_var_L_Type_Calcium_Current__f;
        NV_Ith_S(rDY,13) = d_dt_chaste_interface_var_L_Type_Calcium_Current__f_2;
        NV_Ith_S(rDY,14) = d_dt_chaste_interface_var_L_Type_Calcium_Current__f_Ca_B_j;
        NV_Ith_S(rDY,15) = d_dt_chaste_interface_var_L_Type_Calcium_Current__f_Ca_B_sl;
        NV_Ith_S(rDY,16) = d_dt_chaste_interface_var_SR_Fluxes__Ry_Rr;
        NV_Ith_S(rDY,17) = d_dt_chaste_interface_var_SR_Fluxes__Ry_Ro;
        NV_Ith_S(rDY,18) = d_dt_chaste_interface_var_SR_Fluxes__Ry_Ri;
        NV_Ith_S(rDY,19) = d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_l;
        NV_Ith_S(rDY,20) = d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_h_c;
        NV_Ith_S(rDY,21) = d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_h_m;
        NV_Ith_S(rDY,22) = d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__CaM;
        NV_Ith_S(rDY,23) = d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_c;
        NV_Ith_S(rDY,24) = d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_m;
        NV_Ith_S(rDY,25) = d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__SRB;
        NV_Ith_S(rDY,26) = d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_j;
        NV_Ith_S(rDY,27) = d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_sl;
        NV_Ith_S(rDY,28) = d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_j;
        NV_Ith_S(rDY,29) = d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_sl;
        NV_Ith_S(rDY,30) = d_dt_chaste_interface_var_Sodium_Concentrations__Na_j;
        NV_Ith_S(rDY,31) = d_dt_chaste_interface_var_Sodium_Concentrations__Na_sl;
        NV_Ith_S(rDY,32) = d_dt_chaste_interface_var_Sodium_Concentrations__Na_i;
        NV_Ith_S(rDY,33) = d_dt_chaste_interface_var_Sodium_Concentrations__Na_B_j;
        NV_Ith_S(rDY,34) = d_dt_chaste_interface_var_Sodium_Concentrations__Na_B_sl;
        NV_Ith_S(rDY,35) = d_dt_chaste_interface_var_Calcium_Concentrations__Ca_j;
        NV_Ith_S(rDY,36) = d_dt_chaste_interface_var_Calcium_Concentrations__Ca_sl;
        NV_Ith_S(rDY,37) = d_dt_chaste_interface_var_Calcium_Concentrations__Ca_SR;
        NV_Ith_S(rDY,38) = d_dt_chaste_interface_var_Calcium_Concentrations__Csqn_b;
    }

    N_Vector Cellcarro_2011_endoFromCellMLCvodeOpt::ComputeDerivedQuantities(double var_chaste_interface__environment__t, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -84.10546
        double var_chaste_interface__Fast_Na_Current__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.002176608
        double var_chaste_interface__Fast_Na_Current__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.7126555
        double var_chaste_interface__Fast_Na_Current__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.7119893
        double var_chaste_interface__Rapidly_Activating_K_Current__x_Kr = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.01896559
        double var_chaste_interface__Slowly_Activating_K_Current__x_Ks = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.00355636
        double var_chaste_interface__Transient_Outward_K_Current__x_to_s = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.0003592503
        double var_chaste_interface__Transient_Outward_K_Current__y_to_s = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.8161309
        double var_chaste_interface__Transient_Outward_K_Current__x_to_f = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.0003592405
        double var_chaste_interface__Transient_Outward_K_Current__y_to_f = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.9999976
        double var_chaste_interface__L_Type_Calcium_Current__d = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 1.879996e-06
        double var_chaste_interface__L_Type_Calcium_Current__f = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.9789409
        double var_chaste_interface__L_Type_Calcium_Current__f_2 = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.9993986
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.02861794
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.0169833
        double var_chaste_interface__Sodium_Concentrations__Na_j = NV_Ith_S(rY, 30);
        // Units: millimolar; Initial value: 10.0211
        double var_chaste_interface__Sodium_Concentrations__Na_sl = NV_Ith_S(rY, 31);
        // Units: millimolar; Initial value: 10.01974
        double var_chaste_interface__Sodium_Concentrations__Na_i = NV_Ith_S(rY, 32);
        // Units: millimolar; Initial value: 10.01989
        double var_chaste_interface__Calcium_Concentrations__Ca_j = NV_Ith_S(rY, 35);
        // Units: millimolar; Initial value: 0.0002048633
        double var_chaste_interface__Calcium_Concentrations__Ca_sl = NV_Ith_S(rY, 36);
        // Units: millimolar; Initial value: 0.0001188246
        
        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_endoFromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_endoFromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_L_Type_Calcium_Current__p_Ca = 0.00019887; // litre_per_farad_millisecond
        const double var_L_Type_Calcium_Current__p_K = 5.4674999999999998e-8; // litre_per_farad_millisecond
        const double var_L_Type_Calcium_Current__p_Na = 3.0374999999999999e-9; // litre_per_farad_millisecond
        const double var_Na_K_Pump_Current__Km_Ko = 1.5; // millimolar
        const double var_Na_K_Pump_Current__Km_Naip = 11.0; // millimolar
        const double var_Nerst_Potentials__p_Na_K = 0.018329999999999999; // dimensionless
        const double var_Na_K_Pump_Current__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * NV_Ith_S(mParameters, 4)); // dimensionless
        const double var_membrane__C_mem_converted = 1000000.0 * NV_Ith_S(mParameters, 6); // uF
        const double var_membrane__F_junc = 0.11; // dimensionless
        const double var_membrane__F_junc_Ca_L = 0.90000000000000002; // dimensionless
        const double var_membrane__F_sl = 1.0 - var_membrane__F_junc; // dimensionless
        const double var_membrane__F_sl_Ca_L = 1.0 - var_membrane__F_junc_Ca_L; // dimensionless
        const double var_membrane__Frdy = 96485.0; // coulomb_per_mole
        const double var_membrane__I_Stim_converted = -GetIntracellularAreaStimulus(var_chaste_interface__environment__t); // uA_per_cm2
        const double var_membrane__R = 8314.0; // joule_per_kmole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_membrane__FoRT = var_membrane__Frdy / (var_membrane__R * var_membrane__T); // per_milliV
        const double var_Nerst_Potentials__E_K = log(NV_Ith_S(mParameters, 3) / NV_Ith_S(mParameters, 1)) / var_membrane__FoRT; // millivolt
        const double var_Nerst_Potentials__E_Ks = log((var_Nerst_Potentials__p_Na_K * NV_Ith_S(mParameters, 4) + NV_Ith_S(mParameters, 3)) / (var_Nerst_Potentials__p_Na_K * var_chaste_interface__Sodium_Concentrations__Na_i + NV_Ith_S(mParameters, 1))) / var_membrane__FoRT; // millivolt
        const double var_Nerst_Potentials__E_Na_junc = log(NV_Ith_S(mParameters, 4) / var_chaste_interface__Sodium_Concentrations__Na_j) / var_membrane__FoRT; // millivolt
        const double var_Nerst_Potentials__E_Na_sl = log(NV_Ith_S(mParameters, 4) / var_chaste_interface__Sodium_Concentrations__Na_sl) / var_membrane__FoRT; // millivolt
        const double var_Fast_Na_Current__I_Na_junc = pow(var_chaste_interface__Fast_Na_Current__m, 3) * (-var_Nerst_Potentials__E_Na_junc + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 7) * var_chaste_interface__Fast_Na_Current__h * var_chaste_interface__Fast_Na_Current__j * var_membrane__F_junc; // picoA_per_picoF
        const double var_Fast_Na_Current__I_Na_sl = pow(var_chaste_interface__Fast_Na_Current__m, 3) * (-var_Nerst_Potentials__E_Na_sl + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 7) * var_chaste_interface__Fast_Na_Current__h * var_chaste_interface__Fast_Na_Current__j * var_membrane__F_sl; // picoA_per_picoF
        const double var_Fast_Na_Current__I_Na = var_Fast_Na_Current__I_Na_junc + var_Fast_Na_Current__I_Na_sl; // picoA_per_picoF
        const double var_Fast_Na_Current__I_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_Fast_Na_Current__I_Na; // uA_per_cm2
        const double var_Inward_Rectifier_K_Current__a_K1 = 4.0937999999999999 / (1.0 + exp(-6.0745197599999994 + 0.12164999999999999 * var_chaste_interface__membrane__V - 0.12164999999999999 * var_Nerst_Potentials__E_K)); // dimensionless
        const double var_Inward_Rectifier_K_Current__b_K1 = (15.7197 * exp(-0.21949596900000001 + 0.067390000000000005 * var_chaste_interface__membrane__V - 0.067390000000000005 * var_Nerst_Potentials__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_Nerst_Potentials__E_K)) / (1.0 + exp(-2.3135610949999998 + 0.16284999999999999 * var_Nerst_Potentials__E_K - 0.16284999999999999 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_Inward_Rectifier_K_Current__K1_ss = var_Inward_Rectifier_K_Current__a_K1 / (var_Inward_Rectifier_K_Current__a_K1 + var_Inward_Rectifier_K_Current__b_K1); // dimensionless
        const double var_Inward_Rectifier_K_Current__I_K1 = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 3)) * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 9) * var_Inward_Rectifier_K_Current__K1_ss; // picoA_per_picoF
        const double var_Inward_Rectifier_K_Current__I_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_Inward_Rectifier_K_Current__I_K1; // uA_per_cm2
        const double var_L_Type_Calcium_Current__Ibar_Ca_j = (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_j * exp(2.0 * var_membrane__FoRT * var_chaste_interface__membrane__V)) * NV_Ith_S(mParameters, 5) * var_L_Type_Calcium_Current__p_Ca * var_membrane__FoRT * var_membrane__Frdy * var_chaste_interface__membrane__V / (-1.0 + exp(2.0 * var_membrane__FoRT * var_chaste_interface__membrane__V)); // picoA_per_picoF
        const double var_L_Type_Calcium_Current__I_Ca_junc = (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * var_L_Type_Calcium_Current__Ibar_Ca_j * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 * var_membrane__F_junc_Ca_L; // picoA_per_picoF
        const double var_L_Type_Calcium_Current__Ibar_Ca_sl = (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_sl * exp(2.0 * var_membrane__FoRT * var_chaste_interface__membrane__V)) * NV_Ith_S(mParameters, 5) * var_L_Type_Calcium_Current__p_Ca * var_membrane__FoRT * var_membrane__Frdy * var_chaste_interface__membrane__V / (-1.0 + exp(2.0 * var_membrane__FoRT * var_chaste_interface__membrane__V)); // picoA_per_picoF
        const double var_L_Type_Calcium_Current__I_Ca_sl = (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * var_L_Type_Calcium_Current__Ibar_Ca_sl * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 * var_membrane__F_sl_Ca_L; // picoA_per_picoF
        const double var_L_Type_Calcium_Current__I_Ca = var_L_Type_Calcium_Current__I_Ca_junc + var_L_Type_Calcium_Current__I_Ca_sl; // picoA_per_picoF
        const double var_L_Type_Calcium_Current__Ibar_K = (-NV_Ith_S(mParameters, 3) + NV_Ith_S(mParameters, 1) * exp(var_membrane__FoRT * var_chaste_interface__membrane__V)) * NV_Ith_S(mParameters, 5) * var_L_Type_Calcium_Current__p_K * var_membrane__FoRT * var_membrane__Frdy * var_chaste_interface__membrane__V / (-1.0 + exp(var_membrane__FoRT * var_chaste_interface__membrane__V)); // picoA_per_picoF
        const double var_L_Type_Calcium_Current__I_Ca_K = ((1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * var_membrane__F_junc_Ca_L + (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * var_membrane__F_sl_Ca_L) * var_L_Type_Calcium_Current__Ibar_K * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2; // picoA_per_picoF
        const double var_L_Type_Calcium_Current__Ibar_Na_j = (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_j * exp(var_membrane__FoRT * var_chaste_interface__membrane__V)) * NV_Ith_S(mParameters, 5) * var_L_Type_Calcium_Current__p_Na * var_membrane__FoRT * var_membrane__Frdy * var_chaste_interface__membrane__V / (-1.0 + exp(var_membrane__FoRT * var_chaste_interface__membrane__V)); // picoA_per_picoF
        const double var_L_Type_Calcium_Current__I_Ca_Na_junc = (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * var_L_Type_Calcium_Current__Ibar_Na_j * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 * var_membrane__F_junc_Ca_L; // picoA_per_picoF
        const double var_L_Type_Calcium_Current__Ibar_Na_sl = (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_sl * exp(var_membrane__FoRT * var_chaste_interface__membrane__V)) * NV_Ith_S(mParameters, 5) * var_L_Type_Calcium_Current__p_Na * var_membrane__FoRT * var_membrane__Frdy * var_chaste_interface__membrane__V / (-1.0 + exp(var_membrane__FoRT * var_chaste_interface__membrane__V)); // picoA_per_picoF
        const double var_L_Type_Calcium_Current__I_Ca_Na_sl = (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * var_L_Type_Calcium_Current__Ibar_Na_sl * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 * var_membrane__F_sl_Ca_L; // picoA_per_picoF
        const double var_L_Type_Calcium_Current__I_Ca_Na = var_L_Type_Calcium_Current__I_Ca_Na_junc + var_L_Type_Calcium_Current__I_Ca_Na_sl; // picoA_per_picoF
        const double var_L_Type_Calcium_Current__I_Ca_L = var_L_Type_Calcium_Current__I_Ca + var_L_Type_Calcium_Current__I_Ca_K + var_L_Type_Calcium_Current__I_Ca_Na; // picoA_per_picoF
        const double var_L_Type_Calcium_Current__I_Ca_L_converted = HeartConfig::Instance()->GetCapacitance() * var_L_Type_Calcium_Current__I_Ca_L; // uA_per_cm2
        const double var_Na_K_Pump_Current__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_membrane__FoRT * var_chaste_interface__membrane__V) + 0.036499999999999998 * var_Na_K_Pump_Current__sigma * exp(-var_membrane__FoRT * var_chaste_interface__membrane__V)); // dimensionless
        const double var_Na_K_Pump_Current__I_NaK_junc = NV_Ith_S(mParameters, 14) * var_Na_K_Pump_Current__f_NaK * NV_Ith_S(mParameters, 3) * var_membrane__F_junc / ((1.0 + pow(var_Na_K_Pump_Current__Km_Naip, 4) / pow(var_chaste_interface__Sodium_Concentrations__Na_j, 4)) * (var_Na_K_Pump_Current__Km_Ko + NV_Ith_S(mParameters, 3))); // picoA_per_picoF
        const double var_Na_K_Pump_Current__I_NaK_sl = NV_Ith_S(mParameters, 14) * var_Na_K_Pump_Current__f_NaK * NV_Ith_S(mParameters, 3) * var_membrane__F_sl / ((1.0 + pow(var_Na_K_Pump_Current__Km_Naip, 4) / pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 4)) * (var_Na_K_Pump_Current__Km_Ko + NV_Ith_S(mParameters, 3))); // picoA_per_picoF
        const double var_Na_K_Pump_Current__I_NaK = var_Na_K_Pump_Current__I_NaK_junc + var_Na_K_Pump_Current__I_NaK_sl; // picoA_per_picoF
        const double var_Na_K_Pump_Current__I_NaK_converted = HeartConfig::Instance()->GetCapacitance() * var_Na_K_Pump_Current__I_NaK; // uA_per_cm2
        const double var_Rapidly_Activating_K_Current__r_Kr = 1 / (_lt_0_row[6]); // dimensionless
        const double var_Rapidly_Activating_K_Current__I_Kr = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 3)) * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 10) * var_Rapidly_Activating_K_Current__r_Kr * var_chaste_interface__Rapidly_Activating_K_Current__x_Kr; // picoA_per_picoF
        const double var_Rapidly_Activating_K_Current__I_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_Rapidly_Activating_K_Current__I_Kr; // uA_per_cm2
        const double var_Slowly_Activating_K_Current__I_Ks_junc = pow(var_chaste_interface__Slowly_Activating_K_Current__x_Ks, 2) * (-var_Nerst_Potentials__E_Ks + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 11) * var_membrane__F_junc; // picoA_per_picoF
        const double var_Slowly_Activating_K_Current__I_Ks_sl = pow(var_chaste_interface__Slowly_Activating_K_Current__x_Ks, 2) * (-var_Nerst_Potentials__E_Ks + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 11) * var_membrane__F_sl; // picoA_per_picoF
        const double var_Slowly_Activating_K_Current__I_Ks = var_Slowly_Activating_K_Current__I_Ks_junc + var_Slowly_Activating_K_Current__I_Ks_sl; // picoA_per_picoF
        const double var_Slowly_Activating_K_Current__I_Ks_converted = HeartConfig::Instance()->GetCapacitance() * var_Slowly_Activating_K_Current__I_Ks; // uA_per_cm2
        const double var_Transient_Outward_K_Current__I_to_f = (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 8) * var_chaste_interface__Transient_Outward_K_Current__x_to_f * var_chaste_interface__Transient_Outward_K_Current__y_to_f; // picoA_per_picoF
        const double var_Transient_Outward_K_Current__I_to_s = (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 12) * var_chaste_interface__Transient_Outward_K_Current__x_to_s * var_chaste_interface__Transient_Outward_K_Current__y_to_s; // picoA_per_picoF
        const double var_Transient_Outward_K_Current__I_to = var_Transient_Outward_K_Current__I_to_f + var_Transient_Outward_K_Current__I_to_s; // picoA_per_picoF
        const double var_Transient_Outward_K_Current__I_to_converted = HeartConfig::Instance()->GetCapacitance() * var_Transient_Outward_K_Current__I_to; // uA_per_cm2

        N_Vector dqs = N_VNew_Serial(10);
        NV_Ith_S(dqs, 0) = var_L_Type_Calcium_Current__I_Ca_L_converted;
        NV_Ith_S(dqs, 1) = var_membrane__C_mem_converted;
        NV_Ith_S(dqs, 2) = var_Fast_Na_Current__I_Na_converted;
        NV_Ith_S(dqs, 3) = var_Inward_Rectifier_K_Current__I_K1_converted;
        NV_Ith_S(dqs, 4) = var_Rapidly_Activating_K_Current__I_Kr_converted;
        NV_Ith_S(dqs, 5) = var_Slowly_Activating_K_Current__I_Ks_converted;
        NV_Ith_S(dqs, 6) = var_Na_K_Pump_Current__I_NaK_converted;
        NV_Ith_S(dqs, 7) = var_membrane__I_Stim_converted;
        NV_Ith_S(dqs, 8) = var_Transient_Outward_K_Current__I_to_converted;
        NV_Ith_S(dqs, 9) = var_chaste_interface__environment__t;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellcarro_2011_endoFromCellMLCvodeOpt>::Initialise(void)
{
    this->mSystemName = "Carro_Rodriguez_Laguna_Pueyo_CinC2010_EPI";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // NV_Ith_S(rY, 0):
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-84.10546);

    // NV_Ith_S(rY, 1):
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(9.719632e-05);

    // NV_Ith_S(rY, 2):
    this->mVariableNames.push_back("Fast_Na_Current__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.002176608);

    // NV_Ith_S(rY, 3):
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7126555);

    // NV_Ith_S(rY, 4):
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7119893);

    // NV_Ith_S(rY, 5):
    this->mVariableNames.push_back("Rapidly_Activating_K_Current__x_Kr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.01896559);

    // NV_Ith_S(rY, 6):
    this->mVariableNames.push_back("Slowly_Activating_K_Current__x_Ks");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00355636);

    // NV_Ith_S(rY, 7):
    this->mVariableNames.push_back("Transient_Outward_K_Current__x_to_s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0003592503);

    // NV_Ith_S(rY, 8):
    this->mVariableNames.push_back("Transient_Outward_K_Current__y_to_s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.8161309);

    // NV_Ith_S(rY, 9):
    this->mVariableNames.push_back("Transient_Outward_K_Current__x_to_f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0003592405);

    // NV_Ith_S(rY, 10):
    this->mVariableNames.push_back("Transient_Outward_K_Current__y_to_f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9999976);

    // NV_Ith_S(rY, 11):
    this->mVariableNames.push_back("L_Type_Calcium_Current__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.879996e-06);

    // NV_Ith_S(rY, 12):
    this->mVariableNames.push_back("L_Type_Calcium_Current__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9789409);

    // NV_Ith_S(rY, 13):
    this->mVariableNames.push_back("L_Type_Calcium_Current__f_2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9993986);

    // NV_Ith_S(rY, 14):
    this->mVariableNames.push_back("L_Type_Calcium_Current__f_Ca_B_j");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.02861794);

    // NV_Ith_S(rY, 15):
    this->mVariableNames.push_back("L_Type_Calcium_Current__f_Ca_B_sl");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0169833);

    // NV_Ith_S(rY, 16):
    this->mVariableNames.push_back("SR_Fluxes__Ry_Rr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.8888214);

    // NV_Ith_S(rY, 17):
    this->mVariableNames.push_back("SR_Fluxes__Ry_Ro");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.149876e-06);

    // NV_Ith_S(rY, 18):
    this->mVariableNames.push_back("SR_Fluxes__Ry_Ri");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.43831e-07);

    // NV_Ith_S(rY, 19):
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__TnC_l");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.009811535);

    // NV_Ith_S(rY, 20):
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__TnC_h_c");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.1225802);

    // NV_Ith_S(rY, 21):
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__TnC_h_m");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.008128604);

    // NV_Ith_S(rY, 22):
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__CaM");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0003288063);

    // NV_Ith_S(rY, 23):
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__Myo_c");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.002522168);

    // NV_Ith_S(rY, 24):
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__Myo_m");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.1369514);

    // NV_Ith_S(rY, 25):
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__SRB");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.00238683);

    // NV_Ith_S(rY, 26):
    this->mVariableNames.push_back("Junctional_and_SL_Ca_Buffers__SLL_j");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.008606485);

    // NV_Ith_S(rY, 27):
    this->mVariableNames.push_back("Junctional_and_SL_Ca_Buffers__SLL_sl");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.01101044);

    // NV_Ith_S(rY, 28):
    this->mVariableNames.push_back("Junctional_and_SL_Ca_Buffers__SLH_j");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.08078504);

    // NV_Ith_S(rY, 29):
    this->mVariableNames.push_back("Junctional_and_SL_Ca_Buffers__SLH_sl");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.1238366);

    // NV_Ith_S(rY, 30):
    this->mVariableNames.push_back("Sodium_Concentrations__Na_j");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(10.0211);

    // NV_Ith_S(rY, 31):
    this->mVariableNames.push_back("Sodium_Concentrations__Na_sl");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(10.01974);

    // NV_Ith_S(rY, 32):
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(10.01989);

    // NV_Ith_S(rY, 33):
    this->mVariableNames.push_back("Sodium_Concentrations__Na_B_j");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(3.785209);

    // NV_Ith_S(rY, 34):
    this->mVariableNames.push_back("Sodium_Concentrations__Na_B_sl");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.8259271);

    // NV_Ith_S(rY, 35):
    this->mVariableNames.push_back("Calcium_Concentrations__Ca_j");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0002048633);

    // NV_Ith_S(rY, 36):
    this->mVariableNames.push_back("Calcium_Concentrations__Ca_sl");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0001188246);

    // NV_Ith_S(rY, 37):
    this->mVariableNames.push_back("Calcium_Concentrations__Ca_SR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.6138856);

    // NV_Ith_S(rY, 38):
    this->mVariableNames.push_back("Calcium_Concentrations__Csqn_b");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.262853);

    // mParameters[0]:
    this->mParameterNames.push_back("SR_uptake_current_max");
    this->mParameterUnits.push_back("milliM_per_millis");

    // mParameters[1]:
    this->mParameterNames.push_back("cytosolic_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[2]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[3]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[4]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[5]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[6]:
    this->mParameterNames.push_back("membrane__C_mem");
    this->mParameterUnits.push_back("farad");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_fast_transient_outward_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[12]:
    this->mParameterNames.push_back("membrane_slow_transient_outward_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[13]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("picoA_per_picoF");

    // mParameters[14]:
    this->mParameterNames.push_back("membrane_sodium_potassium_pump_current_permeability");
    this->mParameterUnits.push_back("picoA_per_picoF");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_capacitance");
    this->mDerivedQuantityUnits.push_back("uF");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_potassium_pump_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellcarro_2011_endoFromCellMLCvodeOpt)

#endif // CHASTE_CVODE
