//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: Trovato2020
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: BackwardEuler)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "Trovato2020.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"
#include "CardiacNewtonSolver.hpp"

class CellTrovato2020FromCellMLBackwardEuler_LookupTables : public AbstractLookupTableCollection
{
public:
    static CellTrovato2020FromCellMLBackwardEuler_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new CellTrovato2020FromCellMLBackwardEuler_LookupTables);
        }
        return mpInstance.get();
    }

    void FreeMemory()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }

    // Row lookup methods
    // using linear-interpolation

    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<41; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }


    const double * IndexTable0(double var_chaste_interface__membrane__v)
    {
        const double _offset_0 = var_chaste_interface__membrane__v - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = CellTrovato2020FromCellMLBackwardEuler_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }


// LCOV_EXCL_START
    bool CheckIndex0(double& var_chaste_interface__membrane__v)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__membrane__v>mTableMaxs[0] || var_chaste_interface__membrane__v<mTableMins[0])
        {
// LCOV_EXCL_START
            _oob_0 = true;
// LCOV_EXCL_STOP
        }
        return _oob_0;
    }
// LCOV_EXCL_STOP

    ~CellTrovato2020FromCellMLBackwardEuler_LookupTables()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

    }

protected:
    CellTrovato2020FromCellMLBackwardEuler_LookupTables(const CellTrovato2020FromCellMLBackwardEuler_LookupTables&);
    CellTrovato2020FromCellMLBackwardEuler_LookupTables& operator= (const CellTrovato2020FromCellMLBackwardEuler_LookupTables&);
    CellTrovato2020FromCellMLBackwardEuler_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);

        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 41;
        mTableMins[0] = -250.0;
        mTableMaxs[0] = 550.0;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;

        CellTrovato2020FromCellMLBackwardEuler_LookupTables::RegenerateTables();
    }

    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);


        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][41];

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 0.29999999999999999 + 0.59999999999999998 / (1.0 + exp(-1.0 + 0.10000000000000001 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][0] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(1.4344412457471867 + 0.026171159382360639 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][1] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + exp(2.2916666666666665 + 0.041666666666666664 * var_chaste_interface__membrane__v);

                _lookup_table_0[i][2] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + exp(-1.0416666666666667 + 0.10416666666666667 * var_chaste_interface__membrane__v);

                _lookup_table_0[i][3] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + exp(0.75 - 0.0625 * var_chaste_interface__membrane__v);

                _lookup_table_0[i][4] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(6.1904761904761898 + 0.27056277056277056 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][5] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-1.7115839243498816 - 0.23640661938534277 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][6] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 0.59999999999999998 + 1 / (exp(1.26 + 0.089999999999999997 * var_chaste_interface__membrane__v) + exp(-0.30000000000000004 - 0.050000000000000003 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][7] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 5.04 + 0.71999999999999997 / (0.040000000000000001 * exp(1.5985714285714285 + 0.14285714285714285 * var_chaste_interface__membrane__v) + 0.040000000000000001 * exp(-1.5985714285714285 - 0.14285714285714285 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][8] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 49.0 + 0.48999999999999999 / (0.00012 * exp(2.1699999999999999 + 0.14285714285714285 * var_chaste_interface__membrane__v) + 0.00012 * exp(-5.0633333333333335 - 0.33333333333333331 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][9] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 7.0 + 1 / (0.0044999999999999997 * exp(3.5190000000000001 + 0.10000000000000001 * var_chaste_interface__membrane__v) + 0.0044999999999999997 * exp(-3.5190000000000001 - 0.10000000000000001 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][10] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 1000.0 + 1 / (3.4999999999999997e-5 * exp(3.3649999999999998 + 0.16666666666666666 * var_chaste_interface__membrane__v) + 3.4999999999999997e-5 * exp(-5.0474999999999994 - 0.25 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][11] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-4.2857142857142856 - 0.14285714285714285 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][12] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0680000000000001 * exp(0.54333333333333333 + 0.033333333333333333 * var_chaste_interface__membrane__v) + 1.0680000000000001 * exp(-0.54333333333333333 - 0.033333333333333333 * var_chaste_interface__membrane__v);

                _lookup_table_0[i][13] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(12.199999999999999 + 0.20000000000000001 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][14] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 0.014999999999999999 * exp(4.6558441558441563 + 0.064935064935064929 * var_chaste_interface__membrane__v) + 0.014999999999999999 * exp(-0.86074429771908767 - 0.012004801920768308 * var_chaste_interface__membrane__v);

                _lookup_table_0[i][15] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 0.0081833060556464818 * exp(3.4155488244627148 + 0.014423770373575654 * var_chaste_interface__membrane__v) + 0.0081833060556464818 * exp(-6.2475442043222005 - 0.049115913555992145 * var_chaste_interface__membrane__v);

                _lookup_table_0[i][16] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-1.2280159080866107 - 0.14729709824716453 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][17] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 12.98 + 1 / (4.1230000000000003e-5 * exp(1.4808635917566242 - 0.049067713444553483 * var_chaste_interface__membrane__v) + 0.36520000000000002 * exp(-3.6340139570948562 + 0.25846471956577927 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][18] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 1.865 + 1 / (1.128e-5 * exp(0.4834232845026985 - 0.038550501156515031 * var_chaste_interface__membrane__v) + 0.066290000000000002 * exp(-2.3793337865397692 + 0.13596193065941536 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][19] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-1.2987012987012987 - 0.11195700850873264 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][20] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 817.29999999999995 + 1 / (0.001292 * exp(-0.91304347826086951 - 0.0043478260869565218 * var_chaste_interface__membrane__v) + 0.00023259999999999999 * exp(2.7123595505617977 + 0.056179775280898875 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][21] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 0.019300000000000001 * exp(-2.1464516129032258 - 0.032258064516129031 * var_chaste_interface__membrane__v) + 0.01 * exp(-2.5 + 0.050000000000000003 * var_chaste_interface__membrane__v);

                _lookup_table_0[i][22] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(12.620578778135048 + 0.16077170418006431 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][23] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 16.0 * exp(-0.054037868972050131 + 0.10888146075367747 * var_chaste_interface__membrane__v) + 3.6859999999999999e-6 * exp(-0.49472505376754605 - 0.12726046399165172 * var_chaste_interface__membrane__v);

                _lookup_table_0[i][24] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (0.0097940000000000006 * exp(-0.63992869875222813 - 0.035650623885918005 * var_chaste_interface__membrane__v) + 0.33429999999999999 * exp(0.10112954465231205 + 0.017649135192375574 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][25] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(13.617363344051448 + 0.16077170418006431 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][26] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 4.859 + 1 / (0.86280000000000001 * exp(-15.357647523189264 - 0.13157029142819551 * var_chaste_interface__membrane__v) + 1.1095999999999999 * exp(0.69411673565151943 + 0.11067088691648774 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][27] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (8.5519999999999996 * exp(-13.000839630562552 - 0.16792611251049538 * var_chaste_interface__membrane__v) + 6.7649999999999997 * exp(0.33477135461604829 + 0.02876042565429968 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][28] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-6.401120907300438 - 0.13218246467423633 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][29] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 0.0050000000000000001 / (1.0 + exp(11.700053418803417 + 0.13354700854700854 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][30] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 0.0016666666666666668 / (1.0 + exp(12.528044871794872 + 0.13354700854700854 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][31] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-8.1401975683890573 - 0.18996960486322187 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][32] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(9.1578947368421044 + 0.10526315789473684 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][33] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 0.00050000000000000001 * exp(0.94999999999999996 + 0.016666666666666666 * var_chaste_interface__membrane__v) + 0.00050000000000000001 * exp(-13.199999999999999 - 0.10000000000000001 * var_chaste_interface__membrane__v);

                _lookup_table_0[i][34] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(2.0769230769230771 + 0.076923076923076927 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][35] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(1.5384615384615385 - 0.076923076923076927 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][36] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 3.3285782215882072 / (1.0 + exp(3.403513787634354 + 0.034035137876343539 * var_chaste_interface__membrane__v)) + 0.78668405081082138 / (1.0 + exp(0.62658348478969694 - 0.034035137876343539 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][37] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 6.1619999999999999 + 1 / (0.39329999999999998 * exp(-1.0 - 0.01 * var_chaste_interface__membrane__v) + 0.08004 * exp(-0.93131548311990686 + 0.11641443538998836 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][38] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 43.0 + 1 / (1.7800000000000001e-8 * exp(14.123035029087756 + 0.12377769525931426 * var_chaste_interface__membrane__v) + 0.0014159999999999999 * exp(-1.6345469940728197 - 0.016934801016088061 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][39] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                double val = 0.59999999999999998 / (1.0 + exp(-1.0 + 0.10000000000000001 * var_chaste_interface__membrane__v));

                _lookup_table_0[i][40] = val;
            }

            mNeedsRegeneration[0] = false;
        }

        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }

private:
    /** The single instance of the class */
    static std::shared_ptr<CellTrovato2020FromCellMLBackwardEuler_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[41];

    // Lookup tables
    double (*_lookup_table_0)[41];
    int _lookup_table_0_num_misshit_piecewise[41] = {0};

};

std::shared_ptr<CellTrovato2020FromCellMLBackwardEuler_LookupTables> CellTrovato2020FromCellMLBackwardEuler_LookupTables::mpInstance;

    boost::shared_ptr<RegularStimulus> CellTrovato2020FromCellMLBackwardEuler::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__i_Stim_Amplitude_converted = -40.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        const double var_chaste_interface__membrane__i_Stim_Period = 1000.0; // millisecond
        const double var_chaste_interface__membrane__i_Stim_PulseDuration = 1.0; // millisecond
        const double var_chaste_interface__membrane__i_Stim_Start = 0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__i_Stim_Amplitude_converted),
                var_chaste_interface__membrane__i_Stim_PulseDuration,
                var_chaste_interface__membrane__i_Stim_Period,
                var_chaste_interface__membrane__i_Stim_Start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    double CellTrovato2020FromCellMLBackwardEuler::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    CellTrovato2020FromCellMLBackwardEuler::CellTrovato2020FromCellMLBackwardEuler(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractBackwardEulerCardiacCell<17>(
                46,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<CellTrovato2020FromCellMLBackwardEuler>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        
        this->mParameters[0] = 1.8; // (var_extracellular__cao) [millimolar]
        this->mParameters[1] = 5.4000000000000004; // (var_extracellular__ko) [millimolar]
        this->mParameters[2] = 140.0; // (var_extracellular__nao) [millimolar]
        this->mParameters[3] = 96485.0; // (var_physical_constants__F) [coulomb_per_mole]
        this->mParameters[4] = 8314.0; // (var_physical_constants__R) [joule_per_kilomole_kelvin]
        this->mParameters[5] = 7.7676999999999995e-5; // (var_ICaL__PCa) [dimensionless]
        this->mParameters[6] = 39.4572; // (var_INa__GNa) [milliS_per_microF]
        this->mParameters[7] = 0.023199999999999998; // (var_If__GfK) [milliS_per_microF]
        this->mParameters[8] = 0.011599999999999999; // (var_If__GfNa) [milliS_per_microF]
        this->mParameters[9] = 0.045499999999999999; // (var_IK1__GK1) [milliS_per_microF]
        this->mParameters[10] = 0.0189; // (var_INaL__GNaL) [milliS_per_microF]
        this->mParameters[11] = 0.034200000000000001; // (var_IKr__GKr) [milliS_per_microF]
        this->mParameters[12] = 0.0028999999999999998; // (var_IKs__GKs) [milliS_per_microF]
        this->mParameters[13] = 0.192; // (var_Ito__Gto) [milliS_per_microF]
        this->mParameters[14] = 310.0; // (var_physical_constants__T) [kelvin]
    }

    CellTrovato2020FromCellMLBackwardEuler::~CellTrovato2020FromCellMLBackwardEuler()
    {
    }

    AbstractLookupTableCollection* CellTrovato2020FromCellMLBackwardEuler::GetLookupTableCollection()
    {
        return CellTrovato2020FromCellMLBackwardEuler_LookupTables::Instance();
    }
    
    double CellTrovato2020FromCellMLBackwardEuler::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -86.6814002878592
        double var_chaste_interface__CaMK__CaMKt = rY[2];
        // Units: millimolar; Initial value: 0.00505983330678751
        double var_chaste_interface__intracellular_ions__nasl = rY[4];
        // Units: millimolar; Initial value: 8.23153516580562
        double var_chaste_interface__intracellular_ions__nass = rY[5];
        // Units: millimolar; Initial value: 8.23154325237268
        double var_chaste_interface__intracellular_ions__kss = rY[7];
        // Units: millimolar; Initial value: 143.767768218104
        double var_chaste_interface__intracellular_ions__ksl = rY[8];
        // Units: millimolar; Initial value: 143.767769906216
        double var_chaste_interface__intracellular_ions__cass = rY[9];
        // Units: millimolar; Initial value: 0.000101777993438818
        double var_chaste_interface__intracellular_ions__casl = rY[10];
        // Units: millimolar; Initial value: 0.000102004317781147
        double var_chaste_interface__INa__m = rY[14];
        // Units: dimensionless; Initial value: 0.00632661703915808
        double var_chaste_interface__INa__hf = rY[15];
        // Units: dimensionless; Initial value: 0.788611739889677
        double var_chaste_interface__INa__hs = rY[16];
        // Units: dimensionless; Initial value: 0.788545979951331
        double var_chaste_interface__INa__j = rY[17];
        // Units: dimensionless; Initial value: 0.790474358603666
        double var_chaste_interface__INa__hsp = rY[18];
        // Units: dimensionless; Initial value: 0.579693514309867
        double var_chaste_interface__INa__jp = rY[19];
        // Units: dimensionless; Initial value: 0.790947058236417
        double var_chaste_interface__INaL__mL = rY[20];
        // Units: dimensionless; Initial value: 0.000241925773627233
        double var_chaste_interface__INaL__hL = rY[21];
        // Units: dimensionless; Initial value: 0.463574582508218
        double var_chaste_interface__INaL__hLp = rY[22];
        // Units: dimensionless; Initial value: 0.240216198686475
        double var_chaste_interface__Ito__a = rY[23];
        // Units: dimensionless; Initial value: 0.000272851144435704
        double var_chaste_interface__Ito__i1 = rY[24];
        // Units: dimensionless; Initial value: 0.649604795721571
        double var_chaste_interface__Ito__i2 = rY[25];
        // Units: dimensionless; Initial value: 0.989965695822495
        double var_chaste_interface__ICaL__d = rY[26];
        // Units: dimensionless; Initial value: 6.97735089296892e-09
        double var_chaste_interface__ICaL__ff = rY[27];
        // Units: dimensionless; Initial value: 0.999999968230738
        double var_chaste_interface__ICaL__fs = rY[28];
        // Units: dimensionless; Initial value: 0.926692153319136
        double var_chaste_interface__ICaL__fcaf = rY[29];
        // Units: dimensionless; Initial value: 0.99999996819573
        double var_chaste_interface__ICaL__fcas = rY[30];
        // Units: dimensionless; Initial value: 0.999999905741936
        double var_chaste_interface__ICaL__jca = rY[31];
        // Units: dimensionless; Initial value: 0.999978907334662
        double var_chaste_interface__ICaL__ffp = rY[32];
        // Units: dimensionless; Initial value: 0.999999968365903
        double var_chaste_interface__ICaL__fcafp = rY[33];
        // Units: dimensionless; Initial value: 0.999999968278239
        double var_chaste_interface__ICaL__nca = rY[34];
        // Units: dimensionless; Initial value: 0.00547252500964926
        double var_chaste_interface__ICaT__b = rY[35];
        // Units: dimensionless; Initial value: 0.000304250912559619
        double var_chaste_interface__ICaT__g = rY[36];
        // Units: dimensionless; Initial value: 0.994214357917907
        double var_chaste_interface__IKr__xrf = rY[37];
        // Units: dimensionless; Initial value: 0.000331691184084272
        double var_chaste_interface__IKr__xrs = rY[38];
        // Units: dimensionless; Initial value: 0.568716473334161
        double var_chaste_interface__IKs__xs1 = rY[39];
        // Units: dimensionless; Initial value: 0.191165248085394
        double var_chaste_interface__IKs__xs2 = rY[40];
        // Units: dimensionless; Initial value: 0.000222677365291219
        double var_chaste_interface__If__y = rY[41];
        // Units: dimensionless; Initial value: 0.233119011214908
        double var_chaste_interface__IK1__xk1 = rY[42];
        // Units: dimensionless; Initial value: 0.997084813729909
        
        // Lookup table indexing
        const bool _oob_0 = CellTrovato2020FromCellMLBackwardEuler_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__v);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = CellTrovato2020FromCellMLBackwardEuler_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__v);

        const double var_ICaL__PCap = 1.1000000000000001 * mParameters[5]; // dimensionless
        const double var_ICaL__f = 0.40000000000000002 * var_chaste_interface__ICaL__fs + 0.59999999999999998 * var_chaste_interface__ICaL__ff; // dimensionless
        const double var_ICaL__fp = 0.40000000000000002 * var_chaste_interface__ICaL__fs + 0.59999999999999998 * var_chaste_interface__ICaL__ffp; // dimensionless
        const double var_INaCa_i__h10_i = 13.5 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * mParameters[2]) * mParameters[2]; // dimensionless
        const double var_INaCa_i__h10_ss = 13.5 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * mParameters[2]) * mParameters[2]; // dimensionless
        const double var_INaCa_i__k1_i = 1500000.0 * mParameters[0] / var_INaCa_i__h10_i; // dimensionless
        const double var_INaCa_i__k1_ss = 1500000.0 * mParameters[0] / var_INaCa_i__h10_ss; // dimensionless
        const double var_IpCa__IpCa = 0.00050000000000000001 * var_chaste_interface__intracellular_ions__casl / (0.00050000000000000001 + var_chaste_interface__intracellular_ions__casl); // microA_per_microF
        const double var_CaMK__CaMKa = 0.050000000000000003 * (1.0 - var_chaste_interface__CaMK__CaMKt) / (1.0 + 0.0015 / var_chaste_interface__intracellular_ions__cass) + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_ICaL__fICaLp = 1 / (1.0 + 0.14999999999999999 / var_CaMK__CaMKa); // dimensionless
        const double var_INaCa_i__h4_i = 1.0 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * var_chaste_interface__intracellular_ions__nasl) * var_chaste_interface__intracellular_ions__nasl; // dimensionless
        const double var_INaCa_i__k6_i = 1500000.0 * var_chaste_interface__intracellular_ions__casl / var_INaCa_i__h4_i; // dimensionless
        const double var_INaK__b3 = 5.7707741857267899e-10 / (1.5889281507656066 + 0.0034246575342465752 * var_chaste_interface__intracellular_ions__ksl + 0.004464285714285714 * var_chaste_interface__intracellular_ions__nasl); // dimensionless
        const double var_INaCa_i__h4_ss = 1.0 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * var_chaste_interface__intracellular_ions__nass) * var_chaste_interface__intracellular_ions__nass; // dimensionless
        const double var_INaCa_i__k6_ss = 1500000.0 * var_chaste_interface__intracellular_ions__cass / var_INaCa_i__h4_ss; // dimensionless
        const double var_ICaL__Afcaf = _lt_0_row[0]; // dimensionless
        const double var_ICaL__Afcas = 1.0 - var_ICaL__Afcaf; // dimensionless
        const double var_ICaL__fca = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcaf + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__fcap = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcafp + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_IKr__Axrf = _lt_0_row[1]; // dimensionless
        const double var_ICaL__ICaK = 0.00035740000000000001 * (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(mParameters[4] * mParameters[14] / mParameters[3])) ? (-9.9999999999999995e-8 * (-0.75 * mParameters[1] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * (-0.75 * mParameters[1] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(9.9999999999999995e-8)) + 9.9999999999999995e-8 * (-0.75 * mParameters[1] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8))) * (9.9999999999999995e-8 * mParameters[4] * mParameters[14] / mParameters[3] + var_chaste_interface__membrane__v) * mParameters[3] / (mParameters[4] * mParameters[14])) : (pow(mParameters[3], 2) * (-0.75 * mParameters[1] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * mParameters[4] * mParameters[14]))) * mParameters[5] * var_chaste_interface__ICaL__d + 0.00035740000000000001 * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(mParameters[4] * mParameters[14] / mParameters[3])) ? (-9.9999999999999995e-8 * (-0.75 * mParameters[1] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * (-0.75 * mParameters[1] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(9.9999999999999995e-8)) + 9.9999999999999995e-8 * (-0.75 * mParameters[1] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8))) * (9.9999999999999995e-8 * mParameters[4] * mParameters[14] / mParameters[3] + var_chaste_interface__membrane__v) * mParameters[3] / (mParameters[4] * mParameters[14])) : (pow(mParameters[3], 2) * (-0.75 * mParameters[1] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * mParameters[4] * mParameters[14]))) * var_ICaL__PCap * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaL = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * ((fabs(var_chaste_interface__membrane__v) < 4.9999999999999998e-8 * fabs(mParameters[4] * mParameters[14] / mParameters[3])) ? (-1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * mParameters[4] * mParameters[14] / mParameters[3] + var_chaste_interface__membrane__v) * (1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__cass * exp(9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(9.9999999999999995e-8)) + 1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[3] / (mParameters[4] * mParameters[14])) : (4.0 * pow(mParameters[3], 2) * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__cass * exp(2.0 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(2.0 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * mParameters[4] * mParameters[14]))) * mParameters[5] * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * ((fabs(var_chaste_interface__membrane__v) < 4.9999999999999998e-8 * fabs(mParameters[4] * mParameters[14] / mParameters[3])) ? (-1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * mParameters[4] * mParameters[14] / mParameters[3] + var_chaste_interface__membrane__v) * (1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__cass * exp(9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(9.9999999999999995e-8)) + 1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[3] / (mParameters[4] * mParameters[14])) : (4.0 * pow(mParameters[3], 2) * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__cass * exp(2.0 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(2.0 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * mParameters[4] * mParameters[14]))) * var_ICaL__PCap * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaNa = 0.00125 * (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(mParameters[4] * mParameters[14] / mParameters[3])) ? (-9.9999999999999995e-8 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(9.9999999999999995e-8)) + 9.9999999999999995e-8 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8))) * (9.9999999999999995e-8 * mParameters[4] * mParameters[14] / mParameters[3] + var_chaste_interface__membrane__v) * mParameters[3] / (mParameters[4] * mParameters[14])) : (pow(mParameters[3], 2) * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * mParameters[4] * mParameters[14]))) * mParameters[5] * var_chaste_interface__ICaL__d + 0.00125 * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(mParameters[4] * mParameters[14] / mParameters[3])) ? (-9.9999999999999995e-8 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(9.9999999999999995e-8)) + 9.9999999999999995e-8 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8))) * (9.9999999999999995e-8 * mParameters[4] * mParameters[14] / mParameters[3] + var_chaste_interface__membrane__v) * mParameters[3] / (mParameters[4] * mParameters[14])) : (pow(mParameters[3], 2) * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * mParameters[4] * mParameters[14]))) * var_ICaL__PCap * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICab__ICab = ((fabs(var_chaste_interface__membrane__v) < 4.9999999999999998e-8 * fabs(mParameters[4] * mParameters[14] / mParameters[3])) ? (-4.9999999999999992e-15 * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__casl * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * mParameters[4] * mParameters[14] / mParameters[3] + var_chaste_interface__membrane__v) * (4.9999999999999992e-15 * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__casl * exp(9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(9.9999999999999995e-8)) + 4.9999999999999992e-15 * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__casl * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[3] / (mParameters[4] * mParameters[14])) : (9.9999999999999995e-8 * pow(mParameters[3], 2) * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__casl * exp(2.0 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(2.0 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * mParameters[4] * mParameters[14]))); // microA_per_microF
        const double var_INaCa_i__hca = exp(0.16700000000000001 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14])); // dimensionless
        const double var_INaCa_i__hna = exp(0.52239999999999998 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14])); // dimensionless
        const double var_INaCa_i__h1_i = 1.0 + 0.011348161597821153 * (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nasl; // dimensionless
        const double var_INaCa_i__h1_ss = 1.0 + 0.011348161597821153 * (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nass; // dimensionless
        const double var_INaCa_i__h2_i = 0.011348161597821153 * var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nasl / var_INaCa_i__h1_i; // dimensionless
        const double var_INaCa_i__h2_ss = 0.011348161597821153 * var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__h1_ss; // dimensionless
        const double var_INaCa_i__h7_i = 1.0 + 0.011348161597821153 * (1.0 + 1 / var_INaCa_i__hna) * mParameters[2]; // dimensionless
        const double var_INaCa_i__h7_ss = 1.0 + 0.011348161597821153 * (1.0 + 1 / var_INaCa_i__hna) * mParameters[2]; // dimensionless
        const double var_INaCa_i__h8_i = 0.011348161597821153 * mParameters[2] / (var_INaCa_i__h7_i * var_INaCa_i__hna); // dimensionless
        const double var_INaCa_i__h8_ss = 0.011348161597821153 * mParameters[2] / (var_INaCa_i__h7_ss * var_INaCa_i__hna); // dimensionless
        const double var_INaCa_i__k3pp_i = 5000.0 * var_INaCa_i__h8_i; // dimensionless
        const double var_INaCa_i__k3_i = 60000.0 / var_INaCa_i__h7_i + var_INaCa_i__k3pp_i; // dimensionless
        const double var_INaCa_i__k3pp_ss = 5000.0 * var_INaCa_i__h8_ss; // dimensionless
        const double var_INaCa_i__k3_ss = 60000.0 / var_INaCa_i__h7_ss + var_INaCa_i__k3pp_ss; // dimensionless
        const double var_INaCa_i__k4pp_i = 5000.0 * var_INaCa_i__h2_i; // dimensionless
        const double var_INaCa_i__k4_i = 60000.0 / (var_INaCa_i__h1_i * var_INaCa_i__hca) + var_INaCa_i__k4pp_i; // dimensionless
        const double var_INaCa_i__k4pp_ss = 5000.0 * var_INaCa_i__h2_ss; // dimensionless
        const double var_INaCa_i__k4_ss = 60000.0 / (var_INaCa_i__h1_ss * var_INaCa_i__hca) + var_INaCa_i__k4pp_ss; // dimensionless
        const double var_INaCa_i__k7_i = 800.0 * pow(var_chaste_interface__intracellular_ions__nasl, 2) * var_INaCa_i__h2_i / var_INaCa_i__h4_i; // dimensionless
        const double var_INaCa_i__k7_ss = 800.0 * pow(var_chaste_interface__intracellular_ions__nass, 2) * var_INaCa_i__h2_ss / var_INaCa_i__h4_ss; // dimensionless
        const double var_INaCa_i__k8_i = 800.0 * pow(mParameters[2], 2) * var_INaCa_i__h8_i / var_INaCa_i__h10_i; // dimensionless
        const double var_INaCa_i__k8_ss = 800.0 * pow(mParameters[2], 2) * var_INaCa_i__h8_ss / var_INaCa_i__h10_ss; // dimensionless
        const double var_INaCa_i__x1_i = 5000.0 * (5000.0 + var_INaCa_i__k3_i) * var_INaCa_i__k7_i + 5000.0 * (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k4_i; // dimensionless
        const double var_INaCa_i__x1_ss = 5000.0 * (5000.0 + var_INaCa_i__k3_ss) * var_INaCa_i__k7_ss + 5000.0 * (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k4_ss; // dimensionless
        const double var_INaCa_i__x2_i = (5000.0 + var_INaCa_i__k4_i) * var_INaCa_i__k1_i * var_INaCa_i__k7_i + (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k4_i * var_INaCa_i__k6_i; // dimensionless
        const double var_INaCa_i__x2_ss = (5000.0 + var_INaCa_i__k4_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k7_ss + (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k4_ss * var_INaCa_i__k6_ss; // dimensionless
        const double var_INaCa_i__x3_i = (5000.0 + var_INaCa_i__k3_i) * var_INaCa_i__k6_i * var_INaCa_i__k8_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k1_i * var_INaCa_i__k3_i; // dimensionless
        const double var_INaCa_i__x3_ss = (5000.0 + var_INaCa_i__k3_ss) * var_INaCa_i__k6_ss * var_INaCa_i__k8_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k3_ss; // dimensionless
        const double var_INaCa_i__x4_i = 5000.0 * (5000.0 + var_INaCa_i__k4_i) * var_INaCa_i__k8_i + 5000.0 * (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k3_i; // dimensionless
        const double var_INaCa_i__E1_i = var_INaCa_i__x1_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E2_i = var_INaCa_i__x2_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__x4_ss = 5000.0 * (5000.0 + var_INaCa_i__k4_ss) * var_INaCa_i__k8_ss + 5000.0 * (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k3_ss; // dimensionless
        const double var_INaCa_i__E1_ss = var_INaCa_i__x1_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E2_ss = var_INaCa_i__x2_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaK__Knai = 9.0730000000000004 * exp(-0.051666666666666666 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14])); // millimolar
        const double var_INaK__Knao = 27.780000000000001 * exp(0.38500000000000001 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14])); // millimolar
        const double var_INaK__a1 = 949.5 * pow(var_chaste_interface__intracellular_ions__nasl, 3) / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__nasl / var_INaK__Knai), 3) + 4.0 * pow((0.5 + var_chaste_interface__intracellular_ions__ksl), 2)) * pow(var_INaK__Knai, 3)); // dimensionless
        const double var_INaK__a3 = 14800.411886344058 * pow(mParameters[1], 2) / (-1.0 + pow((1.0 + mParameters[2] / var_INaK__Knao), 3) + 7.7937924625297832 * pow((0.35820000000000002 + mParameters[1]), 2)); // dimensionless
        const double var_INaK__b2 = 39.399999999999999 * pow(mParameters[2], 3) / ((-1.0 + pow((1.0 + mParameters[2] / var_INaK__Knao), 3) + 7.7937924625297832 * pow((0.35820000000000002 + mParameters[1]), 2)) * pow(var_INaK__Knao, 3)); // dimensionless
        const double var_INaK__b4 = 160.0 * pow(var_chaste_interface__intracellular_ions__ksl, 2) / (-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__nasl / var_INaK__Knai), 3) + 4.0 * pow((0.5 + var_chaste_interface__intracellular_ions__ksl), 2)); // dimensionless
        const double var_INaK__x1 = 439120.79239156016 * var_INaK__a1 + 687.20000000000005 * var_INaK__a1 * var_INaK__b3 + 687.20000000000005 * var_INaK__b3 * var_INaK__b4 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__x2 = 687.20000000000005 * var_INaK__a1 * var_INaK__a3 + 696.32000000000005 * var_INaK__a3 * var_INaK__b4 + 9.120000000000001 * var_INaK__b2 * var_INaK__b4; // dimensionless
        const double var_INaK__x3 = 444948.47229058668 * var_INaK__a3 + 5827.6798990265261 * var_INaK__b2 + 9.120000000000001 * var_INaK__b2 * var_INaK__b3; // dimensionless
        const double var_INaK__x4 = 638.99998892834708 * var_INaK__a1 * var_INaK__a3 + 638.99998892834708 * var_INaK__a1 * var_INaK__b2 + var_INaK__a1 * var_INaK__b2 * var_INaK__b3 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INab__INab = ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(mParameters[4] * mParameters[14] / mParameters[3])) ? (-9.3749999999999983e-17 * (-mParameters[2] + var_chaste_interface__intracellular_ions__nasl * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * mParameters[4] * mParameters[14] / mParameters[3] + var_chaste_interface__membrane__v) * (9.3749999999999983e-17 * (-mParameters[2] + var_chaste_interface__intracellular_ions__nasl * exp(9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(9.9999999999999995e-8)) + 9.3749999999999983e-17 * (-mParameters[2] + var_chaste_interface__intracellular_ions__nasl * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[3] / (mParameters[4] * mParameters[14])) : (9.3749999999999992e-10 * pow(mParameters[3], 2) * (-mParameters[2] + var_chaste_interface__intracellular_ions__nasl * exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * mParameters[4] * mParameters[14]))); // microA_per_microF
        const double var_INaCa_i__INaCa_i = 0.00076567200000000001 * (10000.0 * var_INaCa_i__E2_i - var_INaCa_i__E2_i * var_INaCa_i__k3pp_i - 2.0 * var_INaCa_i__E1_i * var_INaCa_i__k1_i - 3.0 * var_INaCa_i__E1_i * var_INaCa_i__k8_i + var_INaCa_i__k4pp_i * var_INaCa_i__x3_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i) + 3.0 * var_INaCa_i__k7_i * var_INaCa_i__x4_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i)) / (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__intracellular_ions__casl, 2)); // microA_per_microF
        const double var_INaCa_i__INaCa_ss = 0.000191418 * (10000.0 * var_INaCa_i__E2_ss - var_INaCa_i__E2_ss * var_INaCa_i__k3pp_ss - 2.0 * var_INaCa_i__E1_ss * var_INaCa_i__k1_ss - 3.0 * var_INaCa_i__E1_ss * var_INaCa_i__k8_ss + var_INaCa_i__k4pp_ss * var_INaCa_i__x3_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss) + 3.0 * var_INaCa_i__k7_ss * var_INaCa_i__x4_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss)) / (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__intracellular_ions__cass, 2)); // microA_per_microF
        const double var_INaK__INaK = 592.56652800000006 * var_INaK__x4 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4) + 97.461600000000004 * var_INaK__a3 * var_INaK__x1 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4) - 64.974400000000003 * var_INaK__a1 * var_INaK__x3 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4) - 97.461600000000004 * var_INaK__b3 * var_INaK__x2 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // microA_per_microF
        const double var_ICaT__ICaT = 0.075399999999999995 * (-0.5 * mParameters[4] * mParameters[14] * log(mParameters[0] / var_chaste_interface__intracellular_ions__casl) / mParameters[3] + var_chaste_interface__membrane__v) * var_chaste_interface__ICaT__b * var_chaste_interface__ICaT__g; // microA_per_microF
        const double var_reversal_potentials__EK = mParameters[4] * mParameters[14] * log(mParameters[1] / var_chaste_interface__intracellular_ions__ksl) / mParameters[3]; // millivolt
        const double var_IK1__IK1_converted = 1.000004299990755 * sqrt(mParameters[1]) * (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * HeartConfig::Instance()->GetCapacitance() * mParameters[9] * var_chaste_interface__IK1__xk1 / (1.0 + exp(10.545454545454545 + 0.090909090909090912 * var_chaste_interface__membrane__v - 0.5 * mParameters[1])); // uA_per_cm2
        const double var_IKr__IKr_converted = 0.43033148291193518 * sqrt(mParameters[1]) * (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * ((1.0 - var_IKr__Axrf) * var_chaste_interface__IKr__xrs + var_IKr__Axrf * var_chaste_interface__IKr__xrf) * HeartConfig::Instance()->GetCapacitance() * mParameters[11] / ((_lt_0_row[2]) * (_lt_0_row[3])); // uA_per_cm2
        const double var_Isus__Isus = 0.030099999999999998 * (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) / (_lt_0_row[4]); // microA_per_microF
        const double var_Ito__Ito_converted = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * HeartConfig::Instance()->GetCapacitance() * mParameters[13] * var_chaste_interface__Ito__a * var_chaste_interface__Ito__i1 * var_chaste_interface__Ito__i2; // uA_per_cm2
        const double var_reversal_potentials__ENa = mParameters[4] * mParameters[14] * log(mParameters[2] / var_chaste_interface__intracellular_ions__nasl) / mParameters[3]; // millivolt
        const double var_INa__INa_converted = pow(var_chaste_interface__INa__m, 3) * (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - 1 / (1.0 + 0.14999999999999999 / var_CaMK__CaMKa)) * (0.010000000000000009 * var_chaste_interface__INa__hs + 0.98999999999999999 * var_chaste_interface__INa__hf) * var_chaste_interface__INa__j + (0.010000000000000009 * var_chaste_interface__INa__hsp + 0.98999999999999999 * var_chaste_interface__INa__hf) * var_chaste_interface__INa__jp / (1.0 + 0.14999999999999999 / var_CaMK__CaMKa)) * HeartConfig::Instance()->GetCapacitance() * mParameters[6]; // uA_per_cm2
        const double var_INaL__INaL_converted = (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - 1 / (1.0 + 0.14999999999999999 / var_CaMK__CaMKa)) * var_chaste_interface__INaL__hL + var_chaste_interface__INaL__hLp / (1.0 + 0.14999999999999999 / var_CaMK__CaMKa)) * HeartConfig::Instance()->GetCapacitance() * mParameters[10] * var_chaste_interface__INaL__mL; // uA_per_cm2
        const double var_If__If_converted = (pow(var_chaste_interface__If__y, 2) * (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * mParameters[7] + pow(var_chaste_interface__If__y, 2) * (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * mParameters[8]) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        const double var_IKs__IKs_converted = (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__intracellular_ions__casl), 1.3999999999999999))) * (-mParameters[4] * mParameters[14] * log((0.018329999999999999 * mParameters[2] + mParameters[1]) / (0.018329999999999999 * var_chaste_interface__intracellular_ions__nasl + var_chaste_interface__intracellular_ions__ksl)) / mParameters[3] + var_chaste_interface__membrane__v) * HeartConfig::Instance()->GetCapacitance() * mParameters[12] * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2; // uA_per_cm2
        const double var_chaste_interface__i_ionic = HeartConfig::Instance()->GetCapacitance() * var_ICaL__ICaK + HeartConfig::Instance()->GetCapacitance() * var_ICaL__ICaL + HeartConfig::Instance()->GetCapacitance() * var_ICaL__ICaNa + HeartConfig::Instance()->GetCapacitance() * var_ICaT__ICaT + HeartConfig::Instance()->GetCapacitance() * var_ICab__ICab + HeartConfig::Instance()->GetCapacitance() * var_INaCa_i__INaCa_i + HeartConfig::Instance()->GetCapacitance() * var_INaCa_i__INaCa_ss + HeartConfig::Instance()->GetCapacitance() * var_INaK__INaK + HeartConfig::Instance()->GetCapacitance() * var_INab__INab + HeartConfig::Instance()->GetCapacitance() * var_IpCa__IpCa + HeartConfig::Instance()->GetCapacitance() * var_Isus__Isus + var_IK1__IK1_converted + var_IKr__IKr_converted + var_IKs__IKs_converted + var_INa__INa_converted + var_INaL__INaL_converted + var_If__If_converted + var_Ito__Ito_converted; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void CellTrovato2020FromCellMLBackwardEuler::ComputeResidual(double var_chaste_interface__environment__time, const double rCurrentGuess[17], double rResidual[17])
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -86.6814002878592
        double var_chaste_interface__INa__m = rY[14];
        // Units: dimensionless; Initial value: 0.00632661703915808
        double var_chaste_interface__INa__hf = rY[15];
        // Units: dimensionless; Initial value: 0.788611739889677
        double var_chaste_interface__INa__hs = rY[16];
        // Units: dimensionless; Initial value: 0.788545979951331
        double var_chaste_interface__INa__j = rY[17];
        // Units: dimensionless; Initial value: 0.790474358603666
        double var_chaste_interface__INa__hsp = rY[18];
        // Units: dimensionless; Initial value: 0.579693514309867
        double var_chaste_interface__INa__jp = rY[19];
        // Units: dimensionless; Initial value: 0.790947058236417
        double var_chaste_interface__INaL__mL = rY[20];
        // Units: dimensionless; Initial value: 0.000241925773627233
        double var_chaste_interface__INaL__hL = rY[21];
        // Units: dimensionless; Initial value: 0.463574582508218
        double var_chaste_interface__INaL__hLp = rY[22];
        // Units: dimensionless; Initial value: 0.240216198686475
        double var_chaste_interface__Ito__a = rY[23];
        // Units: dimensionless; Initial value: 0.000272851144435704
        double var_chaste_interface__Ito__i1 = rY[24];
        // Units: dimensionless; Initial value: 0.649604795721571
        double var_chaste_interface__Ito__i2 = rY[25];
        // Units: dimensionless; Initial value: 0.989965695822495
        double var_chaste_interface__ICaL__d = rY[26];
        // Units: dimensionless; Initial value: 6.97735089296892e-09
        double var_chaste_interface__ICaL__ff = rY[27];
        // Units: dimensionless; Initial value: 0.999999968230738
        double var_chaste_interface__ICaL__fs = rY[28];
        // Units: dimensionless; Initial value: 0.926692153319136
        double var_chaste_interface__ICaL__fcaf = rY[29];
        // Units: dimensionless; Initial value: 0.99999996819573
        double var_chaste_interface__ICaL__fcas = rY[30];
        // Units: dimensionless; Initial value: 0.999999905741936
        double var_chaste_interface__ICaL__jca = rY[31];
        // Units: dimensionless; Initial value: 0.999978907334662
        double var_chaste_interface__ICaL__ffp = rY[32];
        // Units: dimensionless; Initial value: 0.999999968365903
        double var_chaste_interface__ICaL__fcafp = rY[33];
        // Units: dimensionless; Initial value: 0.999999968278239
        double var_chaste_interface__ICaT__b = rY[35];
        // Units: dimensionless; Initial value: 0.000304250912559619
        double var_chaste_interface__ICaT__g = rY[36];
        // Units: dimensionless; Initial value: 0.994214357917907
        double var_chaste_interface__IKr__xrf = rY[37];
        // Units: dimensionless; Initial value: 0.000331691184084272
        double var_chaste_interface__IKr__xrs = rY[38];
        // Units: dimensionless; Initial value: 0.568716473334161
        double var_chaste_interface__IKs__xs1 = rY[39];
        // Units: dimensionless; Initial value: 0.191165248085394
        double var_chaste_interface__IKs__xs2 = rY[40];
        // Units: dimensionless; Initial value: 0.000222677365291219
        double var_chaste_interface__If__y = rY[41];
        // Units: dimensionless; Initial value: 0.233119011214908
        double var_chaste_interface__IK1__xk1 = rY[42];
        // Units: dimensionless; Initial value: 0.997084813729909
        
        //output_nonlinear_state_assignments
        double var_chaste_interface__CaMK__CaMKt = rCurrentGuess[0];
        double var_chaste_interface__ICaL__nca = rCurrentGuess[1];
        double var_chaste_interface__IP3__u = rCurrentGuess[2];
        double var_chaste_interface__intracellular_ions__cacsr = rCurrentGuess[3];
        double var_chaste_interface__intracellular_ions__cai = rCurrentGuess[4];
        double var_chaste_interface__intracellular_ions__cajsr = rCurrentGuess[5];
        double var_chaste_interface__intracellular_ions__cansr = rCurrentGuess[6];
        double var_chaste_interface__intracellular_ions__casl = rCurrentGuess[7];
        double var_chaste_interface__intracellular_ions__cass = rCurrentGuess[8];
        double var_chaste_interface__intracellular_ions__ki = rCurrentGuess[9];
        double var_chaste_interface__intracellular_ions__ksl = rCurrentGuess[10];
        double var_chaste_interface__intracellular_ions__kss = rCurrentGuess[11];
        double var_chaste_interface__intracellular_ions__nai = rCurrentGuess[12];
        double var_chaste_interface__intracellular_ions__nasl = rCurrentGuess[13];
        double var_chaste_interface__intracellular_ions__nass = rCurrentGuess[14];
        double var_chaste_interface__ryr__Jrel1 = rCurrentGuess[15];
        double var_chaste_interface__ryr__Jrel2 = rCurrentGuess[16];
        
        // Lookup table indexing
        const bool _oob_0 = CellTrovato2020FromCellMLBackwardEuler_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__v);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = CellTrovato2020FromCellMLBackwardEuler_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__v);

        //output_equations
        const double var_ICaL__PCap = 1.1000000000000001 * mParameters[5]; // dimensionless
        const double var_ICaL__f = 0.40000000000000002 * var_chaste_interface__ICaL__fs + 0.59999999999999998 * var_chaste_interface__ICaL__ff; // dimensionless
        const double var_ICaL__fp = 0.40000000000000002 * var_chaste_interface__ICaL__fs + 0.59999999999999998 * var_chaste_interface__ICaL__ffp; // dimensionless
        const double var_ICaL__km2n = var_chaste_interface__ICaL__jca; // per_millisecond
        const double var_INaCa_i__h10_i = 13.5 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * mParameters[2]) * mParameters[2]; // dimensionless
        const double var_INaCa_i__h10_ss = 13.5 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * mParameters[2]) * mParameters[2]; // dimensionless
        const double var_INaCa_i__k1_i = 1500000.0 * mParameters[0] / var_INaCa_i__h10_i; // dimensionless
        const double var_INaCa_i__k1_ss = 1500000.0 * mParameters[0] / var_INaCa_i__h10_ss; // dimensionless
        const double var_IpCa__IpCa = 0.00050000000000000001 * var_chaste_interface__intracellular_ions__casl / (0.00050000000000000001 + var_chaste_interface__intracellular_ions__casl); // microA_per_microF
        const double var_diff__Jgap = 0.083333333333333329 * var_chaste_interface__intracellular_ions__casl - 0.083333333333333329 * var_chaste_interface__intracellular_ions__cai; // millimolar_per_millisecond
        const double var_CaMK__CaMKb = 0.050000000000000003 * (1.0 - var_chaste_interface__CaMK__CaMKt) / (1.0 + 0.0015 / var_chaste_interface__intracellular_ions__cass); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double d_dt_chaste_interface_var_CaMK__CaMKt = -0.00068000000000000005 * var_chaste_interface__CaMK__CaMKt + 0.050000000000000003 * (var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKb; // millimolar / millisecond
        const double d_dt_chaste_interface_var_IP3__u = -0.20999999999999999 * var_chaste_interface__IP3__u + 1800.0 * (1.0 - var_chaste_interface__IP3__u) * var_chaste_interface__intracellular_ions__cass; // millimolar_per_millisecond / millisecond
        const double d_dt_chaste_interface_var_ICaL__nca = 1000.0 / (pow((1.0 + 0.002 / var_chaste_interface__intracellular_ions__cass), 4) + 1000.0 / var_ICaL__km2n) - var_ICaL__km2n * var_chaste_interface__ICaL__nca; // 1 / millisecond
        const double var_ICaL__fICaLp = 1 / (1.0 + 0.14999999999999999 / var_CaMK__CaMKa); // dimensionless
        const double var_IP3__Jip3 = 0.0020202000000000002 * (1.0 - var_chaste_interface__IP3__u) * (-var_chaste_interface__intracellular_ions__cass + var_chaste_interface__intracellular_ions__cajsr) * var_chaste_interface__intracellular_ions__cass / (1.0 + 9090.9090909090901 * var_chaste_interface__intracellular_ions__cass); // millimolar_per_millisecond
        const double var_SERCA__dkmplb = 0.00017000000000000001 * var_CaMK__CaMKa / (0.14999999999999999 + var_CaMK__CaMKa); // dimensionless
        const double var_SERCA__dqupcamk = 0.75 * var_CaMK__CaMKa / (0.14999999999999999 + var_CaMK__CaMKa); // dimensionless
        const double var_SERCA__Jup1 = -6.9999999999999994e-5 * var_chaste_interface__intracellular_ions__cansr + 0.00020000000000000001 * (1.0 + var_SERCA__dqupcamk) / (1.0 + (0.00027999999999999998 - var_SERCA__dkmplb) / var_chaste_interface__intracellular_ions__casl); // millimolar_per_millisecond
        const double var_SERCA__Jup2 = -0.00027999999999999998 * var_chaste_interface__intracellular_ions__cansr + 0.0025999999999999999 * (1.0 + var_SERCA__dqupcamk) / (1.0 + (0.00027999999999999998 - var_SERCA__dkmplb) / var_chaste_interface__intracellular_ions__cai); // millimolar_per_millisecond
        const double var_diff__Jdiff = 5.0 * var_chaste_interface__intracellular_ions__cass - 5.0 * var_chaste_interface__intracellular_ions__casl; // millimolar_per_millisecond
        const double var_diff__JgapK = 0.083333333333333329 * var_chaste_interface__intracellular_ions__ksl - 0.083333333333333329 * var_chaste_interface__intracellular_ions__ki; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_intracellular_ions__ki = 0.25 * var_diff__JgapK; // millimolar / millisecond
        const double var_diff__JdiffK = 5.0 * var_chaste_interface__intracellular_ions__kss - 5.0 * var_chaste_interface__intracellular_ions__ksl; // millimolar_per_millisecond
        const double var_INaCa_i__h4_i = 1.0 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * var_chaste_interface__intracellular_ions__nasl) * var_chaste_interface__intracellular_ions__nasl; // dimensionless
        const double var_INaCa_i__k6_i = 1500000.0 * var_chaste_interface__intracellular_ions__casl / var_INaCa_i__h4_i; // dimensionless
        const double var_INaK__b3 = 5.7707741857267899e-10 / (1.5889281507656066 + 0.0034246575342465752 * var_chaste_interface__intracellular_ions__ksl + 0.004464285714285714 * var_chaste_interface__intracellular_ions__nasl); // dimensionless
        const double var_diff__JgapNa = 0.083333333333333329 * var_chaste_interface__intracellular_ions__nasl - 0.083333333333333329 * var_chaste_interface__intracellular_ions__nai; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_intracellular_ions__nai = 0.25 * var_diff__JgapNa; // millimolar / millisecond
        const double var_INaCa_i__h4_ss = 1.0 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * var_chaste_interface__intracellular_ions__nass) * var_chaste_interface__intracellular_ions__nass; // dimensionless
        const double var_INaCa_i__k6_ss = 1500000.0 * var_chaste_interface__intracellular_ions__cass / var_INaCa_i__h4_ss; // dimensionless
        const double var_diff__JdiffNa = 5.0 * var_chaste_interface__intracellular_ions__nass - 5.0 * var_chaste_interface__intracellular_ions__nasl; // millimolar_per_millisecond
        const double var_membrane__Istim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time) / HeartConfig::Instance()->GetCapacitance(); // microA_per_microF
        const double var_ICaL__Afcaf = _lt_0_row[0]; // dimensionless
        const double var_ICaL__Afcas = 1.0 - var_ICaL__Afcaf; // dimensionless
        const double var_ICaL__fca = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcaf + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__fcap = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcafp + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_IKr__Axrf = _lt_0_row[1]; // dimensionless
        const double var_ICaL__ICaK = 0.00035740000000000001 * (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(mParameters[4] * mParameters[14] / mParameters[3])) ? (-9.9999999999999995e-8 * (-0.75 * mParameters[1] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * (-0.75 * mParameters[1] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(9.9999999999999995e-8)) + 9.9999999999999995e-8 * (-0.75 * mParameters[1] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8))) * (9.9999999999999995e-8 * mParameters[4] * mParameters[14] / mParameters[3] + var_chaste_interface__membrane__v) * mParameters[3] / (mParameters[4] * mParameters[14])) : (pow(mParameters[3], 2) * (-0.75 * mParameters[1] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * mParameters[4] * mParameters[14]))) * mParameters[5] * var_chaste_interface__ICaL__d + 0.00035740000000000001 * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(mParameters[4] * mParameters[14] / mParameters[3])) ? (-9.9999999999999995e-8 * (-0.75 * mParameters[1] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * (-0.75 * mParameters[1] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(9.9999999999999995e-8)) + 9.9999999999999995e-8 * (-0.75 * mParameters[1] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8))) * (9.9999999999999995e-8 * mParameters[4] * mParameters[14] / mParameters[3] + var_chaste_interface__membrane__v) * mParameters[3] / (mParameters[4] * mParameters[14])) : (pow(mParameters[3], 2) * (-0.75 * mParameters[1] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * mParameters[4] * mParameters[14]))) * var_ICaL__PCap * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ions__kss = -var_diff__JdiffK - 126.4808362369338 * var_ICaL__ICaK / mParameters[3]; // millimolar / millisecond
        const double var_ICaL__ICaL = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * ((fabs(var_chaste_interface__membrane__v) < 4.9999999999999998e-8 * fabs(mParameters[4] * mParameters[14] / mParameters[3])) ? (-1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * mParameters[4] * mParameters[14] / mParameters[3] + var_chaste_interface__membrane__v) * (1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__cass * exp(9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(9.9999999999999995e-8)) + 1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[3] / (mParameters[4] * mParameters[14])) : (4.0 * pow(mParameters[3], 2) * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__cass * exp(2.0 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(2.0 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * mParameters[4] * mParameters[14]))) * mParameters[5] * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * ((fabs(var_chaste_interface__membrane__v) < 4.9999999999999998e-8 * fabs(mParameters[4] * mParameters[14] / mParameters[3])) ? (-1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * mParameters[4] * mParameters[14] / mParameters[3] + var_chaste_interface__membrane__v) * (1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__cass * exp(9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(9.9999999999999995e-8)) + 1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[3] / (mParameters[4] * mParameters[14])) : (4.0 * pow(mParameters[3], 2) * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__cass * exp(2.0 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(2.0 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * mParameters[4] * mParameters[14]))) * var_ICaL__PCap * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaNa = 0.00125 * (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(mParameters[4] * mParameters[14] / mParameters[3])) ? (-9.9999999999999995e-8 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(9.9999999999999995e-8)) + 9.9999999999999995e-8 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8))) * (9.9999999999999995e-8 * mParameters[4] * mParameters[14] / mParameters[3] + var_chaste_interface__membrane__v) * mParameters[3] / (mParameters[4] * mParameters[14])) : (pow(mParameters[3], 2) * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * mParameters[4] * mParameters[14]))) * mParameters[5] * var_chaste_interface__ICaL__d + 0.00125 * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(mParameters[4] * mParameters[14] / mParameters[3])) ? (-9.9999999999999995e-8 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(9.9999999999999995e-8)) + 9.9999999999999995e-8 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8))) * (9.9999999999999995e-8 * mParameters[4] * mParameters[14] / mParameters[3] + var_chaste_interface__membrane__v) * mParameters[3] / (mParameters[4] * mParameters[14])) : (pow(mParameters[3], 2) * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * mParameters[4] * mParameters[14]))) * var_ICaL__PCap * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICab__ICab = ((fabs(var_chaste_interface__membrane__v) < 4.9999999999999998e-8 * fabs(mParameters[4] * mParameters[14] / mParameters[3])) ? (-4.9999999999999992e-15 * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__casl * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * mParameters[4] * mParameters[14] / mParameters[3] + var_chaste_interface__membrane__v) * (4.9999999999999992e-15 * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__casl * exp(9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(9.9999999999999995e-8)) + 4.9999999999999992e-15 * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__casl * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[3] / (mParameters[4] * mParameters[14])) : (9.9999999999999995e-8 * pow(mParameters[3], 2) * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__casl * exp(2.0 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(2.0 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * mParameters[4] * mParameters[14]))); // microA_per_microF
        const double var_INaCa_i__hca = exp(0.16700000000000001 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14])); // dimensionless
        const double var_INaCa_i__hna = exp(0.52239999999999998 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14])); // dimensionless
        const double var_INaCa_i__h1_i = 1.0 + 0.011348161597821153 * (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nasl; // dimensionless
        const double var_INaCa_i__h1_ss = 1.0 + 0.011348161597821153 * (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nass; // dimensionless
        const double var_INaCa_i__h2_i = 0.011348161597821153 * var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nasl / var_INaCa_i__h1_i; // dimensionless
        const double var_INaCa_i__h2_ss = 0.011348161597821153 * var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__h1_ss; // dimensionless
        const double var_INaCa_i__h7_i = 1.0 + 0.011348161597821153 * (1.0 + 1 / var_INaCa_i__hna) * mParameters[2]; // dimensionless
        const double var_INaCa_i__h7_ss = 1.0 + 0.011348161597821153 * (1.0 + 1 / var_INaCa_i__hna) * mParameters[2]; // dimensionless
        const double var_INaCa_i__h8_i = 0.011348161597821153 * mParameters[2] / (var_INaCa_i__h7_i * var_INaCa_i__hna); // dimensionless
        const double var_INaCa_i__h8_ss = 0.011348161597821153 * mParameters[2] / (var_INaCa_i__h7_ss * var_INaCa_i__hna); // dimensionless
        const double var_INaCa_i__k3pp_i = 5000.0 * var_INaCa_i__h8_i; // dimensionless
        const double var_INaCa_i__k3_i = 60000.0 / var_INaCa_i__h7_i + var_INaCa_i__k3pp_i; // dimensionless
        const double var_INaCa_i__k3pp_ss = 5000.0 * var_INaCa_i__h8_ss; // dimensionless
        const double var_INaCa_i__k3_ss = 60000.0 / var_INaCa_i__h7_ss + var_INaCa_i__k3pp_ss; // dimensionless
        const double var_INaCa_i__k4pp_i = 5000.0 * var_INaCa_i__h2_i; // dimensionless
        const double var_INaCa_i__k4_i = 60000.0 / (var_INaCa_i__h1_i * var_INaCa_i__hca) + var_INaCa_i__k4pp_i; // dimensionless
        const double var_INaCa_i__k4pp_ss = 5000.0 * var_INaCa_i__h2_ss; // dimensionless
        const double var_INaCa_i__k4_ss = 60000.0 / (var_INaCa_i__h1_ss * var_INaCa_i__hca) + var_INaCa_i__k4pp_ss; // dimensionless
        const double var_INaCa_i__k7_i = 800.0 * pow(var_chaste_interface__intracellular_ions__nasl, 2) * var_INaCa_i__h2_i / var_INaCa_i__h4_i; // dimensionless
        const double var_INaCa_i__k7_ss = 800.0 * pow(var_chaste_interface__intracellular_ions__nass, 2) * var_INaCa_i__h2_ss / var_INaCa_i__h4_ss; // dimensionless
        const double var_INaCa_i__k8_i = 800.0 * pow(mParameters[2], 2) * var_INaCa_i__h8_i / var_INaCa_i__h10_i; // dimensionless
        const double var_INaCa_i__k8_ss = 800.0 * pow(mParameters[2], 2) * var_INaCa_i__h8_ss / var_INaCa_i__h10_ss; // dimensionless
        const double var_INaCa_i__x1_i = 5000.0 * (5000.0 + var_INaCa_i__k3_i) * var_INaCa_i__k7_i + 5000.0 * (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k4_i; // dimensionless
        const double var_INaCa_i__x1_ss = 5000.0 * (5000.0 + var_INaCa_i__k3_ss) * var_INaCa_i__k7_ss + 5000.0 * (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k4_ss; // dimensionless
        const double var_INaCa_i__x2_i = (5000.0 + var_INaCa_i__k4_i) * var_INaCa_i__k1_i * var_INaCa_i__k7_i + (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k4_i * var_INaCa_i__k6_i; // dimensionless
        const double var_INaCa_i__x2_ss = (5000.0 + var_INaCa_i__k4_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k7_ss + (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k4_ss * var_INaCa_i__k6_ss; // dimensionless
        const double var_INaCa_i__x3_i = (5000.0 + var_INaCa_i__k3_i) * var_INaCa_i__k6_i * var_INaCa_i__k8_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k1_i * var_INaCa_i__k3_i; // dimensionless
        const double var_INaCa_i__x3_ss = (5000.0 + var_INaCa_i__k3_ss) * var_INaCa_i__k6_ss * var_INaCa_i__k8_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k3_ss; // dimensionless
        const double var_INaCa_i__x4_i = 5000.0 * (5000.0 + var_INaCa_i__k4_i) * var_INaCa_i__k8_i + 5000.0 * (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k3_i; // dimensionless
        const double var_INaCa_i__E1_i = var_INaCa_i__x1_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E2_i = var_INaCa_i__x2_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__x4_ss = 5000.0 * (5000.0 + var_INaCa_i__k4_ss) * var_INaCa_i__k8_ss + 5000.0 * (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k3_ss; // dimensionless
        const double var_INaCa_i__E1_ss = var_INaCa_i__x1_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E2_ss = var_INaCa_i__x2_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaK__Knai = 9.0730000000000004 * exp(-0.051666666666666666 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14])); // millimolar
        const double var_INaK__Knao = 27.780000000000001 * exp(0.38500000000000001 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14])); // millimolar
        const double var_INaK__a1 = 949.5 * pow(var_chaste_interface__intracellular_ions__nasl, 3) / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__nasl / var_INaK__Knai), 3) + 4.0 * pow((0.5 + var_chaste_interface__intracellular_ions__ksl), 2)) * pow(var_INaK__Knai, 3)); // dimensionless
        const double var_INaK__a3 = 14800.411886344058 * pow(mParameters[1], 2) / (-1.0 + pow((1.0 + mParameters[2] / var_INaK__Knao), 3) + 7.7937924625297832 * pow((0.35820000000000002 + mParameters[1]), 2)); // dimensionless
        const double var_INaK__b2 = 39.399999999999999 * pow(mParameters[2], 3) / ((-1.0 + pow((1.0 + mParameters[2] / var_INaK__Knao), 3) + 7.7937924625297832 * pow((0.35820000000000002 + mParameters[1]), 2)) * pow(var_INaK__Knao, 3)); // dimensionless
        const double var_INaK__b4 = 160.0 * pow(var_chaste_interface__intracellular_ions__ksl, 2) / (-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__nasl / var_INaK__Knai), 3) + 4.0 * pow((0.5 + var_chaste_interface__intracellular_ions__ksl), 2)); // dimensionless
        const double var_INaK__x1 = 439120.79239156016 * var_INaK__a1 + 687.20000000000005 * var_INaK__a1 * var_INaK__b3 + 687.20000000000005 * var_INaK__b3 * var_INaK__b4 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__x2 = 687.20000000000005 * var_INaK__a1 * var_INaK__a3 + 696.32000000000005 * var_INaK__a3 * var_INaK__b4 + 9.120000000000001 * var_INaK__b2 * var_INaK__b4; // dimensionless
        const double var_INaK__x3 = 444948.47229058668 * var_INaK__a3 + 5827.6798990265261 * var_INaK__b2 + 9.120000000000001 * var_INaK__b2 * var_INaK__b3; // dimensionless
        const double var_INaK__x4 = 638.99998892834708 * var_INaK__a1 * var_INaK__a3 + 638.99998892834708 * var_INaK__a1 * var_INaK__b2 + var_INaK__a1 * var_INaK__b2 * var_INaK__b3 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INab__INab = ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(mParameters[4] * mParameters[14] / mParameters[3])) ? (-9.3749999999999983e-17 * (-mParameters[2] + var_chaste_interface__intracellular_ions__nasl * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * mParameters[4] * mParameters[14] / mParameters[3] + var_chaste_interface__membrane__v) * (9.3749999999999983e-17 * (-mParameters[2] + var_chaste_interface__intracellular_ions__nasl * exp(9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(9.9999999999999995e-8)) + 9.3749999999999983e-17 * (-mParameters[2] + var_chaste_interface__intracellular_ions__nasl * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[3] / (mParameters[4] * mParameters[14])) : (9.3749999999999992e-10 * pow(mParameters[3], 2) * (-mParameters[2] + var_chaste_interface__intracellular_ions__nasl * exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * mParameters[4] * mParameters[14]))); // microA_per_microF
        const double var_INaCa_i__INaCa_i = 0.00076567200000000001 * (10000.0 * var_INaCa_i__E2_i - var_INaCa_i__E2_i * var_INaCa_i__k3pp_i - 2.0 * var_INaCa_i__E1_i * var_INaCa_i__k1_i - 3.0 * var_INaCa_i__E1_i * var_INaCa_i__k8_i + var_INaCa_i__k4pp_i * var_INaCa_i__x3_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i) + 3.0 * var_INaCa_i__k7_i * var_INaCa_i__x4_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i)) / (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__intracellular_ions__casl, 2)); // microA_per_microF
        const double var_INaCa_i__INaCa_ss = 0.000191418 * (10000.0 * var_INaCa_i__E2_ss - var_INaCa_i__E2_ss * var_INaCa_i__k3pp_ss - 2.0 * var_INaCa_i__E1_ss * var_INaCa_i__k1_ss - 3.0 * var_INaCa_i__E1_ss * var_INaCa_i__k8_ss + var_INaCa_i__k4pp_ss * var_INaCa_i__x3_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss) + 3.0 * var_INaCa_i__k7_ss * var_INaCa_i__x4_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss)) / (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__intracellular_ions__cass, 2)); // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ions__nass = -var_diff__JdiffNa + 126.4808362369338 * (-var_ICaL__ICaNa - 3.0 * var_INaCa_i__INaCa_ss) / mParameters[3]; // millimolar / millisecond
        const double var_INaK__INaK = 592.56652800000006 * var_INaK__x4 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4) + 97.461600000000004 * var_INaK__a3 * var_INaK__x1 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4) - 64.974400000000003 * var_INaK__a1 * var_INaK__x3 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4) - 97.461600000000004 * var_INaK__b3 * var_INaK__x2 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // microA_per_microF
        const double var_ICaT__ICaT = 0.075399999999999995 * (-0.5 * mParameters[4] * mParameters[14] * log(mParameters[0] / var_chaste_interface__intracellular_ions__casl) / mParameters[3] + var_chaste_interface__membrane__v) * var_chaste_interface__ICaT__b * var_chaste_interface__ICaT__g; // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ions__casl = (-var_diff__Jgap + 0.13333333333333333 * var_diff__Jdiff - 0.26666666666666666 * var_SERCA__Jup1 + 8.4320557491289208 * (-var_ICaT__ICaT - var_ICab__ICab - var_IpCa__IpCa + 2.0 * var_INaCa_i__INaCa_i) / mParameters[3]) / (1.0 + 2.9750000000000005e-5 / pow((0.0023800000000000002 + var_chaste_interface__intracellular_ions__casl), 2) + 1.75e-6 / pow((0.00050000000000000001 + var_chaste_interface__intracellular_ions__casl), 2)); // millimolar / millisecond
        const double var_reversal_potentials__EK = mParameters[4] * mParameters[14] * log(mParameters[1] / var_chaste_interface__intracellular_ions__ksl) / mParameters[3]; // millivolt
        const double var_IK1__IK1 = 1.000004299990755 * sqrt(mParameters[1]) * (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * mParameters[9] * var_chaste_interface__IK1__xk1 / (1.0 + exp(10.545454545454545 + 0.090909090909090912 * var_chaste_interface__membrane__v - 0.5 * mParameters[1])); // microA_per_microF
        const double var_IKr__IKr = 0.43033148291193518 * sqrt(mParameters[1]) * (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * ((1.0 - var_IKr__Axrf) * var_chaste_interface__IKr__xrs + var_IKr__Axrf * var_chaste_interface__IKr__xrf) * mParameters[11] / ((_lt_0_row[2]) * (_lt_0_row[3])); // microA_per_microF
        const double var_If__IfK = pow(var_chaste_interface__If__y, 2) * (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * mParameters[7]; // microA_per_microF
        const double var_Isus__Isus = 0.030099999999999998 * (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) / (_lt_0_row[4]); // microA_per_microF
        const double var_Ito__Ito = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * mParameters[13] * var_chaste_interface__Ito__a * var_chaste_interface__Ito__i1 * var_chaste_interface__Ito__i2; // microA_per_microF
        const double var_reversal_potentials__ENa = mParameters[4] * mParameters[14] * log(mParameters[2] / var_chaste_interface__intracellular_ions__nasl) / mParameters[3]; // millivolt
        const double var_INa__INa = pow(var_chaste_interface__INa__m, 3) * (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - 1 / (1.0 + 0.14999999999999999 / var_CaMK__CaMKa)) * (0.010000000000000009 * var_chaste_interface__INa__hs + 0.98999999999999999 * var_chaste_interface__INa__hf) * var_chaste_interface__INa__j + (0.010000000000000009 * var_chaste_interface__INa__hsp + 0.98999999999999999 * var_chaste_interface__INa__hf) * var_chaste_interface__INa__jp / (1.0 + 0.14999999999999999 / var_CaMK__CaMKa)) * mParameters[6]; // microA_per_microF
        const double var_INaL__INaL = (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - 1 / (1.0 + 0.14999999999999999 / var_CaMK__CaMKa)) * var_chaste_interface__INaL__hL + var_chaste_interface__INaL__hLp / (1.0 + 0.14999999999999999 / var_CaMK__CaMKa)) * mParameters[10] * var_chaste_interface__INaL__mL; // microA_per_microF
        const double var_If__IfNa = pow(var_chaste_interface__If__y, 2) * (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * mParameters[8]; // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ions__nasl = -var_diff__JgapNa + 0.13333333333333333 * var_diff__JdiffNa + 16.864111498257842 * (-var_INa__INa - var_INaL__INaL - var_INab__INab - var_If__IfNa - 3.0 * var_INaCa_i__INaCa_i - 3.0 * var_INaK__INaK) / mParameters[3]; // millimolar / millisecond
        const double var_IKs__IKs = (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__intracellular_ions__casl), 1.3999999999999999))) * (-mParameters[4] * mParameters[14] * log((0.018329999999999999 * mParameters[2] + mParameters[1]) / (0.018329999999999999 * var_chaste_interface__intracellular_ions__nasl + var_chaste_interface__intracellular_ions__ksl)) / mParameters[3] + var_chaste_interface__membrane__v) * mParameters[12] * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2; // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ions__ksl = -var_diff__JgapK + 0.13333333333333333 * var_diff__JdiffK + 16.864111498257842 * (-var_IK1__IK1 - var_IKr__IKr - var_IKs__IKs - var_If__IfK - var_Isus__Isus - var_Ito__Ito - var_membrane__Istim + 2.0 * var_INaK__INaK) / mParameters[3]; // millimolar / millisecond
        const double d_dt_chaste_interface_var_intracellular_ions__cass = (-var_diff__Jdiff + 0.10000000000000001 * var_IP3__Jip3 + 0.10000000000000001 * var_chaste_interface__ryr__Jrel1 + 63.240418118466899 * (-var_ICaL__ICaL + 2.0 * var_INaCa_i__INaCa_ss) / mParameters[3]) / (1.0 + 0.00415599 / pow((0.0086999999999999994 + var_chaste_interface__intracellular_ions__cass), 2) + 1.7378249999999999e-5 / pow((0.00087000000000000001 + var_chaste_interface__intracellular_ions__cass), 2)); // millimolar / millisecond
        const double d_dt_chaste_interface_var_intracellular_ions__cai = (0.013333333333333334 * var_chaste_interface__ryr__Jrel2 + 0.25 * var_diff__Jgap - 0.066666666666666666 * var_SERCA__Jup2) / (1.0 + 1.575e-5 / pow((0.00050000000000000001 + var_chaste_interface__intracellular_ions__cai), 2) + 0.00026775000000000003 / pow((0.0023800000000000002 + var_chaste_interface__intracellular_ions__cai), 2)); // millimolar / millisecond
        const double d_dt_chaste_interface_var_ryr__Jrel1 = 0.5 * (1.0 + 0.0123 / var_chaste_interface__intracellular_ions__cajsr) * (-var_chaste_interface__ryr__Jrel1 + ((-0.10000000000000001 * var_IP3__Jip3 - 0.10000000000000001 * var_chaste_interface__ryr__Jrel1 + 63.240418118466899 * var_ICaL__ICaL / mParameters[3] + var_diff__Jdiff < 0) ? (15.0 * (1.0 + 1 / (1.0 + 3.7780199833600026e-5 / pow(var_CaMK__CaMKa, 8))) * (-var_diff__Jdiff + 0.10000000000000001 * var_IP3__Jip3 + 0.10000000000000001 * var_chaste_interface__ryr__Jrel1 - 63.240418118466899 * var_ICaL__ICaL / mParameters[3]) / (1.0 + 1 / pow(var_chaste_interface__intracellular_ions__cajsr, 8))) : (0))) / (1.0 + 1 / (1.0 + 3.7780199833600026e-5 / pow(var_CaMK__CaMKa, 8))); // millimolar_per_millisecond / millisecond
        const double d_dt_chaste_interface_var_ryr__Jrel2 = 0.16666666666666666 * (1.0 + 0.0123 / var_chaste_interface__intracellular_ions__cacsr) * (-var_chaste_interface__ryr__Jrel2 + ((0.013333333333333334 * var_chaste_interface__ryr__Jrel2 + 0.25 * var_diff__Jgap - 0.066666666666666666 * var_SERCA__Jup2 > 0) ? (91.0 * (1.0 + 1 / (1.0 + 3.7780199833600026e-5 / pow(var_CaMK__CaMKa, 8))) * (0.013333333333333334 * var_chaste_interface__ryr__Jrel2 + 0.25 * var_diff__Jgap - 0.066666666666666666 * var_SERCA__Jup2) / (1.0 + 1 / pow(var_chaste_interface__intracellular_ions__cacsr, 8))) : (0))) / (1.0 + 1 / (1.0 + 3.7780199833600026e-5 / pow(var_CaMK__CaMKa, 8))); // millimolar_per_millisecond / millisecond
        const double var_trans_flux__Jtr1 = 0.0083333333333333332 * var_chaste_interface__intracellular_ions__cansr - 0.0083333333333333332 * var_chaste_interface__intracellular_ions__cajsr; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_intracellular_ions__cajsr = (-var_IP3__Jip3 - var_chaste_interface__ryr__Jrel1 + var_trans_flux__Jtr1) / (1.0 + 0.95999999999999996 / pow((0.80000000000000004 + var_chaste_interface__intracellular_ions__cajsr), 2)); // millimolar / millisecond
        const double var_trans_flux__Jtr2 = 0.0083333333333333332 * var_chaste_interface__intracellular_ions__cansr - 0.0083333333333333332 * var_chaste_interface__intracellular_ions__cacsr; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_intracellular_ions__cacsr = (-var_chaste_interface__ryr__Jrel2 + var_trans_flux__Jtr2) / (1.0 + 2.3039999999999998 / pow((0.80000000000000004 + var_chaste_interface__intracellular_ions__cacsr), 2)); // millimolar / millisecond
        const double d_dt_chaste_interface_var_intracellular_ions__cansr = -0.050000000000000003 * var_trans_flux__Jtr1 - 0.20000000000000001 * var_trans_flux__Jtr2 + var_SERCA__Jup1 + var_SERCA__Jup2; // millimolar / millisecond
        
        rResidual[4] = rCurrentGuess[4] - rY[1] - mDt*d_dt_chaste_interface_var_intracellular_ions__cai;
        rResidual[0] = rCurrentGuess[0] - rY[2] - mDt*d_dt_chaste_interface_var_CaMK__CaMKt;
        rResidual[12] = rCurrentGuess[12] - rY[3] - mDt*d_dt_chaste_interface_var_intracellular_ions__nai;
        rResidual[13] = rCurrentGuess[13] - rY[4] - mDt*d_dt_chaste_interface_var_intracellular_ions__nasl;
        rResidual[14] = rCurrentGuess[14] - rY[5] - mDt*d_dt_chaste_interface_var_intracellular_ions__nass;
        rResidual[9] = rCurrentGuess[9] - rY[6] - mDt*d_dt_chaste_interface_var_intracellular_ions__ki;
        rResidual[11] = rCurrentGuess[11] - rY[7] - mDt*d_dt_chaste_interface_var_intracellular_ions__kss;
        rResidual[10] = rCurrentGuess[10] - rY[8] - mDt*d_dt_chaste_interface_var_intracellular_ions__ksl;
        rResidual[8] = rCurrentGuess[8] - rY[9] - mDt*d_dt_chaste_interface_var_intracellular_ions__cass;
        rResidual[7] = rCurrentGuess[7] - rY[10] - mDt*d_dt_chaste_interface_var_intracellular_ions__casl;
        rResidual[6] = rCurrentGuess[6] - rY[11] - mDt*d_dt_chaste_interface_var_intracellular_ions__cansr;
        rResidual[5] = rCurrentGuess[5] - rY[12] - mDt*d_dt_chaste_interface_var_intracellular_ions__cajsr;
        rResidual[3] = rCurrentGuess[3] - rY[13] - mDt*d_dt_chaste_interface_var_intracellular_ions__cacsr;
        rResidual[1] = rCurrentGuess[1] - rY[34] - mDt*d_dt_chaste_interface_var_ICaL__nca;
        rResidual[15] = rCurrentGuess[15] - rY[43] - mDt*d_dt_chaste_interface_var_ryr__Jrel1;
        rResidual[16] = rCurrentGuess[16] - rY[44] - mDt*d_dt_chaste_interface_var_ryr__Jrel2;
        rResidual[2] = rCurrentGuess[2] - rY[45] - mDt*d_dt_chaste_interface_var_IP3__u;
    }

    void CellTrovato2020FromCellMLBackwardEuler::ComputeJacobian(double var_chaste_interface__environment__time, const double rCurrentGuess[17], double rJacobian[17][17])
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -86.6814002878592
        double var_chaste_interface__INa__m = rY[14];
        // Units: dimensionless; Initial value: 0.00632661703915808
        double var_chaste_interface__INa__hf = rY[15];
        // Units: dimensionless; Initial value: 0.788611739889677
        double var_chaste_interface__INa__hs = rY[16];
        // Units: dimensionless; Initial value: 0.788545979951331
        double var_chaste_interface__INa__j = rY[17];
        // Units: dimensionless; Initial value: 0.790474358603666
        double var_chaste_interface__INa__hsp = rY[18];
        // Units: dimensionless; Initial value: 0.579693514309867
        double var_chaste_interface__INa__jp = rY[19];
        // Units: dimensionless; Initial value: 0.790947058236417
        double var_chaste_interface__INaL__mL = rY[20];
        // Units: dimensionless; Initial value: 0.000241925773627233
        double var_chaste_interface__INaL__hL = rY[21];
        // Units: dimensionless; Initial value: 0.463574582508218
        double var_chaste_interface__INaL__hLp = rY[22];
        // Units: dimensionless; Initial value: 0.240216198686475
        double var_chaste_interface__Ito__a = rY[23];
        // Units: dimensionless; Initial value: 0.000272851144435704
        double var_chaste_interface__Ito__i1 = rY[24];
        // Units: dimensionless; Initial value: 0.649604795721571
        double var_chaste_interface__Ito__i2 = rY[25];
        // Units: dimensionless; Initial value: 0.989965695822495
        double var_chaste_interface__ICaL__d = rY[26];
        // Units: dimensionless; Initial value: 6.97735089296892e-09
        double var_chaste_interface__ICaL__ff = rY[27];
        // Units: dimensionless; Initial value: 0.999999968230738
        double var_chaste_interface__ICaL__fs = rY[28];
        // Units: dimensionless; Initial value: 0.926692153319136
        double var_chaste_interface__ICaL__fcaf = rY[29];
        // Units: dimensionless; Initial value: 0.99999996819573
        double var_chaste_interface__ICaL__fcas = rY[30];
        // Units: dimensionless; Initial value: 0.999999905741936
        double var_chaste_interface__ICaL__jca = rY[31];
        // Units: dimensionless; Initial value: 0.999978907334662
        double var_chaste_interface__ICaL__ffp = rY[32];
        // Units: dimensionless; Initial value: 0.999999968365903
        double var_chaste_interface__ICaL__fcafp = rY[33];
        // Units: dimensionless; Initial value: 0.999999968278239
        double var_chaste_interface__ICaT__b = rY[35];
        // Units: dimensionless; Initial value: 0.000304250912559619
        double var_chaste_interface__ICaT__g = rY[36];
        // Units: dimensionless; Initial value: 0.994214357917907
        double var_chaste_interface__IKr__xrf = rY[37];
        // Units: dimensionless; Initial value: 0.000331691184084272
        double var_chaste_interface__IKr__xrs = rY[38];
        // Units: dimensionless; Initial value: 0.568716473334161
        double var_chaste_interface__IKs__xs1 = rY[39];
        // Units: dimensionless; Initial value: 0.191165248085394
        double var_chaste_interface__IKs__xs2 = rY[40];
        // Units: dimensionless; Initial value: 0.000222677365291219
        double var_chaste_interface__If__y = rY[41];
        // Units: dimensionless; Initial value: 0.233119011214908
        double var_chaste_interface__IK1__xk1 = rY[42];
        // Units: dimensionless; Initial value: 0.997084813729909
        
        // Lookup table indexing
        const bool _oob_0 = CellTrovato2020FromCellMLBackwardEuler_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__v);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = CellTrovato2020FromCellMLBackwardEuler_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__v);

        double var_chaste_interface__CaMK__CaMKt = rCurrentGuess[0];
        double var_chaste_interface__ICaL__nca = rCurrentGuess[1];
        double var_chaste_interface__IP3__u = rCurrentGuess[2];
        double var_chaste_interface__intracellular_ions__cacsr = rCurrentGuess[3];
        double var_chaste_interface__intracellular_ions__cai = rCurrentGuess[4];
        double var_chaste_interface__intracellular_ions__cajsr = rCurrentGuess[5];
        double var_chaste_interface__intracellular_ions__cansr = rCurrentGuess[6];
        double var_chaste_interface__intracellular_ions__casl = rCurrentGuess[7];
        double var_chaste_interface__intracellular_ions__cass = rCurrentGuess[8];
        double var_chaste_interface__intracellular_ions__ksl = rCurrentGuess[10];
        double var_chaste_interface__intracellular_ions__kss = rCurrentGuess[11];
        double var_chaste_interface__intracellular_ions__nasl = rCurrentGuess[13];
        double var_chaste_interface__intracellular_ions__nass = rCurrentGuess[14];
        double var_chaste_interface__ryr__Jrel1 = rCurrentGuess[15];
        double var_chaste_interface__ryr__Jrel2 = rCurrentGuess[16];
        
        const double var_x0 = 1.0 - var_chaste_interface__CaMK__CaMKt;
        const double var_x1 = 1 / var_chaste_interface__intracellular_ions__cass;
        const double var_x2 = 1.0 + 0.0015 * var_x1;
        const double var_x3 = 1 / var_x2;
        const double var_x4 = 0.050000000000000003 * var_x3;
        const double var_x5 = var_x0 * var_x4 + var_chaste_interface__CaMK__CaMKt;
        const double var_x6 = 0.0025000000000000005 * var_x3;
        const double var_x7 = 1 - var_x4;
        const double var_x8 = pow(var_chaste_interface__intracellular_ions__cass, (-2));
        const double var_x9 = var_x0 * var_x8 / pow(var_x2, 2);
        const double var_x10 = 1.0 + 0.002 * var_x1;
        const double var_x11 = 0.80000000000000004 + var_chaste_interface__intracellular_ions__cacsr;
        const double var_x12 = pow(var_x11, (-2));
        const double var_x13 = 1 / (1.0 + 2.3039999999999998 * var_x12);
        const double var_x14 = 0.0083333333333333332 * var_x13;
        const double var_x15 = -var_chaste_interface__ryr__Jrel2;
        const double var_x16 = 0.0083333333333333332 * var_chaste_interface__intracellular_ions__cansr;
        const double var_x17 = 0.14999999999999999 + var_x5;
        const double var_x18 = 1 / var_x17;
        const double var_x19 = var_x18 * var_x7;
        const double var_x20 = -1 + var_x4;
        const double var_x21 = var_x5 / pow(var_x17, 2);
        const double var_x22 = var_x20 * var_x21;
        const double var_x23 = 0.75 * var_x19 + 0.75 * var_x22;
        const double var_x24 = 1 / var_chaste_interface__intracellular_ions__cai;
        const double var_x25 = var_x18 * var_x5;
        const double var_x26 = 0.00027999999999999998 - 0.00017000000000000001 * var_x25;
        const double var_x27 = 1.0 + var_x24 * var_x26;
        const double var_x28 = 1 / var_x27;
        const double var_x29 = 0.00017333333333333334 * var_x28;
        const double var_x30 = 1.0 + 0.75 * var_x25;
        const double var_x31 = var_x30 * (-0.00017000000000000001 * var_x19 - 0.00017000000000000001 * var_x22);
        const double var_x32 = pow(var_x27, (-2));
        const double var_x33 = 0.00017333333333333334 * var_x32;
        const double var_x34 = var_x24 * var_x33;
        const double var_x35 = var_x31 * var_x34 - var_x23 * var_x29;
        const double var_x36 = 0.00050000000000000001 + var_chaste_interface__intracellular_ions__cai;
        const double var_x37 = 0.0023800000000000002 + var_chaste_interface__intracellular_ions__cai;
        const double var_x38 = 1.0 + 1.575e-5 / pow(var_x36, 2) + 0.00026775000000000003 / pow(var_x37, 2);
        const double var_x39 = 1 / var_x38;
        const double var_x40 = var_x39;
        const double var_x41 = var_x26 * var_x30;
        const double var_x42 = var_x41 / pow(var_chaste_interface__intracellular_ions__cai, 2);
        const double var_x43 = -0.020833333333333332 - var_x33 * var_x42;
        const double var_x44 = 1.8666666666666665e-5 * var_chaste_interface__intracellular_ions__cansr;
        const double var_x45 = var_x44 + 0.020833333333333332 * var_chaste_interface__intracellular_ions__casl + 0.013333333333333334 * var_chaste_interface__ryr__Jrel2 - 0.020833333333333332 * var_chaste_interface__intracellular_ions__cai - var_x29 * var_x30;
        const double var_x46 = var_x18 * var_x9;
        const double var_x47 = var_x21 * var_x9;
        const double var_x48 = 5.6250000000000005e-5 * var_x46 - 5.6250000000000005e-5 * var_x47;
        const double var_x49 = var_x30 * (1.2750000000000002e-8 * var_x47 - 1.2750000000000002e-8 * var_x46);
        const double var_x50 = var_x34 * var_x49 - var_x29 * var_x48;
        const double var_x51 = 0.80000000000000004 + var_chaste_interface__intracellular_ions__cajsr;
        const double var_x52 = 1.0 + 0.95999999999999996 / pow(var_x51, 2);
        const double var_x53 = 1 / var_x52;
        const double var_x54 = 1 / (1.0 + 9090.9090909090901 * var_chaste_interface__intracellular_ions__cass);
        const double var_x55 = -var_chaste_interface__intracellular_ions__cass + var_chaste_interface__intracellular_ions__cajsr;
        const double var_x56 = var_x55 * var_chaste_interface__intracellular_ions__cass;
        const double var_x57 = var_x54 * var_x56;
        const double var_x58 = 1.0 - var_chaste_interface__IP3__u;
        const double var_x59 = var_x54 * var_x58;
        const double var_x60 = 0.0020202000000000002 * var_x59;
        const double var_x61 = var_x60 * var_chaste_interface__intracellular_ions__cass;
        const double var_x62 = var_x53;
        const double var_x63 = -var_chaste_interface__ryr__Jrel1;
        const double var_x64 = var_x56 * var_x58 / pow((0.00011 + var_chaste_interface__intracellular_ions__cass), 2);
        const double var_x65 = 0.0025999999999999999 * var_x28;
        const double var_x66 = 1 / var_chaste_interface__intracellular_ions__casl;
        const double var_x67 = 1.0 + var_x26 * var_x66;
        const double var_x68 = 1 / var_x67;
        const double var_x69 = 0.00020000000000000001 * var_x68;
        const double var_x70 = 0.0025999999999999999 * var_x32;
        const double var_x71 = var_x24 * var_x70;
        const double var_x72 = pow(var_x67, (-2));
        const double var_x73 = 0.00020000000000000001 * var_x72;
        const double var_x74 = var_x66 * var_x73;
        const double var_x75 = pow(var_chaste_interface__intracellular_ions__casl, (-2));
        const double var_x76 = var_x41 * var_x75;
        const double var_x77 = 5.333333333333334e-5 * var_x68;
        const double var_x78 = 5.333333333333334e-5 * var_x72;
        const double var_x79 = var_x66 * var_x78;
        const double var_x80 = 0.0023800000000000002 + var_chaste_interface__intracellular_ions__casl;
        const double var_x81 = 0.00050000000000000001 + var_chaste_interface__intracellular_ions__casl;
        const double var_x82 = pow(var_x81, (-2));
        const double var_x83 = 1.0 + 2.9750000000000005e-5 / pow(var_x80, 2) + 1.75e-6 * var_x82;
        const double var_x84 = 1 / var_x83;
        const double var_x85 = var_x84;
        const double var_x86 = exp(-9.9999999999999995e-8);
        const double var_x87 = 1 / (-1.0 + var_x86);
        const double var_x88 = 4.9999999999999992e-15 * mParameters[3];
        const double var_x89 = var_x87 * var_x88;
        const double var_x90 = var_x86 * var_x89;
        const double var_x91 = exp(9.9999999999999995e-8);
        const double var_x92 = 1 / (-1.0 + var_x91);
        const double var_x93 = var_x88 * var_x92;
        const double var_x94 = 1 / mParameters[3];
        const double var_x95 = var_x94 * mParameters[4] * mParameters[14];
        const double var_x96 = 1 / mParameters[4];
        const double var_x97 = 1 / mParameters[14];
        const double var_x98 = var_x96 * var_x97 * mParameters[3];
        const double var_x99 = 10000000.0 * var_x98 * (4.9999999999999998e-8 * var_x95 + var_chaste_interface__membrane__v);
        const double var_x100 = fabs(var_chaste_interface__membrane__v);
        const double var_x101 = fabs(var_x95);
        const double var_x102 = 4.9999999999999998e-8 * var_x101;
        const double var_x103 = var_x100 < var_x102;
        const double var_x104 = var_x98 * var_chaste_interface__membrane__v;
        const double var_x105 = exp(2.0 * var_x104);
        const double var_x106 = var_x96 * var_x97 * pow(mParameters[3], 2) * var_chaste_interface__membrane__v;
        const double var_x107 = var_x106 / (-1.0 + var_x105);
        const double var_x108 = 9.9999999999999995e-8 * var_x107;
        const double var_x109 = 0.00050000000000000001 / var_x81;
        const double var_x110 = exp(0.52239999999999998 * var_x104);
        const double var_x111 = 1 / var_x110;
        const double var_x112 = 1 / (1.0 + 0.011348161597821153 * (1.0 + var_x111) * mParameters[2]);
        const double var_x113 = var_x111 * var_x112;
        const double var_x114 = var_x113 * mParameters[2];
        const double var_x115 = 56.740807989105761 * var_x114;
        const double var_x116 = var_x115 + 60000.0 * var_x112;
        const double var_x117 = 1 / (13.5 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * mParameters[2]) * mParameters[2]);
        const double var_x118 = var_x117 * mParameters[0];
        const double var_x119 = 1500000.0 * var_x118;
        const double var_x120 = pow(mParameters[2], 3);
        const double var_x121 = var_x117 * var_x120;
        const double var_x122 = var_x113 * var_x121;
        const double var_x123 = var_x119 + 9.0785292782569211 * var_x122;
        const double var_x124 = var_x116 * var_x123;
        const double var_x125 = 0.00036716666666666668 * var_x124;
        const double var_x126 = 1.0 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * var_chaste_interface__intracellular_ions__nasl) * var_chaste_interface__intracellular_ions__nasl;
        const double var_x127 = 1 / var_x126;
        const double var_x128 = 1500000.0 * var_x127;
        const double var_x129 = var_x128 * var_chaste_interface__intracellular_ions__casl;
        const double var_x130 = pow(var_chaste_interface__intracellular_ions__nasl, 3);
        const double var_x131 = 0.011348161597821153 + 0.011348161597821153 * var_x110;
        const double var_x132 = 1.0 + var_x131 * var_chaste_interface__intracellular_ions__nasl;
        const double var_x133 = 1 / var_x132;
        const double var_x134 = var_x110 * var_x133;
        const double var_x135 = var_x127 * var_x134;
        const double var_x136 = var_x130 * var_x135;
        const double var_x137 = var_x129 + 9.0785292782569211 * var_x136;
        const double var_x138 = 1 / exp(0.16700000000000001 * var_x104);
        const double var_x139 = var_x133 * var_x138;
        const double var_x140 = 56.740807989105761 * var_x134;
        const double var_x141 = var_x140 * var_chaste_interface__intracellular_ions__nasl;
        const double var_x142 = var_x141 + 60000.0 * var_x139;
        const double var_x143 = var_x137 * var_x142;
        const double var_x144 = var_x123 * var_x142;
        const double var_x145 = var_x127 * var_x144;
        const double var_x146 = var_x116 * var_x118;
        const double var_x147 = 0.11015000000000001 * var_x146;
        const double var_x148 = 5000.0 + var_x142;
        const double var_x149 = var_x122 * var_x148;
        const double var_x150 = 5000.0 + var_x116;
        const double var_x151 = var_x136 * var_x150;
        const double var_x152 = var_x122 * var_x150;
        const double var_x153 = var_x127 * var_x152;
        const double var_x154 = var_x153 * var_chaste_interface__intracellular_ions__casl;
        const double var_x155 = var_x118 * var_x148;
        const double var_x156 = var_x136 * var_x155;
        const double var_x157 = pow((var_x125 + var_x154 + var_x156 + 0.0033333333333333331 * var_x149 + 0.0033333333333333331 * var_x151 + 0.00036716666666666668 * var_x143 + var_x137 * var_x147 + 0.11015000000000001 * var_x145 * var_chaste_interface__intracellular_ions__casl), (-2));
        const double var_x158 = 283704.03994552878 * var_x134;
        const double var_x159 = 300000000.0 * var_x139 + var_x158 * var_chaste_interface__intracellular_ions__nasl;
        const double var_x160 = 2250000000000.0 * var_x146;
        const double var_x161 = var_x127 * var_x160;
        const double var_x162 = 13617793.917385383 * var_x153;
        const double var_x163 = var_x157 * (-var_x161 - var_x162 - var_x128 * var_x144 - var_x128 * var_x159);
        const double var_x164 = 13617793.917385383 * var_x156 + var_x129 * var_x144;
        const double var_x165 = 5.3924544444444452e-11 * var_x164;
        const double var_x166 = 5000.0 * var_x143 + 45392.646391284608 * var_x151;
        const double var_x167 = var_x116 * var_x119;
        const double var_x168 = 13617793.917385383 * var_x154 + var_x137 * var_x167;
        const double var_x169 = 5000.0 * var_x124;
        const double var_x170 = var_x169 + 45392.646391284608 * var_x149;
        const double var_x171 = 1 / (var_x164 + var_x166 + var_x168 + var_x170);
        const double var_x172 = var_x145 * var_x171;
        const double var_x173 = var_x141 * var_x171;
        const double var_x174 = 4500000000000.0 * var_x118;
        const double var_x175 = var_x127 * var_x171;
        const double var_x176 = var_x159 * var_x175;
        const double var_x177 = 1.6177363333333335e-8 * var_x118;
        const double var_x178 = var_x163 * var_x166;
        const double var_x179 = 3.0597222222222222e-13 * var_x163;
        const double var_x180 = var_x134 * var_x168 * var_chaste_interface__intracellular_ions__nasl;
        const double var_x181 = var_x114 * var_x164;
        const double var_x182 = 1.4686666666666667e-13 * var_x136 * var_x170;
        const double var_x183 = 40853381.752156146 * var_x122;
        const double var_x184 = 85111211.983658642 * var_x114;
        const double var_x185 = 1.4686666666666667e-13 * var_x122;
        const double var_x186 = 15000000000.0 * var_x172 + var_x163 * var_x165 + var_x163 * var_x182 + var_x173 * (var_x161 + var_x162) + var_x179 * var_x180 - var_x172 * var_x184 - var_x174 * var_x176 - var_x176 * var_x183 - var_x177 * var_x178 - var_x178 * var_x185 - var_x179 * var_x181;
        const double var_x187 = 1.0 + 2.2499999999999996e-8 * var_x75;
        const double var_x188 = 1 / var_x187;
        const double var_x189 = 0.001531344 * var_x188;
        const double var_x190 = 10000.0 * var_x171;
        const double var_x191 = 3000000.0 * var_x118;
        const double var_x192 = var_x166 * var_x171;
        const double var_x193 = var_x168 * var_x171;
        const double var_x194 = var_x115 * var_x171;
        const double var_x195 = var_x170 * var_x171;
        const double var_x196 = 27.235587834770765 * var_x195;
        const double var_x197 = 27.235587834770765 * var_x122;
        const double var_x198 = var_x136 * var_x196 + var_x141 * var_x193 + var_x164 * var_x190 - var_x164 * var_x194 - var_x191 * var_x192 - var_x192 * var_x197;
        const double var_x199 = var_x198 / (pow(var_x187, 2) * pow(var_chaste_interface__intracellular_ions__casl, 3));
        const double var_x200 = var_chaste_interface__ICaT__b * var_chaste_interface__ICaT__g;
        const double var_x201 = 8.4320557491289208 * var_x94;
        const double var_x202 = -0.34100000000000003 * mParameters[0];
        const double var_x203 = var_x89 * (var_x202 + var_x86 * var_chaste_interface__intracellular_ions__casl);
        const double var_x204 = pow(var_x132, (-2));
        const double var_x205 = -0.011348161597821153 - 0.011348161597821153 * var_x110;
        const double var_x206 = var_x138 * var_x205;
        const double var_x207 = var_x204 * var_x206;
        const double var_x208 = var_x110 * var_x205;
        const double var_x209 = 56.740807989105761 * var_x208;
        const double var_x210 = var_x204 * var_chaste_interface__intracellular_ions__nasl;
        const double var_x211 = var_x209 * var_x210;
        const double var_x212 = var_x140 + var_x211 + 60000.0 * var_x207;
        const double var_x213 = var_x123 * var_x129 * var_x212;
        const double var_x214 = (-0.066666666666666666 - 0.026666666666666668 * var_chaste_interface__intracellular_ions__nasl) / pow(var_x126, 2);
        const double var_x215 = var_x214 * var_chaste_interface__intracellular_ions__casl;
        const double var_x216 = 1500000.0 * var_x215;
        const double var_x217 = var_x144 * var_x216;
        const double var_x218 = pow(var_chaste_interface__intracellular_ions__nasl, 2);
        const double var_x219 = var_x135 * var_x218;
        const double var_x220 = 40853381.752156146 * var_x155 * var_x219;
        const double var_x221 = 13617793.917385383 * var_x118;
        const double var_x222 = var_x136 * var_x212 * var_x221;
        const double var_x223 = var_x134 * var_x214;
        const double var_x224 = var_x130 * var_x223;
        const double var_x225 = 13617793.917385383 * var_x155;
        const double var_x226 = var_x224 * var_x225;
        const double var_x227 = var_x204 * var_x208;
        const double var_x228 = var_x127 * var_x227;
        const double var_x229 = var_x130 * var_x228;
        const double var_x230 = var_x225 * var_x229;
        const double var_x231 = var_x213 + var_x217 + var_x220 + var_x222 + var_x226 + var_x230;
        const double var_x232 = 283704.03994552878 * var_x208;
        const double var_x233 = var_x137 * (var_x158 + 300000000.0 * var_x207 + var_x210 * var_x232);
        const double var_x234 = 9.0785292782569211 * var_x130;
        const double var_x235 = var_x216 + 27.235587834770765 * var_x219 + var_x223 * var_x234 + var_x228 * var_x234;
        const double var_x236 = var_x159 * var_x235;
        const double var_x237 = var_x167 * var_x235;
        const double var_x238 = 136177.93917385384 * var_x150;
        const double var_x239 = var_x219 * var_x238;
        const double var_x240 = 45392.646391284608 * var_x122;
        const double var_x241 = 45392.646391284608 * var_x150;
        const double var_x242 = var_x224 * var_x241;
        const double var_x243 = var_x229 * var_x241;
        const double var_x244 = 13617793.917385383 * var_x152;
        const double var_x245 = var_x215 * var_x244;
        const double var_x246 = var_x157 * (-var_x213 - var_x217 - var_x220 - var_x222 - var_x226 - var_x230 - var_x233 - var_x236 - var_x237 - var_x239 - var_x242 - var_x243 - var_x245 - var_x212 * var_x240);
        const double var_x247 = var_x171 * (var_x233 + var_x236 + var_x239 + var_x242 + var_x243);
        const double var_x248 = var_x166 * var_x246;
        const double var_x249 = 3.0597222222222222e-13 * var_x246;
        const double var_x250 = var_x130 * var_x175;
        const double var_x251 = 1236295.4078425223 * var_x112 * var_x121;
        const double var_x252 = var_x140 * var_x193 + var_x165 * var_x246 + var_x173 * (var_x237 + var_x245) + var_x180 * var_x249 + var_x182 * var_x246 + var_x190 * var_x231 + var_x193 * var_x211 + var_x196 * var_x224 - var_x177 * var_x248 - var_x181 * var_x249 - var_x185 * var_x248 - var_x191 * var_x247 - var_x194 * var_x231 - var_x197 * var_x247 + 81.706763504312292 * var_x195 * var_x219 + 27.235587834770765 * var_x170 * var_x227 * var_x250 + var_x133 * var_x212 * var_x250 * var_x251;
        const double var_x253 = 1.9999999999999999e-7 * mParameters[3];
        const double var_x254 = var_x253 * var_x87;
        const double var_x255 = var_x254 * (var_x202 + var_x86 * var_chaste_interface__intracellular_ions__cass);
        const double var_x256 = var_x253 * var_x92;
        const double var_x257 = -var_x255 + var_x99 * (var_x255 + var_x256 * (var_x202 + var_x91 * var_chaste_interface__intracellular_ions__cass));
        const double var_x258 = var_x202 + var_x105 * var_chaste_interface__intracellular_ions__cass;
        const double var_x259 = 4.0 * var_x107;
        const double var_x260 = var_x258 * var_x259;
        const double var_x261 = ((var_x103) ? (var_x257) : (var_x260));
        const double var_x262 = mParameters[5] * var_chaste_interface__ICaL__d;
        const double var_x263 = var_x261 * var_x262;
        const double var_x264 = 1.0 - var_chaste_interface__ICaL__nca;
        const double var_x265 = 0.40000000000000002 * var_chaste_interface__ICaL__fs;
        const double var_x266 = 0.59999999999999998 * var_chaste_interface__ICaL__ffp;
        const double var_x267 = _lt_0_row[40];
        const double var_x268 = 0.29999999999999999 + var_x267;
        const double var_x269 = (0.69999999999999996 - var_x267) * var_chaste_interface__ICaL__fcas;
        const double var_x270 = (var_x269 + var_x268 * var_chaste_interface__ICaL__fcafp) * var_chaste_interface__ICaL__jca;
        const double var_x271 = var_x264 * (var_x265 + var_x266) + var_x270 * var_chaste_interface__ICaL__nca;
        const double var_x272 = 1.0 + 0.14999999999999999 / var_x5;
        const double var_x273 = 1 / (pow(var_x272, 2) * pow(var_x5, 2));
        const double var_x274 = var_x20 * var_x273;
        const double var_x275 = var_x271 * var_x274;
        const double var_x276 = 0.16500000000000001 * var_x263 * var_x275;
        const double var_x277 = 0.14999999999999999 * var_x20;
        const double var_x278 = var_x273 * var_x277;
        const double var_x279 = 0.59999999999999998 * var_chaste_interface__ICaL__ff;
        const double var_x280 = (var_x269 + var_x268 * var_chaste_interface__ICaL__fcaf) * var_chaste_interface__ICaL__jca;
        const double var_x281 = var_x264 * (var_x265 + var_x279) + var_x280 * var_chaste_interface__ICaL__nca;
        const double var_x282 = var_x263 * var_x281;
        const double var_x283 = var_x278 * var_x282;
        const double var_x284 = 0.0086999999999999994 + var_chaste_interface__intracellular_ions__cass;
        const double var_x285 = 0.00087000000000000001 + var_chaste_interface__intracellular_ions__cass;
        const double var_x286 = 1.0 + 0.00415599 / pow(var_x284, 2) + 1.7378249999999999e-5 / pow(var_x285, 2);
        const double var_x287 = 1 / var_x286;
        const double var_x288 = 63.240418118466899 * var_x94;
        const double var_x289 = var_x287 * var_x288;
        const double var_x290 = 1 / var_x272;
        const double var_x291 = var_x290;
        const double var_x292 = var_x262 * (-1.0 + var_x291);
        const double var_x293 = -var_x265;
        const double var_x294 = var_x280 + var_x293 - var_x279;
        const double var_x295 = var_x261 * var_x294;
        const double var_x296 = var_x270 + var_x293 - var_x266;
        const double var_x297 = 1.1000000000000001 * var_x290;
        const double var_x298 = var_x263 * var_x296 * var_x297;
        const double var_x299 = 0.00020202000000000002 * var_x59;
        const double var_x300 = var_x299 * var_chaste_interface__intracellular_ions__cass;
        const double var_x301 = 1.0 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * var_chaste_interface__intracellular_ions__nass) * var_chaste_interface__intracellular_ions__nass;
        const double var_x302 = 1 / var_x301;
        const double var_x303 = 1500000.0 * var_x302;
        const double var_x304 = var_x303 * var_chaste_interface__intracellular_ions__cass;
        const double var_x305 = pow(var_chaste_interface__intracellular_ions__nass, 3);
        const double var_x306 = 1.0 + var_x131 * var_chaste_interface__intracellular_ions__nass;
        const double var_x307 = 1 / var_x306;
        const double var_x308 = var_x110 * var_x307;
        const double var_x309 = var_x302 * var_x308;
        const double var_x310 = var_x305 * var_x309;
        const double var_x311 = var_x304 + 9.0785292782569211 * var_x310;
        const double var_x312 = var_x138 * var_x307;
        const double var_x313 = 56.740807989105761 * var_x308;
        const double var_x314 = var_x313 * var_chaste_interface__intracellular_ions__nass;
        const double var_x315 = var_x314 + 60000.0 * var_x312;
        const double var_x316 = var_x311 * var_x315;
        const double var_x317 = var_x123 * var_x315;
        const double var_x318 = var_x302 * var_x317;
        const double var_x319 = 5000.0 + var_x315;
        const double var_x320 = var_x150 * var_x310;
        const double var_x321 = var_x152 * var_x302;
        const double var_x322 = var_x321 * var_chaste_interface__intracellular_ions__cass;
        const double var_x323 = var_x118 * var_x319;
        const double var_x324 = var_x310 * var_x323;
        const double var_x325 = pow((var_x125 + var_x322 + var_x324 + 0.0033333333333333331 * var_x320 + 0.00036716666666666668 * var_x316 + var_x147 * var_x311 + 0.0033333333333333331 * var_x122 * var_x319 + 0.11015000000000001 * var_x318 * var_chaste_interface__intracellular_ions__cass), (-2));
        const double var_x326 = 283704.03994552878 * var_x308;
        const double var_x327 = 300000000.0 * var_x312 + var_x326 * var_chaste_interface__intracellular_ions__nass;
        const double var_x328 = var_x160 * var_x302;
        const double var_x329 = 13617793.917385383 * var_x321;
        const double var_x330 = var_x325 * (-var_x328 - var_x329 - var_x303 * var_x317 - var_x303 * var_x327);
        const double var_x331 = 13617793.917385383 * var_x324 + var_x304 * var_x317;
        const double var_x332 = 5.3924544444444452e-11 * var_x331;
        const double var_x333 = 5000.0 * var_x316 + 45392.646391284608 * var_x320;
        const double var_x334 = 13617793.917385383 * var_x322 + var_x167 * var_x311;
        const double var_x335 = var_x169 + var_x240 * var_x319;
        const double var_x336 = 1 / (var_x331 + var_x333 + var_x334 + var_x335);
        const double var_x337 = var_x318 * var_x336;
        const double var_x338 = var_x314 * var_x336;
        const double var_x339 = var_x302 * var_x336;
        const double var_x340 = var_x327 * var_x339;
        const double var_x341 = var_x177 * var_x333;
        const double var_x342 = 3.0597222222222222e-13 * var_x330;
        const double var_x343 = var_x308 * var_x334 * var_chaste_interface__intracellular_ions__nass;
        const double var_x344 = var_x114 * var_x331;
        const double var_x345 = 1.4686666666666667e-13 * var_x310 * var_x335;
        const double var_x346 = var_x185 * var_x333;
        const double var_x347 = 15000000000.0 * var_x337 + var_x330 * var_x332 + var_x330 * var_x345 + var_x338 * (var_x328 + var_x329) + var_x342 * var_x343 - var_x174 * var_x340 - var_x183 * var_x340 - var_x184 * var_x337 - var_x330 * var_x341 - var_x330 * var_x346 - var_x342 * var_x344;
        const double var_x348 = 1.0 + 2.2499999999999996e-8 * var_x8;
        const double var_x349 = 1 / var_x348;
        const double var_x350 = 0.00038283600000000001 * var_x349;
        const double var_x351 = 10000.0 * var_x336;
        const double var_x352 = var_x191 * var_x336;
        const double var_x353 = var_x334 * var_x336;
        const double var_x354 = var_x115 * var_x336;
        const double var_x355 = var_x335 * var_x336;
        const double var_x356 = 27.235587834770765 * var_x355;
        const double var_x357 = var_x197 * var_x336;
        const double var_x358 = var_x310 * var_x356 + var_x314 * var_x353 + var_x331 * var_x351 - var_x331 * var_x354 - var_x333 * var_x352 - var_x333 * var_x357;
        const double var_x359 = var_x358 / (pow(var_x348, 2) * pow(var_chaste_interface__intracellular_ions__cass, 3));
        const double var_x360 = var_x254 * var_x86;
        const double var_x361 = ((var_x103) ? (-var_x360 + var_x99 * (var_x360 + var_x256 * var_x91)) : (var_x105 * var_x259));
        const double var_x362 = var_x271 * var_x297;
        const double var_x363 = var_x262 * var_x361 * var_x362;
        const double var_x364 = 1.1250000000000001e-5 * var_x9;
        const double var_x365 = var_x273 * var_x364;
        const double var_x366 = var_x282 * var_x365;
        const double var_x367 = var_x273 * var_x9;
        const double var_x368 = var_x271 * var_x367;
        const double var_x369 = 1.2375000000000001e-5 * var_x263 * var_x368;
        const double var_x370 = var_x299 * var_x55;
        const double var_x371 = -5.0 + var_x370 - var_x300 - 2.22222e-8 * var_x64;
        const double var_x372 = 1.0 - var_x291;
        const double var_x373 = var_x281 * var_x372;
        const double var_x374 = var_x262 * var_x373;
        const double var_x375 = var_x261 * var_x374;
        const double var_x376 = var_x263 * var_x362;
        const double var_x377 = 5.0 * var_chaste_interface__intracellular_ions__casl + 0.10000000000000001 * var_chaste_interface__ryr__Jrel1 - 5.0 * var_chaste_interface__intracellular_ions__cass + var_x370 * var_chaste_interface__intracellular_ions__cass;
        const double var_x378 = pow(var_x306, (-2));
        const double var_x379 = var_x206 * var_x378;
        const double var_x380 = var_x378 * var_chaste_interface__intracellular_ions__nass;
        const double var_x381 = var_x209 * var_x380;
        const double var_x382 = var_x313 + var_x381 + 60000.0 * var_x379;
        const double var_x383 = var_x123 * var_x304 * var_x382;
        const double var_x384 = (-0.066666666666666666 - 0.026666666666666668 * var_chaste_interface__intracellular_ions__nass) / pow(var_x301, 2);
        const double var_x385 = var_x384 * var_chaste_interface__intracellular_ions__cass;
        const double var_x386 = 1500000.0 * var_x385;
        const double var_x387 = var_x317 * var_x386;
        const double var_x388 = var_x309 * pow(var_chaste_interface__intracellular_ions__nass, 2);
        const double var_x389 = 40853381.752156146 * var_x323 * var_x388;
        const double var_x390 = var_x221 * var_x310 * var_x382;
        const double var_x391 = var_x308 * var_x384;
        const double var_x392 = var_x305 * var_x391;
        const double var_x393 = 13617793.917385383 * var_x323;
        const double var_x394 = var_x392 * var_x393;
        const double var_x395 = var_x208 * var_x378;
        const double var_x396 = var_x302 * var_x395;
        const double var_x397 = var_x305 * var_x393 * var_x396;
        const double var_x398 = var_x383 + var_x387 + var_x389 + var_x390 + var_x394 + var_x397;
        const double var_x399 = var_x311 * (var_x326 + 300000000.0 * var_x379 + var_x232 * var_x380);
        const double var_x400 = 9.0785292782569211 * var_x305;
        const double var_x401 = var_x386 + 27.235587834770765 * var_x388 + var_x391 * var_x400 + var_x396 * var_x400;
        const double var_x402 = var_x327 * var_x401;
        const double var_x403 = var_x167 * var_x401;
        const double var_x404 = var_x238 * var_x388;
        const double var_x405 = var_x241 * var_x305;
        const double var_x406 = var_x391 * var_x405;
        const double var_x407 = var_x396 * var_x405;
        const double var_x408 = var_x244 * var_x385;
        const double var_x409 = var_x325 * (-var_x383 - var_x387 - var_x389 - var_x390 - var_x394 - var_x397 - var_x399 - var_x402 - var_x403 - var_x404 - var_x406 - var_x407 - var_x408 - var_x240 * var_x382);
        const double var_x410 = var_x399 + var_x402 + var_x404 + var_x406 + var_x407;
        const double var_x411 = 3.0597222222222222e-13 * var_x409;
        const double var_x412 = var_x305 * var_x339;
        const double var_x413 = var_x313 * var_x353 + var_x332 * var_x409 + var_x338 * (var_x403 + var_x408) + var_x343 * var_x411 + var_x345 * var_x409 + var_x351 * var_x398 + var_x353 * var_x381 + var_x356 * var_x392 - var_x341 * var_x409 - var_x344 * var_x411 - var_x346 * var_x409 - var_x352 * var_x410 - var_x354 * var_x398 - var_x357 * var_x410 + 81.706763504312292 * var_x355 * var_x388 + 27.235587834770765 * var_x335 * var_x395 * var_x412 + var_x251 * var_x307 * var_x382 * var_x412;
        const double var_x414 = pow(var_x66, 1.3999999999999999);
        const double var_x415 = 1.0 + 6.4818210260626455e-7 * var_x414;
        const double var_x416 = 1 / (0.018329999999999999 * var_chaste_interface__intracellular_ions__nasl + var_chaste_interface__intracellular_ions__ksl);
        const double var_x417 = mParameters[12] * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2;
        const double var_x418 = exp(0.38500000000000001 * var_x104);
        const double var_x419 = 1 / (-1.0 + pow((1.0 + 0.035997120230381568 * mParameters[2] / var_x418), 3) + 7.7937924625297832 * pow((0.35820000000000002 + mParameters[1]), 2));
        const double var_x420 = var_x419 * pow(mParameters[1], 2);
        const double var_x421 = pow((0.5 + var_chaste_interface__intracellular_ions__ksl), 2);
        const double var_x422 = exp(-0.051666666666666666 * var_x104);
        const double var_x423 = 1 / var_x422;
        const double var_x424 = 1.0 + 0.11021712774165104 * var_x423 * var_chaste_interface__intracellular_ions__nasl;
        const double var_x425 = pow(var_x424, 3);
        const double var_x426 = pow((-0.25 + var_x421 + 0.25 * var_x425), (-2));
        const double var_x427 = var_x426 * (-4.0 - 8.0 * var_chaste_interface__intracellular_ions__ksl);
        const double var_x428 = pow(var_x422, (-3));
        const double var_x429 = var_x130 * var_x428;
        const double var_x430 = var_x427 * var_x429;
        const double var_x431 = var_x420 * var_x430;
        const double var_x432 = var_x120 * var_x419 / pow(var_x418, 3);
        const double var_x433 = 0.09330879953375748 * var_x430 * var_x432;
        const double var_x434 = pow((1 + 0.0028096208831939005 * var_chaste_interface__intracellular_ions__nasl + 0.0021553256090254577 * var_chaste_interface__intracellular_ions__ksl), (-2));
        const double var_x435 = 1 / (-1.0 + var_x425 + 4.0 * var_x421);
        const double var_x436 = var_x428 * var_x435;
        const double var_x437 = var_x130 * var_x436;
        const double var_x438 = var_x434 * var_x437;
        const double var_x439 = var_x432 * var_x438;
        const double var_x440 = 1.8288767722361083e-15 * var_x439;
        const double var_x441 = 1 / (1.5889281507656066 + 0.0034246575342465752 * var_chaste_interface__intracellular_ions__ksl + 0.004464285714285714 * var_chaste_interface__intracellular_ions__nasl);
        const double var_x442 = var_x432 * var_x441;
        const double var_x443 = 8.4266669949965062e-14 * var_x430 * var_x442;
        const double var_x444 = var_x435 * var_chaste_interface__intracellular_ions__ksl;
        const double var_x445 = var_x441 * var_x444;
        const double var_x446 = 3.3937789869608994e-10 * var_x432;
        const double var_x447 = pow(var_chaste_interface__intracellular_ions__ksl, 2);
        const double var_x448 = var_x435 * var_x447;
        const double var_x449 = var_x434 * var_x448;
        const double var_x450 = var_x432 * var_x449;
        const double var_x451 = var_x427 * var_x447;
        const double var_x452 = var_x442 * var_x451;
        const double var_x453 = 1.0605559334252811e-11 * var_x452 - 2.3017714043409702e-13 * var_x450 + var_x445 * var_x446;
        const double var_x454 = var_x433 + var_x443 + var_x453 - var_x440 + 751444.4931407267 * var_x431;
        const double var_x455 = var_x420 * var_x437;
        const double var_x456 = var_x441 * var_x448;
        const double var_x457 = var_x420 * var_x448;
        const double var_x458 = var_x432 * var_x448;
        const double var_x459 = 2.6817254812739919 * var_x458 + 1648931648.7518551 * var_x457;
        const double var_x460 = 6585420658.1002293 * var_x420 + 9.6722701128385645e-12 * var_x442 + 10.71014095526842 * var_x432;
        const double var_x461 = var_x432 * var_x437;
        const double var_x462 = var_x437 * var_x441;
        const double var_x463 = var_x432 * var_x462;
        const double var_x464 = 1.348266719199441e-12 * var_x463 + 1.4929407925401197 * var_x461;
        const double var_x465 = 6.3450816326903207e-5 * var_x456 + 5.041496472709802e-7 * var_x462 + 558246.7943749798 * var_x437;
        const double var_x466 = 1 / (var_x459 + var_x460 + var_x464 + var_x465 + 24953131.661984976 * var_x455 + var_x446 * var_x456);
        const double var_x467 = 1185.1330560000001 * var_x466;
        const double var_x468 = 8.6068818956382799e-8 * var_x449;
        const double var_x469 = 0.00012690163265380641 * var_x445;
        const double var_x470 = 6.8386140998302939e-10 * var_x438;
        const double var_x471 = var_x432 * var_x434;
        const double var_x472 = var_x427 * var_x441;
        const double var_x473 = 3.9656760204314505e-6 * var_x447 * var_x472;
        const double var_x474 = 34890.424648436237 * var_x430;
        const double var_x475 = 3297863297.5037103 * var_x420 * var_x444;
        const double var_x476 = 3.1509352954436263e-8 * var_x429 * var_x472;
        const double var_x477 = 5.3634509625479838 * var_x432 * var_x444;
        const double var_x478 = 103058228.04699095 * var_x420 * var_x451;
        const double var_x479 = 0.16760784257962449 * var_x432 * var_x451;
        const double var_x480 = var_x440 + var_x468 + var_x470 - var_x433 - var_x443 - var_x469 - var_x473 - var_x474 - var_x475 - var_x476 - var_x477 - var_x478 - var_x479 + 4.6035428086819405e-13 * var_x450 + 1.3120097004743531e-14 * var_x471 - 2.1211118668505621e-11 * var_x452 - 1559570.728874061 * var_x431 - 6.7875579739217989e-10 * var_x432 * var_x445;
        const double var_x481 = var_x432 * var_x456;
        const double var_x482 = pow((var_x420 + 0.25039124064514068 * var_x457 + 7.6555420442407695e-17 * var_x462 + 8.4770104046173956e-5 * var_x437 + 2.0473509426327076e-22 * var_x463 + 0.0037891477184972245 * var_x455 + 9.6350437764149725e-15 * var_x456 + 4.0722159152815902e-10 * var_x458 + 1.4687399051632995e-21 * var_x442 + 1.6263412029867345e-9 * var_x432 + 5.1534733514501733e-20 * var_x481 + 2.2670393738686469e-10 * var_x461), (-2));
        const double var_x483 = 1.6968894934804497e-10 * var_x481;
        const double var_x484 = var_x482 * (var_x464 + var_x483 + 12023111.890251627 * var_x455);
        const double var_x485 = 2.7327510406137971e-17 * var_x484;
        const double var_x486 = var_x459 + 12930019.771733347 * var_x455;
        const double var_x487 = var_x434 * var_x466;
        const double var_x488 = var_x486 * var_x487;
        const double var_x489 = var_x475 + var_x477 + var_x478 + var_x479 + 808126.23573333421 * var_x431;
        const double var_x490 = var_x441 * var_x466;
        const double var_x491 = 1.1248577707592603e-7 * var_x490;
        const double var_x492 = var_x453 + var_x469 + var_x473 + var_x474 + var_x476 - var_x468 - var_x470;
        const double var_x493 = var_x420 * var_x466;
        const double var_x494 = 2884943.6462042201 * var_x493;
        const double var_x495 = var_x480 * var_x482;
        const double var_x496 = var_x441 * var_x486;
        const double var_x497 = 2.5937646646697565e-27 * var_x496;
        const double var_x498 = var_x420 * (var_x465 + var_x483);
        const double var_x499 = 6.6522764776183441e-14 * var_x498;
        const double var_x500 = var_x95 / var_chaste_interface__intracellular_ions__ksl;
        const double var_x501 = pow(var_chaste_interface__If__y, 2);
        const double var_x502 = var_x460 * var_x466;
        const double var_x503 = var_x430 * var_x502;
        const double var_x504 = var_x437 * var_x460;
        const double var_x505 = 3.8093200840479037e-18 * var_x504;
        const double var_x506 = var_x416 * var_x417 * var_x95 * (-1.0 - 0.59999999999999998 / var_x415);
        const double var_x507 = var_x461 * var_x487;
        const double var_x508 = var_x500 * sqrt(mParameters[1]);
        const double var_x509 = _lt_0_row[1];
        const double var_x510 = 16.864111498257842 * var_x94;
        const double var_x511 = var_x218 * var_x436;
        const double var_x512 = var_x420 * var_x511;
        const double var_x513 = 4.4788223776203591 * var_x432 * var_x511;
        const double var_x514 = var_x426 * pow(var_x424, 2);
        const double var_x515 = var_x130 * var_x514 / pow(var_x422, 4);
        const double var_x516 = var_x420 * var_x515;
        const double var_x517 = 4.0448001575983228e-12 * var_x442 * var_x511;
        const double var_x518 = 2.3840715066649271e-15 * var_x439;
        const double var_x519 = 0.030852683632896775 * var_x432 * var_x515;
        const double var_x520 = 2.786289097871654e-14 * var_x442 * var_x515;
        const double var_x521 = var_x423 * var_x447 * var_x514;
        const double var_x522 = var_x442 * var_x521;
        const double var_x523 = -3.0005234378016216e-13 * var_x450 - 3.5067428637450051e-12 * var_x522;
        const double var_x524 = var_x513 + var_x517 + var_x523 - var_x518 - var_x519 - var_x520 + 36069335.67075488 * var_x512 - 248466.16107375509 * var_x516;
        const double var_x525 = 1.1219685328242758e-7 * var_x449;
        const double var_x526 = 1674740.3831249396 * var_x511;
        const double var_x527 = 8.9146219515644901e-10 * var_x438;
        const double var_x528 = 11536.567171311443 * var_x515;
        const double var_x529 = 1.5124489418129408e-6 * var_x441 * var_x511;
        const double var_x530 = 1.3112562615776865e-6 * var_x441 * var_x521;
        const double var_x531 = 1.0418611138907615e-8 * var_x441 * var_x515;
        const double var_x532 = 34076345.656450219 * var_x420 * var_x521;
        const double var_x533 = 0.055419764988303033 * var_x432 * var_x521;
        const double var_x534 = var_x518 + var_x519 + var_x520 + var_x525 + var_x527 + var_x528 + var_x530 + var_x531 + var_x532 + var_x533 - var_x513 - var_x517 - var_x526 - var_x529 + 6.0010468756032432e-13 * var_x450 + 7.0134857274900101e-12 * var_x522 + 1.7102983595469244e-14 * var_x471 + 515674.21873935661 * var_x516 - 74859394.985954925 * var_x512;
        const double var_x535 = -var_x532 - var_x533 + 38790059.315200046 * var_x512 - 267208.05766560155 * var_x516;
        const double var_x536 = var_x523 + var_x526 + var_x529 - var_x525 - var_x527 - var_x528 - var_x530 - var_x531;
        const double var_x537 = var_x482 * var_x534;
        const double var_x538 = var_x502 * var_x511;
        const double var_x539 = var_x502 * var_x515;
        const double var_x540 = -0.75 * mParameters[1];
        const double var_x541 = 0.75 * var_chaste_interface__intracellular_ions__kss;
        const double var_x542 = 9.9999999999999995e-8 * mParameters[3];
        const double var_x543 = var_x542 * var_x87;
        const double var_x544 = var_x543 * (var_x540 + var_x541 * var_x86);
        const double var_x545 = var_x542 * var_x92;
        const double var_x546 = 5000000.0 * var_x98 * (9.9999999999999995e-8 * var_x95 + var_chaste_interface__membrane__v);
        const double var_x547 = var_x100 < 9.9999999999999995e-8 * var_x101;
        const double var_x548 = exp(var_x104);
        const double var_x549 = var_x106 / (-1.0 + var_x548);
        const double var_x550 = ((var_x547) ? (-var_x544 + var_x546 * (var_x544 + var_x545 * (var_x540 + var_x541 * var_x91))) : (var_x549 * (var_x540 + var_x541 * var_x548)));
        const double var_x551 = var_x262 * var_x550;
        const double var_x552 = var_x274 * var_x281;
        const double var_x553 = 126.4808362369338 * var_x94;
        const double var_x554 = var_x262 * (0.00035740000000000001 - 0.00035740000000000001 * var_x290);
        const double var_x555 = var_x262 * var_x290;
        const double var_x556 = 0.00039314000000000005 * var_x555;
        const double var_x557 = var_x281 * var_x367;
        const double var_x558 = 7.4999999999999997e-8 * mParameters[3];
        const double var_x559 = var_x86 * var_x87;
        const double var_x560 = var_x558 * var_x559;
        const double var_x561 = var_x91 * var_x92;
        const double var_x562 = ((var_x547) ? (-var_x560 + var_x546 * (var_x560 + var_x558 * var_x561)) : (0.75 * var_x548 * var_x549));
        const double var_x563 = var_x281 * var_x562;
        const double var_x564 = var_x271 * var_x562;
        const double var_x565 = var_x273 * var_chaste_interface__INaL__hLp;
        const double var_x566 = 1 / var_chaste_interface__intracellular_ions__nasl;
        const double var_x567 = -var_x95 * log(var_x566 * mParameters[2]) + var_chaste_interface__membrane__v;
        const double var_x568 = mParameters[10] * var_chaste_interface__INaL__mL;
        const double var_x569 = var_x567 * var_x568;
        const double var_x570 = 0.98999999999999999 * var_chaste_interface__INa__hf;
        const double var_x571 = (var_x570 + 0.010000000000000009 * var_chaste_interface__INa__hs) * var_chaste_interface__INa__j;
        const double var_x572 = (var_x570 + 0.010000000000000009 * var_chaste_interface__INa__hsp) * var_chaste_interface__INa__jp;
        const double var_x573 = pow(var_chaste_interface__INa__m, 3) * mParameters[6];
        const double var_x574 = var_x567 * var_x573;
        const double var_x575 = 0.0022970159999999998 * var_x188;
        const double var_x576 = 1777.6995840000002 * var_x466;
        const double var_x577 = 1.6872866561388904e-7 * var_x490;
        const double var_x578 = 4.0991265609206957e-17 * var_x484;
        const double var_x579 = 3.8906469970046351e-27 * var_x496;
        const double var_x580 = 4327415.4693063302 * var_x493;
        const double var_x581 = 9.9784147164275156e-14 * var_x498;
        const double var_x582 = 5.7139801260718552e-18 * var_x504;
        const double var_x583 = 9.3749999999999983e-17 * mParameters[3];
        const double var_x584 = var_x559 * var_x583;
        const double var_x585 = exp(var_x104);
        const double var_x586 = var_x566 * var_x95;
        const double var_x587 = -0.75 * mParameters[2];
        const double var_x588 = 0.75 * var_chaste_interface__intracellular_ions__nass;
        const double var_x589 = var_x543 * (var_x587 + var_x588 * var_x86);
        const double var_x590 = ((var_x547) ? (-var_x589 + var_x546 * (var_x589 + var_x545 * (var_x587 + var_x588 * var_x91))) : (var_x549 * (var_x587 + var_x548 * var_x588)));
        const double var_x591 = var_x262 * var_x590;
        const double var_x592 = var_x262 * (-0.00125 + 0.00125 * var_x290);
        const double var_x593 = 0.0013750000000000001 * var_x555;
        const double var_x594 = 0.00057425399999999995 * var_x349;
        const double var_x595 = 1.0 + 1 / pow(var_chaste_interface__intracellular_ions__cajsr, 8);
        const double var_x596 = 1 / var_x595;
        const double var_x597 = 1.0 + 3.7780199833600026e-5 / pow(var_x5, 8);
        const double var_x598 = 1.0 + 1 / var_x597;
        const double var_x599 = var_x596 * var_x598;
        const double var_x600 = 1 / (pow(var_x5, 9) * pow(var_x597, 2));
        const double var_x601 = var_x600 * (-8 + 0.40000000000000002 * var_x3);
        const double var_x602 = var_x377 - var_x288 * (var_x375 + var_x376);
        const double var_x603 = var_x596 * var_x602;
        const double var_x604 = 1 / var_x598;
        const double var_x605 = 1.0 + 0.0123 / var_chaste_interface__intracellular_ions__cajsr;
        const double var_x606 = 0.5 * var_x604 * var_x605;
        const double var_x607 = 15.0 * var_x599;
        const double var_x608 = var_x63 + var_x602 * var_x607;
        const double var_x609 = var_x605 * var_x608;
        const double var_x610 = pow(var_x598, (-2));
        const double var_x611 = var_x601 * var_x610;
        const double var_x612 = 1.8890099916800013e-5 * var_x611;
        const double var_x613 = var_x262 * var_x288;
        const double var_x614 = (((var_x100 >= var_x102) || (var_x377 - var_x257 * var_x613 * (var_x362 + var_x373) > 0))) && (((var_x103) || (var_x377 - var_x613 * (var_x260 * var_x373 + 4.4000000000000004 * var_x107 * var_x258 * var_x271 * var_x290) > 0)));
        const double var_x615 = var_x605 * var_chaste_interface__ryr__Jrel1;
        const double var_x616 = var_x596 * var_x605;
        const double var_x617 = 0.0061500000000000001 * var_x604 / pow(var_chaste_interface__intracellular_ions__cajsr, 2);
        const double var_x618 = var_x600 * var_x9;
        const double var_x619 = var_x610 * var_x618;
        const double var_x620 = 1.1334059950080009e-8 * var_x619;
        const double var_x621 = 1.0 + 1 / pow(var_chaste_interface__intracellular_ions__cacsr, 8);
        const double var_x622 = 1 / var_x621;
        const double var_x623 = var_x598 * var_x622;
        const double var_x624 = 91.0 * var_x623;
        const double var_x625 = var_x45 * var_x622;
        const double var_x626 = 1.0 + 0.0123 / var_chaste_interface__intracellular_ions__cacsr;
        const double var_x627 = 0.16666666666666666 * var_x604 * var_x626;
        const double var_x628 = var_x15 + var_x45 * var_x624;
        const double var_x629 = var_x626 * var_x628;
        const double var_x630 = 6.2966999722666711e-6 * var_x611;
        const double var_x631 = var_x45 > 0;
        const double var_x632 = var_x626 * var_chaste_interface__ryr__Jrel2;
        const double var_x633 = 0.0020500000000000002 * var_x604 / pow(var_chaste_interface__intracellular_ions__cacsr, 2);
        const double var_x634 = var_x622 * var_x626;
        const double var_x635 = 3.7780199833600036e-9 * var_x619;
        
        
        rJacobian[0][0] = 1.0 - (mDt * (-0.00068000000000000005 - var_x5 * var_x6 + var_x0 * var_x6 * var_x7));
        rJacobian[0][1] = 0.0;
        rJacobian[0][2] = 0.0;
        rJacobian[0][3] = 0.0;
        rJacobian[0][4] = 0.0;
        rJacobian[0][5] = 0.0;
        rJacobian[0][6] = 0.0;
        rJacobian[0][7] = 0.0;
        rJacobian[0][8] = -(mDt * (3.7500000000000005e-6 * var_x5 * var_x9 + 1.8750000000000003e-7 * var_x8 * pow(var_x0, 2) / pow(var_x2, 3)));
        rJacobian[0][9] = 0.0;
        rJacobian[0][10] = 0.0;
        rJacobian[0][11] = 0.0;
        rJacobian[0][12] = 0.0;
        rJacobian[0][13] = 0.0;
        rJacobian[0][14] = 0.0;
        rJacobian[0][15] = 0.0;
        rJacobian[0][16] = 0.0;
        rJacobian[1][0] = 0.0;
        rJacobian[1][1] = 1.0 - (mDt * (-var_chaste_interface__ICaL__jca));
        rJacobian[1][2] = 0.0;
        rJacobian[1][3] = 0.0;
        rJacobian[1][4] = 0.0;
        rJacobian[1][5] = 0.0;
        rJacobian[1][6] = 0.0;
        rJacobian[1][7] = 0.0;
        rJacobian[1][8] = -(mDt * (7.9999999999999996e-6 * var_x8 * pow(var_x10, 3) / pow((1 / var_chaste_interface__ICaL__jca + 0.001 * pow(var_x10, 4)), 2)));
        rJacobian[1][9] = 0.0;
        rJacobian[1][10] = 0.0;
        rJacobian[1][11] = 0.0;
        rJacobian[1][12] = 0.0;
        rJacobian[1][13] = 0.0;
        rJacobian[1][14] = 0.0;
        rJacobian[1][15] = 0.0;
        rJacobian[1][16] = 0.0;
        rJacobian[2][0] = 0.0;
        rJacobian[2][1] = 0.0;
        rJacobian[2][2] = 1.0 - (mDt * (-0.20999999999999999 - 1800.0 * var_chaste_interface__intracellular_ions__cass));
        rJacobian[2][3] = 0.0;
        rJacobian[2][4] = 0.0;
        rJacobian[2][5] = 0.0;
        rJacobian[2][6] = 0.0;
        rJacobian[2][7] = 0.0;
        rJacobian[2][8] = -(mDt * (1800.0 - 1800.0 * var_chaste_interface__IP3__u));
        rJacobian[2][9] = 0.0;
        rJacobian[2][10] = 0.0;
        rJacobian[2][11] = 0.0;
        rJacobian[2][12] = 0.0;
        rJacobian[2][13] = 0.0;
        rJacobian[2][14] = 0.0;
        rJacobian[2][15] = 0.0;
        rJacobian[2][16] = 0.0;
        rJacobian[3][0] = 0.0;
        rJacobian[3][1] = 0.0;
        rJacobian[3][2] = 0.0;
        rJacobian[3][3] = 1.0 - (mDt * (-var_x14 + 0.86805555555555558 * (var_x15 + var_x16 - 0.0083333333333333332 * var_chaste_interface__intracellular_ions__cacsr) / (pow(var_x11, 3) * pow((0.43402777777777779 + var_x12), 2))));
        rJacobian[3][4] = 0.0;
        rJacobian[3][5] = 0.0;
        rJacobian[3][6] = -(mDt * (var_x14));
        rJacobian[3][7] = 0.0;
        rJacobian[3][8] = 0.0;
        rJacobian[3][9] = 0.0;
        rJacobian[3][10] = 0.0;
        rJacobian[3][11] = 0.0;
        rJacobian[3][12] = 0.0;
        rJacobian[3][13] = 0.0;
        rJacobian[3][14] = 0.0;
        rJacobian[3][15] = 0.0;
        rJacobian[3][16] = -(mDt * (-var_x13));
        rJacobian[4][0] = -(mDt * (var_x35 * var_x40));
        rJacobian[4][1] = 0.0;
        rJacobian[4][2] = 0.0;
        rJacobian[4][3] = 0.0;
        rJacobian[4][4] = 1.0 - (mDt * (var_x40 * var_x43 + var_x45 * (3.15e-5 / pow(var_x36, 3) + 0.00053550000000000006 / pow(var_x37, 3)) / pow(var_x38, 2)));
        rJacobian[4][5] = 0.0;
        rJacobian[4][6] = -(mDt * (1.8666666666666665e-5 * var_x39));
        rJacobian[4][7] = -(mDt * (0.020833333333333332 * var_x39));
        rJacobian[4][8] = -(mDt * (var_x40 * var_x50));
        rJacobian[4][9] = 0.0;
        rJacobian[4][10] = 0.0;
        rJacobian[4][11] = 0.0;
        rJacobian[4][12] = 0.0;
        rJacobian[4][13] = 0.0;
        rJacobian[4][14] = 0.0;
        rJacobian[4][15] = 0.0;
        rJacobian[4][16] = -(mDt * (0.013333333333333334 * var_x39));
        rJacobian[5][0] = 0.0;
        rJacobian[5][1] = 0.0;
        rJacobian[5][2] = -(mDt * (0.0020202000000000002 * var_x53 * var_x57));
        rJacobian[5][3] = 0.0;
        rJacobian[5][4] = 0.0;
        rJacobian[5][5] = 1.0 - (mDt * (var_x62 * (-0.0083333333333333332 - var_x61) + 1.9199999999999999 * (var_x16 + var_x63 - 0.0083333333333333332 * var_chaste_interface__intracellular_ions__cajsr - var_x55 * var_x61) / (pow(var_x51, 3) * pow(var_x52, 2))));
        rJacobian[5][6] = -(mDt * (0.0083333333333333332 * var_x53));
        rJacobian[5][7] = 0.0;
        rJacobian[5][8] = -(mDt * (var_x62 * (var_x61 + 2.2222200000000002e-7 * var_x64 - var_x55 * var_x60)));
        rJacobian[5][9] = 0.0;
        rJacobian[5][10] = 0.0;
        rJacobian[5][11] = 0.0;
        rJacobian[5][12] = 0.0;
        rJacobian[5][13] = 0.0;
        rJacobian[5][14] = 0.0;
        rJacobian[5][15] = -(mDt * (-var_x62));
        rJacobian[5][16] = 0.0;
        rJacobian[6][0] = -(mDt * (var_x23 * var_x65 + var_x23 * var_x69 - var_x31 * var_x71 - var_x31 * var_x74));
        rJacobian[6][1] = 0.0;
        rJacobian[6][2] = 0.0;
        rJacobian[6][3] = -(mDt * (0.0016666666666666668));
        rJacobian[6][4] = -(mDt * (var_x42 * var_x70));
        rJacobian[6][5] = -(mDt * (0.00041666666666666669));
        rJacobian[6][6] = 1.0 - (mDt * (-0.0024333333333333334));
        rJacobian[6][7] = -(mDt * (var_x73 * var_x76));
        rJacobian[6][8] = -(mDt * (var_x48 * var_x65 + var_x48 * var_x69 - var_x49 * var_x71 - var_x49 * var_x74));
        rJacobian[6][9] = 0.0;
        rJacobian[6][10] = 0.0;
        rJacobian[6][11] = 0.0;
        rJacobian[6][12] = 0.0;
        rJacobian[6][13] = 0.0;
        rJacobian[6][14] = 0.0;
        rJacobian[6][15] = 0.0;
        rJacobian[6][16] = 0.0;
        rJacobian[7][0] = -(mDt * (var_x85 * (var_x31 * var_x79 - var_x23 * var_x77)));
        rJacobian[7][1] = 0.0;
        rJacobian[7][2] = 0.0;
        rJacobian[7][3] = 0.0;
        rJacobian[7][4] = -(mDt * (0.083333333333333329 * var_x84));
        rJacobian[7][5] = 0.0;
        rJacobian[7][6] = -(mDt * (1.8666666666666665e-5 * var_x84));
        rJacobian[7][7] = 1.0 - (mDt * (var_x85 * (-0.75 + var_x201 * (-var_x109 - ((var_x103) ? (-var_x90 + var_x99 * (var_x90 + var_x91 * var_x93)) : (var_x105 * var_x108)) + 6.8910479999999991e-11 * var_x199 + var_x186 * var_x189 + 0.00050000000000000001 * var_x82 * var_chaste_interface__intracellular_ions__casl - 0.037699999999999997 * var_x200 * var_x66 * var_x95) - var_x76 * var_x78) + (5.950000000000001e-5 / pow(var_x80, 3) + 3.4999999999999999e-6 / pow(var_x81, 3)) * (var_x44 + 0.66666666666666663 * var_chaste_interface__intracellular_ions__cass + 0.083333333333333329 * var_chaste_interface__intracellular_ions__cai - 0.75 * var_chaste_interface__intracellular_ions__casl + var_x201 * (-((var_x103) ? (-var_x203 + var_x99 * (var_x203 + var_x93 * (var_x202 + var_x91 * var_chaste_interface__intracellular_ions__casl))) : (var_x108 * (var_x202 + var_x105 * var_chaste_interface__intracellular_ions__casl))) + var_x189 * var_x198 - var_x109 * var_chaste_interface__intracellular_ions__casl - 0.075399999999999995 * var_x200 * (-0.5 * var_x95 * log(var_x66 * mParameters[0]) + var_chaste_interface__membrane__v)) - var_x30 * var_x77) / pow(var_x83, 2)));
        rJacobian[7][8] = -(mDt * (var_x85 * (0.66666666666666663 + var_x49 * var_x79 - var_x48 * var_x77)));
        rJacobian[7][9] = 0.0;
        rJacobian[7][10] = 0.0;
        rJacobian[7][11] = 0.0;
        rJacobian[7][12] = 0.0;
        rJacobian[7][13] = -(mDt * (0.012912377979094078 * var_x188 * var_x252 * var_x84 * var_x94));
        rJacobian[7][14] = 0.0;
        rJacobian[7][15] = 0.0;
        rJacobian[7][16] = 0.0;
        rJacobian[8][0] = -(mDt * (var_x289 * (var_x276 - var_x283)));
        rJacobian[8][1] = -(mDt * (var_x289 * (-var_x298 + var_x292 * var_x295)));
        rJacobian[8][2] = -(mDt * (-0.00020202000000000002 * var_x287 * var_x57));
        rJacobian[8][3] = 0.0;
        rJacobian[8][4] = 0.0;
        rJacobian[8][5] = -(mDt * (var_x287 * var_x300));
        rJacobian[8][6] = 0.0;
        rJacobian[8][7] = -(mDt * (5.0 * var_x287));
        rJacobian[8][8] = 1.0 - (mDt * (var_x287 * (var_x371 + var_x288 * (var_x366 - var_x363 - var_x369 + 1.7227619999999998e-11 * var_x359 + var_x347 * var_x350 + var_x281 * var_x292 * var_x361)) + (var_x377 + var_x288 * (-var_x375 - var_x376 + var_x350 * var_x358)) * (0.0083119800000000001 / pow(var_x284, 3) + 3.4756499999999998e-5 / pow(var_x285, 3)) / pow(var_x286, 2)));
        rJacobian[8][9] = 0.0;
        rJacobian[8][10] = 0.0;
        rJacobian[8][11] = 0.0;
        rJacobian[8][12] = 0.0;
        rJacobian[8][13] = 0.0;
        rJacobian[8][14] = -(mDt * (0.024210708710801394 * var_x287 * var_x349 * var_x413 * var_x94));
        rJacobian[8][15] = -(mDt * (0.10000000000000001 * var_x287));
        rJacobian[8][16] = 0.0;
        rJacobian[9][0] = 0.0;
        rJacobian[9][1] = 0.0;
        rJacobian[9][2] = 0.0;
        rJacobian[9][3] = 0.0;
        rJacobian[9][4] = 0.0;
        rJacobian[9][5] = 0.0;
        rJacobian[9][6] = 0.0;
        rJacobian[9][7] = 0.0;
        rJacobian[9][8] = 0.0;
        rJacobian[9][9] = 1.0 - (mDt * (-0.020833333333333332));
        rJacobian[9][10] = -(mDt * (0.020833333333333332));
        rJacobian[9][11] = 0.0;
        rJacobian[9][12] = 0.0;
        rJacobian[9][13] = 0.0;
        rJacobian[9][14] = 0.0;
        rJacobian[9][15] = 0.0;
        rJacobian[9][16] = 0.0;
        rJacobian[10][0] = 0.0;
        rJacobian[10][1] = 0.0;
        rJacobian[10][2] = 0.0;
        rJacobian[10][3] = 0.0;
        rJacobian[10][4] = 0.0;
        rJacobian[10][5] = 0.0;
        rJacobian[10][6] = 0.0;
        rJacobian[10][7] = -(mDt * (-9.1820528096028884e-6 * var_x414 * var_x417 * var_x66 * var_x94 * (-var_x95 * log(var_x416 * (0.018329999999999999 * mParameters[2] + mParameters[1])) + var_chaste_interface__membrane__v) / pow(var_x415, 2)));
        rJacobian[10][8] = 0.0;
        rJacobian[10][9] = -(mDt * (0.083333333333333329));
        rJacobian[10][10] = 1.0 - (mDt * (-0.75 + var_x510 * (var_x506 + 1.5258303269789357e-10 * var_x488 + 2.1674623181275951e-12 * var_x507 - 10.325106196546965 * var_x503 + var_x454 * var_x467 + var_x480 * var_x485 + var_x492 * var_x494 + var_x495 * var_x499 - var_x489 * var_x491 - var_x495 * var_x497 - var_x495 * var_x505 - 0.030099999999999998 * var_x500 / (_lt_0_row[4]) - var_x500 * var_x501 * mParameters[7] - 1.000004299990755 * var_x508 * mParameters[9] * var_chaste_interface__IK1__xk1 / (1.0 + exp(10.545454545454545 + 0.090909090909090912 * var_chaste_interface__membrane__v - 0.5 * mParameters[1])) - var_x500 * mParameters[13] * var_chaste_interface__Ito__a * var_chaste_interface__Ito__i1 * var_chaste_interface__Ito__i2 - 0.43033148291193518 * var_x508 * (var_x509 * var_chaste_interface__IKr__xrf + (1.0 - var_x509) * var_chaste_interface__IKr__xrs) * mParameters[11] / ((_lt_0_row[2]) * (_lt_0_row[3])))));
        rJacobian[10][11] = -(mDt * (0.66666666666666663));
        rJacobian[10][12] = 0.0;
        rJacobian[10][13] = -(mDt * (var_x510 * (0.018329999999999999 * var_x506 + 2.8254419504163296e-12 * var_x507 + 3.4140106458327888 * var_x539 + 1.9890288190975413e-10 * var_x488 - 495.60509743425433 * var_x538 + var_x467 * var_x524 + var_x485 * var_x534 + var_x494 * var_x536 + var_x499 * var_x537 - var_x491 * var_x535 - var_x497 * var_x537 - var_x505 * var_x537)));
        rJacobian[10][14] = 0.0;
        rJacobian[10][15] = 0.0;
        rJacobian[10][16] = 0.0;
        rJacobian[11][0] = -(mDt * (-var_x553 * (5.3610000000000003e-5 * var_x551 * var_x552 - 5.8971000000000002e-5 * var_x275 * var_x551)));
        rJacobian[11][1] = -(mDt * (-var_x553 * (var_x294 * var_x550 * var_x554 + var_x296 * var_x550 * var_x556)));
        rJacobian[11][2] = 0.0;
        rJacobian[11][3] = 0.0;
        rJacobian[11][4] = 0.0;
        rJacobian[11][5] = 0.0;
        rJacobian[11][6] = 0.0;
        rJacobian[11][7] = 0.0;
        rJacobian[11][8] = -(mDt * (-var_x553 * (4.4228250000000006e-9 * var_x368 * var_x551 - 4.0207500000000006e-9 * var_x551 * var_x557)));
        rJacobian[11][9] = 0.0;
        rJacobian[11][10] = -(mDt * (5.0));
        rJacobian[11][11] = 1.0 - (mDt * (-5.0 - var_x553 * (var_x554 * var_x563 + var_x556 * var_x564)));
        rJacobian[11][12] = 0.0;
        rJacobian[11][13] = 0.0;
        rJacobian[11][14] = 0.0;
        rJacobian[11][15] = 0.0;
        rJacobian[11][16] = 0.0;
        rJacobian[12][0] = 0.0;
        rJacobian[12][1] = 0.0;
        rJacobian[12][2] = 0.0;
        rJacobian[12][3] = 0.0;
        rJacobian[12][4] = 0.0;
        rJacobian[12][5] = 0.0;
        rJacobian[12][6] = 0.0;
        rJacobian[12][7] = 0.0;
        rJacobian[12][8] = 0.0;
        rJacobian[12][9] = 0.0;
        rJacobian[12][10] = 0.0;
        rJacobian[12][11] = 0.0;
        rJacobian[12][12] = 1.0 - (mDt * (-0.020833333333333332));
        rJacobian[12][13] = -(mDt * (0.020833333333333332));
        rJacobian[12][14] = 0.0;
        rJacobian[12][15] = 0.0;
        rJacobian[12][16] = 0.0;
        rJacobian[13][0] = -(mDt * (var_x510 * (var_x569 * (var_x277 * var_x565 - var_x278 * var_chaste_interface__INaL__hL) - var_x574 * (var_x278 * var_x571 - var_x278 * var_x572))));
        rJacobian[13][1] = 0.0;
        rJacobian[13][2] = 0.0;
        rJacobian[13][3] = 0.0;
        rJacobian[13][4] = 0.0;
        rJacobian[13][5] = 0.0;
        rJacobian[13][6] = 0.0;
        rJacobian[13][7] = -(mDt * (var_x510 * (-1.0336571999999999e-10 * var_x199 - var_x186 * var_x575)));
        rJacobian[13][8] = -(mDt * (var_x510 * (var_x569 * (var_x365 * var_chaste_interface__INaL__hL - var_x364 * var_x565) - var_x574 * (var_x365 * var_x572 - var_x365 * var_x571))));
        rJacobian[13][9] = 0.0;
        rJacobian[13][10] = -(mDt * (var_x510 * (15.487659294820448 * var_x503 - 2.2887454904684036e-10 * var_x488 - 3.2511934771913929e-12 * var_x507 + var_x489 * var_x577 + var_x495 * var_x579 + var_x495 * var_x582 - var_x454 * var_x576 - var_x480 * var_x578 - var_x492 * var_x580 - var_x495 * var_x581)));
        rJacobian[13][11] = 0.0;
        rJacobian[13][12] = -(mDt * (0.083333333333333329));
        rJacobian[13][13] = 1.0 - (mDt * (-0.75 + var_x510 * (-((var_x547) ? (-var_x584 + var_x546 * (var_x584 + var_x561 * var_x583)) : (9.3749999999999992e-10 * var_x106 * var_x585 / (-1.0 + var_x585))) + 743.40764615138153 * var_x538 - 4.2381629256244946e-12 * var_x507 - 5.1210159687491839 * var_x539 - 2.9835432286463117e-10 * var_x488 + var_x535 * var_x577 + var_x537 * var_x579 + var_x537 * var_x582 - var_x252 * var_x575 - var_x524 * var_x576 - var_x534 * var_x578 - var_x536 * var_x580 - var_x537 * var_x581 + var_x568 * var_x586 * (-var_x291 * var_chaste_interface__INaL__hLp - var_x372 * var_chaste_interface__INaL__hL) - var_x501 * var_x586 * mParameters[8] - var_x573 * var_x586 * (var_x291 * var_x572 + var_x372 * var_x571))));
        rJacobian[13][14] = -(mDt * (0.66666666666666663));
        rJacobian[13][15] = 0.0;
        rJacobian[13][16] = 0.0;
        rJacobian[14][0] = -(mDt * (var_x553 * (0.00020625000000000003 * var_x275 * var_x591 - 0.0001875 * var_x552 * var_x591)));
        rJacobian[14][1] = -(mDt * (var_x553 * (var_x294 * var_x590 * var_x592 - var_x296 * var_x590 * var_x593)));
        rJacobian[14][2] = 0.0;
        rJacobian[14][3] = 0.0;
        rJacobian[14][4] = 0.0;
        rJacobian[14][5] = 0.0;
        rJacobian[14][6] = 0.0;
        rJacobian[14][7] = 0.0;
        rJacobian[14][8] = -(mDt * (var_x553 * (-2.5841429999999996e-11 * var_x359 - var_x347 * var_x594 + 1.4062500000000001e-8 * var_x557 * var_x591 - 1.5468750000000001e-8 * var_x368 * var_x591)));
        rJacobian[14][9] = 0.0;
        rJacobian[14][10] = 0.0;
        rJacobian[14][11] = 0.0;
        rJacobian[14][12] = 0.0;
        rJacobian[14][13] = -(mDt * (5.0));
        rJacobian[14][14] = 1.0 - (mDt * (-5.0 + var_x553 * (var_x563 * var_x592 - var_x413 * var_x594 - var_x564 * var_x593)));
        rJacobian[14][15] = 0.0;
        rJacobian[14][16] = 0.0;
        rJacobian[15][0] = -(mDt * (((var_x614) ? (var_x606 * (-0.00056670299750400039 * var_x601 * var_x603 - 948.60627177700349 * var_x599 * var_x94 * (var_x283 - var_x276)) + var_x609 * var_x612) : (-var_x612 * var_x615))));
        rJacobian[15][1] = -(mDt * (((var_x614) ? (-474.30313588850174 * var_x616 * var_x94 * (var_x298 + var_x262 * var_x295 * var_x372)) : (0))));
        rJacobian[15][2] = -(mDt * (((var_x614) ? (-0.00151515 * var_x57 * var_x616) : (0))));
        rJacobian[15][3] = 0.0;
        rJacobian[15][4] = 0.0;
        rJacobian[15][5] = -(mDt * (((var_x614) ? (var_x606 * (0.0030303000000000001 * var_x59 * var_x599 * var_chaste_interface__intracellular_ions__cass + 120.0 * var_x598 * var_x602 / (pow(var_x595, 2) * pow(var_chaste_interface__intracellular_ions__cajsr, 9))) - var_x608 * var_x617) : (var_x617 * var_chaste_interface__ryr__Jrel1))));
        rJacobian[15][6] = 0.0;
        rJacobian[15][7] = -(mDt * (((var_x614) ? (37.5 * var_x616) : (0))));
        rJacobian[15][8] = -(mDt * (((var_x614) ? (var_x606 * (var_x607 * (var_x371 - var_x288 * (var_x363 + var_x369 - var_x366 + var_x361 * var_x374)) + 3.4002179850240029e-7 * var_x603 * var_x618) - var_x609 * var_x620) : (var_x615 * var_x620))));
        rJacobian[15][9] = 0.0;
        rJacobian[15][10] = 0.0;
        rJacobian[15][11] = 0.0;
        rJacobian[15][12] = 0.0;
        rJacobian[15][13] = 0.0;
        rJacobian[15][14] = 0.0;
        rJacobian[15][15] = 1.0 - (mDt * (((var_x614) ? (var_x606 * (-1 + 1.5 * var_x599)) : (-var_x606))));
        rJacobian[15][16] = 0.0;
        rJacobian[16][0] = -(mDt * (((var_x631) ? (var_x627 * (var_x35 * var_x624 - 0.0034379981848576026 * var_x601 * var_x625) + var_x629 * var_x630) : (-var_x630 * var_x632))));
        rJacobian[16][1] = 0.0;
        rJacobian[16][2] = 0.0;
        rJacobian[16][3] = -(mDt * (((var_x631) ? (-var_x628 * var_x633 + 121.33333333333333 * var_x45 * var_x626 / (pow(var_x621, 2) * pow(var_chaste_interface__intracellular_ions__cacsr, 9))) : (var_x633 * var_chaste_interface__ryr__Jrel2))));
        rJacobian[16][4] = -(mDt * (((var_x631) ? (15.166666666666666 * var_x43 * var_x634) : (0))));
        rJacobian[16][5] = 0.0;
        rJacobian[16][6] = -(mDt * (((var_x631) ? (0.0002831111111111111 * var_x634) : (0))));
        rJacobian[16][7] = -(mDt * (((var_x631) ? (0.31597222222222221 * var_x634) : (0))));
        rJacobian[16][8] = -(mDt * (((var_x631) ? (var_x627 * (var_x50 * var_x624 + 2.0627989109145618e-6 * var_x618 * var_x625) - var_x629 * var_x635) : (var_x632 * var_x635))));
        rJacobian[16][9] = 0.0;
        rJacobian[16][10] = 0.0;
        rJacobian[16][11] = 0.0;
        rJacobian[16][12] = 0.0;
        rJacobian[16][13] = 0.0;
        rJacobian[16][14] = 0.0;
        rJacobian[16][15] = 0.0;
        rJacobian[16][16] = 1.0 - (mDt * (((var_x631) ? (var_x627 * (-1 + 1.2133333333333334 * var_x623)) : (-var_x627))));
    }

    void CellTrovato2020FromCellMLBackwardEuler::UpdateTransmembranePotential(double var_chaste_interface__environment__time)
    {
        // Time units: millisecond
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -86.6814002878592
        double var_chaste_interface__CaMK__CaMKt = rY[2];
        // Units: millimolar; Initial value: 0.00505983330678751
        double var_chaste_interface__intracellular_ions__nasl = rY[4];
        // Units: millimolar; Initial value: 8.23153516580562
        double var_chaste_interface__intracellular_ions__nass = rY[5];
        // Units: millimolar; Initial value: 8.23154325237268
        double var_chaste_interface__intracellular_ions__kss = rY[7];
        // Units: millimolar; Initial value: 143.767768218104
        double var_chaste_interface__intracellular_ions__ksl = rY[8];
        // Units: millimolar; Initial value: 143.767769906216
        double var_chaste_interface__intracellular_ions__cass = rY[9];
        // Units: millimolar; Initial value: 0.000101777993438818
        double var_chaste_interface__intracellular_ions__casl = rY[10];
        // Units: millimolar; Initial value: 0.000102004317781147
        double var_chaste_interface__INa__m = rY[14];
        // Units: dimensionless; Initial value: 0.00632661703915808
        double var_chaste_interface__INa__hf = rY[15];
        // Units: dimensionless; Initial value: 0.788611739889677
        double var_chaste_interface__INa__hs = rY[16];
        // Units: dimensionless; Initial value: 0.788545979951331
        double var_chaste_interface__INa__j = rY[17];
        // Units: dimensionless; Initial value: 0.790474358603666
        double var_chaste_interface__INa__hsp = rY[18];
        // Units: dimensionless; Initial value: 0.579693514309867
        double var_chaste_interface__INa__jp = rY[19];
        // Units: dimensionless; Initial value: 0.790947058236417
        double var_chaste_interface__INaL__mL = rY[20];
        // Units: dimensionless; Initial value: 0.000241925773627233
        double var_chaste_interface__INaL__hL = rY[21];
        // Units: dimensionless; Initial value: 0.463574582508218
        double var_chaste_interface__INaL__hLp = rY[22];
        // Units: dimensionless; Initial value: 0.240216198686475
        double var_chaste_interface__Ito__a = rY[23];
        // Units: dimensionless; Initial value: 0.000272851144435704
        double var_chaste_interface__Ito__i1 = rY[24];
        // Units: dimensionless; Initial value: 0.649604795721571
        double var_chaste_interface__Ito__i2 = rY[25];
        // Units: dimensionless; Initial value: 0.989965695822495
        double var_chaste_interface__ICaL__d = rY[26];
        // Units: dimensionless; Initial value: 6.97735089296892e-09
        double var_chaste_interface__ICaL__ff = rY[27];
        // Units: dimensionless; Initial value: 0.999999968230738
        double var_chaste_interface__ICaL__fs = rY[28];
        // Units: dimensionless; Initial value: 0.926692153319136
        double var_chaste_interface__ICaL__fcaf = rY[29];
        // Units: dimensionless; Initial value: 0.99999996819573
        double var_chaste_interface__ICaL__fcas = rY[30];
        // Units: dimensionless; Initial value: 0.999999905741936
        double var_chaste_interface__ICaL__jca = rY[31];
        // Units: dimensionless; Initial value: 0.999978907334662
        double var_chaste_interface__ICaL__ffp = rY[32];
        // Units: dimensionless; Initial value: 0.999999968365903
        double var_chaste_interface__ICaL__fcafp = rY[33];
        // Units: dimensionless; Initial value: 0.999999968278239
        double var_chaste_interface__ICaL__nca = rY[34];
        // Units: dimensionless; Initial value: 0.00547252500964926
        double var_chaste_interface__ICaT__b = rY[35];
        // Units: dimensionless; Initial value: 0.000304250912559619
        double var_chaste_interface__ICaT__g = rY[36];
        // Units: dimensionless; Initial value: 0.994214357917907
        double var_chaste_interface__IKr__xrf = rY[37];
        // Units: dimensionless; Initial value: 0.000331691184084272
        double var_chaste_interface__IKr__xrs = rY[38];
        // Units: dimensionless; Initial value: 0.568716473334161
        double var_chaste_interface__IKs__xs1 = rY[39];
        // Units: dimensionless; Initial value: 0.191165248085394
        double var_chaste_interface__IKs__xs2 = rY[40];
        // Units: dimensionless; Initial value: 0.000222677365291219
        double var_chaste_interface__If__y = rY[41];
        // Units: dimensionless; Initial value: 0.233119011214908
        double var_chaste_interface__IK1__xk1 = rY[42];
        // Units: dimensionless; Initial value: 0.997084813729909
        
        // Lookup table indexing
        const bool _oob_0 = CellTrovato2020FromCellMLBackwardEuler_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__v);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = CellTrovato2020FromCellMLBackwardEuler_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__v);

        const double var_ICaL__PCap = 1.1000000000000001 * mParameters[5]; // dimensionless
        const double var_ICaL__f = 0.40000000000000002 * var_chaste_interface__ICaL__fs + 0.59999999999999998 * var_chaste_interface__ICaL__ff; // dimensionless
        const double var_ICaL__fp = 0.40000000000000002 * var_chaste_interface__ICaL__fs + 0.59999999999999998 * var_chaste_interface__ICaL__ffp; // dimensionless
        const double var_INaCa_i__h10_i = 13.5 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * mParameters[2]) * mParameters[2]; // dimensionless
        const double var_INaCa_i__h10_ss = 13.5 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * mParameters[2]) * mParameters[2]; // dimensionless
        const double var_INaCa_i__k1_i = 1500000.0 * mParameters[0] / var_INaCa_i__h10_i; // dimensionless
        const double var_INaCa_i__k1_ss = 1500000.0 * mParameters[0] / var_INaCa_i__h10_ss; // dimensionless
        const double var_IpCa__IpCa = 0.00050000000000000001 * var_chaste_interface__intracellular_ions__casl / (0.00050000000000000001 + var_chaste_interface__intracellular_ions__casl); // microA_per_microF
        const double var_CaMK__CaMKb = 0.050000000000000003 * (1.0 - var_chaste_interface__CaMK__CaMKt) / (1.0 + 0.0015 / var_chaste_interface__intracellular_ions__cass); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_ICaL__fICaLp = 1 / (1.0 + 0.14999999999999999 / var_CaMK__CaMKa); // dimensionless
        const double var_INaCa_i__h4_i = 1.0 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * var_chaste_interface__intracellular_ions__nasl) * var_chaste_interface__intracellular_ions__nasl; // dimensionless
        const double var_INaCa_i__k6_i = 1500000.0 * var_chaste_interface__intracellular_ions__casl / var_INaCa_i__h4_i; // dimensionless
        const double var_INaK__b3 = 5.7707741857267899e-10 / (1.5889281507656066 + 0.0034246575342465752 * var_chaste_interface__intracellular_ions__ksl + 0.004464285714285714 * var_chaste_interface__intracellular_ions__nasl); // dimensionless
        const double var_INaCa_i__h4_ss = 1.0 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * var_chaste_interface__intracellular_ions__nass) * var_chaste_interface__intracellular_ions__nass; // dimensionless
        const double var_INaCa_i__k6_ss = 1500000.0 * var_chaste_interface__intracellular_ions__cass / var_INaCa_i__h4_ss; // dimensionless
        const double var_membrane__Istim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time) / HeartConfig::Instance()->GetCapacitance(); // microA_per_microF
        const double var_ICaL__Afcaf = _lt_0_row[0]; // dimensionless
        const double var_ICaL__Afcas = 1.0 - var_ICaL__Afcaf; // dimensionless
        const double var_ICaL__fca = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcaf + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__fcap = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcafp + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_IKr__Axrf = _lt_0_row[1]; // dimensionless
        const double var_ICaL__ICaK = 0.00035740000000000001 * (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(mParameters[4] * mParameters[14] / mParameters[3])) ? (-9.9999999999999995e-8 * (-0.75 * mParameters[1] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * (-0.75 * mParameters[1] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(9.9999999999999995e-8)) + 9.9999999999999995e-8 * (-0.75 * mParameters[1] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8))) * (9.9999999999999995e-8 * mParameters[4] * mParameters[14] / mParameters[3] + var_chaste_interface__membrane__v) * mParameters[3] / (mParameters[4] * mParameters[14])) : (pow(mParameters[3], 2) * (-0.75 * mParameters[1] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * mParameters[4] * mParameters[14]))) * mParameters[5] * var_chaste_interface__ICaL__d + 0.00035740000000000001 * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(mParameters[4] * mParameters[14] / mParameters[3])) ? (-9.9999999999999995e-8 * (-0.75 * mParameters[1] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * (-0.75 * mParameters[1] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(9.9999999999999995e-8)) + 9.9999999999999995e-8 * (-0.75 * mParameters[1] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8))) * (9.9999999999999995e-8 * mParameters[4] * mParameters[14] / mParameters[3] + var_chaste_interface__membrane__v) * mParameters[3] / (mParameters[4] * mParameters[14])) : (pow(mParameters[3], 2) * (-0.75 * mParameters[1] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * mParameters[4] * mParameters[14]))) * var_ICaL__PCap * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaL = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * ((fabs(var_chaste_interface__membrane__v) < 4.9999999999999998e-8 * fabs(mParameters[4] * mParameters[14] / mParameters[3])) ? (-1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * mParameters[4] * mParameters[14] / mParameters[3] + var_chaste_interface__membrane__v) * (1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__cass * exp(9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(9.9999999999999995e-8)) + 1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[3] / (mParameters[4] * mParameters[14])) : (4.0 * pow(mParameters[3], 2) * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__cass * exp(2.0 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(2.0 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * mParameters[4] * mParameters[14]))) * mParameters[5] * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * ((fabs(var_chaste_interface__membrane__v) < 4.9999999999999998e-8 * fabs(mParameters[4] * mParameters[14] / mParameters[3])) ? (-1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * mParameters[4] * mParameters[14] / mParameters[3] + var_chaste_interface__membrane__v) * (1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__cass * exp(9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(9.9999999999999995e-8)) + 1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[3] / (mParameters[4] * mParameters[14])) : (4.0 * pow(mParameters[3], 2) * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__cass * exp(2.0 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(2.0 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * mParameters[4] * mParameters[14]))) * var_ICaL__PCap * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaNa = 0.00125 * (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(mParameters[4] * mParameters[14] / mParameters[3])) ? (-9.9999999999999995e-8 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(9.9999999999999995e-8)) + 9.9999999999999995e-8 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8))) * (9.9999999999999995e-8 * mParameters[4] * mParameters[14] / mParameters[3] + var_chaste_interface__membrane__v) * mParameters[3] / (mParameters[4] * mParameters[14])) : (pow(mParameters[3], 2) * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * mParameters[4] * mParameters[14]))) * mParameters[5] * var_chaste_interface__ICaL__d + 0.00125 * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(mParameters[4] * mParameters[14] / mParameters[3])) ? (-9.9999999999999995e-8 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(9.9999999999999995e-8)) + 9.9999999999999995e-8 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8))) * (9.9999999999999995e-8 * mParameters[4] * mParameters[14] / mParameters[3] + var_chaste_interface__membrane__v) * mParameters[3] / (mParameters[4] * mParameters[14])) : (pow(mParameters[3], 2) * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * mParameters[4] * mParameters[14]))) * var_ICaL__PCap * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICab__ICab = ((fabs(var_chaste_interface__membrane__v) < 4.9999999999999998e-8 * fabs(mParameters[4] * mParameters[14] / mParameters[3])) ? (-4.9999999999999992e-15 * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__casl * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * mParameters[4] * mParameters[14] / mParameters[3] + var_chaste_interface__membrane__v) * (4.9999999999999992e-15 * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__casl * exp(9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(9.9999999999999995e-8)) + 4.9999999999999992e-15 * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__casl * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[3] / (mParameters[4] * mParameters[14])) : (9.9999999999999995e-8 * pow(mParameters[3], 2) * (-0.34100000000000003 * mParameters[0] + var_chaste_interface__intracellular_ions__casl * exp(2.0 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(2.0 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * mParameters[4] * mParameters[14]))); // microA_per_microF
        const double var_INaCa_i__hca = exp(0.16700000000000001 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14])); // dimensionless
        const double var_INaCa_i__hna = exp(0.52239999999999998 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14])); // dimensionless
        const double var_INaCa_i__h1_i = 1.0 + 0.011348161597821153 * (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nasl; // dimensionless
        const double var_INaCa_i__h1_ss = 1.0 + 0.011348161597821153 * (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nass; // dimensionless
        const double var_INaCa_i__h2_i = 0.011348161597821153 * var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nasl / var_INaCa_i__h1_i; // dimensionless
        const double var_INaCa_i__h2_ss = 0.011348161597821153 * var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__h1_ss; // dimensionless
        const double var_INaCa_i__h7_i = 1.0 + 0.011348161597821153 * (1.0 + 1 / var_INaCa_i__hna) * mParameters[2]; // dimensionless
        const double var_INaCa_i__h7_ss = 1.0 + 0.011348161597821153 * (1.0 + 1 / var_INaCa_i__hna) * mParameters[2]; // dimensionless
        const double var_INaCa_i__h8_i = 0.011348161597821153 * mParameters[2] / (var_INaCa_i__h7_i * var_INaCa_i__hna); // dimensionless
        const double var_INaCa_i__h8_ss = 0.011348161597821153 * mParameters[2] / (var_INaCa_i__h7_ss * var_INaCa_i__hna); // dimensionless
        const double var_INaCa_i__k3pp_i = 5000.0 * var_INaCa_i__h8_i; // dimensionless
        const double var_INaCa_i__k3_i = 60000.0 / var_INaCa_i__h7_i + var_INaCa_i__k3pp_i; // dimensionless
        const double var_INaCa_i__k3pp_ss = 5000.0 * var_INaCa_i__h8_ss; // dimensionless
        const double var_INaCa_i__k3_ss = 60000.0 / var_INaCa_i__h7_ss + var_INaCa_i__k3pp_ss; // dimensionless
        const double var_INaCa_i__k4pp_i = 5000.0 * var_INaCa_i__h2_i; // dimensionless
        const double var_INaCa_i__k4_i = 60000.0 / (var_INaCa_i__h1_i * var_INaCa_i__hca) + var_INaCa_i__k4pp_i; // dimensionless
        const double var_INaCa_i__k4pp_ss = 5000.0 * var_INaCa_i__h2_ss; // dimensionless
        const double var_INaCa_i__k4_ss = 60000.0 / (var_INaCa_i__h1_ss * var_INaCa_i__hca) + var_INaCa_i__k4pp_ss; // dimensionless
        const double var_INaCa_i__k7_i = 800.0 * pow(var_chaste_interface__intracellular_ions__nasl, 2) * var_INaCa_i__h2_i / var_INaCa_i__h4_i; // dimensionless
        const double var_INaCa_i__k7_ss = 800.0 * pow(var_chaste_interface__intracellular_ions__nass, 2) * var_INaCa_i__h2_ss / var_INaCa_i__h4_ss; // dimensionless
        const double var_INaCa_i__k8_i = 800.0 * pow(mParameters[2], 2) * var_INaCa_i__h8_i / var_INaCa_i__h10_i; // dimensionless
        const double var_INaCa_i__k8_ss = 800.0 * pow(mParameters[2], 2) * var_INaCa_i__h8_ss / var_INaCa_i__h10_ss; // dimensionless
        const double var_INaCa_i__x1_i = 5000.0 * (5000.0 + var_INaCa_i__k3_i) * var_INaCa_i__k7_i + 5000.0 * (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k4_i; // dimensionless
        const double var_INaCa_i__x1_ss = 5000.0 * (5000.0 + var_INaCa_i__k3_ss) * var_INaCa_i__k7_ss + 5000.0 * (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k4_ss; // dimensionless
        const double var_INaCa_i__x2_i = (5000.0 + var_INaCa_i__k4_i) * var_INaCa_i__k1_i * var_INaCa_i__k7_i + (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k4_i * var_INaCa_i__k6_i; // dimensionless
        const double var_INaCa_i__x2_ss = (5000.0 + var_INaCa_i__k4_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k7_ss + (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k4_ss * var_INaCa_i__k6_ss; // dimensionless
        const double var_INaCa_i__x3_i = (5000.0 + var_INaCa_i__k3_i) * var_INaCa_i__k6_i * var_INaCa_i__k8_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k1_i * var_INaCa_i__k3_i; // dimensionless
        const double var_INaCa_i__x3_ss = (5000.0 + var_INaCa_i__k3_ss) * var_INaCa_i__k6_ss * var_INaCa_i__k8_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k3_ss; // dimensionless
        const double var_INaCa_i__x4_i = 5000.0 * (5000.0 + var_INaCa_i__k4_i) * var_INaCa_i__k8_i + 5000.0 * (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k3_i; // dimensionless
        const double var_INaCa_i__E1_i = var_INaCa_i__x1_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E2_i = var_INaCa_i__x2_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__x4_ss = 5000.0 * (5000.0 + var_INaCa_i__k4_ss) * var_INaCa_i__k8_ss + 5000.0 * (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k3_ss; // dimensionless
        const double var_INaCa_i__E1_ss = var_INaCa_i__x1_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E2_ss = var_INaCa_i__x2_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaK__Knai = 9.0730000000000004 * exp(-0.051666666666666666 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14])); // millimolar
        const double var_INaK__Knao = 27.780000000000001 * exp(0.38500000000000001 * var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14])); // millimolar
        const double var_INaK__a1 = 949.5 * pow(var_chaste_interface__intracellular_ions__nasl, 3) / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__nasl / var_INaK__Knai), 3) + 4.0 * pow((0.5 + var_chaste_interface__intracellular_ions__ksl), 2)) * pow(var_INaK__Knai, 3)); // dimensionless
        const double var_INaK__a3 = 14800.411886344058 * pow(mParameters[1], 2) / (-1.0 + pow((1.0 + mParameters[2] / var_INaK__Knao), 3) + 7.7937924625297832 * pow((0.35820000000000002 + mParameters[1]), 2)); // dimensionless
        const double var_INaK__b2 = 39.399999999999999 * pow(mParameters[2], 3) / ((-1.0 + pow((1.0 + mParameters[2] / var_INaK__Knao), 3) + 7.7937924625297832 * pow((0.35820000000000002 + mParameters[1]), 2)) * pow(var_INaK__Knao, 3)); // dimensionless
        const double var_INaK__b4 = 160.0 * pow(var_chaste_interface__intracellular_ions__ksl, 2) / (-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__nasl / var_INaK__Knai), 3) + 4.0 * pow((0.5 + var_chaste_interface__intracellular_ions__ksl), 2)); // dimensionless
        const double var_INaK__x1 = 439120.79239156016 * var_INaK__a1 + 687.20000000000005 * var_INaK__a1 * var_INaK__b3 + 687.20000000000005 * var_INaK__b3 * var_INaK__b4 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__x2 = 687.20000000000005 * var_INaK__a1 * var_INaK__a3 + 696.32000000000005 * var_INaK__a3 * var_INaK__b4 + 9.120000000000001 * var_INaK__b2 * var_INaK__b4; // dimensionless
        const double var_INaK__x3 = 444948.47229058668 * var_INaK__a3 + 5827.6798990265261 * var_INaK__b2 + 9.120000000000001 * var_INaK__b2 * var_INaK__b3; // dimensionless
        const double var_INaK__x4 = 638.99998892834708 * var_INaK__a1 * var_INaK__a3 + 638.99998892834708 * var_INaK__a1 * var_INaK__b2 + var_INaK__a1 * var_INaK__b2 * var_INaK__b3 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INab__INab = ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(mParameters[4] * mParameters[14] / mParameters[3])) ? (-9.3749999999999983e-17 * (-mParameters[2] + var_chaste_interface__intracellular_ions__nasl * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * mParameters[4] * mParameters[14] / mParameters[3] + var_chaste_interface__membrane__v) * (9.3749999999999983e-17 * (-mParameters[2] + var_chaste_interface__intracellular_ions__nasl * exp(9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(9.9999999999999995e-8)) + 9.3749999999999983e-17 * (-mParameters[2] + var_chaste_interface__intracellular_ions__nasl * exp(-9.9999999999999995e-8)) * mParameters[3] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[3] / (mParameters[4] * mParameters[14])) : (9.3749999999999992e-10 * pow(mParameters[3], 2) * (-mParameters[2] + var_chaste_interface__intracellular_ions__nasl * exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * mParameters[3] / (mParameters[4] * mParameters[14]))) * mParameters[4] * mParameters[14]))); // microA_per_microF
        const double var_INaCa_i__INaCa_i = 0.00076567200000000001 * (10000.0 * var_INaCa_i__E2_i - var_INaCa_i__E2_i * var_INaCa_i__k3pp_i - 2.0 * var_INaCa_i__E1_i * var_INaCa_i__k1_i - 3.0 * var_INaCa_i__E1_i * var_INaCa_i__k8_i + var_INaCa_i__k4pp_i * var_INaCa_i__x3_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i) + 3.0 * var_INaCa_i__k7_i * var_INaCa_i__x4_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i)) / (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__intracellular_ions__casl, 2)); // microA_per_microF
        const double var_INaCa_i__INaCa_ss = 0.000191418 * (10000.0 * var_INaCa_i__E2_ss - var_INaCa_i__E2_ss * var_INaCa_i__k3pp_ss - 2.0 * var_INaCa_i__E1_ss * var_INaCa_i__k1_ss - 3.0 * var_INaCa_i__E1_ss * var_INaCa_i__k8_ss + var_INaCa_i__k4pp_ss * var_INaCa_i__x3_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss) + 3.0 * var_INaCa_i__k7_ss * var_INaCa_i__x4_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss)) / (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__intracellular_ions__cass, 2)); // microA_per_microF
        const double var_INaK__INaK = 592.56652800000006 * var_INaK__x4 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4) + 97.461600000000004 * var_INaK__a3 * var_INaK__x1 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4) - 64.974400000000003 * var_INaK__a1 * var_INaK__x3 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4) - 97.461600000000004 * var_INaK__b3 * var_INaK__x2 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // microA_per_microF
        const double var_ICaT__ICaT = 0.075399999999999995 * (-0.5 * mParameters[4] * mParameters[14] * log(mParameters[0] / var_chaste_interface__intracellular_ions__casl) / mParameters[3] + var_chaste_interface__membrane__v) * var_chaste_interface__ICaT__b * var_chaste_interface__ICaT__g; // microA_per_microF
        const double var_reversal_potentials__EK = mParameters[4] * mParameters[14] * log(mParameters[1] / var_chaste_interface__intracellular_ions__ksl) / mParameters[3]; // millivolt
        const double var_IK1__IK1 = 1.000004299990755 * sqrt(mParameters[1]) * (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * mParameters[9] * var_chaste_interface__IK1__xk1 / (1.0 + exp(10.545454545454545 + 0.090909090909090912 * var_chaste_interface__membrane__v - 0.5 * mParameters[1])); // microA_per_microF
        const double var_IKr__IKr = 0.43033148291193518 * sqrt(mParameters[1]) * (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * ((1.0 - var_IKr__Axrf) * var_chaste_interface__IKr__xrs + var_IKr__Axrf * var_chaste_interface__IKr__xrf) * mParameters[11] / ((_lt_0_row[2]) * (_lt_0_row[3])); // microA_per_microF
        const double var_If__IfK = pow(var_chaste_interface__If__y, 2) * (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * mParameters[7]; // microA_per_microF
        const double var_Isus__Isus = 0.030099999999999998 * (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) / (_lt_0_row[4]); // microA_per_microF
        const double var_Ito__Ito = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * mParameters[13] * var_chaste_interface__Ito__a * var_chaste_interface__Ito__i1 * var_chaste_interface__Ito__i2; // microA_per_microF
        const double var_reversal_potentials__ENa = mParameters[4] * mParameters[14] * log(mParameters[2] / var_chaste_interface__intracellular_ions__nasl) / mParameters[3]; // millivolt
        const double var_INa__INa = pow(var_chaste_interface__INa__m, 3) * (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - 1 / (1.0 + 0.14999999999999999 / var_CaMK__CaMKa)) * (0.010000000000000009 * var_chaste_interface__INa__hs + 0.98999999999999999 * var_chaste_interface__INa__hf) * var_chaste_interface__INa__j + (0.010000000000000009 * var_chaste_interface__INa__hsp + 0.98999999999999999 * var_chaste_interface__INa__hf) * var_chaste_interface__INa__jp / (1.0 + 0.14999999999999999 / var_CaMK__CaMKa)) * mParameters[6]; // microA_per_microF
        const double var_INaL__INaL = (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - 1 / (1.0 + 0.14999999999999999 / var_CaMK__CaMKa)) * var_chaste_interface__INaL__hL + var_chaste_interface__INaL__hLp / (1.0 + 0.14999999999999999 / var_CaMK__CaMKa)) * mParameters[10] * var_chaste_interface__INaL__mL; // microA_per_microF
        const double var_If__IfNa = pow(var_chaste_interface__If__y, 2) * (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * mParameters[8]; // microA_per_microF
        const double var_IKs__IKs = (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__intracellular_ions__casl), 1.3999999999999999))) * (-mParameters[4] * mParameters[14] * log((0.018329999999999999 * mParameters[2] + mParameters[1]) / (0.018329999999999999 * var_chaste_interface__intracellular_ions__nasl + var_chaste_interface__intracellular_ions__ksl)) / mParameters[3] + var_chaste_interface__membrane__v) * mParameters[12] * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2; // microA_per_microF
        const double d_dt_chaste_interface_var_membrane__v = -var_ICaL__ICaK - var_ICaL__ICaL - var_ICaL__ICaNa - var_ICaT__ICaT - var_ICab__ICab - var_IK1__IK1 - var_IKr__IKr - var_IKs__IKs - var_INa__INa - var_INaCa_i__INaCa_i - var_INaCa_i__INaCa_ss - var_INaK__INaK - var_INaL__INaL - var_INab__INab - var_If__IfK - var_If__IfNa - var_IpCa__IpCa - var_Isus__Isus - var_Ito__Ito - var_membrane__Istim; // millivolt / millisecond
        
        rY[0] += mDt*d_dt_chaste_interface_var_membrane__v;
    }
    
    void CellTrovato2020FromCellMLBackwardEuler::ComputeOneStepExceptVoltage(double var_chaste_interface__environment__time)
    {
        // Time units: millisecond
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -86.6814002878592
        double var_chaste_interface__INa__m = rY[14];
        // Units: dimensionless; Initial value: 0.00632661703915808
        double var_chaste_interface__INa__hf = rY[15];
        // Units: dimensionless; Initial value: 0.788611739889677
        double var_chaste_interface__INa__hs = rY[16];
        // Units: dimensionless; Initial value: 0.788545979951331
        double var_chaste_interface__INa__j = rY[17];
        // Units: dimensionless; Initial value: 0.790474358603666
        double var_chaste_interface__INa__hsp = rY[18];
        // Units: dimensionless; Initial value: 0.579693514309867
        double var_chaste_interface__INa__jp = rY[19];
        // Units: dimensionless; Initial value: 0.790947058236417
        double var_chaste_interface__INaL__mL = rY[20];
        // Units: dimensionless; Initial value: 0.000241925773627233
        double var_chaste_interface__INaL__hL = rY[21];
        // Units: dimensionless; Initial value: 0.463574582508218
        double var_chaste_interface__INaL__hLp = rY[22];
        // Units: dimensionless; Initial value: 0.240216198686475
        double var_chaste_interface__Ito__a = rY[23];
        // Units: dimensionless; Initial value: 0.000272851144435704
        double var_chaste_interface__Ito__i1 = rY[24];
        // Units: dimensionless; Initial value: 0.649604795721571
        double var_chaste_interface__Ito__i2 = rY[25];
        // Units: dimensionless; Initial value: 0.989965695822495
        double var_chaste_interface__ICaL__d = rY[26];
        // Units: dimensionless; Initial value: 6.97735089296892e-09
        double var_chaste_interface__ICaL__ff = rY[27];
        // Units: dimensionless; Initial value: 0.999999968230738
        double var_chaste_interface__ICaL__fs = rY[28];
        // Units: dimensionless; Initial value: 0.926692153319136
        double var_chaste_interface__ICaL__fcaf = rY[29];
        // Units: dimensionless; Initial value: 0.99999996819573
        double var_chaste_interface__ICaL__fcas = rY[30];
        // Units: dimensionless; Initial value: 0.999999905741936
        double var_chaste_interface__ICaL__jca = rY[31];
        // Units: dimensionless; Initial value: 0.999978907334662
        double var_chaste_interface__ICaL__ffp = rY[32];
        // Units: dimensionless; Initial value: 0.999999968365903
        double var_chaste_interface__ICaL__fcafp = rY[33];
        // Units: dimensionless; Initial value: 0.999999968278239
        double var_chaste_interface__ICaT__b = rY[35];
        // Units: dimensionless; Initial value: 0.000304250912559619
        double var_chaste_interface__ICaT__g = rY[36];
        // Units: dimensionless; Initial value: 0.994214357917907
        double var_chaste_interface__IKr__xrf = rY[37];
        // Units: dimensionless; Initial value: 0.000331691184084272
        double var_chaste_interface__IKr__xrs = rY[38];
        // Units: dimensionless; Initial value: 0.568716473334161
        double var_chaste_interface__IKs__xs1 = rY[39];
        // Units: dimensionless; Initial value: 0.191165248085394
        double var_chaste_interface__IKs__xs2 = rY[40];
        // Units: dimensionless; Initial value: 0.000222677365291219
        double var_chaste_interface__If__y = rY[41];
        // Units: dimensionless; Initial value: 0.233119011214908
        double var_chaste_interface__IK1__xk1 = rY[42];
        // Units: dimensionless; Initial value: 0.997084813729909
        
        // Lookup table indexing
        const bool _oob_0 = CellTrovato2020FromCellMLBackwardEuler_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__v);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = CellTrovato2020FromCellMLBackwardEuler_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__v);

        const double var_ICaL__tjca = 75.0;
        const double var_INa__hssV1 = 78.5;
        const double var_INa__hssV2 = 6.2199999999999998;
        const double var_INa__mssV1 = 48.426400000000001;
        const double var_INa__mssV2 = 7.5652999999999997;
        const double var_INa__mtD1 = 6.7649999999999997;
        const double var_INa__mtD2 = 8.5519999999999996;
        const double var_INa__mtV1 = 11.640000000000001;
        const double var_INa__mtV2 = 34.770000000000003;
        const double var_INa__mtV3 = 77.420000000000002;
        const double var_INa__mtV4 = 5.9550000000000001;
        const double var_INaL__thL = 200.0;
        const double var_INaL__thLp = 3.0 * var_INaL__thL;
        const double var_ICaL__dss = _lt_0_row[6];
        const double var_ICaL__fss = _lt_0_row[5];
        const double var_ICaL__fcass = var_ICaL__fss;
        const double var_ICaL__td = _lt_0_row[7];
        const double var_ICaL__tfcaf = _lt_0_row[8];
        const double var_ICaL__tfcafp = 2.5 * var_ICaL__tfcaf;
        const double var_ICaL__tfcas = _lt_0_row[9];
        const double var_ICaL__tff = _lt_0_row[10];
        const double var_ICaL__tffp = 2.5 * var_ICaL__tff;
        const double var_ICaL__tfs = _lt_0_row[11];
        const double var_ICaT__bss = _lt_0_row[12];
        const double var_ICaT__gss = _lt_0_row[14];
        const double var_ICaT__taub = 1 / (_lt_0_row[13]);
        const double var_ICaT__taug = 1 / (_lt_0_row[15]);
        const double var_IK1__txk1 = 122.2 / (exp(3.4155488244627148 + 0.014423770373575654 * var_chaste_interface__membrane__v) + exp(-6.2475442043222005 - 0.049115913555992145 * var_chaste_interface__membrane__v));
        const double var_IK1__xk1ss = 1 / (1.0 + exp((-144.59 - var_chaste_interface__membrane__v - 2.5537999999999998 * mParameters[1]) / (3.8115000000000001 + 1.5691999999999999 * mParameters[1])));
        const double var_IKr__txrf = _lt_0_row[18];
        const double var_IKr__txrs = _lt_0_row[19];
        const double var_IKr__xrss = _lt_0_row[17];
        const double var_IKs__txs1 = _lt_0_row[21];
        const double var_IKs__txs2 = 1 / (_lt_0_row[22]);
        const double var_IKs__xs1ss = _lt_0_row[20];
        const double var_IKs__xs2ss = var_IKs__xs1ss;
        const double var_INa__hss = 1 / (1.0 + exp((var_INa__hssV1 + var_chaste_interface__membrane__v) / var_INa__hssV2));
        const double var_INa__hssp = _lt_0_row[26];
        const double var_INa__jss = var_INa__hss;
        const double var_INa__mss = 1 / (1.0 + exp((-var_INa__mssV1 - var_chaste_interface__membrane__v) / var_INa__mssV2));
        const double var_INa__thf = 1 / (_lt_0_row[24]);
        const double var_INa__ths = _lt_0_row[25];
        const double var_INa__thsp = 3.0 * var_INa__ths;
        const double var_INa__tj = _lt_0_row[27];
        const double var_INa__tjp = 1.46 * var_INa__tj;
        const double var_INa__tm = 1 / (var_INa__mtD1 * exp((var_INa__mtV1 + var_chaste_interface__membrane__v) / var_INa__mtV2) + var_INa__mtD2 * exp((-var_INa__mtV3 - var_chaste_interface__membrane__v) / var_INa__mtV4));
        const double var_INaL__hLss = 1 / (1.0 + exp(11.700053418803417 + 0.13354700854700854 * var_chaste_interface__membrane__v));
        const double var_INaL__hLssp = 1 / (1.0 + exp(12.528044871794872 + 0.13354700854700854 * var_chaste_interface__membrane__v));
        const double var_INaL__mLss = _lt_0_row[32];
        const double var_INaL__tmL = var_INa__tm;
        const double var_If__tauy = 2000.0 / (exp(0.94999999999999996 + 0.016666666666666666 * var_chaste_interface__membrane__v) + exp(-13.199999999999999 - 0.10000000000000001 * var_chaste_interface__membrane__v));
        const double var_If__yss = _lt_0_row[33];
        const double var_Ito__ass = _lt_0_row[36];
        const double var_Ito__iss = _lt_0_row[35];
        const double var_Ito__taua = 1.0515000000000001 / (3.5 / (1.0 + exp(3.403513787634354 + 0.034035137876343539 * var_chaste_interface__membrane__v)) + 0.82719827942757873 / (1.0 + exp(0.62658348478969694 - 0.034035137876343539 * var_chaste_interface__membrane__v)));
        const double var_Ito__tauif = _lt_0_row[38];
        const double var_Ito__tauis = _lt_0_row[39];
        
        
        rY[26] = (var_chaste_interface__ICaL__d + ((var_ICaL__dss / var_ICaL__td) * mDt)) / (1.0 - ((-1 / var_ICaL__td) * mDt));
        rY[29] = (var_chaste_interface__ICaL__fcaf + ((var_ICaL__fcass / var_ICaL__tfcaf) * mDt)) / (1.0 - ((-1 / var_ICaL__tfcaf) * mDt));
        rY[33] = (var_chaste_interface__ICaL__fcafp + ((var_ICaL__fcass / var_ICaL__tfcafp) * mDt)) / (1.0 - ((-1 / var_ICaL__tfcafp) * mDt));
        rY[30] = (var_chaste_interface__ICaL__fcas + ((var_ICaL__fcass / var_ICaL__tfcas) * mDt)) / (1.0 - ((-1 / var_ICaL__tfcas) * mDt));
        rY[27] = (var_chaste_interface__ICaL__ff + ((var_ICaL__fss / var_ICaL__tff) * mDt)) / (1.0 - ((-1 / var_ICaL__tff) * mDt));
        rY[32] = (var_chaste_interface__ICaL__ffp + ((var_ICaL__fss / var_ICaL__tffp) * mDt)) / (1.0 - ((-1 / var_ICaL__tffp) * mDt));
        rY[28] = (var_chaste_interface__ICaL__fs + ((var_ICaL__fss / var_ICaL__tfs) * mDt)) / (1.0 - ((-1 / var_ICaL__tfs) * mDt));
        rY[31] = (var_chaste_interface__ICaL__jca + ((var_ICaL__fcass / var_ICaL__tjca) * mDt)) / (1.0 - ((-1 / var_ICaL__tjca) * mDt));
        rY[35] = (var_chaste_interface__ICaT__b + ((var_ICaT__bss / var_ICaT__taub) * mDt)) / (1.0 - ((-1 / var_ICaT__taub) * mDt));
        rY[36] = (var_chaste_interface__ICaT__g + ((var_ICaT__gss / var_ICaT__taug) * mDt)) / (1.0 - ((-1 / var_ICaT__taug) * mDt));
        rY[42] = (var_chaste_interface__IK1__xk1 + ((var_IK1__xk1ss / var_IK1__txk1) * mDt)) / (1.0 - ((-1 / var_IK1__txk1) * mDt));
        rY[37] = (var_chaste_interface__IKr__xrf + ((var_IKr__xrss / var_IKr__txrf) * mDt)) / (1.0 - ((-1 / var_IKr__txrf) * mDt));
        rY[38] = (var_chaste_interface__IKr__xrs + ((var_IKr__xrss / var_IKr__txrs) * mDt)) / (1.0 - ((-1 / var_IKr__txrs) * mDt));
        rY[39] = (var_chaste_interface__IKs__xs1 + ((var_IKs__xs1ss / var_IKs__txs1) * mDt)) / (1.0 - ((-1 / var_IKs__txs1) * mDt));
        rY[40] = (var_chaste_interface__IKs__xs2 + ((var_IKs__xs2ss / var_IKs__txs2) * mDt)) / (1.0 - ((-1 / var_IKs__txs2) * mDt));
        rY[21] = (var_chaste_interface__INaL__hL + ((var_INaL__hLss / var_INaL__thL) * mDt)) / (1.0 - ((-1 / var_INaL__thL) * mDt));
        rY[22] = (var_chaste_interface__INaL__hLp + ((var_INaL__hLssp / var_INaL__thLp) * mDt)) / (1.0 - ((-1 / var_INaL__thLp) * mDt));
        rY[20] = (var_chaste_interface__INaL__mL + ((var_INaL__mLss / var_INaL__tmL) * mDt)) / (1.0 - ((-1 / var_INaL__tmL) * mDt));
        rY[15] = (var_chaste_interface__INa__hf + ((var_INa__hss / var_INa__thf) * mDt)) / (1.0 - ((-1 / var_INa__thf) * mDt));
        rY[16] = (var_chaste_interface__INa__hs + ((var_INa__hss / var_INa__ths) * mDt)) / (1.0 - ((-1 / var_INa__ths) * mDt));
        rY[18] = (var_chaste_interface__INa__hsp + ((var_INa__hssp / var_INa__thsp) * mDt)) / (1.0 - ((-1 / var_INa__thsp) * mDt));
        rY[17] = (var_chaste_interface__INa__j + ((var_INa__jss / var_INa__tj) * mDt)) / (1.0 - ((-1 / var_INa__tj) * mDt));
        rY[19] = (var_chaste_interface__INa__jp + ((var_INa__jss / var_INa__tjp) * mDt)) / (1.0 - ((-1 / var_INa__tjp) * mDt));
        rY[14] = (var_chaste_interface__INa__m + ((var_INa__mss / var_INa__tm) * mDt)) / (1.0 - ((-1 / var_INa__tm) * mDt));
        rY[41] = (var_chaste_interface__If__y + ((var_If__yss / var_If__tauy) * mDt)) / (1.0 - ((-1 / var_If__tauy) * mDt));
        rY[23] = (var_chaste_interface__Ito__a + ((var_Ito__ass / var_Ito__taua) * mDt)) / (1.0 - ((-1 / var_Ito__taua) * mDt));
        rY[24] = (var_chaste_interface__Ito__i1 + ((var_Ito__iss / var_Ito__tauis) * mDt)) / (1.0 - ((-1 / var_Ito__tauis) * mDt));
        rY[25] = (var_chaste_interface__Ito__i2 + ((var_Ito__iss / var_Ito__tauif) * mDt)) / (1.0 - ((-1 / var_Ito__tauif) * mDt));
        
        double _guess[17] = {rY[2],rY[34],rY[45],rY[13],rY[1],rY[12],rY[11],rY[10],rY[9],rY[6],rY[8],rY[7],rY[3],rY[4],rY[5],rY[43],rY[44]};
        CardiacNewtonSolver<17,CellTrovato2020FromCellMLBackwardEuler>* _p_solver = CardiacNewtonSolver<17,CellTrovato2020FromCellMLBackwardEuler>::Instance();
        _p_solver->Solve(*this, var_chaste_interface__environment__time, _guess);
        rY[2] = _guess[0];
        rY[34] = _guess[1];
        rY[45] = _guess[2];
        rY[13] = _guess[3];
        rY[1] = _guess[4];
        rY[12] = _guess[5];
        rY[11] = _guess[6];
        rY[10] = _guess[7];
        rY[9] = _guess[8];
        rY[6] = _guess[9];
        rY[8] = _guess[10];
        rY[7] = _guess[11];
        rY[3] = _guess[12];
        rY[4] = _guess[13];
        rY[5] = _guess[14];
        rY[43] = _guess[15];
        rY[44] = _guess[16];
    }

    std::vector<double> CellTrovato2020FromCellMLBackwardEuler::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const std::vector<double> & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -86.6814002878592
        double var_chaste_interface__CaMK__CaMKt = rY[2];
        // Units: millimolar; Initial value: 0.00505983330678751
        double var_chaste_interface__intracellular_ions__nasl = rY[4];
        // Units: millimolar; Initial value: 8.23153516580562
        double var_chaste_interface__intracellular_ions__ksl = rY[8];
        // Units: millimolar; Initial value: 143.767769906216
        double var_chaste_interface__intracellular_ions__cass = rY[9];
        // Units: millimolar; Initial value: 0.000101777993438818
        double var_chaste_interface__intracellular_ions__casl = rY[10];
        // Units: millimolar; Initial value: 0.000102004317781147
        double var_chaste_interface__INa__m = rY[14];
        // Units: dimensionless; Initial value: 0.00632661703915808
        double var_chaste_interface__INa__hf = rY[15];
        // Units: dimensionless; Initial value: 0.788611739889677
        double var_chaste_interface__INa__hs = rY[16];
        // Units: dimensionless; Initial value: 0.788545979951331
        double var_chaste_interface__INa__j = rY[17];
        // Units: dimensionless; Initial value: 0.790474358603666
        double var_chaste_interface__INa__hsp = rY[18];
        // Units: dimensionless; Initial value: 0.579693514309867
        double var_chaste_interface__INa__jp = rY[19];
        // Units: dimensionless; Initial value: 0.790947058236417
        double var_chaste_interface__INaL__mL = rY[20];
        // Units: dimensionless; Initial value: 0.000241925773627233
        double var_chaste_interface__INaL__hL = rY[21];
        // Units: dimensionless; Initial value: 0.463574582508218
        double var_chaste_interface__INaL__hLp = rY[22];
        // Units: dimensionless; Initial value: 0.240216198686475
        double var_chaste_interface__Ito__a = rY[23];
        // Units: dimensionless; Initial value: 0.000272851144435704
        double var_chaste_interface__Ito__i1 = rY[24];
        // Units: dimensionless; Initial value: 0.649604795721571
        double var_chaste_interface__Ito__i2 = rY[25];
        // Units: dimensionless; Initial value: 0.989965695822495
        double var_chaste_interface__IKr__xrf = rY[37];
        // Units: dimensionless; Initial value: 0.000331691184084272
        double var_chaste_interface__IKr__xrs = rY[38];
        // Units: dimensionless; Initial value: 0.568716473334161
        double var_chaste_interface__IKs__xs1 = rY[39];
        // Units: dimensionless; Initial value: 0.191165248085394
        double var_chaste_interface__IKs__xs2 = rY[40];
        // Units: dimensionless; Initial value: 0.000222677365291219
        double var_chaste_interface__If__y = rY[41];
        // Units: dimensionless; Initial value: 0.233119011214908
        double var_chaste_interface__IK1__xk1 = rY[42];
        // Units: dimensionless; Initial value: 0.997084813729909
        
        // Lookup table indexing
        const bool _oob_0 = CellTrovato2020FromCellMLBackwardEuler_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__v);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = CellTrovato2020FromCellMLBackwardEuler_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__v);

        // Mathematics
        const double var_CaMK__CaMKo = 0.050000000000000003; // dimensionless
        const double var_CaMK__KmCaM = 0.0015; // millimolar
        const double var_CaMK__KmCaMK = 0.14999999999999999; // millimolar
        const double var_INa__Ahf = 0.98999999999999999; // dimensionless
        const double var_INa__Ahs = 1.0 - var_INa__Ahf; // dimensionless
        const double var_INa__h = var_INa__Ahf * var_chaste_interface__INa__hf + var_INa__Ahs * var_chaste_interface__INa__hs; // dimensionless
        const double var_INa__hp = var_INa__Ahf * var_chaste_interface__INa__hf + var_INa__Ahs * var_chaste_interface__INa__hsp; // dimensionless
        const double var_IK1__GK1Total = 1.000004299990755 * sqrt(mParameters[1]) * mParameters[9]; // milliS_per_microF
        const double var_IKr__GKr_total = 0.43033148291193518 * sqrt(mParameters[1]) * mParameters[11]; // milliS_per_microF
        const double var_IKs__KsCa = 1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__intracellular_ions__casl), 1.3999999999999999)); // dimensionless
        const double var_IKs__GKsTotal = mParameters[12] * var_IKs__KsCa; // milliS_per_microF
        const double var_CaMK__CaMKb = (1.0 - var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKo / (1.0 + var_CaMK__KmCaM / var_chaste_interface__intracellular_ions__cass); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_INa__fINap = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INaL__fINaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_membrane__Istim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
        const double var_IK1__rk1 = 1 / (1.0 + exp(10.545454545454545 + 0.090909090909090912 * var_chaste_interface__membrane__v - 0.5 * mParameters[1])); // millisecond
        const double var_IKr__Axrf = _lt_0_row[1]; // dimensionless
        const double var_IKr__Axrs = 1.0 - var_IKr__Axrf; // dimensionless
        const double var_IKr__rkr = 1 / ((_lt_0_row[2]) * (_lt_0_row[3])); // dimensionless
        const double var_IKr__xr = var_IKr__Axrf * var_chaste_interface__IKr__xrf + var_IKr__Axrs * var_chaste_interface__IKr__xrs; // dimensionless
        const double var_reversal_potentials__ECa = 0.5 * mParameters[4] * mParameters[14] * log(mParameters[0] / var_chaste_interface__intracellular_ions__casl) / mParameters[3]; // millivolt
        const double var_reversal_potentials__EK = mParameters[4] * mParameters[14] * log(mParameters[1] / var_chaste_interface__intracellular_ions__ksl) / mParameters[3]; // millivolt
        const double var_IK1__IK1 = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IK1__GK1Total * var_IK1__rk1 * var_chaste_interface__IK1__xk1; // microA_per_microF
        const double var_IK1__IK1_converted = HeartConfig::Instance()->GetCapacitance() * var_IK1__IK1; // uA_per_cm2
        const double var_IKr__IKr = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IKr__GKr_total * var_IKr__rkr * var_IKr__xr; // microA_per_microF
        const double var_IKr__IKr_converted = HeartConfig::Instance()->GetCapacitance() * var_IKr__IKr; // uA_per_cm2
        const double var_If__IfK = pow(var_chaste_interface__If__y, 2) * (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * mParameters[7]; // microA_per_microF
        const double var_Ito__Ito = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * mParameters[13] * var_chaste_interface__Ito__a * var_chaste_interface__Ito__i1 * var_chaste_interface__Ito__i2; // microA_per_microF
        const double var_Ito__Ito_converted = HeartConfig::Instance()->GetCapacitance() * var_Ito__Ito; // uA_per_cm2
        const double var_reversal_potentials__ENa = mParameters[4] * mParameters[14] * log(mParameters[2] / var_chaste_interface__intracellular_ions__nasl) / mParameters[3]; // millivolt
        const double var_INa__INa = pow(var_chaste_interface__INa__m, 3) * (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - var_INa__fINap) * var_INa__h * var_chaste_interface__INa__j + var_INa__fINap * var_INa__hp * var_chaste_interface__INa__jp) * mParameters[6]; // microA_per_microF
        const double var_INa__INa_converted = HeartConfig::Instance()->GetCapacitance() * var_INa__INa; // uA_per_cm2
        const double var_INaL__INaL = (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - var_INaL__fINaLp) * var_chaste_interface__INaL__hL + var_INaL__fINaLp * var_chaste_interface__INaL__hLp) * mParameters[10] * var_chaste_interface__INaL__mL; // microA_per_microF
        const double var_INaL__INaL_converted = HeartConfig::Instance()->GetCapacitance() * var_INaL__INaL; // uA_per_cm2
        const double var_If__IfNa = pow(var_chaste_interface__If__y, 2) * (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * mParameters[8]; // microA_per_microF
        const double var_If__If = var_If__IfK + var_If__IfNa; // microA_per_microF
        const double var_If__If_converted = HeartConfig::Instance()->GetCapacitance() * var_If__If; // uA_per_cm2
        const double var_reversal_potentials__PKNa = 0.018329999999999999; // dimensionless
        const double var_reversal_potentials__EKs = mParameters[4] * mParameters[14] * log((mParameters[2] * var_reversal_potentials__PKNa + mParameters[1]) / (var_chaste_interface__intracellular_ions__nasl * var_reversal_potentials__PKNa + var_chaste_interface__intracellular_ions__ksl)) / mParameters[3]; // millivolt
        const double var_IKs__IKs = (-var_reversal_potentials__EKs + var_chaste_interface__membrane__v) * var_IKs__GKsTotal * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2; // microA_per_microF
        const double var_IKs__IKs_converted = HeartConfig::Instance()->GetCapacitance() * var_IKs__IKs; // uA_per_cm2

        std::vector<double> dqs(16);
        dqs[0] = var_reversal_potentials__ECa;
        dqs[1] = var_INa__INa_converted;
        dqs[2] = var_If__If_converted;
        dqs[3] = var_IK1__IK1_converted;
        dqs[4] = var_IK1__GK1Total;
        dqs[5] = var_INaL__INaL_converted;
        dqs[6] = var_IKr__IKr_converted;
        dqs[7] = var_IKr__GKr_total;
        dqs[8] = var_IKs__IKs_converted;
        dqs[9] = var_IKs__GKsTotal;
        dqs[10] = var_membrane__Istim_converted;
        dqs[11] = var_Ito__Ito_converted;
        dqs[12] = var_reversal_potentials__EK;
        dqs[13] = var_reversal_potentials__EKs;
        dqs[14] = var_reversal_potentials__ENa;
        dqs[15] = var_chaste_interface__environment__time;
        return dqs;
    }

template<>
void OdeSystemInformation<CellTrovato2020FromCellMLBackwardEuler>::Initialise(void)
{
    this->mSystemName = "Trovato2020";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-86.6814002878592);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(4.36004404734282e-05);

    // rY[2]:
    this->mVariableNames.push_back("CaMK__CaMKt");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.00505983330678751);

    // rY[3]:
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.23183964616932);

    // rY[4]:
    this->mVariableNames.push_back("intracellular_ions__nasl");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.23153516580562);

    // rY[5]:
    this->mVariableNames.push_back("intracellular_ions__nass");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.23154325237268);

    // rY[6]:
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(143.767359809132);

    // rY[7]:
    this->mVariableNames.push_back("intracellular_ions__kss");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(143.767768218104);

    // rY[8]:
    this->mVariableNames.push_back("intracellular_ions__ksl");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(143.767769906216);

    // rY[9]:
    this->mVariableNames.push_back("intracellular_ions__cass");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.000101777993438818);

    // rY[10]:
    this->mVariableNames.push_back("intracellular_ions__casl");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.000102004317781147);

    // rY[11]:
    this->mVariableNames.push_back("intracellular_ions__cansr");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.26350902016858);

    // rY[12]:
    this->mVariableNames.push_back("intracellular_ions__cajsr");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.24811940209535);

    // rY[13]:
    this->mVariableNames.push_back("intracellular_ions__cacsr");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.26516959198518);

    // rY[14]:
    this->mVariableNames.push_back("INa__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00632661703915808);

    // rY[15]:
    this->mVariableNames.push_back("INa__hf");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.788611739889677);

    // rY[16]:
    this->mVariableNames.push_back("INa__hs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.788545979951331);

    // rY[17]:
    this->mVariableNames.push_back("INa__j");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.790474358603666);

    // rY[18]:
    this->mVariableNames.push_back("INa__hsp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.579693514309867);

    // rY[19]:
    this->mVariableNames.push_back("INa__jp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.790947058236417);

    // rY[20]:
    this->mVariableNames.push_back("INaL__mL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000241925773627233);

    // rY[21]:
    this->mVariableNames.push_back("INaL__hL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.463574582508218);

    // rY[22]:
    this->mVariableNames.push_back("INaL__hLp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.240216198686475);

    // rY[23]:
    this->mVariableNames.push_back("Ito__a");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000272851144435704);

    // rY[24]:
    this->mVariableNames.push_back("Ito__i1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.649604795721571);

    // rY[25]:
    this->mVariableNames.push_back("Ito__i2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.989965695822495);

    // rY[26]:
    this->mVariableNames.push_back("ICaL__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(6.97735089296892e-09);

    // rY[27]:
    this->mVariableNames.push_back("ICaL__ff");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999999968230738);

    // rY[28]:
    this->mVariableNames.push_back("ICaL__fs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.926692153319136);

    // rY[29]:
    this->mVariableNames.push_back("ICaL__fcaf");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99999996819573);

    // rY[30]:
    this->mVariableNames.push_back("ICaL__fcas");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999999905741936);

    // rY[31]:
    this->mVariableNames.push_back("ICaL__jca");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999978907334662);

    // rY[32]:
    this->mVariableNames.push_back("ICaL__ffp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999999968365903);

    // rY[33]:
    this->mVariableNames.push_back("ICaL__fcafp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999999968278239);

    // rY[34]:
    this->mVariableNames.push_back("ICaL__nca");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00547252500964926);

    // rY[35]:
    this->mVariableNames.push_back("ICaT__b");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000304250912559619);

    // rY[36]:
    this->mVariableNames.push_back("ICaT__g");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.994214357917907);

    // rY[37]:
    this->mVariableNames.push_back("IKr__xrf");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000331691184084272);

    // rY[38]:
    this->mVariableNames.push_back("IKr__xrs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.568716473334161);

    // rY[39]:
    this->mVariableNames.push_back("IKs__xs1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.191165248085394);

    // rY[40]:
    this->mVariableNames.push_back("IKs__xs2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000222677365291219);

    // rY[41]:
    this->mVariableNames.push_back("If__y");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.233119011214908);

    // rY[42]:
    this->mVariableNames.push_back("IK1__xk1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.997084813729909);

    // rY[43]:
    this->mVariableNames.push_back("ryr__Jrel1");
    this->mVariableUnits.push_back("millimolar_per_millisecond");
    this->mInitialConditions.push_back(0.000108240945806962);

    // rY[44]:
    this->mVariableNames.push_back("ryr__Jrel2");
    this->mVariableUnits.push_back("millimolar_per_millisecond");
    this->mInitialConditions.push_back(1.25045800437317e-69);

    // rY[45]:
    this->mVariableNames.push_back("IP3__u");
    this->mVariableUnits.push_back("millimolar_per_millisecond");
    this->mInitialConditions.push_back(0.466236137183558);

    // mParameters[0]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[1]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[2]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[3]:
    this->mParameterNames.push_back("faraday_constant");
    this->mParameterUnits.push_back("coulomb_per_mole");

    // mParameters[4]:
    this->mParameterNames.push_back("gas_constant");
    this->mParameterUnits.push_back("joule_per_kilomole_kelvin");

    // mParameters[5]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[6]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_hyperpolarisation_activated_funny_current_potassium_component_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_hyperpolarisation_activated_funny_current_sodium_component_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_persistent_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[12]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[13]:
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[14]:
    this->mParameterNames.push_back("temperature");
    this->mParameterUnits.push_back("kelvin");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("calcium_reversal_potential");
    this->mDerivedQuantityUnits.push_back("millivolt");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_hyperpolarisation_activated_funny_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mDerivedQuantityUnits.push_back("milliS_per_microF");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_persistent_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mDerivedQuantityUnits.push_back("milliS_per_microF");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mDerivedQuantityUnits.push_back("milliS_per_microF");

    // Derived Quantity index [10]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [11]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [12]:
    this->mDerivedQuantityNames.push_back("potassium_reversal_potential");
    this->mDerivedQuantityUnits.push_back("millivolt");

    // Derived Quantity index [13]:
    this->mDerivedQuantityNames.push_back("slow_delayed_rectifier_potassium_reversal_potential");
    this->mDerivedQuantityUnits.push_back("millivolt");

    // Derived Quantity index [14]:
    this->mDerivedQuantityNames.push_back("sodium_reversal_potential");
    this->mDerivedQuantityUnits.push_back("millivolt");

    // Derived Quantity index [15]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(CellTrovato2020FromCellMLBackwardEuler)

