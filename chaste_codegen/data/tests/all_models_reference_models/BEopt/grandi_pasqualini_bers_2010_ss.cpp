//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: grandi_pasqualini_bers_2010
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: BackwardEuler)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "grandi_pasqualini_bers_2010_ss.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"
#include "CardiacNewtonSolver.hpp"

class Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler_LookupTables : public AbstractLookupTableCollection
{
public:
    static Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler_LookupTables);
        }
        return mpInstance.get();
    }

    void FreeMemory()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }

    // Row lookup methods
    // using linear-interpolation

    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<19; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }


    const double * IndexTable0(double var_chaste_interface__membrane_potential__V_m)
    {
        const double _offset_0 = var_chaste_interface__membrane_potential__V_m - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }


// LCOV_EXCL_START
    bool CheckIndex0(double& var_chaste_interface__membrane_potential__V_m)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__membrane_potential__V_m>mTableMaxs[0] || var_chaste_interface__membrane_potential__V_m<mTableMins[0])
        {
// LCOV_EXCL_START
            _oob_0 = true;
// LCOV_EXCL_STOP
        }
        return _oob_0;
    }
// LCOV_EXCL_STOP

    ~Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler_LookupTables()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

    }

protected:
    Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler_LookupTables(const Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler_LookupTables&);
    Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler_LookupTables& operator= (const Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler_LookupTables&);
    Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);

        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 19;
        mTableMins[0] = -250.0;
        mTableMaxs[0] = 550.0;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;

        Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler_LookupTables::RegenerateTables();
    }

    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);


        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][19];

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V_m) {
                    return 1 / (1.0 + exp(7.4880000000000004 - 0.16722408026755853 * var_chaste_interface__membrane_potential__V_m));
                };
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V_m);

                _lookup_table_0[i][0] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V_m) {
                    return 1.0 + exp(3.0833333333333335 + 0.041666666666666664 * var_chaste_interface__membrane_potential__V_m);
                };
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V_m);

                _lookup_table_0[i][1] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V_m) {
                    return 1 / (1.0 + exp(-0.83333333333333337 - 0.16666666666666666 * var_chaste_interface__membrane_potential__V_m));
                };
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V_m);

                _lookup_table_0[i][2] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V_m) {
                    return ((fabs(5.0 + var_chaste_interface__membrane_potential__V_m) < 6.0000000000337561e-7) ? (1 / (47619047.618779711 * (1.0 - exp(-1.000000000005626e-7)) / (1.0 + exp(-1.000000000005626e-7)) - 833333.33332864498 * (4.9999994000000001 + var_chaste_interface__membrane_potential__V_m) * (-47619047.618779711 * (1.0 - exp(1.000000000005626e-7)) / (1.0 + exp(1.000000000005626e-7)) - 47619047.618779711 * (1.0 - exp(-1.000000000005626e-7)) / (1.0 + exp(-1.000000000005626e-7))))) : (0.035000000000000003 * (1.0 + exp(-0.83333333333333337 - 0.16666666666666666 * var_chaste_interface__membrane_potential__V_m)) * (5.0 + var_chaste_interface__membrane_potential__V_m) / (1.0 - exp(-0.83333333333333337 - 0.16666666666666666 * var_chaste_interface__membrane_potential__V_m))));
                };
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V_m);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[3] < 2){
                    double left = f(var_chaste_interface__membrane_potential__V_m - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane_potential__V_m + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[3] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[3] >= 2){
                    EXCEPTION("Lookup table 3 at ["<<i<<"][3] has non-finite value: " << val);
                }
                _lookup_table_0[i][3] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V_m) {
                    return 1 / (1.0 + exp(3.8888888888888888 + 0.1111111111111111 * var_chaste_interface__membrane_potential__V_m));
                };
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V_m);

                _lookup_table_0[i][4] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V_m) {
                    return 0.59999999999999998 / (1.0 + exp(2.5 - 0.050000000000000003 * var_chaste_interface__membrane_potential__V_m));
                };
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V_m);

                _lookup_table_0[i][5] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V_m) {
                    return 0.02 + 0.019699999999999999 * exp(-0.23877882250000002 * pow((1 + 0.068965517241379309 * var_chaste_interface__membrane_potential__V_m), 2));
                };
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V_m);

                _lookup_table_0[i][6] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V_m) {
                    return 1 / (1.0 + exp(-2.0 - 0.20000000000000001 * var_chaste_interface__membrane_potential__V_m));
                };
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V_m);

                _lookup_table_0[i][7] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V_m) {
                    return 230.0 / (1.0 + exp(2.0 + 0.050000000000000003 * var_chaste_interface__membrane_potential__V_m)) + 3300.0 / ((1.0 + exp(1.2222222222222223 + 0.1111111111111111 * var_chaste_interface__membrane_potential__V_m)) * (1.0 + exp(-2.4444444444444446 - 0.1111111111111111 * var_chaste_interface__membrane_potential__V_m)));
                };
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V_m);

                _lookup_table_0[i][8] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V_m) {
                    return 1 / (1.0 + exp(-0.26666666666666666 - 0.070175438596491224 * var_chaste_interface__membrane_potential__V_m));
                };
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V_m);

                _lookup_table_0[i][9] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V_m) {
                    return 0.00100999899000101 + 0.00100999899000101 * exp(-0.17252124645892353 - 0.070821529745042494 * var_chaste_interface__membrane_potential__V_m);
                };
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V_m);

                _lookup_table_0[i][10] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V_m) {
                    return 1 / pow((1.0 + exp(-6.2967884828349945 - 0.11074197120708749 * var_chaste_interface__membrane_potential__V_m)), 2);
                };
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V_m);

                _lookup_table_0[i][11] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V_m) {
                    return 0.12920000000000001 * exp(-8.682389366752302 * pow((1 + 0.021838829438742085 * var_chaste_interface__membrane_potential__V_m), 2)) + 0.064869999999999997 * exp(-0.0089012876052174655 * pow((-1 + 0.2073398299813394 * var_chaste_interface__membrane_potential__V_m), 2));
                };
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V_m);

                _lookup_table_0[i][12] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V_m) {
                    return 1 / (1.0 + exp(1.4615384615384615 - 0.076923076923076927 * var_chaste_interface__membrane_potential__V_m));
                };
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V_m);

                _lookup_table_0[i][13] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V_m) {
                    return 0.5 + 8.5 * exp(-0.81000000000000005 * pow((1 + 0.022222222222222223 * var_chaste_interface__membrane_potential__V_m), 2));
                };
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V_m);

                _lookup_table_0[i][14] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V_m) {
                    return 0.5 + 9.0 / (1.0 + exp(0.20000000000000001 + 0.066666666666666666 * var_chaste_interface__membrane_potential__V_m));
                };
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V_m);

                _lookup_table_0[i][15] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V_m) {
                    return 1 / (1.0 + exp(3.8999999999999999 + 0.20000000000000001 * var_chaste_interface__membrane_potential__V_m));
                };
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V_m);

                _lookup_table_0[i][16] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V_m) {
                    return 7.0 + 85.0 * exp(-7.2727272727272725 * pow((1 + 0.025000000000000001 * var_chaste_interface__membrane_potential__V_m), 2));
                };
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V_m);

                _lookup_table_0[i][17] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V_m) {
                    return 30.0 + 800.0 / (1.0 + exp(6.0 + 0.10000000000000001 * var_chaste_interface__membrane_potential__V_m));
                };
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V_m);

                _lookup_table_0[i][18] = val;
            }

            mNeedsRegeneration[0] = false;
        }

        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }

private:
    /** The single instance of the class */
    static std::shared_ptr<Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[19];

    // Lookup tables
    double (*_lookup_table_0)[19];
    int _lookup_table_0_num_misshit_piecewise[19] = {0};

};

std::shared_ptr<Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler_LookupTables> Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler_LookupTables::mpInstance;


    boost::shared_ptr<RegularStimulus> Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane_potential__stim_amplitude_converted = -9.5 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        const double var_chaste_interface__membrane_potential__stim_duration = 5.0; // msec
        const double var_chaste_interface__membrane_potential__stim_period = 1000.0; // msec
        const double var_chaste_interface__membrane_potential__stim_start = 100.0; // msec
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane_potential__stim_amplitude_converted),
                var_chaste_interface__membrane_potential__stim_duration,
                var_chaste_interface__membrane_potential__stim_period,
                var_chaste_interface__membrane_potential__stim_start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    double Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler::Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractBackwardEulerCardiacCell<27>(
                39,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        
        this->mParameters[0] = 5.3480000000000003e-6; // (var_SR_Fluxes__SR_leak_max) [per_msec]
        this->mParameters[1] = 25.0; // (var_parameters__ks) [per_msec]
        this->mParameters[2] = 0.0053114; // (var_parameters__Vmax_SRCaP) [mM_per_msec]
        this->mParameters[3] = 1.0; // (var_Na_Concentrations__conc_clamp) [dimensionless]
        this->mParameters[4] = 15.0; // (var_parameters__Cli) [mM]
        this->mParameters[5] = 1.8; // (var_parameters__Cao) [mM]
        this->mParameters[6] = 150.0; // (var_parameters__Clo) [mM]
        this->mParameters[7] = 5.4000000000000004; // (var_parameters__Ko) [mM]
        this->mParameters[8] = 140.0; // (var_parameters__Nao) [mM]
        this->mParameters[9] = 96485.0; // (var_parameters__Frdy) [coulomb_per_mole]
        this->mParameters[10] = 8314.0; // (var_parameters__R) [joule_per_kelvin_per_kilomole]
        this->mParameters[11] = 0.5; // (var_parameters__pCa_max) [cm_per_sec]
        this->mParameters[12] = 23.0; // (var_parameters__GNa) [mS_per_uF]
        this->mParameters[13] = 0; // (var_I_Na__perc_reduced_inact_for_IpNa) [dimensionless]
        this->mParameters[14] = 0; // (var_I_Na__shift_INa_inact) [mV]
        this->mParameters[15] = 1.0; // (var_I_to__GtoFast_factor) [dimensionless]
        this->mParameters[16] = 0.34999999999999998; // (var_I_Ki__g_ki_factor) [mS_per_uF]
        this->mParameters[17] = 0.035000000000000003; // (var_I_Kr__gkr_max) [mS_per_uF]
        this->mParameters[18] = 1.0; // (var_I_Ks__GKs_factor) [dimensionless]
        this->mParameters[19] = 1.0; // (var_I_to__GtoSlow_factor) [dimensionless]
        this->mParameters[20] = 4.5; // (var_parameters__IbarNCX) [uA_per_uF]
        this->mParameters[21] = 1.8; // (var_parameters__IbarNaK) [uA_per_uF]
        this->mParameters[22] = 1.3809999999999999e-10; // (var_parameters__Cmem) [farad]
        this->mParameters[23] = 310.0; // (var_parameters__Temp) [kelvin]
    }

    Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler::~Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler()
    {
    }

    AbstractLookupTableCollection* Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler::GetLookupTableCollection()
    {
        return Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler_LookupTables::Instance();
    }
    
    double Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__membrane_potential__V_m = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: mV; Initial value: -81.4229700631461
        double var_chaste_interface__I_Na__m = rY[2];
        // Units: dimensionless; Initial value: 0.00381858135062259
        double var_chaste_interface__I_Na__h = rY[3];
        // Units: dimensionless; Initial value: 0.625086621635645
        double var_chaste_interface__I_Na__j = rY[4];
        // Units: dimensionless; Initial value: 0.62332507235506
        double var_chaste_interface__I_Kr__x_kr = rY[5];
        // Units: dimensionless; Initial value: 0.021733554982663
        double var_chaste_interface__I_Ks__x_ks = rY[6];
        // Units: dimensionless; Initial value: 0.00428981903391989
        double var_chaste_interface__I_to__x_to_s = rY[7];
        // Units: dimensionless; Initial value: 0.000441539203559411
        double var_chaste_interface__I_to__y_to_s = rY[8];
        // Units: dimensionless; Initial value: 0.784875334693892
        double var_chaste_interface__I_to__x_to_f = rY[9];
        // Units: dimensionless; Initial value: 0.000441531250866821
        double var_chaste_interface__I_to__y_to_f = rY[10];
        // Units: dimensionless; Initial value: 0.999995817153572
        double var_chaste_interface__I_Ca__d = rY[11];
        // Units: dimensionless; Initial value: 2.93982287251302e-06
        double var_chaste_interface__I_Ca__f = rY[12];
        // Units: dimensionless; Initial value: 0.99511673495949
        double var_chaste_interface__I_Ca__f_Ca_Bj = rY[13];
        // Units: dimensionless; Initial value: 0.0246142436477748
        double var_chaste_interface__I_Ca__f_Ca_Bsl = rY[14];
        // Units: dimensionless; Initial value: 0.0152416826209301
        double var_chaste_interface__Na_Concentrations__Na_j = rY[33];
        // Units: mM; Initial value: 8.3215690202059
        double var_chaste_interface__Na_Concentrations__Na_sl = rY[34];
        // Units: mM; Initial value: 8.32094589677861
        double var_chaste_interface__Na_Concentrations__Na_i = rY[35];
        // Units: mM; Initial value: 8.32114502072456
        double var_chaste_interface__K_Concentration__K_i = rY[36];
        // Units: mM; Initial value: 120.0
        double var_chaste_interface__Ca_Concentrations__Ca_j = rY[37];
        // Units: mM; Initial value: 0.000175415190830688
        double var_chaste_interface__Ca_Concentrations__Ca_sl = rY[38];
        // Units: mM; Initial value: 0.000106544589194246
        
        // Lookup table indexing
        const bool _oob_0 = Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane_potential__V_m);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane_potential__V_m);

        const double var_I_Ca__fcaCaMSL = 0; // dimensionless
        const double var_I_Ca__fcaCaj = 0; // dimensionless
        const double var_I_Kp__kp_kp = _lt_0_row[0]; // dimensionless
        const double var_parameters__FoRT = mParameters[9] / (mParameters[10] * mParameters[23]); // per_mV
        const double var_I_NaK__fnak = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT) + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * mParameters[8])) * exp(-var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT)); // dimensionless
        const double var_I_NaK__I_nak_junc = 0.11 * var_I_NaK__fnak * mParameters[21] * mParameters[7] / ((1.0 + 14641.0 / pow(var_chaste_interface__Na_Concentrations__Na_j, 4)) * (1.5 + mParameters[7])); // uA_per_uF
        const double var_I_NaK__I_nak_sl = 0.89000000000000001 * var_I_NaK__fnak * mParameters[21] * mParameters[7] / ((1.0 + 14641.0 / pow(var_chaste_interface__Na_Concentrations__Na_sl, 4)) * (1.5 + mParameters[7])); // uA_per_uF
        const double var_parameters__Qpow = -31.0 + 0.10000000000000001 * mParameters[23]; // dimensionless
        const double var_parameters__ecl = log(mParameters[4] / mParameters[6]) / var_parameters__FoRT; // mV
        const double var_parameters__ek = log(mParameters[7] / var_chaste_interface__K_Concentration__K_i) / var_parameters__FoRT; // mV
        const double var_parameters__ena_junc = log(mParameters[8] / var_chaste_interface__Na_Concentrations__Na_j) / var_parameters__FoRT; // mV
        const double var_parameters__ena_sl = log(mParameters[8] / var_chaste_interface__Na_Concentrations__Na_sl) / var_parameters__FoRT; // mV
        const double var_I_NCX__I_ncx_junc = 0.11 * pow(1.5700000000000001, var_parameters__Qpow) * (pow(var_chaste_interface__Na_Concentrations__Na_j, 3) * mParameters[5] * exp(0.27000000000000002 * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT) - pow(mParameters[8], 3) * var_chaste_interface__Ca_Concentrations__Ca_j * exp(-0.72999999999999998 * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT)) * mParameters[20] / ((1.0 + 0.32000000000000001 * exp(-0.72999999999999998 * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT)) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Ca_Concentrations__Ca_j, 2)) * (1.3 * pow(var_chaste_interface__Na_Concentrations__Na_j, 3) + pow(var_chaste_interface__Na_Concentrations__Na_j, 3) * mParameters[5] + pow(mParameters[8], 3) * var_chaste_interface__Ca_Concentrations__Ca_j + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Ca_Concentrations__Ca_j) * var_chaste_interface__Ca_Concentrations__Ca_j + 0.0035899999999999999 * pow(mParameters[8], 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Na_Concentrations__Na_j, 3)))); // uA_per_uF
        const double var_I_NCX__I_ncx_sl = 0.89000000000000001 * pow(1.5700000000000001, var_parameters__Qpow) * (pow(var_chaste_interface__Na_Concentrations__Na_sl, 3) * mParameters[5] * exp(0.27000000000000002 * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT) - pow(mParameters[8], 3) * var_chaste_interface__Ca_Concentrations__Ca_sl * exp(-0.72999999999999998 * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT)) * mParameters[20] / ((1.0 + 0.32000000000000001 * exp(-0.72999999999999998 * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT)) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Ca_Concentrations__Ca_sl, 2)) * (1.3 * pow(var_chaste_interface__Na_Concentrations__Na_sl, 3) + pow(var_chaste_interface__Na_Concentrations__Na_sl, 3) * mParameters[5] + pow(mParameters[8], 3) * var_chaste_interface__Ca_Concentrations__Ca_sl + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Ca_Concentrations__Ca_sl) * var_chaste_interface__Ca_Concentrations__Ca_sl + 0.0035899999999999999 * pow(mParameters[8], 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Na_Concentrations__Na_sl, 3)))); // uA_per_uF
        const double var_membrane_potential__I_tot = var_I_NCX__I_ncx_junc + var_I_NCX__I_ncx_sl + var_I_NaK__I_nak_junc + var_I_NaK__I_nak_sl + 0.010148299999999999 * var_chaste_interface__membrane_potential__V_m - 0.0089999999999999993 * var_parameters__ecl - 6.567e-5 * var_parameters__ena_junc - 0.00053133 * var_parameters__ena_sl + 0.002 * (-var_parameters__ek + var_chaste_interface__membrane_potential__V_m) * var_I_Kp__kp_kp + 0.006029375 * (-var_parameters__ecl + var_chaste_interface__membrane_potential__V_m) / (1.0 + 0.10000000000000001 / var_chaste_interface__Ca_Concentrations__Ca_j) + 0.048783124999999997 * (-var_parameters__ecl + var_chaste_interface__membrane_potential__V_m) / (1.0 + 0.10000000000000001 / var_chaste_interface__Ca_Concentrations__Ca_sl) - 3.0321500000000001e-5 * log(mParameters[5] / var_chaste_interface__Ca_Concentrations__Ca_j) / var_parameters__FoRT - 0.00024532850000000001 * log(mParameters[5] / var_chaste_interface__Ca_Concentrations__Ca_sl) / var_parameters__FoRT + 0.0035000000000000001 * pow(var_chaste_interface__I_Ks__x_ks, 2) * (-log((0.018329999999999999 * mParameters[8] + mParameters[7]) / (0.018329999999999999 * var_chaste_interface__Na_Concentrations__Na_i + var_chaste_interface__K_Concentration__K_i)) / var_parameters__FoRT + var_chaste_interface__membrane_potential__V_m) * mParameters[18] + 0.0074029999999999999 * pow(2.3500000000000001, var_parameters__Qpow) * pow(var_chaste_interface__Ca_Concentrations__Ca_j, 1.6000000000000001) / (5.2281977629563632e-6 + pow(var_chaste_interface__Ca_Concentrations__Ca_j, 1.6000000000000001)) + 0.059896999999999999 * pow(2.3500000000000001, var_parameters__Qpow) * pow(var_chaste_interface__Ca_Concentrations__Ca_sl, 1.6000000000000001) / (5.2281977629563632e-6 + pow(var_chaste_interface__Ca_Concentrations__Ca_sl, 1.6000000000000001)) + 0.1144 * (-var_parameters__ek + var_chaste_interface__membrane_potential__V_m) * mParameters[15] * var_chaste_interface__I_to__x_to_f * var_chaste_interface__I_to__y_to_f + 0.015599999999999999 * (-var_parameters__ek + var_chaste_interface__membrane_potential__V_m) * mParameters[19] * var_chaste_interface__I_to__x_to_s * var_chaste_interface__I_to__y_to_s + 0.11 * pow(var_chaste_interface__I_Na__m, 3) * (-var_parameters__ena_junc + var_chaste_interface__membrane_potential__V_m) * var_chaste_interface__I_Na__h * var_chaste_interface__I_Na__j * mParameters[12] + 0.45000000000000001 * pow(1.8, var_parameters__Qpow) * (1.0 + 0.099999999999999978 * var_I_Ca__fcaCaMSL + 0.90000000000000002 * var_I_Ca__fcaCaj - 0.099999999999999978 * var_chaste_interface__I_Ca__f_Ca_Bsl - 0.90000000000000002 * var_chaste_interface__I_Ca__f_Ca_Bj) * ((fabs(var_chaste_interface__membrane_potential__V_m) < 9.9999999999999995e-8 * fabs(mParameters[10] * mParameters[23] / mParameters[9])) ? (-1.3499999999999999e-14 * (-0.75 * mParameters[7] + 0.75 * var_chaste_interface__K_Concentration__K_i * exp(-9.9999999999999995e-8)) * mParameters[9] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * mParameters[10] * mParameters[23] / mParameters[9] + var_chaste_interface__membrane_potential__V_m) * (1.3499999999999999e-14 * (-0.75 * mParameters[7] + 0.75 * var_chaste_interface__K_Concentration__K_i * exp(9.9999999999999995e-8)) * mParameters[9] / (-1.0 + exp(9.9999999999999995e-8)) + 1.3499999999999999e-14 * (-0.75 * mParameters[7] + 0.75 * var_chaste_interface__K_Concentration__K_i * exp(-9.9999999999999995e-8)) * mParameters[9] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[9] / (mParameters[10] * mParameters[23])) : (1.35e-7 * pow(mParameters[9], 2) * (-0.75 * mParameters[7] + 0.75 * var_chaste_interface__K_Concentration__K_i * exp(var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * var_chaste_interface__membrane_potential__V_m / ((-1.0 + exp(var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * mParameters[10] * mParameters[23]))) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f + 0.43033148291193518 * sqrt(mParameters[7]) * (-var_parameters__ek + var_chaste_interface__membrane_potential__V_m) * mParameters[17] * var_chaste_interface__I_Kr__x_kr / (_lt_0_row[1]) + 0.89000000000000001 * pow(var_chaste_interface__I_Na__m, 3) * (-var_parameters__ena_sl + var_chaste_interface__membrane_potential__V_m) * var_chaste_interface__I_Na__h * var_chaste_interface__I_Na__j * mParameters[12] + 0.044999999999999991 * pow(1.8, var_parameters__Qpow) * (1.0 - var_chaste_interface__I_Ca__f_Ca_Bsl + var_I_Ca__fcaCaMSL) * ((fabs(var_chaste_interface__membrane_potential__V_m) < 9.9999999999999995e-8 * fabs(mParameters[10] * mParameters[23] / mParameters[9])) ? (-7.4999999999999986e-16 * (-0.75 * mParameters[8] + 0.75 * var_chaste_interface__Na_Concentrations__Na_sl * exp(-9.9999999999999995e-8)) * mParameters[9] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * mParameters[10] * mParameters[23] / mParameters[9] + var_chaste_interface__membrane_potential__V_m) * (7.4999999999999986e-16 * (-0.75 * mParameters[8] + 0.75 * var_chaste_interface__Na_Concentrations__Na_sl * exp(9.9999999999999995e-8)) * mParameters[9] / (-1.0 + exp(9.9999999999999995e-8)) + 7.4999999999999986e-16 * (-0.75 * mParameters[8] + 0.75 * var_chaste_interface__Na_Concentrations__Na_sl * exp(-9.9999999999999995e-8)) * mParameters[9] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[9] / (mParameters[10] * mParameters[23])) : (7.4999999999999993e-9 * pow(mParameters[9], 2) * (-0.75 * mParameters[8] + 0.75 * var_chaste_interface__Na_Concentrations__Na_sl * exp(var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * var_chaste_interface__membrane_potential__V_m / ((-1.0 + exp(var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * mParameters[10] * mParameters[23]))) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f + 0.044999999999999991 * pow(1.8, var_parameters__Qpow) * (1.0 - var_chaste_interface__I_Ca__f_Ca_Bsl + var_I_Ca__fcaCaMSL) * ((fabs(var_chaste_interface__membrane_potential__V_m) < 4.9999999999999998e-8 * fabs(mParameters[10] * mParameters[23] / mParameters[9])) ? (-1.08e-10 * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * mParameters[9] * mParameters[11] / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * mParameters[10] * mParameters[23] / mParameters[9] + var_chaste_interface__membrane_potential__V_m) * (1.08e-10 * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl * exp(9.9999999999999995e-8)) * mParameters[9] * mParameters[11] / (-1.0 + exp(9.9999999999999995e-8)) + 1.08e-10 * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * mParameters[9] * mParameters[11] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[9] / (mParameters[10] * mParameters[23])) : (0.00216 * pow(mParameters[9], 2) * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl * exp(2.0 * var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * var_chaste_interface__membrane_potential__V_m * mParameters[11] / ((-1.0 + exp(2.0 * var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * mParameters[10] * mParameters[23]))) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f + 0.40500000000000003 * pow(1.8, var_parameters__Qpow) * (1.0 - var_chaste_interface__I_Ca__f_Ca_Bj + var_I_Ca__fcaCaj) * ((fabs(var_chaste_interface__membrane_potential__V_m) < 9.9999999999999995e-8 * fabs(mParameters[10] * mParameters[23] / mParameters[9])) ? (-7.4999999999999986e-16 * (-0.75 * mParameters[8] + 0.75 * var_chaste_interface__Na_Concentrations__Na_j * exp(-9.9999999999999995e-8)) * mParameters[9] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * mParameters[10] * mParameters[23] / mParameters[9] + var_chaste_interface__membrane_potential__V_m) * (7.4999999999999986e-16 * (-0.75 * mParameters[8] + 0.75 * var_chaste_interface__Na_Concentrations__Na_j * exp(9.9999999999999995e-8)) * mParameters[9] / (-1.0 + exp(9.9999999999999995e-8)) + 7.4999999999999986e-16 * (-0.75 * mParameters[8] + 0.75 * var_chaste_interface__Na_Concentrations__Na_j * exp(-9.9999999999999995e-8)) * mParameters[9] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[9] / (mParameters[10] * mParameters[23])) : (7.4999999999999993e-9 * pow(mParameters[9], 2) * (-0.75 * mParameters[8] + 0.75 * var_chaste_interface__Na_Concentrations__Na_j * exp(var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * var_chaste_interface__membrane_potential__V_m / ((-1.0 + exp(var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * mParameters[10] * mParameters[23]))) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f + 0.40500000000000003 * pow(1.8, var_parameters__Qpow) * (1.0 - var_chaste_interface__I_Ca__f_Ca_Bj + var_I_Ca__fcaCaj) * ((fabs(var_chaste_interface__membrane_potential__V_m) < 4.9999999999999998e-8 * fabs(mParameters[10] * mParameters[23] / mParameters[9])) ? (-1.08e-10 * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * mParameters[9] * mParameters[11] / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * mParameters[10] * mParameters[23] / mParameters[9] + var_chaste_interface__membrane_potential__V_m) * (1.08e-10 * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j * exp(9.9999999999999995e-8)) * mParameters[9] * mParameters[11] / (-1.0 + exp(9.9999999999999995e-8)) + 1.08e-10 * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * mParameters[9] * mParameters[11] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[9] / (mParameters[10] * mParameters[23])) : (0.00216 * pow(mParameters[9], 2) * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j * exp(2.0 * var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * var_chaste_interface__membrane_potential__V_m * mParameters[11] / ((-1.0 + exp(2.0 * var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * mParameters[10] * mParameters[23]))) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f + 0.4389381125701739 * sqrt(mParameters[7]) * (-var_parameters__ek + var_chaste_interface__membrane_potential__V_m) * mParameters[16] / ((1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane_potential__V_m - 0.23849999999999999 * var_parameters__ek)) * (1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane_potential__V_m - 0.23849999999999999 * var_parameters__ek)) + (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane_potential__V_m - 0.080320000000000003 * var_parameters__ek) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane_potential__V_m - 0.061749999999999999 * var_parameters__ek)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_parameters__ek - 0.51429999999999998 * var_chaste_interface__membrane_potential__V_m)))); // uA_per_uF
        const double var_chaste_interface__i_ionic = HeartConfig::Instance()->GetCapacitance() * var_membrane_potential__I_tot; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler::ComputeResidual(double var_chaste_interface__environment__time, const double rCurrentGuess[27], double rResidual[27])
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane_potential__V_m = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: mV; Initial value: -81.4229700631461
        double var_chaste_interface__I_Na__m = rY[2];
        // Units: dimensionless; Initial value: 0.00381858135062259
        double var_chaste_interface__I_Na__h = rY[3];
        // Units: dimensionless; Initial value: 0.625086621635645
        double var_chaste_interface__I_Na__j = rY[4];
        // Units: dimensionless; Initial value: 0.62332507235506
        double var_chaste_interface__I_Ca__d = rY[11];
        // Units: dimensionless; Initial value: 2.93982287251302e-06
        double var_chaste_interface__I_Ca__f = rY[12];
        // Units: dimensionless; Initial value: 0.99511673495949
        
        //output_nonlinear_state_assignments
        double var_chaste_interface__Ca_Concentrations__Ca_i = rCurrentGuess[0];
        double var_chaste_interface__Ca_Concentrations__Ca_j = rCurrentGuess[1];
        double var_chaste_interface__Ca_Concentrations__Ca_sl = rCurrentGuess[2];
        double var_chaste_interface__Cytosolic_Ca_Buffers__CaM = rCurrentGuess[3];
        double var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c = rCurrentGuess[4];
        double var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m = rCurrentGuess[5];
        double var_chaste_interface__Cytosolic_Ca_Buffers__SRB = rCurrentGuess[6];
        double var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHc = rCurrentGuess[7];
        double var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHm = rCurrentGuess[8];
        double var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CL = rCurrentGuess[9];
        double var_chaste_interface__I_Ca__f_Ca_Bj = rCurrentGuess[10];
        double var_chaste_interface__I_Ca__f_Ca_Bsl = rCurrentGuess[11];
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j = rCurrentGuess[12];
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl = rCurrentGuess[13];
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j = rCurrentGuess[14];
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl = rCurrentGuess[15];
        double var_chaste_interface__Na_Buffers__Na_Bj = rCurrentGuess[17];
        double var_chaste_interface__Na_Buffers__Na_Bsl = rCurrentGuess[18];
        double var_chaste_interface__Na_Concentrations__Na_i = rCurrentGuess[19];
        double var_chaste_interface__Na_Concentrations__Na_j = rCurrentGuess[20];
        double var_chaste_interface__Na_Concentrations__Na_sl = rCurrentGuess[21];
        double var_chaste_interface__SR_Ca_Concentrations__Ca_sr = rCurrentGuess[22];
        double var_chaste_interface__SR_Ca_Concentrations__Csqn_b = rCurrentGuess[23];
        double var_chaste_interface__SR_Fluxes__Ry_Ri = rCurrentGuess[24];
        double var_chaste_interface__SR_Fluxes__Ry_Ro = rCurrentGuess[25];
        double var_chaste_interface__SR_Fluxes__Ry_Rr = rCurrentGuess[26];
        

        //output_equations
        const double d_dt_chaste_interface_var_K_Concentration__K_i = 0; // mM / msec
        const double d_dt_chaste_interface_var_I_Ca__f_Ca_Bj = -0.011900000000000001 * var_chaste_interface__I_Ca__f_Ca_Bj + 1.7 * (1.0 - var_chaste_interface__I_Ca__f_Ca_Bj) * var_chaste_interface__Ca_Concentrations__Ca_j; // 1 / msec
        const double d_dt_chaste_interface_var_I_Ca__f_Ca_Bsl = -0.011900000000000001 * var_chaste_interface__I_Ca__f_Ca_Bsl + 1.7 * (1.0 - var_chaste_interface__I_Ca__f_Ca_Bsl) * var_chaste_interface__Ca_Concentrations__Ca_sl; // 1 / msec
        const double var_I_Ca__fcaCaMSL = 0; // dimensionless
        const double var_I_Ca__fcaCaj = 0; // dimensionless
        const double var_SR_Fluxes__RI = 1.0 - var_chaste_interface__SR_Fluxes__Ry_Ri - var_chaste_interface__SR_Fluxes__Ry_Ro - var_chaste_interface__SR_Fluxes__Ry_Rr; // mM
        const double var_SR_Fluxes__J_SRleak = (-var_chaste_interface__Ca_Concentrations__Ca_j + var_chaste_interface__SR_Ca_Concentrations__Ca_sr) * mParameters[0]; // mM_per_msec
        const double var_parameters__FoRT = mParameters[9] / (mParameters[10] * mParameters[23]); // per_mV
        const double var_I_NaK__fnak = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT) + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * mParameters[8])) * exp(-var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT)); // dimensionless
        const double var_I_NaK__I_nak_junc = 0.11 * var_I_NaK__fnak * mParameters[21] * mParameters[7] / ((1.0 + 14641.0 / pow(var_chaste_interface__Na_Concentrations__Na_j, 4)) * (1.5 + mParameters[7])); // uA_per_uF
        const double var_I_NaK__I_nak_sl = 0.89000000000000001 * var_I_NaK__fnak * mParameters[21] * mParameters[7] / ((1.0 + 14641.0 / pow(var_chaste_interface__Na_Concentrations__Na_sl, 4)) * (1.5 + mParameters[7])); // uA_per_uF
        const double var_parameters__Qpow = -31.0 + 0.10000000000000001 * mParameters[23]; // dimensionless
        const double var_parameters__Vcell = 1.0506250000000001e-11 * M_PI; // liter
        const double var_parameters__Vjunc = 0.00053900000000000009 * var_parameters__Vcell; // liter
        const double var_parameters__Vmyo = 0.65000000000000002 * var_parameters__Vcell; // liter
        const double d_dt_chaste_interface_var_Na_Concentrations__Na_i = 1.6385999999999999e-12 * (-var_chaste_interface__Na_Concentrations__Na_i + var_chaste_interface__Na_Concentrations__Na_sl) * mParameters[3] / var_parameters__Vmyo; // mM / msec
        const double var_parameters__Bmax_SLhighj = 0.000165 * var_parameters__Vmyo / var_parameters__Vjunc; // mM
        const double var_parameters__Bmax_SLlowj = 0.00046000000000000001 * var_parameters__Vmyo / var_parameters__Vjunc; // mM
        const double var_parameters__Vsl = 0.02 * var_parameters__Vcell; // liter
        const double var_parameters__Bmax_SLhighsl = 0.0134 * var_parameters__Vmyo / var_parameters__Vsl; // mM
        const double var_parameters__Bmax_SLlowsl = 0.037400000000000003 * var_parameters__Vmyo / var_parameters__Vsl; // mM
        const double var_parameters__Vsr = 0.035000000000000003 * var_parameters__Vcell; // liter
        const double var_parameters__Bmax_Csqn = 0.14000000000000001 * var_parameters__Vmyo / var_parameters__Vsr; // mM
        const double var_SR_Fluxes__kCaSR = 15.0 - 14.0 / (1.0 + 0.13584112963311223 * pow((1 / var_chaste_interface__SR_Ca_Concentrations__Ca_sr), 2.5)); // dimensionless
        const double var_parameters__ena_junc = log(mParameters[8] / var_chaste_interface__Na_Concentrations__Na_j) / var_parameters__FoRT; // mV
        const double var_parameters__ena_sl = log(mParameters[8] / var_chaste_interface__Na_Concentrations__Na_sl) / var_parameters__FoRT; // mV
        const double var_SR_Fluxes__J_serca = pow(2.6000000000000001, var_parameters__Qpow) * (2814485.1633595936 * pow(var_chaste_interface__Ca_Concentrations__Ca_i, 1.7869999999999999) - 0.38742512113256738 * pow(var_chaste_interface__SR_Ca_Concentrations__Ca_sr, 1.7869999999999999)) * mParameters[2] / (1.0 + 0.38742512113256738 * pow(var_chaste_interface__SR_Ca_Concentrations__Ca_sr, 1.7869999999999999) + 2814485.1633595936 * pow(var_chaste_interface__Ca_Concentrations__Ca_i, 1.7869999999999999)); // mM_per_msec
        const double var_SR_Fluxes__kiSRCa = 0.5 * var_SR_Fluxes__kCaSR; // per_mM_per_msec
        const double var_SR_Fluxes__koSRCa = 10.0 / var_SR_Fluxes__kCaSR; // per_mM2_per_msec
        const double d_dt_chaste_interface_var_SR_Fluxes__Ry_Ri = -0.065000000000000002 * var_chaste_interface__SR_Fluxes__Ry_Ri + pow(var_chaste_interface__Ca_Concentrations__Ca_j, 2) * var_SR_Fluxes__RI * var_SR_Fluxes__koSRCa + var_chaste_interface__Ca_Concentrations__Ca_j * var_chaste_interface__SR_Fluxes__Ry_Ro * var_SR_Fluxes__kiSRCa; // mM / msec
        const double d_dt_chaste_interface_var_SR_Fluxes__Ry_Ro = 0.0050000000000000001 * var_chaste_interface__SR_Fluxes__Ry_Ri - 0.059999999999999998 * var_chaste_interface__SR_Fluxes__Ry_Ro + pow(var_chaste_interface__Ca_Concentrations__Ca_j, 2) * var_chaste_interface__SR_Fluxes__Ry_Rr * var_SR_Fluxes__koSRCa - var_chaste_interface__Ca_Concentrations__Ca_j * var_chaste_interface__SR_Fluxes__Ry_Ro * var_SR_Fluxes__kiSRCa; // mM / msec
        const double d_dt_chaste_interface_var_SR_Fluxes__Ry_Rr = 0.059999999999999998 * var_chaste_interface__SR_Fluxes__Ry_Ro + 0.0050000000000000001 * var_SR_Fluxes__RI - pow(var_chaste_interface__Ca_Concentrations__Ca_j, 2) * var_chaste_interface__SR_Fluxes__Ry_Rr * var_SR_Fluxes__koSRCa - var_chaste_interface__Ca_Concentrations__Ca_j * var_chaste_interface__SR_Fluxes__Ry_Rr * var_SR_Fluxes__kiSRCa; // mM / msec
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__CaM = -0.23799999999999999 * var_chaste_interface__Cytosolic_Ca_Buffers__CaM + 34.0 * (0.024 - var_chaste_interface__Cytosolic_Ca_Buffers__CaM) * var_chaste_interface__Ca_Concentrations__Ca_i; // mM / msec
        const double d_dt_chaste_interface_var_SR_Ca_Concentrations__Csqn_b = -65.0 * var_chaste_interface__SR_Ca_Concentrations__Csqn_b + 100.0 * (-var_chaste_interface__SR_Ca_Concentrations__Csqn_b + var_parameters__Bmax_Csqn) * var_chaste_interface__SR_Ca_Concentrations__Ca_sr; // mM / msec
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_c = -0.00046000000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c + 13.800000000000001 * (0.14000000000000001 - var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c - var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m) * var_chaste_interface__Ca_Concentrations__Ca_i; // mM / msec
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_m = 0.0021979999999999999 - 0.015699999999999999 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c - 0.015757 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m; // mM / msec
        const double var_Na_Buffers__dNa_Bj_dt = -0.001 * var_chaste_interface__Na_Buffers__Na_Bj + 0.0001 * (7.5609999999999999 - var_chaste_interface__Na_Buffers__Na_Bj) * var_chaste_interface__Na_Concentrations__Na_j; // mM_per_msec
        const double d_dt_chaste_interface_var_Na_Buffers__Na_Bj = var_Na_Buffers__dNa_Bj_dt; // mM / msec
        const double var_Na_Buffers__dNa_Bsl_dt = -0.001 * var_chaste_interface__Na_Buffers__Na_Bsl + 0.0001 * (1.6499999999999999 - var_chaste_interface__Na_Buffers__Na_Bsl) * var_chaste_interface__Na_Concentrations__Na_sl; // mM_per_msec
        const double d_dt_chaste_interface_var_Na_Buffers__Na_Bsl = var_Na_Buffers__dNa_Bsl_dt; // mM / msec
        const double d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_j = -0.029999999999999999 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j + 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j + var_parameters__Bmax_SLhighj) * var_chaste_interface__Ca_Concentrations__Ca_j; // mM / msec
        const double d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_sl = -0.029999999999999999 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl + 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl + var_parameters__Bmax_SLhighsl) * var_chaste_interface__Ca_Concentrations__Ca_sl; // mM / msec
        const double d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_j = -1.3 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j + 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j + var_parameters__Bmax_SLlowj) * var_chaste_interface__Ca_Concentrations__Ca_j; // mM / msec
        const double d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_sl = -1.3 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl + 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl + var_parameters__Bmax_SLlowsl) * var_chaste_interface__Ca_Concentrations__Ca_sl; // mM / msec
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__SRB = -0.059999999999999998 * var_chaste_interface__Cytosolic_Ca_Buffers__SRB + 100.0 * (0.017100000000000001 - var_chaste_interface__Cytosolic_Ca_Buffers__SRB) * var_chaste_interface__Ca_Concentrations__Ca_i; // mM / msec
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Tn_CHc = -3.1999999999999999e-5 * var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHc + 2.3700000000000001 * (0.14000000000000001 - var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHc - var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHm) * var_chaste_interface__Ca_Concentrations__Ca_i; // mM / msec
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Tn_CHm = 0.00042000000000000007 - 0.0030000000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHc - 0.0063300000000000006 * var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHm; // mM / msec
        const double d_dt_chaste_interface_var_Ca_Concentrations__Ca_i = -0.0026180000000000001 + 0.23799999999999999 * var_chaste_interface__Cytosolic_Ca_Buffers__CaM + 0.059999999999999998 * var_chaste_interface__Cytosolic_Ca_Buffers__SRB + 0.019599999999999999 * var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CL + 0.0063300000000000006 * var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHm + 0.016159999999999997 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c + 0.003032 * var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHc + 0.015757 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m + 3.2742999999999999e-12 * (-var_chaste_interface__Ca_Concentrations__Ca_i + var_chaste_interface__Ca_Concentrations__Ca_sl) / var_parameters__Vmyo - 34.0 * (0.024 - var_chaste_interface__Cytosolic_Ca_Buffers__CaM) * var_chaste_interface__Ca_Concentrations__Ca_i - 100.0 * (0.017100000000000001 - var_chaste_interface__Cytosolic_Ca_Buffers__SRB) * var_chaste_interface__Ca_Concentrations__Ca_i - 32.700000000000003 * (0.070000000000000007 - var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CL) * var_chaste_interface__Ca_Concentrations__Ca_i - 2.3700000000000001 * (0.14000000000000001 - var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHc - var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHm) * var_chaste_interface__Ca_Concentrations__Ca_i - 13.800000000000001 * (0.14000000000000001 - var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c - var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m) * var_chaste_interface__Ca_Concentrations__Ca_i - var_SR_Fluxes__J_serca * var_parameters__Vsr / var_parameters__Vmyo; // mM / msec
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Tn_CL = -0.019599999999999999 * var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CL + 32.700000000000003 * (0.070000000000000007 - var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CL) * var_chaste_interface__Ca_Concentrations__Ca_i; // mM / msec
        const double var_SR_Fluxes__J_SRCarel = (-var_chaste_interface__Ca_Concentrations__Ca_j + var_chaste_interface__SR_Ca_Concentrations__Ca_sr) * var_chaste_interface__SR_Fluxes__Ry_Ro * mParameters[1]; // mM_per_msec
        const double d_dt_chaste_interface_var_SR_Ca_Concentrations__Ca_sr = -var_SR_Fluxes__J_SRCarel + 65.0 * var_chaste_interface__SR_Ca_Concentrations__Csqn_b - 100.0 * (-var_chaste_interface__SR_Ca_Concentrations__Csqn_b + var_parameters__Bmax_Csqn) * var_chaste_interface__SR_Ca_Concentrations__Ca_sr - var_SR_Fluxes__J_SRleak * var_parameters__Vmyo / var_parameters__Vsr + var_SR_Fluxes__J_serca; // mM / msec
        const double var_I_NCX__I_ncx_junc = 0.11 * pow(1.5700000000000001, var_parameters__Qpow) * (pow(var_chaste_interface__Na_Concentrations__Na_j, 3) * mParameters[5] * exp(0.27000000000000002 * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT) - pow(mParameters[8], 3) * var_chaste_interface__Ca_Concentrations__Ca_j * exp(-0.72999999999999998 * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT)) * mParameters[20] / ((1.0 + 0.32000000000000001 * exp(-0.72999999999999998 * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT)) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Ca_Concentrations__Ca_j, 2)) * (1.3 * pow(var_chaste_interface__Na_Concentrations__Na_j, 3) + pow(var_chaste_interface__Na_Concentrations__Na_j, 3) * mParameters[5] + pow(mParameters[8], 3) * var_chaste_interface__Ca_Concentrations__Ca_j + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Ca_Concentrations__Ca_j) * var_chaste_interface__Ca_Concentrations__Ca_j + 0.0035899999999999999 * pow(mParameters[8], 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Na_Concentrations__Na_j, 3)))); // uA_per_uF
        const double var_I_NCX__I_ncx_sl = 0.89000000000000001 * pow(1.5700000000000001, var_parameters__Qpow) * (pow(var_chaste_interface__Na_Concentrations__Na_sl, 3) * mParameters[5] * exp(0.27000000000000002 * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT) - pow(mParameters[8], 3) * var_chaste_interface__Ca_Concentrations__Ca_sl * exp(-0.72999999999999998 * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT)) * mParameters[20] / ((1.0 + 0.32000000000000001 * exp(-0.72999999999999998 * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT)) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Ca_Concentrations__Ca_sl, 2)) * (1.3 * pow(var_chaste_interface__Na_Concentrations__Na_sl, 3) + pow(var_chaste_interface__Na_Concentrations__Na_sl, 3) * mParameters[5] + pow(mParameters[8], 3) * var_chaste_interface__Ca_Concentrations__Ca_sl + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Ca_Concentrations__Ca_sl) * var_chaste_interface__Ca_Concentrations__Ca_sl + 0.0035899999999999999 * pow(mParameters[8], 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Na_Concentrations__Na_sl, 3)))); // uA_per_uF
        const double var_Na_Concentrations__I_Na_tot_junc = 3.0 * var_I_NCX__I_ncx_junc + 3.0 * var_I_NaK__I_nak_junc + 6.567e-5 * var_chaste_interface__membrane_potential__V_m - 6.567e-5 * var_parameters__ena_junc + 0.11 * pow(var_chaste_interface__I_Na__m, 3) * (-var_parameters__ena_junc + var_chaste_interface__membrane_potential__V_m) * var_chaste_interface__I_Na__h * var_chaste_interface__I_Na__j * mParameters[12] + 0.40500000000000003 * pow(1.8, var_parameters__Qpow) * (1.0 - var_chaste_interface__I_Ca__f_Ca_Bj + var_I_Ca__fcaCaj) * ((fabs(var_chaste_interface__membrane_potential__V_m) < 9.9999999999999995e-8 * fabs(mParameters[10] * mParameters[23] / mParameters[9])) ? (-7.4999999999999986e-16 * (-0.75 * mParameters[8] + 0.75 * var_chaste_interface__Na_Concentrations__Na_j * exp(-9.9999999999999995e-8)) * mParameters[9] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * mParameters[10] * mParameters[23] / mParameters[9] + var_chaste_interface__membrane_potential__V_m) * (7.4999999999999986e-16 * (-0.75 * mParameters[8] + 0.75 * var_chaste_interface__Na_Concentrations__Na_j * exp(9.9999999999999995e-8)) * mParameters[9] / (-1.0 + exp(9.9999999999999995e-8)) + 7.4999999999999986e-16 * (-0.75 * mParameters[8] + 0.75 * var_chaste_interface__Na_Concentrations__Na_j * exp(-9.9999999999999995e-8)) * mParameters[9] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[9] / (mParameters[10] * mParameters[23])) : (7.4999999999999993e-9 * pow(mParameters[9], 2) * (-0.75 * mParameters[8] + 0.75 * var_chaste_interface__Na_Concentrations__Na_j * exp(var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * var_chaste_interface__membrane_potential__V_m / ((-1.0 + exp(var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * mParameters[10] * mParameters[23]))) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f; // uA_per_uF
        const double d_dt_chaste_interface_var_Na_Concentrations__Na_j = (-var_Na_Buffers__dNa_Bj_dt + 1.8312999999999999e-14 * (-var_chaste_interface__Na_Concentrations__Na_j + var_chaste_interface__Na_Concentrations__Na_sl) / var_parameters__Vjunc - var_Na_Concentrations__I_Na_tot_junc * mParameters[22] / (mParameters[9] * var_parameters__Vjunc)) * mParameters[3]; // mM / msec
        const double var_Na_Concentrations__I_Na_tot_sl = 3.0 * var_I_NCX__I_ncx_sl + 3.0 * var_I_NaK__I_nak_sl + 0.00053133 * var_chaste_interface__membrane_potential__V_m - 0.00053133 * var_parameters__ena_sl + 0.89000000000000001 * pow(var_chaste_interface__I_Na__m, 3) * (-var_parameters__ena_sl + var_chaste_interface__membrane_potential__V_m) * var_chaste_interface__I_Na__h * var_chaste_interface__I_Na__j * mParameters[12] + 0.044999999999999991 * pow(1.8, var_parameters__Qpow) * (1.0 - var_chaste_interface__I_Ca__f_Ca_Bsl + var_I_Ca__fcaCaMSL) * ((fabs(var_chaste_interface__membrane_potential__V_m) < 9.9999999999999995e-8 * fabs(mParameters[10] * mParameters[23] / mParameters[9])) ? (-7.4999999999999986e-16 * (-0.75 * mParameters[8] + 0.75 * var_chaste_interface__Na_Concentrations__Na_sl * exp(-9.9999999999999995e-8)) * mParameters[9] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * mParameters[10] * mParameters[23] / mParameters[9] + var_chaste_interface__membrane_potential__V_m) * (7.4999999999999986e-16 * (-0.75 * mParameters[8] + 0.75 * var_chaste_interface__Na_Concentrations__Na_sl * exp(9.9999999999999995e-8)) * mParameters[9] / (-1.0 + exp(9.9999999999999995e-8)) + 7.4999999999999986e-16 * (-0.75 * mParameters[8] + 0.75 * var_chaste_interface__Na_Concentrations__Na_sl * exp(-9.9999999999999995e-8)) * mParameters[9] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[9] / (mParameters[10] * mParameters[23])) : (7.4999999999999993e-9 * pow(mParameters[9], 2) * (-0.75 * mParameters[8] + 0.75 * var_chaste_interface__Na_Concentrations__Na_sl * exp(var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * var_chaste_interface__membrane_potential__V_m / ((-1.0 + exp(var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * mParameters[10] * mParameters[23]))) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f; // uA_per_uF
        const double d_dt_chaste_interface_var_Na_Concentrations__Na_sl = (-var_Na_Buffers__dNa_Bsl_dt + 1.6385999999999999e-12 * (-var_chaste_interface__Na_Concentrations__Na_sl + var_chaste_interface__Na_Concentrations__Na_i) / var_parameters__Vsl + 1.8312999999999999e-14 * (-var_chaste_interface__Na_Concentrations__Na_sl + var_chaste_interface__Na_Concentrations__Na_j) / var_parameters__Vsl - var_Na_Concentrations__I_Na_tot_sl * mParameters[22] / (mParameters[9] * var_parameters__Vsl)) * mParameters[3]; // mM / msec
        const double var_Ca_Concentrations__I_Ca_tot_junc = 6.0643000000000002e-5 * var_chaste_interface__membrane_potential__V_m - 2.0 * var_I_NCX__I_ncx_junc - 3.0321500000000001e-5 * log(mParameters[5] / var_chaste_interface__Ca_Concentrations__Ca_j) / var_parameters__FoRT + 0.0074029999999999999 * pow(2.3500000000000001, var_parameters__Qpow) * pow(var_chaste_interface__Ca_Concentrations__Ca_j, 1.6000000000000001) / (5.2281977629563632e-6 + pow(var_chaste_interface__Ca_Concentrations__Ca_j, 1.6000000000000001)) + 0.40500000000000003 * pow(1.8, var_parameters__Qpow) * (1.0 - var_chaste_interface__I_Ca__f_Ca_Bj + var_I_Ca__fcaCaj) * ((fabs(var_chaste_interface__membrane_potential__V_m) < 4.9999999999999998e-8 * fabs(mParameters[10] * mParameters[23] / mParameters[9])) ? (-1.08e-10 * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * mParameters[9] * mParameters[11] / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * mParameters[10] * mParameters[23] / mParameters[9] + var_chaste_interface__membrane_potential__V_m) * (1.08e-10 * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j * exp(9.9999999999999995e-8)) * mParameters[9] * mParameters[11] / (-1.0 + exp(9.9999999999999995e-8)) + 1.08e-10 * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * mParameters[9] * mParameters[11] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[9] / (mParameters[10] * mParameters[23])) : (0.00216 * pow(mParameters[9], 2) * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j * exp(2.0 * var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * var_chaste_interface__membrane_potential__V_m * mParameters[11] / ((-1.0 + exp(2.0 * var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * mParameters[10] * mParameters[23]))) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f; // uA_per_uF
        const double d_dt_chaste_interface_var_Ca_Concentrations__Ca_j = 0.029999999999999999 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j + 1.3 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j + 8.2413000000000004e-13 * (-var_chaste_interface__Ca_Concentrations__Ca_j + var_chaste_interface__Ca_Concentrations__Ca_sl) / var_parameters__Vjunc - 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j + var_parameters__Bmax_SLhighj) * var_chaste_interface__Ca_Concentrations__Ca_j - 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j + var_parameters__Bmax_SLlowj) * var_chaste_interface__Ca_Concentrations__Ca_j + var_SR_Fluxes__J_SRCarel * var_parameters__Vsr / var_parameters__Vjunc + var_SR_Fluxes__J_SRleak * var_parameters__Vmyo / var_parameters__Vjunc - 0.5 * var_Ca_Concentrations__I_Ca_tot_junc * mParameters[22] / (mParameters[9] * var_parameters__Vjunc); // mM / msec
        const double var_Ca_Concentrations__I_Ca_tot_sl = 0.00049065700000000003 * var_chaste_interface__membrane_potential__V_m - 2.0 * var_I_NCX__I_ncx_sl - 0.00024532850000000001 * log(mParameters[5] / var_chaste_interface__Ca_Concentrations__Ca_sl) / var_parameters__FoRT + 0.059896999999999999 * pow(2.3500000000000001, var_parameters__Qpow) * pow(var_chaste_interface__Ca_Concentrations__Ca_sl, 1.6000000000000001) / (5.2281977629563632e-6 + pow(var_chaste_interface__Ca_Concentrations__Ca_sl, 1.6000000000000001)) + 0.044999999999999991 * pow(1.8, var_parameters__Qpow) * (1.0 - var_chaste_interface__I_Ca__f_Ca_Bsl + var_I_Ca__fcaCaMSL) * ((fabs(var_chaste_interface__membrane_potential__V_m) < 4.9999999999999998e-8 * fabs(mParameters[10] * mParameters[23] / mParameters[9])) ? (-1.08e-10 * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * mParameters[9] * mParameters[11] / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * mParameters[10] * mParameters[23] / mParameters[9] + var_chaste_interface__membrane_potential__V_m) * (1.08e-10 * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl * exp(9.9999999999999995e-8)) * mParameters[9] * mParameters[11] / (-1.0 + exp(9.9999999999999995e-8)) + 1.08e-10 * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * mParameters[9] * mParameters[11] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[9] / (mParameters[10] * mParameters[23])) : (0.00216 * pow(mParameters[9], 2) * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl * exp(2.0 * var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * var_chaste_interface__membrane_potential__V_m * mParameters[11] / ((-1.0 + exp(2.0 * var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * mParameters[10] * mParameters[23]))) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f; // uA_per_uF
        const double d_dt_chaste_interface_var_Ca_Concentrations__Ca_sl = 0.029999999999999999 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl + 1.3 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl + 8.2413000000000004e-13 * (-var_chaste_interface__Ca_Concentrations__Ca_sl + var_chaste_interface__Ca_Concentrations__Ca_j) / var_parameters__Vsl + 3.2742999999999999e-12 * (-var_chaste_interface__Ca_Concentrations__Ca_sl + var_chaste_interface__Ca_Concentrations__Ca_i) / var_parameters__Vsl - 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl + var_parameters__Bmax_SLhighsl) * var_chaste_interface__Ca_Concentrations__Ca_sl - 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl + var_parameters__Bmax_SLlowsl) * var_chaste_interface__Ca_Concentrations__Ca_sl - 0.5 * var_Ca_Concentrations__I_Ca_tot_sl * mParameters[22] / (mParameters[9] * var_parameters__Vsl); // mM / msec
        
        rResidual[0] = rCurrentGuess[0] - rY[1] - mDt*d_dt_chaste_interface_var_Ca_Concentrations__Ca_i;
        rResidual[10] = rCurrentGuess[10] - rY[13] - mDt*d_dt_chaste_interface_var_I_Ca__f_Ca_Bj;
        rResidual[11] = rCurrentGuess[11] - rY[14] - mDt*d_dt_chaste_interface_var_I_Ca__f_Ca_Bsl;
        rResidual[26] = rCurrentGuess[26] - rY[15] - mDt*d_dt_chaste_interface_var_SR_Fluxes__Ry_Rr;
        rResidual[25] = rCurrentGuess[25] - rY[16] - mDt*d_dt_chaste_interface_var_SR_Fluxes__Ry_Ro;
        rResidual[24] = rCurrentGuess[24] - rY[17] - mDt*d_dt_chaste_interface_var_SR_Fluxes__Ry_Ri;
        rResidual[17] = rCurrentGuess[17] - rY[18] - mDt*d_dt_chaste_interface_var_Na_Buffers__Na_Bj;
        rResidual[18] = rCurrentGuess[18] - rY[19] - mDt*d_dt_chaste_interface_var_Na_Buffers__Na_Bsl;
        rResidual[9] = rCurrentGuess[9] - rY[20] - mDt*d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Tn_CL;
        rResidual[7] = rCurrentGuess[7] - rY[21] - mDt*d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Tn_CHc;
        rResidual[8] = rCurrentGuess[8] - rY[22] - mDt*d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Tn_CHm;
        rResidual[3] = rCurrentGuess[3] - rY[23] - mDt*d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__CaM;
        rResidual[4] = rCurrentGuess[4] - rY[24] - mDt*d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_c;
        rResidual[5] = rCurrentGuess[5] - rY[25] - mDt*d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_m;
        rResidual[6] = rCurrentGuess[6] - rY[26] - mDt*d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__SRB;
        rResidual[14] = rCurrentGuess[14] - rY[27] - mDt*d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_j;
        rResidual[15] = rCurrentGuess[15] - rY[28] - mDt*d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_sl;
        rResidual[12] = rCurrentGuess[12] - rY[29] - mDt*d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_j;
        rResidual[13] = rCurrentGuess[13] - rY[30] - mDt*d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_sl;
        rResidual[23] = rCurrentGuess[23] - rY[31] - mDt*d_dt_chaste_interface_var_SR_Ca_Concentrations__Csqn_b;
        rResidual[22] = rCurrentGuess[22] - rY[32] - mDt*d_dt_chaste_interface_var_SR_Ca_Concentrations__Ca_sr;
        rResidual[20] = rCurrentGuess[20] - rY[33] - mDt*d_dt_chaste_interface_var_Na_Concentrations__Na_j;
        rResidual[21] = rCurrentGuess[21] - rY[34] - mDt*d_dt_chaste_interface_var_Na_Concentrations__Na_sl;
        rResidual[19] = rCurrentGuess[19] - rY[35] - mDt*d_dt_chaste_interface_var_Na_Concentrations__Na_i;
        rResidual[16] = rCurrentGuess[16] - rY[36] - mDt*d_dt_chaste_interface_var_K_Concentration__K_i;
        rResidual[1] = rCurrentGuess[1] - rY[37] - mDt*d_dt_chaste_interface_var_Ca_Concentrations__Ca_j;
        rResidual[2] = rCurrentGuess[2] - rY[38] - mDt*d_dt_chaste_interface_var_Ca_Concentrations__Ca_sl;
    }

    void Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler::ComputeJacobian(double var_chaste_interface__environment__time, const double rCurrentGuess[27], double rJacobian[27][27])
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane_potential__V_m = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: mV; Initial value: -81.4229700631461
        double var_chaste_interface__I_Na__m = rY[2];
        // Units: dimensionless; Initial value: 0.00381858135062259
        double var_chaste_interface__I_Na__h = rY[3];
        // Units: dimensionless; Initial value: 0.625086621635645
        double var_chaste_interface__I_Na__j = rY[4];
        // Units: dimensionless; Initial value: 0.62332507235506
        double var_chaste_interface__I_Ca__d = rY[11];
        // Units: dimensionless; Initial value: 2.93982287251302e-06
        double var_chaste_interface__I_Ca__f = rY[12];
        // Units: dimensionless; Initial value: 0.99511673495949
        

        double var_chaste_interface__Ca_Concentrations__Ca_i = rCurrentGuess[0];
        double var_chaste_interface__Ca_Concentrations__Ca_j = rCurrentGuess[1];
        double var_chaste_interface__Ca_Concentrations__Ca_sl = rCurrentGuess[2];
        double var_chaste_interface__Cytosolic_Ca_Buffers__CaM = rCurrentGuess[3];
        double var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c = rCurrentGuess[4];
        double var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m = rCurrentGuess[5];
        double var_chaste_interface__Cytosolic_Ca_Buffers__SRB = rCurrentGuess[6];
        double var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHc = rCurrentGuess[7];
        double var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHm = rCurrentGuess[8];
        double var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CL = rCurrentGuess[9];
        double var_chaste_interface__I_Ca__f_Ca_Bj = rCurrentGuess[10];
        double var_chaste_interface__I_Ca__f_Ca_Bsl = rCurrentGuess[11];
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j = rCurrentGuess[12];
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl = rCurrentGuess[13];
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j = rCurrentGuess[14];
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl = rCurrentGuess[15];
        double var_chaste_interface__Na_Buffers__Na_Bj = rCurrentGuess[17];
        double var_chaste_interface__Na_Buffers__Na_Bsl = rCurrentGuess[18];
        double var_chaste_interface__Na_Concentrations__Na_j = rCurrentGuess[20];
        double var_chaste_interface__Na_Concentrations__Na_sl = rCurrentGuess[21];
        double var_chaste_interface__SR_Ca_Concentrations__Ca_sr = rCurrentGuess[22];
        double var_chaste_interface__SR_Ca_Concentrations__Csqn_b = rCurrentGuess[23];
        double var_chaste_interface__SR_Fluxes__Ry_Ri = rCurrentGuess[24];
        double var_chaste_interface__SR_Fluxes__Ry_Ro = rCurrentGuess[25];
        double var_chaste_interface__SR_Fluxes__Ry_Rr = rCurrentGuess[26];
        
        const double var_x0 = 34.0 * var_chaste_interface__Cytosolic_Ca_Buffers__CaM;
        const double var_x1 = 100.0 * var_chaste_interface__Cytosolic_Ca_Buffers__SRB;
        const double var_x2 = 32.700000000000003 * var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CL;
        const double var_x3 = 2.3700000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHc;
        const double var_x4 = 2.3700000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHm;
        const double var_x5 = 13.800000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c;
        const double var_x6 = 13.800000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m;
        const double var_x7 = 1 / M_PI;
        const double var_x8 = 0.4794655196082917 * var_x7;
        const double var_x9 = pow(var_chaste_interface__Ca_Concentrations__Ca_i, 0.78699999999999992);
        const double var_x10 = pow(var_chaste_interface__SR_Ca_Concentrations__Ca_sr, 1.7869999999999999);
        const double var_x11 = 0.38742512113256738 * var_x10;
        const double var_x12 = pow(var_chaste_interface__Ca_Concentrations__Ca_i, 1.7869999999999999);
        const double var_x13 = 2814485.1633595936 * var_x12;
        const double var_x14 = -31.0 + 0.10000000000000001 * mParameters[23];
        const double var_x15 = pow(2.6000000000000001, var_x14) * mParameters[2];
        const double var_x16 = var_x15 / (1.0 + var_x11 + var_x13);
        const double var_x17 = var_x16 * var_x9;
        const double var_x18 = var_x15 * (var_x13 - var_x11) / pow((3.5530476870814998e-7 + var_x12 + 1.3765399305573384e-7 * var_x10), 2);
        const double var_x19 = var_x18 * var_x9;
        const double var_x20 = 34.0 * var_chaste_interface__Ca_Concentrations__Ca_i;
        const double var_x21 = 13.800000000000001 * var_chaste_interface__Ca_Concentrations__Ca_i;
        const double var_x22 = 100.0 * var_chaste_interface__Ca_Concentrations__Ca_i;
        const double var_x23 = 2.3700000000000001 * var_chaste_interface__Ca_Concentrations__Ca_i;
        const double var_x24 = 32.700000000000003 * var_chaste_interface__Ca_Concentrations__Ca_i;
        const double var_x25 = pow(var_chaste_interface__SR_Ca_Concentrations__Ca_sr, 0.78699999999999992);
        const double var_x26 = var_x16 * var_x25;
        const double var_x27 = var_x18 * var_x25;
        const double var_x28 = 100.0 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j;
        const double var_x29 = 100.0 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j;
        const double var_x30 = 145.53224458892851 * var_x7;
        const double var_x31 = 1205.9369202226344 * mParameters[0];
        const double var_x32 = var_chaste_interface__SR_Fluxes__Ry_Ro * mParameters[1];
        const double var_x33 = 64.935064935064929 * var_x32;
        const double var_x34 = exp(-9.9999999999999995e-8);
        const double var_x35 = 1 / (-1.0 + var_x34);
        const double var_x36 = var_x34 * var_x35;
        const double var_x37 = mParameters[9] * mParameters[11];
        const double var_x38 = 3.6827999999999999e-11 * var_x37;
        const double var_x39 = var_x36 * var_x38;
        const double var_x40 = exp(9.9999999999999995e-8);
        const double var_x41 = 1 / (-1.0 + var_x40);
        const double var_x42 = var_x40 * var_x41;
        const double var_x43 = 1 / mParameters[9];
        const double var_x44 = var_x43 * mParameters[10] * mParameters[23];
        const double var_x45 = 1 / mParameters[10];
        const double var_x46 = 1 / mParameters[23];
        const double var_x47 = var_x45 * var_x46 * mParameters[9];
        const double var_x48 = 10000000.0 * var_x47 * (4.9999999999999998e-8 * var_x44 + var_chaste_interface__membrane_potential__V_m);
        const double var_x49 = -var_x39 + var_x48 * (var_x39 + var_x38 * var_x42);
        const double var_x50 = 1.0 - var_chaste_interface__I_Ca__f_Ca_Bj;
        const double var_x51 = pow(1.8, var_x14) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f;
        const double var_x52 = 0.40500000000000003 * var_x51;
        const double var_x53 = var_x50 * var_x52;
        const double var_x54 = 5.2281977629563632e-6 + pow(var_chaste_interface__Ca_Concentrations__Ca_j, 1.6000000000000001);
        const double var_x55 = pow(2.3500000000000001, var_x14);
        const double var_x56 = 0.011844800000000001 * var_x55;
        const double var_x57 = var_x47 * var_chaste_interface__membrane_potential__V_m;
        const double var_x58 = exp(-0.72999999999999998 * var_x57);
        const double var_x59 = pow(mParameters[8], 3);
        const double var_x60 = var_x58 * var_x59;
        const double var_x61 = pow(var_chaste_interface__Na_Concentrations__Na_j, 3);
        const double var_x62 = var_x61 * mParameters[5];
        const double var_x63 = var_x59 * var_chaste_interface__Ca_Concentrations__Ca_j;
        const double var_x64 = (1.0 + 278.55153203342621 * var_chaste_interface__Ca_Concentrations__Ca_j) * var_chaste_interface__Ca_Concentrations__Ca_j;
        const double var_x65 = var_x59 * (1.0 + 0.00053869674493876331 * var_x61);
        const double var_x66 = 1 / (var_x62 + var_x63 + 669921.875 * var_x64 + 1.3 * var_x61 + 0.0035899999999999999 * var_x65);
        const double var_x67 = pow(var_chaste_interface__Ca_Concentrations__Ca_j, 2);
        const double var_x68 = 1.0 + 2.2499999999999996e-8 / var_x67;
        const double var_x69 = pow(1.5700000000000001, var_x14) * mParameters[20] / (1.0 + 0.32000000000000001 * var_x58);
        const double var_x70 = var_x69 / var_x68;
        const double var_x71 = var_x66 * var_x70;
        const double var_x72 = var_x60 * var_x71;
        const double var_x73 = -669921.875 - var_x59;
        const double var_x74 = var_x73 - 373215529.24791086 * var_chaste_interface__Ca_Concentrations__Ca_j;
        const double var_x75 = exp(0.27000000000000002 * var_x57);
        const double var_x76 = var_x62 * var_x75 - var_x58 * var_x63;
        const double var_x77 = var_x70 * var_x76 / pow((var_x64 + 1.9405247813411081e-6 * var_x61 + 5.3588338192419823e-9 * var_x65 + 1.4927113702623908e-6 * var_x62 + 1.4927113702623908e-6 * var_x63), 2);
        const double var_x78 = 4.9020119168033731e-13 * var_x77;
        const double var_x79 = var_x66 * var_x69 * var_x76 / (pow(var_x68, 2) * pow(var_chaste_interface__Ca_Concentrations__Ca_j, 3));
        const double var_x80 = 0.22 * var_x72 - 9.8999999999999977e-9 * var_x79 - var_x74 * var_x78 + 3.0321500000000001e-5 * var_x44 / var_chaste_interface__Ca_Concentrations__Ca_j + var_x56 * pow(var_chaste_interface__Ca_Concentrations__Ca_j, 0.60000000000000009) / var_x54 - var_x56 * pow(var_chaste_interface__Ca_Concentrations__Ca_j, 2.2000000000000002) / pow(var_x54, 2);
        const double var_x81 = fabs(var_chaste_interface__membrane_potential__V_m);
        const double var_x82 = fabs(var_x44);
        const double var_x83 = var_x81 < 4.9999999999999998e-8 * var_x82;
        const double var_x84 = exp(2.0 * var_x57);
        const double var_x85 = var_x45 * var_x46 * var_x51 * pow(mParameters[9], 2) * var_chaste_interface__membrane_potential__V_m;
        const double var_x86 = var_x85 * mParameters[11] / (-1.0 + var_x84);
        const double var_x87 = var_x84 * var_x86;
        const double var_x88 = var_x43 * mParameters[22];
        const double var_x89 = var_x7 * var_x88;
        const double var_x90 = 88294470889864.781 * var_x89;
        const double var_x91 = -0.34100000000000003 * mParameters[5];
        const double var_x92 = 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j;
        const double var_x93 = 1.08e-10 * var_x37;
        const double var_x94 = var_x35 * var_x93;
        const double var_x95 = var_x94 * (var_x91 + var_x34 * var_x92);
        const double var_x96 = var_x41 * var_x93;
        const double var_x97 = 100.0 * var_chaste_interface__Ca_Concentrations__Ca_j;
        const double var_x98 = pow(var_chaste_interface__Na_Concentrations__Na_j, 2);
        const double var_x99 = 3 * mParameters[5];
        const double var_x100 = 5.8017639429904805e-6 * var_x59;
        const double var_x101 = -3.9000000000000004 * var_x98 - var_x100 * var_x98 - var_x98 * var_x99;
        const double var_x102 = var_x75 * mParameters[5];
        const double var_x103 = var_x102 * var_x71 * var_x98;
        const double var_x104 = 100.0 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl;
        const double var_x105 = 100.0 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl;
        const double var_x106 = 1.0 - var_chaste_interface__I_Ca__f_Ca_Bsl;
        const double var_x107 = 0.044999999999999991 * var_x51;
        const double var_x108 = var_x106 * var_x107;
        const double var_x109 = 5.2281977629563632e-6 + pow(var_chaste_interface__Ca_Concentrations__Ca_sl, 1.6000000000000001);
        const double var_x110 = 0.095835200000000009 * var_x55;
        const double var_x111 = pow(var_chaste_interface__Na_Concentrations__Na_sl, 3);
        const double var_x112 = var_x111 * mParameters[5];
        const double var_x113 = var_x59 * var_chaste_interface__Ca_Concentrations__Ca_sl;
        const double var_x114 = (1.0 + 278.55153203342621 * var_chaste_interface__Ca_Concentrations__Ca_sl) * var_chaste_interface__Ca_Concentrations__Ca_sl;
        const double var_x115 = var_x59 * (1.0 + 0.00053869674493876331 * var_x111);
        const double var_x116 = 1 / (var_x112 + var_x113 + 669921.875 * var_x114 + 1.3 * var_x111 + 0.0035899999999999999 * var_x115);
        const double var_x117 = 1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Ca_Concentrations__Ca_sl, 2);
        const double var_x118 = var_x69 / var_x117;
        const double var_x119 = var_x116 * var_x118;
        const double var_x120 = var_x119 * var_x60;
        const double var_x121 = var_x73 - 373215529.24791086 * var_chaste_interface__Ca_Concentrations__Ca_sl;
        const double var_x122 = var_x112 * var_x75 - var_x113 * var_x58;
        const double var_x123 = var_x118 * var_x122 / pow((var_x114 + 1.9405247813411081e-6 * var_x111 + 5.3588338192419823e-9 * var_x115 + 1.4927113702623908e-6 * var_x112 + 1.4927113702623908e-6 * var_x113), 2);
        const double var_x124 = 3.9661732781409103e-12 * var_x123;
        const double var_x125 = var_x116 * var_x122 * var_x69 / (pow(var_x117, 2) * pow(var_chaste_interface__Ca_Concentrations__Ca_sl, 3));
        const double var_x126 = 1.78 * var_x120 - 8.0099999999999983e-8 * var_x125 - var_x121 * var_x124 + 0.00024532850000000001 * var_x44 / var_chaste_interface__Ca_Concentrations__Ca_sl + var_x110 * pow(var_chaste_interface__Ca_Concentrations__Ca_sl, 0.60000000000000009) / var_x109 - var_x110 * pow(var_chaste_interface__Ca_Concentrations__Ca_sl, 2.2000000000000002) / pow(var_x109, 2);
        const double var_x127 = 2379535990481.856 * var_x89;
        const double var_x128 = 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl;
        const double var_x129 = var_x94 * (var_x91 + var_x128 * var_x34);
        const double var_x130 = 100.0 * var_chaste_interface__Ca_Concentrations__Ca_sl;
        const double var_x131 = pow(var_chaste_interface__Na_Concentrations__Na_sl, 2);
        const double var_x132 = -3.9000000000000004 * var_x131 - var_x100 * var_x131 - var_x131 * var_x99;
        const double var_x133 = var_x102 * var_x119 * var_x131;
        const double var_x134 = -var_x21;
        const double var_x135 = -var_x23;
        const double var_x136 = -var_x97;
        const double var_x137 = -var_x130;
        const double var_x138 = 0.0001 * var_chaste_interface__Na_Concentrations__Na_j;
        const double var_x139 = 0.0001 * var_chaste_interface__Na_Buffers__Na_Bj;
        const double var_x140 = 0.0001 * var_chaste_interface__Na_Concentrations__Na_sl;
        const double var_x141 = 0.0001 * var_chaste_interface__Na_Buffers__Na_Bsl;
        const double var_x142 = var_x7 * mParameters[3];
        const double var_x143 = 0.23994508763098885 * var_x142;
        const double var_x144 = 7.3530178752050587e-13 * var_x77;
        const double var_x145 = var_x142 * var_x88;
        const double var_x146 = 176588941779729.56 * var_x145;
        const double var_x147 = -0.75 * mParameters[8];
        const double var_x148 = 0.75 * var_chaste_interface__Na_Concentrations__Na_j;
        const double var_x149 = 7.4999999999999986e-16 * mParameters[9];
        const double var_x150 = var_x149 * var_x35;
        const double var_x151 = var_x150 * (var_x147 + var_x148 * var_x34);
        const double var_x152 = var_x149 * var_x41;
        const double var_x153 = 5000000.0 * var_x47 * (9.9999999999999995e-8 * var_x44 + var_chaste_interface__membrane_potential__V_m);
        const double var_x154 = var_x81 < 9.9999999999999995e-8 * var_x82;
        const double var_x155 = exp(var_x57);
        const double var_x156 = var_x85 / (-1.0 + var_x155);
        const double var_x157 = 3.2338732908121872 * var_x7;
        const double var_x158 = 5.6249999999999997e-16 * mParameters[9];
        const double var_x159 = var_x158 * var_x36;
        const double var_x160 = -var_x159 + var_x153 * (var_x159 + var_x158 * var_x42);
        const double var_x161 = var_x44 / var_chaste_interface__Na_Concentrations__Na_j;
        const double var_x162 = mParameters[21] * mParameters[7] / ((1.5 + mParameters[7]) * (1.0 + 0.1245 * exp(-0.10000000000000001 * var_x57) + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * mParameters[8])) * exp(-var_x57)));
        const double var_x163 = pow(var_chaste_interface__I_Na__m, 3) * var_chaste_interface__I_Na__h * var_chaste_interface__I_Na__j * mParameters[12];
        const double var_x164 = 0.98999999999999999 * var_x103 + 6.567e-5 * var_x161 + var_x101 * var_x144 + 0.11 * var_x161 * var_x163 + 9.0157776108189337e-5 * var_x162 / (pow((6.8301345536507063e-5 + pow(var_chaste_interface__Na_Concentrations__Na_j, (-4))), 2) * pow(var_chaste_interface__Na_Concentrations__Na_j, 5));
        const double var_x165 = var_x155 * var_x156;
        const double var_x166 = 5.9492599172113663e-12 * var_x123;
        const double var_x167 = 4759071980963.7119 * var_x145;
        const double var_x168 = 0.75 * var_chaste_interface__Na_Concentrations__Na_sl;
        const double var_x169 = var_x150 * (var_x147 + var_x168 * var_x34);
        const double var_x170 = var_x44 / var_chaste_interface__Na_Concentrations__Na_sl;
        const double var_x171 = 0.00053133 * var_x170 + 8.0099999999999998 * var_x133 + var_x132 * var_x166 + 0.89000000000000001 * var_x163 * var_x170 + 0.00072945837032989554 * var_x162 / (pow((6.8301345536507063e-5 + pow(var_chaste_interface__Na_Concentrations__Na_sl, (-4))), 2) * pow(var_chaste_interface__Na_Concentrations__Na_sl, 5));
        const double var_x172 = 18.571428571428569 * mParameters[0];
        const double var_x173 = var_x32;
        const double var_x174 = 100.0 * var_chaste_interface__SR_Ca_Concentrations__Csqn_b;
        const double var_x175 = 100.0 * var_chaste_interface__SR_Ca_Concentrations__Ca_sr;
        const double var_x176 = 1 / var_chaste_interface__SR_Ca_Concentrations__Ca_sr;
        const double var_x177 = pow(var_x176, 2.5);
        const double var_x178 = 1.0 + 0.13584112963311223 * var_x177;
        const double var_x179 = 1 / var_x178;
        const double var_x180 = 7.0 * var_x179;
        const double var_x181 = 7.5 - var_x180;
        const double var_x182 = 1.0 - var_chaste_interface__SR_Fluxes__Ry_Ri - var_chaste_interface__SR_Fluxes__Ry_Ro - var_chaste_interface__SR_Fluxes__Ry_Rr;
        const double var_x183 = 1 / (15.0 - 14.0 * var_x179);
        const double var_x184 = 20.0 * var_x183 * var_chaste_interface__Ca_Concentrations__Ca_j;
        const double var_x185 = var_x176 * var_x177 / pow(var_x178, 2);
        const double var_x186 = 2.3772197685794643 * var_x185 * var_chaste_interface__Ca_Concentrations__Ca_j;
        const double var_x187 = var_x186 * var_chaste_interface__SR_Fluxes__Ry_Ro;
        const double var_x188 = 0.21130842387373014 * var_x185 * var_x67 / pow((1 - 0.93333333333333335 * var_x179), 2);
        const double var_x189 = 10.0 * var_x183 * var_x67;
        const double var_x190 = -var_x189;
        const double var_x191 = -7.5 + var_x180;
        const double var_x192 = var_x184 * var_chaste_interface__SR_Fluxes__Ry_Rr;
        const double var_x193 = var_x188 * var_chaste_interface__SR_Fluxes__Ry_Rr;
        const double var_x194 = var_x191 * var_chaste_interface__Ca_Concentrations__Ca_j;
        
        
        rJacobian[0][0] = 1.0 - (mDt * (-7.0788000000000011 + var_x0 + var_x1 + var_x2 + var_x3 + var_x4 + var_x5 + var_x6 - var_x8 + 3.4188518090540365e-8 * var_x19 - 270818.42237280885 * var_x17));
        rJacobian[0][1] = 0.0;
        rJacobian[0][2] = -(mDt * (var_x8));
        rJacobian[0][3] = -(mDt * (0.23799999999999999 + var_x20));
        rJacobian[0][4] = -(mDt * (0.016159999999999997 + var_x21));
        rJacobian[0][5] = -(mDt * (0.015757 + var_x21));
        rJacobian[0][6] = -(mDt * (0.059999999999999998 + var_x22));
        rJacobian[0][7] = -(mDt * (0.003032 + var_x23));
        rJacobian[0][8] = -(mDt * (0.0063300000000000006 + var_x23));
        rJacobian[0][9] = -(mDt * (0.019599999999999999 + var_x24));
        rJacobian[0][10] = 0.0;
        rJacobian[0][11] = 0.0;
        rJacobian[0][12] = 0.0;
        rJacobian[0][13] = 0.0;
        rJacobian[0][14] = 0.0;
        rJacobian[0][15] = 0.0;
        rJacobian[0][16] = 0.0;
        rJacobian[0][17] = 0.0;
        rJacobian[0][18] = 0.0;
        rJacobian[0][19] = 0.0;
        rJacobian[0][20] = 0.0;
        rJacobian[0][21] = 0.0;
        rJacobian[0][22] = -(mDt * (0.037279237232671424 * var_x26 + 4.7061860318210743e-15 * var_x27));
        rJacobian[0][23] = 0.0;
        rJacobian[0][24] = 0.0;
        rJacobian[0][25] = 0.0;
        rJacobian[0][26] = 0.0;
        rJacobian[1][0] = 0.0;
        rJacobian[1][1] = 1.0 - (mDt * (-75.37105751391465 + var_x28 + var_x29 - var_x30 - var_x31 - var_x33 - var_x90 * ((var_x83) ? (var_x80 + var_x49 * var_x53) : (var_x80 + 0.00029830680000000003 * var_x50 * var_x87))));
        rJacobian[1][2] = -(mDt * (var_x30));
        rJacobian[1][3] = 0.0;
        rJacobian[1][4] = 0.0;
        rJacobian[1][5] = 0.0;
        rJacobian[1][6] = 0.0;
        rJacobian[1][7] = 0.0;
        rJacobian[1][8] = 0.0;
        rJacobian[1][9] = 0.0;
        rJacobian[1][10] = -(mDt * (-var_x90 * ((var_x83) ? (-var_x52 * (-var_x95 + var_x48 * (var_x95 + var_x96 * (var_x91 + var_x40 * var_x92)))) : (-0.00087480000000000001 * var_x86 * (var_x91 + var_x84 * var_x92)))));
        rJacobian[1][11] = 0.0;
        rJacobian[1][12] = -(mDt * (0.029999999999999999 + var_x97));
        rJacobian[1][13] = 0.0;
        rJacobian[1][14] = -(mDt * (1.3 + var_x97));
        rJacobian[1][15] = 0.0;
        rJacobian[1][16] = 0.0;
        rJacobian[1][17] = 0.0;
        rJacobian[1][18] = 0.0;
        rJacobian[1][19] = 0.0;
        rJacobian[1][20] = -(mDt * (-var_x90 * (-0.66000000000000003 * var_x103 - var_x101 * var_x78)));
        rJacobian[1][21] = 0.0;
        rJacobian[1][22] = -(mDt * (var_x31 + var_x33));
        rJacobian[1][23] = 0.0;
        rJacobian[1][24] = 0.0;
        rJacobian[1][25] = -(mDt * ((64.935064935064929 * var_chaste_interface__SR_Ca_Concentrations__Ca_sr - 64.935064935064929 * var_chaste_interface__Ca_Concentrations__Ca_j) * mParameters[1]));
        rJacobian[1][26] = 0.0;
        rJacobian[2][0] = -(mDt * (15.582629387269481 * var_x7));
        rJacobian[2][1] = -(mDt * (3.9220939916716238 * var_x7));
        rJacobian[2][2] = 1.0 - (mDt * (-165.10000000000002 + var_x104 + var_x105 - 19.504723378941105 * var_x7 - var_x127 * ((var_x83) ? (var_x126 + var_x108 * var_x49) : (var_x126 + 3.3145199999999996e-5 * var_x106 * var_x87))));
        rJacobian[2][3] = 0.0;
        rJacobian[2][4] = 0.0;
        rJacobian[2][5] = 0.0;
        rJacobian[2][6] = 0.0;
        rJacobian[2][7] = 0.0;
        rJacobian[2][8] = 0.0;
        rJacobian[2][9] = 0.0;
        rJacobian[2][10] = 0.0;
        rJacobian[2][11] = -(mDt * (-var_x127 * ((var_x83) ? (-var_x107 * (-var_x129 + var_x48 * (var_x129 + var_x96 * (var_x91 + var_x128 * var_x40)))) : (-9.7199999999999977e-5 * var_x86 * (var_x91 + var_x128 * var_x84)))));
        rJacobian[2][12] = 0.0;
        rJacobian[2][13] = -(mDt * (0.029999999999999999 + var_x130));
        rJacobian[2][14] = 0.0;
        rJacobian[2][15] = -(mDt * (1.3 + var_x130));
        rJacobian[2][16] = 0.0;
        rJacobian[2][17] = 0.0;
        rJacobian[2][18] = 0.0;
        rJacobian[2][19] = 0.0;
        rJacobian[2][20] = 0.0;
        rJacobian[2][21] = -(mDt * (-var_x127 * (-5.3399999999999999 * var_x133 - var_x124 * var_x132)));
        rJacobian[2][22] = 0.0;
        rJacobian[2][23] = 0.0;
        rJacobian[2][24] = 0.0;
        rJacobian[2][25] = 0.0;
        rJacobian[2][26] = 0.0;
        rJacobian[3][0] = -(mDt * (0.81600000000000006 - var_x0));
        rJacobian[3][1] = 0.0;
        rJacobian[3][2] = 0.0;
        rJacobian[3][3] = 1.0 - (mDt * (-0.23799999999999999 - var_x20));
        rJacobian[3][4] = 0.0;
        rJacobian[3][5] = 0.0;
        rJacobian[3][6] = 0.0;
        rJacobian[3][7] = 0.0;
        rJacobian[3][8] = 0.0;
        rJacobian[3][9] = 0.0;
        rJacobian[3][10] = 0.0;
        rJacobian[3][11] = 0.0;
        rJacobian[3][12] = 0.0;
        rJacobian[3][13] = 0.0;
        rJacobian[3][14] = 0.0;
        rJacobian[3][15] = 0.0;
        rJacobian[3][16] = 0.0;
        rJacobian[3][17] = 0.0;
        rJacobian[3][18] = 0.0;
        rJacobian[3][19] = 0.0;
        rJacobian[3][20] = 0.0;
        rJacobian[3][21] = 0.0;
        rJacobian[3][22] = 0.0;
        rJacobian[3][23] = 0.0;
        rJacobian[3][24] = 0.0;
        rJacobian[3][25] = 0.0;
        rJacobian[3][26] = 0.0;
        rJacobian[4][0] = -(mDt * (1.9320000000000004 - var_x5 - var_x6));
        rJacobian[4][1] = 0.0;
        rJacobian[4][2] = 0.0;
        rJacobian[4][3] = 0.0;
        rJacobian[4][4] = 1.0 - (mDt * (-0.00046000000000000001 + var_x134));
        rJacobian[4][5] = -(mDt * (var_x134));
        rJacobian[4][6] = 0.0;
        rJacobian[4][7] = 0.0;
        rJacobian[4][8] = 0.0;
        rJacobian[4][9] = 0.0;
        rJacobian[4][10] = 0.0;
        rJacobian[4][11] = 0.0;
        rJacobian[4][12] = 0.0;
        rJacobian[4][13] = 0.0;
        rJacobian[4][14] = 0.0;
        rJacobian[4][15] = 0.0;
        rJacobian[4][16] = 0.0;
        rJacobian[4][17] = 0.0;
        rJacobian[4][18] = 0.0;
        rJacobian[4][19] = 0.0;
        rJacobian[4][20] = 0.0;
        rJacobian[4][21] = 0.0;
        rJacobian[4][22] = 0.0;
        rJacobian[4][23] = 0.0;
        rJacobian[4][24] = 0.0;
        rJacobian[4][25] = 0.0;
        rJacobian[4][26] = 0.0;
        rJacobian[5][0] = 0.0;
        rJacobian[5][1] = 0.0;
        rJacobian[5][2] = 0.0;
        rJacobian[5][3] = 0.0;
        rJacobian[5][4] = -(mDt * (-0.015699999999999999));
        rJacobian[5][5] = 1.0 - (mDt * (-0.015757));
        rJacobian[5][6] = 0.0;
        rJacobian[5][7] = 0.0;
        rJacobian[5][8] = 0.0;
        rJacobian[5][9] = 0.0;
        rJacobian[5][10] = 0.0;
        rJacobian[5][11] = 0.0;
        rJacobian[5][12] = 0.0;
        rJacobian[5][13] = 0.0;
        rJacobian[5][14] = 0.0;
        rJacobian[5][15] = 0.0;
        rJacobian[5][16] = 0.0;
        rJacobian[5][17] = 0.0;
        rJacobian[5][18] = 0.0;
        rJacobian[5][19] = 0.0;
        rJacobian[5][20] = 0.0;
        rJacobian[5][21] = 0.0;
        rJacobian[5][22] = 0.0;
        rJacobian[5][23] = 0.0;
        rJacobian[5][24] = 0.0;
        rJacobian[5][25] = 0.0;
        rJacobian[5][26] = 0.0;
        rJacobian[6][0] = -(mDt * (1.71 - var_x1));
        rJacobian[6][1] = 0.0;
        rJacobian[6][2] = 0.0;
        rJacobian[6][3] = 0.0;
        rJacobian[6][4] = 0.0;
        rJacobian[6][5] = 0.0;
        rJacobian[6][6] = 1.0 - (mDt * (-0.059999999999999998 - var_x22));
        rJacobian[6][7] = 0.0;
        rJacobian[6][8] = 0.0;
        rJacobian[6][9] = 0.0;
        rJacobian[6][10] = 0.0;
        rJacobian[6][11] = 0.0;
        rJacobian[6][12] = 0.0;
        rJacobian[6][13] = 0.0;
        rJacobian[6][14] = 0.0;
        rJacobian[6][15] = 0.0;
        rJacobian[6][16] = 0.0;
        rJacobian[6][17] = 0.0;
        rJacobian[6][18] = 0.0;
        rJacobian[6][19] = 0.0;
        rJacobian[6][20] = 0.0;
        rJacobian[6][21] = 0.0;
        rJacobian[6][22] = 0.0;
        rJacobian[6][23] = 0.0;
        rJacobian[6][24] = 0.0;
        rJacobian[6][25] = 0.0;
        rJacobian[6][26] = 0.0;
        rJacobian[7][0] = -(mDt * (0.33180000000000004 - var_x3 - var_x4));
        rJacobian[7][1] = 0.0;
        rJacobian[7][2] = 0.0;
        rJacobian[7][3] = 0.0;
        rJacobian[7][4] = 0.0;
        rJacobian[7][5] = 0.0;
        rJacobian[7][6] = 0.0;
        rJacobian[7][7] = 1.0 - (mDt * (-3.1999999999999999e-5 + var_x135));
        rJacobian[7][8] = -(mDt * (var_x135));
        rJacobian[7][9] = 0.0;
        rJacobian[7][10] = 0.0;
        rJacobian[7][11] = 0.0;
        rJacobian[7][12] = 0.0;
        rJacobian[7][13] = 0.0;
        rJacobian[7][14] = 0.0;
        rJacobian[7][15] = 0.0;
        rJacobian[7][16] = 0.0;
        rJacobian[7][17] = 0.0;
        rJacobian[7][18] = 0.0;
        rJacobian[7][19] = 0.0;
        rJacobian[7][20] = 0.0;
        rJacobian[7][21] = 0.0;
        rJacobian[7][22] = 0.0;
        rJacobian[7][23] = 0.0;
        rJacobian[7][24] = 0.0;
        rJacobian[7][25] = 0.0;
        rJacobian[7][26] = 0.0;
        rJacobian[8][0] = 0.0;
        rJacobian[8][1] = 0.0;
        rJacobian[8][2] = 0.0;
        rJacobian[8][3] = 0.0;
        rJacobian[8][4] = 0.0;
        rJacobian[8][5] = 0.0;
        rJacobian[8][6] = 0.0;
        rJacobian[8][7] = -(mDt * (-0.0030000000000000001));
        rJacobian[8][8] = 1.0 - (mDt * (-0.0063300000000000006));
        rJacobian[8][9] = 0.0;
        rJacobian[8][10] = 0.0;
        rJacobian[8][11] = 0.0;
        rJacobian[8][12] = 0.0;
        rJacobian[8][13] = 0.0;
        rJacobian[8][14] = 0.0;
        rJacobian[8][15] = 0.0;
        rJacobian[8][16] = 0.0;
        rJacobian[8][17] = 0.0;
        rJacobian[8][18] = 0.0;
        rJacobian[8][19] = 0.0;
        rJacobian[8][20] = 0.0;
        rJacobian[8][21] = 0.0;
        rJacobian[8][22] = 0.0;
        rJacobian[8][23] = 0.0;
        rJacobian[8][24] = 0.0;
        rJacobian[8][25] = 0.0;
        rJacobian[8][26] = 0.0;
        rJacobian[9][0] = -(mDt * (2.2890000000000006 - var_x2));
        rJacobian[9][1] = 0.0;
        rJacobian[9][2] = 0.0;
        rJacobian[9][3] = 0.0;
        rJacobian[9][4] = 0.0;
        rJacobian[9][5] = 0.0;
        rJacobian[9][6] = 0.0;
        rJacobian[9][7] = 0.0;
        rJacobian[9][8] = 0.0;
        rJacobian[9][9] = 1.0 - (mDt * (-0.019599999999999999 - var_x24));
        rJacobian[9][10] = 0.0;
        rJacobian[9][11] = 0.0;
        rJacobian[9][12] = 0.0;
        rJacobian[9][13] = 0.0;
        rJacobian[9][14] = 0.0;
        rJacobian[9][15] = 0.0;
        rJacobian[9][16] = 0.0;
        rJacobian[9][17] = 0.0;
        rJacobian[9][18] = 0.0;
        rJacobian[9][19] = 0.0;
        rJacobian[9][20] = 0.0;
        rJacobian[9][21] = 0.0;
        rJacobian[9][22] = 0.0;
        rJacobian[9][23] = 0.0;
        rJacobian[9][24] = 0.0;
        rJacobian[9][25] = 0.0;
        rJacobian[9][26] = 0.0;
        rJacobian[10][0] = 0.0;
        rJacobian[10][1] = -(mDt * (1.7 - 1.7 * var_chaste_interface__I_Ca__f_Ca_Bj));
        rJacobian[10][2] = 0.0;
        rJacobian[10][3] = 0.0;
        rJacobian[10][4] = 0.0;
        rJacobian[10][5] = 0.0;
        rJacobian[10][6] = 0.0;
        rJacobian[10][7] = 0.0;
        rJacobian[10][8] = 0.0;
        rJacobian[10][9] = 0.0;
        rJacobian[10][10] = 1.0 - (mDt * (-0.011900000000000001 - 1.7 * var_chaste_interface__Ca_Concentrations__Ca_j));
        rJacobian[10][11] = 0.0;
        rJacobian[10][12] = 0.0;
        rJacobian[10][13] = 0.0;
        rJacobian[10][14] = 0.0;
        rJacobian[10][15] = 0.0;
        rJacobian[10][16] = 0.0;
        rJacobian[10][17] = 0.0;
        rJacobian[10][18] = 0.0;
        rJacobian[10][19] = 0.0;
        rJacobian[10][20] = 0.0;
        rJacobian[10][21] = 0.0;
        rJacobian[10][22] = 0.0;
        rJacobian[10][23] = 0.0;
        rJacobian[10][24] = 0.0;
        rJacobian[10][25] = 0.0;
        rJacobian[10][26] = 0.0;
        rJacobian[11][0] = 0.0;
        rJacobian[11][1] = 0.0;
        rJacobian[11][2] = -(mDt * (1.7 - 1.7 * var_chaste_interface__I_Ca__f_Ca_Bsl));
        rJacobian[11][3] = 0.0;
        rJacobian[11][4] = 0.0;
        rJacobian[11][5] = 0.0;
        rJacobian[11][6] = 0.0;
        rJacobian[11][7] = 0.0;
        rJacobian[11][8] = 0.0;
        rJacobian[11][9] = 0.0;
        rJacobian[11][10] = 0.0;
        rJacobian[11][11] = 1.0 - (mDt * (-0.011900000000000001 - 1.7 * var_chaste_interface__Ca_Concentrations__Ca_sl));
        rJacobian[11][12] = 0.0;
        rJacobian[11][13] = 0.0;
        rJacobian[11][14] = 0.0;
        rJacobian[11][15] = 0.0;
        rJacobian[11][16] = 0.0;
        rJacobian[11][17] = 0.0;
        rJacobian[11][18] = 0.0;
        rJacobian[11][19] = 0.0;
        rJacobian[11][20] = 0.0;
        rJacobian[11][21] = 0.0;
        rJacobian[11][22] = 0.0;
        rJacobian[11][23] = 0.0;
        rJacobian[11][24] = 0.0;
        rJacobian[11][25] = 0.0;
        rJacobian[11][26] = 0.0;
        rJacobian[12][0] = 0.0;
        rJacobian[12][1] = -(mDt * (19.897959183673468 - var_x28));
        rJacobian[12][2] = 0.0;
        rJacobian[12][3] = 0.0;
        rJacobian[12][4] = 0.0;
        rJacobian[12][5] = 0.0;
        rJacobian[12][6] = 0.0;
        rJacobian[12][7] = 0.0;
        rJacobian[12][8] = 0.0;
        rJacobian[12][9] = 0.0;
        rJacobian[12][10] = 0.0;
        rJacobian[12][11] = 0.0;
        rJacobian[12][12] = 1.0 - (mDt * (-0.029999999999999999 + var_x136));
        rJacobian[12][13] = 0.0;
        rJacobian[12][14] = 0.0;
        rJacobian[12][15] = 0.0;
        rJacobian[12][16] = 0.0;
        rJacobian[12][17] = 0.0;
        rJacobian[12][18] = 0.0;
        rJacobian[12][19] = 0.0;
        rJacobian[12][20] = 0.0;
        rJacobian[12][21] = 0.0;
        rJacobian[12][22] = 0.0;
        rJacobian[12][23] = 0.0;
        rJacobian[12][24] = 0.0;
        rJacobian[12][25] = 0.0;
        rJacobian[12][26] = 0.0;
        rJacobian[13][0] = 0.0;
        rJacobian[13][1] = 0.0;
        rJacobian[13][2] = -(mDt * (43.550000000000004 - var_x104));
        rJacobian[13][3] = 0.0;
        rJacobian[13][4] = 0.0;
        rJacobian[13][5] = 0.0;
        rJacobian[13][6] = 0.0;
        rJacobian[13][7] = 0.0;
        rJacobian[13][8] = 0.0;
        rJacobian[13][9] = 0.0;
        rJacobian[13][10] = 0.0;
        rJacobian[13][11] = 0.0;
        rJacobian[13][12] = 0.0;
        rJacobian[13][13] = 1.0 - (mDt * (-0.029999999999999999 + var_x137));
        rJacobian[13][14] = 0.0;
        rJacobian[13][15] = 0.0;
        rJacobian[13][16] = 0.0;
        rJacobian[13][17] = 0.0;
        rJacobian[13][18] = 0.0;
        rJacobian[13][19] = 0.0;
        rJacobian[13][20] = 0.0;
        rJacobian[13][21] = 0.0;
        rJacobian[13][22] = 0.0;
        rJacobian[13][23] = 0.0;
        rJacobian[13][24] = 0.0;
        rJacobian[13][25] = 0.0;
        rJacobian[13][26] = 0.0;
        rJacobian[14][0] = 0.0;
        rJacobian[14][1] = -(mDt * (55.473098330241186 - var_x29));
        rJacobian[14][2] = 0.0;
        rJacobian[14][3] = 0.0;
        rJacobian[14][4] = 0.0;
        rJacobian[14][5] = 0.0;
        rJacobian[14][6] = 0.0;
        rJacobian[14][7] = 0.0;
        rJacobian[14][8] = 0.0;
        rJacobian[14][9] = 0.0;
        rJacobian[14][10] = 0.0;
        rJacobian[14][11] = 0.0;
        rJacobian[14][12] = 0.0;
        rJacobian[14][13] = 0.0;
        rJacobian[14][14] = 1.0 - (mDt * (-1.3 + var_x136));
        rJacobian[14][15] = 0.0;
        rJacobian[14][16] = 0.0;
        rJacobian[14][17] = 0.0;
        rJacobian[14][18] = 0.0;
        rJacobian[14][19] = 0.0;
        rJacobian[14][20] = 0.0;
        rJacobian[14][21] = 0.0;
        rJacobian[14][22] = 0.0;
        rJacobian[14][23] = 0.0;
        rJacobian[14][24] = 0.0;
        rJacobian[14][25] = 0.0;
        rJacobian[14][26] = 0.0;
        rJacobian[15][0] = 0.0;
        rJacobian[15][1] = 0.0;
        rJacobian[15][2] = -(mDt * (121.55000000000001 - var_x105));
        rJacobian[15][3] = 0.0;
        rJacobian[15][4] = 0.0;
        rJacobian[15][5] = 0.0;
        rJacobian[15][6] = 0.0;
        rJacobian[15][7] = 0.0;
        rJacobian[15][8] = 0.0;
        rJacobian[15][9] = 0.0;
        rJacobian[15][10] = 0.0;
        rJacobian[15][11] = 0.0;
        rJacobian[15][12] = 0.0;
        rJacobian[15][13] = 0.0;
        rJacobian[15][14] = 0.0;
        rJacobian[15][15] = 1.0 - (mDt * (-1.3 + var_x137));
        rJacobian[15][16] = 0.0;
        rJacobian[15][17] = 0.0;
        rJacobian[15][18] = 0.0;
        rJacobian[15][19] = 0.0;
        rJacobian[15][20] = 0.0;
        rJacobian[15][21] = 0.0;
        rJacobian[15][22] = 0.0;
        rJacobian[15][23] = 0.0;
        rJacobian[15][24] = 0.0;
        rJacobian[15][25] = 0.0;
        rJacobian[15][26] = 0.0;
        rJacobian[16][0] = 0.0;
        rJacobian[16][1] = 0.0;
        rJacobian[16][2] = 0.0;
        rJacobian[16][3] = 0.0;
        rJacobian[16][4] = 0.0;
        rJacobian[16][5] = 0.0;
        rJacobian[16][6] = 0.0;
        rJacobian[16][7] = 0.0;
        rJacobian[16][8] = 0.0;
        rJacobian[16][9] = 0.0;
        rJacobian[16][10] = 0.0;
        rJacobian[16][11] = 0.0;
        rJacobian[16][12] = 0.0;
        rJacobian[16][13] = 0.0;
        rJacobian[16][14] = 0.0;
        rJacobian[16][15] = 0.0;
        rJacobian[16][16] = 1.0;
        rJacobian[16][17] = 0.0;
        rJacobian[16][18] = 0.0;
        rJacobian[16][19] = 0.0;
        rJacobian[16][20] = 0.0;
        rJacobian[16][21] = 0.0;
        rJacobian[16][22] = 0.0;
        rJacobian[16][23] = 0.0;
        rJacobian[16][24] = 0.0;
        rJacobian[16][25] = 0.0;
        rJacobian[16][26] = 0.0;
        rJacobian[17][0] = 0.0;
        rJacobian[17][1] = 0.0;
        rJacobian[17][2] = 0.0;
        rJacobian[17][3] = 0.0;
        rJacobian[17][4] = 0.0;
        rJacobian[17][5] = 0.0;
        rJacobian[17][6] = 0.0;
        rJacobian[17][7] = 0.0;
        rJacobian[17][8] = 0.0;
        rJacobian[17][9] = 0.0;
        rJacobian[17][10] = 0.0;
        rJacobian[17][11] = 0.0;
        rJacobian[17][12] = 0.0;
        rJacobian[17][13] = 0.0;
        rJacobian[17][14] = 0.0;
        rJacobian[17][15] = 0.0;
        rJacobian[17][16] = 0.0;
        rJacobian[17][17] = 1.0 - (mDt * (-0.001 - var_x138));
        rJacobian[17][18] = 0.0;
        rJacobian[17][19] = 0.0;
        rJacobian[17][20] = -(mDt * (0.0007561 - var_x139));
        rJacobian[17][21] = 0.0;
        rJacobian[17][22] = 0.0;
        rJacobian[17][23] = 0.0;
        rJacobian[17][24] = 0.0;
        rJacobian[17][25] = 0.0;
        rJacobian[17][26] = 0.0;
        rJacobian[18][0] = 0.0;
        rJacobian[18][1] = 0.0;
        rJacobian[18][2] = 0.0;
        rJacobian[18][3] = 0.0;
        rJacobian[18][4] = 0.0;
        rJacobian[18][5] = 0.0;
        rJacobian[18][6] = 0.0;
        rJacobian[18][7] = 0.0;
        rJacobian[18][8] = 0.0;
        rJacobian[18][9] = 0.0;
        rJacobian[18][10] = 0.0;
        rJacobian[18][11] = 0.0;
        rJacobian[18][12] = 0.0;
        rJacobian[18][13] = 0.0;
        rJacobian[18][14] = 0.0;
        rJacobian[18][15] = 0.0;
        rJacobian[18][16] = 0.0;
        rJacobian[18][17] = 0.0;
        rJacobian[18][18] = 1.0 - (mDt * (-0.001 - var_x140));
        rJacobian[18][19] = 0.0;
        rJacobian[18][20] = 0.0;
        rJacobian[18][21] = -(mDt * (0.000165 - var_x141));
        rJacobian[18][22] = 0.0;
        rJacobian[18][23] = 0.0;
        rJacobian[18][24] = 0.0;
        rJacobian[18][25] = 0.0;
        rJacobian[18][26] = 0.0;
        rJacobian[19][0] = 0.0;
        rJacobian[19][1] = 0.0;
        rJacobian[19][2] = 0.0;
        rJacobian[19][3] = 0.0;
        rJacobian[19][4] = 0.0;
        rJacobian[19][5] = 0.0;
        rJacobian[19][6] = 0.0;
        rJacobian[19][7] = 0.0;
        rJacobian[19][8] = 0.0;
        rJacobian[19][9] = 0.0;
        rJacobian[19][10] = 0.0;
        rJacobian[19][11] = 0.0;
        rJacobian[19][12] = 0.0;
        rJacobian[19][13] = 0.0;
        rJacobian[19][14] = 0.0;
        rJacobian[19][15] = 0.0;
        rJacobian[19][16] = 0.0;
        rJacobian[19][17] = 0.0;
        rJacobian[19][18] = 0.0;
        rJacobian[19][19] = 1.0 - (mDt * (-var_x143));
        rJacobian[19][20] = 0.0;
        rJacobian[19][21] = -(mDt * (var_x143));
        rJacobian[19][22] = 0.0;
        rJacobian[19][23] = 0.0;
        rJacobian[19][24] = 0.0;
        rJacobian[19][25] = 0.0;
        rJacobian[19][26] = 0.0;
        rJacobian[20][0] = 0.0;
        rJacobian[20][1] = -(mDt * (-var_x146 * (1.4849999999999997e-8 * var_x79 - 0.33000000000000002 * var_x72 + var_x144 * var_x74)));
        rJacobian[20][2] = 0.0;
        rJacobian[20][3] = 0.0;
        rJacobian[20][4] = 0.0;
        rJacobian[20][5] = 0.0;
        rJacobian[20][6] = 0.0;
        rJacobian[20][7] = 0.0;
        rJacobian[20][8] = 0.0;
        rJacobian[20][9] = 0.0;
        rJacobian[20][10] = -(mDt * (-var_x146 * ((var_x154) ? (-var_x52 * (-var_x151 + var_x153 * (var_x151 + var_x152 * (var_x147 + var_x148 * var_x40)))) : (-3.0374999999999999e-9 * var_x156 * (var_x147 + var_x148 * var_x155)))));
        rJacobian[20][11] = 0.0;
        rJacobian[20][12] = 0.0;
        rJacobian[20][13] = 0.0;
        rJacobian[20][14] = 0.0;
        rJacobian[20][15] = 0.0;
        rJacobian[20][16] = 0.0;
        rJacobian[20][17] = -(mDt * ((0.001 + var_x138) * mParameters[3]));
        rJacobian[20][18] = 0.0;
        rJacobian[20][19] = 0.0;
        rJacobian[20][20] = 1.0 - (mDt * ((-0.0007561 + var_x139 - var_x157 - 176588941779729.56 * var_x89 * ((var_x154) ? (var_x164 + var_x160 * var_x53) : (var_x164 + 2.2781249999999999e-9 * var_x165 * var_x50))) * mParameters[3]));
        rJacobian[20][21] = -(mDt * (var_x157 * mParameters[3]));
        rJacobian[20][22] = 0.0;
        rJacobian[20][23] = 0.0;
        rJacobian[20][24] = 0.0;
        rJacobian[20][25] = 0.0;
        rJacobian[20][26] = 0.0;
        rJacobian[21][0] = 0.0;
        rJacobian[21][1] = 0.0;
        rJacobian[21][2] = -(mDt * (-var_x167 * (1.2014999999999997e-7 * var_x125 - 2.6699999999999999 * var_x120 + var_x121 * var_x166)));
        rJacobian[21][3] = 0.0;
        rJacobian[21][4] = 0.0;
        rJacobian[21][5] = 0.0;
        rJacobian[21][6] = 0.0;
        rJacobian[21][7] = 0.0;
        rJacobian[21][8] = 0.0;
        rJacobian[21][9] = 0.0;
        rJacobian[21][10] = 0.0;
        rJacobian[21][11] = -(mDt * (-var_x167 * ((var_x154) ? (-var_x107 * (-var_x169 + var_x153 * (var_x169 + var_x152 * (var_x147 + var_x168 * var_x40)))) : (-3.3749999999999992e-10 * var_x156 * (var_x147 + var_x155 * var_x168)))));
        rJacobian[21][12] = 0.0;
        rJacobian[21][13] = 0.0;
        rJacobian[21][14] = 0.0;
        rJacobian[21][15] = 0.0;
        rJacobian[21][16] = 0.0;
        rJacobian[21][17] = 0.0;
        rJacobian[21][18] = -(mDt * ((0.001 + var_x140) * mParameters[3]));
        rJacobian[21][19] = -(mDt * (7.7982153480071377 * var_x142));
        rJacobian[21][20] = -(mDt * (0.087152885187388451 * var_x142));
        rJacobian[21][21] = 1.0 - (mDt * ((-0.000165 + var_x141 - 7.8853682331945256 * var_x7 - 4759071980963.7119 * var_x89 * ((var_x154) ? (var_x171 + var_x108 * var_x160) : (var_x171 + 2.5312499999999994e-10 * var_x106 * var_x165))) * mParameters[3]));
        rJacobian[21][22] = 0.0;
        rJacobian[21][23] = 0.0;
        rJacobian[21][24] = 0.0;
        rJacobian[21][25] = 0.0;
        rJacobian[21][26] = 0.0;
        rJacobian[22][0] = -(mDt * (5029484.9869235931 * var_x17 - 6.3492962168146398e-7 * var_x19));
        rJacobian[22][1] = -(mDt * (var_x172 + var_x173));
        rJacobian[22][2] = 0.0;
        rJacobian[22][3] = 0.0;
        rJacobian[22][4] = 0.0;
        rJacobian[22][5] = 0.0;
        rJacobian[22][6] = 0.0;
        rJacobian[22][7] = 0.0;
        rJacobian[22][8] = 0.0;
        rJacobian[22][9] = 0.0;
        rJacobian[22][10] = 0.0;
        rJacobian[22][11] = 0.0;
        rJacobian[22][12] = 0.0;
        rJacobian[22][13] = 0.0;
        rJacobian[22][14] = 0.0;
        rJacobian[22][15] = 0.0;
        rJacobian[22][16] = 0.0;
        rJacobian[22][17] = 0.0;
        rJacobian[22][18] = 0.0;
        rJacobian[22][19] = 0.0;
        rJacobian[22][20] = 0.0;
        rJacobian[22][21] = 0.0;
        rJacobian[22][22] = 1.0 - (mDt * (-260.0 + var_x174 - var_x172 - var_x173 - 0.69232869146389786 * var_x26 - 8.7400597733819945e-14 * var_x27));
        rJacobian[22][23] = -(mDt * (65.0 + var_x175));
        rJacobian[22][24] = 0.0;
        rJacobian[22][25] = -(mDt * ((var_chaste_interface__Ca_Concentrations__Ca_j - var_chaste_interface__SR_Ca_Concentrations__Ca_sr) * mParameters[1]));
        rJacobian[22][26] = 0.0;
        rJacobian[23][0] = 0.0;
        rJacobian[23][1] = 0.0;
        rJacobian[23][2] = 0.0;
        rJacobian[23][3] = 0.0;
        rJacobian[23][4] = 0.0;
        rJacobian[23][5] = 0.0;
        rJacobian[23][6] = 0.0;
        rJacobian[23][7] = 0.0;
        rJacobian[23][8] = 0.0;
        rJacobian[23][9] = 0.0;
        rJacobian[23][10] = 0.0;
        rJacobian[23][11] = 0.0;
        rJacobian[23][12] = 0.0;
        rJacobian[23][13] = 0.0;
        rJacobian[23][14] = 0.0;
        rJacobian[23][15] = 0.0;
        rJacobian[23][16] = 0.0;
        rJacobian[23][17] = 0.0;
        rJacobian[23][18] = 0.0;
        rJacobian[23][19] = 0.0;
        rJacobian[23][20] = 0.0;
        rJacobian[23][21] = 0.0;
        rJacobian[23][22] = -(mDt * (260.0 - var_x174));
        rJacobian[23][23] = 1.0 - (mDt * (-65.0 - var_x175));
        rJacobian[23][24] = 0.0;
        rJacobian[23][25] = 0.0;
        rJacobian[23][26] = 0.0;
        rJacobian[24][0] = 0.0;
        rJacobian[24][1] = -(mDt * (var_x181 * var_chaste_interface__SR_Fluxes__Ry_Ro + var_x182 * var_x184));
        rJacobian[24][2] = 0.0;
        rJacobian[24][3] = 0.0;
        rJacobian[24][4] = 0.0;
        rJacobian[24][5] = 0.0;
        rJacobian[24][6] = 0.0;
        rJacobian[24][7] = 0.0;
        rJacobian[24][8] = 0.0;
        rJacobian[24][9] = 0.0;
        rJacobian[24][10] = 0.0;
        rJacobian[24][11] = 0.0;
        rJacobian[24][12] = 0.0;
        rJacobian[24][13] = 0.0;
        rJacobian[24][14] = 0.0;
        rJacobian[24][15] = 0.0;
        rJacobian[24][16] = 0.0;
        rJacobian[24][17] = 0.0;
        rJacobian[24][18] = 0.0;
        rJacobian[24][19] = 0.0;
        rJacobian[24][20] = 0.0;
        rJacobian[24][21] = 0.0;
        rJacobian[24][22] = -(mDt * (-var_x187 + var_x182 * var_x188));
        rJacobian[24][23] = 0.0;
        rJacobian[24][24] = 1.0 - (mDt * (-0.065000000000000002 + var_x190));
        rJacobian[24][25] = -(mDt * (var_x190 + var_x181 * var_chaste_interface__Ca_Concentrations__Ca_j));
        rJacobian[24][26] = -(mDt * (var_x190));
        rJacobian[25][0] = 0.0;
        rJacobian[25][1] = -(mDt * (var_x192 + var_x191 * var_chaste_interface__SR_Fluxes__Ry_Ro));
        rJacobian[25][2] = 0.0;
        rJacobian[25][3] = 0.0;
        rJacobian[25][4] = 0.0;
        rJacobian[25][5] = 0.0;
        rJacobian[25][6] = 0.0;
        rJacobian[25][7] = 0.0;
        rJacobian[25][8] = 0.0;
        rJacobian[25][9] = 0.0;
        rJacobian[25][10] = 0.0;
        rJacobian[25][11] = 0.0;
        rJacobian[25][12] = 0.0;
        rJacobian[25][13] = 0.0;
        rJacobian[25][14] = 0.0;
        rJacobian[25][15] = 0.0;
        rJacobian[25][16] = 0.0;
        rJacobian[25][17] = 0.0;
        rJacobian[25][18] = 0.0;
        rJacobian[25][19] = 0.0;
        rJacobian[25][20] = 0.0;
        rJacobian[25][21] = 0.0;
        rJacobian[25][22] = -(mDt * (var_x187 + var_x193));
        rJacobian[25][23] = 0.0;
        rJacobian[25][24] = -(mDt * (0.0050000000000000001));
        rJacobian[25][25] = 1.0 - (mDt * (-0.059999999999999998 + var_x194));
        rJacobian[25][26] = -(mDt * (var_x189));
        rJacobian[26][0] = 0.0;
        rJacobian[26][1] = -(mDt * (-var_x192 + var_x191 * var_chaste_interface__SR_Fluxes__Ry_Rr));
        rJacobian[26][2] = 0.0;
        rJacobian[26][3] = 0.0;
        rJacobian[26][4] = 0.0;
        rJacobian[26][5] = 0.0;
        rJacobian[26][6] = 0.0;
        rJacobian[26][7] = 0.0;
        rJacobian[26][8] = 0.0;
        rJacobian[26][9] = 0.0;
        rJacobian[26][10] = 0.0;
        rJacobian[26][11] = 0.0;
        rJacobian[26][12] = 0.0;
        rJacobian[26][13] = 0.0;
        rJacobian[26][14] = 0.0;
        rJacobian[26][15] = 0.0;
        rJacobian[26][16] = 0.0;
        rJacobian[26][17] = 0.0;
        rJacobian[26][18] = 0.0;
        rJacobian[26][19] = 0.0;
        rJacobian[26][20] = 0.0;
        rJacobian[26][21] = 0.0;
        rJacobian[26][22] = -(mDt * (-var_x193 + var_x186 * var_chaste_interface__SR_Fluxes__Ry_Rr));
        rJacobian[26][23] = 0.0;
        rJacobian[26][24] = -(mDt * (-0.0050000000000000001));
        rJacobian[26][25] = -(mDt * (0.055));
        rJacobian[26][26] = 1.0 - (mDt * (-0.0050000000000000001 + var_x190 + var_x194));
    }

    void Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler::UpdateTransmembranePotential(double var_chaste_interface__environment__time)
    {
        // Time units: millisecond
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane_potential__V_m = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: mV; Initial value: -81.4229700631461
        double var_chaste_interface__I_Na__m = rY[2];
        // Units: dimensionless; Initial value: 0.00381858135062259
        double var_chaste_interface__I_Na__h = rY[3];
        // Units: dimensionless; Initial value: 0.625086621635645
        double var_chaste_interface__I_Na__j = rY[4];
        // Units: dimensionless; Initial value: 0.62332507235506
        double var_chaste_interface__I_Kr__x_kr = rY[5];
        // Units: dimensionless; Initial value: 0.021733554982663
        double var_chaste_interface__I_Ks__x_ks = rY[6];
        // Units: dimensionless; Initial value: 0.00428981903391989
        double var_chaste_interface__I_to__x_to_s = rY[7];
        // Units: dimensionless; Initial value: 0.000441539203559411
        double var_chaste_interface__I_to__y_to_s = rY[8];
        // Units: dimensionless; Initial value: 0.784875334693892
        double var_chaste_interface__I_to__x_to_f = rY[9];
        // Units: dimensionless; Initial value: 0.000441531250866821
        double var_chaste_interface__I_to__y_to_f = rY[10];
        // Units: dimensionless; Initial value: 0.999995817153572
        double var_chaste_interface__I_Ca__d = rY[11];
        // Units: dimensionless; Initial value: 2.93982287251302e-06
        double var_chaste_interface__I_Ca__f = rY[12];
        // Units: dimensionless; Initial value: 0.99511673495949
        double var_chaste_interface__I_Ca__f_Ca_Bj = rY[13];
        // Units: dimensionless; Initial value: 0.0246142436477748
        double var_chaste_interface__I_Ca__f_Ca_Bsl = rY[14];
        // Units: dimensionless; Initial value: 0.0152416826209301
        double var_chaste_interface__Na_Concentrations__Na_j = rY[33];
        // Units: mM; Initial value: 8.3215690202059
        double var_chaste_interface__Na_Concentrations__Na_sl = rY[34];
        // Units: mM; Initial value: 8.32094589677861
        double var_chaste_interface__Na_Concentrations__Na_i = rY[35];
        // Units: mM; Initial value: 8.32114502072456
        double var_chaste_interface__K_Concentration__K_i = rY[36];
        // Units: mM; Initial value: 120.0
        double var_chaste_interface__Ca_Concentrations__Ca_j = rY[37];
        // Units: mM; Initial value: 0.000175415190830688
        double var_chaste_interface__Ca_Concentrations__Ca_sl = rY[38];
        // Units: mM; Initial value: 0.000106544589194246
        
        // Lookup table indexing
        const bool _oob_0 = Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane_potential__V_m);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane_potential__V_m);

        const double var_I_Ca__fcaCaMSL = 0; // dimensionless
        const double var_I_Ca__fcaCaj = 0; // dimensionless
        const double var_I_Kp__kp_kp = _lt_0_row[0]; // dimensionless
        const double var_parameters__FoRT = mParameters[9] / (mParameters[10] * mParameters[23]); // per_mV
        const double var_I_NaK__fnak = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT) + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * mParameters[8])) * exp(-var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT)); // dimensionless
        const double var_I_NaK__I_nak_junc = 0.11 * var_I_NaK__fnak * mParameters[21] * mParameters[7] / ((1.0 + 14641.0 / pow(var_chaste_interface__Na_Concentrations__Na_j, 4)) * (1.5 + mParameters[7])); // uA_per_uF
        const double var_I_NaK__I_nak_sl = 0.89000000000000001 * var_I_NaK__fnak * mParameters[21] * mParameters[7] / ((1.0 + 14641.0 / pow(var_chaste_interface__Na_Concentrations__Na_sl, 4)) * (1.5 + mParameters[7])); // uA_per_uF
        const double var_parameters__Qpow = -31.0 + 0.10000000000000001 * mParameters[23]; // dimensionless
        const double var_parameters__ecl = log(mParameters[4] / mParameters[6]) / var_parameters__FoRT; // mV
        const double var_parameters__ek = log(mParameters[7] / var_chaste_interface__K_Concentration__K_i) / var_parameters__FoRT; // mV
        const double var_parameters__ena_junc = log(mParameters[8] / var_chaste_interface__Na_Concentrations__Na_j) / var_parameters__FoRT; // mV
        const double var_parameters__ena_sl = log(mParameters[8] / var_chaste_interface__Na_Concentrations__Na_sl) / var_parameters__FoRT; // mV
        const double var_I_NCX__I_ncx_junc = 0.11 * pow(1.5700000000000001, var_parameters__Qpow) * (pow(var_chaste_interface__Na_Concentrations__Na_j, 3) * mParameters[5] * exp(0.27000000000000002 * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT) - pow(mParameters[8], 3) * var_chaste_interface__Ca_Concentrations__Ca_j * exp(-0.72999999999999998 * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT)) * mParameters[20] / ((1.0 + 0.32000000000000001 * exp(-0.72999999999999998 * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT)) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Ca_Concentrations__Ca_j, 2)) * (1.3 * pow(var_chaste_interface__Na_Concentrations__Na_j, 3) + pow(var_chaste_interface__Na_Concentrations__Na_j, 3) * mParameters[5] + pow(mParameters[8], 3) * var_chaste_interface__Ca_Concentrations__Ca_j + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Ca_Concentrations__Ca_j) * var_chaste_interface__Ca_Concentrations__Ca_j + 0.0035899999999999999 * pow(mParameters[8], 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Na_Concentrations__Na_j, 3)))); // uA_per_uF
        const double var_I_NCX__I_ncx_sl = 0.89000000000000001 * pow(1.5700000000000001, var_parameters__Qpow) * (pow(var_chaste_interface__Na_Concentrations__Na_sl, 3) * mParameters[5] * exp(0.27000000000000002 * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT) - pow(mParameters[8], 3) * var_chaste_interface__Ca_Concentrations__Ca_sl * exp(-0.72999999999999998 * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT)) * mParameters[20] / ((1.0 + 0.32000000000000001 * exp(-0.72999999999999998 * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT)) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Ca_Concentrations__Ca_sl, 2)) * (1.3 * pow(var_chaste_interface__Na_Concentrations__Na_sl, 3) + pow(var_chaste_interface__Na_Concentrations__Na_sl, 3) * mParameters[5] + pow(mParameters[8], 3) * var_chaste_interface__Ca_Concentrations__Ca_sl + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Ca_Concentrations__Ca_sl) * var_chaste_interface__Ca_Concentrations__Ca_sl + 0.0035899999999999999 * pow(mParameters[8], 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Na_Concentrations__Na_sl, 3)))); // uA_per_uF
        const double var_Na_Concentrations__I_Na_tot_junc = 3.0 * var_I_NCX__I_ncx_junc + 3.0 * var_I_NaK__I_nak_junc + 6.567e-5 * var_chaste_interface__membrane_potential__V_m - 6.567e-5 * var_parameters__ena_junc + 0.11 * pow(var_chaste_interface__I_Na__m, 3) * (-var_parameters__ena_junc + var_chaste_interface__membrane_potential__V_m) * var_chaste_interface__I_Na__h * var_chaste_interface__I_Na__j * mParameters[12] + 0.40500000000000003 * pow(1.8, var_parameters__Qpow) * (1.0 - var_chaste_interface__I_Ca__f_Ca_Bj + var_I_Ca__fcaCaj) * ((fabs(var_chaste_interface__membrane_potential__V_m) < 9.9999999999999995e-8 * fabs(mParameters[10] * mParameters[23] / mParameters[9])) ? (-7.4999999999999986e-16 * (-0.75 * mParameters[8] + 0.75 * var_chaste_interface__Na_Concentrations__Na_j * exp(-9.9999999999999995e-8)) * mParameters[9] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * mParameters[10] * mParameters[23] / mParameters[9] + var_chaste_interface__membrane_potential__V_m) * (7.4999999999999986e-16 * (-0.75 * mParameters[8] + 0.75 * var_chaste_interface__Na_Concentrations__Na_j * exp(9.9999999999999995e-8)) * mParameters[9] / (-1.0 + exp(9.9999999999999995e-8)) + 7.4999999999999986e-16 * (-0.75 * mParameters[8] + 0.75 * var_chaste_interface__Na_Concentrations__Na_j * exp(-9.9999999999999995e-8)) * mParameters[9] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[9] / (mParameters[10] * mParameters[23])) : (7.4999999999999993e-9 * pow(mParameters[9], 2) * (-0.75 * mParameters[8] + 0.75 * var_chaste_interface__Na_Concentrations__Na_j * exp(var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * var_chaste_interface__membrane_potential__V_m / ((-1.0 + exp(var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * mParameters[10] * mParameters[23]))) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f; // uA_per_uF
        const double var_Na_Concentrations__I_Na_tot_sl = 3.0 * var_I_NCX__I_ncx_sl + 3.0 * var_I_NaK__I_nak_sl + 0.00053133 * var_chaste_interface__membrane_potential__V_m - 0.00053133 * var_parameters__ena_sl + 0.89000000000000001 * pow(var_chaste_interface__I_Na__m, 3) * (-var_parameters__ena_sl + var_chaste_interface__membrane_potential__V_m) * var_chaste_interface__I_Na__h * var_chaste_interface__I_Na__j * mParameters[12] + 0.044999999999999991 * pow(1.8, var_parameters__Qpow) * (1.0 - var_chaste_interface__I_Ca__f_Ca_Bsl + var_I_Ca__fcaCaMSL) * ((fabs(var_chaste_interface__membrane_potential__V_m) < 9.9999999999999995e-8 * fabs(mParameters[10] * mParameters[23] / mParameters[9])) ? (-7.4999999999999986e-16 * (-0.75 * mParameters[8] + 0.75 * var_chaste_interface__Na_Concentrations__Na_sl * exp(-9.9999999999999995e-8)) * mParameters[9] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * mParameters[10] * mParameters[23] / mParameters[9] + var_chaste_interface__membrane_potential__V_m) * (7.4999999999999986e-16 * (-0.75 * mParameters[8] + 0.75 * var_chaste_interface__Na_Concentrations__Na_sl * exp(9.9999999999999995e-8)) * mParameters[9] / (-1.0 + exp(9.9999999999999995e-8)) + 7.4999999999999986e-16 * (-0.75 * mParameters[8] + 0.75 * var_chaste_interface__Na_Concentrations__Na_sl * exp(-9.9999999999999995e-8)) * mParameters[9] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[9] / (mParameters[10] * mParameters[23])) : (7.4999999999999993e-9 * pow(mParameters[9], 2) * (-0.75 * mParameters[8] + 0.75 * var_chaste_interface__Na_Concentrations__Na_sl * exp(var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * var_chaste_interface__membrane_potential__V_m / ((-1.0 + exp(var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * mParameters[10] * mParameters[23]))) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f; // uA_per_uF
        const double var_Ca_Concentrations__I_Ca_tot_junc = 6.0643000000000002e-5 * var_chaste_interface__membrane_potential__V_m - 2.0 * var_I_NCX__I_ncx_junc - 3.0321500000000001e-5 * log(mParameters[5] / var_chaste_interface__Ca_Concentrations__Ca_j) / var_parameters__FoRT + 0.0074029999999999999 * pow(2.3500000000000001, var_parameters__Qpow) * pow(var_chaste_interface__Ca_Concentrations__Ca_j, 1.6000000000000001) / (5.2281977629563632e-6 + pow(var_chaste_interface__Ca_Concentrations__Ca_j, 1.6000000000000001)) + 0.40500000000000003 * pow(1.8, var_parameters__Qpow) * (1.0 - var_chaste_interface__I_Ca__f_Ca_Bj + var_I_Ca__fcaCaj) * ((fabs(var_chaste_interface__membrane_potential__V_m) < 4.9999999999999998e-8 * fabs(mParameters[10] * mParameters[23] / mParameters[9])) ? (-1.08e-10 * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * mParameters[9] * mParameters[11] / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * mParameters[10] * mParameters[23] / mParameters[9] + var_chaste_interface__membrane_potential__V_m) * (1.08e-10 * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j * exp(9.9999999999999995e-8)) * mParameters[9] * mParameters[11] / (-1.0 + exp(9.9999999999999995e-8)) + 1.08e-10 * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * mParameters[9] * mParameters[11] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[9] / (mParameters[10] * mParameters[23])) : (0.00216 * pow(mParameters[9], 2) * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j * exp(2.0 * var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * var_chaste_interface__membrane_potential__V_m * mParameters[11] / ((-1.0 + exp(2.0 * var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * mParameters[10] * mParameters[23]))) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f; // uA_per_uF
        const double var_Ca_Concentrations__I_Ca_tot_sl = 0.00049065700000000003 * var_chaste_interface__membrane_potential__V_m - 2.0 * var_I_NCX__I_ncx_sl - 0.00024532850000000001 * log(mParameters[5] / var_chaste_interface__Ca_Concentrations__Ca_sl) / var_parameters__FoRT + 0.059896999999999999 * pow(2.3500000000000001, var_parameters__Qpow) * pow(var_chaste_interface__Ca_Concentrations__Ca_sl, 1.6000000000000001) / (5.2281977629563632e-6 + pow(var_chaste_interface__Ca_Concentrations__Ca_sl, 1.6000000000000001)) + 0.044999999999999991 * pow(1.8, var_parameters__Qpow) * (1.0 - var_chaste_interface__I_Ca__f_Ca_Bsl + var_I_Ca__fcaCaMSL) * ((fabs(var_chaste_interface__membrane_potential__V_m) < 4.9999999999999998e-8 * fabs(mParameters[10] * mParameters[23] / mParameters[9])) ? (-1.08e-10 * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * mParameters[9] * mParameters[11] / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * mParameters[10] * mParameters[23] / mParameters[9] + var_chaste_interface__membrane_potential__V_m) * (1.08e-10 * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl * exp(9.9999999999999995e-8)) * mParameters[9] * mParameters[11] / (-1.0 + exp(9.9999999999999995e-8)) + 1.08e-10 * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * mParameters[9] * mParameters[11] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[9] / (mParameters[10] * mParameters[23])) : (0.00216 * pow(mParameters[9], 2) * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl * exp(2.0 * var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * var_chaste_interface__membrane_potential__V_m * mParameters[11] / ((-1.0 + exp(2.0 * var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * mParameters[10] * mParameters[23]))) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f; // uA_per_uF
        const double d_dt_chaste_interface_var_membrane_potential__V_m = -var_Ca_Concentrations__I_Ca_tot_junc - var_Ca_Concentrations__I_Ca_tot_sl - var_Na_Concentrations__I_Na_tot_junc - var_Na_Concentrations__I_Na_tot_sl + 2.0 * var_I_NaK__I_nak_junc + 2.0 * var_I_NaK__I_nak_sl + 0.0089999999999999993 * var_parameters__ecl - 0.0089999999999999993 * var_chaste_interface__membrane_potential__V_m - GetIntracellularAreaStimulus(var_chaste_interface__environment__time) / HeartConfig::Instance()->GetCapacitance() - 0.002 * (-var_parameters__ek + var_chaste_interface__membrane_potential__V_m) * var_I_Kp__kp_kp - 0.006029375 * (-var_parameters__ecl + var_chaste_interface__membrane_potential__V_m) / (1.0 + 0.10000000000000001 / var_chaste_interface__Ca_Concentrations__Ca_j) - 0.048783124999999997 * (-var_parameters__ecl + var_chaste_interface__membrane_potential__V_m) / (1.0 + 0.10000000000000001 / var_chaste_interface__Ca_Concentrations__Ca_sl) - 0.0035000000000000001 * pow(var_chaste_interface__I_Ks__x_ks, 2) * (-log((0.018329999999999999 * mParameters[8] + mParameters[7]) / (0.018329999999999999 * var_chaste_interface__Na_Concentrations__Na_i + var_chaste_interface__K_Concentration__K_i)) / var_parameters__FoRT + var_chaste_interface__membrane_potential__V_m) * mParameters[18] - 0.1144 * (-var_parameters__ek + var_chaste_interface__membrane_potential__V_m) * mParameters[15] * var_chaste_interface__I_to__x_to_f * var_chaste_interface__I_to__y_to_f - 0.015599999999999999 * (-var_parameters__ek + var_chaste_interface__membrane_potential__V_m) * mParameters[19] * var_chaste_interface__I_to__x_to_s * var_chaste_interface__I_to__y_to_s - 0.45000000000000001 * pow(1.8, var_parameters__Qpow) * (1.0 + 0.099999999999999978 * var_I_Ca__fcaCaMSL + 0.90000000000000002 * var_I_Ca__fcaCaj - 0.099999999999999978 * var_chaste_interface__I_Ca__f_Ca_Bsl - 0.90000000000000002 * var_chaste_interface__I_Ca__f_Ca_Bj) * ((fabs(var_chaste_interface__membrane_potential__V_m) < 9.9999999999999995e-8 * fabs(mParameters[10] * mParameters[23] / mParameters[9])) ? (-1.3499999999999999e-14 * (-0.75 * mParameters[7] + 0.75 * var_chaste_interface__K_Concentration__K_i * exp(-9.9999999999999995e-8)) * mParameters[9] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * mParameters[10] * mParameters[23] / mParameters[9] + var_chaste_interface__membrane_potential__V_m) * (1.3499999999999999e-14 * (-0.75 * mParameters[7] + 0.75 * var_chaste_interface__K_Concentration__K_i * exp(9.9999999999999995e-8)) * mParameters[9] / (-1.0 + exp(9.9999999999999995e-8)) + 1.3499999999999999e-14 * (-0.75 * mParameters[7] + 0.75 * var_chaste_interface__K_Concentration__K_i * exp(-9.9999999999999995e-8)) * mParameters[9] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[9] / (mParameters[10] * mParameters[23])) : (1.35e-7 * pow(mParameters[9], 2) * (-0.75 * mParameters[7] + 0.75 * var_chaste_interface__K_Concentration__K_i * exp(var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * var_chaste_interface__membrane_potential__V_m / ((-1.0 + exp(var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * mParameters[10] * mParameters[23]))) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f - 0.43033148291193518 * sqrt(mParameters[7]) * (-var_parameters__ek + var_chaste_interface__membrane_potential__V_m) * mParameters[17] * var_chaste_interface__I_Kr__x_kr / (_lt_0_row[1]) - 0.4389381125701739 * sqrt(mParameters[7]) * (-var_parameters__ek + var_chaste_interface__membrane_potential__V_m) * mParameters[16] / ((1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane_potential__V_m - 0.23849999999999999 * var_parameters__ek)) * (1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane_potential__V_m - 0.23849999999999999 * var_parameters__ek)) + (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane_potential__V_m - 0.080320000000000003 * var_parameters__ek) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane_potential__V_m - 0.061749999999999999 * var_parameters__ek)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_parameters__ek - 0.51429999999999998 * var_chaste_interface__membrane_potential__V_m)))); // mV / msec
        
        rY[0] += mDt*d_dt_chaste_interface_var_membrane_potential__V_m;
    }
    
    void Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler::ComputeOneStepExceptVoltage(double var_chaste_interface__environment__time)
    {
        // Time units: millisecond
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane_potential__V_m = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: mV; Initial value: -81.4229700631461
        double var_chaste_interface__I_Na__m = rY[2];
        // Units: dimensionless; Initial value: 0.00381858135062259
        double var_chaste_interface__I_Na__h = rY[3];
        // Units: dimensionless; Initial value: 0.625086621635645
        double var_chaste_interface__I_Na__j = rY[4];
        // Units: dimensionless; Initial value: 0.62332507235506
        double var_chaste_interface__I_Kr__x_kr = rY[5];
        // Units: dimensionless; Initial value: 0.021733554982663
        double var_chaste_interface__I_Ks__x_ks = rY[6];
        // Units: dimensionless; Initial value: 0.00428981903391989
        double var_chaste_interface__I_to__x_to_s = rY[7];
        // Units: dimensionless; Initial value: 0.000441539203559411
        double var_chaste_interface__I_to__y_to_s = rY[8];
        // Units: dimensionless; Initial value: 0.784875334693892
        double var_chaste_interface__I_to__x_to_f = rY[9];
        // Units: dimensionless; Initial value: 0.000441531250866821
        double var_chaste_interface__I_to__y_to_f = rY[10];
        // Units: dimensionless; Initial value: 0.999995817153572
        double var_chaste_interface__I_Ca__d = rY[11];
        // Units: dimensionless; Initial value: 2.93982287251302e-06
        double var_chaste_interface__I_Ca__f = rY[12];
        // Units: dimensionless; Initial value: 0.99511673495949
        
        // Lookup table indexing
        const bool _oob_0 = Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane_potential__V_m);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane_potential__V_m);

        const double var_I_Ca__dss = _lt_0_row[2];
        const double var_I_Ca__fss = _lt_0_row[4] + _lt_0_row[5];
        const double var_I_Ca__taud = ((fabs(5.0 + var_chaste_interface__membrane_potential__V_m) < 6.0000000000337561e-7) ? (47619047.618779711 * (1.0 - exp(-1.000000000005626e-7)) / (1.0 + exp(-1.000000000005626e-7)) - 833333.33332864498 * (4.9999994000000001 + var_chaste_interface__membrane_potential__V_m) * (-47619047.618779711 * (1.0 - exp(1.000000000005626e-7)) / (1.0 + exp(1.000000000005626e-7)) - 47619047.618779711 * (1.0 - exp(-1.000000000005626e-7)) / (1.0 + exp(-1.000000000005626e-7)))) : (28.571428571428569 * (1.0 - exp(-0.83333333333333337 - 0.16666666666666666 * var_chaste_interface__membrane_potential__V_m)) / ((1.0 + exp(-0.83333333333333337 - 0.16666666666666666 * var_chaste_interface__membrane_potential__V_m)) * (5.0 + var_chaste_interface__membrane_potential__V_m))));
        const double var_I_Ca__tauf = 1 / (_lt_0_row[6]);
        const double var_I_Kr__tauxr = _lt_0_row[8];
        const double var_I_Kr__xrss = _lt_0_row[7];
        const double var_I_Ks__tauxs = 990.10000000000002 / (1.0 + exp(-0.17252124645892353 - 0.070821529745042494 * var_chaste_interface__membrane_potential__V_m));
        const double var_I_Ks__xsss = _lt_0_row[9];
        const double var_I_Na__ah = ((var_chaste_interface__membrane_potential__V_m >= -40.0) ? (0) : (0.057000000000000002 * exp(-11.764705882352942 + 0.14705882352941177 * mParameters[14] - 0.14705882352941177 * var_chaste_interface__membrane_potential__V_m)));
        const double var_I_Na__aj = ((var_chaste_interface__membrane_potential__V_m >= -40.0) ? (0) : ((37.780000000000001 + var_chaste_interface__membrane_potential__V_m) * (-25428.0 * exp(0.24440000000000001 * var_chaste_interface__membrane_potential__V_m - 0.24440000000000001 * mParameters[14]) - 6.9480000000000002e-6 * exp(0.043909999999999998 * mParameters[14] - 0.043909999999999998 * var_chaste_interface__membrane_potential__V_m)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane_potential__V_m - 0.311 * mParameters[14]))));
        const double var_I_Na__bh = ((var_chaste_interface__membrane_potential__V_m >= -40.0) ? (5.9230769230769234 / (1.0 + exp(-0.96036036036036043 + 0.0900900900900901 * mParameters[14] - 0.0900900900900901 * var_chaste_interface__membrane_potential__V_m))) : (310000.0 * exp(0.34849999999999998 * var_chaste_interface__membrane_potential__V_m - 0.34849999999999998 * mParameters[14]) + 2.7000000000000002 * exp(0.079000000000000001 * var_chaste_interface__membrane_potential__V_m - 0.079000000000000001 * mParameters[14])));
        const double var_I_Na__bj = ((var_chaste_interface__membrane_potential__V_m >= -40.0) ? (0.59999999999999998 * exp(0.057000000000000002 * var_chaste_interface__membrane_potential__V_m - 0.057000000000000002 * mParameters[14]) / (1.0 + exp(-3.2000000000000002 + 0.10000000000000001 * mParameters[14] - 0.10000000000000001 * var_chaste_interface__membrane_potential__V_m))) : (0.024240000000000001 * exp(0.01052 * mParameters[14] - 0.01052 * var_chaste_interface__membrane_potential__V_m) / (1.0 + exp(-5.5312920000000005 + 0.13780000000000001 * mParameters[14] - 0.13780000000000001 * var_chaste_interface__membrane_potential__V_m))));
        const double var_I_Na__hss = 0.01 * mParameters[13] + (1.0 - 0.01 * mParameters[13]) / pow((1.0 + exp(9.6298788694481825 + 0.13458950201884254 * var_chaste_interface__membrane_potential__V_m - 0.13458950201884254 * mParameters[14])), 2);
        const double var_I_Na__jss = 0.01 * mParameters[13] + (1.0 - 0.01 * mParameters[13]) / pow((1.0 + exp(9.6298788694481825 + 0.13458950201884254 * var_chaste_interface__membrane_potential__V_m - 0.13458950201884254 * mParameters[14])), 2);
        const double var_I_Na__mss = _lt_0_row[11];
        const double var_I_Na__tauh = 1 / (var_I_Na__ah + var_I_Na__bh);
        const double var_I_Na__tauj = 1 / (var_I_Na__aj + var_I_Na__bj);
        const double var_I_Na__taum = _lt_0_row[12];
        const double var_I_to__tauxtof = _lt_0_row[14];
        const double var_I_to__tauxtos = _lt_0_row[15];
        const double var_I_to__tauytof = _lt_0_row[17];
        const double var_I_to__tauytos = _lt_0_row[18];
        const double var_I_to__xtoss = _lt_0_row[13];
        const double var_I_to__ytoss = _lt_0_row[16];
        
        
        rY[5] = (var_chaste_interface__I_Kr__x_kr + ((var_I_Kr__xrss / var_I_Kr__tauxr) * mDt)) / (1.0 - ((-1 / var_I_Kr__tauxr) * mDt));
        rY[6] = (var_chaste_interface__I_Ks__x_ks + ((var_I_Ks__xsss / var_I_Ks__tauxs) * mDt)) / (1.0 - ((-1 / var_I_Ks__tauxs) * mDt));
        rY[9] = (var_chaste_interface__I_to__x_to_f + ((var_I_to__xtoss / var_I_to__tauxtof) * mDt)) / (1.0 - ((-1 / var_I_to__tauxtof) * mDt));
        rY[7] = (var_chaste_interface__I_to__x_to_s + ((var_I_to__xtoss / var_I_to__tauxtos) * mDt)) / (1.0 - ((-1 / var_I_to__tauxtos) * mDt));
        rY[10] = (var_chaste_interface__I_to__y_to_f + ((var_I_to__ytoss / var_I_to__tauytof) * mDt)) / (1.0 - ((-1 / var_I_to__tauytof) * mDt));
        rY[8] = (var_chaste_interface__I_to__y_to_s + ((var_I_to__ytoss / var_I_to__tauytos) * mDt)) / (1.0 - ((-1 / var_I_to__tauytos) * mDt));
        rY[11] = (var_chaste_interface__I_Ca__d + ((var_I_Ca__dss / var_I_Ca__taud) * mDt)) / (1.0 - ((-1 / var_I_Ca__taud) * mDt));
        rY[12] = (var_chaste_interface__I_Ca__f + ((var_I_Ca__fss / var_I_Ca__tauf) * mDt)) / (1.0 - ((-1 / var_I_Ca__tauf) * mDt));
        rY[3] = (var_chaste_interface__I_Na__h + ((var_I_Na__hss / var_I_Na__tauh) * mDt)) / (1.0 - ((-1 / var_I_Na__tauh) * mDt));
        rY[4] = (var_chaste_interface__I_Na__j + ((var_I_Na__jss / var_I_Na__tauj) * mDt)) / (1.0 - ((-1 / var_I_Na__tauj) * mDt));
        rY[2] = (var_chaste_interface__I_Na__m + ((var_I_Na__mss / var_I_Na__taum) * mDt)) / (1.0 - ((-1 / var_I_Na__taum) * mDt));
        
        double _guess[27] = {rY[1],rY[37],rY[38],rY[23],rY[24],rY[25],rY[26],rY[21],rY[22],rY[20],rY[13],rY[14],rY[29],rY[30],rY[27],rY[28],rY[36],rY[18],rY[19],rY[35],rY[33],rY[34],rY[32],rY[31],rY[17],rY[16],rY[15]};
        CardiacNewtonSolver<27,Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler>* _p_solver = CardiacNewtonSolver<27,Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler>::Instance();
        _p_solver->Solve(*this, var_chaste_interface__environment__time, _guess);
        rY[1] = _guess[0];
        rY[37] = _guess[1];
        rY[38] = _guess[2];
        rY[23] = _guess[3];
        rY[24] = _guess[4];
        rY[25] = _guess[5];
        rY[26] = _guess[6];
        rY[21] = _guess[7];
        rY[22] = _guess[8];
        rY[20] = _guess[9];
        rY[13] = _guess[10];
        rY[14] = _guess[11];
        rY[29] = _guess[12];
        rY[30] = _guess[13];
        rY[27] = _guess[14];
        rY[28] = _guess[15];
        rY[36] = _guess[16];
        rY[18] = _guess[17];
        rY[19] = _guess[18];
        rY[35] = _guess[19];
        rY[33] = _guess[20];
        rY[34] = _guess[21];
        rY[32] = _guess[22];
        rY[31] = _guess[23];
        rY[17] = _guess[24];
        rY[16] = _guess[25];
        rY[15] = _guess[26];
    }

    std::vector<double> Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const std::vector<double> & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane_potential__V_m = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: mV; Initial value: -81.4229700631461
        double var_chaste_interface__Ca_Concentrations__Ca_i = rY[1];
        // Units: mM; Initial value: 8.72745589849657e-05
        double var_chaste_interface__I_Na__m = rY[2];
        // Units: dimensionless; Initial value: 0.00381858135062259
        double var_chaste_interface__I_Na__h = rY[3];
        // Units: dimensionless; Initial value: 0.625086621635645
        double var_chaste_interface__I_Na__j = rY[4];
        // Units: dimensionless; Initial value: 0.62332507235506
        double var_chaste_interface__I_Kr__x_kr = rY[5];
        // Units: dimensionless; Initial value: 0.021733554982663
        double var_chaste_interface__I_Ks__x_ks = rY[6];
        // Units: dimensionless; Initial value: 0.00428981903391989
        double var_chaste_interface__I_to__x_to_s = rY[7];
        // Units: dimensionless; Initial value: 0.000441539203559411
        double var_chaste_interface__I_to__y_to_s = rY[8];
        // Units: dimensionless; Initial value: 0.784875334693892
        double var_chaste_interface__I_to__x_to_f = rY[9];
        // Units: dimensionless; Initial value: 0.000441531250866821
        double var_chaste_interface__I_to__y_to_f = rY[10];
        // Units: dimensionless; Initial value: 0.999995817153572
        double var_chaste_interface__I_Ca__d = rY[11];
        // Units: dimensionless; Initial value: 2.93982287251302e-06
        double var_chaste_interface__I_Ca__f = rY[12];
        // Units: dimensionless; Initial value: 0.99511673495949
        double var_chaste_interface__I_Ca__f_Ca_Bj = rY[13];
        // Units: dimensionless; Initial value: 0.0246142436477748
        double var_chaste_interface__I_Ca__f_Ca_Bsl = rY[14];
        // Units: dimensionless; Initial value: 0.0152416826209301
        double var_chaste_interface__SR_Fluxes__Ry_Ro = rY[16];
        // Units: mM; Initial value: 7.37484660389498e-07
        double var_chaste_interface__SR_Ca_Concentrations__Ca_sr = rY[32];
        // Units: mM; Initial value: 0.555180633859957
        double var_chaste_interface__Na_Concentrations__Na_j = rY[33];
        // Units: mM; Initial value: 8.3215690202059
        double var_chaste_interface__Na_Concentrations__Na_sl = rY[34];
        // Units: mM; Initial value: 8.32094589677861
        double var_chaste_interface__Na_Concentrations__Na_i = rY[35];
        // Units: mM; Initial value: 8.32114502072456
        double var_chaste_interface__K_Concentration__K_i = rY[36];
        // Units: mM; Initial value: 120.0
        double var_chaste_interface__Ca_Concentrations__Ca_j = rY[37];
        // Units: mM; Initial value: 0.000175415190830688
        double var_chaste_interface__Ca_Concentrations__Ca_sl = rY[38];
        // Units: mM; Initial value: 0.000106544589194246
        
        // Lookup table indexing
        const bool _oob_0 = Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane_potential__V_m);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane_potential__V_m);

        // Mathematics
        const double var_I_Ca__fcaCaMSL = 0; // dimensionless
        const double var_I_Ca__fcaCaj = 0; // dimensionless
        const double var_I_Ks__gks_junc = 0.0035000000000000001; // mS_per_uF
        const double var_I_Ks__gks_sl = 0.0035000000000000001; // mS_per_uF
        const double var_SR_Fluxes__J_SRleak = (-var_chaste_interface__Ca_Concentrations__Ca_j + var_chaste_interface__SR_Ca_Concentrations__Ca_sr) * mParameters[0]; // mM_per_msec
        const double var_I_Ca__tauf = 1 / (_lt_0_row[6]); // msec
        const double var_I_Kr__rkr = 1 / (_lt_0_row[1]); // dimensionless
        const double var_I_Na__ah = ((var_chaste_interface__membrane_potential__V_m >= -40.0) ? (0) : (0.057000000000000002 * exp(-11.764705882352942 + 0.14705882352941177 * mParameters[14] - 0.14705882352941177 * var_chaste_interface__membrane_potential__V_m))); // dimensionless
        const double var_I_Na__aj = ((var_chaste_interface__membrane_potential__V_m >= -40.0) ? (0) : ((37.780000000000001 + var_chaste_interface__membrane_potential__V_m) * (-25428.0 * exp(0.24440000000000001 * var_chaste_interface__membrane_potential__V_m - 0.24440000000000001 * mParameters[14]) - 6.9480000000000002e-6 * exp(0.043909999999999998 * mParameters[14] - 0.043909999999999998 * var_chaste_interface__membrane_potential__V_m)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane_potential__V_m - 0.311 * mParameters[14])))); // dimensionless
        const double var_I_Na__bh = ((var_chaste_interface__membrane_potential__V_m >= -40.0) ? (5.9230769230769234 / (1.0 + exp(-0.96036036036036043 + 0.0900900900900901 * mParameters[14] - 0.0900900900900901 * var_chaste_interface__membrane_potential__V_m))) : (310000.0 * exp(0.34849999999999998 * var_chaste_interface__membrane_potential__V_m - 0.34849999999999998 * mParameters[14]) + 2.7000000000000002 * exp(0.079000000000000001 * var_chaste_interface__membrane_potential__V_m - 0.079000000000000001 * mParameters[14]))); // dimensionless
        const double var_I_Na__bj = ((var_chaste_interface__membrane_potential__V_m >= -40.0) ? (0.59999999999999998 * exp(0.057000000000000002 * var_chaste_interface__membrane_potential__V_m - 0.057000000000000002 * mParameters[14]) / (1.0 + exp(-3.2000000000000002 + 0.10000000000000001 * mParameters[14] - 0.10000000000000001 * var_chaste_interface__membrane_potential__V_m))) : (0.024240000000000001 * exp(0.01052 * mParameters[14] - 0.01052 * var_chaste_interface__membrane_potential__V_m) / (1.0 + exp(-5.5312920000000005 + 0.13780000000000001 * mParameters[14] - 0.13780000000000001 * var_chaste_interface__membrane_potential__V_m)))); // dimensionless
        const double var_I_Na__tauh = 1 / (var_I_Na__ah + var_I_Na__bh); // msec
        const double var_I_Na__tauj = 1 / (var_I_Na__aj + var_I_Na__bj); // msec
        const double var_membrane_potential__i_Stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
        const double var_parameters__Cmem_converted = 1000000.0 * mParameters[22]; // uF
        const double var_parameters__Fjunc = 0.11; // dimensionless
        const double var_parameters__Fjunc_CaL = 0.90000000000000002; // dimensionless
        const double var_parameters__Fsl = 1.0 - var_parameters__Fjunc; // dimensionless
        const double var_I_Ks__GKs_total = (var_I_Ks__gks_junc * var_parameters__Fjunc + var_I_Ks__gks_sl * var_parameters__Fsl) * mParameters[18]; // mS_per_uF
        const double var_parameters__Fsl_CaL = 1.0 - var_parameters__Fjunc_CaL; // dimensionless
        const double var_parameters__IbarSLCaP = 0.067299999999999999; // uA_per_uF
        const double var_parameters__Kdact = 0.00014999999999999999; // mM
        const double var_I_NCX__Ka_junc = 1 / (1.0 + pow(var_parameters__Kdact, 2) / pow(var_chaste_interface__Ca_Concentrations__Ca_j, 2)); // dimensionless
        const double var_I_NCX__Ka_sl = 1 / (1.0 + pow(var_parameters__Kdact, 2) / pow(var_chaste_interface__Ca_Concentrations__Ca_sl, 2)); // dimensionless
        const double var_parameters__KmCai = 0.0035899999999999999; // mM
        const double var_parameters__KmCao = 1.3; // mM
        const double var_parameters__KmKo = 1.5; // mM
        const double var_parameters__KmNai = 12.289999999999999; // mM
        const double var_parameters__KmNaip = 11.0; // mM
        const double var_parameters__KmNao = 87.5; // mM
        const double var_parameters__KmPCa = 0.00050000000000000001; // mM
        const double var_parameters__Kmf = 0.00024600000000000002; // mM
        const double var_parameters__Kmr = 1.7; // mM
        const double var_I_Ki__g_K1 = 0.43033148291193518 * sqrt(mParameters[7]) * mParameters[16]; // mS_per_uF
        const double var_I_Kr__gkr = 0.43033148291193518 * sqrt(mParameters[7]) * mParameters[17]; // mS_per_uF
        const double var_I_NCX__s3_junc = pow(var_chaste_interface__Na_Concentrations__Na_j, 3) * mParameters[5] + pow(var_chaste_interface__Na_Concentrations__Na_j, 3) * var_parameters__KmCao + pow(mParameters[8], 3) * var_chaste_interface__Ca_Concentrations__Ca_j + pow(var_parameters__KmNao, 3) * (1.0 + var_chaste_interface__Ca_Concentrations__Ca_j / var_parameters__KmCai) * var_chaste_interface__Ca_Concentrations__Ca_j + pow(mParameters[8], 3) * (1.0 + pow(var_chaste_interface__Na_Concentrations__Na_j, 3) / pow(var_parameters__KmNai, 3)) * var_parameters__KmCai; // mM4
        const double var_I_NCX__s3_sl = pow(var_chaste_interface__Na_Concentrations__Na_sl, 3) * mParameters[5] + pow(var_chaste_interface__Na_Concentrations__Na_sl, 3) * var_parameters__KmCao + pow(mParameters[8], 3) * var_chaste_interface__Ca_Concentrations__Ca_sl + pow(var_parameters__KmNao, 3) * (1.0 + var_chaste_interface__Ca_Concentrations__Ca_sl / var_parameters__KmCai) * var_chaste_interface__Ca_Concentrations__Ca_sl + pow(mParameters[8], 3) * (1.0 + pow(var_chaste_interface__Na_Concentrations__Na_sl, 3) / pow(var_parameters__KmNai, 3)) * var_parameters__KmCai; // mM4
        const double var_I_NaK__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * mParameters[8]); // dimensionless
        const double var_parameters__Q10CaL = 1.8; // dimensionless
        const double var_parameters__Q10NCX = 1.5700000000000001; // dimensionless
        const double var_parameters__Q10SLCaP = 2.3500000000000001; // dimensionless
        const double var_parameters__Q10SRCaP = 2.6000000000000001; // dimensionless
        const double var_parameters__FoRT = mParameters[9] / (mParameters[10] * mParameters[23]); // per_mV
        const double var_I_NaK__fnak = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT) + 0.036499999999999998 * var_I_NaK__sigma * exp(-var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT)); // dimensionless
        const double var_I_NaK__I_nak_junc = var_I_NaK__fnak * var_parameters__Fjunc * mParameters[21] * mParameters[7] / ((1.0 + pow(var_parameters__KmNaip, 4) / pow(var_chaste_interface__Na_Concentrations__Na_j, 4)) * (var_parameters__KmKo + mParameters[7])); // uA_per_uF
        const double var_I_NaK__I_nak_sl = var_I_NaK__fnak * var_parameters__Fsl * mParameters[21] * mParameters[7] / ((1.0 + pow(var_parameters__KmNaip, 4) / pow(var_chaste_interface__Na_Concentrations__Na_sl, 4)) * (var_parameters__KmKo + mParameters[7])); // uA_per_uF
        const double var_I_NaK__I_nak = var_I_NaK__I_nak_junc + var_I_NaK__I_nak_sl; // uA_per_uF
        const double var_I_NaK__I_nak_converted = HeartConfig::Instance()->GetCapacitance() * var_I_NaK__I_nak; // uA_per_cm2
        const double var_parameters__Qpow = -31.0 + 0.10000000000000001 * mParameters[23]; // dimensionless
        const double var_I_PCa__I_pca_junc = pow(var_chaste_interface__Ca_Concentrations__Ca_j, 1.6000000000000001) * pow(var_parameters__Q10SLCaP, var_parameters__Qpow) * var_parameters__Fjunc * var_parameters__IbarSLCaP / (pow(var_chaste_interface__Ca_Concentrations__Ca_j, 1.6000000000000001) + pow(var_parameters__KmPCa, 1.6000000000000001)); // uA_per_uF
        const double var_I_PCa__I_pca_sl = pow(var_chaste_interface__Ca_Concentrations__Ca_sl, 1.6000000000000001) * pow(var_parameters__Q10SLCaP, var_parameters__Qpow) * var_parameters__Fsl * var_parameters__IbarSLCaP / (pow(var_chaste_interface__Ca_Concentrations__Ca_sl, 1.6000000000000001) + pow(var_parameters__KmPCa, 1.6000000000000001)); // uA_per_uF
        const double var_I_PCa__I_pca = var_I_PCa__I_pca_junc + var_I_PCa__I_pca_sl; // uA_per_uF
        const double var_I_PCa__I_pca_converted = HeartConfig::Instance()->GetCapacitance() * var_I_PCa__I_pca; // uA_per_cm2
        const double var_parameters__ecl = log(mParameters[4] / mParameters[6]) / var_parameters__FoRT; // mV
        const double var_parameters__ek = log(mParameters[7] / var_chaste_interface__K_Concentration__K_i) / var_parameters__FoRT; // mV
        const double var_I_Ki__aki = 1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane_potential__V_m - 0.23849999999999999 * var_parameters__ek)); // dimensionless
        const double var_I_Ki__bki = (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane_potential__V_m - 0.080320000000000003 * var_parameters__ek) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane_potential__V_m - 0.061749999999999999 * var_parameters__ek)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_parameters__ek - 0.51429999999999998 * var_chaste_interface__membrane_potential__V_m)); // dimensionless
        const double var_I_Ki__kiss = var_I_Ki__aki / (var_I_Ki__aki + var_I_Ki__bki); // dimensionless
        const double var_I_Ki__I_ki = (-var_parameters__ek + var_chaste_interface__membrane_potential__V_m) * var_I_Ki__g_K1 * var_I_Ki__kiss; // uA_per_uF
        const double var_I_Ki__I_ki_converted = HeartConfig::Instance()->GetCapacitance() * var_I_Ki__I_ki; // uA_per_cm2
        const double var_I_Kr__I_kr = (-var_parameters__ek + var_chaste_interface__membrane_potential__V_m) * var_I_Kr__gkr * var_I_Kr__rkr * var_chaste_interface__I_Kr__x_kr; // uA_per_uF
        const double var_I_Kr__I_kr_converted = HeartConfig::Instance()->GetCapacitance() * var_I_Kr__I_kr; // uA_per_cm2
        const double var_parameters__ena_junc = log(mParameters[8] / var_chaste_interface__Na_Concentrations__Na_j) / var_parameters__FoRT; // mV
        const double var_I_Na__I_Na_junc = pow(var_chaste_interface__I_Na__m, 3) * (-var_parameters__ena_junc + var_chaste_interface__membrane_potential__V_m) * var_chaste_interface__I_Na__h * var_chaste_interface__I_Na__j * var_parameters__Fjunc * mParameters[12]; // uA_per_uF
        const double var_parameters__ena_sl = log(mParameters[8] / var_chaste_interface__Na_Concentrations__Na_sl) / var_parameters__FoRT; // mV
        const double var_I_Na__I_Na_sl = pow(var_chaste_interface__I_Na__m, 3) * (-var_parameters__ena_sl + var_chaste_interface__membrane_potential__V_m) * var_chaste_interface__I_Na__h * var_chaste_interface__I_Na__j * var_parameters__Fsl * mParameters[12]; // uA_per_uF
        const double var_I_Na__I_Na = var_I_Na__I_Na_junc + var_I_Na__I_Na_sl; // uA_per_uF
        const double var_I_Na__I_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_I_Na__I_Na; // uA_per_cm2
        const double var_parameters__epi = 1.0; // dimensionless
        const double var_I_to__GtoFast = ((var_parameters__epi == 1.0) ? (0.1144 * mParameters[15]) : (0.0014039999999999999 * mParameters[15])); // mS_per_uF
        const double var_I_to__GtoSlow = ((var_parameters__epi == 1.0) ? (0.015599999999999999 * mParameters[19]) : (0.037595999999999997 * mParameters[19])); // mS_per_uF
        const double var_I_to__I_tof = (-var_parameters__ek + var_chaste_interface__membrane_potential__V_m) * var_I_to__GtoFast * var_chaste_interface__I_to__x_to_f * var_chaste_interface__I_to__y_to_f; // uA_per_uF
        const double var_I_to__I_tof_converted = HeartConfig::Instance()->GetCapacitance() * var_I_to__I_tof; // uA_per_cm2
        const double var_I_to__I_tos = (-var_parameters__ek + var_chaste_interface__membrane_potential__V_m) * var_I_to__GtoSlow * var_chaste_interface__I_to__x_to_s * var_chaste_interface__I_to__y_to_s; // uA_per_uF
        const double var_I_to__I_to = var_I_to__I_tof + var_I_to__I_tos; // uA_per_uF
        const double var_I_to__I_to_converted = HeartConfig::Instance()->GetCapacitance() * var_I_to__I_to; // uA_per_cm2
        const double var_I_to__I_tos_converted = HeartConfig::Instance()->GetCapacitance() * var_I_to__I_tos; // uA_per_cm2
        const double var_parameters__hillSRCaP = 1.7869999999999999; // dimensionless
        const double var_SR_Fluxes__J_serca = pow(var_parameters__Q10SRCaP, var_parameters__Qpow) * (pow((var_chaste_interface__Ca_Concentrations__Ca_i / var_parameters__Kmf), var_parameters__hillSRCaP) - pow((var_chaste_interface__SR_Ca_Concentrations__Ca_sr / var_parameters__Kmr), var_parameters__hillSRCaP)) * mParameters[2] / (1.0 + pow((var_chaste_interface__Ca_Concentrations__Ca_i / var_parameters__Kmf), var_parameters__hillSRCaP) + pow((var_chaste_interface__SR_Ca_Concentrations__Ca_sr / var_parameters__Kmr), var_parameters__hillSRCaP)); // mM_per_msec
        const double var_SR_Fluxes__J_SRCarel = (-var_chaste_interface__Ca_Concentrations__Ca_j + var_chaste_interface__SR_Ca_Concentrations__Ca_sr) * var_chaste_interface__SR_Fluxes__Ry_Ro * mParameters[1]; // mM_per_msec
        const double var_parameters__ksat = 0.32000000000000001; // dimensionless
        const double var_parameters__nu = 0.27000000000000002; // dimensionless
        const double var_I_NCX__s1_junc = pow(var_chaste_interface__Na_Concentrations__Na_j, 3) * mParameters[5] * exp(var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT * var_parameters__nu); // mM4
        const double var_I_NCX__s1_sl = pow(var_chaste_interface__Na_Concentrations__Na_sl, 3) * mParameters[5] * exp(var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT * var_parameters__nu); // mM4
        const double var_I_NCX__s2_junc = pow(mParameters[8], 3) * var_chaste_interface__Ca_Concentrations__Ca_j * exp((-1.0 + var_parameters__nu) * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT); // mM4
        const double var_I_NCX__I_ncx_junc = pow(var_parameters__Q10NCX, var_parameters__Qpow) * (-var_I_NCX__s2_junc + var_I_NCX__s1_junc) * var_I_NCX__Ka_junc * var_parameters__Fjunc * mParameters[20] / ((1.0 + var_parameters__ksat * exp((-1.0 + var_parameters__nu) * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT)) * var_I_NCX__s3_junc); // uA_per_uF
        const double var_I_NCX__s2_sl = pow(mParameters[8], 3) * var_chaste_interface__Ca_Concentrations__Ca_sl * exp((-1.0 + var_parameters__nu) * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT); // mM4
        const double var_I_NCX__I_ncx_sl = pow(var_parameters__Q10NCX, var_parameters__Qpow) * (-var_I_NCX__s2_sl + var_I_NCX__s1_sl) * var_I_NCX__Ka_sl * var_parameters__Fsl * mParameters[20] / ((1.0 + var_parameters__ksat * exp((-1.0 + var_parameters__nu) * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT)) * var_I_NCX__s3_sl); // uA_per_uF
        const double var_I_NCX__I_ncx = var_I_NCX__I_ncx_junc + var_I_NCX__I_ncx_sl; // uA_per_uF
        const double var_I_NCX__I_ncx_converted = HeartConfig::Instance()->GetCapacitance() * var_I_NCX__I_ncx; // uA_per_cm2
        const double var_I_Ca__ibarca_j = ((fabs(var_chaste_interface__membrane_potential__V_m) < 4.9999999999999998e-8 * fabs(mParameters[10] * mParameters[23] / mParameters[9])) ? (-1.08e-10 * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * mParameters[9] * mParameters[11] / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * mParameters[10] * mParameters[23] / mParameters[9] + var_chaste_interface__membrane_potential__V_m) * (1.08e-10 * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j * exp(9.9999999999999995e-8)) * mParameters[9] * mParameters[11] / (-1.0 + exp(9.9999999999999995e-8)) + 1.08e-10 * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * mParameters[9] * mParameters[11] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[9] / (mParameters[10] * mParameters[23])) : (0.00216 * pow(mParameters[9], 2) * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j * exp(2.0 * var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * var_chaste_interface__membrane_potential__V_m * mParameters[11] / ((-1.0 + exp(2.0 * var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * mParameters[10] * mParameters[23]))); // uA_per_uF
        const double var_I_Ca__I_Ca_junc = 0.45000000000000001 * pow(var_parameters__Q10CaL, var_parameters__Qpow) * (1.0 - var_chaste_interface__I_Ca__f_Ca_Bj + var_I_Ca__fcaCaj) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f * var_I_Ca__ibarca_j * var_parameters__Fjunc_CaL; // uA_per_uF
        const double var_I_Ca__ibarca_sl = ((fabs(var_chaste_interface__membrane_potential__V_m) < 4.9999999999999998e-8 * fabs(mParameters[10] * mParameters[23] / mParameters[9])) ? (-1.08e-10 * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * mParameters[9] * mParameters[11] / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * mParameters[10] * mParameters[23] / mParameters[9] + var_chaste_interface__membrane_potential__V_m) * (1.08e-10 * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl * exp(9.9999999999999995e-8)) * mParameters[9] * mParameters[11] / (-1.0 + exp(9.9999999999999995e-8)) + 1.08e-10 * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * mParameters[9] * mParameters[11] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[9] / (mParameters[10] * mParameters[23])) : (0.00216 * pow(mParameters[9], 2) * (-0.34100000000000003 * mParameters[5] + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl * exp(2.0 * var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * var_chaste_interface__membrane_potential__V_m * mParameters[11] / ((-1.0 + exp(2.0 * var_chaste_interface__membrane_potential__V_m * mParameters[9] / (mParameters[10] * mParameters[23]))) * mParameters[10] * mParameters[23]))); // uA_per_uF
        const double var_I_Ca__I_Ca_sl = 0.45000000000000001 * pow(var_parameters__Q10CaL, var_parameters__Qpow) * (1.0 - var_chaste_interface__I_Ca__f_Ca_Bsl + var_I_Ca__fcaCaMSL) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f * var_I_Ca__ibarca_sl * var_parameters__Fsl_CaL; // uA_per_uF
        const double var_I_Ca__I_Ca = var_I_Ca__I_Ca_junc + var_I_Ca__I_Ca_sl; // uA_per_uF
        const double var_I_Ca__I_Ca_converted = HeartConfig::Instance()->GetCapacitance() * var_I_Ca__I_Ca; // uA_per_cm2
        const double var_parameters__pNaK = 0.018329999999999999; // dimensionless
        const double var_I_Ks__eks = log((mParameters[8] * var_parameters__pNaK + mParameters[7]) / (var_chaste_interface__Na_Concentrations__Na_i * var_parameters__pNaK + var_chaste_interface__K_Concentration__K_i)) / var_parameters__FoRT; // mV
        const double var_I_Ks__I_ks = pow(var_chaste_interface__I_Ks__x_ks, 2) * (-var_I_Ks__eks + var_chaste_interface__membrane_potential__V_m) * var_I_Ks__GKs_total; // uA_per_uF
        const double var_I_Ks__I_ks_converted = HeartConfig::Instance()->GetCapacitance() * var_I_Ks__I_ks; // uA_per_cm2

        std::vector<double> dqs(26);
        dqs[0] = var_SR_Fluxes__J_SRleak;
        dqs[1] = var_SR_Fluxes__J_SRCarel;
        dqs[2] = var_SR_Fluxes__J_serca;
        dqs[3] = var_parameters__ecl;
        dqs[4] = var_I_Ca__I_Ca_converted;
        dqs[5] = var_I_Ca__tauf;
        dqs[6] = var_I_PCa__I_pca_converted;
        dqs[7] = var_parameters__Cmem_converted;
        dqs[8] = var_I_Na__I_Na_converted;
        dqs[9] = var_I_Na__tauh;
        dqs[10] = var_I_Na__tauj;
        dqs[11] = var_I_to__I_tof_converted;
        dqs[12] = var_I_to__GtoFast;
        dqs[13] = var_I_Ki__I_ki_converted;
        dqs[14] = var_I_Ki__g_K1;
        dqs[15] = var_I_Kr__I_kr_converted;
        dqs[16] = var_I_Ks__I_ks_converted;
        dqs[17] = var_I_Ks__GKs_total;
        dqs[18] = var_I_to__I_tos_converted;
        dqs[19] = var_I_to__GtoSlow;
        dqs[20] = var_I_NCX__I_ncx_converted;
        dqs[21] = var_I_NaK__I_nak_converted;
        dqs[22] = var_membrane_potential__i_Stim_converted;
        dqs[23] = var_I_to__I_to_converted;
        dqs[24] = var_parameters__ek;
        dqs[25] = var_chaste_interface__environment__time;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler>::Initialise(void)
{
    this->mSystemName = "grandi_pasqualini_bers_2010";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "msec";

    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("mV");
    this->mInitialConditions.push_back(-81.4229700631461);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(8.72745589849657e-05);

    // rY[2]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00381858135062259);

    // rY[3]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.625086621635645);

    // rY[4]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.62332507235506);

    // rY[5]:
    this->mVariableNames.push_back("I_Kr__x_kr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.021733554982663);

    // rY[6]:
    this->mVariableNames.push_back("I_Ks__x_ks");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00428981903391989);

    // rY[7]:
    this->mVariableNames.push_back("I_to__x_to_s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000441539203559411);

    // rY[8]:
    this->mVariableNames.push_back("I_to__y_to_s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.784875334693892);

    // rY[9]:
    this->mVariableNames.push_back("I_to__x_to_f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000441531250866821);

    // rY[10]:
    this->mVariableNames.push_back("I_to__y_to_f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999995817153572);

    // rY[11]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.93982287251302e-06);

    // rY[12]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99511673495949);

    // rY[13]:
    this->mVariableNames.push_back("I_Ca__f_Ca_Bj");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0246142436477748);

    // rY[14]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_fCa_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0152416826209301);

    // rY[15]:
    this->mVariableNames.push_back("SR_Fluxes__Ry_Rr");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.891022230597263);

    // rY[16]:
    this->mVariableNames.push_back("SR_Fluxes__Ry_Ro");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(7.37484660389498e-07);

    // rY[17]:
    this->mVariableNames.push_back("SR_Fluxes__Ry_Ri");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(9.01984485847386e-08);

    // rY[18]:
    this->mVariableNames.push_back("Na_Buffers__Na_Bj");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(3.43545459048316);

    // rY[19]:
    this->mVariableNames.push_back("Na_Buffers__Na_Bsl");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.749601264899653);

    // rY[20]:
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__Tn_CL");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.00893708435270205);

    // rY[21]:
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__Tn_CHc");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.117445983314504);

    // rY[22]:
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__Tn_CHm");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.0105996734077994);

    // rY[23]:
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__CaM");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.000295653619580701);

    // rY[24]:
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__Myo_c");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.00192645052472679);

    // rY[25]:
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__Myo_m");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.137557201546068);

    // rY[26]:
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__SRB");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.00217414510791738);

    // rY[27]:
    this->mVariableNames.push_back("Junctional_and_SL_Ca_Buffers__SLL_j");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.00738583890572642);

    // rY[28]:
    this->mVariableNames.push_back("Junctional_and_SL_Ca_Buffers__SLL_sl");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.00988178900584875);

    // rY[29]:
    this->mVariableNames.push_back("Junctional_and_SL_Ca_Buffers__SLH_j");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.0734662466011574);

    // rY[30]:
    this->mVariableNames.push_back("Junctional_and_SL_Ca_Buffers__SLH_sl");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.114400081504523);

    // rY[31]:
    this->mVariableNames.push_back("SR_Ca_Concentrations__Csqn_b");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(1.19772047585784);

    // rY[32]:
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.555180633859957);

    // rY[33]:
    this->mVariableNames.push_back("dyadic_space_sodium_concentration");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(8.3215690202059);

    // rY[34]:
    this->mVariableNames.push_back("submembrane_space_sodium_concentration");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(8.32094589677861);

    // rY[35]:
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(8.32114502072456);

    // rY[36]:
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(120.0);

    // rY[37]:
    this->mVariableNames.push_back("dyadic_space_calcium_concentration");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.000175415190830688);

    // rY[38]:
    this->mVariableNames.push_back("submembrane_space_calcium_concentration");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.000106544589194246);

    // mParameters[0]:
    this->mParameterNames.push_back("SR_leak_current_max");
    this->mParameterUnits.push_back("per_msec");

    // mParameters[1]:
    this->mParameterNames.push_back("SR_release_current_max");
    this->mParameterUnits.push_back("per_msec");

    // mParameters[2]:
    this->mParameterNames.push_back("SR_uptake_current_max");
    this->mParameterUnits.push_back("mM_per_msec");

    // mParameters[3]:
    this->mParameterNames.push_back("concentration_clamp_onoff");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[4]:
    this->mParameterNames.push_back("cytosolic_chloride_concentration");
    this->mParameterUnits.push_back("mM");

    // mParameters[5]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("mM");

    // mParameters[6]:
    this->mParameterNames.push_back("extracellular_chloride_concentration");
    this->mParameterUnits.push_back("mM");

    // mParameters[7]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("mM");

    // mParameters[8]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("mM");

    // mParameters[9]:
    this->mParameterNames.push_back("faraday_constant");
    this->mParameterUnits.push_back("coulomb_per_mole");

    // mParameters[10]:
    this->mParameterNames.push_back("gas_constant");
    this->mParameterUnits.push_back("joule_per_kelvin_per_kilomole");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("cm_per_sec");

    // mParameters[12]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("mS_per_uF");

    // mParameters[13]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_reduced_inactivation");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[14]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_shift_inactivation");
    this->mParameterUnits.push_back("mV");

    // mParameters[15]:
    this->mParameterNames.push_back("membrane_fast_transient_outward_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[16]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("mS_per_uF");

    // mParameters[17]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("mS_per_uF");

    // mParameters[18]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[19]:
    this->mParameterNames.push_back("membrane_slow_transient_outward_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[20]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("uA_per_uF");

    // mParameters[21]:
    this->mParameterNames.push_back("membrane_sodium_potassium_pump_current_permeability");
    this->mParameterUnits.push_back("uA_per_uF");

    // mParameters[22]:
    this->mParameterNames.push_back("parameters__Cmem");
    this->mParameterUnits.push_back("farad");

    // mParameters[23]:
    this->mParameterNames.push_back("temperature");
    this->mParameterUnits.push_back("kelvin");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("SR_leak_current");
    this->mDerivedQuantityUnits.push_back("mM_per_msec");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("SR_release_current");
    this->mDerivedQuantityUnits.push_back("mM_per_msec");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("SR_uptake_current");
    this->mDerivedQuantityUnits.push_back("mM_per_msec");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("chloride_reversal_potential");
    this->mDerivedQuantityUnits.push_back("mV");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current_f_gate_tau");
    this->mDerivedQuantityUnits.push_back("msec");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_calcium_pump_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_capacitance");
    this->mDerivedQuantityUnits.push_back("uF");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_h_gate_tau");
    this->mDerivedQuantityUnits.push_back("msec");

    // Derived Quantity index [10]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_j_gate_tau");
    this->mDerivedQuantityUnits.push_back("msec");

    // Derived Quantity index [11]:
    this->mDerivedQuantityNames.push_back("membrane_fast_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [12]:
    this->mDerivedQuantityNames.push_back("membrane_fast_transient_outward_current_conductance");
    this->mDerivedQuantityUnits.push_back("mS_per_uF");

    // Derived Quantity index [13]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [14]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mDerivedQuantityUnits.push_back("mS_per_uF");

    // Derived Quantity index [15]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [16]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [17]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mDerivedQuantityUnits.push_back("mS_per_uF");

    // Derived Quantity index [18]:
    this->mDerivedQuantityNames.push_back("membrane_slow_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [19]:
    this->mDerivedQuantityNames.push_back("membrane_slow_transient_outward_current_conductance");
    this->mDerivedQuantityUnits.push_back("mS_per_uF");

    // Derived Quantity index [20]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [21]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_potassium_pump_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [22]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [23]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [24]:
    this->mDerivedQuantityNames.push_back("potassium_reversal_potential");
    this->mDerivedQuantityUnits.push_back("mV");

    // Derived Quantity index [25]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("msec");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellgrandi_pasqualini_bers_2010_ssFromCellMLBackwardEuler)

