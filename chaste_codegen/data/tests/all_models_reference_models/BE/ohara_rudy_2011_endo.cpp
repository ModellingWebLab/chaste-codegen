//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: ohara_rudy_2011_endo
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: BackwardEuler)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "ohara_rudy_2011_endo.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"
#include "CardiacNewtonSolver.hpp"


    boost::shared_ptr<RegularStimulus> Cellohara_rudy_2011_endoFromCellMLBackwardEulerNoLut::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__i_Stim_Amplitude_converted = -80.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        const double var_chaste_interface__membrane__i_Stim_End = 1.0e+17; // millisecond
        const double var_chaste_interface__membrane__i_Stim_Period = 1000.0; // millisecond
        const double var_chaste_interface__membrane__i_Stim_PulseDuration = 0.5; // millisecond
        const double var_chaste_interface__membrane__i_Stim_Start = 10.0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__i_Stim_Amplitude_converted),
                var_chaste_interface__membrane__i_Stim_PulseDuration,
                var_chaste_interface__membrane__i_Stim_Period,
                var_chaste_interface__membrane__i_Stim_Start, var_chaste_interface__membrane__i_Stim_End
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    double Cellohara_rudy_2011_endoFromCellMLBackwardEulerNoLut::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    Cellohara_rudy_2011_endoFromCellMLBackwardEulerNoLut::Cellohara_rudy_2011_endoFromCellMLBackwardEulerNoLut(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractBackwardEulerCardiacCell<12>(
                41,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellohara_rudy_2011_endoFromCellMLBackwardEulerNoLut>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        
        this->mParameters[0] = 1.0; // (var_ryr__Jrel_scaling_factor) [dimensionless]
        this->mParameters[1] = 1.0; // (var_SERCA__Jup_b) [dimensionless]
        this->mParameters[2] = 1.8; // (var_extracellular__cao) [millimolar]
        this->mParameters[3] = 5.4000000000000004; // (var_extracellular__ko) [millimolar]
        this->mParameters[4] = 140.0; // (var_extracellular__nao) [millimolar]
        this->mParameters[5] = 96485.0; // (var_physical_constants__F) [coulomb_per_mole]
        this->mParameters[6] = 8314.0; // (var_physical_constants__R) [joule_per_kilomole_kelvin]
        this->mParameters[7] = 0.0001; // (var_ICaL__PCa_b) [dimensionless]
        this->mParameters[8] = 2.4999999999999999e-8; // (var_ICab__PCab) [milliS_per_microF]
        this->mParameters[9] = 0.0030000000000000001; // (var_IKb__GKb_b) [milliS_per_microF]
        this->mParameters[10] = 0.00050000000000000001; // (var_IpCa__GpCa) [milliS_per_microF]
        this->mParameters[11] = 75.0; // (var_INa__GNa) [milliS_per_microF]
        this->mParameters[12] = 0.1908; // (var_IK1__GK1_b) [milliS_per_microF]
        this->mParameters[13] = 0.0074999999999999997; // (var_INaL__GNaL_b) [milliS_per_microF]
        this->mParameters[14] = 0.045999999999999999; // (var_IKr__GKr_b) [milliS_per_microF]
        this->mParameters[15] = 0.0033999999999999998; // (var_IKs__GKs_b) [milliS_per_microF]
        this->mParameters[16] = 0.00080000000000000004; // (var_INaCa_i__Gncx_b) [milliS_per_microF]
        this->mParameters[17] = 30.0; // (var_INaK__Pnak_b) [milliS_per_microF]
        this->mParameters[18] = 0.02; // (var_Ito__Gto_b) [milliS_per_microF]
        this->mParameters[19] = 310.0; // (var_physical_constants__T) [kelvin]
    }

    Cellohara_rudy_2011_endoFromCellMLBackwardEulerNoLut::~Cellohara_rudy_2011_endoFromCellMLBackwardEulerNoLut()
    {
    }

    
    double Cellohara_rudy_2011_endoFromCellMLBackwardEulerNoLut::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -87.0
        double var_chaste_interface__intracellular_ions__cai = rY[1];
        // Units: millimolar; Initial value: 0.0001
        double var_chaste_interface__CaMK__CaMKt = rY[2];
        // Units: millimolar; Initial value: 0.0
        double var_chaste_interface__intracellular_ions__nai = rY[3];
        // Units: millimolar; Initial value: 7.0
        double var_chaste_interface__intracellular_ions__nass = rY[4];
        // Units: millimolar; Initial value: 7.0
        double var_chaste_interface__intracellular_ions__ki = rY[5];
        // Units: millimolar; Initial value: 145.0
        double var_chaste_interface__intracellular_ions__kss = rY[6];
        // Units: millimolar; Initial value: 145.0
        double var_chaste_interface__intracellular_ions__cass = rY[7];
        // Units: millimolar; Initial value: 0.0001
        double var_chaste_interface__INa__m = rY[10];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__INa__hf = rY[11];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__hs = rY[12];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__j = rY[13];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__hsp = rY[14];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__jp = rY[15];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INaL__mL = rY[16];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__INaL__hL = rY[17];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INaL__hLp = rY[18];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ito__a = rY[19];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__Ito__iF = rY[20];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ito__iS = rY[21];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ito__ap = rY[22];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__Ito__iFp = rY[23];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ito__iSp = rY[24];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__d = rY[25];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ICaL__ff = rY[26];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fs = rY[27];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fcaf = rY[28];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fcas = rY[29];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__jca = rY[30];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__ffp = rY[31];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fcafp = rY[32];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__nca = rY[33];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKr__xrf = rY[34];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKr__xrs = rY[35];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKs__xs1 = rY[36];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKs__xs2 = rY[37];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IK1__xk1 = rY[38];
        // Units: dimensionless; Initial value: 1.0
        
        const double var_CaMK__CaMKo = 0.050000000000000003; // dimensionless
        const double var_CaMK__KmCaM = 0.0015; // millimolar
        const double var_CaMK__KmCaMK = 0.14999999999999999; // millimolar
        const double var_ICaL__Aff = 0.59999999999999998; // dimensionless
        const double var_ICaL__Afs = 1.0 - var_ICaL__Aff; // dimensionless
        const double var_ICaL__f = var_ICaL__Aff * var_chaste_interface__ICaL__ff + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_ICaL__fp = var_ICaL__Aff * var_chaste_interface__ICaL__ffp + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_INa__Ahf = 0.98999999999999999; // dimensionless
        const double var_INa__Ahs = 1.0 - var_INa__Ahf; // dimensionless
        const double var_INa__h = var_INa__Ahf * var_chaste_interface__INa__hf + var_INa__Ahs * var_chaste_interface__INa__hs; // dimensionless
        const double var_INa__hp = var_INa__Ahf * var_chaste_interface__INa__hf + var_INa__Ahs * var_chaste_interface__INa__hsp; // dimensionless
        const double var_INaCa_i__KmCaAct = 0.00014999999999999999; // millimolar
        const double var_INaCa_i__kasymm = 12.5; // dimensionless
        const double var_INaCa_i__kcaoff = 5000.0; // per_millisecond
        const double var_INaCa_i__k2_i = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k2_ss = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k5_i = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k5_ss = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__kcaon = 1500000.0; // per_millisecond
        const double var_INaCa_i__kna1 = 15.0; // per_millisecond
        const double var_INaCa_i__kna2 = 5.0; // per_millisecond
        const double var_INaCa_i__kna3 = 88.120000000000005; // per_millisecond
        const double var_INaCa_i__qca = 0.16700000000000001; // dimensionless
        const double var_INaCa_i__qna = 0.52239999999999998; // dimensionless
        const double var_INaCa_i__wca = 60000.0; // dimensionless
        const double var_INaCa_i__wna = 60000.0; // dimensionless
        const double var_INaCa_i__wnaca = 5000.0; // dimensionless
        const double var_INaK__H = 9.9999999999999995e-8; // millimolar
        const double var_INaK__Khp = 1.698e-7; // millimolar
        const double var_INaK__Kki = 0.5; // per_millisecond
        const double var_INaK__Kko = 0.35820000000000002; // per_millisecond
        const double var_INaK__Kmgatp = 1.698e-7; // millimolar
        const double var_INaK__Knai0 = 9.0730000000000004; // millimolar
        const double var_INaK__Knao0 = 27.780000000000001; // millimolar
        const double var_INaK__Knap = 224.0; // millimolar
        const double var_INaK__Kxkur = 292.0; // millimolar
        const double var_INaK__MgADP = 0.050000000000000003; // millimolar
        const double var_INaK__MgATP = 9.8000000000000007; // millimolar
        const double var_INaK__delta = -0.155; // millivolt
        const double var_INaK__eP = 4.2000000000000002; // dimensionless
        const double var_INaK__k1m = 182.40000000000001; // per_millisecond
        const double var_INaK__b1 = var_INaK__MgADP * var_INaK__k1m; // dimensionless
        const double var_INaK__k1p = 949.5; // per_millisecond
        const double var_INaK__k2m = 39.399999999999999; // per_millisecond
        const double var_INaK__k2p = 687.20000000000005; // per_millisecond
        const double var_INaK__a2 = var_INaK__k2p; // dimensionless
        const double var_INaK__k3m = 79300.0; // per_millisecond
        const double var_INaK__k3p = 1899.0; // per_millisecond
        const double var_INaK__k4m = 40.0; // per_millisecond
        const double var_INaK__k4p = 639.0; // per_millisecond
        const double var_INaK__a4 = var_INaK__MgATP * var_INaK__k4p / ((1.0 + var_INaK__MgATP / var_INaK__Kmgatp) * var_INaK__Kmgatp); // dimensionless
        const double var_IpCa__KmCap = 0.00050000000000000001; // millimolar
        const double var_environment__celltype = 0; // dimensionless
        const double var_ICaL__PCa = ((var_environment__celltype == 1.0) ? (1.2 * mParameters[7]) : ((var_environment__celltype == 2.0) ? (2.5 * mParameters[7]) : (mParameters[7]))); // dimensionless
        const double var_ICaL__PCaK = 0.00035740000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCaNa = 0.00125 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCap = 1.1000000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCaKp = 0.00035740000000000001 * var_ICaL__PCap; // dimensionless
        const double var_ICaL__PCaNap = 0.00125 * var_ICaL__PCap; // dimensionless
        const double var_IK1__GK1 = ((var_environment__celltype == 1.0) ? (1.2 * mParameters[12]) : ((var_environment__celltype == 2.0) ? (1.3 * mParameters[12]) : (mParameters[12]))); // milliS_per_microF
        const double var_IKb__GKb = ((var_environment__celltype == 1.0) ? (0.59999999999999998 * mParameters[9]) : (mParameters[9])); // milliS_per_microF
        const double var_IKr__GKr = ((var_environment__celltype == 1.0) ? (1.3 * mParameters[14]) : ((var_environment__celltype == 2.0) ? (0.80000000000000004 * mParameters[14]) : (mParameters[14]))); // milliS_per_microF
        const double var_IKs__GKs = ((var_environment__celltype == 1.0) ? (1.3999999999999999 * mParameters[15]) : (mParameters[15])); // milliS_per_microF
        const double var_INaCa_i__Gncx = ((var_environment__celltype == 1.0) ? (1.1000000000000001 * mParameters[16]) : ((var_environment__celltype == 2.0) ? (1.3999999999999999 * mParameters[16]) : (mParameters[16]))); // milliS_per_microF
        const double var_INaK__Pnak = ((var_environment__celltype == 1.0) ? (0.90000000000000002 * mParameters[17]) : ((var_environment__celltype == 2.0) ? (0.69999999999999996 * mParameters[17]) : (mParameters[17]))); // milliS_per_microF
        const double var_INaL__GNaL = ((var_environment__celltype == 1.0) ? (0.59999999999999998 * mParameters[13]) : (mParameters[13])); // milliS_per_microF
        const double var_Ito__Gto = (((var_environment__celltype == 1.0) || (var_environment__celltype == 2.0)) ? (4.0 * mParameters[18]) : (mParameters[18])); // milliS_per_microF
        const double var_IK1__GK1_total = sqrt(mParameters[3]) * var_IK1__GK1; // milliS_per_microF
        const double var_IKr__GKr_total = 0.43033148291193518 * sqrt(mParameters[3]) * var_IKr__GKr; // milliS_per_microF
        const double var_INaCa_i__h10_i = 1.0 + (1.0 + mParameters[4] / var_INaCa_i__kna2) * mParameters[4] / var_INaCa_i__kna1 + var_INaCa_i__kasymm; // dimensionless
        const double var_INaCa_i__h10_ss = 1.0 + (1.0 + mParameters[4] / var_INaCa_i__kna2) * mParameters[4] / var_INaCa_i__kna1 + var_INaCa_i__kasymm; // dimensionless
        const double var_INaCa_i__h11_i = pow(mParameters[4], 2) / (var_INaCa_i__h10_i * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h11_ss = pow(mParameters[4], 2) / (var_INaCa_i__h10_ss * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h12_i = 1 / var_INaCa_i__h10_i; // dimensionless
        const double var_INaCa_i__h12_ss = 1 / var_INaCa_i__h10_ss; // dimensionless
        const double var_INaCa_i__k1_i = var_INaCa_i__h12_i * var_INaCa_i__kcaon * mParameters[2]; // dimensionless
        const double var_INaCa_i__k1_ss = var_INaCa_i__h12_ss * var_INaCa_i__kcaon * mParameters[2]; // dimensionless
        const double var_IKs__KsCa = 1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__intracellular_ions__cai), 1.3999999999999999)); // dimensionless
        const double var_IKs__GKs_total = var_IKs__GKs * var_IKs__KsCa; // milliS_per_microF
        const double var_INaCa_i__allo_i = 1 / (1.0 + pow(var_INaCa_i__KmCaAct, 2) / pow(var_chaste_interface__intracellular_ions__cai, 2)); // dimensionless
        const double var_IpCa__IpCa = mParameters[10] * var_chaste_interface__intracellular_ions__cai / (var_IpCa__KmCap + var_chaste_interface__intracellular_ions__cai); // microA_per_microF
        const double var_IpCa__IpCa_converted = HeartConfig::Instance()->GetCapacitance() * var_IpCa__IpCa; // uA_per_cm2
        const double var_CaMK__CaMKb = (1.0 - var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKo / (1.0 + var_CaMK__KmCaM / var_chaste_interface__intracellular_ions__cass); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_ICaL__fICaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INa__fINap = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INaCa_i__allo_ss = 1 / (1.0 + pow(var_INaCa_i__KmCaAct, 2) / pow(var_chaste_interface__intracellular_ions__cass, 2)); // dimensionless
        const double var_INaL__fINaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_Ito__fItop = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INaCa_i__h4_i = 1.0 + (1.0 + var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna2) * var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna1; // dimensionless
        const double var_INaCa_i__h5_i = pow(var_chaste_interface__intracellular_ions__nai, 2) / (var_INaCa_i__h4_i * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h6_i = 1 / var_INaCa_i__h4_i; // dimensionless
        const double var_INaCa_i__k6_i = var_INaCa_i__h6_i * var_INaCa_i__kcaon * var_chaste_interface__intracellular_ions__cai; // dimensionless
        const double var_INaK__P = var_INaK__eP / (1.0 + var_INaK__H / var_INaK__Khp + var_chaste_interface__intracellular_ions__nai / var_INaK__Knap + var_chaste_interface__intracellular_ions__ki / var_INaK__Kxkur); // dimensionless
        const double var_INaK__b3 = var_INaK__H * var_INaK__P * var_INaK__k3m / (1.0 + var_INaK__MgATP / var_INaK__Kmgatp); // dimensionless
        const double var_INaCa_i__h4_ss = 1.0 + (1.0 + var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna2) * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna1; // dimensionless
        const double var_INaCa_i__h5_ss = pow(var_chaste_interface__intracellular_ions__nass, 2) / (var_INaCa_i__h4_ss * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h6_ss = 1 / var_INaCa_i__h4_ss; // dimensionless
        const double var_INaCa_i__k6_ss = var_INaCa_i__h6_ss * var_INaCa_i__kcaon * var_chaste_interface__intracellular_ions__cass; // dimensionless
        const double var_ICaL__Afcaf = 0.29999999999999999 + 0.59999999999999998 / (1.0 + exp(-1.0 + 0.10000000000000001 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__Afcas = 1.0 - var_ICaL__Afcaf; // dimensionless
        const double var_ICaL__fca = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcaf + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__fcap = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcafp + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_IK1__rk1 = 1 / (1.0 + exp(11.145054250500367 + 0.10534077741493732 * var_chaste_interface__membrane__v - 0.27388602127883704 * mParameters[3])); // millisecond
        const double var_IKb__xkb = 1 / (1.0 + exp(0.78953107960741553 - 0.054525627044711013 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_IKr__Axrf = 1 / (1.0 + exp(1.4344412457471867 + 0.026171159382360639 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_IKr__Axrs = 1.0 - var_IKr__Axrf; // dimensionless
        const double var_IKr__rkr = 1 / ((1.0 + exp(0.73333333333333328 + 0.013333333333333334 * var_chaste_interface__membrane__v)) * (1.0 + exp(-0.33333333333333331 + 0.033333333333333333 * var_chaste_interface__membrane__v))); // dimensionless
        const double var_IKr__xr = var_IKr__Axrf * var_chaste_interface__IKr__xrf + var_IKr__Axrs * var_chaste_interface__IKr__xrs; // dimensionless
        const double var_Ito__AiF = 1 / (1.0 + exp(-1.4126984126984128 + 0.0066137566137566143 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__AiS = 1.0 - var_Ito__AiF; // dimensionless
        const double var_Ito__i = var_Ito__AiF * var_chaste_interface__Ito__iF + var_Ito__AiS * var_chaste_interface__Ito__iS; // dimensionless
        const double var_Ito__ip = var_Ito__AiF * var_chaste_interface__Ito__iFp + var_Ito__AiS * var_chaste_interface__Ito__iSp; // dimensionless
        const double var_ICaL__PhiCaK = ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(mParameters[6] * mParameters[19] / mParameters[5])) ? (-9.9999999999999995e-8 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 9.9999999999999995e-8 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) * (9.9999999999999995e-8 * mParameters[6] * mParameters[19] / mParameters[5] + var_chaste_interface__membrane__v) * mParameters[5] / (mParameters[6] * mParameters[19])) : (pow(mParameters[5], 2) * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * mParameters[6] * mParameters[19]))); // dimensionless
        const double var_ICaL__ICaK = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaK * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaKp * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaK_converted = HeartConfig::Instance()->GetCapacitance() * var_ICaL__ICaK; // uA_per_cm2
        const double var_ICaL__PhiCaL = ((fabs(var_chaste_interface__membrane__v) < 4.9999999999999998e-8 * fabs(mParameters[6] * mParameters[19] / mParameters[5])) ? (-1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * mParameters[6] * mParameters[19] / mParameters[5] + var_chaste_interface__membrane__v) * (1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cass * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[5] / (mParameters[6] * mParameters[19])) : (4.0 * pow(mParameters[5], 2) * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cass * exp(2.0 * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(2.0 * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * mParameters[6] * mParameters[19]))); // dimensionless
        const double var_ICaL__ICaL = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCa * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCap * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaL_converted = HeartConfig::Instance()->GetCapacitance() * var_ICaL__ICaL; // uA_per_cm2
        const double var_ICaL__PhiCaNa = ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(mParameters[6] * mParameters[19] / mParameters[5])) ? (-9.9999999999999995e-8 * (-0.75 * mParameters[4] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * (-0.75 * mParameters[4] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 9.9999999999999995e-8 * (-0.75 * mParameters[4] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) * (9.9999999999999995e-8 * mParameters[6] * mParameters[19] / mParameters[5] + var_chaste_interface__membrane__v) * mParameters[5] / (mParameters[6] * mParameters[19])) : (pow(mParameters[5], 2) * (-0.75 * mParameters[4] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * mParameters[6] * mParameters[19]))); // dimensionless
        const double var_ICaL__ICaNa = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaNa * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaNap * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaNa_converted = HeartConfig::Instance()->GetCapacitance() * var_ICaL__ICaNa; // uA_per_cm2
        const double var_ICab__ICab = ((fabs(var_chaste_interface__membrane__v) < 4.9999999999999998e-8 * fabs(mParameters[6] * mParameters[19] / mParameters[5])) ? (-1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cai * exp(-9.9999999999999995e-8)) * mParameters[8] * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * mParameters[6] * mParameters[19] / mParameters[5] + var_chaste_interface__membrane__v) * (1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cai * exp(9.9999999999999995e-8)) * mParameters[8] * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cai * exp(-9.9999999999999995e-8)) * mParameters[8] * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[5] / (mParameters[6] * mParameters[19])) : (4.0 * pow(mParameters[5], 2) * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cai * exp(2.0 * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * mParameters[8] * var_chaste_interface__membrane__v / ((-1.0 + exp(2.0 * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * mParameters[6] * mParameters[19]))); // microA_per_microF
        const double var_ICab__ICab_converted = HeartConfig::Instance()->GetCapacitance() * var_ICab__ICab; // uA_per_cm2
        const double var_INaCa_i__hca = exp(var_INaCa_i__qca * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19])); // dimensionless
        const double var_INaCa_i__hna = exp(var_INaCa_i__qna * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19])); // dimensionless
        const double var_INaCa_i__h1_i = 1.0 + (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h1_ss = 1.0 + (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h2_i = var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nai / (var_INaCa_i__h1_i * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h2_ss = var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nass / (var_INaCa_i__h1_ss * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h3_i = 1 / var_INaCa_i__h1_i; // dimensionless
        const double var_INaCa_i__h3_ss = 1 / var_INaCa_i__h1_ss; // dimensionless
        const double var_INaCa_i__h7_i = 1.0 + (1.0 + 1 / var_INaCa_i__hna) * mParameters[4] / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h7_ss = 1.0 + (1.0 + 1 / var_INaCa_i__hna) * mParameters[4] / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h8_i = mParameters[4] / (var_INaCa_i__h7_i * var_INaCa_i__hna * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h8_ss = mParameters[4] / (var_INaCa_i__h7_ss * var_INaCa_i__hna * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h9_i = 1 / var_INaCa_i__h7_i; // dimensionless
        const double var_INaCa_i__h9_ss = 1 / var_INaCa_i__h7_ss; // dimensionless
        const double var_INaCa_i__k3p_i = var_INaCa_i__h9_i * var_INaCa_i__wca; // dimensionless
        const double var_INaCa_i__k3p_ss = var_INaCa_i__h9_ss * var_INaCa_i__wca; // dimensionless
        const double var_INaCa_i__k3pp_i = var_INaCa_i__h8_i * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k3_i = var_INaCa_i__k3p_i + var_INaCa_i__k3pp_i; // dimensionless
        const double var_INaCa_i__k3pp_ss = var_INaCa_i__h8_ss * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k3_ss = var_INaCa_i__k3p_ss + var_INaCa_i__k3pp_ss; // dimensionless
        const double var_INaCa_i__k4p_i = var_INaCa_i__h3_i * var_INaCa_i__wca / var_INaCa_i__hca; // dimensionless
        const double var_INaCa_i__k4p_ss = var_INaCa_i__h3_ss * var_INaCa_i__wca / var_INaCa_i__hca; // dimensionless
        const double var_INaCa_i__k4pp_i = var_INaCa_i__h2_i * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k4_i = var_INaCa_i__k4p_i + var_INaCa_i__k4pp_i; // dimensionless
        const double var_INaCa_i__k4pp_ss = var_INaCa_i__h2_ss * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k4_ss = var_INaCa_i__k4p_ss + var_INaCa_i__k4pp_ss; // dimensionless
        const double var_INaCa_i__k7_i = var_INaCa_i__h2_i * var_INaCa_i__h5_i * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k7_ss = var_INaCa_i__h2_ss * var_INaCa_i__h5_ss * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k8_i = var_INaCa_i__h11_i * var_INaCa_i__h8_i * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k8_ss = var_INaCa_i__h11_ss * var_INaCa_i__h8_ss * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__x1_i = (var_INaCa_i__k2_i + var_INaCa_i__k3_i) * var_INaCa_i__k5_i * var_INaCa_i__k7_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k2_i * var_INaCa_i__k4_i; // dimensionless
        const double var_INaCa_i__x1_ss = (var_INaCa_i__k2_ss + var_INaCa_i__k3_ss) * var_INaCa_i__k5_ss * var_INaCa_i__k7_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k2_ss * var_INaCa_i__k4_ss; // dimensionless
        const double var_INaCa_i__x2_i = (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k4_i * var_INaCa_i__k6_i + (var_INaCa_i__k4_i + var_INaCa_i__k5_i) * var_INaCa_i__k1_i * var_INaCa_i__k7_i; // dimensionless
        const double var_INaCa_i__x2_ss = (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k4_ss * var_INaCa_i__k6_ss + (var_INaCa_i__k4_ss + var_INaCa_i__k5_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k7_ss; // dimensionless
        const double var_INaCa_i__x3_i = (var_INaCa_i__k2_i + var_INaCa_i__k3_i) * var_INaCa_i__k6_i * var_INaCa_i__k8_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k1_i * var_INaCa_i__k3_i; // dimensionless
        const double var_INaCa_i__x3_ss = (var_INaCa_i__k2_ss + var_INaCa_i__k3_ss) * var_INaCa_i__k6_ss * var_INaCa_i__k8_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k3_ss; // dimensionless
        const double var_INaCa_i__x4_i = (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k3_i * var_INaCa_i__k5_i + (var_INaCa_i__k4_i + var_INaCa_i__k5_i) * var_INaCa_i__k2_i * var_INaCa_i__k8_i; // dimensionless
        const double var_INaCa_i__E1_i = var_INaCa_i__x1_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E2_i = var_INaCa_i__x2_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E3_i = var_INaCa_i__x3_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E4_i = var_INaCa_i__x4_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__JncxCa_i = var_INaCa_i__E2_i * var_INaCa_i__k2_i - var_INaCa_i__E1_i * var_INaCa_i__k1_i; // millimolar_per_millisecond
        const double var_INaCa_i__JncxNa_i = var_INaCa_i__E3_i * var_INaCa_i__k4pp_i - var_INaCa_i__E2_i * var_INaCa_i__k3pp_i + 3.0 * var_INaCa_i__E4_i * var_INaCa_i__k7_i - 3.0 * var_INaCa_i__E1_i * var_INaCa_i__k8_i; // millimolar_per_millisecond
        const double var_INaCa_i__x4_ss = (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k3_ss * var_INaCa_i__k5_ss + (var_INaCa_i__k4_ss + var_INaCa_i__k5_ss) * var_INaCa_i__k2_ss * var_INaCa_i__k8_ss; // dimensionless
        const double var_INaCa_i__E1_ss = var_INaCa_i__x1_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E2_ss = var_INaCa_i__x2_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E3_ss = var_INaCa_i__x3_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E4_ss = var_INaCa_i__x4_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__JncxCa_ss = var_INaCa_i__E2_ss * var_INaCa_i__k2_ss - var_INaCa_i__E1_ss * var_INaCa_i__k1_ss; // millimolar_per_millisecond
        const double var_INaCa_i__JncxNa_ss = var_INaCa_i__E3_ss * var_INaCa_i__k4pp_ss - var_INaCa_i__E2_ss * var_INaCa_i__k3pp_ss + 3.0 * var_INaCa_i__E4_ss * var_INaCa_i__k7_ss - 3.0 * var_INaCa_i__E1_ss * var_INaCa_i__k8_ss; // millimolar_per_millisecond
        const double var_INaK__Knai = var_INaK__Knai0 * exp(0.33333333333333331 * var_INaK__delta * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19])); // millimolar
        const double var_INaK__Knao = var_INaK__Knao0 * exp(0.33333333333333331 * (1.0 - var_INaK__delta) * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19])); // millimolar
        const double var_INaK__a1 = pow(var_chaste_interface__intracellular_ions__nai, 3) * var_INaK__k1p / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__ki / var_INaK__Kki), 2) + pow((1.0 + var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3)) * pow(var_INaK__Knai, 3)); // dimensionless
        const double var_INaK__a3 = pow(mParameters[3], 2) * var_INaK__k3p / ((-1.0 + pow((1.0 + mParameters[3] / var_INaK__Kko), 2) + pow((1.0 + mParameters[4] / var_INaK__Knao), 3)) * pow(var_INaK__Kko, 2)); // dimensionless
        const double var_INaK__b2 = pow(mParameters[4], 3) * var_INaK__k2m / ((-1.0 + pow((1.0 + mParameters[3] / var_INaK__Kko), 2) + pow((1.0 + mParameters[4] / var_INaK__Knao), 3)) * pow(var_INaK__Knao, 3)); // dimensionless
        const double var_INaK__b4 = pow(var_chaste_interface__intracellular_ions__ki, 2) * var_INaK__k4m / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__ki / var_INaK__Kki), 2) + pow((1.0 + var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3)) * pow(var_INaK__Kki, 2)); // dimensionless
        const double var_INaK__x1 = var_INaK__a1 * var_INaK__a2 * var_INaK__a4 + var_INaK__a1 * var_INaK__a2 * var_INaK__b3 + var_INaK__a2 * var_INaK__b3 * var_INaK__b4 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__x2 = var_INaK__a1 * var_INaK__a2 * var_INaK__a3 + var_INaK__a2 * var_INaK__a3 * var_INaK__b4 + var_INaK__a3 * var_INaK__b1 * var_INaK__b4 + var_INaK__b1 * var_INaK__b2 * var_INaK__b4; // dimensionless
        const double var_INaK__x3 = var_INaK__a2 * var_INaK__a3 * var_INaK__a4 + var_INaK__a3 * var_INaK__a4 * var_INaK__b1 + var_INaK__a4 * var_INaK__b1 * var_INaK__b2 + var_INaK__b1 * var_INaK__b2 * var_INaK__b3; // dimensionless
        const double var_INaK__x4 = var_INaK__a1 * var_INaK__a3 * var_INaK__a4 + var_INaK__a1 * var_INaK__a4 * var_INaK__b2 + var_INaK__a1 * var_INaK__b2 * var_INaK__b3 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__E1 = var_INaK__x1 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E2 = var_INaK__x2 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E3 = var_INaK__x3 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E4 = var_INaK__x4 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__JnakK = 2.0 * var_INaK__E4 * var_INaK__b1 - 2.0 * var_INaK__E3 * var_INaK__a1; // millimolar_per_millisecond
        const double var_INaK__JnakNa = 3.0 * var_INaK__E1 * var_INaK__a3 - 3.0 * var_INaK__E2 * var_INaK__b3; // millimolar_per_millisecond
        const double var_INab__INab = ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(mParameters[6] * mParameters[19] / mParameters[5])) ? (-3.7499999999999999e-17 * (-mParameters[4] + var_chaste_interface__intracellular_ions__nai * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * mParameters[6] * mParameters[19] / mParameters[5] + var_chaste_interface__membrane__v) * (3.7499999999999999e-17 * (-mParameters[4] + var_chaste_interface__intracellular_ions__nai * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 3.7499999999999999e-17 * (-mParameters[4] + var_chaste_interface__intracellular_ions__nai * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[5] / (mParameters[6] * mParameters[19])) : (3.75e-10 * pow(mParameters[5], 2) * (-mParameters[4] + var_chaste_interface__intracellular_ions__nai * exp(var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * mParameters[6] * mParameters[19]))); // microA_per_microF
        const double var_physical_constants__zca = 2.0; // dimensionless
        const double var_physical_constants__zk = 1.0; // dimensionless
        const double var_physical_constants__zna = 1.0; // dimensionless
        const double var_INaCa_i__INaCa_i = 0.80000000000000004 * (var_INaCa_i__JncxCa_i * var_physical_constants__zca + var_INaCa_i__JncxNa_i * var_physical_constants__zna) * var_INaCa_i__Gncx * var_INaCa_i__allo_i; // microA_per_microF
        const double var_INaCa_i__INaCa_i_converted = HeartConfig::Instance()->GetCapacitance() * var_INaCa_i__INaCa_i; // uA_per_cm2
        const double var_INaCa_i__INaCa_ss = 0.20000000000000001 * (var_INaCa_i__JncxCa_ss * var_physical_constants__zca + var_INaCa_i__JncxNa_ss * var_physical_constants__zna) * var_INaCa_i__Gncx * var_INaCa_i__allo_ss; // microA_per_microF
        const double var_INaCa_i__INaCa_ss_converted = HeartConfig::Instance()->GetCapacitance() * var_INaCa_i__INaCa_ss; // uA_per_cm2
        const double var_INaK__INaK = (var_INaK__JnakK * var_physical_constants__zk + var_INaK__JnakNa * var_physical_constants__zna) * var_INaK__Pnak; // microA_per_microF
        const double var_INaK__INaK_converted = HeartConfig::Instance()->GetCapacitance() * var_INaK__INaK; // uA_per_cm2
        const double var_reversal_potentials__EK = mParameters[6] * mParameters[19] * log(mParameters[3] / var_chaste_interface__intracellular_ions__ki) / mParameters[5]; // millivolt
        const double var_IK1__IK1 = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IK1__GK1_total * var_IK1__rk1 * var_chaste_interface__IK1__xk1; // microA_per_microF
        const double var_IK1__IK1_converted = HeartConfig::Instance()->GetCapacitance() * var_IK1__IK1; // uA_per_cm2
        const double var_IKb__IKb = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IKb__GKb * var_IKb__xkb; // microA_per_microF
        const double var_IKb__IKb_converted = HeartConfig::Instance()->GetCapacitance() * var_IKb__IKb; // uA_per_cm2
        const double var_IKr__IKr = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IKr__GKr_total * var_IKr__rkr * var_IKr__xr; // microA_per_microF
        const double var_IKr__IKr_converted = HeartConfig::Instance()->GetCapacitance() * var_IKr__IKr; // uA_per_cm2
        const double var_Ito__Ito = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * ((1.0 - var_Ito__fItop) * var_chaste_interface__Ito__a * var_Ito__i + var_chaste_interface__Ito__ap * var_Ito__fItop * var_Ito__ip) * var_Ito__Gto; // microA_per_microF
        const double var_reversal_potentials__ENa = mParameters[6] * mParameters[19] * log(mParameters[4] / var_chaste_interface__intracellular_ions__nai) / mParameters[5]; // millivolt
        const double var_INa__INa = pow(var_chaste_interface__INa__m, 3) * (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - var_INa__fINap) * var_INa__h * var_chaste_interface__INa__j + var_INa__fINap * var_INa__hp * var_chaste_interface__INa__jp) * mParameters[11]; // microA_per_microF
        const double var_INa__INa_converted = HeartConfig::Instance()->GetCapacitance() * var_INa__INa; // uA_per_cm2
        const double var_INaL__INaL = (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - var_INaL__fINaLp) * var_chaste_interface__INaL__hL + var_INaL__fINaLp * var_chaste_interface__INaL__hLp) * var_INaL__GNaL * var_chaste_interface__INaL__mL; // microA_per_microF
        const double var_INaL__INaL_converted = HeartConfig::Instance()->GetCapacitance() * var_INaL__INaL; // uA_per_cm2
        const double var_reversal_potentials__PKNa = 0.018329999999999999; // dimensionless
        const double var_reversal_potentials__EKs = mParameters[6] * mParameters[19] * log((mParameters[4] * var_reversal_potentials__PKNa + mParameters[3]) / (var_chaste_interface__intracellular_ions__nai * var_reversal_potentials__PKNa + var_chaste_interface__intracellular_ions__ki)) / mParameters[5]; // millivolt
        const double var_IKs__IKs = (-var_reversal_potentials__EKs + var_chaste_interface__membrane__v) * var_IKs__GKs_total * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2; // microA_per_microF
        const double var_IKs__IKs_converted = HeartConfig::Instance()->GetCapacitance() * var_IKs__IKs; // uA_per_cm2
        const double var_chaste_interface__i_ionic = HeartConfig::Instance()->GetCapacitance() * var_INab__INab + HeartConfig::Instance()->GetCapacitance() * var_Ito__Ito + var_ICaL__ICaK_converted + var_ICaL__ICaL_converted + var_ICaL__ICaNa_converted + var_ICab__ICab_converted + var_IK1__IK1_converted + var_IKb__IKb_converted + var_IKr__IKr_converted + var_IKs__IKs_converted + var_INa__INa_converted + var_INaCa_i__INaCa_i_converted + var_INaCa_i__INaCa_ss_converted + var_INaK__INaK_converted + var_INaL__INaL_converted + var_IpCa__IpCa_converted; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellohara_rudy_2011_endoFromCellMLBackwardEulerNoLut::ComputeResidual(double var_chaste_interface__environment__time, const double rCurrentGuess[12], double rResidual[12])
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -87.0
        double var_chaste_interface__INa__m = rY[10];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__INa__hf = rY[11];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__hs = rY[12];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__j = rY[13];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__hsp = rY[14];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__jp = rY[15];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INaL__mL = rY[16];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__INaL__hL = rY[17];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INaL__hLp = rY[18];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ito__a = rY[19];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__Ito__iF = rY[20];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ito__iS = rY[21];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ito__ap = rY[22];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__Ito__iFp = rY[23];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ito__iSp = rY[24];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__d = rY[25];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ICaL__ff = rY[26];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fs = rY[27];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fcaf = rY[28];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fcas = rY[29];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__jca = rY[30];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__ffp = rY[31];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fcafp = rY[32];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__IKr__xrf = rY[34];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKr__xrs = rY[35];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKs__xs1 = rY[36];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKs__xs2 = rY[37];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IK1__xk1 = rY[38];
        // Units: dimensionless; Initial value: 1.0
        
        //output_nonlinear_state_assignments
        double var_chaste_interface__CaMK__CaMKt = rCurrentGuess[0];
        double var_chaste_interface__ICaL__nca = rCurrentGuess[1];
        double var_chaste_interface__intracellular_ions__cai = rCurrentGuess[2];
        double var_chaste_interface__intracellular_ions__cajsr = rCurrentGuess[3];
        double var_chaste_interface__intracellular_ions__cansr = rCurrentGuess[4];
        double var_chaste_interface__intracellular_ions__cass = rCurrentGuess[5];
        double var_chaste_interface__intracellular_ions__ki = rCurrentGuess[6];
        double var_chaste_interface__intracellular_ions__kss = rCurrentGuess[7];
        double var_chaste_interface__intracellular_ions__nai = rCurrentGuess[8];
        double var_chaste_interface__intracellular_ions__nass = rCurrentGuess[9];
        double var_chaste_interface__ryr__Jrelnp = rCurrentGuess[10];
        double var_chaste_interface__ryr__Jrelp = rCurrentGuess[11];
        
        //output_equations
        const double var_CaMK__CaMKo = 0.050000000000000003; // dimensionless
        const double var_CaMK__KmCaM = 0.0015; // millimolar
        const double var_CaMK__KmCaMK = 0.14999999999999999; // millimolar
        const double var_CaMK__aCaMK = 0.050000000000000003; // per_millimolar_per_millisecond
        const double var_CaMK__bCaMK = 0.00068000000000000005; // per_millisecond
        const double var_ICaL__Aff = 0.59999999999999998; // dimensionless
        const double var_ICaL__Afs = 1.0 - var_ICaL__Aff; // dimensionless
        const double var_ICaL__Kmn = 0.002; // millimolar
        const double var_ICaL__f = var_ICaL__Aff * var_chaste_interface__ICaL__ff + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_ICaL__fp = var_ICaL__Aff * var_chaste_interface__ICaL__ffp + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_ICaL__k2n = 1000.0; // per_millisecond
        const double var_ICaL__km2n = var_chaste_interface__ICaL__jca; // per_millisecond
        const double var_INa__Ahf = 0.98999999999999999; // dimensionless
        const double var_INa__Ahs = 1.0 - var_INa__Ahf; // dimensionless
        const double var_INa__h = var_INa__Ahf * var_chaste_interface__INa__hf + var_INa__Ahs * var_chaste_interface__INa__hs; // dimensionless
        const double var_INa__hp = var_INa__Ahf * var_chaste_interface__INa__hf + var_INa__Ahs * var_chaste_interface__INa__hsp; // dimensionless
        const double var_INaCa_i__KmCaAct = 0.00014999999999999999; // millimolar
        const double var_INaCa_i__kasymm = 12.5; // dimensionless
        const double var_INaCa_i__kcaoff = 5000.0; // per_millisecond
        const double var_INaCa_i__k2_i = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k2_ss = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k5_i = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k5_ss = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__kcaon = 1500000.0; // per_millisecond
        const double var_INaCa_i__kna1 = 15.0; // per_millisecond
        const double var_INaCa_i__kna2 = 5.0; // per_millisecond
        const double var_INaCa_i__kna3 = 88.120000000000005; // per_millisecond
        const double var_INaCa_i__qca = 0.16700000000000001; // dimensionless
        const double var_INaCa_i__qna = 0.52239999999999998; // dimensionless
        const double var_INaCa_i__wca = 60000.0; // dimensionless
        const double var_INaCa_i__wna = 60000.0; // dimensionless
        const double var_INaCa_i__wnaca = 5000.0; // dimensionless
        const double var_INaK__H = 9.9999999999999995e-8; // millimolar
        const double var_INaK__Khp = 1.698e-7; // millimolar
        const double var_INaK__Kki = 0.5; // per_millisecond
        const double var_INaK__Kko = 0.35820000000000002; // per_millisecond
        const double var_INaK__Kmgatp = 1.698e-7; // millimolar
        const double var_INaK__Knai0 = 9.0730000000000004; // millimolar
        const double var_INaK__Knao0 = 27.780000000000001; // millimolar
        const double var_INaK__Knap = 224.0; // millimolar
        const double var_INaK__Kxkur = 292.0; // millimolar
        const double var_INaK__MgADP = 0.050000000000000003; // millimolar
        const double var_INaK__MgATP = 9.8000000000000007; // millimolar
        const double var_INaK__delta = -0.155; // millivolt
        const double var_INaK__eP = 4.2000000000000002; // dimensionless
        const double var_INaK__k1m = 182.40000000000001; // per_millisecond
        const double var_INaK__b1 = var_INaK__MgADP * var_INaK__k1m; // dimensionless
        const double var_INaK__k1p = 949.5; // per_millisecond
        const double var_INaK__k2m = 39.399999999999999; // per_millisecond
        const double var_INaK__k2p = 687.20000000000005; // per_millisecond
        const double var_INaK__a2 = var_INaK__k2p; // dimensionless
        const double var_INaK__k3m = 79300.0; // per_millisecond
        const double var_INaK__k3p = 1899.0; // per_millisecond
        const double var_INaK__k4m = 40.0; // per_millisecond
        const double var_INaK__k4p = 639.0; // per_millisecond
        const double var_INaK__a4 = var_INaK__MgATP * var_INaK__k4p / ((1.0 + var_INaK__MgATP / var_INaK__Kmgatp) * var_INaK__Kmgatp); // dimensionless
        const double var_IpCa__KmCap = 0.00050000000000000001; // millimolar
        const double var_cell_geometry__L = 0.01; // centimeter
        const double var_cell_geometry__rad = 0.0011000000000000001; // centimeter
        const double var_cell_geometry__Ageo = 6.2800000000000002 * pow(var_cell_geometry__rad, 2) + 6.2800000000000002 * var_cell_geometry__L * var_cell_geometry__rad; // centimeter_squared
        const double var_cell_geometry__Acap = 2.0 * var_cell_geometry__Ageo; // centimeter_squared
        const double var_cell_geometry__vcell = 3140.0 * pow(var_cell_geometry__rad, 2) * var_cell_geometry__L; // microliter
        const double var_cell_geometry__vjsr = 0.0047999999999999996 * var_cell_geometry__vcell; // microliter
        const double var_cell_geometry__vmyo = 0.68000000000000005 * var_cell_geometry__vcell; // microliter
        const double var_cell_geometry__vnsr = 0.055199999999999999 * var_cell_geometry__vcell; // microliter
        const double var_cell_geometry__vss = 0.02 * var_cell_geometry__vcell; // microliter
        const double var_environment__celltype = 0; // dimensionless
        const double var_ICaL__PCa = ((var_environment__celltype == 1.0) ? (1.2 * mParameters[7]) : ((var_environment__celltype == 2.0) ? (2.5 * mParameters[7]) : (mParameters[7]))); // dimensionless
        const double var_ICaL__PCaK = 0.00035740000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCaNa = 0.00125 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCap = 1.1000000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCaKp = 0.00035740000000000001 * var_ICaL__PCap; // dimensionless
        const double var_ICaL__PCaNap = 0.00125 * var_ICaL__PCap; // dimensionless
        const double var_IK1__GK1 = ((var_environment__celltype == 1.0) ? (1.2 * mParameters[12]) : ((var_environment__celltype == 2.0) ? (1.3 * mParameters[12]) : (mParameters[12]))); // milliS_per_microF
        const double var_IKb__GKb = ((var_environment__celltype == 1.0) ? (0.59999999999999998 * mParameters[9]) : (mParameters[9])); // milliS_per_microF
        const double var_IKr__GKr = ((var_environment__celltype == 1.0) ? (1.3 * mParameters[14]) : ((var_environment__celltype == 2.0) ? (0.80000000000000004 * mParameters[14]) : (mParameters[14]))); // milliS_per_microF
        const double var_IKs__GKs = ((var_environment__celltype == 1.0) ? (1.3999999999999999 * mParameters[15]) : (mParameters[15])); // milliS_per_microF
        const double var_INaCa_i__Gncx = ((var_environment__celltype == 1.0) ? (1.1000000000000001 * mParameters[16]) : ((var_environment__celltype == 2.0) ? (1.3999999999999999 * mParameters[16]) : (mParameters[16]))); // milliS_per_microF
        const double var_INaK__Pnak = ((var_environment__celltype == 1.0) ? (0.90000000000000002 * mParameters[17]) : ((var_environment__celltype == 2.0) ? (0.69999999999999996 * mParameters[17]) : (mParameters[17]))); // milliS_per_microF
        const double var_INaL__GNaL = ((var_environment__celltype == 1.0) ? (0.59999999999999998 * mParameters[13]) : (mParameters[13])); // milliS_per_microF
        const double var_Ito__Gto = (((var_environment__celltype == 1.0) || (var_environment__celltype == 2.0)) ? (4.0 * mParameters[18]) : (mParameters[18])); // milliS_per_microF
        const double var_SERCA__upScale = ((var_environment__celltype == 1.0) ? (1.3) : (1.0)); // dimensionless
        const double var_IK1__GK1_total = sqrt(mParameters[3]) * var_IK1__GK1; // milliS_per_microF
        const double var_IKr__GKr_total = 0.43033148291193518 * sqrt(mParameters[3]) * var_IKr__GKr; // milliS_per_microF
        const double var_INaCa_i__h10_i = 1.0 + (1.0 + mParameters[4] / var_INaCa_i__kna2) * mParameters[4] / var_INaCa_i__kna1 + var_INaCa_i__kasymm; // dimensionless
        const double var_INaCa_i__h10_ss = 1.0 + (1.0 + mParameters[4] / var_INaCa_i__kna2) * mParameters[4] / var_INaCa_i__kna1 + var_INaCa_i__kasymm; // dimensionless
        const double var_INaCa_i__h11_i = pow(mParameters[4], 2) / (var_INaCa_i__h10_i * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h11_ss = pow(mParameters[4], 2) / (var_INaCa_i__h10_ss * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h12_i = 1 / var_INaCa_i__h10_i; // dimensionless
        const double var_INaCa_i__h12_ss = 1 / var_INaCa_i__h10_ss; // dimensionless
        const double var_INaCa_i__k1_i = var_INaCa_i__h12_i * var_INaCa_i__kcaon * mParameters[2]; // dimensionless
        const double var_INaCa_i__k1_ss = var_INaCa_i__h12_ss * var_INaCa_i__kcaon * mParameters[2]; // dimensionless
        const double var_intracellular_ions__BSLmax = 1.1240000000000001; // millimolar
        const double var_intracellular_ions__BSRmax = 0.047; // millimolar
        const double var_intracellular_ions__KmBSL = 0.0086999999999999994; // millimolar
        const double var_intracellular_ions__KmBSR = 0.00087000000000000001; // millimolar
        const double var_IKs__KsCa = 1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__intracellular_ions__cai), 1.3999999999999999)); // dimensionless
        const double var_IKs__GKs_total = var_IKs__GKs * var_IKs__KsCa; // milliS_per_microF
        const double var_INaCa_i__allo_i = 1 / (1.0 + pow(var_INaCa_i__KmCaAct, 2) / pow(var_chaste_interface__intracellular_ions__cai, 2)); // dimensionless
        const double var_IpCa__IpCa = mParameters[10] * var_chaste_interface__intracellular_ions__cai / (var_IpCa__KmCap + var_chaste_interface__intracellular_ions__cai); // microA_per_microF
        const double var_SERCA__Jupnp = 0.0043750000000000004 * var_SERCA__upScale * var_chaste_interface__intracellular_ions__cai / (0.00092000000000000003 + var_chaste_interface__intracellular_ions__cai); // millimolar_per_millisecond
        const double var_SERCA__Jupp = 0.01203125 * var_SERCA__upScale * var_chaste_interface__intracellular_ions__cai / (0.00075000000000000002 + var_chaste_interface__intracellular_ions__cai); // millimolar_per_millisecond
        const double var_SERCA__Jleak = 0.00026249999999999998 * var_chaste_interface__intracellular_ions__cansr; // millimolar_per_millisecond
        const double var_CaMK__CaMKb = (1.0 - var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKo / (1.0 + var_CaMK__KmCaM / var_chaste_interface__intracellular_ions__cass); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double d_dt_chaste_interface_var_CaMK__CaMKt = -var_chaste_interface__CaMK__CaMKt * var_CaMK__bCaMK + (var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKb * var_CaMK__aCaMK; // millimolar / millisecond
        const double var_ICaL__anca = 1 / (pow((1.0 + var_ICaL__Kmn / var_chaste_interface__intracellular_ions__cass), 4) + var_ICaL__k2n / var_ICaL__km2n); // dimensionless
        const double d_dt_chaste_interface_var_ICaL__nca = var_ICaL__anca * var_ICaL__k2n - var_ICaL__km2n * var_chaste_interface__ICaL__nca; // 1 / millisecond
        const double var_ICaL__fICaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INa__fINap = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INaCa_i__allo_ss = 1 / (1.0 + pow(var_INaCa_i__KmCaAct, 2) / pow(var_chaste_interface__intracellular_ions__cass, 2)); // dimensionless
        const double var_INaL__fINaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_Ito__fItop = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_SERCA__fJupp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_SERCA__Jup = (-var_SERCA__Jleak + (1.0 - var_SERCA__fJupp) * var_SERCA__Jupnp + var_SERCA__Jupp * var_SERCA__fJupp) * mParameters[1]; // millimolar_per_millisecond
        const double var_diff__Jdiff = 5.0 * var_chaste_interface__intracellular_ions__cass - 5.0 * var_chaste_interface__intracellular_ions__cai; // millimolar_per_millisecond
        const double var_intracellular_ions__Bcass = 1 / (1.0 + var_intracellular_ions__BSLmax * var_intracellular_ions__KmBSL / pow((var_intracellular_ions__KmBSL + var_chaste_interface__intracellular_ions__cass), 2) + var_intracellular_ions__BSRmax * var_intracellular_ions__KmBSR / pow((var_intracellular_ions__KmBSR + var_chaste_interface__intracellular_ions__cass), 2)); // dimensionless
        const double var_intracellular_ions__cm = 1.0; // microF_per_centimeter_squared
        const double var_intracellular_ions__cmdnmax_b = 0.050000000000000003; // millimolar
        const double var_intracellular_ions__cmdnmax = ((var_environment__celltype == 1.0) ? (1.3 * var_intracellular_ions__cmdnmax_b) : (var_intracellular_ions__cmdnmax_b)); // millimolar
        const double var_intracellular_ions__csqnmax = 10.0; // millimolar
        const double var_intracellular_ions__kmcmdn = 0.0023800000000000002; // millimolar
        const double var_intracellular_ions__kmcsqn = 0.80000000000000004; // millimolar
        const double var_intracellular_ions__Bcajsr = 1 / (1.0 + var_intracellular_ions__csqnmax * var_intracellular_ions__kmcsqn / pow((var_chaste_interface__intracellular_ions__cajsr + var_intracellular_ions__kmcsqn), 2)); // dimensionless
        const double var_intracellular_ions__kmtrpn = 0.00050000000000000001; // millimolar
        const double var_diff__JdiffK = 0.5 * var_chaste_interface__intracellular_ions__kss - 0.5 * var_chaste_interface__intracellular_ions__ki; // millimolar_per_millisecond
        const double var_INaCa_i__h4_i = 1.0 + (1.0 + var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna2) * var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna1; // dimensionless
        const double var_INaCa_i__h5_i = pow(var_chaste_interface__intracellular_ions__nai, 2) / (var_INaCa_i__h4_i * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h6_i = 1 / var_INaCa_i__h4_i; // dimensionless
        const double var_INaCa_i__k6_i = var_INaCa_i__h6_i * var_INaCa_i__kcaon * var_chaste_interface__intracellular_ions__cai; // dimensionless
        const double var_INaK__P = var_INaK__eP / (1.0 + var_INaK__H / var_INaK__Khp + var_chaste_interface__intracellular_ions__nai / var_INaK__Knap + var_chaste_interface__intracellular_ions__ki / var_INaK__Kxkur); // dimensionless
        const double var_INaK__b3 = var_INaK__H * var_INaK__P * var_INaK__k3m / (1.0 + var_INaK__MgATP / var_INaK__Kmgatp); // dimensionless
        const double var_INaCa_i__h4_ss = 1.0 + (1.0 + var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna2) * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna1; // dimensionless
        const double var_INaCa_i__h5_ss = pow(var_chaste_interface__intracellular_ions__nass, 2) / (var_INaCa_i__h4_ss * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h6_ss = 1 / var_INaCa_i__h4_ss; // dimensionless
        const double var_INaCa_i__k6_ss = var_INaCa_i__h6_ss * var_INaCa_i__kcaon * var_chaste_interface__intracellular_ions__cass; // dimensionless
        const double var_diff__JdiffNa = 0.5 * var_chaste_interface__intracellular_ions__nass - 0.5 * var_chaste_interface__intracellular_ions__nai; // millimolar_per_millisecond
        const double var_intracellular_ions__trpnmax = 0.070000000000000007; // millimolar
        const double var_intracellular_ions__Bcai = 1 / (1.0 + var_intracellular_ions__cmdnmax * var_intracellular_ions__kmcmdn / pow((var_chaste_interface__intracellular_ions__cai + var_intracellular_ions__kmcmdn), 2) + var_intracellular_ions__kmtrpn * var_intracellular_ions__trpnmax / pow((var_chaste_interface__intracellular_ions__cai + var_intracellular_ions__kmtrpn), 2)); // dimensionless
        const double var_membrane__Istim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
        const double var_membrane__Istim = var_membrane__Istim_converted / HeartConfig::Instance()->GetCapacitance(); // microA_per_microF
        const double var_ICaL__Afcaf = 0.29999999999999999 + 0.59999999999999998 / (1.0 + exp(-1.0 + 0.10000000000000001 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__Afcas = 1.0 - var_ICaL__Afcaf; // dimensionless
        const double var_ICaL__fca = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcaf + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__fcap = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcafp + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_IK1__rk1 = 1 / (1.0 + exp(11.145054250500367 + 0.10534077741493732 * var_chaste_interface__membrane__v - 0.27388602127883704 * mParameters[3])); // millisecond
        const double var_IKb__xkb = 1 / (1.0 + exp(0.78953107960741553 - 0.054525627044711013 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_IKr__Axrf = 1 / (1.0 + exp(1.4344412457471867 + 0.026171159382360639 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_IKr__Axrs = 1.0 - var_IKr__Axrf; // dimensionless
        const double var_IKr__rkr = 1 / ((1.0 + exp(0.73333333333333328 + 0.013333333333333334 * var_chaste_interface__membrane__v)) * (1.0 + exp(-0.33333333333333331 + 0.033333333333333333 * var_chaste_interface__membrane__v))); // dimensionless
        const double var_IKr__xr = var_IKr__Axrf * var_chaste_interface__IKr__xrf + var_IKr__Axrs * var_chaste_interface__IKr__xrs; // dimensionless
        const double var_Ito__AiF = 1 / (1.0 + exp(-1.4126984126984128 + 0.0066137566137566143 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__AiS = 1.0 - var_Ito__AiF; // dimensionless
        const double var_Ito__i = var_Ito__AiF * var_chaste_interface__Ito__iF + var_Ito__AiS * var_chaste_interface__Ito__iS; // dimensionless
        const double var_Ito__ip = var_Ito__AiF * var_chaste_interface__Ito__iFp + var_Ito__AiS * var_chaste_interface__Ito__iSp; // dimensionless
        const double var_ICaL__PhiCaK = ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(mParameters[6] * mParameters[19] / mParameters[5])) ? (-9.9999999999999995e-8 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 9.9999999999999995e-8 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) * (9.9999999999999995e-8 * mParameters[6] * mParameters[19] / mParameters[5] + var_chaste_interface__membrane__v) * mParameters[5] / (mParameters[6] * mParameters[19])) : (pow(mParameters[5], 2) * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * mParameters[6] * mParameters[19]))); // dimensionless
        const double var_ICaL__ICaK = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaK * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaKp * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ions__kss = -var_diff__JdiffK - var_ICaL__ICaK * var_cell_geometry__Acap * var_intracellular_ions__cm / (var_cell_geometry__vss * mParameters[5]); // millimolar / millisecond
        const double var_ICaL__PhiCaL = ((fabs(var_chaste_interface__membrane__v) < 4.9999999999999998e-8 * fabs(mParameters[6] * mParameters[19] / mParameters[5])) ? (-1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * mParameters[6] * mParameters[19] / mParameters[5] + var_chaste_interface__membrane__v) * (1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cass * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[5] / (mParameters[6] * mParameters[19])) : (4.0 * pow(mParameters[5], 2) * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cass * exp(2.0 * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(2.0 * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * mParameters[6] * mParameters[19]))); // dimensionless
        const double var_ICaL__ICaL = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCa * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCap * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__PhiCaNa = ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(mParameters[6] * mParameters[19] / mParameters[5])) ? (-9.9999999999999995e-8 * (-0.75 * mParameters[4] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * (-0.75 * mParameters[4] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 9.9999999999999995e-8 * (-0.75 * mParameters[4] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) * (9.9999999999999995e-8 * mParameters[6] * mParameters[19] / mParameters[5] + var_chaste_interface__membrane__v) * mParameters[5] / (mParameters[6] * mParameters[19])) : (pow(mParameters[5], 2) * (-0.75 * mParameters[4] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * mParameters[6] * mParameters[19]))); // dimensionless
        const double var_ICaL__ICaNa = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaNa * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaNap * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICab__ICab = ((fabs(var_chaste_interface__membrane__v) < 4.9999999999999998e-8 * fabs(mParameters[6] * mParameters[19] / mParameters[5])) ? (-1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cai * exp(-9.9999999999999995e-8)) * mParameters[8] * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * mParameters[6] * mParameters[19] / mParameters[5] + var_chaste_interface__membrane__v) * (1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cai * exp(9.9999999999999995e-8)) * mParameters[8] * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cai * exp(-9.9999999999999995e-8)) * mParameters[8] * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[5] / (mParameters[6] * mParameters[19])) : (4.0 * pow(mParameters[5], 2) * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cai * exp(2.0 * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * mParameters[8] * var_chaste_interface__membrane__v / ((-1.0 + exp(2.0 * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * mParameters[6] * mParameters[19]))); // microA_per_microF
        const double var_INaCa_i__hca = exp(var_INaCa_i__qca * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19])); // dimensionless
        const double var_INaCa_i__hna = exp(var_INaCa_i__qna * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19])); // dimensionless
        const double var_INaCa_i__h1_i = 1.0 + (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h1_ss = 1.0 + (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h2_i = var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nai / (var_INaCa_i__h1_i * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h2_ss = var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nass / (var_INaCa_i__h1_ss * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h3_i = 1 / var_INaCa_i__h1_i; // dimensionless
        const double var_INaCa_i__h3_ss = 1 / var_INaCa_i__h1_ss; // dimensionless
        const double var_INaCa_i__h7_i = 1.0 + (1.0 + 1 / var_INaCa_i__hna) * mParameters[4] / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h7_ss = 1.0 + (1.0 + 1 / var_INaCa_i__hna) * mParameters[4] / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h8_i = mParameters[4] / (var_INaCa_i__h7_i * var_INaCa_i__hna * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h8_ss = mParameters[4] / (var_INaCa_i__h7_ss * var_INaCa_i__hna * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h9_i = 1 / var_INaCa_i__h7_i; // dimensionless
        const double var_INaCa_i__h9_ss = 1 / var_INaCa_i__h7_ss; // dimensionless
        const double var_INaCa_i__k3p_i = var_INaCa_i__h9_i * var_INaCa_i__wca; // dimensionless
        const double var_INaCa_i__k3p_ss = var_INaCa_i__h9_ss * var_INaCa_i__wca; // dimensionless
        const double var_INaCa_i__k3pp_i = var_INaCa_i__h8_i * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k3_i = var_INaCa_i__k3p_i + var_INaCa_i__k3pp_i; // dimensionless
        const double var_INaCa_i__k3pp_ss = var_INaCa_i__h8_ss * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k3_ss = var_INaCa_i__k3p_ss + var_INaCa_i__k3pp_ss; // dimensionless
        const double var_INaCa_i__k4p_i = var_INaCa_i__h3_i * var_INaCa_i__wca / var_INaCa_i__hca; // dimensionless
        const double var_INaCa_i__k4p_ss = var_INaCa_i__h3_ss * var_INaCa_i__wca / var_INaCa_i__hca; // dimensionless
        const double var_INaCa_i__k4pp_i = var_INaCa_i__h2_i * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k4_i = var_INaCa_i__k4p_i + var_INaCa_i__k4pp_i; // dimensionless
        const double var_INaCa_i__k4pp_ss = var_INaCa_i__h2_ss * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k4_ss = var_INaCa_i__k4p_ss + var_INaCa_i__k4pp_ss; // dimensionless
        const double var_INaCa_i__k7_i = var_INaCa_i__h2_i * var_INaCa_i__h5_i * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k7_ss = var_INaCa_i__h2_ss * var_INaCa_i__h5_ss * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k8_i = var_INaCa_i__h11_i * var_INaCa_i__h8_i * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k8_ss = var_INaCa_i__h11_ss * var_INaCa_i__h8_ss * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__x1_i = (var_INaCa_i__k2_i + var_INaCa_i__k3_i) * var_INaCa_i__k5_i * var_INaCa_i__k7_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k2_i * var_INaCa_i__k4_i; // dimensionless
        const double var_INaCa_i__x1_ss = (var_INaCa_i__k2_ss + var_INaCa_i__k3_ss) * var_INaCa_i__k5_ss * var_INaCa_i__k7_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k2_ss * var_INaCa_i__k4_ss; // dimensionless
        const double var_INaCa_i__x2_i = (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k4_i * var_INaCa_i__k6_i + (var_INaCa_i__k4_i + var_INaCa_i__k5_i) * var_INaCa_i__k1_i * var_INaCa_i__k7_i; // dimensionless
        const double var_INaCa_i__x2_ss = (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k4_ss * var_INaCa_i__k6_ss + (var_INaCa_i__k4_ss + var_INaCa_i__k5_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k7_ss; // dimensionless
        const double var_INaCa_i__x3_i = (var_INaCa_i__k2_i + var_INaCa_i__k3_i) * var_INaCa_i__k6_i * var_INaCa_i__k8_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k1_i * var_INaCa_i__k3_i; // dimensionless
        const double var_INaCa_i__x3_ss = (var_INaCa_i__k2_ss + var_INaCa_i__k3_ss) * var_INaCa_i__k6_ss * var_INaCa_i__k8_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k3_ss; // dimensionless
        const double var_INaCa_i__x4_i = (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k3_i * var_INaCa_i__k5_i + (var_INaCa_i__k4_i + var_INaCa_i__k5_i) * var_INaCa_i__k2_i * var_INaCa_i__k8_i; // dimensionless
        const double var_INaCa_i__E1_i = var_INaCa_i__x1_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E2_i = var_INaCa_i__x2_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E3_i = var_INaCa_i__x3_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E4_i = var_INaCa_i__x4_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__JncxCa_i = var_INaCa_i__E2_i * var_INaCa_i__k2_i - var_INaCa_i__E1_i * var_INaCa_i__k1_i; // millimolar_per_millisecond
        const double var_INaCa_i__JncxNa_i = var_INaCa_i__E3_i * var_INaCa_i__k4pp_i - var_INaCa_i__E2_i * var_INaCa_i__k3pp_i + 3.0 * var_INaCa_i__E4_i * var_INaCa_i__k7_i - 3.0 * var_INaCa_i__E1_i * var_INaCa_i__k8_i; // millimolar_per_millisecond
        const double var_INaCa_i__x4_ss = (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k3_ss * var_INaCa_i__k5_ss + (var_INaCa_i__k4_ss + var_INaCa_i__k5_ss) * var_INaCa_i__k2_ss * var_INaCa_i__k8_ss; // dimensionless
        const double var_INaCa_i__E1_ss = var_INaCa_i__x1_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E2_ss = var_INaCa_i__x2_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E3_ss = var_INaCa_i__x3_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E4_ss = var_INaCa_i__x4_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__JncxCa_ss = var_INaCa_i__E2_ss * var_INaCa_i__k2_ss - var_INaCa_i__E1_ss * var_INaCa_i__k1_ss; // millimolar_per_millisecond
        const double var_INaCa_i__JncxNa_ss = var_INaCa_i__E3_ss * var_INaCa_i__k4pp_ss - var_INaCa_i__E2_ss * var_INaCa_i__k3pp_ss + 3.0 * var_INaCa_i__E4_ss * var_INaCa_i__k7_ss - 3.0 * var_INaCa_i__E1_ss * var_INaCa_i__k8_ss; // millimolar_per_millisecond
        const double var_INaK__Knai = var_INaK__Knai0 * exp(0.33333333333333331 * var_INaK__delta * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19])); // millimolar
        const double var_INaK__Knao = var_INaK__Knao0 * exp(0.33333333333333331 * (1.0 - var_INaK__delta) * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19])); // millimolar
        const double var_INaK__a1 = pow(var_chaste_interface__intracellular_ions__nai, 3) * var_INaK__k1p / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__ki / var_INaK__Kki), 2) + pow((1.0 + var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3)) * pow(var_INaK__Knai, 3)); // dimensionless
        const double var_INaK__a3 = pow(mParameters[3], 2) * var_INaK__k3p / ((-1.0 + pow((1.0 + mParameters[3] / var_INaK__Kko), 2) + pow((1.0 + mParameters[4] / var_INaK__Knao), 3)) * pow(var_INaK__Kko, 2)); // dimensionless
        const double var_INaK__b2 = pow(mParameters[4], 3) * var_INaK__k2m / ((-1.0 + pow((1.0 + mParameters[3] / var_INaK__Kko), 2) + pow((1.0 + mParameters[4] / var_INaK__Knao), 3)) * pow(var_INaK__Knao, 3)); // dimensionless
        const double var_INaK__b4 = pow(var_chaste_interface__intracellular_ions__ki, 2) * var_INaK__k4m / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__ki / var_INaK__Kki), 2) + pow((1.0 + var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3)) * pow(var_INaK__Kki, 2)); // dimensionless
        const double var_INaK__x1 = var_INaK__a1 * var_INaK__a2 * var_INaK__a4 + var_INaK__a1 * var_INaK__a2 * var_INaK__b3 + var_INaK__a2 * var_INaK__b3 * var_INaK__b4 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__x2 = var_INaK__a1 * var_INaK__a2 * var_INaK__a3 + var_INaK__a2 * var_INaK__a3 * var_INaK__b4 + var_INaK__a3 * var_INaK__b1 * var_INaK__b4 + var_INaK__b1 * var_INaK__b2 * var_INaK__b4; // dimensionless
        const double var_INaK__x3 = var_INaK__a2 * var_INaK__a3 * var_INaK__a4 + var_INaK__a3 * var_INaK__a4 * var_INaK__b1 + var_INaK__a4 * var_INaK__b1 * var_INaK__b2 + var_INaK__b1 * var_INaK__b2 * var_INaK__b3; // dimensionless
        const double var_INaK__x4 = var_INaK__a1 * var_INaK__a3 * var_INaK__a4 + var_INaK__a1 * var_INaK__a4 * var_INaK__b2 + var_INaK__a1 * var_INaK__b2 * var_INaK__b3 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__E1 = var_INaK__x1 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E2 = var_INaK__x2 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E3 = var_INaK__x3 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E4 = var_INaK__x4 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__JnakK = 2.0 * var_INaK__E4 * var_INaK__b1 - 2.0 * var_INaK__E3 * var_INaK__a1; // millimolar_per_millisecond
        const double var_INaK__JnakNa = 3.0 * var_INaK__E1 * var_INaK__a3 - 3.0 * var_INaK__E2 * var_INaK__b3; // millimolar_per_millisecond
        const double var_INab__INab = ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(mParameters[6] * mParameters[19] / mParameters[5])) ? (-3.7499999999999999e-17 * (-mParameters[4] + var_chaste_interface__intracellular_ions__nai * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * mParameters[6] * mParameters[19] / mParameters[5] + var_chaste_interface__membrane__v) * (3.7499999999999999e-17 * (-mParameters[4] + var_chaste_interface__intracellular_ions__nai * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 3.7499999999999999e-17 * (-mParameters[4] + var_chaste_interface__intracellular_ions__nai * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[5] / (mParameters[6] * mParameters[19])) : (3.75e-10 * pow(mParameters[5], 2) * (-mParameters[4] + var_chaste_interface__intracellular_ions__nai * exp(var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * mParameters[6] * mParameters[19]))); // microA_per_microF
        const double var_physical_constants__zca = 2.0; // dimensionless
        const double var_physical_constants__zk = 1.0; // dimensionless
        const double var_physical_constants__zna = 1.0; // dimensionless
        const double var_INaCa_i__INaCa_i = 0.80000000000000004 * (var_INaCa_i__JncxCa_i * var_physical_constants__zca + var_INaCa_i__JncxNa_i * var_physical_constants__zna) * var_INaCa_i__Gncx * var_INaCa_i__allo_i; // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ions__cai = (var_cell_geometry__vss * var_diff__Jdiff / var_cell_geometry__vmyo - var_SERCA__Jup * var_cell_geometry__vnsr / var_cell_geometry__vmyo + 0.5 * (-var_ICab__ICab - var_IpCa__IpCa + 2.0 * var_INaCa_i__INaCa_i) * var_cell_geometry__Acap * var_intracellular_ions__cm / (var_cell_geometry__vmyo * mParameters[5])) * var_intracellular_ions__Bcai; // millimolar / millisecond
        const double var_INaCa_i__INaCa_ss = 0.20000000000000001 * (var_INaCa_i__JncxCa_ss * var_physical_constants__zca + var_INaCa_i__JncxNa_ss * var_physical_constants__zna) * var_INaCa_i__Gncx * var_INaCa_i__allo_ss; // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ions__nass = -var_diff__JdiffNa + (-var_ICaL__ICaNa - 3.0 * var_INaCa_i__INaCa_ss) * var_cell_geometry__Acap * var_intracellular_ions__cm / (var_cell_geometry__vss * mParameters[5]); // millimolar / millisecond
        const double var_INaK__INaK = (var_INaK__JnakK * var_physical_constants__zk + var_INaK__JnakNa * var_physical_constants__zna) * var_INaK__Pnak; // microA_per_microF
        const double var_reversal_potentials__EK = mParameters[6] * mParameters[19] * log(mParameters[3] / var_chaste_interface__intracellular_ions__ki) / mParameters[5]; // millivolt
        const double var_IK1__IK1 = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IK1__GK1_total * var_IK1__rk1 * var_chaste_interface__IK1__xk1; // microA_per_microF
        const double var_IKb__IKb = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IKb__GKb * var_IKb__xkb; // microA_per_microF
        const double var_IKr__IKr = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IKr__GKr_total * var_IKr__rkr * var_IKr__xr; // microA_per_microF
        const double var_Ito__Ito = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * ((1.0 - var_Ito__fItop) * var_chaste_interface__Ito__a * var_Ito__i + var_chaste_interface__Ito__ap * var_Ito__fItop * var_Ito__ip) * var_Ito__Gto; // microA_per_microF
        const double var_reversal_potentials__ENa = mParameters[6] * mParameters[19] * log(mParameters[4] / var_chaste_interface__intracellular_ions__nai) / mParameters[5]; // millivolt
        const double var_INa__INa = pow(var_chaste_interface__INa__m, 3) * (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - var_INa__fINap) * var_INa__h * var_chaste_interface__INa__j + var_INa__fINap * var_INa__hp * var_chaste_interface__INa__jp) * mParameters[11]; // microA_per_microF
        const double var_INaL__INaL = (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - var_INaL__fINaLp) * var_chaste_interface__INaL__hL + var_INaL__fINaLp * var_chaste_interface__INaL__hLp) * var_INaL__GNaL * var_chaste_interface__INaL__mL; // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ions__nai = var_cell_geometry__vss * var_diff__JdiffNa / var_cell_geometry__vmyo + (-var_INa__INa - var_INaL__INaL - var_INab__INab - 3.0 * var_INaCa_i__INaCa_i - 3.0 * var_INaK__INaK) * var_cell_geometry__Acap * var_intracellular_ions__cm / (var_cell_geometry__vmyo * mParameters[5]); // millimolar / millisecond
        const double var_reversal_potentials__PKNa = 0.018329999999999999; // dimensionless
        const double var_reversal_potentials__EKs = mParameters[6] * mParameters[19] * log((mParameters[4] * var_reversal_potentials__PKNa + mParameters[3]) / (var_chaste_interface__intracellular_ions__nai * var_reversal_potentials__PKNa + var_chaste_interface__intracellular_ions__ki)) / mParameters[5]; // millivolt
        const double var_IKs__IKs = (-var_reversal_potentials__EKs + var_chaste_interface__membrane__v) * var_IKs__GKs_total * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2; // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ions__ki = var_cell_geometry__vss * var_diff__JdiffK / var_cell_geometry__vmyo + (-var_IK1__IK1 - var_IKb__IKb - var_IKr__IKr - var_IKs__IKs - var_Ito__Ito - var_membrane__Istim + 2.0 * var_INaK__INaK) * var_cell_geometry__Acap * var_intracellular_ions__cm / (var_cell_geometry__vmyo * mParameters[5]); // millimolar / millisecond
        const double var_ryr__bt = 4.75; // millisecond
        const double var_ryr__a_rel = 0.5 * var_ryr__bt; // millisecond
        const double var_ryr__Jrel_inf_temp = -var_ICaL__ICaL * var_ryr__a_rel / (1.0 + 25.62890625 / pow(var_chaste_interface__intracellular_ions__cajsr, 8)); // dimensionless
        const double var_ryr__Jrel_inf = ((var_environment__celltype == 2.0) ? (1.7 * var_ryr__Jrel_inf_temp) : (var_ryr__Jrel_inf_temp)); // dimensionless
        const double var_ryr__btp = 1.25 * var_ryr__bt; // millisecond
        const double var_ryr__a_relp = 0.5 * var_ryr__btp; // millisecond
        const double var_ryr__Jrel_temp = -var_ICaL__ICaL * var_ryr__a_relp / (1.0 + 25.62890625 / pow(var_chaste_interface__intracellular_ions__cajsr, 8)); // dimensionless
        const double var_ryr__Jrel_infp = ((var_environment__celltype == 2.0) ? (1.7 * var_ryr__Jrel_temp) : (var_ryr__Jrel_temp)); // dimensionless
        const double var_ryr__fJrelp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_ryr__Jrel = ((1.0 - var_ryr__fJrelp) * var_chaste_interface__ryr__Jrelnp + var_chaste_interface__ryr__Jrelp * var_ryr__fJrelp) * mParameters[0]; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_intracellular_ions__cass = (-var_diff__Jdiff + var_cell_geometry__vjsr * var_ryr__Jrel / var_cell_geometry__vss + 0.5 * (-var_ICaL__ICaL + 2.0 * var_INaCa_i__INaCa_ss) * var_cell_geometry__Acap * var_intracellular_ions__cm / (var_cell_geometry__vss * mParameters[5])) * var_intracellular_ions__Bcass; // millimolar / millisecond
        const double var_ryr__tau_rel_temp = var_ryr__bt / (1.0 + 0.0123 / var_chaste_interface__intracellular_ions__cajsr); // millisecond
        const double var_ryr__tau_rel = ((var_ryr__tau_rel_temp < 0.001) ? (0.001) : (var_ryr__tau_rel_temp)); // millisecond
        const double d_dt_chaste_interface_var_ryr__Jrelnp = (-var_chaste_interface__ryr__Jrelnp + var_ryr__Jrel_inf) / var_ryr__tau_rel; // 1 / millisecond
        const double var_ryr__tau_relp_temp = var_ryr__btp / (1.0 + 0.0123 / var_chaste_interface__intracellular_ions__cajsr); // millisecond
        const double var_ryr__tau_relp = ((var_ryr__tau_relp_temp < 0.001) ? (0.001) : (var_ryr__tau_relp_temp)); // millisecond
        const double d_dt_chaste_interface_var_ryr__Jrelp = (-var_chaste_interface__ryr__Jrelp + var_ryr__Jrel_infp) / var_ryr__tau_relp; // 1 / millisecond
        const double var_trans_flux__Jtr = 0.01 * var_chaste_interface__intracellular_ions__cansr - 0.01 * var_chaste_interface__intracellular_ions__cajsr; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_intracellular_ions__cajsr = (-var_ryr__Jrel + var_trans_flux__Jtr) * var_intracellular_ions__Bcajsr; // millimolar / millisecond
        const double d_dt_chaste_interface_var_intracellular_ions__cansr = -var_cell_geometry__vjsr * var_trans_flux__Jtr / var_cell_geometry__vnsr + var_SERCA__Jup; // millimolar / millisecond
        
        rResidual[2] = rCurrentGuess[2] - rY[1] - mDt*d_dt_chaste_interface_var_intracellular_ions__cai;
        rResidual[0] = rCurrentGuess[0] - rY[2] - mDt*d_dt_chaste_interface_var_CaMK__CaMKt;
        rResidual[8] = rCurrentGuess[8] - rY[3] - mDt*d_dt_chaste_interface_var_intracellular_ions__nai;
        rResidual[9] = rCurrentGuess[9] - rY[4] - mDt*d_dt_chaste_interface_var_intracellular_ions__nass;
        rResidual[6] = rCurrentGuess[6] - rY[5] - mDt*d_dt_chaste_interface_var_intracellular_ions__ki;
        rResidual[7] = rCurrentGuess[7] - rY[6] - mDt*d_dt_chaste_interface_var_intracellular_ions__kss;
        rResidual[5] = rCurrentGuess[5] - rY[7] - mDt*d_dt_chaste_interface_var_intracellular_ions__cass;
        rResidual[4] = rCurrentGuess[4] - rY[8] - mDt*d_dt_chaste_interface_var_intracellular_ions__cansr;
        rResidual[3] = rCurrentGuess[3] - rY[9] - mDt*d_dt_chaste_interface_var_intracellular_ions__cajsr;
        rResidual[1] = rCurrentGuess[1] - rY[33] - mDt*d_dt_chaste_interface_var_ICaL__nca;
        rResidual[10] = rCurrentGuess[10] - rY[39] - mDt*d_dt_chaste_interface_var_ryr__Jrelnp;
        rResidual[11] = rCurrentGuess[11] - rY[40] - mDt*d_dt_chaste_interface_var_ryr__Jrelp;
    }

    void Cellohara_rudy_2011_endoFromCellMLBackwardEulerNoLut::ComputeJacobian(double var_chaste_interface__environment__time, const double rCurrentGuess[12], double rJacobian[12][12])
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -87.0
        double var_chaste_interface__INa__m = rY[10];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__INa__hf = rY[11];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__hs = rY[12];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__j = rY[13];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__hsp = rY[14];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__jp = rY[15];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INaL__mL = rY[16];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__INaL__hL = rY[17];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INaL__hLp = rY[18];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ito__a = rY[19];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__Ito__iF = rY[20];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ito__iS = rY[21];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ito__ap = rY[22];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__Ito__iFp = rY[23];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ito__iSp = rY[24];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__d = rY[25];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ICaL__ff = rY[26];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fs = rY[27];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fcaf = rY[28];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fcas = rY[29];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__jca = rY[30];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__ffp = rY[31];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fcafp = rY[32];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__IKr__xrf = rY[34];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKr__xrs = rY[35];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKs__xs1 = rY[36];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKs__xs2 = rY[37];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IK1__xk1 = rY[38];
        // Units: dimensionless; Initial value: 1.0
        
        double var_chaste_interface__CaMK__CaMKt = rCurrentGuess[0];
        double var_chaste_interface__ICaL__nca = rCurrentGuess[1];
        double var_chaste_interface__intracellular_ions__cai = rCurrentGuess[2];
        double var_chaste_interface__intracellular_ions__cajsr = rCurrentGuess[3];
        double var_chaste_interface__intracellular_ions__cansr = rCurrentGuess[4];
        double var_chaste_interface__intracellular_ions__cass = rCurrentGuess[5];
        double var_chaste_interface__intracellular_ions__ki = rCurrentGuess[6];
        double var_chaste_interface__intracellular_ions__kss = rCurrentGuess[7];
        double var_chaste_interface__intracellular_ions__nai = rCurrentGuess[8];
        double var_chaste_interface__intracellular_ions__nass = rCurrentGuess[9];
        double var_chaste_interface__ryr__Jrelnp = rCurrentGuess[10];
        double var_chaste_interface__ryr__Jrelp = rCurrentGuess[11];
        
        const double var_x0 = 1.0 - var_chaste_interface__CaMK__CaMKt;
        const double var_x1 = 1 / var_chaste_interface__intracellular_ions__cass;
        const double var_x2 = 1.0 + 0.0015 * var_x1;
        const double var_x3 = 1 / var_x2;
        const double var_x4 = 0.050000000000000003 * var_x3;
        const double var_x5 = var_x0 * var_x4 + var_chaste_interface__CaMK__CaMKt;
        const double var_x6 = 0.0025000000000000005 * var_x3;
        const double var_x7 = pow(var_chaste_interface__intracellular_ions__cass, (-2));
        const double var_x8 = var_x0 * var_x7 / pow(var_x2, 2);
        const double var_x9 = 1.0 + 0.002 * var_x1;
        const double var_x10 = 0.00075000000000000002 + var_chaste_interface__intracellular_ions__cai;
        const double var_x11 = 1 / var_x10;
        const double var_x12 = 1.0 + 0.14999999999999999 / var_x5;
        const double var_x13 = 1 / (pow(var_x12, 2) * pow(var_x5, 2));
        const double var_x14 = var_x13 * (-1 + var_x4);
        const double var_x15 = var_x14 * var_chaste_interface__intracellular_ions__cai;
        const double var_x16 = var_x11 * var_x15;
        const double var_x17 = 0.00092000000000000003 + var_chaste_interface__intracellular_ions__cai;
        const double var_x18 = 1 / var_x17;
        const double var_x19 = var_x15 * var_x18;
        const double var_x20 = 0.0023800000000000002 + var_chaste_interface__intracellular_ions__cai;
        const double var_x21 = 0.00050000000000000001 + var_chaste_interface__intracellular_ions__cai;
        const double var_x22 = pow(var_x21, (-2));
        const double var_x23 = 1.0 + 0.00011900000000000002 / pow(var_x20, 2) + 3.5000000000000004e-5 * var_x22;
        const double var_x24 = 1 / var_x23;
        const double var_x25 = var_x24;
        const double var_x26 = 1 / var_x12;
        const double var_x27 = var_x11 * var_x26;
        const double var_x28 = var_x26;
        const double var_x29 = 1.0 - var_x28;
        const double var_x30 = var_x18 * var_x29;
        const double var_x31 = var_x26 * var_chaste_interface__intracellular_ions__cai / pow(var_x10, 2);
        const double var_x32 = var_x29 * var_chaste_interface__intracellular_ions__cai / pow(var_x17, 2);
        const double var_x33 = exp(-9.9999999999999995e-8);
        const double var_x34 = 1 / (-1.0 + var_x33);
        const double var_x35 = 1.9999999999999999e-7 * mParameters[5];
        const double var_x36 = var_x34 * var_x35;
        const double var_x37 = var_x33 * var_x36;
        const double var_x38 = var_x37 * mParameters[8];
        const double var_x39 = exp(9.9999999999999995e-8);
        const double var_x40 = 1 / (-1.0 + var_x39);
        const double var_x41 = var_x35 * var_x40;
        const double var_x42 = var_x39 * var_x41;
        const double var_x43 = 1 / mParameters[5];
        const double var_x44 = var_x43 * mParameters[6] * mParameters[19];
        const double var_x45 = 1 / mParameters[6];
        const double var_x46 = 1 / mParameters[19];
        const double var_x47 = var_x45 * var_x46 * mParameters[5];
        const double var_x48 = 10000000.0 * var_x47 * (4.9999999999999998e-8 * var_x44 + var_chaste_interface__membrane__v);
        const double var_x49 = fabs(var_chaste_interface__membrane__v);
        const double var_x50 = fabs(var_x44);
        const double var_x51 = var_x49 < 4.9999999999999998e-8 * var_x50;
        const double var_x52 = var_x47 * var_chaste_interface__membrane__v;
        const double var_x53 = exp(2.0 * var_x52);
        const double var_x54 = var_x45 * var_x46 * pow(mParameters[5], 2) * var_chaste_interface__membrane__v;
        const double var_x55 = 4.0 * var_x54 / (-1.0 + var_x53);
        const double var_x56 = var_x53 * var_x55;
        const double var_x57 = mParameters[10] / var_x21;
        const double var_x58 = exp(0.52239999999999998 * var_x52);
        const double var_x59 = 1 / var_x58;
        const double var_x60 = 1 / (1.0 + 0.011348161597821153 * (1.0 + var_x59) * mParameters[4]);
        const double var_x61 = var_x59 * var_x60;
        const double var_x62 = var_x61 * mParameters[4];
        const double var_x63 = 56.740807989105761 * var_x62;
        const double var_x64 = var_x63 + 60000.0 * var_x60;
        const double var_x65 = 1 / (13.5 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * mParameters[4]) * mParameters[4]);
        const double var_x66 = var_x65 * mParameters[2];
        const double var_x67 = 1500000.0 * var_x66;
        const double var_x68 = pow(mParameters[4], 3);
        const double var_x69 = var_x65 * var_x68;
        const double var_x70 = var_x61 * var_x69;
        const double var_x71 = var_x67 + 9.0785292782569211 * var_x70;
        const double var_x72 = var_x64 * var_x71;
        const double var_x73 = 0.00036716666666666668 * var_x72;
        const double var_x74 = 1.0 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * var_chaste_interface__intracellular_ions__nai) * var_chaste_interface__intracellular_ions__nai;
        const double var_x75 = 1 / var_x74;
        const double var_x76 = 1500000.0 * var_x75;
        const double var_x77 = var_x76 * var_chaste_interface__intracellular_ions__cai;
        const double var_x78 = pow(var_chaste_interface__intracellular_ions__nai, 3);
        const double var_x79 = 0.011348161597821153 + 0.011348161597821153 * var_x58;
        const double var_x80 = 1.0 + var_x79 * var_chaste_interface__intracellular_ions__nai;
        const double var_x81 = 1 / var_x80;
        const double var_x82 = var_x58 * var_x81;
        const double var_x83 = var_x75 * var_x82;
        const double var_x84 = var_x78 * var_x83;
        const double var_x85 = var_x77 + 9.0785292782569211 * var_x84;
        const double var_x86 = 1 / exp(0.16700000000000001 * var_x52);
        const double var_x87 = var_x81 * var_x86;
        const double var_x88 = 56.740807989105761 * var_x82;
        const double var_x89 = var_x88 * var_chaste_interface__intracellular_ions__nai;
        const double var_x90 = var_x89 + 60000.0 * var_x87;
        const double var_x91 = var_x85 * var_x90;
        const double var_x92 = var_x71 * var_x90;
        const double var_x93 = var_x75 * var_x92;
        const double var_x94 = var_x64 * var_x66;
        const double var_x95 = 0.11015000000000001 * var_x94;
        const double var_x96 = 5000.0 + var_x90;
        const double var_x97 = var_x70 * var_x96;
        const double var_x98 = 5000.0 + var_x64;
        const double var_x99 = var_x84 * var_x98;
        const double var_x100 = var_x70 * var_x98;
        const double var_x101 = var_x100 * var_x75;
        const double var_x102 = var_x101 * var_chaste_interface__intracellular_ions__cai;
        const double var_x103 = var_x66 * var_x96;
        const double var_x104 = var_x103 * var_x84;
        const double var_x105 = pow((var_x102 + var_x104 + var_x73 + 0.0033333333333333331 * var_x97 + 0.0033333333333333331 * var_x99 + 0.00036716666666666668 * var_x91 + var_x85 * var_x95 + 0.11015000000000001 * var_x93 * var_chaste_interface__intracellular_ions__cai), (-2));
        const double var_x106 = 283704.03994552878 * var_x82;
        const double var_x107 = 300000000.0 * var_x87 + var_x106 * var_chaste_interface__intracellular_ions__nai;
        const double var_x108 = 2250000000000.0 * var_x94;
        const double var_x109 = var_x108 * var_x75;
        const double var_x110 = 13617793.917385383 * var_x101;
        const double var_x111 = var_x105 * (-var_x109 - var_x110 - var_x107 * var_x76 - var_x76 * var_x92);
        const double var_x112 = 13617793.917385383 * var_x104 + var_x77 * var_x92;
        const double var_x113 = 5.3924544444444452e-11 * var_x112;
        const double var_x114 = 5000.0 * var_x91 + 45392.646391284608 * var_x99;
        const double var_x115 = var_x64 * var_x67;
        const double var_x116 = 13617793.917385383 * var_x102 + var_x115 * var_x85;
        const double var_x117 = 5000.0 * var_x72;
        const double var_x118 = var_x117 + 45392.646391284608 * var_x97;
        const double var_x119 = 1 / (var_x112 + var_x114 + var_x116 + var_x118);
        const double var_x120 = var_x119 * var_x93;
        const double var_x121 = var_x119 * var_x89;
        const double var_x122 = 4500000000000.0 * var_x66;
        const double var_x123 = var_x119 * var_x75;
        const double var_x124 = var_x107 * var_x123;
        const double var_x125 = 1.6177363333333335e-8 * var_x66;
        const double var_x126 = var_x111 * var_x114;
        const double var_x127 = 3.0597222222222222e-13 * var_x111;
        const double var_x128 = var_x116 * var_x82 * var_chaste_interface__intracellular_ions__nai;
        const double var_x129 = var_x112 * var_x62;
        const double var_x130 = 1.4686666666666667e-13 * var_x118 * var_x84;
        const double var_x131 = 40853381.752156146 * var_x70;
        const double var_x132 = 85111211.983658642 * var_x62;
        const double var_x133 = 1.4686666666666667e-13 * var_x70;
        const double var_x134 = 15000000000.0 * var_x120 + var_x111 * var_x113 + var_x111 * var_x130 + var_x121 * (var_x109 + var_x110) + var_x127 * var_x128 - var_x120 * var_x132 - var_x122 * var_x124 - var_x124 * var_x131 - var_x125 * var_x126 - var_x126 * var_x133 - var_x127 * var_x129;
        const double var_x135 = 1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__intracellular_ions__cai, 2);
        const double var_x136 = mParameters[16] / var_x135;
        const double var_x137 = 1.6000000000000001 * var_x136;
        const double var_x138 = 10000.0 * var_x119;
        const double var_x139 = 3000000.0 * var_x66;
        const double var_x140 = var_x114 * var_x119;
        const double var_x141 = var_x116 * var_x119;
        const double var_x142 = var_x119 * var_x63;
        const double var_x143 = var_x118 * var_x119;
        const double var_x144 = 27.235587834770765 * var_x143;
        const double var_x145 = 27.235587834770765 * var_x70;
        const double var_x146 = var_x112 * var_x138 + var_x141 * var_x89 + var_x144 * var_x84 - var_x112 * var_x142 - var_x139 * var_x140 - var_x140 * var_x145;
        const double var_x147 = var_x146 * mParameters[16] / (pow(var_x135, 2) * pow(var_chaste_interface__intracellular_ions__cai, 3));
        const double var_x148 = 2.9679144385026732 * var_x43;
        const double var_x149 = -0.34100000000000003 * mParameters[2];
        const double var_x150 = var_x36 * (var_x149 + var_x33 * var_chaste_interface__intracellular_ions__cai) * mParameters[8];
        const double var_x151 = 0.0043750000000000004 * var_x30;
        const double var_x152 = 0.01203125 * var_x27;
        const double var_x153 = var_x13 * var_x8;
        const double var_x154 = var_x153 * var_chaste_interface__intracellular_ions__cai;
        const double var_x155 = var_x154 * var_x18;
        const double var_x156 = var_x11 * var_x154;
        const double var_x157 = pow(var_x80, (-2));
        const double var_x158 = -0.011348161597821153 - 0.011348161597821153 * var_x58;
        const double var_x159 = var_x158 * var_x86;
        const double var_x160 = var_x157 * var_x159;
        const double var_x161 = var_x158 * var_x58;
        const double var_x162 = 56.740807989105761 * var_x161;
        const double var_x163 = var_x157 * var_chaste_interface__intracellular_ions__nai;
        const double var_x164 = var_x162 * var_x163;
        const double var_x165 = var_x164 + var_x88 + 60000.0 * var_x160;
        const double var_x166 = var_x165 * var_x71 * var_x77;
        const double var_x167 = (-0.066666666666666666 - 0.026666666666666668 * var_chaste_interface__intracellular_ions__nai) / pow(var_x74, 2);
        const double var_x168 = var_x167 * var_chaste_interface__intracellular_ions__cai;
        const double var_x169 = 1500000.0 * var_x168;
        const double var_x170 = var_x169 * var_x92;
        const double var_x171 = pow(var_chaste_interface__intracellular_ions__nai, 2);
        const double var_x172 = var_x171 * var_x83;
        const double var_x173 = 40853381.752156146 * var_x103 * var_x172;
        const double var_x174 = 13617793.917385383 * var_x66;
        const double var_x175 = var_x165 * var_x174 * var_x84;
        const double var_x176 = var_x167 * var_x82;
        const double var_x177 = var_x176 * var_x78;
        const double var_x178 = 13617793.917385383 * var_x103;
        const double var_x179 = var_x177 * var_x178;
        const double var_x180 = var_x157 * var_x161;
        const double var_x181 = var_x180 * var_x75;
        const double var_x182 = var_x181 * var_x78;
        const double var_x183 = var_x178 * var_x182;
        const double var_x184 = var_x166 + var_x170 + var_x173 + var_x175 + var_x179 + var_x183;
        const double var_x185 = 283704.03994552878 * var_x161;
        const double var_x186 = var_x85 * (var_x106 + 300000000.0 * var_x160 + var_x163 * var_x185);
        const double var_x187 = 9.0785292782569211 * var_x78;
        const double var_x188 = var_x169 + 27.235587834770765 * var_x172 + var_x176 * var_x187 + var_x181 * var_x187;
        const double var_x189 = var_x107 * var_x188;
        const double var_x190 = var_x115 * var_x188;
        const double var_x191 = 136177.93917385384 * var_x98;
        const double var_x192 = var_x172 * var_x191;
        const double var_x193 = 45392.646391284608 * var_x70;
        const double var_x194 = 45392.646391284608 * var_x98;
        const double var_x195 = var_x177 * var_x194;
        const double var_x196 = var_x182 * var_x194;
        const double var_x197 = 13617793.917385383 * var_x100;
        const double var_x198 = var_x168 * var_x197;
        const double var_x199 = var_x105 * (-var_x166 - var_x170 - var_x173 - var_x175 - var_x179 - var_x183 - var_x186 - var_x189 - var_x190 - var_x192 - var_x195 - var_x196 - var_x198 - var_x165 * var_x193);
        const double var_x200 = var_x119 * (var_x186 + var_x189 + var_x192 + var_x195 + var_x196);
        const double var_x201 = var_x114 * var_x199;
        const double var_x202 = 3.0597222222222222e-13 * var_x199;
        const double var_x203 = var_x123 * var_x78;
        const double var_x204 = 1236295.4078425223 * var_x60 * var_x69;
        const double var_x205 = var_x113 * var_x199 + var_x121 * (var_x190 + var_x198) + var_x128 * var_x202 + var_x130 * var_x199 + var_x138 * var_x184 + var_x141 * var_x164 + var_x141 * var_x88 + var_x144 * var_x177 - var_x125 * var_x201 - var_x129 * var_x202 - var_x133 * var_x201 - var_x139 * var_x200 - var_x142 * var_x184 - var_x145 * var_x200 + 81.706763504312292 * var_x143 * var_x172 + 27.235587834770765 * var_x118 * var_x180 * var_x203 + var_x165 * var_x203 * var_x204 * var_x81;
        const double var_x206 = 0.14999999999999999 * var_x14;
        const double var_x207 = 0.80000000000000004 + var_chaste_interface__intracellular_ions__cajsr;
        const double var_x208 = pow(var_x207, (-2));
        const double var_x209 = 1 / (1.0 + 8.0 * var_x208);
        const double var_x210 = var_x209 * mParameters[0];
        const double var_x211 = var_x210;
        const double var_x212 = 0.01 * var_x209;
        const double var_x213 = (var_x28 * var_chaste_interface__ryr__Jrelp + var_x29 * var_chaste_interface__ryr__Jrelnp) * mParameters[0];
        const double var_x214 = 1.1250000000000001e-5 * var_x153;
        const double var_x215 = -1.0 + var_x28;
        const double var_x216 = 0.035999999999999997 * var_x14;
        const double var_x217 = var_x36 * (var_x149 + var_x33 * var_chaste_interface__intracellular_ions__cass);
        const double var_x218 = ((var_x51) ? (-var_x217 + var_x48 * (var_x217 + var_x41 * (var_x149 + var_x39 * var_chaste_interface__intracellular_ions__cass))) : (var_x55 * (var_x149 + var_x53 * var_chaste_interface__intracellular_ions__cass)));
        const double var_x219 = 1.0 - var_chaste_interface__ICaL__nca;
        const double var_x220 = 0.40000000000000002 * var_chaste_interface__ICaL__fs;
        const double var_x221 = 0.59999999999999998 * var_chaste_interface__ICaL__ffp;
        const double var_x222 = 0.59999999999999998 / (1.0 + exp(-1.0 + 0.10000000000000001 * var_chaste_interface__membrane__v));
        const double var_x223 = 0.29999999999999999 + var_x222;
        const double var_x224 = (0.69999999999999996 - var_x222) * var_chaste_interface__ICaL__fcas;
        const double var_x225 = (var_x224 + var_x223 * var_chaste_interface__ICaL__fcafp) * var_chaste_interface__ICaL__jca;
        const double var_x226 = var_x219 * (var_x220 + var_x221) + var_x225 * var_chaste_interface__ICaL__nca;
        const double var_x227 = mParameters[7] * var_chaste_interface__ICaL__d;
        const double var_x228 = var_x226 * var_x227;
        const double var_x229 = var_x14 * var_x228;
        const double var_x230 = 0.16500000000000001 * var_x218 * var_x229;
        const double var_x231 = 0.59999999999999998 * var_chaste_interface__ICaL__ff;
        const double var_x232 = (var_x224 + var_x223 * var_chaste_interface__ICaL__fcaf) * var_chaste_interface__ICaL__jca;
        const double var_x233 = var_x219 * (var_x220 + var_x231) + var_x232 * var_chaste_interface__ICaL__nca;
        const double var_x234 = var_x227 * var_x233;
        const double var_x235 = var_x218 * var_x234;
        const double var_x236 = var_x206 * var_x235;
        const double var_x237 = 100.90909090909091 * var_x43;
        const double var_x238 = 0.0086999999999999994 + var_chaste_interface__intracellular_ions__cass;
        const double var_x239 = 0.00087000000000000001 + var_chaste_interface__intracellular_ions__cass;
        const double var_x240 = 1.0 + 0.0097788000000000007 / pow(var_x238, 2) + 4.0890000000000003e-5 / pow(var_x239, 2);
        const double var_x241 = 1 / var_x240;
        const double var_x242 = var_x241;
        const double var_x243 = var_x215 * var_x227;
        const double var_x244 = -var_x220;
        const double var_x245 = var_x232 + var_x244 - var_x231;
        const double var_x246 = var_x218 * var_x245;
        const double var_x247 = var_x225 + var_x244 - var_x221;
        const double var_x248 = var_x227 * var_x26;
        const double var_x249 = 1.1000000000000001 * var_x248;
        const double var_x250 = var_x218 * var_x249;
        const double var_x251 = var_x247 * var_x250;
        const double var_x252 = 2.7e-6 * var_x153;
        const double var_x253 = 1.0 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * var_chaste_interface__intracellular_ions__nass) * var_chaste_interface__intracellular_ions__nass;
        const double var_x254 = 1 / var_x253;
        const double var_x255 = 1500000.0 * var_x254;
        const double var_x256 = var_x255 * var_chaste_interface__intracellular_ions__cass;
        const double var_x257 = pow(var_chaste_interface__intracellular_ions__nass, 3);
        const double var_x258 = 1.0 + var_x79 * var_chaste_interface__intracellular_ions__nass;
        const double var_x259 = 1 / var_x258;
        const double var_x260 = var_x259 * var_x58;
        const double var_x261 = var_x254 * var_x260;
        const double var_x262 = var_x257 * var_x261;
        const double var_x263 = var_x256 + 9.0785292782569211 * var_x262;
        const double var_x264 = var_x259 * var_x86;
        const double var_x265 = 56.740807989105761 * var_x260;
        const double var_x266 = var_x265 * var_chaste_interface__intracellular_ions__nass;
        const double var_x267 = var_x266 + 60000.0 * var_x264;
        const double var_x268 = var_x263 * var_x267;
        const double var_x269 = var_x267 * var_x71;
        const double var_x270 = var_x254 * var_x269;
        const double var_x271 = 5000.0 + var_x267;
        const double var_x272 = var_x262 * var_x98;
        const double var_x273 = var_x100 * var_x254;
        const double var_x274 = var_x273 * var_chaste_interface__intracellular_ions__cass;
        const double var_x275 = var_x271 * var_x66;
        const double var_x276 = var_x262 * var_x275;
        const double var_x277 = pow((var_x274 + var_x276 + var_x73 + 0.0033333333333333331 * var_x272 + 0.00036716666666666668 * var_x268 + var_x263 * var_x95 + 0.0033333333333333331 * var_x271 * var_x70 + 0.11015000000000001 * var_x270 * var_chaste_interface__intracellular_ions__cass), (-2));
        const double var_x278 = 283704.03994552878 * var_x260;
        const double var_x279 = 300000000.0 * var_x264 + var_x278 * var_chaste_interface__intracellular_ions__nass;
        const double var_x280 = var_x108 * var_x254;
        const double var_x281 = 13617793.917385383 * var_x273;
        const double var_x282 = var_x277 * (-var_x280 - var_x281 - var_x255 * var_x269 - var_x255 * var_x279);
        const double var_x283 = 13617793.917385383 * var_x276 + var_x256 * var_x269;
        const double var_x284 = 5.3924544444444452e-11 * var_x283;
        const double var_x285 = 5000.0 * var_x268 + 45392.646391284608 * var_x272;
        const double var_x286 = 13617793.917385383 * var_x274 + var_x115 * var_x263;
        const double var_x287 = var_x117 + var_x193 * var_x271;
        const double var_x288 = 1 / (var_x283 + var_x285 + var_x286 + var_x287);
        const double var_x289 = var_x270 * var_x288;
        const double var_x290 = var_x266 * var_x288;
        const double var_x291 = var_x254 * var_x288;
        const double var_x292 = var_x279 * var_x291;
        const double var_x293 = var_x125 * var_x285;
        const double var_x294 = 3.0597222222222222e-13 * var_x282;
        const double var_x295 = var_x260 * var_x286 * var_chaste_interface__intracellular_ions__nass;
        const double var_x296 = var_x283 * var_x62;
        const double var_x297 = 1.4686666666666667e-13 * var_x262 * var_x287;
        const double var_x298 = var_x133 * var_x285;
        const double var_x299 = 15000000000.0 * var_x289 + var_x282 * var_x284 + var_x282 * var_x297 + var_x290 * (var_x280 + var_x281) + var_x294 * var_x295 - var_x122 * var_x292 - var_x131 * var_x292 - var_x132 * var_x289 - var_x282 * var_x293 - var_x282 * var_x298 - var_x294 * var_x296;
        const double var_x300 = 1.0 + 2.2499999999999996e-8 * var_x7;
        const double var_x301 = mParameters[16] / var_x300;
        const double var_x302 = 0.40000000000000002 * var_x301;
        const double var_x303 = 10000.0 * var_x288;
        const double var_x304 = var_x139 * var_x288;
        const double var_x305 = var_x286 * var_x288;
        const double var_x306 = var_x288 * var_x63;
        const double var_x307 = var_x287 * var_x288;
        const double var_x308 = 27.235587834770765 * var_x307;
        const double var_x309 = var_x145 * var_x288;
        const double var_x310 = var_x262 * var_x308 + var_x266 * var_x305 + var_x283 * var_x303 - var_x283 * var_x306 - var_x285 * var_x304 - var_x285 * var_x309;
        const double var_x311 = var_x310 * mParameters[16] / (pow(var_x300, 2) * pow(var_chaste_interface__intracellular_ions__cass, 3));
        const double var_x312 = ((var_x51) ? (-var_x37 + var_x48 * (var_x37 + var_x42)) : (var_x56));
        const double var_x313 = var_x233 * var_x312;
        const double var_x314 = var_x226 * var_x249 * var_x312;
        const double var_x315 = var_x214 * var_x235;
        const double var_x316 = var_x153 * var_x228;
        const double var_x317 = 1.2375000000000001e-5 * var_x218 * var_x316;
        const double var_x318 = var_x235 * var_x29;
        const double var_x319 = var_x226 * var_x250;
        const double var_x320 = pow(var_x258, (-2));
        const double var_x321 = var_x159 * var_x320;
        const double var_x322 = var_x320 * var_chaste_interface__intracellular_ions__nass;
        const double var_x323 = var_x162 * var_x322;
        const double var_x324 = var_x265 + var_x323 + 60000.0 * var_x321;
        const double var_x325 = var_x256 * var_x324 * var_x71;
        const double var_x326 = (-0.066666666666666666 - 0.026666666666666668 * var_chaste_interface__intracellular_ions__nass) / pow(var_x253, 2);
        const double var_x327 = var_x326 * var_chaste_interface__intracellular_ions__cass;
        const double var_x328 = 1500000.0 * var_x327;
        const double var_x329 = var_x269 * var_x328;
        const double var_x330 = var_x261 * pow(var_chaste_interface__intracellular_ions__nass, 2);
        const double var_x331 = 40853381.752156146 * var_x275 * var_x330;
        const double var_x332 = var_x174 * var_x262 * var_x324;
        const double var_x333 = var_x260 * var_x326;
        const double var_x334 = var_x257 * var_x333;
        const double var_x335 = 13617793.917385383 * var_x275;
        const double var_x336 = var_x334 * var_x335;
        const double var_x337 = var_x161 * var_x320;
        const double var_x338 = var_x254 * var_x337;
        const double var_x339 = var_x257 * var_x335 * var_x338;
        const double var_x340 = var_x325 + var_x329 + var_x331 + var_x332 + var_x336 + var_x339;
        const double var_x341 = var_x263 * (var_x278 + 300000000.0 * var_x321 + var_x185 * var_x322);
        const double var_x342 = 9.0785292782569211 * var_x257;
        const double var_x343 = var_x328 + 27.235587834770765 * var_x330 + var_x333 * var_x342 + var_x338 * var_x342;
        const double var_x344 = var_x279 * var_x343;
        const double var_x345 = var_x115 * var_x343;
        const double var_x346 = var_x191 * var_x330;
        const double var_x347 = var_x194 * var_x257;
        const double var_x348 = var_x333 * var_x347;
        const double var_x349 = var_x338 * var_x347;
        const double var_x350 = var_x197 * var_x327;
        const double var_x351 = var_x277 * (-var_x325 - var_x329 - var_x331 - var_x332 - var_x336 - var_x339 - var_x341 - var_x344 - var_x345 - var_x346 - var_x348 - var_x349 - var_x350 - var_x193 * var_x324);
        const double var_x352 = var_x341 + var_x344 + var_x346 + var_x348 + var_x349;
        const double var_x353 = 3.0597222222222222e-13 * var_x351;
        const double var_x354 = var_x257 * var_x291;
        const double var_x355 = var_x265 * var_x305 + var_x284 * var_x351 + var_x290 * (var_x345 + var_x350) + var_x295 * var_x353 + var_x297 * var_x351 + var_x303 * var_x340 + var_x305 * var_x323 + var_x308 * var_x334 - var_x293 * var_x351 - var_x296 * var_x353 - var_x298 * var_x351 - var_x304 * var_x352 - var_x306 * var_x340 - var_x309 * var_x352 + 81.706763504312292 * var_x307 * var_x330 + 27.235587834770765 * var_x287 * var_x337 * var_x354 + var_x204 * var_x259 * var_x324 * var_x354;
        const double var_x356 = 0.23999999999999996 * var_x26;
        const double var_x357 = 1 / (1.0 + exp(-1.4126984126984128 + 0.0066137566137566143 * var_chaste_interface__membrane__v));
        const double var_x358 = 1.0 - var_x357;
        const double var_x359 = (var_x357 * var_chaste_interface__Ito__iFp + var_x358 * var_chaste_interface__Ito__iSp) * var_chaste_interface__Ito__ap;
        const double var_x360 = (var_x357 * var_chaste_interface__Ito__iF + var_x358 * var_chaste_interface__Ito__iS) * var_chaste_interface__Ito__a;
        const double var_x361 = 1 / var_chaste_interface__intracellular_ions__ki;
        const double var_x362 = 5.9358288770053464 * var_x43;
        const double var_x363 = var_x362 * (-var_x44 * log(var_x361 * mParameters[3]) + var_chaste_interface__membrane__v) * mParameters[18];
        const double var_x364 = 1 / var_chaste_interface__intracellular_ions__cai;
        const double var_x365 = pow(var_x364, 1.3999999999999999);
        const double var_x366 = 1.0 + 6.4818210260626455e-7 * var_x365;
        const double var_x367 = 1 / (0.018329999999999999 * var_chaste_interface__intracellular_ions__nai + var_chaste_interface__intracellular_ions__ki);
        const double var_x368 = mParameters[15] * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2;
        const double var_x369 = exp(0.38500000000000001 * var_x52);
        const double var_x370 = 1 / (-1.0 + pow((1.0 + 0.035997120230381568 * mParameters[4] / var_x369), 3) + 7.7937924625297832 * pow((0.35820000000000002 + mParameters[3]), 2));
        const double var_x371 = var_x370 * pow(mParameters[3], 2);
        const double var_x372 = pow((0.5 + var_chaste_interface__intracellular_ions__ki), 2);
        const double var_x373 = exp(-0.051666666666666666 * var_x52);
        const double var_x374 = 1 / var_x373;
        const double var_x375 = 1.0 + 0.11021712774165104 * var_x374 * var_chaste_interface__intracellular_ions__nai;
        const double var_x376 = pow(var_x375, 3);
        const double var_x377 = pow((-0.25 + var_x372 + 0.25 * var_x376), (-2));
        const double var_x378 = var_x377 * (-4.0 - 8.0 * var_chaste_interface__intracellular_ions__ki);
        const double var_x379 = pow(var_x373, (-3));
        const double var_x380 = var_x379 * var_x78;
        const double var_x381 = var_x378 * var_x380;
        const double var_x382 = var_x371 * var_x381;
        const double var_x383 = var_x370 * var_x68 / pow(var_x369, 3);
        const double var_x384 = 0.09330879953375748 * var_x381 * var_x383;
        const double var_x385 = pow((1 + 0.0028096208831939005 * var_chaste_interface__intracellular_ions__nai + 0.0021553256090254577 * var_chaste_interface__intracellular_ions__ki), (-2));
        const double var_x386 = 1 / (-1.0 + var_x376 + 4.0 * var_x372);
        const double var_x387 = var_x379 * var_x386;
        const double var_x388 = var_x387 * var_x78;
        const double var_x389 = var_x385 * var_x388;
        const double var_x390 = var_x383 * var_x389;
        const double var_x391 = 1.8288767722361083e-15 * var_x390;
        const double var_x392 = 1 / (1.5889281507656066 + 0.0034246575342465752 * var_chaste_interface__intracellular_ions__ki + 0.004464285714285714 * var_chaste_interface__intracellular_ions__nai);
        const double var_x393 = var_x383 * var_x392;
        const double var_x394 = 8.4266669949965062e-14 * var_x381 * var_x393;
        const double var_x395 = var_x386 * var_chaste_interface__intracellular_ions__ki;
        const double var_x396 = var_x392 * var_x395;
        const double var_x397 = 3.3937789869608994e-10 * var_x383;
        const double var_x398 = pow(var_chaste_interface__intracellular_ions__ki, 2);
        const double var_x399 = var_x386 * var_x398;
        const double var_x400 = var_x385 * var_x399;
        const double var_x401 = var_x383 * var_x400;
        const double var_x402 = var_x378 * var_x398;
        const double var_x403 = var_x393 * var_x402;
        const double var_x404 = 1.0605559334252811e-11 * var_x403 - 2.3017714043409702e-13 * var_x401 + var_x396 * var_x397;
        const double var_x405 = var_x384 + var_x394 + var_x404 - var_x391 + 751444.4931407267 * var_x382;
        const double var_x406 = var_x371 * var_x388;
        const double var_x407 = var_x392 * var_x399;
        const double var_x408 = var_x371 * var_x399;
        const double var_x409 = var_x383 * var_x399;
        const double var_x410 = 2.6817254812739919 * var_x409 + 1648931648.7518551 * var_x408;
        const double var_x411 = 6585420658.1002293 * var_x371 + 9.6722701128385645e-12 * var_x393 + 10.71014095526842 * var_x383;
        const double var_x412 = var_x383 * var_x388;
        const double var_x413 = var_x388 * var_x392;
        const double var_x414 = var_x383 * var_x413;
        const double var_x415 = 1.348266719199441e-12 * var_x414 + 1.4929407925401197 * var_x412;
        const double var_x416 = 6.3450816326903207e-5 * var_x407 + 5.041496472709802e-7 * var_x413 + 558246.7943749798 * var_x388;
        const double var_x417 = 1 / (var_x410 + var_x411 + var_x415 + var_x416 + 24953131.661984976 * var_x406 + var_x397 * var_x407);
        const double var_x418 = 36.480000000000004 * var_x417;
        const double var_x419 = var_x410 + 12930019.771733347 * var_x406;
        const double var_x420 = var_x385 * var_x417;
        const double var_x421 = var_x419 * var_x420;
        const double var_x422 = 8.6068818956382799e-8 * var_x400;
        const double var_x423 = 0.00012690163265380641 * var_x396;
        const double var_x424 = 6.8386140998302939e-10 * var_x389;
        const double var_x425 = var_x383 * var_x385;
        const double var_x426 = var_x378 * var_x392;
        const double var_x427 = 3.9656760204314505e-6 * var_x398 * var_x426;
        const double var_x428 = 34890.424648436237 * var_x381;
        const double var_x429 = 3297863297.5037103 * var_x371 * var_x395;
        const double var_x430 = 3.1509352954436263e-8 * var_x380 * var_x426;
        const double var_x431 = 5.3634509625479838 * var_x383 * var_x395;
        const double var_x432 = 103058228.04699095 * var_x371 * var_x402;
        const double var_x433 = 0.16760784257962449 * var_x383 * var_x402;
        const double var_x434 = var_x391 + var_x422 + var_x424 - var_x384 - var_x394 - var_x423 - var_x427 - var_x428 - var_x429 - var_x430 - var_x431 - var_x432 - var_x433 + 4.6035428086819405e-13 * var_x401 + 1.3120097004743531e-14 * var_x425 - 2.1211118668505621e-11 * var_x403 - 1559570.728874061 * var_x382 - 6.7875579739217989e-10 * var_x383 * var_x396;
        const double var_x435 = var_x383 * var_x407;
        const double var_x436 = pow((var_x371 + 0.25039124064514068 * var_x408 + 7.6555420442407695e-17 * var_x413 + 8.4770104046173956e-5 * var_x388 + 2.0473509426327076e-22 * var_x414 + 0.0037891477184972245 * var_x406 + 9.6350437764149725e-15 * var_x407 + 4.0722159152815902e-10 * var_x409 + 1.4687399051632995e-21 * var_x393 + 1.6263412029867345e-9 * var_x383 + 5.1534733514501733e-20 * var_x435 + 2.2670393738686469e-10 * var_x412), (-2));
        const double var_x437 = 1.6968894934804497e-10 * var_x435;
        const double var_x438 = var_x436 * (var_x415 + var_x437 + 12023111.890251627 * var_x406);
        const double var_x439 = 8.4117776866390357e-19 * var_x438;
        const double var_x440 = var_x429 + var_x431 + var_x432 + var_x433 + 808126.23573333421 * var_x382;
        const double var_x441 = var_x392 * var_x417;
        const double var_x442 = 3.4624645114360737e-9 * var_x441;
        const double var_x443 = var_x404 + var_x423 + var_x427 + var_x428 + var_x430 - var_x422 - var_x424;
        const double var_x444 = var_x371 * var_x417;
        const double var_x445 = 88802.471318064345 * var_x444;
        const double var_x446 = var_x434 * var_x436;
        const double var_x447 = var_x392 * var_x419;
        const double var_x448 = 7.9839588042975586e-29 * var_x447;
        const double var_x449 = var_x371 * (var_x416 + var_x437);
        const double var_x450 = 2.0476607641219754e-15 * var_x449;
        const double var_x451 = var_x388 * var_x411;
        const double var_x452 = 1.1725602957619933e-19 * var_x451;
        const double var_x453 = var_x411 * var_x417;
        const double var_x454 = var_x381 * var_x453;
        const double var_x455 = var_x412 * var_x420;
        const double var_x456 = var_x361 * var_x44;
        const double var_x457 = var_x456;
        const double var_x458 = var_x367 * var_x368 * var_x44 * (-1.0 - 0.59999999999999998 / var_x366);
        const double var_x459 = sqrt(mParameters[3]);
        const double var_x460 = 1 / (1.0 + exp(1.4344412457471867 + 0.026171159382360639 * var_chaste_interface__membrane__v));
        const double var_x461 = var_x171 * var_x387;
        const double var_x462 = var_x371 * var_x461;
        const double var_x463 = 4.4788223776203591 * var_x383 * var_x461;
        const double var_x464 = var_x377 * pow(var_x375, 2);
        const double var_x465 = var_x464 * var_x78 / pow(var_x373, 4);
        const double var_x466 = var_x371 * var_x465;
        const double var_x467 = 4.0448001575983228e-12 * var_x393 * var_x461;
        const double var_x468 = 2.3840715066649271e-15 * var_x390;
        const double var_x469 = 0.030852683632896775 * var_x383 * var_x465;
        const double var_x470 = 2.786289097871654e-14 * var_x393 * var_x465;
        const double var_x471 = var_x374 * var_x398 * var_x464;
        const double var_x472 = var_x393 * var_x471;
        const double var_x473 = -3.0005234378016216e-13 * var_x401 - 3.5067428637450051e-12 * var_x472;
        const double var_x474 = var_x463 + var_x467 + var_x473 - var_x468 - var_x469 - var_x470 + 36069335.67075488 * var_x462 - 248466.16107375509 * var_x466;
        const double var_x475 = 1.1219685328242758e-7 * var_x400;
        const double var_x476 = 1674740.3831249396 * var_x461;
        const double var_x477 = 8.9146219515644901e-10 * var_x389;
        const double var_x478 = 11536.567171311443 * var_x465;
        const double var_x479 = 1.5124489418129408e-6 * var_x392 * var_x461;
        const double var_x480 = 1.3112562615776865e-6 * var_x392 * var_x471;
        const double var_x481 = 1.0418611138907615e-8 * var_x392 * var_x465;
        const double var_x482 = 34076345.656450219 * var_x371 * var_x471;
        const double var_x483 = 0.055419764988303033 * var_x383 * var_x471;
        const double var_x484 = var_x468 + var_x469 + var_x470 + var_x475 + var_x477 + var_x478 + var_x480 + var_x481 + var_x482 + var_x483 - var_x463 - var_x467 - var_x476 - var_x479 + 6.0010468756032432e-13 * var_x401 + 7.0134857274900101e-12 * var_x472 + 1.7102983595469244e-14 * var_x425 + 515674.21873935661 * var_x466 - 74859394.985954925 * var_x462;
        const double var_x485 = -var_x482 - var_x483 + 38790059.315200046 * var_x462 - 267208.05766560155 * var_x466;
        const double var_x486 = var_x473 + var_x476 + var_x479 - var_x475 - var_x477 - var_x478 - var_x480 - var_x481;
        const double var_x487 = var_x436 * var_x484;
        const double var_x488 = var_x453 * var_x461;
        const double var_x489 = var_x453 * var_x465;
        const double var_x490 = -0.75 * mParameters[3];
        const double var_x491 = 0.75 * var_chaste_interface__intracellular_ions__kss;
        const double var_x492 = 9.9999999999999995e-8 * mParameters[5];
        const double var_x493 = var_x34 * var_x492;
        const double var_x494 = var_x493 * (var_x490 + var_x33 * var_x491);
        const double var_x495 = var_x40 * var_x492;
        const double var_x496 = 5000000.0 * var_x47 * (9.9999999999999995e-8 * var_x44 + var_chaste_interface__membrane__v);
        const double var_x497 = var_x49 < 9.9999999999999995e-8 * var_x50;
        const double var_x498 = exp(var_x52);
        const double var_x499 = var_x54 / (-1.0 + var_x498);
        const double var_x500 = ((var_x497) ? (-var_x494 + var_x496 * (var_x494 + var_x495 * (var_x490 + var_x39 * var_x491))) : (var_x499 * (var_x490 + var_x491 * var_x498)));
        const double var_x501 = var_x14 * var_x234;
        const double var_x502 = 201.81818181818181 * var_x43;
        const double var_x503 = 0.00035740000000000001 - 0.00035740000000000001 * var_x26;
        const double var_x504 = var_x227 * var_x245;
        const double var_x505 = 0.00039314000000000005 * var_x248;
        const double var_x506 = var_x153 * var_x234;
        const double var_x507 = 7.4999999999999997e-8 * mParameters[5];
        const double var_x508 = var_x33 * var_x34;
        const double var_x509 = var_x507 * var_x508;
        const double var_x510 = var_x39 * var_x40;
        const double var_x511 = ((var_x497) ? (-var_x509 + var_x496 * (var_x509 + var_x507 * var_x510)) : (0.75 * var_x498 * var_x499));
        const double var_x512 = var_x234 * var_x511;
        const double var_x513 = var_x226 * var_x511;
        const double var_x514 = 1 / var_chaste_interface__intracellular_ions__nai;
        const double var_x515 = -var_x44 * log(var_x514 * mParameters[4]) + var_chaste_interface__membrane__v;
        const double var_x516 = mParameters[13] * var_chaste_interface__INaL__mL;
        const double var_x517 = var_x515 * var_x516;
        const double var_x518 = 0.98999999999999999 * var_chaste_interface__INa__hf;
        const double var_x519 = (var_x518 + 0.010000000000000009 * var_chaste_interface__INa__hs) * var_chaste_interface__INa__j;
        const double var_x520 = (var_x518 + 0.010000000000000009 * var_chaste_interface__INa__hsp) * var_chaste_interface__INa__jp;
        const double var_x521 = pow(var_chaste_interface__INa__m, 3) * mParameters[11];
        const double var_x522 = var_x515 * var_x521;
        const double var_x523 = 2.4000000000000004 * var_x136;
        const double var_x524 = 54.720000000000006 * var_x417;
        const double var_x525 = 5.1936967671541106e-9 * var_x441;
        const double var_x526 = 1.2617666529958554e-18 * var_x438;
        const double var_x527 = 1.1975938206446337e-28 * var_x447;
        const double var_x528 = 133203.70697709653 * var_x444;
        const double var_x529 = 3.0714911461829631e-15 * var_x449;
        const double var_x530 = 1.7588404436429901e-19 * var_x451;
        const double var_x531 = 3.7499999999999999e-17 * mParameters[5];
        const double var_x532 = var_x508 * var_x531;
        const double var_x533 = exp(var_x52);
        const double var_x534 = var_x44 * var_x514;
        const double var_x535 = -0.75 * mParameters[4];
        const double var_x536 = 0.75 * var_chaste_interface__intracellular_ions__nass;
        const double var_x537 = var_x493 * (var_x535 + var_x33 * var_x536);
        const double var_x538 = ((var_x497) ? (-var_x537 + var_x496 * (var_x537 + var_x495 * (var_x535 + var_x39 * var_x536))) : (var_x499 * (var_x535 + var_x498 * var_x536)));
        const double var_x539 = -0.00125 + 0.00125 * var_x26;
        const double var_x540 = 0.0013750000000000001 * var_x248;
        const double var_x541 = 0.60000000000000009 * var_x301;
        const double var_x542 = pow(var_chaste_interface__intracellular_ions__cajsr, (-8));
        const double var_x543 = 1 / (1.0 + 25.62890625 * var_x542);
        const double var_x544 = var_x543 * (var_x236 - var_x230);
        const double var_x545 = 1 / var_chaste_interface__intracellular_ions__cajsr;
        const double var_x546 = 1 / (1.0 + 0.0123 * var_x545);
        const double var_x547 = 4.75 * var_x546 < 0.001;
        const double var_x548 = ((var_x547) ? (1000.0) : (0.21052631578947367 + 0.0025894736842105265 * var_x545));
        const double var_x549 = 2.375 * var_x548;
        const double var_x550 = var_x227 * var_x29;
        const double var_x551 = var_x251 + var_x246 * var_x550;
        const double var_x552 = var_x543 * var_x549;
        const double var_x553 = var_x318 + var_x319;
        const double var_x554 = var_x543 * var_x553;
        const double var_x555 = pow(var_chaste_interface__intracellular_ions__cajsr, (-2));
        const double var_x556 = var_x553 / (pow((0.039018442310623382 + var_x542), 2) * pow(var_chaste_interface__intracellular_ions__cajsr, 9));
        const double var_x557 = var_x314 + var_x317 - var_x315 + var_x313 * var_x550;
        const double var_x558 = 5.9375 * var_x546 < 0.001;
        const double var_x559 = ((var_x558) ? (1000.0) : (0.16842105263157894 + 0.0020715789473684213 * var_x545));
        const double var_x560 = 2.96875 * var_x559;
        const double var_x561 = var_x543 * var_x560;
        
        
        rJacobian[0][0] = 1.0 - (mDt * (-0.00068000000000000005 - var_x5 * var_x6 + var_x0 * var_x6 * (1 - var_x4)));
        rJacobian[0][1] = 0.0;
        rJacobian[0][2] = 0.0;
        rJacobian[0][3] = 0.0;
        rJacobian[0][4] = 0.0;
        rJacobian[0][5] = -(mDt * (3.7500000000000005e-6 * var_x5 * var_x8 + 1.8750000000000003e-7 * var_x7 * pow(var_x0, 2) / pow(var_x2, 3)));
        rJacobian[0][6] = 0.0;
        rJacobian[0][7] = 0.0;
        rJacobian[0][8] = 0.0;
        rJacobian[0][9] = 0.0;
        rJacobian[0][10] = 0.0;
        rJacobian[0][11] = 0.0;
        rJacobian[1][0] = 0.0;
        rJacobian[1][1] = 1.0 - (mDt * (-var_chaste_interface__ICaL__jca));
        rJacobian[1][2] = 0.0;
        rJacobian[1][3] = 0.0;
        rJacobian[1][4] = 0.0;
        rJacobian[1][5] = -(mDt * (7.9999999999999996e-6 * var_x7 * pow(var_x9, 3) / pow((1 / var_chaste_interface__ICaL__jca + 0.001 * pow(var_x9, 4)), 2)));
        rJacobian[1][6] = 0.0;
        rJacobian[1][7] = 0.0;
        rJacobian[1][8] = 0.0;
        rJacobian[1][9] = 0.0;
        rJacobian[1][10] = 0.0;
        rJacobian[1][11] = 0.0;
        rJacobian[2][0] = -(mDt * (var_x25 * (0.00014649816176470588 * var_x16 - 5.3272058823529409e-5 * var_x19) * mParameters[1]));
        rJacobian[2][1] = 0.0;
        rJacobian[2][2] = 1.0 - (mDt * (var_x25 * (-0.14705882352941174 + var_x148 * (-var_x57 - ((var_x51) ? (-var_x38 + var_x48 * (var_x38 + var_x42 * mParameters[8])) : (var_x56 * mParameters[8])) + 7.1999999999999996e-8 * var_x147 + var_x134 * var_x137 + var_x22 * mParameters[10] * var_chaste_interface__intracellular_ions__cai) + (0.00097665441176470586 * var_x31 + 0.00035514705882352943 * var_x32 - 0.00097665441176470586 * var_x27 - 0.00035514705882352943 * var_x30) * mParameters[1]) + (0.00023800000000000004 / pow(var_x20, 3) + 7.0000000000000007e-5 / pow(var_x21, 3)) * (0.14705882352941174 * var_chaste_interface__intracellular_ions__cass - 0.14705882352941174 * var_chaste_interface__intracellular_ions__cai + var_x148 * (-((var_x51) ? (-var_x150 + var_x48 * (var_x150 + var_x41 * (var_x149 + var_x39 * var_chaste_interface__intracellular_ions__cai) * mParameters[8])) : (var_x55 * (var_x149 + var_x53 * var_chaste_interface__intracellular_ions__cai) * mParameters[8])) + var_x137 * var_x146 - var_x57 * var_chaste_interface__intracellular_ions__cai) - 0.081176470588235281 * (-0.00026249999999999998 * var_chaste_interface__intracellular_ions__cansr + var_x151 * var_chaste_interface__intracellular_ions__cai + var_x152 * var_chaste_interface__intracellular_ions__cai) * mParameters[1]) / pow(var_x23, 2)));
        rJacobian[2][3] = 0.0;
        rJacobian[2][4] = -(mDt * (2.1308823529411761e-5 * var_x24 * mParameters[1]));
        rJacobian[2][5] = -(mDt * (var_x25 * (0.14705882352941174 + (3.9954044117647064e-9 * var_x155 - 1.0987362132352942e-8 * var_x156) * mParameters[1])));
        rJacobian[2][6] = 0.0;
        rJacobian[2][7] = 0.0;
        rJacobian[2][8] = -(mDt * (4.7486631016042775 * var_x136 * var_x205 * var_x24 * var_x43));
        rJacobian[2][9] = 0.0;
        rJacobian[2][10] = 0.0;
        rJacobian[2][11] = 0.0;
        rJacobian[3][0] = -(mDt * (var_x211 * (var_x206 * var_chaste_interface__ryr__Jrelp - var_x206 * var_chaste_interface__ryr__Jrelnp)));
        rJacobian[3][1] = 0.0;
        rJacobian[3][2] = 0.0;
        rJacobian[3][3] = 1.0 - (mDt * (-var_x212 + 0.25 * (-var_x213 + 0.01 * var_chaste_interface__intracellular_ions__cansr - 0.01 * var_chaste_interface__intracellular_ions__cajsr) / (pow(var_x207, 3) * pow((0.125 + var_x208), 2))));
        rJacobian[3][4] = -(mDt * (var_x212));
        rJacobian[3][5] = -(mDt * (var_x211 * (var_x214 * var_chaste_interface__ryr__Jrelnp - var_x214 * var_chaste_interface__ryr__Jrelp)));
        rJacobian[3][6] = 0.0;
        rJacobian[3][7] = 0.0;
        rJacobian[3][8] = 0.0;
        rJacobian[3][9] = 0.0;
        rJacobian[3][10] = -(mDt * (var_x211 * var_x215));
        rJacobian[3][11] = -(mDt * (-var_x210 * var_x28));
        rJacobian[4][0] = -(mDt * ((0.00065625000000000004 * var_x19 - 0.0018046875000000001 * var_x16) * mParameters[1]));
        rJacobian[4][1] = 0.0;
        rJacobian[4][2] = -(mDt * ((var_x151 + var_x152 - 0.0043750000000000004 * var_x32 - 0.01203125 * var_x31) * mParameters[1]));
        rJacobian[4][3] = -(mDt * (0.00086956521739130427));
        rJacobian[4][4] = 1.0 - (mDt * (-0.00086956521739130427 - 0.00026249999999999998 * mParameters[1]));
        rJacobian[4][5] = -(mDt * ((1.3535156250000001e-7 * var_x156 - 4.9218750000000005e-8 * var_x155) * mParameters[1]));
        rJacobian[4][6] = 0.0;
        rJacobian[4][7] = 0.0;
        rJacobian[4][8] = 0.0;
        rJacobian[4][9] = 0.0;
        rJacobian[4][10] = 0.0;
        rJacobian[4][11] = 0.0;
        rJacobian[5][0] = -(mDt * (var_x242 * (var_x237 * (var_x230 - var_x236) + (var_x216 * var_chaste_interface__ryr__Jrelnp - var_x216 * var_chaste_interface__ryr__Jrelp) * mParameters[0])));
        rJacobian[5][1] = -(mDt * (var_x237 * var_x241 * (-var_x251 + var_x243 * var_x246)));
        rJacobian[5][2] = -(mDt * (5.0 * var_x241));
        rJacobian[5][3] = 0.0;
        rJacobian[5][4] = 0.0;
        rJacobian[5][5] = 1.0 - (mDt * (var_x242 * (-5.0 + var_x237 * (var_x315 - var_x314 - var_x317 + 1.7999999999999999e-8 * var_x311 + var_x243 * var_x313 + var_x299 * var_x302) + (var_x252 * var_chaste_interface__ryr__Jrelp - var_x252 * var_chaste_interface__ryr__Jrelnp) * mParameters[0]) + (0.019557600000000001 / pow(var_x238, 3) + 8.1780000000000006e-5 / pow(var_x239, 3)) * (5.0 * var_chaste_interface__intracellular_ions__cai + 0.23999999999999996 * var_x213 - 5.0 * var_chaste_interface__intracellular_ions__cass + var_x237 * (-var_x318 - var_x319 + var_x302 * var_x310)) / pow(var_x240, 2)));
        rJacobian[5][6] = 0.0;
        rJacobian[5][7] = 0.0;
        rJacobian[5][8] = 0.0;
        rJacobian[5][9] = -(mDt * (40.36363636363636 * var_x241 * var_x301 * var_x355 * var_x43));
        rJacobian[5][10] = -(mDt * (var_x242 * (0.23999999999999996 - var_x356) * mParameters[0]));
        rJacobian[5][11] = -(mDt * (var_x241 * var_x356 * mParameters[0]));
        rJacobian[6][0] = -(mDt * (var_x363 * (var_x206 * var_x359 - var_x206 * var_x360)));
        rJacobian[6][1] = 0.0;
        rJacobian[6][2] = -(mDt * (-3.2318983554549782e-6 * var_x364 * var_x365 * var_x368 * var_x43 * (-var_x44 * log(var_x367 * (0.018329999999999999 * mParameters[4] + mParameters[3])) + var_chaste_interface__membrane__v) / pow(var_x366, 2)));
        rJacobian[6][3] = 0.0;
        rJacobian[6][4] = 0.0;
        rJacobian[6][5] = -(mDt * (var_x363 * (var_x214 * var_x360 - var_x214 * var_x359)));
        rJacobian[6][6] = 1.0 - (mDt * (-0.014705882352941176 + var_x362 * (var_x458 + (4.6967123266361392e-12 * var_x421 + 6.6717424651173238e-14 * var_x455 - 0.31782074775748492 * var_x454 + var_x405 * var_x418 + var_x434 * var_x439 + var_x443 * var_x445 + var_x446 * var_x450 - var_x440 * var_x442 - var_x446 * var_x448 - var_x446 * var_x452) * mParameters[17] + var_x456 * (-var_x28 * var_x359 - var_x29 * var_x360) * mParameters[18] - var_x457 * mParameters[9] / (1.0 + exp(0.78953107960741553 - 0.054525627044711013 * var_chaste_interface__membrane__v)) - var_x457 * var_x459 * mParameters[12] * var_chaste_interface__IK1__xk1 / (1.0 + exp(11.145054250500367 + 0.10534077741493732 * var_chaste_interface__membrane__v - 0.27388602127883704 * mParameters[3])) - 0.43033148291193518 * var_x456 * var_x459 * (var_x460 * var_chaste_interface__IKr__xrf + (1.0 - var_x460) * var_chaste_interface__IKr__xrs) * mParameters[14] / ((1.0 + exp(0.73333333333333328 + 0.013333333333333334 * var_chaste_interface__membrane__v)) * (1.0 + exp(-0.33333333333333331 + 0.033333333333333333 * var_chaste_interface__membrane__v))))));
        rJacobian[6][7] = -(mDt * (0.014705882352941176));
        rJacobian[6][8] = -(mDt * (var_x362 * (0.018329999999999999 * var_x458 + (8.697092856313654e-14 * var_x455 + 0.10508786986360132 * var_x489 + 6.1224999972221096e-12 * var_x421 - 15.255395892359278 * var_x488 + var_x418 * var_x474 + var_x439 * var_x484 + var_x445 * var_x486 + var_x450 * var_x487 - var_x442 * var_x485 - var_x448 * var_x487 - var_x452 * var_x487) * mParameters[17])));
        rJacobian[6][9] = 0.0;
        rJacobian[6][10] = 0.0;
        rJacobian[6][11] = 0.0;
        rJacobian[7][0] = -(mDt * (-var_x502 * (5.3610000000000003e-5 * var_x500 * var_x501 - 5.8971000000000002e-5 * var_x229 * var_x500)));
        rJacobian[7][1] = -(mDt * (-var_x502 * (var_x247 * var_x500 * var_x505 + var_x500 * var_x503 * var_x504)));
        rJacobian[7][2] = 0.0;
        rJacobian[7][3] = 0.0;
        rJacobian[7][4] = 0.0;
        rJacobian[7][5] = -(mDt * (-var_x502 * (4.4228250000000006e-9 * var_x316 * var_x500 - 4.0207500000000006e-9 * var_x500 * var_x506)));
        rJacobian[7][6] = -(mDt * (0.5));
        rJacobian[7][7] = 1.0 - (mDt * (-0.5 - var_x502 * (var_x503 * var_x512 + var_x505 * var_x513)));
        rJacobian[7][8] = 0.0;
        rJacobian[7][9] = 0.0;
        rJacobian[7][10] = 0.0;
        rJacobian[7][11] = 0.0;
        rJacobian[8][0] = -(mDt * (var_x362 * (var_x517 * (var_x206 * var_chaste_interface__INaL__hLp - var_x206 * var_chaste_interface__INaL__hL) - var_x522 * (var_x206 * var_x519 - var_x206 * var_x520))));
        rJacobian[8][1] = 0.0;
        rJacobian[8][2] = -(mDt * (var_x362 * (-1.0799999999999999e-7 * var_x147 - var_x134 * var_x523)));
        rJacobian[8][3] = 0.0;
        rJacobian[8][4] = 0.0;
        rJacobian[8][5] = -(mDt * (var_x362 * (var_x517 * (var_x214 * var_chaste_interface__INaL__hL - var_x214 * var_chaste_interface__INaL__hLp) - var_x522 * (var_x214 * var_x520 - var_x214 * var_x519))));
        rJacobian[8][6] = -(mDt * (var_x362 * (0.47673112163622744 * var_x454 - 1.0007613697675985e-13 * var_x455 - 7.045068489954208e-12 * var_x421 + var_x440 * var_x525 + var_x446 * var_x527 + var_x446 * var_x530 - var_x405 * var_x524 - var_x434 * var_x526 - var_x443 * var_x528 - var_x446 * var_x529) * mParameters[17]));
        rJacobian[8][7] = 0.0;
        rJacobian[8][8] = 1.0 - (mDt * (-0.014705882352941176 + var_x362 * (-((var_x497) ? (-var_x532 + var_x496 * (var_x532 + var_x510 * var_x531)) : (3.75e-10 * var_x533 * var_x54 / (-1.0 + var_x533))) + (22.883093838538915 * var_x488 - 1.3045639284470481e-13 * var_x455 - 9.183749995833164e-12 * var_x421 - 0.15763180479540198 * var_x489 + var_x485 * var_x525 + var_x487 * var_x527 + var_x487 * var_x530 - var_x474 * var_x524 - var_x484 * var_x526 - var_x486 * var_x528 - var_x487 * var_x529) * mParameters[17] - var_x205 * var_x523 + var_x516 * var_x534 * (-var_x28 * var_chaste_interface__INaL__hLp - var_x29 * var_chaste_interface__INaL__hL) - var_x521 * var_x534 * (var_x28 * var_x520 + var_x29 * var_x519))));
        rJacobian[8][9] = -(mDt * (0.014705882352941176));
        rJacobian[8][10] = 0.0;
        rJacobian[8][11] = 0.0;
        rJacobian[9][0] = -(mDt * (var_x502 * (0.00020625000000000003 * var_x229 * var_x538 - 0.0001875 * var_x501 * var_x538)));
        rJacobian[9][1] = -(mDt * (var_x502 * (var_x504 * var_x538 * var_x539 - var_x247 * var_x538 * var_x540)));
        rJacobian[9][2] = 0.0;
        rJacobian[9][3] = 0.0;
        rJacobian[9][4] = 0.0;
        rJacobian[9][5] = -(mDt * (var_x502 * (-2.6999999999999997e-8 * var_x311 - var_x299 * var_x541 + 1.4062500000000001e-8 * var_x506 * var_x538 - 1.5468750000000001e-8 * var_x316 * var_x538)));
        rJacobian[9][6] = 0.0;
        rJacobian[9][7] = 0.0;
        rJacobian[9][8] = -(mDt * (0.5));
        rJacobian[9][9] = 1.0 - (mDt * (-0.5 + var_x502 * (var_x512 * var_x539 - var_x355 * var_x541 - var_x513 * var_x540)));
        rJacobian[9][10] = 0.0;
        rJacobian[9][11] = 0.0;
        rJacobian[10][0] = -(mDt * (-var_x544 * var_x549));
        rJacobian[10][1] = -(mDt * (-var_x551 * var_x552));
        rJacobian[10][2] = 0.0;
        rJacobian[10][3] = -(mDt * ((-var_chaste_interface__ryr__Jrelnp - 2.375 * var_x554) * ((var_x547) ? (0) : (-0.0025894736842105265 * var_x555)) - 0.74135040390184426 * var_x548 * var_x556));
        rJacobian[10][4] = 0.0;
        rJacobian[10][5] = -(mDt * (-var_x552 * var_x557));
        rJacobian[10][6] = 0.0;
        rJacobian[10][7] = 0.0;
        rJacobian[10][8] = 0.0;
        rJacobian[10][9] = 0.0;
        rJacobian[10][10] = 1.0 - (mDt * (-var_x548));
        rJacobian[10][11] = 0.0;
        rJacobian[11][0] = -(mDt * (-var_x544 * var_x560));
        rJacobian[11][1] = -(mDt * (-var_x551 * var_x561));
        rJacobian[11][2] = 0.0;
        rJacobian[11][3] = -(mDt * ((-var_chaste_interface__ryr__Jrelp - 2.96875 * var_x554) * ((var_x558) ? (0) : (-0.0020715789473684213 * var_x555)) - 0.92668800487730529 * var_x556 * var_x559));
        rJacobian[11][4] = 0.0;
        rJacobian[11][5] = -(mDt * (-var_x557 * var_x561));
        rJacobian[11][6] = 0.0;
        rJacobian[11][7] = 0.0;
        rJacobian[11][8] = 0.0;
        rJacobian[11][9] = 0.0;
        rJacobian[11][10] = 0.0;
        rJacobian[11][11] = 1.0 - (mDt * (-var_x559));
    }

    void Cellohara_rudy_2011_endoFromCellMLBackwardEulerNoLut::UpdateTransmembranePotential(double var_chaste_interface__environment__time)
    {
        // Time units: millisecond
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -87.0
        double var_chaste_interface__intracellular_ions__cai = rY[1];
        // Units: millimolar; Initial value: 0.0001
        double var_chaste_interface__CaMK__CaMKt = rY[2];
        // Units: millimolar; Initial value: 0.0
        double var_chaste_interface__intracellular_ions__nai = rY[3];
        // Units: millimolar; Initial value: 7.0
        double var_chaste_interface__intracellular_ions__nass = rY[4];
        // Units: millimolar; Initial value: 7.0
        double var_chaste_interface__intracellular_ions__ki = rY[5];
        // Units: millimolar; Initial value: 145.0
        double var_chaste_interface__intracellular_ions__kss = rY[6];
        // Units: millimolar; Initial value: 145.0
        double var_chaste_interface__intracellular_ions__cass = rY[7];
        // Units: millimolar; Initial value: 0.0001
        double var_chaste_interface__INa__m = rY[10];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__INa__hf = rY[11];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__hs = rY[12];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__j = rY[13];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__hsp = rY[14];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__jp = rY[15];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INaL__mL = rY[16];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__INaL__hL = rY[17];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INaL__hLp = rY[18];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ito__a = rY[19];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__Ito__iF = rY[20];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ito__iS = rY[21];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ito__ap = rY[22];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__Ito__iFp = rY[23];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ito__iSp = rY[24];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__d = rY[25];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ICaL__ff = rY[26];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fs = rY[27];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fcaf = rY[28];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fcas = rY[29];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__jca = rY[30];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__ffp = rY[31];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fcafp = rY[32];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__nca = rY[33];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKr__xrf = rY[34];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKr__xrs = rY[35];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKs__xs1 = rY[36];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKs__xs2 = rY[37];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IK1__xk1 = rY[38];
        // Units: dimensionless; Initial value: 1.0
        
        const double var_CaMK__CaMKo = 0.050000000000000003; // dimensionless
        const double var_CaMK__KmCaM = 0.0015; // millimolar
        const double var_CaMK__KmCaMK = 0.14999999999999999; // millimolar
        const double var_ICaL__Aff = 0.59999999999999998; // dimensionless
        const double var_ICaL__Afs = 1.0 - var_ICaL__Aff; // dimensionless
        const double var_ICaL__f = var_ICaL__Aff * var_chaste_interface__ICaL__ff + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_ICaL__fp = var_ICaL__Aff * var_chaste_interface__ICaL__ffp + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_INa__Ahf = 0.98999999999999999; // dimensionless
        const double var_INa__Ahs = 1.0 - var_INa__Ahf; // dimensionless
        const double var_INa__h = var_INa__Ahf * var_chaste_interface__INa__hf + var_INa__Ahs * var_chaste_interface__INa__hs; // dimensionless
        const double var_INa__hp = var_INa__Ahf * var_chaste_interface__INa__hf + var_INa__Ahs * var_chaste_interface__INa__hsp; // dimensionless
        const double var_INaCa_i__KmCaAct = 0.00014999999999999999; // millimolar
        const double var_INaCa_i__kasymm = 12.5; // dimensionless
        const double var_INaCa_i__kcaoff = 5000.0; // per_millisecond
        const double var_INaCa_i__k2_i = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k2_ss = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k5_i = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k5_ss = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__kcaon = 1500000.0; // per_millisecond
        const double var_INaCa_i__kna1 = 15.0; // per_millisecond
        const double var_INaCa_i__kna2 = 5.0; // per_millisecond
        const double var_INaCa_i__kna3 = 88.120000000000005; // per_millisecond
        const double var_INaCa_i__qca = 0.16700000000000001; // dimensionless
        const double var_INaCa_i__qna = 0.52239999999999998; // dimensionless
        const double var_INaCa_i__wca = 60000.0; // dimensionless
        const double var_INaCa_i__wna = 60000.0; // dimensionless
        const double var_INaCa_i__wnaca = 5000.0; // dimensionless
        const double var_INaK__H = 9.9999999999999995e-8; // millimolar
        const double var_INaK__Khp = 1.698e-7; // millimolar
        const double var_INaK__Kki = 0.5; // per_millisecond
        const double var_INaK__Kko = 0.35820000000000002; // per_millisecond
        const double var_INaK__Kmgatp = 1.698e-7; // millimolar
        const double var_INaK__Knai0 = 9.0730000000000004; // millimolar
        const double var_INaK__Knao0 = 27.780000000000001; // millimolar
        const double var_INaK__Knap = 224.0; // millimolar
        const double var_INaK__Kxkur = 292.0; // millimolar
        const double var_INaK__MgADP = 0.050000000000000003; // millimolar
        const double var_INaK__MgATP = 9.8000000000000007; // millimolar
        const double var_INaK__delta = -0.155; // millivolt
        const double var_INaK__eP = 4.2000000000000002; // dimensionless
        const double var_INaK__k1m = 182.40000000000001; // per_millisecond
        const double var_INaK__b1 = var_INaK__MgADP * var_INaK__k1m; // dimensionless
        const double var_INaK__k1p = 949.5; // per_millisecond
        const double var_INaK__k2m = 39.399999999999999; // per_millisecond
        const double var_INaK__k2p = 687.20000000000005; // per_millisecond
        const double var_INaK__a2 = var_INaK__k2p; // dimensionless
        const double var_INaK__k3m = 79300.0; // per_millisecond
        const double var_INaK__k3p = 1899.0; // per_millisecond
        const double var_INaK__k4m = 40.0; // per_millisecond
        const double var_INaK__k4p = 639.0; // per_millisecond
        const double var_INaK__a4 = var_INaK__MgATP * var_INaK__k4p / ((1.0 + var_INaK__MgATP / var_INaK__Kmgatp) * var_INaK__Kmgatp); // dimensionless
        const double var_IpCa__KmCap = 0.00050000000000000001; // millimolar
        const double var_environment__celltype = 0; // dimensionless
        const double var_ICaL__PCa = ((var_environment__celltype == 1.0) ? (1.2 * mParameters[7]) : ((var_environment__celltype == 2.0) ? (2.5 * mParameters[7]) : (mParameters[7]))); // dimensionless
        const double var_ICaL__PCaK = 0.00035740000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCaNa = 0.00125 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCap = 1.1000000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCaKp = 0.00035740000000000001 * var_ICaL__PCap; // dimensionless
        const double var_ICaL__PCaNap = 0.00125 * var_ICaL__PCap; // dimensionless
        const double var_IK1__GK1 = ((var_environment__celltype == 1.0) ? (1.2 * mParameters[12]) : ((var_environment__celltype == 2.0) ? (1.3 * mParameters[12]) : (mParameters[12]))); // milliS_per_microF
        const double var_IKb__GKb = ((var_environment__celltype == 1.0) ? (0.59999999999999998 * mParameters[9]) : (mParameters[9])); // milliS_per_microF
        const double var_IKr__GKr = ((var_environment__celltype == 1.0) ? (1.3 * mParameters[14]) : ((var_environment__celltype == 2.0) ? (0.80000000000000004 * mParameters[14]) : (mParameters[14]))); // milliS_per_microF
        const double var_IKs__GKs = ((var_environment__celltype == 1.0) ? (1.3999999999999999 * mParameters[15]) : (mParameters[15])); // milliS_per_microF
        const double var_INaCa_i__Gncx = ((var_environment__celltype == 1.0) ? (1.1000000000000001 * mParameters[16]) : ((var_environment__celltype == 2.0) ? (1.3999999999999999 * mParameters[16]) : (mParameters[16]))); // milliS_per_microF
        const double var_INaK__Pnak = ((var_environment__celltype == 1.0) ? (0.90000000000000002 * mParameters[17]) : ((var_environment__celltype == 2.0) ? (0.69999999999999996 * mParameters[17]) : (mParameters[17]))); // milliS_per_microF
        const double var_INaL__GNaL = ((var_environment__celltype == 1.0) ? (0.59999999999999998 * mParameters[13]) : (mParameters[13])); // milliS_per_microF
        const double var_Ito__Gto = (((var_environment__celltype == 1.0) || (var_environment__celltype == 2.0)) ? (4.0 * mParameters[18]) : (mParameters[18])); // milliS_per_microF
        const double var_IK1__GK1_total = sqrt(mParameters[3]) * var_IK1__GK1; // milliS_per_microF
        const double var_IKr__GKr_total = 0.43033148291193518 * sqrt(mParameters[3]) * var_IKr__GKr; // milliS_per_microF
        const double var_INaCa_i__h10_i = 1.0 + (1.0 + mParameters[4] / var_INaCa_i__kna2) * mParameters[4] / var_INaCa_i__kna1 + var_INaCa_i__kasymm; // dimensionless
        const double var_INaCa_i__h10_ss = 1.0 + (1.0 + mParameters[4] / var_INaCa_i__kna2) * mParameters[4] / var_INaCa_i__kna1 + var_INaCa_i__kasymm; // dimensionless
        const double var_INaCa_i__h11_i = pow(mParameters[4], 2) / (var_INaCa_i__h10_i * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h11_ss = pow(mParameters[4], 2) / (var_INaCa_i__h10_ss * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h12_i = 1 / var_INaCa_i__h10_i; // dimensionless
        const double var_INaCa_i__h12_ss = 1 / var_INaCa_i__h10_ss; // dimensionless
        const double var_INaCa_i__k1_i = var_INaCa_i__h12_i * var_INaCa_i__kcaon * mParameters[2]; // dimensionless
        const double var_INaCa_i__k1_ss = var_INaCa_i__h12_ss * var_INaCa_i__kcaon * mParameters[2]; // dimensionless
        const double var_IKs__KsCa = 1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__intracellular_ions__cai), 1.3999999999999999)); // dimensionless
        const double var_IKs__GKs_total = var_IKs__GKs * var_IKs__KsCa; // milliS_per_microF
        const double var_INaCa_i__allo_i = 1 / (1.0 + pow(var_INaCa_i__KmCaAct, 2) / pow(var_chaste_interface__intracellular_ions__cai, 2)); // dimensionless
        const double var_IpCa__IpCa = mParameters[10] * var_chaste_interface__intracellular_ions__cai / (var_IpCa__KmCap + var_chaste_interface__intracellular_ions__cai); // microA_per_microF
        const double var_CaMK__CaMKb = (1.0 - var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKo / (1.0 + var_CaMK__KmCaM / var_chaste_interface__intracellular_ions__cass); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_ICaL__fICaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INa__fINap = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INaCa_i__allo_ss = 1 / (1.0 + pow(var_INaCa_i__KmCaAct, 2) / pow(var_chaste_interface__intracellular_ions__cass, 2)); // dimensionless
        const double var_INaL__fINaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_Ito__fItop = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INaCa_i__h4_i = 1.0 + (1.0 + var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna2) * var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna1; // dimensionless
        const double var_INaCa_i__h5_i = pow(var_chaste_interface__intracellular_ions__nai, 2) / (var_INaCa_i__h4_i * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h6_i = 1 / var_INaCa_i__h4_i; // dimensionless
        const double var_INaCa_i__k6_i = var_INaCa_i__h6_i * var_INaCa_i__kcaon * var_chaste_interface__intracellular_ions__cai; // dimensionless
        const double var_INaK__P = var_INaK__eP / (1.0 + var_INaK__H / var_INaK__Khp + var_chaste_interface__intracellular_ions__nai / var_INaK__Knap + var_chaste_interface__intracellular_ions__ki / var_INaK__Kxkur); // dimensionless
        const double var_INaK__b3 = var_INaK__H * var_INaK__P * var_INaK__k3m / (1.0 + var_INaK__MgATP / var_INaK__Kmgatp); // dimensionless
        const double var_INaCa_i__h4_ss = 1.0 + (1.0 + var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna2) * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna1; // dimensionless
        const double var_INaCa_i__h5_ss = pow(var_chaste_interface__intracellular_ions__nass, 2) / (var_INaCa_i__h4_ss * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h6_ss = 1 / var_INaCa_i__h4_ss; // dimensionless
        const double var_INaCa_i__k6_ss = var_INaCa_i__h6_ss * var_INaCa_i__kcaon * var_chaste_interface__intracellular_ions__cass; // dimensionless
        const double var_membrane__Istim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
        const double var_membrane__Istim = var_membrane__Istim_converted / HeartConfig::Instance()->GetCapacitance(); // microA_per_microF
        const double var_ICaL__Afcaf = 0.29999999999999999 + 0.59999999999999998 / (1.0 + exp(-1.0 + 0.10000000000000001 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__Afcas = 1.0 - var_ICaL__Afcaf; // dimensionless
        const double var_ICaL__fca = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcaf + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__fcap = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcafp + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_IK1__rk1 = 1 / (1.0 + exp(11.145054250500367 + 0.10534077741493732 * var_chaste_interface__membrane__v - 0.27388602127883704 * mParameters[3])); // millisecond
        const double var_IKb__xkb = 1 / (1.0 + exp(0.78953107960741553 - 0.054525627044711013 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_IKr__Axrf = 1 / (1.0 + exp(1.4344412457471867 + 0.026171159382360639 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_IKr__Axrs = 1.0 - var_IKr__Axrf; // dimensionless
        const double var_IKr__rkr = 1 / ((1.0 + exp(0.73333333333333328 + 0.013333333333333334 * var_chaste_interface__membrane__v)) * (1.0 + exp(-0.33333333333333331 + 0.033333333333333333 * var_chaste_interface__membrane__v))); // dimensionless
        const double var_IKr__xr = var_IKr__Axrf * var_chaste_interface__IKr__xrf + var_IKr__Axrs * var_chaste_interface__IKr__xrs; // dimensionless
        const double var_Ito__AiF = 1 / (1.0 + exp(-1.4126984126984128 + 0.0066137566137566143 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__AiS = 1.0 - var_Ito__AiF; // dimensionless
        const double var_Ito__i = var_Ito__AiF * var_chaste_interface__Ito__iF + var_Ito__AiS * var_chaste_interface__Ito__iS; // dimensionless
        const double var_Ito__ip = var_Ito__AiF * var_chaste_interface__Ito__iFp + var_Ito__AiS * var_chaste_interface__Ito__iSp; // dimensionless
        const double var_ICaL__PhiCaK = ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(mParameters[6] * mParameters[19] / mParameters[5])) ? (-9.9999999999999995e-8 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 9.9999999999999995e-8 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) * (9.9999999999999995e-8 * mParameters[6] * mParameters[19] / mParameters[5] + var_chaste_interface__membrane__v) * mParameters[5] / (mParameters[6] * mParameters[19])) : (pow(mParameters[5], 2) * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * mParameters[6] * mParameters[19]))); // dimensionless
        const double var_ICaL__ICaK = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaK * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaKp * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__PhiCaL = ((fabs(var_chaste_interface__membrane__v) < 4.9999999999999998e-8 * fabs(mParameters[6] * mParameters[19] / mParameters[5])) ? (-1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * mParameters[6] * mParameters[19] / mParameters[5] + var_chaste_interface__membrane__v) * (1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cass * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[5] / (mParameters[6] * mParameters[19])) : (4.0 * pow(mParameters[5], 2) * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cass * exp(2.0 * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(2.0 * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * mParameters[6] * mParameters[19]))); // dimensionless
        const double var_ICaL__ICaL = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCa * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCap * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__PhiCaNa = ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(mParameters[6] * mParameters[19] / mParameters[5])) ? (-9.9999999999999995e-8 * (-0.75 * mParameters[4] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * (-0.75 * mParameters[4] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 9.9999999999999995e-8 * (-0.75 * mParameters[4] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) * (9.9999999999999995e-8 * mParameters[6] * mParameters[19] / mParameters[5] + var_chaste_interface__membrane__v) * mParameters[5] / (mParameters[6] * mParameters[19])) : (pow(mParameters[5], 2) * (-0.75 * mParameters[4] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * mParameters[6] * mParameters[19]))); // dimensionless
        const double var_ICaL__ICaNa = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaNa * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaNap * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICab__ICab = ((fabs(var_chaste_interface__membrane__v) < 4.9999999999999998e-8 * fabs(mParameters[6] * mParameters[19] / mParameters[5])) ? (-1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cai * exp(-9.9999999999999995e-8)) * mParameters[8] * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * mParameters[6] * mParameters[19] / mParameters[5] + var_chaste_interface__membrane__v) * (1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cai * exp(9.9999999999999995e-8)) * mParameters[8] * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cai * exp(-9.9999999999999995e-8)) * mParameters[8] * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[5] / (mParameters[6] * mParameters[19])) : (4.0 * pow(mParameters[5], 2) * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cai * exp(2.0 * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * mParameters[8] * var_chaste_interface__membrane__v / ((-1.0 + exp(2.0 * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * mParameters[6] * mParameters[19]))); // microA_per_microF
        const double var_INaCa_i__hca = exp(var_INaCa_i__qca * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19])); // dimensionless
        const double var_INaCa_i__hna = exp(var_INaCa_i__qna * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19])); // dimensionless
        const double var_INaCa_i__h1_i = 1.0 + (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h1_ss = 1.0 + (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h2_i = var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nai / (var_INaCa_i__h1_i * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h2_ss = var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nass / (var_INaCa_i__h1_ss * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h3_i = 1 / var_INaCa_i__h1_i; // dimensionless
        const double var_INaCa_i__h3_ss = 1 / var_INaCa_i__h1_ss; // dimensionless
        const double var_INaCa_i__h7_i = 1.0 + (1.0 + 1 / var_INaCa_i__hna) * mParameters[4] / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h7_ss = 1.0 + (1.0 + 1 / var_INaCa_i__hna) * mParameters[4] / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h8_i = mParameters[4] / (var_INaCa_i__h7_i * var_INaCa_i__hna * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h8_ss = mParameters[4] / (var_INaCa_i__h7_ss * var_INaCa_i__hna * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h9_i = 1 / var_INaCa_i__h7_i; // dimensionless
        const double var_INaCa_i__h9_ss = 1 / var_INaCa_i__h7_ss; // dimensionless
        const double var_INaCa_i__k3p_i = var_INaCa_i__h9_i * var_INaCa_i__wca; // dimensionless
        const double var_INaCa_i__k3p_ss = var_INaCa_i__h9_ss * var_INaCa_i__wca; // dimensionless
        const double var_INaCa_i__k3pp_i = var_INaCa_i__h8_i * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k3_i = var_INaCa_i__k3p_i + var_INaCa_i__k3pp_i; // dimensionless
        const double var_INaCa_i__k3pp_ss = var_INaCa_i__h8_ss * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k3_ss = var_INaCa_i__k3p_ss + var_INaCa_i__k3pp_ss; // dimensionless
        const double var_INaCa_i__k4p_i = var_INaCa_i__h3_i * var_INaCa_i__wca / var_INaCa_i__hca; // dimensionless
        const double var_INaCa_i__k4p_ss = var_INaCa_i__h3_ss * var_INaCa_i__wca / var_INaCa_i__hca; // dimensionless
        const double var_INaCa_i__k4pp_i = var_INaCa_i__h2_i * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k4_i = var_INaCa_i__k4p_i + var_INaCa_i__k4pp_i; // dimensionless
        const double var_INaCa_i__k4pp_ss = var_INaCa_i__h2_ss * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k4_ss = var_INaCa_i__k4p_ss + var_INaCa_i__k4pp_ss; // dimensionless
        const double var_INaCa_i__k7_i = var_INaCa_i__h2_i * var_INaCa_i__h5_i * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k7_ss = var_INaCa_i__h2_ss * var_INaCa_i__h5_ss * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k8_i = var_INaCa_i__h11_i * var_INaCa_i__h8_i * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k8_ss = var_INaCa_i__h11_ss * var_INaCa_i__h8_ss * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__x1_i = (var_INaCa_i__k2_i + var_INaCa_i__k3_i) * var_INaCa_i__k5_i * var_INaCa_i__k7_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k2_i * var_INaCa_i__k4_i; // dimensionless
        const double var_INaCa_i__x1_ss = (var_INaCa_i__k2_ss + var_INaCa_i__k3_ss) * var_INaCa_i__k5_ss * var_INaCa_i__k7_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k2_ss * var_INaCa_i__k4_ss; // dimensionless
        const double var_INaCa_i__x2_i = (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k4_i * var_INaCa_i__k6_i + (var_INaCa_i__k4_i + var_INaCa_i__k5_i) * var_INaCa_i__k1_i * var_INaCa_i__k7_i; // dimensionless
        const double var_INaCa_i__x2_ss = (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k4_ss * var_INaCa_i__k6_ss + (var_INaCa_i__k4_ss + var_INaCa_i__k5_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k7_ss; // dimensionless
        const double var_INaCa_i__x3_i = (var_INaCa_i__k2_i + var_INaCa_i__k3_i) * var_INaCa_i__k6_i * var_INaCa_i__k8_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k1_i * var_INaCa_i__k3_i; // dimensionless
        const double var_INaCa_i__x3_ss = (var_INaCa_i__k2_ss + var_INaCa_i__k3_ss) * var_INaCa_i__k6_ss * var_INaCa_i__k8_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k3_ss; // dimensionless
        const double var_INaCa_i__x4_i = (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k3_i * var_INaCa_i__k5_i + (var_INaCa_i__k4_i + var_INaCa_i__k5_i) * var_INaCa_i__k2_i * var_INaCa_i__k8_i; // dimensionless
        const double var_INaCa_i__E1_i = var_INaCa_i__x1_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E2_i = var_INaCa_i__x2_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E3_i = var_INaCa_i__x3_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E4_i = var_INaCa_i__x4_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__JncxCa_i = var_INaCa_i__E2_i * var_INaCa_i__k2_i - var_INaCa_i__E1_i * var_INaCa_i__k1_i; // millimolar_per_millisecond
        const double var_INaCa_i__JncxNa_i = var_INaCa_i__E3_i * var_INaCa_i__k4pp_i - var_INaCa_i__E2_i * var_INaCa_i__k3pp_i + 3.0 * var_INaCa_i__E4_i * var_INaCa_i__k7_i - 3.0 * var_INaCa_i__E1_i * var_INaCa_i__k8_i; // millimolar_per_millisecond
        const double var_INaCa_i__x4_ss = (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k3_ss * var_INaCa_i__k5_ss + (var_INaCa_i__k4_ss + var_INaCa_i__k5_ss) * var_INaCa_i__k2_ss * var_INaCa_i__k8_ss; // dimensionless
        const double var_INaCa_i__E1_ss = var_INaCa_i__x1_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E2_ss = var_INaCa_i__x2_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E3_ss = var_INaCa_i__x3_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E4_ss = var_INaCa_i__x4_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__JncxCa_ss = var_INaCa_i__E2_ss * var_INaCa_i__k2_ss - var_INaCa_i__E1_ss * var_INaCa_i__k1_ss; // millimolar_per_millisecond
        const double var_INaCa_i__JncxNa_ss = var_INaCa_i__E3_ss * var_INaCa_i__k4pp_ss - var_INaCa_i__E2_ss * var_INaCa_i__k3pp_ss + 3.0 * var_INaCa_i__E4_ss * var_INaCa_i__k7_ss - 3.0 * var_INaCa_i__E1_ss * var_INaCa_i__k8_ss; // millimolar_per_millisecond
        const double var_INaK__Knai = var_INaK__Knai0 * exp(0.33333333333333331 * var_INaK__delta * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19])); // millimolar
        const double var_INaK__Knao = var_INaK__Knao0 * exp(0.33333333333333331 * (1.0 - var_INaK__delta) * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19])); // millimolar
        const double var_INaK__a1 = pow(var_chaste_interface__intracellular_ions__nai, 3) * var_INaK__k1p / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__ki / var_INaK__Kki), 2) + pow((1.0 + var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3)) * pow(var_INaK__Knai, 3)); // dimensionless
        const double var_INaK__a3 = pow(mParameters[3], 2) * var_INaK__k3p / ((-1.0 + pow((1.0 + mParameters[3] / var_INaK__Kko), 2) + pow((1.0 + mParameters[4] / var_INaK__Knao), 3)) * pow(var_INaK__Kko, 2)); // dimensionless
        const double var_INaK__b2 = pow(mParameters[4], 3) * var_INaK__k2m / ((-1.0 + pow((1.0 + mParameters[3] / var_INaK__Kko), 2) + pow((1.0 + mParameters[4] / var_INaK__Knao), 3)) * pow(var_INaK__Knao, 3)); // dimensionless
        const double var_INaK__b4 = pow(var_chaste_interface__intracellular_ions__ki, 2) * var_INaK__k4m / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__ki / var_INaK__Kki), 2) + pow((1.0 + var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3)) * pow(var_INaK__Kki, 2)); // dimensionless
        const double var_INaK__x1 = var_INaK__a1 * var_INaK__a2 * var_INaK__a4 + var_INaK__a1 * var_INaK__a2 * var_INaK__b3 + var_INaK__a2 * var_INaK__b3 * var_INaK__b4 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__x2 = var_INaK__a1 * var_INaK__a2 * var_INaK__a3 + var_INaK__a2 * var_INaK__a3 * var_INaK__b4 + var_INaK__a3 * var_INaK__b1 * var_INaK__b4 + var_INaK__b1 * var_INaK__b2 * var_INaK__b4; // dimensionless
        const double var_INaK__x3 = var_INaK__a2 * var_INaK__a3 * var_INaK__a4 + var_INaK__a3 * var_INaK__a4 * var_INaK__b1 + var_INaK__a4 * var_INaK__b1 * var_INaK__b2 + var_INaK__b1 * var_INaK__b2 * var_INaK__b3; // dimensionless
        const double var_INaK__x4 = var_INaK__a1 * var_INaK__a3 * var_INaK__a4 + var_INaK__a1 * var_INaK__a4 * var_INaK__b2 + var_INaK__a1 * var_INaK__b2 * var_INaK__b3 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__E1 = var_INaK__x1 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E2 = var_INaK__x2 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E3 = var_INaK__x3 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E4 = var_INaK__x4 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__JnakK = 2.0 * var_INaK__E4 * var_INaK__b1 - 2.0 * var_INaK__E3 * var_INaK__a1; // millimolar_per_millisecond
        const double var_INaK__JnakNa = 3.0 * var_INaK__E1 * var_INaK__a3 - 3.0 * var_INaK__E2 * var_INaK__b3; // millimolar_per_millisecond
        const double var_INab__INab = ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(mParameters[6] * mParameters[19] / mParameters[5])) ? (-3.7499999999999999e-17 * (-mParameters[4] + var_chaste_interface__intracellular_ions__nai * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * mParameters[6] * mParameters[19] / mParameters[5] + var_chaste_interface__membrane__v) * (3.7499999999999999e-17 * (-mParameters[4] + var_chaste_interface__intracellular_ions__nai * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 3.7499999999999999e-17 * (-mParameters[4] + var_chaste_interface__intracellular_ions__nai * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[5] / (mParameters[6] * mParameters[19])) : (3.75e-10 * pow(mParameters[5], 2) * (-mParameters[4] + var_chaste_interface__intracellular_ions__nai * exp(var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * mParameters[6] * mParameters[19]))); // microA_per_microF
        const double var_physical_constants__zca = 2.0; // dimensionless
        const double var_physical_constants__zk = 1.0; // dimensionless
        const double var_physical_constants__zna = 1.0; // dimensionless
        const double var_INaCa_i__INaCa_i = 0.80000000000000004 * (var_INaCa_i__JncxCa_i * var_physical_constants__zca + var_INaCa_i__JncxNa_i * var_physical_constants__zna) * var_INaCa_i__Gncx * var_INaCa_i__allo_i; // microA_per_microF
        const double var_INaCa_i__INaCa_ss = 0.20000000000000001 * (var_INaCa_i__JncxCa_ss * var_physical_constants__zca + var_INaCa_i__JncxNa_ss * var_physical_constants__zna) * var_INaCa_i__Gncx * var_INaCa_i__allo_ss; // microA_per_microF
        const double var_INaK__INaK = (var_INaK__JnakK * var_physical_constants__zk + var_INaK__JnakNa * var_physical_constants__zna) * var_INaK__Pnak; // microA_per_microF
        const double var_reversal_potentials__EK = mParameters[6] * mParameters[19] * log(mParameters[3] / var_chaste_interface__intracellular_ions__ki) / mParameters[5]; // millivolt
        const double var_IK1__IK1 = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IK1__GK1_total * var_IK1__rk1 * var_chaste_interface__IK1__xk1; // microA_per_microF
        const double var_IKb__IKb = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IKb__GKb * var_IKb__xkb; // microA_per_microF
        const double var_IKr__IKr = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IKr__GKr_total * var_IKr__rkr * var_IKr__xr; // microA_per_microF
        const double var_Ito__Ito = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * ((1.0 - var_Ito__fItop) * var_chaste_interface__Ito__a * var_Ito__i + var_chaste_interface__Ito__ap * var_Ito__fItop * var_Ito__ip) * var_Ito__Gto; // microA_per_microF
        const double var_reversal_potentials__ENa = mParameters[6] * mParameters[19] * log(mParameters[4] / var_chaste_interface__intracellular_ions__nai) / mParameters[5]; // millivolt
        const double var_INa__INa = pow(var_chaste_interface__INa__m, 3) * (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - var_INa__fINap) * var_INa__h * var_chaste_interface__INa__j + var_INa__fINap * var_INa__hp * var_chaste_interface__INa__jp) * mParameters[11]; // microA_per_microF
        const double var_INaL__INaL = (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - var_INaL__fINaLp) * var_chaste_interface__INaL__hL + var_INaL__fINaLp * var_chaste_interface__INaL__hLp) * var_INaL__GNaL * var_chaste_interface__INaL__mL; // microA_per_microF
        const double var_reversal_potentials__PKNa = 0.018329999999999999; // dimensionless
        const double var_reversal_potentials__EKs = mParameters[6] * mParameters[19] * log((mParameters[4] * var_reversal_potentials__PKNa + mParameters[3]) / (var_chaste_interface__intracellular_ions__nai * var_reversal_potentials__PKNa + var_chaste_interface__intracellular_ions__ki)) / mParameters[5]; // millivolt
        const double var_IKs__IKs = (-var_reversal_potentials__EKs + var_chaste_interface__membrane__v) * var_IKs__GKs_total * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2; // microA_per_microF
        const double d_dt_chaste_interface_var_membrane__v = -var_ICaL__ICaK - var_ICaL__ICaL - var_ICaL__ICaNa - var_ICab__ICab - var_IK1__IK1 - var_IKb__IKb - var_IKr__IKr - var_IKs__IKs - var_INa__INa - var_INaCa_i__INaCa_i - var_INaCa_i__INaCa_ss - var_INaK__INaK - var_INaL__INaL - var_INab__INab - var_IpCa__IpCa - var_Ito__Ito - var_membrane__Istim; // millivolt / millisecond
        
        rY[0] += mDt*d_dt_chaste_interface_var_membrane__v;
    }
    
    void Cellohara_rudy_2011_endoFromCellMLBackwardEulerNoLut::ComputeOneStepExceptVoltage(double var_chaste_interface__environment__time)
    {
        // Time units: millisecond
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -87.0
        double var_chaste_interface__INa__m = rY[10];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__INa__hf = rY[11];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__hs = rY[12];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__j = rY[13];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__hsp = rY[14];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__jp = rY[15];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INaL__mL = rY[16];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__INaL__hL = rY[17];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INaL__hLp = rY[18];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ito__a = rY[19];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__Ito__iF = rY[20];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ito__iS = rY[21];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ito__ap = rY[22];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__Ito__iFp = rY[23];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ito__iSp = rY[24];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__d = rY[25];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ICaL__ff = rY[26];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fs = rY[27];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fcaf = rY[28];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fcas = rY[29];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__jca = rY[30];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__ffp = rY[31];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fcafp = rY[32];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__IKr__xrf = rY[34];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKr__xrs = rY[35];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKs__xs1 = rY[36];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKs__xs2 = rY[37];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IK1__xk1 = rY[38];
        // Units: dimensionless; Initial value: 1.0
        
        const double var_ICaL__tjca = 75.0;
        const double var_IKs__txs1_max = 817.29999999999995;
        const double var_INa__hssV1 = 82.900000000000006;
        const double var_INa__hssV2 = 6.0860000000000003;
        const double var_INa__mssV1 = 39.57;
        const double var_INa__mssV2 = 9.8710000000000004;
        const double var_INa__mtD1 = 6.7649999999999997;
        const double var_INa__mtD2 = 8.5519999999999996;
        const double var_INa__mtV1 = 11.640000000000001;
        const double var_INa__mtV2 = 34.770000000000003;
        const double var_INa__mtV3 = 77.420000000000002;
        const double var_INa__mtV4 = 5.9550000000000001;
        const double var_INaL__thL = 200.0;
        const double var_INaL__thLp = 3.0 * var_INaL__thL;
        const double var_environment__celltype = 0;
        const double var_ICaL__dss = 1 / (1.0 + exp(-0.93144208037825049 - 0.23640661938534277 * var_chaste_interface__membrane__v));
        const double var_ICaL__fss = 1 / (1.0 + exp(5.2976190476190466 + 0.27056277056277056 * var_chaste_interface__membrane__v));
        const double var_ICaL__fcass = var_ICaL__fss;
        const double var_ICaL__td = 0.59999999999999998 + 1 / (exp(1.26 + 0.089999999999999997 * var_chaste_interface__membrane__v) + exp(-0.30000000000000004 - 0.050000000000000003 * var_chaste_interface__membrane__v));
        const double var_ICaL__tfcaf = 7.0 + 1 / (0.040000000000000001 * exp(0.5714285714285714 - 0.14285714285714285 * var_chaste_interface__membrane__v) + 0.040000000000000001 * exp(-0.5714285714285714 + 0.14285714285714285 * var_chaste_interface__membrane__v));
        const double var_ICaL__tfcafp = 2.5 * var_ICaL__tfcaf;
        const double var_ICaL__tfcas = 100.0 + 1 / (0.00012 * exp(0.14285714285714285 * var_chaste_interface__membrane__v) + 0.00012 * exp(-0.33333333333333331 * var_chaste_interface__membrane__v));
        const double var_ICaL__tff = 7.0 + 1 / (0.0044999999999999997 * exp(2.0 + 0.10000000000000001 * var_chaste_interface__membrane__v) + 0.0044999999999999997 * exp(-2.0 - 0.10000000000000001 * var_chaste_interface__membrane__v));
        const double var_ICaL__tffp = 2.5 * var_ICaL__tff;
        const double var_ICaL__tfs = 1000.0 + 1 / (3.4999999999999997e-5 * exp(0.83333333333333337 + 0.16666666666666666 * var_chaste_interface__membrane__v) + 3.4999999999999997e-5 * exp(-1.25 - 0.25 * var_chaste_interface__membrane__v));
        const double var_IK1__txk1 = 122.2 / (exp(3.4155488244627148 + 0.014423770373575654 * var_chaste_interface__membrane__v) + exp(-6.2475442043222005 - 0.049115913555992145 * var_chaste_interface__membrane__v));
        const double var_IK1__xk1ss = 1 / (1.0 + exp((-144.59 - var_chaste_interface__membrane__v - 2.5537999999999998 * mParameters[3]) / (3.8115000000000001 + 1.5691999999999999 * mParameters[3])));
        const double var_IKr__txrf = 12.98 + 1 / (4.1230000000000003e-5 * exp(2.3444553483807655 - 0.049067713444553483 * var_chaste_interface__membrane__v) + 0.36520000000000002 * exp(-8.182993021452571 + 0.25846471956577927 * var_chaste_interface__membrane__v));
        const double var_IKr__txrs = 1.865 + 1 / (1.128e-5 * exp(1.146491904394757 - 0.038550501156515031 * var_chaste_interface__membrane__v) + 0.066290000000000002 * exp(-4.7178789938817136 + 0.13596193065941536 * var_chaste_interface__membrane__v));
        const double var_IKr__xrss = 1 / (1.0 + exp(-1.2280159080866107 - 0.14729709824716453 * var_chaste_interface__membrane__v));
        const double var_IKs__txs1 = 1 / (0.001292 * exp(-0.91304347826086951 - 0.0043478260869565218 * var_chaste_interface__membrane__v) + 0.00023259999999999999 * exp(2.7123595505617977 + 0.056179775280898875 * var_chaste_interface__membrane__v)) + var_IKs__txs1_max;
        const double var_IKs__txs2 = 1 / (0.019300000000000001 * exp(-2.1464516129032258 - 0.032258064516129031 * var_chaste_interface__membrane__v) + 0.01 * exp(-2.5 + 0.050000000000000003 * var_chaste_interface__membrane__v));
        const double var_IKs__xs1ss = 1 / (1.0 + exp(-1.2987012987012987 - 0.11195700850873264 * var_chaste_interface__membrane__v));
        const double var_IKs__xs2ss = var_IKs__xs1ss;
        const double var_INa__hss = 1 / (1.0 + exp((var_INa__hssV1 + var_chaste_interface__membrane__v) / var_INa__hssV2));
        const double var_INa__hssp = 1 / (1.0 + exp(14.640157739073281 + 0.16431153466973381 * var_chaste_interface__membrane__v));
        const double var_INa__jss = var_INa__hss;
        const double var_INa__mss = 1 / (1.0 + exp((-var_INa__mssV1 - var_chaste_interface__membrane__v) / var_INa__mssV2));
        const double var_INa__thf = 1 / (6.149 * exp(0.025140601874691665 + 0.049333991119881598 * var_chaste_interface__membrane__v) + 1.432e-5 * exp(-0.19029435163086714 - 0.15910898965791567 * var_chaste_interface__membrane__v));
        const double var_INa__ths = 1 / (0.0097940000000000006 * exp(-0.63992869875222813 - 0.035650623885918005 * var_chaste_interface__membrane__v) + 0.33429999999999999 * exp(0.10112954465231205 + 0.017649135192375574 * var_chaste_interface__membrane__v));
        const double var_INa__thsp = 3.0 * var_INa__ths;
        const double var_INa__tj = 2.0379999999999998 + 1 / (0.30520000000000003 * exp(0.025854356306892066 + 0.02600780234070221 * var_chaste_interface__membrane__v) + 0.021360000000000001 * exp(-12.148291269170388 - 0.12075836251660427 * var_chaste_interface__membrane__v));
        const double var_INa__tjp = 1.46 * var_INa__tj;
        const double var_INa__tm = 1 / (var_INa__mtD1 * exp((var_INa__mtV1 + var_chaste_interface__membrane__v) / var_INa__mtV2) + var_INa__mtD2 * exp((-var_INa__mtV3 - var_chaste_interface__membrane__v) / var_INa__mtV4));
        const double var_INaL__hLss = 1 / (1.0 + exp(11.700053418803417 + 0.13354700854700854 * var_chaste_interface__membrane__v));
        const double var_INaL__hLssp = 1 / (1.0 + exp(12.528044871794872 + 0.13354700854700854 * var_chaste_interface__membrane__v));
        const double var_INaL__mLss = 1 / (1.0 + exp(-8.1401975683890573 - 0.18996960486322187 * var_chaste_interface__membrane__v));
        const double var_INaL__tmL = var_INa__tm;
        const double var_Ito__ass = 1 / (1.0 + exp(0.96761133603238858 - 0.067476383265856948 * var_chaste_interface__membrane__v));
        const double var_Ito__assp = 1 / (1.0 + exp(1.6423751686909582 - 0.067476383265856948 * var_chaste_interface__membrane__v));
        const double var_Ito__delta_epi = ((var_environment__celltype == 1.0) ? (1.0 - 0.94999999999999996 / (1.0 + exp(14.0 + 0.20000000000000001 * var_chaste_interface__membrane__v))) : (1.0));
        const double var_Ito__dti_develop = 1.3540000000000001 + 0.0001 / (exp(56.77808727948004 - 4.6425255338904359 * var_chaste_interface__membrane__v) + exp(-10.534927627438641 + 0.062932662051604776 * var_chaste_interface__membrane__v));
        const double var_Ito__dti_recover = 1.0 - 0.5 / (1.0 + exp(3.5 + 0.050000000000000003 * var_chaste_interface__membrane__v));
        const double var_Ito__iss = 1 / (1.0 + exp(7.6939240063036234 + 0.17510068289266328 * var_chaste_interface__membrane__v));
        const double var_Ito__ta = 1.0515000000000001 / (3.5 / (1.0 + exp(3.403513787634354 + 0.034035137876343539 * var_chaste_interface__membrane__v)) + 0.82719827942757873 / (1.0 + exp(0.62658348478969694 - 0.034035137876343539 * var_chaste_interface__membrane__v)));
        const double var_Ito__tiF_b = 4.5620000000000003 + 1 / (0.39329999999999998 * exp(-1.0 - 0.01 * var_chaste_interface__membrane__v) + 0.08004 * exp(3.0138637733574445 + 0.060277275467148887 * var_chaste_interface__membrane__v));
        const double var_Ito__tiF = var_Ito__delta_epi * var_Ito__tiF_b;
        const double var_Ito__tiFp = var_Ito__dti_develop * var_Ito__dti_recover * var_Ito__tiF;
        const double var_Ito__tiS_b = 23.620000000000001 + 1 / (1.7800000000000001e-8 * exp(14.123035029087756 + 0.12377769525931426 * var_chaste_interface__membrane__v) + 0.0014159999999999999 * exp(-1.6345469940728197 - 0.016934801016088061 * var_chaste_interface__membrane__v));
        const double var_Ito__tiS = var_Ito__delta_epi * var_Ito__tiS_b;
        const double var_Ito__tiSp = var_Ito__dti_develop * var_Ito__dti_recover * var_Ito__tiS;
        
        
        rY[25] = (var_chaste_interface__ICaL__d + ((var_ICaL__dss / var_ICaL__td) * mDt)) / (1.0 - ((-1 / var_ICaL__td) * mDt));
        rY[28] = (var_chaste_interface__ICaL__fcaf + ((var_ICaL__fcass / var_ICaL__tfcaf) * mDt)) / (1.0 - ((-1 / var_ICaL__tfcaf) * mDt));
        rY[32] = (var_chaste_interface__ICaL__fcafp + ((var_ICaL__fcass / var_ICaL__tfcafp) * mDt)) / (1.0 - ((-1 / var_ICaL__tfcafp) * mDt));
        rY[29] = (var_chaste_interface__ICaL__fcas + ((var_ICaL__fcass / var_ICaL__tfcas) * mDt)) / (1.0 - ((-1 / var_ICaL__tfcas) * mDt));
        rY[26] = (var_chaste_interface__ICaL__ff + ((var_ICaL__fss / var_ICaL__tff) * mDt)) / (1.0 - ((-1 / var_ICaL__tff) * mDt));
        rY[31] = (var_chaste_interface__ICaL__ffp + ((var_ICaL__fss / var_ICaL__tffp) * mDt)) / (1.0 - ((-1 / var_ICaL__tffp) * mDt));
        rY[27] = (var_chaste_interface__ICaL__fs + ((var_ICaL__fss / var_ICaL__tfs) * mDt)) / (1.0 - ((-1 / var_ICaL__tfs) * mDt));
        rY[30] = (var_chaste_interface__ICaL__jca + ((var_ICaL__fcass / var_ICaL__tjca) * mDt)) / (1.0 - ((-1 / var_ICaL__tjca) * mDt));
        rY[38] = (var_chaste_interface__IK1__xk1 + ((var_IK1__xk1ss / var_IK1__txk1) * mDt)) / (1.0 - ((-1 / var_IK1__txk1) * mDt));
        rY[34] = (var_chaste_interface__IKr__xrf + ((var_IKr__xrss / var_IKr__txrf) * mDt)) / (1.0 - ((-1 / var_IKr__txrf) * mDt));
        rY[35] = (var_chaste_interface__IKr__xrs + ((var_IKr__xrss / var_IKr__txrs) * mDt)) / (1.0 - ((-1 / var_IKr__txrs) * mDt));
        rY[36] = (var_chaste_interface__IKs__xs1 + ((var_IKs__xs1ss / var_IKs__txs1) * mDt)) / (1.0 - ((-1 / var_IKs__txs1) * mDt));
        rY[37] = (var_chaste_interface__IKs__xs2 + ((var_IKs__xs2ss / var_IKs__txs2) * mDt)) / (1.0 - ((-1 / var_IKs__txs2) * mDt));
        rY[17] = (var_chaste_interface__INaL__hL + ((var_INaL__hLss / var_INaL__thL) * mDt)) / (1.0 - ((-1 / var_INaL__thL) * mDt));
        rY[18] = (var_chaste_interface__INaL__hLp + ((var_INaL__hLssp / var_INaL__thLp) * mDt)) / (1.0 - ((-1 / var_INaL__thLp) * mDt));
        rY[16] = (var_chaste_interface__INaL__mL + ((var_INaL__mLss / var_INaL__tmL) * mDt)) / (1.0 - ((-1 / var_INaL__tmL) * mDt));
        rY[11] = (var_chaste_interface__INa__hf + ((var_INa__hss / var_INa__thf) * mDt)) / (1.0 - ((-1 / var_INa__thf) * mDt));
        rY[12] = (var_chaste_interface__INa__hs + ((var_INa__hss / var_INa__ths) * mDt)) / (1.0 - ((-1 / var_INa__ths) * mDt));
        rY[14] = (var_chaste_interface__INa__hsp + ((var_INa__hssp / var_INa__thsp) * mDt)) / (1.0 - ((-1 / var_INa__thsp) * mDt));
        rY[15] = (var_chaste_interface__INa__jp + ((var_INa__jss / var_INa__tjp) * mDt)) / (1.0 - ((-1 / var_INa__tjp) * mDt));
        rY[10] = (var_chaste_interface__INa__m + ((var_INa__mss / var_INa__tm) * mDt)) / (1.0 - ((-1 / var_INa__tm) * mDt));
        rY[19] = (var_chaste_interface__Ito__a + ((var_Ito__ass / var_Ito__ta) * mDt)) / (1.0 - ((-1 / var_Ito__ta) * mDt));
        rY[22] = (var_chaste_interface__Ito__ap + ((var_Ito__assp / var_Ito__ta) * mDt)) / (1.0 - ((-1 / var_Ito__ta) * mDt));
        rY[20] = (var_chaste_interface__Ito__iF + ((var_Ito__iss / var_Ito__tiF) * mDt)) / (1.0 - ((-1 / var_Ito__tiF) * mDt));
        rY[23] = (var_chaste_interface__Ito__iFp + ((var_Ito__iss / var_Ito__tiFp) * mDt)) / (1.0 - ((-1 / var_Ito__tiFp) * mDt));
        rY[21] = (var_chaste_interface__Ito__iS + ((var_Ito__iss / var_Ito__tiS) * mDt)) / (1.0 - ((-1 / var_Ito__tiS) * mDt));
        rY[24] = (var_chaste_interface__Ito__iSp + ((var_Ito__iss / var_Ito__tiSp) * mDt)) / (1.0 - ((-1 / var_Ito__tiSp) * mDt));
        rY[13] = (var_chaste_interface__INa__j + ((var_INa__jss / var_INa__tj) * mDt)) / (1.0 - ((-1 / var_INa__tj) * mDt));
        
        double _guess[12] = {rY[2],rY[33],rY[1],rY[9],rY[8],rY[7],rY[5],rY[6],rY[3],rY[4],rY[39],rY[40]};
        CardiacNewtonSolver<12,Cellohara_rudy_2011_endoFromCellMLBackwardEulerNoLut>* _p_solver = CardiacNewtonSolver<12,Cellohara_rudy_2011_endoFromCellMLBackwardEulerNoLut>::Instance();
        _p_solver->Solve(*this, var_chaste_interface__environment__time, _guess);
        rY[2] = _guess[0];
        rY[33] = _guess[1];
        rY[1] = _guess[2];
        rY[9] = _guess[3];
        rY[8] = _guess[4];
        rY[7] = _guess[5];
        rY[5] = _guess[6];
        rY[6] = _guess[7];
        rY[3] = _guess[8];
        rY[4] = _guess[9];
        rY[39] = _guess[10];
        rY[40] = _guess[11];
    }

    std::vector<double> Cellohara_rudy_2011_endoFromCellMLBackwardEulerNoLut::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const std::vector<double> & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -87.0
        double var_chaste_interface__intracellular_ions__cai = rY[1];
        // Units: millimolar; Initial value: 0.0001
        double var_chaste_interface__CaMK__CaMKt = rY[2];
        // Units: millimolar; Initial value: 0.0
        double var_chaste_interface__intracellular_ions__nai = rY[3];
        // Units: millimolar; Initial value: 7.0
        double var_chaste_interface__intracellular_ions__nass = rY[4];
        // Units: millimolar; Initial value: 7.0
        double var_chaste_interface__intracellular_ions__ki = rY[5];
        // Units: millimolar; Initial value: 145.0
        double var_chaste_interface__intracellular_ions__kss = rY[6];
        // Units: millimolar; Initial value: 145.0
        double var_chaste_interface__intracellular_ions__cass = rY[7];
        // Units: millimolar; Initial value: 0.0001
        double var_chaste_interface__intracellular_ions__cansr = rY[8];
        // Units: millimolar; Initial value: 1.2
        double var_chaste_interface__INa__m = rY[10];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__INa__hf = rY[11];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__hs = rY[12];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__j = rY[13];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__hsp = rY[14];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INa__jp = rY[15];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INaL__mL = rY[16];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__INaL__hL = rY[17];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__INaL__hLp = rY[18];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__d = rY[25];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ICaL__ff = rY[26];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fs = rY[27];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fcaf = rY[28];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fcas = rY[29];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__jca = rY[30];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__ffp = rY[31];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__fcafp = rY[32];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ICaL__nca = rY[33];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKr__xrf = rY[34];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKr__xrs = rY[35];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKs__xs1 = rY[36];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKs__xs2 = rY[37];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IK1__xk1 = rY[38];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__ryr__Jrelnp = rY[39];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ryr__Jrelp = rY[40];
        // Units: dimensionless; Initial value: 0.0
        
        // Mathematics
        const double var_CaMK__CaMKo = 0.050000000000000003; // dimensionless
        const double var_CaMK__KmCaM = 0.0015; // millimolar
        const double var_CaMK__KmCaMK = 0.14999999999999999; // millimolar
        const double var_ICaL__Aff = 0.59999999999999998; // dimensionless
        const double var_ICaL__Afs = 1.0 - var_ICaL__Aff; // dimensionless
        const double var_ICaL__f = var_ICaL__Aff * var_chaste_interface__ICaL__ff + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_ICaL__fp = var_ICaL__Aff * var_chaste_interface__ICaL__ffp + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_INa__Ahf = 0.98999999999999999; // dimensionless
        const double var_INa__Ahs = 1.0 - var_INa__Ahf; // dimensionless
        const double var_INa__h = var_INa__Ahf * var_chaste_interface__INa__hf + var_INa__Ahs * var_chaste_interface__INa__hs; // dimensionless
        const double var_INa__hp = var_INa__Ahf * var_chaste_interface__INa__hf + var_INa__Ahs * var_chaste_interface__INa__hsp; // dimensionless
        const double var_INaCa_i__KmCaAct = 0.00014999999999999999; // millimolar
        const double var_INaCa_i__kasymm = 12.5; // dimensionless
        const double var_INaCa_i__kcaoff = 5000.0; // per_millisecond
        const double var_INaCa_i__k2_i = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k2_ss = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k5_i = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k5_ss = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__kcaon = 1500000.0; // per_millisecond
        const double var_INaCa_i__kna1 = 15.0; // per_millisecond
        const double var_INaCa_i__kna2 = 5.0; // per_millisecond
        const double var_INaCa_i__kna3 = 88.120000000000005; // per_millisecond
        const double var_INaCa_i__qca = 0.16700000000000001; // dimensionless
        const double var_INaCa_i__qna = 0.52239999999999998; // dimensionless
        const double var_INaCa_i__wca = 60000.0; // dimensionless
        const double var_INaCa_i__wna = 60000.0; // dimensionless
        const double var_INaCa_i__wnaca = 5000.0; // dimensionless
        const double var_INaK__H = 9.9999999999999995e-8; // millimolar
        const double var_INaK__Khp = 1.698e-7; // millimolar
        const double var_INaK__Kki = 0.5; // per_millisecond
        const double var_INaK__Kko = 0.35820000000000002; // per_millisecond
        const double var_INaK__Kmgatp = 1.698e-7; // millimolar
        const double var_INaK__Knai0 = 9.0730000000000004; // millimolar
        const double var_INaK__Knao0 = 27.780000000000001; // millimolar
        const double var_INaK__Knap = 224.0; // millimolar
        const double var_INaK__Kxkur = 292.0; // millimolar
        const double var_INaK__MgADP = 0.050000000000000003; // millimolar
        const double var_INaK__MgATP = 9.8000000000000007; // millimolar
        const double var_INaK__delta = -0.155; // millivolt
        const double var_INaK__eP = 4.2000000000000002; // dimensionless
        const double var_INaK__k1m = 182.40000000000001; // per_millisecond
        const double var_INaK__b1 = var_INaK__MgADP * var_INaK__k1m; // dimensionless
        const double var_INaK__k1p = 949.5; // per_millisecond
        const double var_INaK__k2m = 39.399999999999999; // per_millisecond
        const double var_INaK__k2p = 687.20000000000005; // per_millisecond
        const double var_INaK__a2 = var_INaK__k2p; // dimensionless
        const double var_INaK__k3m = 79300.0; // per_millisecond
        const double var_INaK__k3p = 1899.0; // per_millisecond
        const double var_INaK__k4m = 40.0; // per_millisecond
        const double var_INaK__k4p = 639.0; // per_millisecond
        const double var_INaK__a4 = var_INaK__MgATP * var_INaK__k4p / ((1.0 + var_INaK__MgATP / var_INaK__Kmgatp) * var_INaK__Kmgatp); // dimensionless
        const double var_IpCa__KmCap = 0.00050000000000000001; // millimolar
        const double var_environment__celltype = 0; // dimensionless
        const double var_ICaL__PCa = ((var_environment__celltype == 1.0) ? (1.2 * mParameters[7]) : ((var_environment__celltype == 2.0) ? (2.5 * mParameters[7]) : (mParameters[7]))); // dimensionless
        const double var_ICaL__PCaK = 0.00035740000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCaNa = 0.00125 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCap = 1.1000000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCaKp = 0.00035740000000000001 * var_ICaL__PCap; // dimensionless
        const double var_ICaL__PCaNap = 0.00125 * var_ICaL__PCap; // dimensionless
        const double var_IK1__GK1 = ((var_environment__celltype == 1.0) ? (1.2 * mParameters[12]) : ((var_environment__celltype == 2.0) ? (1.3 * mParameters[12]) : (mParameters[12]))); // milliS_per_microF
        const double var_IKb__GKb = ((var_environment__celltype == 1.0) ? (0.59999999999999998 * mParameters[9]) : (mParameters[9])); // milliS_per_microF
        const double var_IKr__GKr = ((var_environment__celltype == 1.0) ? (1.3 * mParameters[14]) : ((var_environment__celltype == 2.0) ? (0.80000000000000004 * mParameters[14]) : (mParameters[14]))); // milliS_per_microF
        const double var_IKs__GKs = ((var_environment__celltype == 1.0) ? (1.3999999999999999 * mParameters[15]) : (mParameters[15])); // milliS_per_microF
        const double var_INaCa_i__Gncx = ((var_environment__celltype == 1.0) ? (1.1000000000000001 * mParameters[16]) : ((var_environment__celltype == 2.0) ? (1.3999999999999999 * mParameters[16]) : (mParameters[16]))); // milliS_per_microF
        const double var_INaK__Pnak = ((var_environment__celltype == 1.0) ? (0.90000000000000002 * mParameters[17]) : ((var_environment__celltype == 2.0) ? (0.69999999999999996 * mParameters[17]) : (mParameters[17]))); // milliS_per_microF
        const double var_INaL__GNaL = ((var_environment__celltype == 1.0) ? (0.59999999999999998 * mParameters[13]) : (mParameters[13])); // milliS_per_microF
        const double var_Ito__Gto = (((var_environment__celltype == 1.0) || (var_environment__celltype == 2.0)) ? (4.0 * mParameters[18]) : (mParameters[18])); // milliS_per_microF
        const double var_SERCA__upScale = ((var_environment__celltype == 1.0) ? (1.3) : (1.0)); // dimensionless
        const double var_IK1__GK1_total = sqrt(mParameters[3]) * var_IK1__GK1; // milliS_per_microF
        const double var_IKr__GKr_total = 0.43033148291193518 * sqrt(mParameters[3]) * var_IKr__GKr; // milliS_per_microF
        const double var_INaCa_i__h10_i = 1.0 + (1.0 + mParameters[4] / var_INaCa_i__kna2) * mParameters[4] / var_INaCa_i__kna1 + var_INaCa_i__kasymm; // dimensionless
        const double var_INaCa_i__h10_ss = 1.0 + (1.0 + mParameters[4] / var_INaCa_i__kna2) * mParameters[4] / var_INaCa_i__kna1 + var_INaCa_i__kasymm; // dimensionless
        const double var_INaCa_i__h11_i = pow(mParameters[4], 2) / (var_INaCa_i__h10_i * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h11_ss = pow(mParameters[4], 2) / (var_INaCa_i__h10_ss * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h12_i = 1 / var_INaCa_i__h10_i; // dimensionless
        const double var_INaCa_i__h12_ss = 1 / var_INaCa_i__h10_ss; // dimensionless
        const double var_INaCa_i__k1_i = var_INaCa_i__h12_i * var_INaCa_i__kcaon * mParameters[2]; // dimensionless
        const double var_INaCa_i__k1_ss = var_INaCa_i__h12_ss * var_INaCa_i__kcaon * mParameters[2]; // dimensionless
        const double var_intracellular_ions__BSLmax = 1.1240000000000001; // millimolar
        const double var_intracellular_ions__BSRmax = 0.047; // millimolar
        const double var_intracellular_ions__KmBSL = 0.0086999999999999994; // millimolar
        const double var_intracellular_ions__KmBSR = 0.00087000000000000001; // millimolar
        const double var_IKs__KsCa = 1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__intracellular_ions__cai), 1.3999999999999999)); // dimensionless
        const double var_IKs__GKs_total = var_IKs__GKs * var_IKs__KsCa; // milliS_per_microF
        const double var_INaCa_i__allo_i = 1 / (1.0 + pow(var_INaCa_i__KmCaAct, 2) / pow(var_chaste_interface__intracellular_ions__cai, 2)); // dimensionless
        const double var_IpCa__IpCa = mParameters[10] * var_chaste_interface__intracellular_ions__cai / (var_IpCa__KmCap + var_chaste_interface__intracellular_ions__cai); // microA_per_microF
        const double var_IpCa__IpCa_converted = HeartConfig::Instance()->GetCapacitance() * var_IpCa__IpCa; // uA_per_cm2
        const double var_SERCA__Jupnp = 0.0043750000000000004 * var_SERCA__upScale * var_chaste_interface__intracellular_ions__cai / (0.00092000000000000003 + var_chaste_interface__intracellular_ions__cai); // millimolar_per_millisecond
        const double var_SERCA__Jupp = 0.01203125 * var_SERCA__upScale * var_chaste_interface__intracellular_ions__cai / (0.00075000000000000002 + var_chaste_interface__intracellular_ions__cai); // millimolar_per_millisecond
        const double var_SERCA__Jleak = 0.00026249999999999998 * var_chaste_interface__intracellular_ions__cansr; // millimolar_per_millisecond
        const double var_CaMK__CaMKb = (1.0 - var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKo / (1.0 + var_CaMK__KmCaM / var_chaste_interface__intracellular_ions__cass); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_ICaL__fICaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INa__fINap = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INaCa_i__allo_ss = 1 / (1.0 + pow(var_INaCa_i__KmCaAct, 2) / pow(var_chaste_interface__intracellular_ions__cass, 2)); // dimensionless
        const double var_INaL__fINaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_SERCA__fJupp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_SERCA__Jup = (-var_SERCA__Jleak + (1.0 - var_SERCA__fJupp) * var_SERCA__Jupnp + var_SERCA__Jupp * var_SERCA__fJupp) * mParameters[1]; // millimolar_per_millisecond
        const double var_intracellular_ions__Bcass = 1 / (1.0 + var_intracellular_ions__BSLmax * var_intracellular_ions__KmBSL / pow((var_intracellular_ions__KmBSL + var_chaste_interface__intracellular_ions__cass), 2) + var_intracellular_ions__BSRmax * var_intracellular_ions__KmBSR / pow((var_intracellular_ions__KmBSR + var_chaste_interface__intracellular_ions__cass), 2)); // dimensionless
        const double var_intracellular_ions__cmdnmax_b = 0.050000000000000003; // millimolar
        const double var_intracellular_ions__cmdnmax = ((var_environment__celltype == 1.0) ? (1.3 * var_intracellular_ions__cmdnmax_b) : (var_intracellular_ions__cmdnmax_b)); // millimolar
        const double var_intracellular_ions__kmcmdn = 0.0023800000000000002; // millimolar
        const double var_intracellular_ions__kmtrpn = 0.00050000000000000001; // millimolar
        const double var_INaCa_i__h4_i = 1.0 + (1.0 + var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna2) * var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna1; // dimensionless
        const double var_INaCa_i__h5_i = pow(var_chaste_interface__intracellular_ions__nai, 2) / (var_INaCa_i__h4_i * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h6_i = 1 / var_INaCa_i__h4_i; // dimensionless
        const double var_INaCa_i__k6_i = var_INaCa_i__h6_i * var_INaCa_i__kcaon * var_chaste_interface__intracellular_ions__cai; // dimensionless
        const double var_INaK__P = var_INaK__eP / (1.0 + var_INaK__H / var_INaK__Khp + var_chaste_interface__intracellular_ions__nai / var_INaK__Knap + var_chaste_interface__intracellular_ions__ki / var_INaK__Kxkur); // dimensionless
        const double var_INaK__b3 = var_INaK__H * var_INaK__P * var_INaK__k3m / (1.0 + var_INaK__MgATP / var_INaK__Kmgatp); // dimensionless
        const double var_INaCa_i__h4_ss = 1.0 + (1.0 + var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna2) * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna1; // dimensionless
        const double var_INaCa_i__h5_ss = pow(var_chaste_interface__intracellular_ions__nass, 2) / (var_INaCa_i__h4_ss * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h6_ss = 1 / var_INaCa_i__h4_ss; // dimensionless
        const double var_INaCa_i__k6_ss = var_INaCa_i__h6_ss * var_INaCa_i__kcaon * var_chaste_interface__intracellular_ions__cass; // dimensionless
        const double var_intracellular_ions__trpnmax = 0.070000000000000007; // millimolar
        const double var_intracellular_ions__Bcai = 1 / (1.0 + var_intracellular_ions__cmdnmax * var_intracellular_ions__kmcmdn / pow((var_chaste_interface__intracellular_ions__cai + var_intracellular_ions__kmcmdn), 2) + var_intracellular_ions__kmtrpn * var_intracellular_ions__trpnmax / pow((var_chaste_interface__intracellular_ions__cai + var_intracellular_ions__kmtrpn), 2)); // dimensionless
        const double var_membrane__Istim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
        const double var_ICaL__Afcaf = 0.29999999999999999 + 0.59999999999999998 / (1.0 + exp(-1.0 + 0.10000000000000001 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__Afcas = 1.0 - var_ICaL__Afcaf; // dimensionless
        const double var_ICaL__fca = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcaf + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__fcap = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcafp + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_IK1__rk1 = 1 / (1.0 + exp(11.145054250500367 + 0.10534077741493732 * var_chaste_interface__membrane__v - 0.27388602127883704 * mParameters[3])); // millisecond
        const double var_IKb__xkb = 1 / (1.0 + exp(0.78953107960741553 - 0.054525627044711013 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_IKr__Axrf = 1 / (1.0 + exp(1.4344412457471867 + 0.026171159382360639 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_IKr__Axrs = 1.0 - var_IKr__Axrf; // dimensionless
        const double var_IKr__rkr = 1 / ((1.0 + exp(0.73333333333333328 + 0.013333333333333334 * var_chaste_interface__membrane__v)) * (1.0 + exp(-0.33333333333333331 + 0.033333333333333333 * var_chaste_interface__membrane__v))); // dimensionless
        const double var_IKr__xr = var_IKr__Axrf * var_chaste_interface__IKr__xrf + var_IKr__Axrs * var_chaste_interface__IKr__xrs; // dimensionless
        const double var_ICaL__PhiCaK = ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(mParameters[6] * mParameters[19] / mParameters[5])) ? (-9.9999999999999995e-8 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 9.9999999999999995e-8 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) * (9.9999999999999995e-8 * mParameters[6] * mParameters[19] / mParameters[5] + var_chaste_interface__membrane__v) * mParameters[5] / (mParameters[6] * mParameters[19])) : (pow(mParameters[5], 2) * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * mParameters[6] * mParameters[19]))); // dimensionless
        const double var_ICaL__ICaK = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaK * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaKp * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaK_converted = HeartConfig::Instance()->GetCapacitance() * var_ICaL__ICaK; // uA_per_cm2
        const double var_ICaL__PhiCaL = ((fabs(var_chaste_interface__membrane__v) < 4.9999999999999998e-8 * fabs(mParameters[6] * mParameters[19] / mParameters[5])) ? (-1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * mParameters[6] * mParameters[19] / mParameters[5] + var_chaste_interface__membrane__v) * (1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cass * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[5] / (mParameters[6] * mParameters[19])) : (4.0 * pow(mParameters[5], 2) * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cass * exp(2.0 * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(2.0 * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * mParameters[6] * mParameters[19]))); // dimensionless
        const double var_ICaL__ICaL = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCa * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCap * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaL_converted = HeartConfig::Instance()->GetCapacitance() * var_ICaL__ICaL; // uA_per_cm2
        const double var_ICaL__PhiCaNa = ((fabs(var_chaste_interface__membrane__v) < 9.9999999999999995e-8 * fabs(mParameters[6] * mParameters[19] / mParameters[5])) ? (-9.9999999999999995e-8 * (-0.75 * mParameters[4] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8)) + 5000000.0 * (9.9999999999999995e-8 * (-0.75 * mParameters[4] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 9.9999999999999995e-8 * (-0.75 * mParameters[4] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) * (9.9999999999999995e-8 * mParameters[6] * mParameters[19] / mParameters[5] + var_chaste_interface__membrane__v) * mParameters[5] / (mParameters[6] * mParameters[19])) : (pow(mParameters[5], 2) * (-0.75 * mParameters[4] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * var_chaste_interface__membrane__v / ((-1.0 + exp(var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * mParameters[6] * mParameters[19]))); // dimensionless
        const double var_ICaL__ICaNa = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaNa * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaNap * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaNa_converted = HeartConfig::Instance()->GetCapacitance() * var_ICaL__ICaNa; // uA_per_cm2
        const double var_ICab__ICab = ((fabs(var_chaste_interface__membrane__v) < 4.9999999999999998e-8 * fabs(mParameters[6] * mParameters[19] / mParameters[5])) ? (-1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cai * exp(-9.9999999999999995e-8)) * mParameters[8] * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8)) + 10000000.0 * (4.9999999999999998e-8 * mParameters[6] * mParameters[19] / mParameters[5] + var_chaste_interface__membrane__v) * (1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cai * exp(9.9999999999999995e-8)) * mParameters[8] * mParameters[5] / (-1.0 + exp(9.9999999999999995e-8)) + 1.9999999999999999e-7 * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cai * exp(-9.9999999999999995e-8)) * mParameters[8] * mParameters[5] / (-1.0 + exp(-9.9999999999999995e-8))) * mParameters[5] / (mParameters[6] * mParameters[19])) : (4.0 * pow(mParameters[5], 2) * (-0.34100000000000003 * mParameters[2] + var_chaste_interface__intracellular_ions__cai * exp(2.0 * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * mParameters[8] * var_chaste_interface__membrane__v / ((-1.0 + exp(2.0 * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19]))) * mParameters[6] * mParameters[19]))); // microA_per_microF
        const double var_ICab__ICab_converted = HeartConfig::Instance()->GetCapacitance() * var_ICab__ICab; // uA_per_cm2
        const double var_INaCa_i__hca = exp(var_INaCa_i__qca * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19])); // dimensionless
        const double var_INaCa_i__hna = exp(var_INaCa_i__qna * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19])); // dimensionless
        const double var_INaCa_i__h1_i = 1.0 + (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h1_ss = 1.0 + (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h2_i = var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nai / (var_INaCa_i__h1_i * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h2_ss = var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nass / (var_INaCa_i__h1_ss * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h3_i = 1 / var_INaCa_i__h1_i; // dimensionless
        const double var_INaCa_i__h3_ss = 1 / var_INaCa_i__h1_ss; // dimensionless
        const double var_INaCa_i__h7_i = 1.0 + (1.0 + 1 / var_INaCa_i__hna) * mParameters[4] / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h7_ss = 1.0 + (1.0 + 1 / var_INaCa_i__hna) * mParameters[4] / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h8_i = mParameters[4] / (var_INaCa_i__h7_i * var_INaCa_i__hna * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h8_ss = mParameters[4] / (var_INaCa_i__h7_ss * var_INaCa_i__hna * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h9_i = 1 / var_INaCa_i__h7_i; // dimensionless
        const double var_INaCa_i__h9_ss = 1 / var_INaCa_i__h7_ss; // dimensionless
        const double var_INaCa_i__k3p_i = var_INaCa_i__h9_i * var_INaCa_i__wca; // dimensionless
        const double var_INaCa_i__k3p_ss = var_INaCa_i__h9_ss * var_INaCa_i__wca; // dimensionless
        const double var_INaCa_i__k3pp_i = var_INaCa_i__h8_i * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k3_i = var_INaCa_i__k3p_i + var_INaCa_i__k3pp_i; // dimensionless
        const double var_INaCa_i__k3pp_ss = var_INaCa_i__h8_ss * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k3_ss = var_INaCa_i__k3p_ss + var_INaCa_i__k3pp_ss; // dimensionless
        const double var_INaCa_i__k4p_i = var_INaCa_i__h3_i * var_INaCa_i__wca / var_INaCa_i__hca; // dimensionless
        const double var_INaCa_i__k4p_ss = var_INaCa_i__h3_ss * var_INaCa_i__wca / var_INaCa_i__hca; // dimensionless
        const double var_INaCa_i__k4pp_i = var_INaCa_i__h2_i * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k4_i = var_INaCa_i__k4p_i + var_INaCa_i__k4pp_i; // dimensionless
        const double var_INaCa_i__k4pp_ss = var_INaCa_i__h2_ss * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k4_ss = var_INaCa_i__k4p_ss + var_INaCa_i__k4pp_ss; // dimensionless
        const double var_INaCa_i__k7_i = var_INaCa_i__h2_i * var_INaCa_i__h5_i * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k7_ss = var_INaCa_i__h2_ss * var_INaCa_i__h5_ss * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k8_i = var_INaCa_i__h11_i * var_INaCa_i__h8_i * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k8_ss = var_INaCa_i__h11_ss * var_INaCa_i__h8_ss * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__x1_i = (var_INaCa_i__k2_i + var_INaCa_i__k3_i) * var_INaCa_i__k5_i * var_INaCa_i__k7_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k2_i * var_INaCa_i__k4_i; // dimensionless
        const double var_INaCa_i__x1_ss = (var_INaCa_i__k2_ss + var_INaCa_i__k3_ss) * var_INaCa_i__k5_ss * var_INaCa_i__k7_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k2_ss * var_INaCa_i__k4_ss; // dimensionless
        const double var_INaCa_i__x2_i = (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k4_i * var_INaCa_i__k6_i + (var_INaCa_i__k4_i + var_INaCa_i__k5_i) * var_INaCa_i__k1_i * var_INaCa_i__k7_i; // dimensionless
        const double var_INaCa_i__x2_ss = (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k4_ss * var_INaCa_i__k6_ss + (var_INaCa_i__k4_ss + var_INaCa_i__k5_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k7_ss; // dimensionless
        const double var_INaCa_i__x3_i = (var_INaCa_i__k2_i + var_INaCa_i__k3_i) * var_INaCa_i__k6_i * var_INaCa_i__k8_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k1_i * var_INaCa_i__k3_i; // dimensionless
        const double var_INaCa_i__x3_ss = (var_INaCa_i__k2_ss + var_INaCa_i__k3_ss) * var_INaCa_i__k6_ss * var_INaCa_i__k8_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k3_ss; // dimensionless
        const double var_INaCa_i__x4_i = (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k3_i * var_INaCa_i__k5_i + (var_INaCa_i__k4_i + var_INaCa_i__k5_i) * var_INaCa_i__k2_i * var_INaCa_i__k8_i; // dimensionless
        const double var_INaCa_i__E1_i = var_INaCa_i__x1_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E2_i = var_INaCa_i__x2_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E3_i = var_INaCa_i__x3_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E4_i = var_INaCa_i__x4_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__JncxCa_i = var_INaCa_i__E2_i * var_INaCa_i__k2_i - var_INaCa_i__E1_i * var_INaCa_i__k1_i; // millimolar_per_millisecond
        const double var_INaCa_i__JncxNa_i = var_INaCa_i__E3_i * var_INaCa_i__k4pp_i - var_INaCa_i__E2_i * var_INaCa_i__k3pp_i + 3.0 * var_INaCa_i__E4_i * var_INaCa_i__k7_i - 3.0 * var_INaCa_i__E1_i * var_INaCa_i__k8_i; // millimolar_per_millisecond
        const double var_INaCa_i__x4_ss = (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k3_ss * var_INaCa_i__k5_ss + (var_INaCa_i__k4_ss + var_INaCa_i__k5_ss) * var_INaCa_i__k2_ss * var_INaCa_i__k8_ss; // dimensionless
        const double var_INaCa_i__E1_ss = var_INaCa_i__x1_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E2_ss = var_INaCa_i__x2_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E3_ss = var_INaCa_i__x3_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E4_ss = var_INaCa_i__x4_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__JncxCa_ss = var_INaCa_i__E2_ss * var_INaCa_i__k2_ss - var_INaCa_i__E1_ss * var_INaCa_i__k1_ss; // millimolar_per_millisecond
        const double var_INaCa_i__JncxNa_ss = var_INaCa_i__E3_ss * var_INaCa_i__k4pp_ss - var_INaCa_i__E2_ss * var_INaCa_i__k3pp_ss + 3.0 * var_INaCa_i__E4_ss * var_INaCa_i__k7_ss - 3.0 * var_INaCa_i__E1_ss * var_INaCa_i__k8_ss; // millimolar_per_millisecond
        const double var_INaK__Knai = var_INaK__Knai0 * exp(0.33333333333333331 * var_INaK__delta * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19])); // millimolar
        const double var_INaK__Knao = var_INaK__Knao0 * exp(0.33333333333333331 * (1.0 - var_INaK__delta) * var_chaste_interface__membrane__v * mParameters[5] / (mParameters[6] * mParameters[19])); // millimolar
        const double var_INaK__a1 = pow(var_chaste_interface__intracellular_ions__nai, 3) * var_INaK__k1p / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__ki / var_INaK__Kki), 2) + pow((1.0 + var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3)) * pow(var_INaK__Knai, 3)); // dimensionless
        const double var_INaK__a3 = pow(mParameters[3], 2) * var_INaK__k3p / ((-1.0 + pow((1.0 + mParameters[3] / var_INaK__Kko), 2) + pow((1.0 + mParameters[4] / var_INaK__Knao), 3)) * pow(var_INaK__Kko, 2)); // dimensionless
        const double var_INaK__b2 = pow(mParameters[4], 3) * var_INaK__k2m / ((-1.0 + pow((1.0 + mParameters[3] / var_INaK__Kko), 2) + pow((1.0 + mParameters[4] / var_INaK__Knao), 3)) * pow(var_INaK__Knao, 3)); // dimensionless
        const double var_INaK__b4 = pow(var_chaste_interface__intracellular_ions__ki, 2) * var_INaK__k4m / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__ki / var_INaK__Kki), 2) + pow((1.0 + var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3)) * pow(var_INaK__Kki, 2)); // dimensionless
        const double var_INaK__x1 = var_INaK__a1 * var_INaK__a2 * var_INaK__a4 + var_INaK__a1 * var_INaK__a2 * var_INaK__b3 + var_INaK__a2 * var_INaK__b3 * var_INaK__b4 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__x2 = var_INaK__a1 * var_INaK__a2 * var_INaK__a3 + var_INaK__a2 * var_INaK__a3 * var_INaK__b4 + var_INaK__a3 * var_INaK__b1 * var_INaK__b4 + var_INaK__b1 * var_INaK__b2 * var_INaK__b4; // dimensionless
        const double var_INaK__x3 = var_INaK__a2 * var_INaK__a3 * var_INaK__a4 + var_INaK__a3 * var_INaK__a4 * var_INaK__b1 + var_INaK__a4 * var_INaK__b1 * var_INaK__b2 + var_INaK__b1 * var_INaK__b2 * var_INaK__b3; // dimensionless
        const double var_INaK__x4 = var_INaK__a1 * var_INaK__a3 * var_INaK__a4 + var_INaK__a1 * var_INaK__a4 * var_INaK__b2 + var_INaK__a1 * var_INaK__b2 * var_INaK__b3 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__E1 = var_INaK__x1 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E2 = var_INaK__x2 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E3 = var_INaK__x3 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E4 = var_INaK__x4 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__JnakK = 2.0 * var_INaK__E4 * var_INaK__b1 - 2.0 * var_INaK__E3 * var_INaK__a1; // millimolar_per_millisecond
        const double var_INaK__JnakNa = 3.0 * var_INaK__E1 * var_INaK__a3 - 3.0 * var_INaK__E2 * var_INaK__b3; // millimolar_per_millisecond
        const double var_physical_constants__zca = 2.0; // dimensionless
        const double var_physical_constants__zk = 1.0; // dimensionless
        const double var_physical_constants__zna = 1.0; // dimensionless
        const double var_INaCa_i__INaCa_i = 0.80000000000000004 * (var_INaCa_i__JncxCa_i * var_physical_constants__zca + var_INaCa_i__JncxNa_i * var_physical_constants__zna) * var_INaCa_i__Gncx * var_INaCa_i__allo_i; // microA_per_microF
        const double var_INaCa_i__INaCa_i_converted = HeartConfig::Instance()->GetCapacitance() * var_INaCa_i__INaCa_i; // uA_per_cm2
        const double var_INaCa_i__INaCa_ss = 0.20000000000000001 * (var_INaCa_i__JncxCa_ss * var_physical_constants__zca + var_INaCa_i__JncxNa_ss * var_physical_constants__zna) * var_INaCa_i__Gncx * var_INaCa_i__allo_ss; // microA_per_microF
        const double var_INaCa_i__INaCa_ss_converted = HeartConfig::Instance()->GetCapacitance() * var_INaCa_i__INaCa_ss; // uA_per_cm2
        const double var_INaK__INaK = (var_INaK__JnakK * var_physical_constants__zk + var_INaK__JnakNa * var_physical_constants__zna) * var_INaK__Pnak; // microA_per_microF
        const double var_INaK__INaK_converted = HeartConfig::Instance()->GetCapacitance() * var_INaK__INaK; // uA_per_cm2
        const double var_reversal_potentials__EK = mParameters[6] * mParameters[19] * log(mParameters[3] / var_chaste_interface__intracellular_ions__ki) / mParameters[5]; // millivolt
        const double var_IK1__IK1 = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IK1__GK1_total * var_IK1__rk1 * var_chaste_interface__IK1__xk1; // microA_per_microF
        const double var_IK1__IK1_converted = HeartConfig::Instance()->GetCapacitance() * var_IK1__IK1; // uA_per_cm2
        const double var_IKb__IKb = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IKb__GKb * var_IKb__xkb; // microA_per_microF
        const double var_IKb__IKb_converted = HeartConfig::Instance()->GetCapacitance() * var_IKb__IKb; // uA_per_cm2
        const double var_IKr__IKr = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IKr__GKr_total * var_IKr__rkr * var_IKr__xr; // microA_per_microF
        const double var_IKr__IKr_converted = HeartConfig::Instance()->GetCapacitance() * var_IKr__IKr; // uA_per_cm2
        const double var_reversal_potentials__ENa = mParameters[6] * mParameters[19] * log(mParameters[4] / var_chaste_interface__intracellular_ions__nai) / mParameters[5]; // millivolt
        const double var_INa__INa = pow(var_chaste_interface__INa__m, 3) * (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - var_INa__fINap) * var_INa__h * var_chaste_interface__INa__j + var_INa__fINap * var_INa__hp * var_chaste_interface__INa__jp) * mParameters[11]; // microA_per_microF
        const double var_INa__INa_converted = HeartConfig::Instance()->GetCapacitance() * var_INa__INa; // uA_per_cm2
        const double var_INaL__INaL = (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - var_INaL__fINaLp) * var_chaste_interface__INaL__hL + var_INaL__fINaLp * var_chaste_interface__INaL__hLp) * var_INaL__GNaL * var_chaste_interface__INaL__mL; // microA_per_microF
        const double var_INaL__INaL_converted = HeartConfig::Instance()->GetCapacitance() * var_INaL__INaL; // uA_per_cm2
        const double var_reversal_potentials__PKNa = 0.018329999999999999; // dimensionless
        const double var_reversal_potentials__EKs = mParameters[6] * mParameters[19] * log((mParameters[4] * var_reversal_potentials__PKNa + mParameters[3]) / (var_chaste_interface__intracellular_ions__nai * var_reversal_potentials__PKNa + var_chaste_interface__intracellular_ions__ki)) / mParameters[5]; // millivolt
        const double var_IKs__IKs = (-var_reversal_potentials__EKs + var_chaste_interface__membrane__v) * var_IKs__GKs_total * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2; // microA_per_microF
        const double var_IKs__IKs_converted = HeartConfig::Instance()->GetCapacitance() * var_IKs__IKs; // uA_per_cm2
        const double var_ryr__fJrelp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_ryr__Jrel = ((1.0 - var_ryr__fJrelp) * var_chaste_interface__ryr__Jrelnp + var_chaste_interface__ryr__Jrelp * var_ryr__fJrelp) * mParameters[0]; // millimolar_per_millisecond

        std::vector<double> dqs(29);
        dqs[0] = var_SERCA__Jleak;
        dqs[1] = var_ryr__Jrel;
        dqs[2] = var_SERCA__Jup;
        dqs[3] = var_intracellular_ions__Bcai;
        dqs[4] = var_intracellular_ions__Bcass;
        dqs[5] = var_ICaL__ICaK_converted;
        dqs[6] = var_ICaL__ICaNa_converted;
        dqs[7] = var_ICaL__ICaL_converted;
        dqs[8] = var_ICab__ICab_converted;
        dqs[9] = var_IKb__IKb_converted;
        dqs[10] = var_IpCa__IpCa_converted;
        dqs[11] = var_INa__INa_converted;
        dqs[12] = var_INa__h;
        dqs[13] = var_IK1__IK1_converted;
        dqs[14] = var_IK1__GK1_total;
        dqs[15] = var_INaL__INaL_converted;
        dqs[16] = var_INaL__GNaL;
        dqs[17] = var_IKr__IKr_converted;
        dqs[18] = var_IKr__GKr_total;
        dqs[19] = var_IKs__IKs_converted;
        dqs[20] = var_IKs__GKs_total;
        dqs[21] = var_INaCa_i__INaCa_i_converted;
        dqs[22] = var_INaCa_i__INaCa_ss_converted;
        dqs[23] = var_INaK__INaK_converted;
        dqs[24] = var_membrane__Istim_converted;
        dqs[25] = var_Ito__Gto;
        dqs[26] = var_reversal_potentials__EK;
        dqs[27] = var_reversal_potentials__ENa;
        dqs[28] = var_chaste_interface__environment__time;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellohara_rudy_2011_endoFromCellMLBackwardEulerNoLut>::Initialise(void)
{
    this->mSystemName = "ohara_rudy_2011_endo";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-87.0);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0001);

    // rY[2]:
    this->mVariableNames.push_back("CaMK__CaMKt");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0);

    // rY[3]:
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.0);

    // rY[4]:
    this->mVariableNames.push_back("dyadic_space_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.0);

    // rY[5]:
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(145.0);

    // rY[6]:
    this->mVariableNames.push_back("dyadic_space_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(145.0);

    // rY[7]:
    this->mVariableNames.push_back("dyadic_space_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0001);

    // rY[8]:
    this->mVariableNames.push_back("NSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.2);

    // rY[9]:
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.2);

    // rY[10]:
    this->mVariableNames.push_back("INa__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[11]:
    this->mVariableNames.push_back("INa__hf");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // rY[12]:
    this->mVariableNames.push_back("INa__hs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // rY[13]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // rY[14]:
    this->mVariableNames.push_back("INa__hsp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // rY[15]:
    this->mVariableNames.push_back("INa__jp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // rY[16]:
    this->mVariableNames.push_back("INaL__mL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[17]:
    this->mVariableNames.push_back("INaL__hL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // rY[18]:
    this->mVariableNames.push_back("INaL__hLp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // rY[19]:
    this->mVariableNames.push_back("Ito__a");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[20]:
    this->mVariableNames.push_back("Ito__iF");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // rY[21]:
    this->mVariableNames.push_back("Ito__iS");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // rY[22]:
    this->mVariableNames.push_back("Ito__ap");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[23]:
    this->mVariableNames.push_back("Ito__iFp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // rY[24]:
    this->mVariableNames.push_back("Ito__iSp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // rY[25]:
    this->mVariableNames.push_back("ICaL__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[26]:
    this->mVariableNames.push_back("ICaL__ff");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // rY[27]:
    this->mVariableNames.push_back("ICaL__fs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // rY[28]:
    this->mVariableNames.push_back("ICaL__fcaf");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // rY[29]:
    this->mVariableNames.push_back("ICaL__fcas");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // rY[30]:
    this->mVariableNames.push_back("ICaL__jca");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // rY[31]:
    this->mVariableNames.push_back("ICaL__ffp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // rY[32]:
    this->mVariableNames.push_back("ICaL__fcafp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // rY[33]:
    this->mVariableNames.push_back("ICaL__nca");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[34]:
    this->mVariableNames.push_back("IKr__xrf");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[35]:
    this->mVariableNames.push_back("IKr__xrs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[36]:
    this->mVariableNames.push_back("IKs__xs1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[37]:
    this->mVariableNames.push_back("IKs__xs2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[38]:
    this->mVariableNames.push_back("IK1__xk1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // rY[39]:
    this->mVariableNames.push_back("ryr__Jrelnp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[40]:
    this->mVariableNames.push_back("ryr__Jrelp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // mParameters[0]:
    this->mParameterNames.push_back("SR_release_current_max");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[1]:
    this->mParameterNames.push_back("SR_uptake_current_max");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[2]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[3]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[4]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[5]:
    this->mParameterNames.push_back("faraday_constant");
    this->mParameterUnits.push_back("coulomb_per_mole");

    // mParameters[6]:
    this->mParameterNames.push_back("gas_constant");
    this->mParameterUnits.push_back("joule_per_kilomole_kelvin");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_background_calcium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_background_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_calcium_pump_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[12]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[13]:
    this->mParameterNames.push_back("membrane_persistent_sodium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[14]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[15]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[16]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[17]:
    this->mParameterNames.push_back("membrane_sodium_potassium_pump_current_permeability");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[18]:
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[19]:
    this->mParameterNames.push_back("temperature");
    this->mParameterUnits.push_back("kelvin");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("SR_leak_current");
    this->mDerivedQuantityUnits.push_back("millimolar_per_millisecond");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("SR_release_current");
    this->mDerivedQuantityUnits.push_back("millimolar_per_millisecond");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("SR_uptake_current");
    this->mDerivedQuantityUnits.push_back("millimolar_per_millisecond");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("cytosolic_calcium_flux_scaling_from_intrinsic_buffers");
    this->mDerivedQuantityUnits.push_back("dimensionless");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("dyadic_space_calcium_flux_scaling_from_intrinsic_buffers");
    this->mDerivedQuantityUnits.push_back("dimensionless");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_channel_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_channel_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_background_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("membrane_background_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [10]:
    this->mDerivedQuantityNames.push_back("membrane_calcium_pump_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [11]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [12]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mDerivedQuantityUnits.push_back("dimensionless");

    // Derived Quantity index [13]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [14]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mDerivedQuantityUnits.push_back("milliS_per_microF");

    // Derived Quantity index [15]:
    this->mDerivedQuantityNames.push_back("membrane_persistent_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [16]:
    this->mDerivedQuantityNames.push_back("membrane_persistent_sodium_current_conductance");
    this->mDerivedQuantityUnits.push_back("milliS_per_microF");

    // Derived Quantity index [17]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [18]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mDerivedQuantityUnits.push_back("milliS_per_microF");

    // Derived Quantity index [19]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [20]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mDerivedQuantityUnits.push_back("milliS_per_microF");

    // Derived Quantity index [21]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [22]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_dyadic_space_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [23]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_potassium_pump_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [24]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [25]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current_conductance");
    this->mDerivedQuantityUnits.push_back("milliS_per_microF");

    // Derived Quantity index [26]:
    this->mDerivedQuantityNames.push_back("potassium_reversal_potential");
    this->mDerivedQuantityUnits.push_back("millivolt");

    // Derived Quantity index [27]:
    this->mDerivedQuantityNames.push_back("sodium_reversal_potential");
    this->mDerivedQuantityUnits.push_back("millivolt");

    // Derived Quantity index [28]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellohara_rudy_2011_endoFromCellMLBackwardEulerNoLut)

