//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: maltsev_2009
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: BackwardEuler)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "maltsev_2009.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"
#include "CardiacNewtonSolver.hpp"


    double Cellmaltsev_2009FromCellMLBackwardEulerNoLut::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    Cellmaltsev_2009FromCellMLBackwardEulerNoLut::Cellmaltsev_2009FromCellMLBackwardEulerNoLut(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractBackwardEulerCardiacCell<15>(
                29,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellmaltsev_2009FromCellMLBackwardEulerNoLut>::Instance();
        Init();
        
        this->mParameters[0] = 140.0; // (var_model_parameters__Ki) [millimolar]
        this->mParameters[1] = 10.0; // (var_model_parameters__Nai) [millimolar]
        this->mParameters[2] = 2.0; // (var_model_parameters__Cao) [millimolar]
        this->mParameters[3] = 5.4000000000000004; // (var_model_parameters__Ko) [millimolar]
        this->mParameters[4] = 140.0; // (var_model_parameters__Nao) [millimolar]
        this->mParameters[5] = 0.46400000000000002; // (var_i_CaL__g_CaL) [nanoS_per_picoF]
        this->mParameters[6] = 0.61670000000000003; // (var_i_f__g_if_K) [dimensionless]
        this->mParameters[7] = 0.38329999999999997; // (var_i_f__g_if_Na) [dimensionless]
        this->mParameters[8] = 0.081139729999999993; // (var_i_Kr__g_Kr) [nanoS_per_picoF]
        this->mParameters[9] = 32.0; // (var_model_parameters__Cm) [picoF]
    }

    Cellmaltsev_2009FromCellMLBackwardEulerNoLut::~Cellmaltsev_2009FromCellMLBackwardEulerNoLut()
    {
    }

    
    double Cellmaltsev_2009FromCellMLBackwardEulerNoLut::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__i_CaL_dL_gate__dL = rY[2];
        // Units: dimensionless; Initial value: 0.000584545564405
        double var_chaste_interface__i_CaL_fL_gate__fL = rY[3];
        // Units: dimensionless; Initial value: 0.862381249774
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[4];
        // Units: dimensionless; Initial value: 0.711395919653
        double var_chaste_interface__i_CaT_dT_gate__dT = rY[5];
        // Units: dimensionless; Initial value: 0.00504393374639
        double var_chaste_interface__i_CaT_fT_gate__fT = rY[6];
        // Units: dimensionless; Initial value: 0.420757825415
        double var_chaste_interface__i_Kr_pa_gate__paS = rY[7];
        // Units: dimensionless; Initial value: 0.453100576739
        double var_chaste_interface__i_Kr_pa_gate__paF = rY[8];
        // Units: dimensionless; Initial value: 0.144755091176
        double var_chaste_interface__i_Kr_pi_gate__pi_ = rY[9];
        // Units: dimensionless; Initial value: 0.849409822329
        double var_chaste_interface__i_Ks_n_gate__n = rY[10];
        // Units: dimensionless; Initial value: 0.0264600410928
        double var_chaste_interface__AP_sensitive_currents_q_gate__q = rY[11];
        // Units: dimensionless; Initial value: 0.694241313965
        double var_chaste_interface__AP_sensitive_currents_r_gate__r = rY[12];
        // Units: dimensionless; Initial value: 0.00558131733359
        double var_chaste_interface__i_f_y_gate__y = rY[13];
        // Units: dimensionless; Initial value: 0.113643187247
        double var_chaste_interface__i_st_qa_gate__qa = rY[14];
        // Units: dimensionless; Initial value: 0.42380243163
        double var_chaste_interface__i_st_qi_gate__qi = rY[15];
        // Units: dimensionless; Initial value: 0.447294008304
        double var_chaste_interface__calcium_dynamics__Ca_sub = rY[28];
        // Units: millimolar; Initial value: 0.000138112560112
        
        const double var_AP_sensitive_currents__g_sus = 0.02; // nanoS_per_picoF
        const double var_AP_sensitive_currents__g_to = 0.252; // nanoS_per_picoF
        const double var_i_CaL__E_CaL = 45.0; // millivolt
        const double var_i_CaT__E_CaT = 45.0; // millivolt
        const double var_i_CaT__g_CaT = 0.1832; // nanoS_per_picoF
        const double var_i_Ks__g_Ks = 0.025899999999999999; // nanoS_per_picoF
        const double var_i_NaCa__K1ni = 395.30000000000001; // millimolar
        const double var_i_NaCa__K1no = 1628.0; // millimolar
        const double var_i_NaCa__K2ni = 2.2890000000000001; // millimolar
        const double var_i_NaCa__K2no = 561.39999999999998; // millimolar
        const double var_i_NaCa__K3ni = 26.440000000000001; // millimolar
        const double var_i_NaCa__K3no = 4.6630000000000003; // millimolar
        const double var_i_NaCa__Kci = 0.0207; // millimolar
        const double var_i_NaCa__Kcni = 26.440000000000001; // millimolar
        const double var_i_NaCa__Kco = 3.6629999999999998; // millimolar
        const double var_i_NaCa__Qci = 0.13689999999999999; // dimensionless
        const double var_i_NaCa__Qco = 0; // dimensionless
        const double var_i_NaCa__Qn = 0.43149999999999999; // dimensionless
        const double var_i_NaCa__kNaCa = 187.5; // picoA_per_picoF
        const double var_i_NaK__Km_Kp = 1.3999999999999999; // millimolar
        const double var_i_NaK__Km_Nap = 14.0; // millimolar
        const double var_i_NaK__i_NaK_max = 2.8799999999999999; // picoA_per_picoF
        const double var_i_b_Ca__g_b_Ca = 0.00059999999999999995; // nanoS_per_picoF
        const double var_i_b_Na__g_b_Na = 0.0048599999999999997; // nanoS_per_picoF
        const double var_i_f__g_if = 0.14999999999999999; // nanoS_per_picoF
        const double var_i_st__E_st = 37.399999999999999; // millivolt
        const double var_i_st__g_st = 0.0030000000000000001; // nanoS_per_picoF
        const double var_i_CaL__i_CaL = (-var_i_CaL__E_CaL + var_chaste_interface__Vm__Vm) * mParameters[5] * var_chaste_interface__i_CaL_dL_gate__dL * var_chaste_interface__i_CaL_fCa_gate__fCa * var_chaste_interface__i_CaL_fL_gate__fL * mParameters[9]; // picoA
        const double var_i_CaT__i_CaT = (-var_i_CaT__E_CaT + var_chaste_interface__Vm__Vm) * var_i_CaT__g_CaT * var_chaste_interface__i_CaT_dT_gate__dT * var_chaste_interface__i_CaT_fT_gate__fT * mParameters[9]; // picoA
        const double var_i_b_Ca__i_b_Ca = (-var_i_CaL__E_CaL + var_chaste_interface__Vm__Vm) * var_i_b_Ca__g_b_Ca * mParameters[9]; // picoA
        const double var_i_st__i_st = (-var_i_st__E_st + var_chaste_interface__Vm__Vm) * var_i_st__g_st * var_chaste_interface__i_st_qa_gate__qa * var_chaste_interface__i_st_qi_gate__qi * mParameters[9]; // picoA
        const double var_model_parameters__Cm_converted = 9.9999999999999995e-7 * mParameters[9]; // uF
        const double var_i_CaL__i_CaL_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_CaL__i_CaL / var_model_parameters__Cm_converted; // uA_per_cm2
        const double var_model_parameters__F = 96485.0; // coulomb_per_mole
        const double var_i_NaCa__k43 = mParameters[1] / (var_i_NaCa__K3ni + mParameters[1]); // dimensionless
        const double var_i_NaCa__k34 = mParameters[4] / (var_i_NaCa__K3no + mParameters[4]); // dimensionless
        const double var_model_parameters__R = 8314.3999999999996; // joule_per_kilomole_kelvin
        const double var_model_parameters__T = 310.14999999999998; // kelvin
        const double var_electric_potentials__E_K = var_model_parameters__R * var_model_parameters__T * log(mParameters[3] / mParameters[0]) / var_model_parameters__F; // millivolt
        const double var_AP_sensitive_currents__i_sus = (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * var_AP_sensitive_currents__g_sus * var_chaste_interface__AP_sensitive_currents_r_gate__r * mParameters[9]; // picoA
        const double var_AP_sensitive_currents__i_to = (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * var_AP_sensitive_currents__g_to * var_chaste_interface__AP_sensitive_currents_q_gate__q * var_chaste_interface__AP_sensitive_currents_r_gate__r * mParameters[9]; // picoA
        const double var_electric_potentials__E_Ks = var_model_parameters__R * var_model_parameters__T * log((mParameters[3] + 0.12 * mParameters[4]) / (mParameters[0] + 0.12 * mParameters[1])) / var_model_parameters__F; // millivolt
        const double var_electric_potentials__E_Na = var_model_parameters__R * var_model_parameters__T * log(mParameters[4] / mParameters[1]) / var_model_parameters__F; // millivolt
        const double var_i_Kr__i_Kr = (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * (0.40000000000000002 * var_chaste_interface__i_Kr_pa_gate__paS + 0.59999999999999998 * var_chaste_interface__i_Kr_pa_gate__paF) * mParameters[8] * var_chaste_interface__i_Kr_pi_gate__pi_ * mParameters[9]; // picoA
        const double var_i_Kr__i_Kr_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_Kr__i_Kr / var_model_parameters__Cm_converted; // uA_per_cm2
        const double var_i_Ks__i_Ks = pow(var_chaste_interface__i_Ks_n_gate__n, 2) * (-var_electric_potentials__E_Ks + var_chaste_interface__Vm__Vm) * var_i_Ks__g_Ks * mParameters[9]; // picoA
        const double var_i_NaCa__RTOnF = var_model_parameters__R * var_model_parameters__T / var_model_parameters__F; // millivolt
        const double var_i_NaCa__di = 1.0 + (1.0 + (1.0 + mParameters[1] / var_i_NaCa__K3ni) * mParameters[1] / var_i_NaCa__K2ni) * mParameters[1] / var_i_NaCa__K1ni + (1.0 + mParameters[1] / var_i_NaCa__Kcni + exp(-var_chaste_interface__Vm__Vm * var_i_NaCa__Qci / var_i_NaCa__RTOnF)) * var_chaste_interface__calcium_dynamics__Ca_sub / var_i_NaCa__Kci; // dimensionless
        const double var_i_NaCa__do = 1.0 + (1.0 + (1.0 + mParameters[4] / var_i_NaCa__K3no) * mParameters[4] / var_i_NaCa__K2no) * mParameters[4] / var_i_NaCa__K1no + (1.0 + exp(var_chaste_interface__Vm__Vm * var_i_NaCa__Qco / var_i_NaCa__RTOnF)) * mParameters[2] / var_i_NaCa__Kco; // dimensionless
        const double var_i_NaCa__k12 = var_chaste_interface__calcium_dynamics__Ca_sub * exp(-var_chaste_interface__Vm__Vm * var_i_NaCa__Qci / var_i_NaCa__RTOnF) / (var_i_NaCa__Kci * var_i_NaCa__di); // dimensionless
        const double var_i_NaCa__k14 = pow(mParameters[1], 2) * (1.0 + mParameters[1] / var_i_NaCa__K3ni) * exp(0.5 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qn / var_i_NaCa__RTOnF) / (var_i_NaCa__K1ni * var_i_NaCa__K2ni * var_i_NaCa__di); // dimensionless
        const double var_i_NaCa__k21 = mParameters[2] * exp(var_chaste_interface__Vm__Vm * var_i_NaCa__Qco / var_i_NaCa__RTOnF) / (var_i_NaCa__Kco * var_i_NaCa__do); // dimensionless
        const double var_i_NaCa__k23 = pow(mParameters[4], 2) * (1.0 + mParameters[4] / var_i_NaCa__K3no) * exp(-0.5 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qn / var_i_NaCa__RTOnF) / (var_i_NaCa__K1no * var_i_NaCa__K2no * var_i_NaCa__do); // dimensionless
        const double var_i_NaCa__k32 = exp(0.5 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qn / var_i_NaCa__RTOnF); // dimensionless
        const double var_i_NaCa__k41 = exp(-0.5 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qn / var_i_NaCa__RTOnF); // dimensionless
        const double var_i_NaCa__x1 = (var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k34 * var_i_NaCa__k41 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k21 * var_i_NaCa__k32; // dimensionless
        const double var_i_NaCa__x2 = (var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k32 * var_i_NaCa__k43 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k12 * var_i_NaCa__k41; // dimensionless
        const double var_i_NaCa__x3 = (var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k14 * var_i_NaCa__k43 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k12 * var_i_NaCa__k23; // dimensionless
        const double var_i_NaCa__x4 = (var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k23 * var_i_NaCa__k34 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k14 * var_i_NaCa__k21; // dimensionless
        const double var_i_NaCa__i_NaCa = (var_i_NaCa__k21 * var_i_NaCa__x2 - var_i_NaCa__k12 * var_i_NaCa__x1) * var_i_NaCa__kNaCa * mParameters[9] / (var_i_NaCa__x1 + var_i_NaCa__x2 + var_i_NaCa__x3 + var_i_NaCa__x4); // picoA
        const double var_i_NaK__i_NaK = var_i_NaK__i_NaK_max * mParameters[9] / ((1.0 + pow((var_i_NaK__Km_Kp / mParameters[3]), 1.2)) * (1.0 + pow((var_i_NaK__Km_Nap / mParameters[1]), 1.3)) * (1.0 + exp(-4.0 + 0.033333333333333333 * var_electric_potentials__E_Na - 0.033333333333333333 * var_chaste_interface__Vm__Vm))); // picoA
        const double var_i_b_Na__i_b_Na = (-var_electric_potentials__E_Na + var_chaste_interface__Vm__Vm) * var_i_b_Na__g_b_Na * mParameters[9]; // picoA
        const double var_i_f__i_f_K = pow(var_chaste_interface__i_f_y_gate__y, 2) * (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * var_i_f__g_if * mParameters[6] * mParameters[9]; // picoA
        const double var_i_f__i_f_Na = pow(var_chaste_interface__i_f_y_gate__y, 2) * (-var_electric_potentials__E_Na + var_chaste_interface__Vm__Vm) * var_i_f__g_if * mParameters[7] * mParameters[9]; // picoA
        const double var_i_f__i_f = var_i_f__i_f_K + var_i_f__i_f_Na; // picoA
        const double var_i_f__i_f_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_f__i_f / var_model_parameters__Cm_converted; // uA_per_cm2
        const double var_chaste_interface__i_ionic = ((var_i_CaL__i_CaL_converted + var_i_Kr__i_Kr_converted + var_i_f__i_f_converted) * var_model_parameters__Cm_converted + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_AP_sensitive_currents__i_sus + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_AP_sensitive_currents__i_to + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_CaT__i_CaT + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_Ks__i_Ks + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_NaCa__i_NaCa + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_NaK__i_NaK + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_b_Ca__i_b_Ca + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_b_Na__i_b_Na + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_st__i_st) / var_model_parameters__Cm_converted; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellmaltsev_2009FromCellMLBackwardEulerNoLut::ComputeResidual(double var_chaste_interface__environment__time, const double rCurrentGuess[15], double rResidual[15])
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__i_CaL_dL_gate__dL = rY[2];
        // Units: dimensionless; Initial value: 0.000584545564405
        double var_chaste_interface__i_CaL_fL_gate__fL = rY[3];
        // Units: dimensionless; Initial value: 0.862381249774
        double var_chaste_interface__i_CaT_dT_gate__dT = rY[5];
        // Units: dimensionless; Initial value: 0.00504393374639
        double var_chaste_interface__i_CaT_fT_gate__fT = rY[6];
        // Units: dimensionless; Initial value: 0.420757825415
        
        //output_nonlinear_state_assignments
        double var_chaste_interface__calcium_buffering__fCMi = rCurrentGuess[0];
        double var_chaste_interface__calcium_buffering__fCMs = rCurrentGuess[1];
        double var_chaste_interface__calcium_buffering__fCQ = rCurrentGuess[2];
        double var_chaste_interface__calcium_buffering__fTC = rCurrentGuess[3];
        double var_chaste_interface__calcium_buffering__fTMC = rCurrentGuess[4];
        double var_chaste_interface__calcium_buffering__fTMM = rCurrentGuess[5];
        double var_chaste_interface__calcium_dynamics__Ca_jsr = rCurrentGuess[6];
        double var_chaste_interface__calcium_dynamics__Ca_nsr = rCurrentGuess[7];
        double var_chaste_interface__calcium_dynamics__Ca_sub = rCurrentGuess[8];
        double var_chaste_interface__calcium_dynamics__Cai = rCurrentGuess[9];
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rCurrentGuess[10];
        double var_chaste_interface__j_SRCarel__I = rCurrentGuess[11];
        double var_chaste_interface__j_SRCarel__O = rCurrentGuess[12];
        double var_chaste_interface__j_SRCarel__R = rCurrentGuess[13];
        double var_chaste_interface__j_SRCarel__RI = rCurrentGuess[14];
        
        //output_equations
        const double var_calcium_buffering__CM_tot = 0.044999999999999998; // millimolar
        const double var_calcium_buffering__CQ_tot = 10.0; // millimolar
        const double var_calcium_buffering__TC_tot = 0.031; // millimolar
        const double var_calcium_buffering__TMC_tot = 0.062; // millimolar
        const double var_calcium_buffering__kb_CM = 0.54200000000000004; // per_millisecond
        const double var_calcium_buffering__kb_CQ = 0.44500000000000001; // per_millisecond
        const double var_calcium_buffering__kb_TC = 0.44600000000000001; // per_millisecond
        const double var_calcium_buffering__kb_TMC = 0.0075100000000000002; // per_millisecond
        const double var_calcium_buffering__kb_TMM = 0.751; // per_millisecond
        const double var_calcium_buffering__kf_CM = 227.69999999999999; // per_millimolar_millisecond
        const double var_calcium_buffering__kf_CQ = 0.53400000000000003; // per_millimolar_millisecond
        const double var_calcium_buffering__kf_TC = 88.799999999999997; // per_millimolar_millisecond
        const double var_calcium_buffering__kf_TMC = 227.69999999999999; // per_millimolar_millisecond
        const double var_calcium_buffering__kf_TMM = 2.2770000000000001; // per_millimolar_millisecond
        const double var_calcium_buffering__delta_fCQ = -var_chaste_interface__calcium_buffering__fCQ * var_calcium_buffering__kb_CQ + (1.0 - var_chaste_interface__calcium_buffering__fCQ) * var_calcium_buffering__kf_CQ * var_chaste_interface__calcium_dynamics__Ca_jsr; // per_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__fCQ = var_calcium_buffering__delta_fCQ; // 1 / millisecond
        const double var_calcium_buffering__delta_fCMs = -var_chaste_interface__calcium_buffering__fCMs * var_calcium_buffering__kb_CM + (1.0 - var_chaste_interface__calcium_buffering__fCMs) * var_calcium_buffering__kf_CM * var_chaste_interface__calcium_dynamics__Ca_sub; // per_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__fCMs = var_calcium_buffering__delta_fCMs; // 1 / millisecond
        const double var_calcium_buffering__delta_fCMi = -var_chaste_interface__calcium_buffering__fCMi * var_calcium_buffering__kb_CM + (1.0 - var_chaste_interface__calcium_buffering__fCMi) * var_calcium_buffering__kf_CM * var_chaste_interface__calcium_dynamics__Cai; // per_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__fCMi = var_calcium_buffering__delta_fCMi; // 1 / millisecond
        const double var_calcium_buffering__delta_fTC = -var_chaste_interface__calcium_buffering__fTC * var_calcium_buffering__kb_TC + (1.0 - var_chaste_interface__calcium_buffering__fTC) * var_calcium_buffering__kf_TC * var_chaste_interface__calcium_dynamics__Cai; // per_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__fTC = var_calcium_buffering__delta_fTC; // 1 / millisecond
        const double var_calcium_buffering__delta_fTMC = -var_chaste_interface__calcium_buffering__fTMC * var_calcium_buffering__kb_TMC + (1.0 - var_chaste_interface__calcium_buffering__fTMC - var_chaste_interface__calcium_buffering__fTMM) * var_calcium_buffering__kf_TMC * var_chaste_interface__calcium_dynamics__Cai; // per_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__fTMC = var_calcium_buffering__delta_fTMC; // 1 / millisecond
        const double var_i_CaL__E_CaL = 45.0; // millivolt
        const double var_i_CaL_fCa_gate__Km_fCa = 0.00035; // millimolar
        const double var_i_CaL_fCa_gate__alpha_fCa = 0.021000000000000001; // per_millisecond
        const double var_i_CaL_fCa_gate__fCa_infinity = var_i_CaL_fCa_gate__Km_fCa / (var_chaste_interface__calcium_dynamics__Ca_sub + var_i_CaL_fCa_gate__Km_fCa); // dimensionless
        const double var_i_CaL_fCa_gate__tau_fCa = var_i_CaL_fCa_gate__fCa_infinity / var_i_CaL_fCa_gate__alpha_fCa; // millisecond
        const double d_dt_chaste_interface_var_i_CaL_fCa_gate__fCa = (-var_chaste_interface__i_CaL_fCa_gate__fCa + var_i_CaL_fCa_gate__fCa_infinity) / var_i_CaL_fCa_gate__tau_fCa; // 1 / millisecond
        const double var_i_CaT__E_CaT = 45.0; // millivolt
        const double var_i_CaT__g_CaT = 0.1832; // nanoS_per_picoF
        const double var_i_NaCa__K1ni = 395.30000000000001; // millimolar
        const double var_i_NaCa__K1no = 1628.0; // millimolar
        const double var_i_NaCa__K2ni = 2.2890000000000001; // millimolar
        const double var_i_NaCa__K2no = 561.39999999999998; // millimolar
        const double var_i_NaCa__K3ni = 26.440000000000001; // millimolar
        const double var_i_NaCa__K3no = 4.6630000000000003; // millimolar
        const double var_i_NaCa__Kci = 0.0207; // millimolar
        const double var_i_NaCa__Kcni = 26.440000000000001; // millimolar
        const double var_i_NaCa__Kco = 3.6629999999999998; // millimolar
        const double var_i_NaCa__Qci = 0.13689999999999999; // dimensionless
        const double var_i_NaCa__Qco = 0; // dimensionless
        const double var_i_NaCa__Qn = 0.43149999999999999; // dimensionless
        const double var_i_NaCa__kNaCa = 187.5; // picoA_per_picoF
        const double var_i_b_Ca__g_b_Ca = 0.00059999999999999995; // nanoS_per_picoF
        const double var_intracellular_calcium_fluxes__K_up = 0.00059999999999999995; // millimolar
        const double var_intracellular_calcium_fluxes__P_up = 0.012; // millimolar_per_millisecond
        const double var_intracellular_calcium_fluxes__j_up = var_intracellular_calcium_fluxes__P_up / (1.0 + var_intracellular_calcium_fluxes__K_up / var_chaste_interface__calcium_dynamics__Cai); // millimolar_per_millisecond
        const double var_intracellular_calcium_fluxes__tau_dif_Ca = 0.040000000000000001; // millisecond
        const double var_intracellular_calcium_fluxes__j_Ca_dif = (-var_chaste_interface__calcium_dynamics__Cai + var_chaste_interface__calcium_dynamics__Ca_sub) / var_intracellular_calcium_fluxes__tau_dif_Ca; // millimolar_per_millisecond
        const double var_intracellular_calcium_fluxes__tau_tr = 40.0; // millisecond
        const double var_intracellular_calcium_fluxes__j_tr = (-var_chaste_interface__calcium_dynamics__Ca_jsr + var_chaste_interface__calcium_dynamics__Ca_nsr) / var_intracellular_calcium_fluxes__tau_tr; // millimolar_per_millisecond
        const double var_j_SRCarel__EC50_SR = 0.45000000000000001; // millimolar
        const double var_j_SRCarel__HSR = 2.5; // dimensionless
        const double var_j_SRCarel__MaxSR = 15.0; // dimensionless
        const double var_j_SRCarel__MinSR = 1.0; // dimensionless
        const double var_j_SRCarel__kCaSR = -(-var_j_SRCarel__MinSR + var_j_SRCarel__MaxSR) / (1.0 + pow((var_j_SRCarel__EC50_SR / var_chaste_interface__calcium_dynamics__Ca_jsr), var_j_SRCarel__HSR)) + var_j_SRCarel__MaxSR; // dimensionless
        const double var_j_SRCarel__kiCa = 0.5; // per_millimolar_millisecond
        const double var_j_SRCarel__kiSRCa = var_j_SRCarel__kCaSR * var_j_SRCarel__kiCa; // per_millimolar_millisecond
        const double var_j_SRCarel__kim = 0.0050000000000000001; // per_millisecond
        const double var_j_SRCarel__koCa = 10.0; // per_millimolar2_millisecond
        const double var_j_SRCarel__koSRCa = var_j_SRCarel__koCa / var_j_SRCarel__kCaSR; // per_millimolar2_millisecond
        const double var_j_SRCarel__kom = 0.059999999999999998; // per_millisecond
        const double d_dt_chaste_interface_var_j_SRCarel__I = -var_chaste_interface__j_SRCarel__I * var_j_SRCarel__kim - var_chaste_interface__j_SRCarel__I * var_j_SRCarel__kom + pow(var_chaste_interface__calcium_dynamics__Ca_sub, 2) * var_chaste_interface__j_SRCarel__RI * var_j_SRCarel__koSRCa + var_chaste_interface__calcium_dynamics__Ca_sub * var_chaste_interface__j_SRCarel__O * var_j_SRCarel__kiSRCa; // 1 / millisecond
        const double d_dt_chaste_interface_var_j_SRCarel__O = var_chaste_interface__j_SRCarel__I * var_j_SRCarel__kim - var_chaste_interface__j_SRCarel__O * var_j_SRCarel__kom + pow(var_chaste_interface__calcium_dynamics__Ca_sub, 2) * var_chaste_interface__j_SRCarel__R * var_j_SRCarel__koSRCa - var_chaste_interface__calcium_dynamics__Ca_sub * var_chaste_interface__j_SRCarel__O * var_j_SRCarel__kiSRCa; // 1 / millisecond
        const double d_dt_chaste_interface_var_j_SRCarel__R = var_chaste_interface__j_SRCarel__O * var_j_SRCarel__kom + var_chaste_interface__j_SRCarel__RI * var_j_SRCarel__kim - pow(var_chaste_interface__calcium_dynamics__Ca_sub, 2) * var_chaste_interface__j_SRCarel__R * var_j_SRCarel__koSRCa - var_chaste_interface__calcium_dynamics__Ca_sub * var_chaste_interface__j_SRCarel__R * var_j_SRCarel__kiSRCa; // 1 / millisecond
        const double d_dt_chaste_interface_var_j_SRCarel__RI = var_chaste_interface__j_SRCarel__I * var_j_SRCarel__kom - var_chaste_interface__j_SRCarel__RI * var_j_SRCarel__kim + var_chaste_interface__calcium_dynamics__Ca_sub * var_chaste_interface__j_SRCarel__R * var_j_SRCarel__kiSRCa - pow(var_chaste_interface__calcium_dynamics__Ca_sub, 2) * var_chaste_interface__j_SRCarel__RI * var_j_SRCarel__koSRCa; // 1 / millisecond
        const double var_j_SRCarel__ks = 250000.0; // per_millisecond
        const double var_j_SRCarel__j_SRCarel = (-var_chaste_interface__calcium_dynamics__Ca_sub + var_chaste_interface__calcium_dynamics__Ca_jsr) * var_chaste_interface__j_SRCarel__O * var_j_SRCarel__ks; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_jsr = -var_j_SRCarel__j_SRCarel - var_calcium_buffering__CQ_tot * var_calcium_buffering__delta_fCQ + var_intracellular_calcium_fluxes__j_tr; // millimolar / millisecond
        const double var_i_CaL__i_CaL = (-var_i_CaL__E_CaL + var_chaste_interface__Vm__Vm) * mParameters[5] * var_chaste_interface__i_CaL_dL_gate__dL * var_chaste_interface__i_CaL_fCa_gate__fCa * var_chaste_interface__i_CaL_fL_gate__fL * mParameters[9]; // picoA
        const double var_i_CaT__i_CaT = (-var_i_CaT__E_CaT + var_chaste_interface__Vm__Vm) * var_i_CaT__g_CaT * var_chaste_interface__i_CaT_dT_gate__dT * var_chaste_interface__i_CaT_fT_gate__fT * mParameters[9]; // picoA
        const double var_i_b_Ca__i_b_Ca = (-var_i_CaL__E_CaL + var_chaste_interface__Vm__Vm) * var_i_b_Ca__g_b_Ca * mParameters[9]; // picoA
        const double var_model_parameters__F = 96485.0; // coulomb_per_mole
        const double var_model_parameters__L_cell = 70.0; // micrometre
        const double var_model_parameters__L_sub = 0.02; // micrometre
        const double var_model_parameters__Mgi = 2.5; // millimolar
        const double var_calcium_buffering__delta_fTMM = -var_chaste_interface__calcium_buffering__fTMM * var_calcium_buffering__kb_TMM + (1.0 - var_chaste_interface__calcium_buffering__fTMC - var_chaste_interface__calcium_buffering__fTMM) * var_calcium_buffering__kf_TMM * var_model_parameters__Mgi; // per_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__fTMM = var_calcium_buffering__delta_fTMM; // 1 / millisecond
        const double var_i_NaCa__k43 = mParameters[1] / (var_i_NaCa__K3ni + mParameters[1]); // dimensionless
        const double var_i_NaCa__k34 = mParameters[4] / (var_i_NaCa__K3no + mParameters[4]); // dimensionless
        const double var_model_parameters__R = 8314.3999999999996; // joule_per_kilomole_kelvin
        const double var_model_parameters__R_cell = 4.0; // micrometre
        const double var_model_parameters__T = 310.14999999999998; // kelvin
        const double var_i_NaCa__RTOnF = var_model_parameters__R * var_model_parameters__T / var_model_parameters__F; // millivolt
        const double var_i_NaCa__di = 1.0 + (1.0 + (1.0 + mParameters[1] / var_i_NaCa__K3ni) * mParameters[1] / var_i_NaCa__K2ni) * mParameters[1] / var_i_NaCa__K1ni + (1.0 + mParameters[1] / var_i_NaCa__Kcni + exp(-var_chaste_interface__Vm__Vm * var_i_NaCa__Qci / var_i_NaCa__RTOnF)) * var_chaste_interface__calcium_dynamics__Ca_sub / var_i_NaCa__Kci; // dimensionless
        const double var_i_NaCa__do = 1.0 + (1.0 + (1.0 + mParameters[4] / var_i_NaCa__K3no) * mParameters[4] / var_i_NaCa__K2no) * mParameters[4] / var_i_NaCa__K1no + (1.0 + exp(var_chaste_interface__Vm__Vm * var_i_NaCa__Qco / var_i_NaCa__RTOnF)) * mParameters[2] / var_i_NaCa__Kco; // dimensionless
        const double var_i_NaCa__k12 = var_chaste_interface__calcium_dynamics__Ca_sub * exp(-var_chaste_interface__Vm__Vm * var_i_NaCa__Qci / var_i_NaCa__RTOnF) / (var_i_NaCa__Kci * var_i_NaCa__di); // dimensionless
        const double var_i_NaCa__k14 = pow(mParameters[1], 2) * (1.0 + mParameters[1] / var_i_NaCa__K3ni) * exp(0.5 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qn / var_i_NaCa__RTOnF) / (var_i_NaCa__K1ni * var_i_NaCa__K2ni * var_i_NaCa__di); // dimensionless
        const double var_i_NaCa__k21 = mParameters[2] * exp(var_chaste_interface__Vm__Vm * var_i_NaCa__Qco / var_i_NaCa__RTOnF) / (var_i_NaCa__Kco * var_i_NaCa__do); // dimensionless
        const double var_i_NaCa__k23 = pow(mParameters[4], 2) * (1.0 + mParameters[4] / var_i_NaCa__K3no) * exp(-0.5 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qn / var_i_NaCa__RTOnF) / (var_i_NaCa__K1no * var_i_NaCa__K2no * var_i_NaCa__do); // dimensionless
        const double var_i_NaCa__k32 = exp(0.5 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qn / var_i_NaCa__RTOnF); // dimensionless
        const double var_i_NaCa__k41 = exp(-0.5 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qn / var_i_NaCa__RTOnF); // dimensionless
        const double var_i_NaCa__x1 = (var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k34 * var_i_NaCa__k41 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k21 * var_i_NaCa__k32; // dimensionless
        const double var_i_NaCa__x2 = (var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k32 * var_i_NaCa__k43 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k12 * var_i_NaCa__k41; // dimensionless
        const double var_i_NaCa__x3 = (var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k14 * var_i_NaCa__k43 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k12 * var_i_NaCa__k23; // dimensionless
        const double var_i_NaCa__x4 = (var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k23 * var_i_NaCa__k34 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k14 * var_i_NaCa__k21; // dimensionless
        const double var_i_NaCa__i_NaCa = (var_i_NaCa__k21 * var_i_NaCa__x2 - var_i_NaCa__k12 * var_i_NaCa__x1) * var_i_NaCa__kNaCa * mParameters[9] / (var_i_NaCa__x1 + var_i_NaCa__x2 + var_i_NaCa__x3 + var_i_NaCa__x4); // picoA
        const double var_model_parameters__V_cell = 0.001 * M_PI * pow(var_model_parameters__R_cell, 2) * var_model_parameters__L_cell; // picolitre
        const double var_model_parameters__V_i_part = 0.46000000000000002; // dimensionless
        const double var_model_parameters__V_jsr_part = 0.0011999999999999999; // dimensionless
        const double var_model_parameters__V_jsr = var_model_parameters__V_cell * var_model_parameters__V_jsr_part; // picolitre
        const double var_model_parameters__V_nsr_part = 0.011599999999999999; // dimensionless
        const double var_model_parameters__V_nsr = var_model_parameters__V_cell * var_model_parameters__V_nsr_part; // picolitre
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_nsr = -var_intracellular_calcium_fluxes__j_tr * var_model_parameters__V_jsr / var_model_parameters__V_nsr + var_intracellular_calcium_fluxes__j_up; // millimolar / millisecond
        const double var_model_parameters__V_sub = 0.002 * M_PI * (-0.5 * var_model_parameters__L_sub + var_model_parameters__R_cell) * var_model_parameters__L_cell * var_model_parameters__L_sub; // picolitre
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_sub = -var_intracellular_calcium_fluxes__j_Ca_dif - var_calcium_buffering__CM_tot * var_calcium_buffering__delta_fCMs + var_j_SRCarel__j_SRCarel * var_model_parameters__V_jsr / var_model_parameters__V_sub - 0.5 * (-2.0 * var_i_NaCa__i_NaCa + var_i_CaL__i_CaL + var_i_CaT__i_CaT + var_i_b_Ca__i_b_Ca) / (var_model_parameters__F * var_model_parameters__V_sub); // millimolar / millisecond
        const double var_model_parameters__V_i = -var_model_parameters__V_sub + var_model_parameters__V_cell * var_model_parameters__V_i_part; // picolitre
        const double d_dt_chaste_interface_var_calcium_dynamics__Cai = (var_intracellular_calcium_fluxes__j_Ca_dif * var_model_parameters__V_sub - var_intracellular_calcium_fluxes__j_up * var_model_parameters__V_nsr) / var_model_parameters__V_i - var_calcium_buffering__CM_tot * var_calcium_buffering__delta_fCMi - var_calcium_buffering__TC_tot * var_calcium_buffering__delta_fTC - var_calcium_buffering__TMC_tot * var_calcium_buffering__delta_fTMC; // millimolar / millisecond
        
        rResidual[9] = rCurrentGuess[9] - rY[1] - mDt*d_dt_chaste_interface_var_calcium_dynamics__Cai;
        rResidual[10] = rCurrentGuess[10] - rY[4] - mDt*d_dt_chaste_interface_var_i_CaL_fCa_gate__fCa;
        rResidual[13] = rCurrentGuess[13] - rY[16] - mDt*d_dt_chaste_interface_var_j_SRCarel__R;
        rResidual[12] = rCurrentGuess[12] - rY[17] - mDt*d_dt_chaste_interface_var_j_SRCarel__O;
        rResidual[11] = rCurrentGuess[11] - rY[18] - mDt*d_dt_chaste_interface_var_j_SRCarel__I;
        rResidual[14] = rCurrentGuess[14] - rY[19] - mDt*d_dt_chaste_interface_var_j_SRCarel__RI;
        rResidual[5] = rCurrentGuess[5] - rY[20] - mDt*d_dt_chaste_interface_var_calcium_buffering__fTMM;
        rResidual[0] = rCurrentGuess[0] - rY[21] - mDt*d_dt_chaste_interface_var_calcium_buffering__fCMi;
        rResidual[1] = rCurrentGuess[1] - rY[22] - mDt*d_dt_chaste_interface_var_calcium_buffering__fCMs;
        rResidual[3] = rCurrentGuess[3] - rY[23] - mDt*d_dt_chaste_interface_var_calcium_buffering__fTC;
        rResidual[4] = rCurrentGuess[4] - rY[24] - mDt*d_dt_chaste_interface_var_calcium_buffering__fTMC;
        rResidual[2] = rCurrentGuess[2] - rY[25] - mDt*d_dt_chaste_interface_var_calcium_buffering__fCQ;
        rResidual[7] = rCurrentGuess[7] - rY[26] - mDt*d_dt_chaste_interface_var_calcium_dynamics__Ca_nsr;
        rResidual[6] = rCurrentGuess[6] - rY[27] - mDt*d_dt_chaste_interface_var_calcium_dynamics__Ca_jsr;
        rResidual[8] = rCurrentGuess[8] - rY[28] - mDt*d_dt_chaste_interface_var_calcium_dynamics__Ca_sub;
    }

    void Cellmaltsev_2009FromCellMLBackwardEulerNoLut::ComputeJacobian(double var_chaste_interface__environment__time, const double rCurrentGuess[15], double rJacobian[15][15])
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__i_CaL_dL_gate__dL = rY[2];
        // Units: dimensionless; Initial value: 0.000584545564405
        double var_chaste_interface__i_CaL_fL_gate__fL = rY[3];
        // Units: dimensionless; Initial value: 0.862381249774
        
        double var_chaste_interface__calcium_buffering__fCMi = rCurrentGuess[0];
        double var_chaste_interface__calcium_buffering__fCMs = rCurrentGuess[1];
        double var_chaste_interface__calcium_buffering__fCQ = rCurrentGuess[2];
        double var_chaste_interface__calcium_buffering__fTC = rCurrentGuess[3];
        double var_chaste_interface__calcium_buffering__fTMC = rCurrentGuess[4];
        double var_chaste_interface__calcium_buffering__fTMM = rCurrentGuess[5];
        double var_chaste_interface__calcium_dynamics__Ca_jsr = rCurrentGuess[6];
        double var_chaste_interface__calcium_dynamics__Ca_sub = rCurrentGuess[8];
        double var_chaste_interface__calcium_dynamics__Cai = rCurrentGuess[9];
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rCurrentGuess[10];
        double var_chaste_interface__j_SRCarel__O = rCurrentGuess[12];
        double var_chaste_interface__j_SRCarel__R = rCurrentGuess[13];
        double var_chaste_interface__j_SRCarel__RI = rCurrentGuess[14];
        
        const double var_x0 = -227.69999999999999 * var_chaste_interface__calcium_dynamics__Cai;
        const double var_x1 = 250000.0 * var_chaste_interface__j_SRCarel__O;
        const double var_x2 = 1 / (pow((1.0 + 0.00059999999999999995 / var_chaste_interface__calcium_dynamics__Cai), 2) * pow(var_chaste_interface__calcium_dynamics__Cai, 2));
        const double var_x3 = 30075.187969924809 * var_chaste_interface__j_SRCarel__O;
        const double var_x4 = exp(-0.0051222473865587962 * var_chaste_interface__Vm__Vm);
        const double var_x5 = 1.0 + 0.037821482602117998 * mParameters[1];
        const double var_x6 = (var_x4 + var_x5) * var_chaste_interface__calcium_dynamics__Ca_sub;
        const double var_x7 = (1.0 + 0.43687199650502401 * var_x5 * mParameters[1]) * mParameters[1];
        const double var_x8 = 1 / (1.0 + 48.309178743961354 * var_x6 + 0.0025297242600556538 * var_x7);
        const double var_x9 = 0.0011051656880977081 * var_x8;
        const double var_x10 = 1 / (26.440000000000001 + mParameters[1]);
        const double var_x11 = 0.27300027300027302 * mParameters[2];
        const double var_x12 = exp(0);
        const double var_x13 = 1.0 + 0.2144542140253056 * mParameters[4];
        const double var_x14 = 1 / (1.0 + var_x11 * (1.0 + var_x12) + 0.00061425061425061424 * (1.0 + 0.0017812611328820807 * var_x13 * mParameters[4]) * mParameters[4]);
        const double var_x15 = var_x12 * var_x14;
        const double var_x16 = var_x11 * var_x15;
        const double var_x17 = pow(mParameters[4], 2);
        const double var_x18 = 0.0080724972509135153 * var_chaste_interface__Vm__Vm;
        const double var_x19 = exp(-var_x18);
        const double var_x20 = var_x13 * var_x14 * var_x19;
        const double var_x21 = 1.094140745013563e-6 * var_x20;
        const double var_x22 = var_x17 * var_x21;
        const double var_x23 = var_x16 + var_x22;
        const double var_x24 = exp(var_x18);
        const double var_x25 = var_x24 * var_x5;
        const double var_x26 = var_x10 * var_x23 * var_x25 * pow(mParameters[1], 3);
        const double var_x27 = 1 / (4.6630000000000003 + mParameters[4]);
        const double var_x28 = 48.309178743961354 * var_x4;
        const double var_x29 = var_x28 * var_x8;
        const double var_x30 = var_x29 * var_chaste_interface__calcium_dynamics__Ca_sub;
        const double var_x31 = var_x25 * pow(mParameters[1], 2);
        const double var_x32 = var_x30 + var_x31 * var_x9;
        const double var_x33 = pow(mParameters[4], 3);
        const double var_x34 = var_x27 * var_x32 * var_x33;
        const double var_x35 = var_x27 * mParameters[4];
        const double var_x36 = var_x24 + var_x35;
        const double var_x37 = var_x15 * mParameters[2];
        const double var_x38 = var_x31 * var_x36 * var_x37;
        const double var_x39 = var_x38 * var_x8;
        const double var_x40 = var_x4 * var_chaste_interface__calcium_dynamics__Ca_sub;
        const double var_x41 = var_x40 * var_x8;
        const double var_x42 = var_x10 * mParameters[1];
        const double var_x43 = var_x19 + var_x42;
        const double var_x44 = var_x17 * var_x43;
        const double var_x45 = 5.285704082191126e-5 * var_x20 * var_x44;
        const double var_x46 = var_x19 * var_x23 * var_x35;
        const double var_x47 = var_x24 * var_x43;
        const double var_x48 = var_x46 + var_x16 * var_x47;
        const double var_x49 = var_x24 * var_x42;
        const double var_x50 = var_x32 * var_x49;
        const double var_x51 = var_x19 * var_x36;
        const double var_x52 = var_x50 + var_x30 * var_x51;
        const double var_x53 = (-48.309178743961354 - var_x28 - 1.8271247633873431 * mParameters[1]) / pow((0.0207 + var_x6 + 5.2365292183152033e-5 * var_x7), 2);
        const double var_x54 = var_x40 * var_x53;
        const double var_x55 = 0.0207 * var_x54;
        const double var_x56 = 4.7355244569298691e-7 * var_x53;
        const double var_x57 = var_x29 + var_x55 + var_x31 * var_x56;
        const double var_x58 = var_x49 * var_x57;
        const double var_x59 = var_x29 * var_x51;
        const double var_x60 = var_x51 * var_x55;
        const double var_x61 = 2.2648713421780755e-8 * var_x20;
        const double var_x62 = 1 / M_PI;
        const double var_x63 = 0.00046385183192065399 * var_x62;
        const double var_x64 = 14.1174 * var_chaste_interface__calcium_dynamics__Cai;
        const double var_x65 = 0.00035 + var_chaste_interface__calcium_dynamics__Ca_sub;
        const double var_x66 = 60.000000000000007 * var_chaste_interface__calcium_dynamics__Ca_sub;
        const double var_x67 = 1 / var_chaste_interface__calcium_dynamics__Ca_jsr;
        const double var_x68 = pow(var_x67, 2.5);
        const double var_x69 = 1.0 + 0.13584112963311223 * var_x68;
        const double var_x70 = var_x67 * var_x68 / pow(var_x69, 2);
        const double var_x71 = 2.3772197685794643 * var_x70 * var_chaste_interface__calcium_dynamics__Ca_sub;
        const double var_x72 = var_x71 * var_chaste_interface__j_SRCarel__O;
        const double var_x73 = pow(var_chaste_interface__calcium_dynamics__Ca_sub, 2);
        const double var_x74 = 1 / var_x69;
        const double var_x75 = 0.21130842387373014 * var_x70 * var_x73 / pow((1 - 0.93333333333333335 * var_x74), 2);
        const double var_x76 = var_x75 * var_chaste_interface__j_SRCarel__RI;
        const double var_x77 = 7.0 * var_x74;
        const double var_x78 = 7.5 - var_x77;
        const double var_x79 = 1 / (15.0 - 14.0 * var_x74);
        const double var_x80 = 20.0 * var_x79 * var_chaste_interface__calcium_dynamics__Ca_sub;
        const double var_x81 = var_x80 * var_chaste_interface__j_SRCarel__RI;
        const double var_x82 = var_x78 * var_chaste_interface__calcium_dynamics__Ca_sub;
        const double var_x83 = 10.0 * var_x73 * var_x79;
        const double var_x84 = var_x75 * var_chaste_interface__j_SRCarel__R;
        const double var_x85 = -7.5 + var_x77;
        const double var_x86 = var_x80 * var_chaste_interface__j_SRCarel__R;
        const double var_x87 = var_x85 * var_chaste_interface__calcium_dynamics__Ca_sub;
        const double var_x88 = var_x71 * var_chaste_interface__j_SRCarel__R;
        const double var_x89 = -var_x83;
        
        
        rJacobian[0][0] = 1.0 - (mDt * (-0.54200000000000004 + var_x0));
        rJacobian[0][1] = 0.0;
        rJacobian[0][2] = 0.0;
        rJacobian[0][3] = 0.0;
        rJacobian[0][4] = 0.0;
        rJacobian[0][5] = 0.0;
        rJacobian[0][6] = 0.0;
        rJacobian[0][7] = 0.0;
        rJacobian[0][8] = 0.0;
        rJacobian[0][9] = -(mDt * (227.69999999999999 - 227.69999999999999 * var_chaste_interface__calcium_buffering__fCMi));
        rJacobian[0][10] = 0.0;
        rJacobian[0][11] = 0.0;
        rJacobian[0][12] = 0.0;
        rJacobian[0][13] = 0.0;
        rJacobian[0][14] = 0.0;
        rJacobian[1][0] = 0.0;
        rJacobian[1][1] = 1.0 - (mDt * (-0.54200000000000004 - 227.69999999999999 * var_chaste_interface__calcium_dynamics__Ca_sub));
        rJacobian[1][2] = 0.0;
        rJacobian[1][3] = 0.0;
        rJacobian[1][4] = 0.0;
        rJacobian[1][5] = 0.0;
        rJacobian[1][6] = 0.0;
        rJacobian[1][7] = 0.0;
        rJacobian[1][8] = -(mDt * (227.69999999999999 - 227.69999999999999 * var_chaste_interface__calcium_buffering__fCMs));
        rJacobian[1][9] = 0.0;
        rJacobian[1][10] = 0.0;
        rJacobian[1][11] = 0.0;
        rJacobian[1][12] = 0.0;
        rJacobian[1][13] = 0.0;
        rJacobian[1][14] = 0.0;
        rJacobian[2][0] = 0.0;
        rJacobian[2][1] = 0.0;
        rJacobian[2][2] = 1.0 - (mDt * (-0.44500000000000001 - 0.53400000000000003 * var_chaste_interface__calcium_dynamics__Ca_jsr));
        rJacobian[2][3] = 0.0;
        rJacobian[2][4] = 0.0;
        rJacobian[2][5] = 0.0;
        rJacobian[2][6] = -(mDt * (0.53400000000000003 - 0.53400000000000003 * var_chaste_interface__calcium_buffering__fCQ));
        rJacobian[2][7] = 0.0;
        rJacobian[2][8] = 0.0;
        rJacobian[2][9] = 0.0;
        rJacobian[2][10] = 0.0;
        rJacobian[2][11] = 0.0;
        rJacobian[2][12] = 0.0;
        rJacobian[2][13] = 0.0;
        rJacobian[2][14] = 0.0;
        rJacobian[3][0] = 0.0;
        rJacobian[3][1] = 0.0;
        rJacobian[3][2] = 0.0;
        rJacobian[3][3] = 1.0 - (mDt * (-0.44600000000000001 - 88.799999999999997 * var_chaste_interface__calcium_dynamics__Cai));
        rJacobian[3][4] = 0.0;
        rJacobian[3][5] = 0.0;
        rJacobian[3][6] = 0.0;
        rJacobian[3][7] = 0.0;
        rJacobian[3][8] = 0.0;
        rJacobian[3][9] = -(mDt * (88.799999999999997 - 88.799999999999997 * var_chaste_interface__calcium_buffering__fTC));
        rJacobian[3][10] = 0.0;
        rJacobian[3][11] = 0.0;
        rJacobian[3][12] = 0.0;
        rJacobian[3][13] = 0.0;
        rJacobian[3][14] = 0.0;
        rJacobian[4][0] = 0.0;
        rJacobian[4][1] = 0.0;
        rJacobian[4][2] = 0.0;
        rJacobian[4][3] = 0.0;
        rJacobian[4][4] = 1.0 - (mDt * (-0.0075100000000000002 + var_x0));
        rJacobian[4][5] = -(mDt * (var_x0));
        rJacobian[4][6] = 0.0;
        rJacobian[4][7] = 0.0;
        rJacobian[4][8] = 0.0;
        rJacobian[4][9] = -(mDt * (227.69999999999999 - 227.69999999999999 * var_chaste_interface__calcium_buffering__fTMC - 227.69999999999999 * var_chaste_interface__calcium_buffering__fTMM));
        rJacobian[4][10] = 0.0;
        rJacobian[4][11] = 0.0;
        rJacobian[4][12] = 0.0;
        rJacobian[4][13] = 0.0;
        rJacobian[4][14] = 0.0;
        rJacobian[5][0] = 0.0;
        rJacobian[5][1] = 0.0;
        rJacobian[5][2] = 0.0;
        rJacobian[5][3] = 0.0;
        rJacobian[5][4] = -(mDt * (-5.6925000000000008));
        rJacobian[5][5] = 1.0 - (mDt * (-6.4435000000000002));
        rJacobian[5][6] = 0.0;
        rJacobian[5][7] = 0.0;
        rJacobian[5][8] = 0.0;
        rJacobian[5][9] = 0.0;
        rJacobian[5][10] = 0.0;
        rJacobian[5][11] = 0.0;
        rJacobian[5][12] = 0.0;
        rJacobian[5][13] = 0.0;
        rJacobian[5][14] = 0.0;
        rJacobian[6][0] = 0.0;
        rJacobian[6][1] = 0.0;
        rJacobian[6][2] = -(mDt * (4.4500000000000002 + 5.3399999999999999 * var_chaste_interface__calcium_dynamics__Ca_jsr));
        rJacobian[6][3] = 0.0;
        rJacobian[6][4] = 0.0;
        rJacobian[6][5] = 0.0;
        rJacobian[6][6] = 1.0 - (mDt * (-5.3650000000000002 - var_x1 + 5.3399999999999999 * var_chaste_interface__calcium_buffering__fCQ));
        rJacobian[6][7] = -(mDt * (0.025000000000000001));
        rJacobian[6][8] = -(mDt * (var_x1));
        rJacobian[6][9] = 0.0;
        rJacobian[6][10] = 0.0;
        rJacobian[6][11] = 0.0;
        rJacobian[6][12] = -(mDt * (250000.0 * var_chaste_interface__calcium_dynamics__Ca_sub - 250000.0 * var_chaste_interface__calcium_dynamics__Ca_jsr));
        rJacobian[6][13] = 0.0;
        rJacobian[6][14] = 0.0;
        rJacobian[7][0] = 0.0;
        rJacobian[7][1] = 0.0;
        rJacobian[7][2] = 0.0;
        rJacobian[7][3] = 0.0;
        rJacobian[7][4] = 0.0;
        rJacobian[7][5] = 0.0;
        rJacobian[7][6] = -(mDt * (0.0025862068965517241));
        rJacobian[7][7] = 1.0 - (mDt * (-0.0025862068965517241));
        rJacobian[7][8] = 0.0;
        rJacobian[7][9] = -(mDt * (7.1999999999999997e-6 * var_x2));
        rJacobian[7][10] = 0.0;
        rJacobian[7][11] = 0.0;
        rJacobian[7][12] = 0.0;
        rJacobian[7][13] = 0.0;
        rJacobian[7][14] = 0.0;
        rJacobian[8][0] = 0.0;
        rJacobian[8][1] = -(mDt * (0.024390000000000002 + 10.246499999999999 * var_chaste_interface__calcium_dynamics__Ca_sub));
        rJacobian[8][2] = 0.0;
        rJacobian[8][3] = 0.0;
        rJacobian[8][4] = 0.0;
        rJacobian[8][5] = 0.0;
        rJacobian[8][6] = -(mDt * (var_x3));
        rJacobian[8][7] = 0.0;
        rJacobian[8][8] = 1.0 - (mDt * (-35.246499999999997 - var_x3 + 10.246499999999999 * var_chaste_interface__calcium_buffering__fCMs - var_x63 * (-375.0 * (var_x16 * (var_x58 + var_x59 + var_x60) - var_x29 * var_x48 - var_x48 * var_x55) * mParameters[9] / (var_x48 + var_x52 + 0.00030171053456120889 * var_x39 + var_x21 * var_x34 + var_x26 * var_x9 + var_x41 * var_x45) - 0.16068374999999999 * (var_x16 * var_x52 - var_x30 * var_x48) * (-var_x58 - var_x59 - var_x60 - var_x26 * var_x56 - 1.2927994695413239e-7 * var_x38 * var_x53 - var_x4 * var_x45 * var_x8 - var_x44 * var_x54 * var_x61 - var_x21 * var_x27 * var_x33 * var_x57) * mParameters[9] / pow((0.0207 * var_x46 + 0.0207 * var_x50 + 6.2454080654170234e-6 * var_x39 + var_x34 * var_x61 + var_x41 * var_x51 + 2.2876929743622558e-5 * var_x26 * var_x8 + 0.0056511056511056512 * var_x37 * var_x47 + var_x22 * var_x41 * var_x43), 2))));
        rJacobian[8][9] = -(mDt * (25.0));
        rJacobian[8][10] = -(mDt * (-var_x63 * (-45.0 + var_chaste_interface__Vm__Vm) * mParameters[5] * var_chaste_interface__i_CaL_dL_gate__dL * var_chaste_interface__i_CaL_fL_gate__fL * mParameters[9]));
        rJacobian[8][11] = 0.0;
        rJacobian[8][12] = -(mDt * (30075.187969924809 * var_chaste_interface__calcium_dynamics__Ca_jsr - 30075.187969924809 * var_chaste_interface__calcium_dynamics__Ca_sub));
        rJacobian[8][13] = 0.0;
        rJacobian[8][14] = 0.0;
        rJacobian[9][0] = -(mDt * (0.024390000000000002 + 10.246499999999999 * var_chaste_interface__calcium_dynamics__Cai));
        rJacobian[9][1] = 0.0;
        rJacobian[9][2] = 0.0;
        rJacobian[9][3] = -(mDt * (0.013826 + 2.7527999999999997 * var_chaste_interface__calcium_dynamics__Cai));
        rJacobian[9][4] = -(mDt * (0.00046562000000000003 + var_x64));
        rJacobian[9][5] = -(mDt * (var_x64));
        rJacobian[9][6] = 0.0;
        rJacobian[9][7] = 0.0;
        rJacobian[9][8] = -(mDt * (0.55413588133992553));
        rJacobian[9][9] = 1.0 - (mDt * (-27.116699999999998 + 10.246499999999999 * var_chaste_interface__calcium_buffering__fCMi + 2.7527999999999997 * var_chaste_interface__calcium_buffering__fTC + 14.1174 * var_chaste_interface__calcium_buffering__fTMC + 14.1174 * var_chaste_interface__calcium_buffering__fTMM + 1.9840167609735966 * var_x62 * (-0.27929999999999999 * M_PI - 9.3542399999999987e-8 * M_PI * var_x2)));
        rJacobian[9][10] = 0.0;
        rJacobian[9][11] = 0.0;
        rJacobian[9][12] = 0.0;
        rJacobian[9][13] = 0.0;
        rJacobian[9][14] = 0.0;
        rJacobian[10][0] = 0.0;
        rJacobian[10][1] = 0.0;
        rJacobian[10][2] = 0.0;
        rJacobian[10][3] = 0.0;
        rJacobian[10][4] = 0.0;
        rJacobian[10][5] = 0.0;
        rJacobian[10][6] = 0.0;
        rJacobian[10][7] = 0.0;
        rJacobian[10][8] = -(mDt * (0.021000000000000001 / var_x65 - 60.000000000000007 * var_chaste_interface__i_CaL_fCa_gate__fCa - 0.00035 * (0.021000000000000001 + var_x66) / pow(var_x65, 2)));
        rJacobian[10][9] = 0.0;
        rJacobian[10][10] = 1.0 - (mDt * (-0.021000000000000001 - var_x66));
        rJacobian[10][11] = 0.0;
        rJacobian[10][12] = 0.0;
        rJacobian[10][13] = 0.0;
        rJacobian[10][14] = 0.0;
        rJacobian[11][0] = 0.0;
        rJacobian[11][1] = 0.0;
        rJacobian[11][2] = 0.0;
        rJacobian[11][3] = 0.0;
        rJacobian[11][4] = 0.0;
        rJacobian[11][5] = 0.0;
        rJacobian[11][6] = -(mDt * (var_x76 - var_x72));
        rJacobian[11][7] = 0.0;
        rJacobian[11][8] = -(mDt * (var_x81 + var_x78 * var_chaste_interface__j_SRCarel__O));
        rJacobian[11][9] = 0.0;
        rJacobian[11][10] = 0.0;
        rJacobian[11][11] = 1.0 - (mDt * (-0.065000000000000002));
        rJacobian[11][12] = -(mDt * (var_x82));
        rJacobian[11][13] = 0.0;
        rJacobian[11][14] = -(mDt * (var_x83));
        rJacobian[12][0] = 0.0;
        rJacobian[12][1] = 0.0;
        rJacobian[12][2] = 0.0;
        rJacobian[12][3] = 0.0;
        rJacobian[12][4] = 0.0;
        rJacobian[12][5] = 0.0;
        rJacobian[12][6] = -(mDt * (var_x72 + var_x84));
        rJacobian[12][7] = 0.0;
        rJacobian[12][8] = -(mDt * (var_x86 + var_x85 * var_chaste_interface__j_SRCarel__O));
        rJacobian[12][9] = 0.0;
        rJacobian[12][10] = 0.0;
        rJacobian[12][11] = -(mDt * (0.0050000000000000001));
        rJacobian[12][12] = 1.0 - (mDt * (-0.059999999999999998 + var_x87));
        rJacobian[12][13] = -(mDt * (var_x83));
        rJacobian[12][14] = 0.0;
        rJacobian[13][0] = 0.0;
        rJacobian[13][1] = 0.0;
        rJacobian[13][2] = 0.0;
        rJacobian[13][3] = 0.0;
        rJacobian[13][4] = 0.0;
        rJacobian[13][5] = 0.0;
        rJacobian[13][6] = -(mDt * (var_x88 - var_x84));
        rJacobian[13][7] = 0.0;
        rJacobian[13][8] = -(mDt * (-var_x86 + var_x85 * var_chaste_interface__j_SRCarel__R));
        rJacobian[13][9] = 0.0;
        rJacobian[13][10] = 0.0;
        rJacobian[13][11] = 0.0;
        rJacobian[13][12] = -(mDt * (0.059999999999999998));
        rJacobian[13][13] = 1.0 - (mDt * (var_x87 + var_x89));
        rJacobian[13][14] = -(mDt * (0.0050000000000000001));
        rJacobian[14][0] = 0.0;
        rJacobian[14][1] = 0.0;
        rJacobian[14][2] = 0.0;
        rJacobian[14][3] = 0.0;
        rJacobian[14][4] = 0.0;
        rJacobian[14][5] = 0.0;
        rJacobian[14][6] = -(mDt * (-var_x76 - var_x88));
        rJacobian[14][7] = 0.0;
        rJacobian[14][8] = -(mDt * (-var_x81 + var_x78 * var_chaste_interface__j_SRCarel__R));
        rJacobian[14][9] = 0.0;
        rJacobian[14][10] = 0.0;
        rJacobian[14][11] = -(mDt * (0.059999999999999998));
        rJacobian[14][12] = 0.0;
        rJacobian[14][13] = -(mDt * (var_x82));
        rJacobian[14][14] = 1.0 - (mDt * (-0.0050000000000000001 + var_x89));
    }

    void Cellmaltsev_2009FromCellMLBackwardEulerNoLut::UpdateTransmembranePotential(double var_chaste_interface__environment__time)
    {
        // Time units: millisecond
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__i_CaL_dL_gate__dL = rY[2];
        // Units: dimensionless; Initial value: 0.000584545564405
        double var_chaste_interface__i_CaL_fL_gate__fL = rY[3];
        // Units: dimensionless; Initial value: 0.862381249774
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[4];
        // Units: dimensionless; Initial value: 0.711395919653
        double var_chaste_interface__i_CaT_dT_gate__dT = rY[5];
        // Units: dimensionless; Initial value: 0.00504393374639
        double var_chaste_interface__i_CaT_fT_gate__fT = rY[6];
        // Units: dimensionless; Initial value: 0.420757825415
        double var_chaste_interface__i_Kr_pa_gate__paS = rY[7];
        // Units: dimensionless; Initial value: 0.453100576739
        double var_chaste_interface__i_Kr_pa_gate__paF = rY[8];
        // Units: dimensionless; Initial value: 0.144755091176
        double var_chaste_interface__i_Kr_pi_gate__pi_ = rY[9];
        // Units: dimensionless; Initial value: 0.849409822329
        double var_chaste_interface__i_Ks_n_gate__n = rY[10];
        // Units: dimensionless; Initial value: 0.0264600410928
        double var_chaste_interface__AP_sensitive_currents_q_gate__q = rY[11];
        // Units: dimensionless; Initial value: 0.694241313965
        double var_chaste_interface__AP_sensitive_currents_r_gate__r = rY[12];
        // Units: dimensionless; Initial value: 0.00558131733359
        double var_chaste_interface__i_f_y_gate__y = rY[13];
        // Units: dimensionless; Initial value: 0.113643187247
        double var_chaste_interface__i_st_qa_gate__qa = rY[14];
        // Units: dimensionless; Initial value: 0.42380243163
        double var_chaste_interface__i_st_qi_gate__qi = rY[15];
        // Units: dimensionless; Initial value: 0.447294008304
        double var_chaste_interface__calcium_dynamics__Ca_sub = rY[28];
        // Units: millimolar; Initial value: 0.000138112560112
        
        const double var_AP_sensitive_currents__g_sus = 0.02; // nanoS_per_picoF
        const double var_AP_sensitive_currents__g_to = 0.252; // nanoS_per_picoF
        const double var_i_CaL__E_CaL = 45.0; // millivolt
        const double var_i_CaT__E_CaT = 45.0; // millivolt
        const double var_i_CaT__g_CaT = 0.1832; // nanoS_per_picoF
        const double var_i_Ks__g_Ks = 0.025899999999999999; // nanoS_per_picoF
        const double var_i_NaCa__K1ni = 395.30000000000001; // millimolar
        const double var_i_NaCa__K1no = 1628.0; // millimolar
        const double var_i_NaCa__K2ni = 2.2890000000000001; // millimolar
        const double var_i_NaCa__K2no = 561.39999999999998; // millimolar
        const double var_i_NaCa__K3ni = 26.440000000000001; // millimolar
        const double var_i_NaCa__K3no = 4.6630000000000003; // millimolar
        const double var_i_NaCa__Kci = 0.0207; // millimolar
        const double var_i_NaCa__Kcni = 26.440000000000001; // millimolar
        const double var_i_NaCa__Kco = 3.6629999999999998; // millimolar
        const double var_i_NaCa__Qci = 0.13689999999999999; // dimensionless
        const double var_i_NaCa__Qco = 0; // dimensionless
        const double var_i_NaCa__Qn = 0.43149999999999999; // dimensionless
        const double var_i_NaCa__kNaCa = 187.5; // picoA_per_picoF
        const double var_i_NaK__Km_Kp = 1.3999999999999999; // millimolar
        const double var_i_NaK__Km_Nap = 14.0; // millimolar
        const double var_i_NaK__i_NaK_max = 2.8799999999999999; // picoA_per_picoF
        const double var_i_b_Ca__g_b_Ca = 0.00059999999999999995; // nanoS_per_picoF
        const double var_i_b_Na__g_b_Na = 0.0048599999999999997; // nanoS_per_picoF
        const double var_i_f__g_if = 0.14999999999999999; // nanoS_per_picoF
        const double var_i_st__E_st = 37.399999999999999; // millivolt
        const double var_i_st__g_st = 0.0030000000000000001; // nanoS_per_picoF
        const double var_i_CaL__i_CaL = (-var_i_CaL__E_CaL + var_chaste_interface__Vm__Vm) * mParameters[5] * var_chaste_interface__i_CaL_dL_gate__dL * var_chaste_interface__i_CaL_fCa_gate__fCa * var_chaste_interface__i_CaL_fL_gate__fL * mParameters[9]; // picoA
        const double var_i_CaT__i_CaT = (-var_i_CaT__E_CaT + var_chaste_interface__Vm__Vm) * var_i_CaT__g_CaT * var_chaste_interface__i_CaT_dT_gate__dT * var_chaste_interface__i_CaT_fT_gate__fT * mParameters[9]; // picoA
        const double var_i_b_Ca__i_b_Ca = (-var_i_CaL__E_CaL + var_chaste_interface__Vm__Vm) * var_i_b_Ca__g_b_Ca * mParameters[9]; // picoA
        const double var_i_st__i_st = (-var_i_st__E_st + var_chaste_interface__Vm__Vm) * var_i_st__g_st * var_chaste_interface__i_st_qa_gate__qa * var_chaste_interface__i_st_qi_gate__qi * mParameters[9]; // picoA
        const double var_model_parameters__F = 96485.0; // coulomb_per_mole
        const double var_i_NaCa__k43 = mParameters[1] / (var_i_NaCa__K3ni + mParameters[1]); // dimensionless
        const double var_i_NaCa__k34 = mParameters[4] / (var_i_NaCa__K3no + mParameters[4]); // dimensionless
        const double var_model_parameters__R = 8314.3999999999996; // joule_per_kilomole_kelvin
        const double var_model_parameters__T = 310.14999999999998; // kelvin
        const double var_electric_potentials__E_K = var_model_parameters__R * var_model_parameters__T * log(mParameters[3] / mParameters[0]) / var_model_parameters__F; // millivolt
        const double var_AP_sensitive_currents__i_sus = (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * var_AP_sensitive_currents__g_sus * var_chaste_interface__AP_sensitive_currents_r_gate__r * mParameters[9]; // picoA
        const double var_AP_sensitive_currents__i_to = (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * var_AP_sensitive_currents__g_to * var_chaste_interface__AP_sensitive_currents_q_gate__q * var_chaste_interface__AP_sensitive_currents_r_gate__r * mParameters[9]; // picoA
        const double var_electric_potentials__E_Ks = var_model_parameters__R * var_model_parameters__T * log((mParameters[3] + 0.12 * mParameters[4]) / (mParameters[0] + 0.12 * mParameters[1])) / var_model_parameters__F; // millivolt
        const double var_electric_potentials__E_Na = var_model_parameters__R * var_model_parameters__T * log(mParameters[4] / mParameters[1]) / var_model_parameters__F; // millivolt
        const double var_i_Kr__i_Kr = (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * (0.40000000000000002 * var_chaste_interface__i_Kr_pa_gate__paS + 0.59999999999999998 * var_chaste_interface__i_Kr_pa_gate__paF) * mParameters[8] * var_chaste_interface__i_Kr_pi_gate__pi_ * mParameters[9]; // picoA
        const double var_i_Ks__i_Ks = pow(var_chaste_interface__i_Ks_n_gate__n, 2) * (-var_electric_potentials__E_Ks + var_chaste_interface__Vm__Vm) * var_i_Ks__g_Ks * mParameters[9]; // picoA
        const double var_i_NaCa__RTOnF = var_model_parameters__R * var_model_parameters__T / var_model_parameters__F; // millivolt
        const double var_i_NaCa__di = 1.0 + (1.0 + (1.0 + mParameters[1] / var_i_NaCa__K3ni) * mParameters[1] / var_i_NaCa__K2ni) * mParameters[1] / var_i_NaCa__K1ni + (1.0 + mParameters[1] / var_i_NaCa__Kcni + exp(-var_chaste_interface__Vm__Vm * var_i_NaCa__Qci / var_i_NaCa__RTOnF)) * var_chaste_interface__calcium_dynamics__Ca_sub / var_i_NaCa__Kci; // dimensionless
        const double var_i_NaCa__do = 1.0 + (1.0 + (1.0 + mParameters[4] / var_i_NaCa__K3no) * mParameters[4] / var_i_NaCa__K2no) * mParameters[4] / var_i_NaCa__K1no + (1.0 + exp(var_chaste_interface__Vm__Vm * var_i_NaCa__Qco / var_i_NaCa__RTOnF)) * mParameters[2] / var_i_NaCa__Kco; // dimensionless
        const double var_i_NaCa__k12 = var_chaste_interface__calcium_dynamics__Ca_sub * exp(-var_chaste_interface__Vm__Vm * var_i_NaCa__Qci / var_i_NaCa__RTOnF) / (var_i_NaCa__Kci * var_i_NaCa__di); // dimensionless
        const double var_i_NaCa__k14 = pow(mParameters[1], 2) * (1.0 + mParameters[1] / var_i_NaCa__K3ni) * exp(0.5 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qn / var_i_NaCa__RTOnF) / (var_i_NaCa__K1ni * var_i_NaCa__K2ni * var_i_NaCa__di); // dimensionless
        const double var_i_NaCa__k21 = mParameters[2] * exp(var_chaste_interface__Vm__Vm * var_i_NaCa__Qco / var_i_NaCa__RTOnF) / (var_i_NaCa__Kco * var_i_NaCa__do); // dimensionless
        const double var_i_NaCa__k23 = pow(mParameters[4], 2) * (1.0 + mParameters[4] / var_i_NaCa__K3no) * exp(-0.5 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qn / var_i_NaCa__RTOnF) / (var_i_NaCa__K1no * var_i_NaCa__K2no * var_i_NaCa__do); // dimensionless
        const double var_i_NaCa__k32 = exp(0.5 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qn / var_i_NaCa__RTOnF); // dimensionless
        const double var_i_NaCa__k41 = exp(-0.5 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qn / var_i_NaCa__RTOnF); // dimensionless
        const double var_i_NaCa__x1 = (var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k34 * var_i_NaCa__k41 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k21 * var_i_NaCa__k32; // dimensionless
        const double var_i_NaCa__x2 = (var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k32 * var_i_NaCa__k43 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k12 * var_i_NaCa__k41; // dimensionless
        const double var_i_NaCa__x3 = (var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k14 * var_i_NaCa__k43 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k12 * var_i_NaCa__k23; // dimensionless
        const double var_i_NaCa__x4 = (var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k23 * var_i_NaCa__k34 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k14 * var_i_NaCa__k21; // dimensionless
        const double var_i_NaCa__i_NaCa = (var_i_NaCa__k21 * var_i_NaCa__x2 - var_i_NaCa__k12 * var_i_NaCa__x1) * var_i_NaCa__kNaCa * mParameters[9] / (var_i_NaCa__x1 + var_i_NaCa__x2 + var_i_NaCa__x3 + var_i_NaCa__x4); // picoA
        const double var_i_NaK__i_NaK = var_i_NaK__i_NaK_max * mParameters[9] / ((1.0 + pow((var_i_NaK__Km_Kp / mParameters[3]), 1.2)) * (1.0 + pow((var_i_NaK__Km_Nap / mParameters[1]), 1.3)) * (1.0 + exp(-4.0 + 0.033333333333333333 * var_electric_potentials__E_Na - 0.033333333333333333 * var_chaste_interface__Vm__Vm))); // picoA
        const double var_i_b_Na__i_b_Na = (-var_electric_potentials__E_Na + var_chaste_interface__Vm__Vm) * var_i_b_Na__g_b_Na * mParameters[9]; // picoA
        const double var_i_f__i_f_K = pow(var_chaste_interface__i_f_y_gate__y, 2) * (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * var_i_f__g_if * mParameters[6] * mParameters[9]; // picoA
        const double var_i_f__i_f_Na = pow(var_chaste_interface__i_f_y_gate__y, 2) * (-var_electric_potentials__E_Na + var_chaste_interface__Vm__Vm) * var_i_f__g_if * mParameters[7] * mParameters[9]; // picoA
        const double var_i_f__i_f = var_i_f__i_f_K + var_i_f__i_f_Na; // picoA
        const double d_dt_chaste_interface_var_Vm__Vm = (-var_AP_sensitive_currents__i_sus - var_AP_sensitive_currents__i_to - var_i_CaL__i_CaL - var_i_CaT__i_CaT - var_i_Kr__i_Kr - var_i_Ks__i_Ks - var_i_NaCa__i_NaCa - var_i_NaK__i_NaK - var_i_b_Ca__i_b_Ca - var_i_b_Na__i_b_Na - var_i_f__i_f - var_i_st__i_st) / mParameters[9]; // millivolt / millisecond
        
        rY[0] += mDt*d_dt_chaste_interface_var_Vm__Vm;
    }
    
    void Cellmaltsev_2009FromCellMLBackwardEulerNoLut::ComputeOneStepExceptVoltage(double var_chaste_interface__environment__time)
    {
        // Time units: millisecond
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__i_CaL_dL_gate__dL = rY[2];
        // Units: dimensionless; Initial value: 0.000584545564405
        double var_chaste_interface__i_CaL_fL_gate__fL = rY[3];
        // Units: dimensionless; Initial value: 0.862381249774
        double var_chaste_interface__i_CaT_dT_gate__dT = rY[5];
        // Units: dimensionless; Initial value: 0.00504393374639
        double var_chaste_interface__i_CaT_fT_gate__fT = rY[6];
        // Units: dimensionless; Initial value: 0.420757825415
        double var_chaste_interface__i_Kr_pa_gate__paS = rY[7];
        // Units: dimensionless; Initial value: 0.453100576739
        double var_chaste_interface__i_Kr_pa_gate__paF = rY[8];
        // Units: dimensionless; Initial value: 0.144755091176
        double var_chaste_interface__i_Kr_pi_gate__pi_ = rY[9];
        // Units: dimensionless; Initial value: 0.849409822329
        double var_chaste_interface__i_Ks_n_gate__n = rY[10];
        // Units: dimensionless; Initial value: 0.0264600410928
        double var_chaste_interface__AP_sensitive_currents_q_gate__q = rY[11];
        // Units: dimensionless; Initial value: 0.694241313965
        double var_chaste_interface__AP_sensitive_currents_r_gate__r = rY[12];
        // Units: dimensionless; Initial value: 0.00558131733359
        double var_chaste_interface__i_f_y_gate__y = rY[13];
        // Units: dimensionless; Initial value: 0.113643187247
        double var_chaste_interface__i_st_qa_gate__qa = rY[14];
        // Units: dimensionless; Initial value: 0.42380243163
        double var_chaste_interface__i_st_qi_gate__qi = rY[15];
        // Units: dimensionless; Initial value: 0.447294008304
        
        const double var_AP_sensitive_currents_q_gate__q_infinity = 1 / (1.0 + exp(3.7692307692307692 + 0.076923076923076927 * var_chaste_interface__Vm__Vm));
        const double var_AP_sensitive_currents_q_gate__tau_q = 6.0599999999999996 + 39.101999999999997 / (0.065000000000000002 * exp(4.593 + 0.10000000000000001 * var_chaste_interface__Vm__Vm) + 0.56999999999999995 * exp(-3.52 - 0.080000000000000002 * var_chaste_interface__Vm__Vm));
        const double var_AP_sensitive_currents_r_gate__r_infinity = 1 / (1.0 + exp(1.2866666666666666 - 0.066666666666666666 * var_chaste_interface__Vm__Vm));
        const double var_AP_sensitive_currents_r_gate__tau_r = 2.75352 + 14.40516 / (1.0369999999999999 * exp(2.7548999999999997 + 0.089999999999999997 * var_chaste_interface__Vm__Vm) + 0.36899999999999999 * exp(-2.8607999999999998 - 0.12 * var_chaste_interface__Vm__Vm));
        const double var_i_CaL_dL_gate__alpha_dL = ((fabs(35.0 + var_chaste_interface__Vm__Vm) < 2.5000000000718892e-7) ? (-7.0975000009920736e-9 / (-1.0 + exp(-1.000000000139778e-7)) - 1999999.9999424887 * (34.999999750000001 + var_chaste_interface__Vm__Vm) * (7.0975000009920736e-9 / (-1.0 + exp(-1.000000000139778e-7)) + 7.0974999994161126e-9 / (-1.0 + exp(9.9999999991773334e-8)))) : (-0.028389999999999999 * (35.0 + var_chaste_interface__Vm__Vm) / (-1.0 + exp(-14.0 - 0.40000000000000002 * var_chaste_interface__Vm__Vm)))) + ((fabs(var_chaste_interface__Vm__Vm) < 4.7999999999999996e-7) ? (-4.0752e-8 / (-1.0 + exp(-9.9999999999999995e-8)) - 1041666.6666666667 * (-4.7999999999999996e-7 + var_chaste_interface__Vm__Vm) * (4.0752e-8 / (-1.0 + exp(9.9999999999999995e-8)) + 4.0752e-8 / (-1.0 + exp(-9.9999999999999995e-8)))) : (-0.084900000000000003 * var_chaste_interface__Vm__Vm / (-1.0 + exp(-0.20833333333333334 * var_chaste_interface__Vm__Vm))));
        const double var_i_CaL_dL_gate__beta_dL = ((fabs(-5.0 + var_chaste_interface__Vm__Vm) < 2.5000000000025002e-7) ? (-2.8575000000028576e-9 / (-1.0 + exp(-1.0000000000010001e-7)) + 1999999.9999979998 * (-4.9999997499999997 + var_chaste_interface__Vm__Vm) * (2.8575000000028576e-9 / (-1.0 + exp(1.0000000000010001e-7)) + 2.8575000000028576e-9 / (-1.0 + exp(-1.0000000000010001e-7)))) : (0.011429999999999999 * (-5.0 + var_chaste_interface__Vm__Vm) / (-1.0 + exp(-2.0 + 0.40000000000000002 * var_chaste_interface__Vm__Vm))));
        const double var_i_CaL_dL_gate__dL_infinity = 1 / (1.0 + exp(-2.25 - 0.16666666666666666 * var_chaste_interface__Vm__Vm));
        const double var_i_CaL_dL_gate__tau_dL = 1 / (var_i_CaL_dL_gate__alpha_dL + var_i_CaL_dL_gate__beta_dL);
        const double var_i_CaL_fL_gate__fL_infinity = 1 / (1.0 + exp(4.794520547945206 + 0.13698630136986301 * var_chaste_interface__Vm__Vm));
        const double var_i_CaL_fL_gate__tau_fL = 44.299999999999997 + 257.10000000000002 * exp(-5.4668495419491743 * pow((1 + 0.030769230769230771 * var_chaste_interface__Vm__Vm), 2));
        const double var_i_CaT_dT_gate__dT_infinity = 1 / (1.0 + exp(-4.3833333333333337 - 0.16666666666666666 * var_chaste_interface__Vm__Vm));
        const double var_i_CaT_dT_gate__tau_dT = 1 / (1.0680000000000001 * exp(0.87666666666666671 + 0.033333333333333333 * var_chaste_interface__Vm__Vm) + 1.0680000000000001 * exp(-0.87666666666666671 - 0.033333333333333333 * var_chaste_interface__Vm__Vm));
        const double var_i_CaT_fT_gate__fT_infinity = 1 / (1.0 + exp(11.017857142857144 + 0.17857142857142858 * var_chaste_interface__Vm__Vm));
        const double var_i_CaT_fT_gate__tau_fT = 1 / (0.014999999999999999 * exp(4.0117035110533159 + 0.065019505851755519 * var_chaste_interface__Vm__Vm) + 0.015299999999999999 * exp(-0.74069627851140463 - 0.012004801920768308 * var_chaste_interface__Vm__Vm));
        const double var_i_Kr_pa_gate__pa_infinity = 1 / (1.0 + exp(-2.1886792452830188 - 0.094339622641509441 * var_chaste_interface__Vm__Vm));
        const double var_i_Kr_pa_gate__tau_paF = 0.84655354000000005 / (0.037199999999999997 * exp(0.062893081761006289 * var_chaste_interface__Vm__Vm) + 0.00096000000000000002 * exp(-0.044444444444444446 * var_chaste_interface__Vm__Vm));
        const double var_i_Kr_pa_gate__tau_paS = 0.84655354000000005 / (0.0041999999999999997 * exp(0.058823529411764705 * var_chaste_interface__Vm__Vm) + 0.00014999999999999999 * exp(-0.046296296296296294 * var_chaste_interface__Vm__Vm));
        const double var_i_Kr_pi_gate__pi_infinity = 1 / (1.0 + exp(1.672514619883041 + 0.058479532163742687 * var_chaste_interface__Vm__Vm));
        const double var_i_Kr_pi_gate__tau_pi = 1 / (0.10000000000000001 * exp(-0.018299935950224173 * var_chaste_interface__Vm__Vm) + 0.65600000000000003 * exp(0.009420009985210585 * var_chaste_interface__Vm__Vm));
        const double var_i_Ks_n_gate__alpha_n = 0.014 / (1.0 + exp(4.4444444444444446 - 0.1111111111111111 * var_chaste_interface__Vm__Vm));
        const double var_i_Ks_n_gate__beta_n = 0.001 * exp(-0.022222222222222223 * var_chaste_interface__Vm__Vm);
        const double var_i_Ks_n_gate__n_infinity = var_i_Ks_n_gate__alpha_n / (var_i_Ks_n_gate__alpha_n + var_i_Ks_n_gate__beta_n);
        const double var_i_Ks_n_gate__tau_n = 1 / (var_i_Ks_n_gate__alpha_n + var_i_Ks_n_gate__beta_n);
        const double var_i_f_y_gate__VIf_half = -64.0;
        const double var_i_f_y_gate__tau_y = 0.71665290000000004 / (exp(-8.5404617897664554 - 0.022074080614542406 * var_chaste_interface__Vm__Vm) + exp(-3.8001143986272159 + 0.051999376007487906 * var_chaste_interface__Vm__Vm));
        const double var_i_f_y_gate__y_infinity = 1 / (1.0 + exp(0.07407407407407407 * var_chaste_interface__Vm__Vm - 0.07407407407407407 * var_i_f_y_gate__VIf_half));
        const double var_i_st_qa_gate__alpha_qa = 1 / (0.20000000000000001 * exp(-0.0014285714285714286 * var_chaste_interface__Vm__Vm) + 0.14999999999999999 * exp(-0.090909090909090912 * var_chaste_interface__Vm__Vm));
        const double var_i_st_qa_gate__beta_qa = 1 / (16.0 * exp(0.125 * var_chaste_interface__Vm__Vm) + 15.0 * exp(0.02 * var_chaste_interface__Vm__Vm));
        const double var_i_st_qa_gate__qa_infinity = 1 / (1.0 + exp(-11.4 - 0.20000000000000001 * var_chaste_interface__Vm__Vm));
        const double var_i_st_qa_gate__tau_qa = 1 / (var_i_st_qa_gate__alpha_qa + var_i_st_qa_gate__beta_qa);
        const double var_i_st_qi_gate__alpha_qi = 1 / (700.0 * exp(0.014285714285714285 * var_chaste_interface__Vm__Vm) + 3100.0 * exp(0.076923076923076927 * var_chaste_interface__Vm__Vm));
        const double var_i_st_qi_gate__beta_qi = 1 / (50.0 * exp(-0.0014285714285714286 * var_chaste_interface__Vm__Vm) + 95.0 * exp(-0.10000000000000001 * var_chaste_interface__Vm__Vm)) + 0.00022900000000000001 / (1.0 + exp(-0.20000000000000001 * var_chaste_interface__Vm__Vm));
        const double var_i_st_qi_gate__qi_infinity = var_i_st_qi_gate__alpha_qi / (var_i_st_qi_gate__alpha_qi + var_i_st_qi_gate__beta_qi);
        const double var_i_st_qi_gate__tau_qi = 6.6500000000000004 / (var_i_st_qi_gate__alpha_qi + var_i_st_qi_gate__beta_qi);
        
        
        rY[11] = (var_chaste_interface__AP_sensitive_currents_q_gate__q + ((var_AP_sensitive_currents_q_gate__q_infinity / var_AP_sensitive_currents_q_gate__tau_q) * mDt)) / (1.0 - ((-1 / var_AP_sensitive_currents_q_gate__tau_q) * mDt));
        rY[12] = (var_chaste_interface__AP_sensitive_currents_r_gate__r + ((var_AP_sensitive_currents_r_gate__r_infinity / var_AP_sensitive_currents_r_gate__tau_r) * mDt)) / (1.0 - ((-1 / var_AP_sensitive_currents_r_gate__tau_r) * mDt));
        rY[2] = (var_chaste_interface__i_CaL_dL_gate__dL + ((var_i_CaL_dL_gate__dL_infinity / var_i_CaL_dL_gate__tau_dL) * mDt)) / (1.0 - ((-1 / var_i_CaL_dL_gate__tau_dL) * mDt));
        rY[3] = (var_chaste_interface__i_CaL_fL_gate__fL + ((var_i_CaL_fL_gate__fL_infinity / var_i_CaL_fL_gate__tau_fL) * mDt)) / (1.0 - ((-1 / var_i_CaL_fL_gate__tau_fL) * mDt));
        rY[5] = (var_chaste_interface__i_CaT_dT_gate__dT + ((var_i_CaT_dT_gate__dT_infinity / var_i_CaT_dT_gate__tau_dT) * mDt)) / (1.0 - ((-1 / var_i_CaT_dT_gate__tau_dT) * mDt));
        rY[6] = (var_chaste_interface__i_CaT_fT_gate__fT + ((var_i_CaT_fT_gate__fT_infinity / var_i_CaT_fT_gate__tau_fT) * mDt)) / (1.0 - ((-1 / var_i_CaT_fT_gate__tau_fT) * mDt));
        rY[8] = (var_chaste_interface__i_Kr_pa_gate__paF + ((var_i_Kr_pa_gate__pa_infinity / var_i_Kr_pa_gate__tau_paF) * mDt)) / (1.0 - ((-1 / var_i_Kr_pa_gate__tau_paF) * mDt));
        rY[7] = (var_chaste_interface__i_Kr_pa_gate__paS + ((var_i_Kr_pa_gate__pa_infinity / var_i_Kr_pa_gate__tau_paS) * mDt)) / (1.0 - ((-1 / var_i_Kr_pa_gate__tau_paS) * mDt));
        rY[9] = (var_chaste_interface__i_Kr_pi_gate__pi_ + ((var_i_Kr_pi_gate__pi_infinity / var_i_Kr_pi_gate__tau_pi) * mDt)) / (1.0 - ((-1 / var_i_Kr_pi_gate__tau_pi) * mDt));
        rY[10] = (var_chaste_interface__i_Ks_n_gate__n + ((var_i_Ks_n_gate__n_infinity / var_i_Ks_n_gate__tau_n) * mDt)) / (1.0 - ((-1 / var_i_Ks_n_gate__tau_n) * mDt));
        rY[13] = (var_chaste_interface__i_f_y_gate__y + ((var_i_f_y_gate__y_infinity / var_i_f_y_gate__tau_y) * mDt)) / (1.0 - ((-1 / var_i_f_y_gate__tau_y) * mDt));
        rY[14] = (var_chaste_interface__i_st_qa_gate__qa + ((var_i_st_qa_gate__qa_infinity / var_i_st_qa_gate__tau_qa) * mDt)) / (1.0 - ((-1 / var_i_st_qa_gate__tau_qa) * mDt));
        rY[15] = (var_chaste_interface__i_st_qi_gate__qi + ((var_i_st_qi_gate__qi_infinity / var_i_st_qi_gate__tau_qi) * mDt)) / (1.0 - ((-1 / var_i_st_qi_gate__tau_qi) * mDt));
        
        double _guess[15] = {rY[21],rY[22],rY[25],rY[23],rY[24],rY[20],rY[27],rY[26],rY[28],rY[1],rY[4],rY[18],rY[17],rY[16],rY[19]};
        CardiacNewtonSolver<15,Cellmaltsev_2009FromCellMLBackwardEulerNoLut>* _p_solver = CardiacNewtonSolver<15,Cellmaltsev_2009FromCellMLBackwardEulerNoLut>::Instance();
        _p_solver->Solve(*this, var_chaste_interface__environment__time, _guess);
        rY[21] = _guess[0];
        rY[22] = _guess[1];
        rY[25] = _guess[2];
        rY[23] = _guess[3];
        rY[24] = _guess[4];
        rY[20] = _guess[5];
        rY[27] = _guess[6];
        rY[26] = _guess[7];
        rY[28] = _guess[8];
        rY[1] = _guess[9];
        rY[4] = _guess[10];
        rY[18] = _guess[11];
        rY[17] = _guess[12];
        rY[16] = _guess[13];
        rY[19] = _guess[14];
    }

    std::vector<double> Cellmaltsev_2009FromCellMLBackwardEulerNoLut::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const std::vector<double> & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__i_CaL_dL_gate__dL = rY[2];
        // Units: dimensionless; Initial value: 0.000584545564405
        double var_chaste_interface__i_CaL_fL_gate__fL = rY[3];
        // Units: dimensionless; Initial value: 0.862381249774
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[4];
        // Units: dimensionless; Initial value: 0.711395919653
        double var_chaste_interface__i_Kr_pa_gate__paS = rY[7];
        // Units: dimensionless; Initial value: 0.453100576739
        double var_chaste_interface__i_Kr_pa_gate__paF = rY[8];
        // Units: dimensionless; Initial value: 0.144755091176
        double var_chaste_interface__i_Kr_pi_gate__pi_ = rY[9];
        // Units: dimensionless; Initial value: 0.849409822329
        double var_chaste_interface__i_f_y_gate__y = rY[13];
        // Units: dimensionless; Initial value: 0.113643187247
        
        // Mathematics
        const double var_i_CaL__E_CaL = 45.0; // millivolt
        const double var_i_f__g_if = 0.14999999999999999; // nanoS_per_picoF
        const double var_i_CaL__i_CaL = (-var_i_CaL__E_CaL + var_chaste_interface__Vm__Vm) * mParameters[5] * var_chaste_interface__i_CaL_dL_gate__dL * var_chaste_interface__i_CaL_fCa_gate__fCa * var_chaste_interface__i_CaL_fL_gate__fL * mParameters[9]; // picoA
        const double var_model_parameters__Cm_converted = 9.9999999999999995e-7 * mParameters[9]; // uF
        const double var_i_CaL__i_CaL_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_CaL__i_CaL / var_model_parameters__Cm_converted; // uA_per_cm2
        const double var_model_parameters__F = 96485.0; // coulomb_per_mole
        const double var_model_parameters__R = 8314.3999999999996; // joule_per_kilomole_kelvin
        const double var_model_parameters__T = 310.14999999999998; // kelvin
        const double var_electric_potentials__E_K = var_model_parameters__R * var_model_parameters__T * log(mParameters[3] / mParameters[0]) / var_model_parameters__F; // millivolt
        const double var_electric_potentials__E_Na = var_model_parameters__R * var_model_parameters__T * log(mParameters[4] / mParameters[1]) / var_model_parameters__F; // millivolt
        const double var_i_Kr__i_Kr = (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * (0.40000000000000002 * var_chaste_interface__i_Kr_pa_gate__paS + 0.59999999999999998 * var_chaste_interface__i_Kr_pa_gate__paF) * mParameters[8] * var_chaste_interface__i_Kr_pi_gate__pi_ * mParameters[9]; // picoA
        const double var_i_Kr__i_Kr_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_Kr__i_Kr / var_model_parameters__Cm_converted; // uA_per_cm2
        const double var_i_f__i_f_K = pow(var_chaste_interface__i_f_y_gate__y, 2) * (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * var_i_f__g_if * mParameters[6] * mParameters[9]; // picoA
        const double var_i_f__i_f_Na = pow(var_chaste_interface__i_f_y_gate__y, 2) * (-var_electric_potentials__E_Na + var_chaste_interface__Vm__Vm) * var_i_f__g_if * mParameters[7] * mParameters[9]; // picoA
        const double var_i_f__i_f = var_i_f__i_f_K + var_i_f__i_f_Na; // picoA
        const double var_i_f__i_f_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_f__i_f / var_model_parameters__Cm_converted; // uA_per_cm2

        std::vector<double> dqs(7);
        dqs[0] = var_i_CaL__i_CaL_converted;
        dqs[1] = var_model_parameters__Cm_converted;
        dqs[2] = var_i_f__i_f_converted;
        dqs[3] = var_i_f__i_f_K;
        dqs[4] = var_i_f__i_f_Na;
        dqs[5] = var_i_Kr__i_Kr_converted;
        dqs[6] = var_chaste_interface__environment__time;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellmaltsev_2009FromCellMLBackwardEulerNoLut>::Initialise(void)
{
    this->mSystemName = "maltsev_2009";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-57.9639346865);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.000150018670943);

    // rY[2]:
    this->mVariableNames.push_back("i_CaL_dL_gate__dL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000584545564405);

    // rY[3]:
    this->mVariableNames.push_back("i_CaL_fL_gate__fL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.862381249774);

    // rY[4]:
    this->mVariableNames.push_back("i_CaL_fCa_gate__fCa");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.711395919653);

    // rY[5]:
    this->mVariableNames.push_back("i_CaT_dT_gate__dT");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00504393374639);

    // rY[6]:
    this->mVariableNames.push_back("i_CaT_fT_gate__fT");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.420757825415);

    // rY[7]:
    this->mVariableNames.push_back("i_Kr_pa_gate__paS");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.453100576739);

    // rY[8]:
    this->mVariableNames.push_back("i_Kr_pa_gate__paF");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.144755091176);

    // rY[9]:
    this->mVariableNames.push_back("i_Kr_pi_gate__pi_");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.849409822329);

    // rY[10]:
    this->mVariableNames.push_back("i_Ks_n_gate__n");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0264600410928);

    // rY[11]:
    this->mVariableNames.push_back("AP_sensitive_currents_q_gate__q");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.694241313965);

    // rY[12]:
    this->mVariableNames.push_back("AP_sensitive_currents_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00558131733359);

    // rY[13]:
    this->mVariableNames.push_back("i_f_y_gate__y");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.113643187247);

    // rY[14]:
    this->mVariableNames.push_back("i_st_qa_gate__qa");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.42380243163);

    // rY[15]:
    this->mVariableNames.push_back("i_st_qi_gate__qi");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.447294008304);

    // rY[16]:
    this->mVariableNames.push_back("j_SRCarel__R");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.688047760973);

    // rY[17]:
    this->mVariableNames.push_back("j_SRCarel__O");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.7340201253e-07);

    // rY[18]:
    this->mVariableNames.push_back("j_SRCarel__I");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(7.86181717518e-08);

    // rY[19]:
    this->mVariableNames.push_back("j_SRCarel__RI");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.311951987007);

    // rY[20]:
    this->mVariableNames.push_back("calcium_buffering__fTMM");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.501049376634);

    // rY[21]:
    this->mVariableNames.push_back("calcium_buffering__fCMi");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0594880901438);

    // rY[22]:
    this->mVariableNames.push_back("calcium_buffering__fCMs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.054381370046);

    // rY[23]:
    this->mVariableNames.push_back("calcium_buffering__fTC");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0291316176172);

    // rY[24]:
    this->mVariableNames.push_back("calcium_buffering__fTMC");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.432694959597);

    // rY[25]:
    this->mVariableNames.push_back("calcium_buffering__fCQ");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.273207128393);

    // rY[26]:
    this->mVariableNames.push_back("NSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.49348117734);

    // rY[27]:
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.316762674605);

    // rY[28]:
    this->mVariableNames.push_back("dyadic_space_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.000138112560112);

    // mParameters[0]:
    this->mParameterNames.push_back("cytosolic_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[1]:
    this->mParameterNames.push_back("cytosolic_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[2]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[3]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[4]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[5]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("nanoS_per_picoF");

    // mParameters[6]:
    this->mParameterNames.push_back("membrane_hyperpolarisation_activated_funny_current_potassium_component_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_hyperpolarisation_activated_funny_current_sodium_component_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("nanoS_per_picoF");

    // mParameters[9]:
    this->mParameterNames.push_back("model_parameters__Cm");
    this->mParameterUnits.push_back("picoF");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_capacitance");
    this->mDerivedQuantityUnits.push_back("uF");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_hyperpolarisation_activated_funny_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_hyperpolarisation_activated_funny_current_potassium_component");
    this->mDerivedQuantityUnits.push_back("picoA");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_hyperpolarisation_activated_funny_current_sodium_component");
    this->mDerivedQuantityUnits.push_back("picoA");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellmaltsev_2009FromCellMLBackwardEulerNoLut)

