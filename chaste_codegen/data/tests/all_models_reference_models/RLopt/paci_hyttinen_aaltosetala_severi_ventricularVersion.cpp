//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: paci_hyttinen_aaltosetala_severi_ventricularVersion
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: RushLarsenOpt)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "paci_hyttinen_aaltosetala_severi_ventricularVersion.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLRushLarsenOpt_LookupTables : public AbstractLookupTableCollection
{
public:
    static Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLRushLarsenOpt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLRushLarsenOpt_LookupTables);
        }
        return mpInstance.get();
    }

    void FreeMemory()
    {

        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }

    // Row lookup methods
    // using linear-interpolation



    ~Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLRushLarsenOpt_LookupTables()
    {

    }

protected:
    Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLRushLarsenOpt_LookupTables(const Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLRushLarsenOpt_LookupTables&);
    Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLRushLarsenOpt_LookupTables& operator= (const Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLRushLarsenOpt_LookupTables&);
    Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLRushLarsenOpt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(0);
        mNumberOfTables.resize(0);
        mTableMins.resize(0);
        mTableSteps.resize(0);
        mTableStepInverses.resize(0);
        mTableMaxs.resize(0);
        mNeedsRegeneration.resize(0);

        Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLRushLarsenOpt_LookupTables::RegenerateTables();
    }

    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);

        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }

private:
    /** The single instance of the class */
    static std::shared_ptr<Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLRushLarsenOpt_LookupTables> mpInstance;

};

std::shared_ptr<Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLRushLarsenOpt_LookupTables> Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLRushLarsenOpt_LookupTables::mpInstance;

    boost::shared_ptr<RegularStimulus> Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLRushLarsenOpt::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__stim_mode__i_stim_Amplitude_converted = 5.5718264182641404 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        const double var_chaste_interface__stim_mode__i_stim_Period_converted = 1000.0; // millisecond
        const double var_chaste_interface__stim_mode__i_stim_PulseDuration_converted = 5.0; // millisecond
        const double var_chaste_interface__stim_mode__i_stim_Start_converted = 0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__stim_mode__i_stim_Amplitude_converted),
                var_chaste_interface__stim_mode__i_stim_PulseDuration_converted,
                var_chaste_interface__stim_mode__i_stim_Period_converted,
                var_chaste_interface__stim_mode__i_stim_Start_converted
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLRushLarsenOpt::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLRushLarsenOpt::Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLRushLarsenOpt(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractRushLarsenCardiacCell(
                18,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLRushLarsenOpt>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        
        this->mParameters[0] = 150.0; // (var_model_parameters__Ki) [millimolar]
        this->mParameters[1] = 1.8; // (var_model_parameters__Cao) [millimolar]
        this->mParameters[2] = 5.4000000000000004; // (var_model_parameters__Ko) [millimolar]
        this->mParameters[3] = 151.0; // (var_model_parameters__Nao) [millimolar]
        this->mParameters[4] = 8.6357020000000001e-5; // (var_i_CaL__g_CaL) [metre_cube_per_F_per_s]
        this->mParameters[5] = 3671.2302; // (var_i_Na__g_Na) [S_per_F]
        this->mParameters[6] = 30.103120000000001; // (var_i_f__g_f) [S_per_F]
        this->mParameters[7] = 28.1492; // (var_i_K1__g_K1) [S_per_F]
        this->mParameters[8] = 29.866700000000002; // (var_i_Kr__g_Kr) [S_per_F]
        this->mParameters[9] = 2.0409999999999999; // (var_i_Ks__g_Ks) [S_per_F]
        this->mParameters[10] = 29.9038; // (var_i_to__g_to) [S_per_F]
        this->mParameters[11] = 9.8710900000000003e-11; // (var_model_parameters__Cm) [farad]
        this->mParameters[12] = 310.0; // (var_model_parameters__T) [kelvin]
    }

    Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLRushLarsenOpt::~Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLRushLarsenOpt()
    {
    }

    AbstractLookupTableCollection* Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLRushLarsenOpt::GetLookupTableCollection()
    {
        return Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLRushLarsenOpt_LookupTables::Instance();
    }
    
    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLRushLarsenOpt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057623841
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 1.80773974140477e-05
        double var_chaste_interface__i_Na_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.102953468725004
        double var_chaste_interface__i_Na_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.786926637881461
        double var_chaste_interface__i_Na_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.253943221774722
        double var_chaste_interface__i_CaL_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 8.96088425225182e-05
        double var_chaste_interface__i_CaL_f1_gate__f1 = rY[6];
        // Units: dimensionless; Initial value: 0.970411811263976
        double var_chaste_interface__i_CaL_f2_gate__f2 = rY[7];
        // Units: dimensionless; Initial value: 0.999965815466749
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[8];
        // Units: dimensionless; Initial value: 0.998925296531804
        double var_chaste_interface__i_Kr_Xr1_gate__Xr1 = rY[9];
        // Units: dimensionless; Initial value: 0.00778547011240132
        double var_chaste_interface__i_Kr_Xr2_gate__Xr2 = rY[10];
        // Units: dimensionless; Initial value: 0.432162576531617
        double var_chaste_interface__i_Ks_Xs_gate__Xs = rY[11];
        // Units: dimensionless; Initial value: 0.0322944866983666
        double var_chaste_interface__i_f_Xf_gate__Xf = rY[12];
        // Units: dimensionless; Initial value: 0.100615100568753
        double var_chaste_interface__i_to_q_gate__q = rY[13];
        // Units: dimensionless; Initial value: 0.839295925773219
        double var_chaste_interface__i_to_r_gate__r = rY[14];
        // Units: dimensionless; Initial value: 0.00573289893326379
        double var_chaste_interface__sodium_dynamics__Nai = rY[15];
        // Units: millimolar; Initial value: 10.9248496211574
        
        const double var_Membrane__Vm = 0.001 * var_chaste_interface__Membrane__Vm_converted; // volt
        const double var_i_PCa__i_PCa_converted = 0.41249999999999998 * HeartConfig::Instance()->GetCapacitance() * var_chaste_interface__calcium_dynamics__Cai / (0.00050000000000000001 + var_chaste_interface__calcium_dynamics__Cai); // uA_per_cm2
        const double var_i_f__i_f_converted = (0.017000000000000001 + var_Membrane__Vm) * HeartConfig::Instance()->GetCapacitance() * mParameters[6] * var_chaste_interface__i_f_Xf_gate__Xf; // uA_per_cm2
        const double var_electric_potentials__E_K = 8.6173421482889202e-5 * mParameters[12] * log(mParameters[2] / mParameters[0]); // volt
        const double var_i_CaL__i_CaL_converted = HeartConfig::Instance()->GetCapacitance() * ((fabs(var_chaste_interface__Membrane__Vm_converted) < 4.30867107414446e-9 * fabs(mParameters[12])) ? (116045061.55051096 * (4.30867107414446e-9 * mParameters[12] + var_chaste_interface__Membrane__Vm_converted) * (0.019297068299999998 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(9.9999999999999995e-8)) + 0.019297068299999998 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(-9.9999999999999995e-8))) / mParameters[12] - 0.019297068299999998 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(-9.9999999999999995e-8))) : (4478658.9572358271 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(23.209012310102192 * var_chaste_interface__Membrane__Vm_converted / mParameters[12])) * var_chaste_interface__Membrane__Vm_converted * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / ((-1.0 + exp(23.209012310102192 * var_chaste_interface__Membrane__Vm_converted / mParameters[12])) * mParameters[12]))); // uA_per_cm2
        const double var_i_K1__i_K1_converted = 1.6825960981856667 * sqrt(mParameters[2]) * (-var_electric_potentials__E_K + var_Membrane__Vm) * HeartConfig::Instance()->GetCapacitance() * mParameters[7] / ((1.0 + exp(-118.83999999999999 + 594.19999999999993 * var_Membrane__Vm - 594.19999999999993 * var_electric_potentials__E_K)) * (3.9100000000000001 / (1.0 + exp(-118.83999999999999 + 594.19999999999993 * var_Membrane__Vm - 594.19999999999993 * var_electric_potentials__E_K)) + (-1.5089999999999999 * exp(0.02 + 0.20000000000000001 * var_Membrane__Vm - 0.20000000000000001 * var_electric_potentials__E_K) + exp(-5.8860000000000001 + 588.60000000000002 * var_Membrane__Vm - 588.60000000000002 * var_electric_potentials__E_K)) / (1.0 + exp(454.69999999999999 * var_Membrane__Vm - 454.69999999999999 * var_electric_potentials__E_K)))); // uA_per_cm2
        const double var_i_Kr__i_Kr_converted = 0.43033148291193518 * sqrt(mParameters[2]) * (-var_electric_potentials__E_K + var_Membrane__Vm) * HeartConfig::Instance()->GetCapacitance() * mParameters[8] * var_chaste_interface__i_Kr_Xr1_gate__Xr1 * var_chaste_interface__i_Kr_Xr2_gate__Xr2; // uA_per_cm2
        const double var_i_b_Ca__i_b_Ca = 0.69264000000000003 * var_Membrane__Vm - 2.9843579327954189e-5 * mParameters[12] * log(mParameters[1] / var_chaste_interface__calcium_dynamics__Cai); // A_per_F
        const double var_i_to__i_to_converted = (-var_electric_potentials__E_K + var_Membrane__Vm) * HeartConfig::Instance()->GetCapacitance() * mParameters[10] * var_chaste_interface__i_to_q_gate__q * var_chaste_interface__i_to_r_gate__r; // uA_per_cm2
        const double var_electric_potentials__E_Na = 8.6173421482889202e-5 * mParameters[12] * log(mParameters[3] / var_chaste_interface__sodium_dynamics__Nai); // volt
        const double var_i_Ks__i_Ks_converted = pow(var_chaste_interface__i_Ks_Xs_gate__Xs, 2) * (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * (-8.6173421482889202e-5 * mParameters[12] * log((0.029999999999999999 * mParameters[3] + mParameters[2]) / (0.029999999999999999 * var_chaste_interface__sodium_dynamics__Nai + mParameters[0])) + var_Membrane__Vm) * HeartConfig::Instance()->GetCapacitance() * mParameters[9]; // uA_per_cm2
        const double var_i_Na__i_Na_converted = pow(var_chaste_interface__i_Na_m_gate__m, 3) * (-var_electric_potentials__E_Na + var_Membrane__Vm) * HeartConfig::Instance()->GetCapacitance() * mParameters[5] * var_chaste_interface__i_Na_h_gate__h * var_chaste_interface__i_Na_j_gate__j; // uA_per_cm2
        const double var_i_NaCa__i_NaCa_converted = 4900.0 * (pow(var_chaste_interface__sodium_dynamics__Nai, 3) * mParameters[1] * exp(4061.5771542678831 * var_Membrane__Vm / mParameters[12]) - 2.8571431999999999 * pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai * exp(-7542.9290007832124 * var_Membrane__Vm / mParameters[12])) * HeartConfig::Instance()->GetCapacitance() / ((1.0 + 0.10000000000000001 * exp(-7542.9290007832124 * var_Membrane__Vm / mParameters[12])) * (669921.875 + pow(mParameters[3], 3)) * (1.3799999999999999 + mParameters[1])); // uA_per_cm2
        const double var_i_NaK__i_NaK_converted = 1.8414239999999999 * HeartConfig::Instance()->GetCapacitance() * mParameters[2] * var_chaste_interface__sodium_dynamics__Nai / ((1.0 + mParameters[2]) * (40.0 + var_chaste_interface__sodium_dynamics__Nai) * (1.0 + 0.035299999999999998 * exp(-11604.506155051095 * var_Membrane__Vm / mParameters[12]) + 0.1245 * exp(-1160.4506155051097 * var_Membrane__Vm / mParameters[12]))); // uA_per_cm2
        const double var_i_b_Na__i_b_Na = 0.90000000000000002 * var_Membrane__Vm - 0.90000000000000002 * var_electric_potentials__E_Na; // A_per_F
        const double var_chaste_interface__i_ionic = HeartConfig::Instance()->GetCapacitance() * var_i_b_Ca__i_b_Ca + HeartConfig::Instance()->GetCapacitance() * var_i_b_Na__i_b_Na + var_i_CaL__i_CaL_converted + var_i_K1__i_K1_converted + var_i_Kr__i_Kr_converted + var_i_Ks__i_Ks_converted + var_i_Na__i_Na_converted + var_i_NaCa__i_NaCa_converted + var_i_NaK__i_NaK_converted + var_i_PCa__i_PCa_converted + var_i_f__i_f_converted + var_i_to__i_to_converted; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLRushLarsenOpt::EvaluateEquations(double var_chaste_interface__environment__time_converted, std::vector<double> &rDY, std::vector<double> &rAlphaOrTau, std::vector<double> &rBetaOrInf)
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057623841
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 1.80773974140477e-05
        double var_chaste_interface__i_Na_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.102953468725004
        double var_chaste_interface__i_Na_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.786926637881461
        double var_chaste_interface__i_Na_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.253943221774722
        double var_chaste_interface__i_CaL_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 8.96088425225182e-05
        double var_chaste_interface__i_CaL_f1_gate__f1 = rY[6];
        // Units: dimensionless; Initial value: 0.970411811263976
        double var_chaste_interface__i_CaL_f2_gate__f2 = rY[7];
        // Units: dimensionless; Initial value: 0.999965815466749
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[8];
        // Units: dimensionless; Initial value: 0.998925296531804
        double var_chaste_interface__i_Kr_Xr1_gate__Xr1 = rY[9];
        // Units: dimensionless; Initial value: 0.00778547011240132
        double var_chaste_interface__i_Kr_Xr2_gate__Xr2 = rY[10];
        // Units: dimensionless; Initial value: 0.432162576531617
        double var_chaste_interface__i_Ks_Xs_gate__Xs = rY[11];
        // Units: dimensionless; Initial value: 0.0322944866983666
        double var_chaste_interface__i_f_Xf_gate__Xf = rY[12];
        // Units: dimensionless; Initial value: 0.100615100568753
        double var_chaste_interface__i_to_q_gate__q = rY[13];
        // Units: dimensionless; Initial value: 0.839295925773219
        double var_chaste_interface__i_to_r_gate__r = rY[14];
        // Units: dimensionless; Initial value: 0.00573289893326379
        double var_chaste_interface__sodium_dynamics__Nai = rY[15];
        // Units: millimolar; Initial value: 10.9248496211574
        double var_chaste_interface__calcium_dynamics__Ca_SR = rY[16];
        // Units: millimolar; Initial value: -0.2734234751931
        double var_chaste_interface__calcium_dynamics__g = rY[17];
        // Units: dimensionless; Initial value: 0.999999981028517

        // Mathematics
        double d_dt_chaste_interface_var_Membrane__Vm_converted;
        const double var_Membrane__Vm = 0.001 * var_chaste_interface__Membrane__Vm_converted; // volt
        const double var_calcium_dynamics__Buf_C = 0.25; // millimolar
        const double var_calcium_dynamics__Buf_SR = 10.0; // millimolar
        const double var_calcium_dynamics__Kbuf_C = 0.001; // millimolar
        const double var_calcium_dynamics__Cai_bufc = 1 / (1.0 + var_calcium_dynamics__Buf_C * var_calcium_dynamics__Kbuf_C / pow((var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__Kbuf_C), 2)); // dimensionless
        const double var_calcium_dynamics__Kbuf_SR = 0.29999999999999999; // millimolar
        const double var_calcium_dynamics__Ca_SR_bufSR = 1 / (1.0 + var_calcium_dynamics__Buf_SR * var_calcium_dynamics__Kbuf_SR / pow((var_chaste_interface__calcium_dynamics__Ca_SR + var_calcium_dynamics__Kbuf_SR), 2)); // dimensionless
        const double var_calcium_dynamics__Kup = 0.00025000000000000001; // millimolar
        const double var_calcium_dynamics__V_leak = 0.00044443999999999999; // per_second
        const double var_calcium_dynamics__VmaxUp = 0.56064000000000003; // millimolar_per_second
        const double var_calcium_dynamics__a_rel = 16.463999999999999; // millimolar_per_second
        const double var_calcium_dynamics__b_rel = 0.25; // millimolar
        const double var_calcium_dynamics__c_rel = 8.2319999999999993; // millimolar_per_second
        const double var_calcium_dynamics__g_inf = ((var_chaste_interface__calcium_dynamics__Cai <= 0.00035) ? (1 / (1.0 + 5.439910241481016e+20 * pow(var_chaste_interface__calcium_dynamics__Cai, 6))) : (1 / (1.0 + 1.9720198874049176e+55 * pow(var_chaste_interface__calcium_dynamics__Cai, 16)))); // dimensionless
        const double var_calcium_dynamics__const2 = (((var_Membrane__Vm > -0.059999999999999998) && (var_chaste_interface__calcium_dynamics__g < var_calcium_dynamics__g_inf)) ? (0) : (1.0)); // dimensionless
        const double var_calcium_dynamics__i_leak = (-var_chaste_interface__calcium_dynamics__Cai + var_chaste_interface__calcium_dynamics__Ca_SR) * var_calcium_dynamics__V_leak; // millimolar_per_second
        const double var_calcium_dynamics__i_up = var_calcium_dynamics__VmaxUp / (1.0 + pow(var_calcium_dynamics__Kup, 2) / pow(var_chaste_interface__calcium_dynamics__Cai, 2)); // millimolar_per_second
        const double var_calcium_dynamics__tau_g = 0.002; // second
        const double var_calcium_dynamics__g_orig_deriv = (-var_chaste_interface__calcium_dynamics__g + var_calcium_dynamics__g_inf) * var_calcium_dynamics__const2 / var_calcium_dynamics__tau_g; // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__g = 0.001 * var_calcium_dynamics__g_orig_deriv; // 1 / millisecond
        const double var_current_blockers__TTX_10uM = 0; // dimensionless
        const double var_current_blockers__TTX_30uM = 0; // dimensionless
        const double var_current_blockers__TTX_3uM = 0; // dimensionless
        const double var_i_CaL_d_gate__alpha_d = 0.25 + 1.3999999999999999 / (1.0 + exp(-2.6923076923076925 - 76.92307692307692 * var_Membrane__Vm)); // dimensionless
        const double var_i_CaL_d_gate__beta_d = 1.3999999999999999 / (1.0 + exp(1.0 + 200.0 * var_Membrane__Vm)); // dimensionless
        const double var_calcium_dynamics__i_rel = 0.041099999999999998 * (pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2) * var_calcium_dynamics__a_rel / (pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2) + pow(var_calcium_dynamics__b_rel, 2)) + var_calcium_dynamics__c_rel) * var_chaste_interface__calcium_dynamics__g * var_chaste_interface__i_CaL_d_gate__d; // millimolar_per_second
        const double var_i_CaL_d_gate__d_infinity = 1 / (1.0 + exp(-1.3 - 142.85714285714286 * var_Membrane__Vm)); // dimensionless
        const double var_i_CaL_d_gate__gamma_d = 1 / (1.0 + exp(2.5 - 50.0 * var_Membrane__Vm)); // dimensionless
        const double var_i_CaL_d_gate__tau_d = 0.001 * var_i_CaL_d_gate__gamma_d + 0.001 * var_i_CaL_d_gate__alpha_d * var_i_CaL_d_gate__beta_d; // second
        const double var_i_CaL_f1_gate__f1_inf = 1 / (1.0 + exp(8.6666666666666661 + 333.33333333333331 * var_Membrane__Vm)); // dimensionless
        const double var_i_CaL_f1_gate__constf1 = ((-var_i_CaL_f1_gate__f1_inf + var_chaste_interface__i_CaL_f1_gate__f1 < 0) ? (0.92835000000000001 + 1433.0 * var_chaste_interface__calcium_dynamics__Cai) : (1.0)); // dimensionless
        const double var_i_CaL_f1_gate__tau_f1 = 0.001 * (20.0 + 200.0 / (1.0 + exp(1.3 - 100.0 * var_Membrane__Vm)) + 180.0 / (1.0 + exp(3.0 + 100.0 * var_Membrane__Vm)) + 1102.5 * exp(-4444444444.4444447 * pow((0.027 + var_Membrane__Vm), 4))) * var_i_CaL_f1_gate__constf1; // second
        const double var_i_CaL_f1_gate__f1_orig_deriv = (-var_chaste_interface__i_CaL_f1_gate__f1 + var_i_CaL_f1_gate__f1_inf) / var_i_CaL_f1_gate__tau_f1; // 1 / second
        const double d_dt_chaste_interface_var_i_CaL_f1_gate__f1 = 0.001 * var_i_CaL_f1_gate__f1_orig_deriv; // 1 / millisecond
        const double var_i_CaL_f2_gate__constf2 = 1.0; // dimensionless
        const double var_i_CaL_f2_gate__f2_inf = 0.33000000000000002 + 0.67000000000000004 / (1.0 + exp(8.75 + 250.0 * var_Membrane__Vm)); // dimensionless
        const double var_i_CaL_f2_gate__tau_f2 = 0.001 * (16.0 / (1.0 + exp(3.0 + 100.0 * var_Membrane__Vm)) + 31.0 / (1.0 + exp(2.5 - 100.0 * var_Membrane__Vm)) + 600.0 * exp(-5882.3529411764703 * pow((0.025000000000000001 + var_Membrane__Vm), 2))) * var_i_CaL_f2_gate__constf2; // second
        const double var_i_CaL_fCa_gate__alpha_fCa = 1 / (1.0 + 5.9537418076512766e+25 * pow(var_chaste_interface__calcium_dynamics__Cai, 8)); // dimensionless
        const double var_i_CaL_fCa_gate__beta_fCa = 0.10000000000000001 / (1.0 + exp(-9.0 + 10000.0 * var_chaste_interface__calcium_dynamics__Cai)); // dimensionless
        const double var_i_CaL_fCa_gate__gamma_fCa = 0.29999999999999999 / (1.0 + exp(-0.9375 + 1250.0 * var_chaste_interface__calcium_dynamics__Cai)); // dimensionless
        const double var_i_CaL_fCa_gate__fCa_inf = 0.76010945576162958 * var_i_CaL_fCa_gate__alpha_fCa + 0.76010945576162958 * var_i_CaL_fCa_gate__beta_fCa + 0.76010945576162958 * var_i_CaL_fCa_gate__gamma_fCa; // dimensionless
        const double var_i_CaL_fCa_gate__constfCa = (((var_Membrane__Vm > -0.059999999999999998) && (var_chaste_interface__i_CaL_fCa_gate__fCa < var_i_CaL_fCa_gate__fCa_inf)) ? (0) : (1.0)); // dimensionless
        const double var_i_CaL_fCa_gate__tau_fCa = 0.002; // second
        const double var_i_CaL_fCa_gate__fCa_orig_deriv = (-var_chaste_interface__i_CaL_fCa_gate__fCa + var_i_CaL_fCa_gate__fCa_inf) * var_i_CaL_fCa_gate__constfCa / var_i_CaL_fCa_gate__tau_fCa; // 1 / second
        const double d_dt_chaste_interface_var_i_CaL_fCa_gate__fCa = 0.001 * var_i_CaL_fCa_gate__fCa_orig_deriv; // 1 / millisecond
        const double var_i_Kr_Xr1_gate__L0 = 0.025000000000000001; // dimensionless
        const double var_i_Kr_Xr1_gate__Q = 2.2999999999999998; // dimensionless
        const double var_i_Kr_Xr1_gate__alpha_Xr1 = 450.0 / (1.0 + exp(-4.5 - 100.0 * var_Membrane__Vm)); // dimensionless
        const double var_i_Kr_Xr1_gate__beta_Xr1 = 6.0 / (1.0 + exp(2.6086956521739131 + 86.956521739130437 * var_Membrane__Vm)); // dimensionless
        const double var_i_Kr_Xr1_gate__tau_Xr1 = 0.001 * var_i_Kr_Xr1_gate__alpha_Xr1 * var_i_Kr_Xr1_gate__beta_Xr1; // second
        const double var_i_Kr_Xr2_gate__Xr2_infinity = 1 / (1.0 + exp(1.76 + 20.0 * var_Membrane__Vm)); // dimensionless
        const double var_i_Kr_Xr2_gate__alpha_Xr2 = 3.0 / (1.0 + exp(-3.0 - 50.0 * var_Membrane__Vm)); // dimensionless
        const double var_i_Kr_Xr2_gate__beta_Xr2 = 1.1200000000000001 / (1.0 + exp(-3.0 + 50.0 * var_Membrane__Vm)); // dimensionless
        const double var_i_Kr_Xr2_gate__tau_Xr2 = 0.001 * var_i_Kr_Xr2_gate__alpha_Xr2 * var_i_Kr_Xr2_gate__beta_Xr2; // second
        const double var_i_Ks_Xs_gate__Xs_infinity = 1 / (1.0 + exp(-1.25 - 62.5 * var_Membrane__Vm)); // dimensionless
        const double var_i_Ks_Xs_gate__alpha_Xs = 1100.0 / sqrt(1.0 + exp(-1.6666666666666667 - 166.66666666666666 * var_Membrane__Vm)); // dimensionless
        const double var_i_Ks_Xs_gate__beta_Xs = 1 / (1.0 + exp(-3.0 + 50.0 * var_Membrane__Vm)); // dimensionless
        const double var_i_Ks_Xs_gate__tau_Xs = 0.001 * var_i_Ks_Xs_gate__alpha_Xs * var_i_Ks_Xs_gate__beta_Xs; // second
        const double var_i_Na__TTX_coeff = ((var_current_blockers__TTX_3uM == 1.0) ? (0.17999999999999999) : ((var_current_blockers__TTX_10uM == 1.0) ? (0.059999999999999998) : ((var_current_blockers__TTX_30uM == 1.0) ? (0.02) : (1.0)))); // dimensionless
        const double var_i_NaCa__KmCa = 1.3799999999999999; // millimolar
        const double var_i_NaCa__KmNai = 87.5; // millimolar
        const double var_i_NaCa__Ksat = 0.10000000000000001; // dimensionless
        const double var_i_NaCa__alpha = 2.8571431999999999; // dimensionless
        const double var_i_NaCa__gamma = 0.34999999999999998; // dimensionless
        const double var_i_NaCa__kNaCa = 4900.0; // A_per_F
        const double var_i_NaK__Km_K = 1.0; // millimolar
        const double var_i_NaK__Km_Na = 40.0; // millimolar
        const double var_i_NaK__PNaK = 1.8414239999999999; // A_per_F
        const double var_i_Na_h_gate__alpha_h = ((var_Membrane__Vm < -0.040000000000000001) ? (0.057000000000000002 * exp(-11.764705882352942 - 147.05882352941177 * var_Membrane__Vm)) : (0)); // dimensionless
        const double var_i_Na_h_gate__beta_h = ((var_Membrane__Vm < -0.040000000000000001) ? (2.7000000000000002 * exp(79.0 * var_Membrane__Vm) + 310000.0 * exp(348.5 * var_Membrane__Vm)) : (5.9230769230769234 / (1.0 + exp(-0.96036036036036043 - 90.090090090090087 * var_Membrane__Vm)))); // dimensionless
        const double var_i_Na_h_gate__h_inf = 1 / sqrt(1.0 + exp(12.649122807017543 + 175.43859649122805 * var_Membrane__Vm)); // dimensionless
        const double var_i_Na_h_gate__tau_h = ((var_Membrane__Vm < -0.040000000000000001) ? (0.0015 / (var_i_Na_h_gate__alpha_h + var_i_Na_h_gate__beta_h)) : (0.002542)); // second
        const double var_i_Na_j_gate__alpha_j = ((var_Membrane__Vm < -0.040000000000000001) ? ((37.780000000000001 + 1000.0 * var_Membrane__Vm) * (-25428.0 * exp(244.40000000000001 * var_Membrane__Vm) - 6.9480000000000002e-6 * exp(-43.909999999999997 * var_Membrane__Vm)) / (1.0 + exp(24.640530000000002 + 311.0 * var_Membrane__Vm))) : (0)); // dimensionless
        const double var_i_Na_j_gate__beta_j = ((var_Membrane__Vm < -0.040000000000000001) ? (0.024240000000000001 * exp(-10.52 * var_Membrane__Vm) / (1.0 + exp(-5.5312920000000005 - 137.80000000000001 * var_Membrane__Vm))) : (0.59999999999999998 * exp(57.0 * var_Membrane__Vm) / (1.0 + exp(-3.2000000000000002 - 100.0 * var_Membrane__Vm)))); // dimensionless
        const double var_i_Na_j_gate__j_inf = 1 / sqrt(1.0 + exp(12.649122807017543 + 175.43859649122805 * var_Membrane__Vm)); // dimensionless
        const double var_i_Na_j_gate__tau_j = 0.0070000000000000001 / (var_i_Na_j_gate__alpha_j + var_i_Na_j_gate__beta_j); // second
        const double var_i_Na_m_gate__alpha_m = 1 / (1.0 + exp(-12.0 - 200.0 * var_Membrane__Vm)); // dimensionless
        const double var_i_Na_m_gate__beta_m = 0.10000000000000001 / (1.0 + exp(7.0 + 200.0 * var_Membrane__Vm)) + 0.10000000000000001 / (1.0 + exp(-0.25 + 5.0 * var_Membrane__Vm)); // dimensionless
        const double var_i_Na_m_gate__m_inf = pow((1.0 + exp(-5.7796610169491522 - 169.4915254237288 * var_Membrane__Vm)), (-0.33333333333333331)); // dimensionless
        const double var_i_Na_m_gate__tau_m = 0.001 * var_i_Na_m_gate__alpha_m * var_i_Na_m_gate__beta_m; // second
        const double var_i_PCa__KPCa = 0.00050000000000000001; // millimolar
        const double var_i_PCa__g_PCa = 0.41249999999999998; // A_per_F
        const double var_i_PCa__i_PCa = var_chaste_interface__calcium_dynamics__Cai * var_i_PCa__g_PCa / (var_chaste_interface__calcium_dynamics__Cai + var_i_PCa__KPCa); // A_per_F
        const double var_i_b_Ca__g_b_Ca = 0.69264000000000003; // S_per_F
        const double var_i_b_Na__g_b_Na = 0.90000000000000002; // S_per_F
        const double var_i_f_Xf_gate__Xf_infinity = 1 / (1.0 + exp(15.569999999999999 + 200.0 * var_Membrane__Vm)); // dimensionless
        const double var_i_f_Xf_gate__tau_Xf = 1.8999999999999999 / (1.0 + exp(1.5 + 100.0 * var_Membrane__Vm)); // second
        const double var_i_to_q_gate__q_inf = 1 / (1.0 + exp(4.0769230769230766 + 76.92307692307692 * var_Membrane__Vm)); // dimensionless
        const double var_i_to_q_gate__tau_q = 0.0060599999999999994 + 0.039101999999999998 / (0.065000000000000002 * exp(4.593 + 100.0 * var_Membrane__Vm) + 0.56999999999999995 * exp(-3.52 - 80.0 * var_Membrane__Vm)); // second
        const double var_i_to_r_gate__r_inf = 1 / (1.0 + exp(1.1893333333333334 - 53.333333333333336 * var_Membrane__Vm)); // dimensionless
        const double var_i_to_r_gate__tau_r = 0.0027535199999999998 + 0.01440516 / (1.0369999999999999 * exp(2.7548999999999997 + 90.0 * var_Membrane__Vm) + 0.36899999999999999 * exp(-2.8607999999999998 - 120.0 * var_Membrane__Vm)); // second
        const double var_model_parameters__F = 96485.341499999995; // coulomb_per_mole
        const double var_model_parameters__R = 8.3144720000000003; // joule_per_mole_kelvin
        const double var_electric_potentials__E_Ca = 0.5 * var_model_parameters__R * mParameters[12] * log(mParameters[1] / var_chaste_interface__calcium_dynamics__Cai) / var_model_parameters__F; // volt
        const double var_i_CaL__i_CaL = ((fabs(var_chaste_interface__Membrane__Vm_converted) < 4.30867107414446e-9 * fabs(mParameters[12])) ? (116045061.55051096 * (4.30867107414446e-9 * mParameters[12] + var_chaste_interface__Membrane__Vm_converted) * (0.019297068299999998 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(9.9999999999999995e-8)) + 0.019297068299999998 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(-9.9999999999999995e-8))) / mParameters[12] - 0.019297068299999998 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(-9.9999999999999995e-8))) : (4478658.9572358271 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(23.209012310102192 * var_chaste_interface__Membrane__Vm_converted / mParameters[12])) * var_chaste_interface__Membrane__Vm_converted * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / ((-1.0 + exp(23.209012310102192 * var_chaste_interface__Membrane__Vm_converted / mParameters[12])) * mParameters[12]))); // A_per_F
        const double var_i_Kr_Xr1_gate__V_half = -19.0 - 1000.0 * (-2.1789087017666886 + log(pow((1.0 + 0.38461538461538458 * mParameters[1]), 4) / (pow((0.57999999999999996 + mParameters[1]), 4) * var_i_Kr_Xr1_gate__L0))) * var_model_parameters__R * mParameters[12] / (var_i_Kr_Xr1_gate__Q * var_model_parameters__F); // millivolt
        const double var_i_Kr_Xr1_gate__Xr1_inf = 1 / (1.0 + exp(0.2040816326530612 * var_i_Kr_Xr1_gate__V_half - 204.08163265306121 * var_Membrane__Vm)); // dimensionless
        const double var_i_b_Ca__i_b_Ca = (-var_electric_potentials__E_Ca + var_Membrane__Vm) * var_i_b_Ca__g_b_Ca; // A_per_F
        const double var_model_parameters__V_SR = 583.73000000000002; // micrometre_cube
        const double var_model_parameters__Vc = 8800.0; // micrometre_cube
        const double var_calcium_dynamics__Ca_SR_orig_deriv = (-var_calcium_dynamics__i_leak - var_calcium_dynamics__i_rel + var_calcium_dynamics__i_up) * var_calcium_dynamics__Ca_SR_bufSR * var_model_parameters__Vc / var_model_parameters__V_SR; // millimolar / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_SR = 0.001 * var_calcium_dynamics__Ca_SR_orig_deriv; // millimolar / millisecond
        const double var_electric_potentials__E_Na = var_model_parameters__R * mParameters[12] * log(mParameters[3] / var_chaste_interface__sodium_dynamics__Nai) / var_model_parameters__F; // volt
        const double var_i_Na__i_Na = pow(var_chaste_interface__i_Na_m_gate__m, 3) * (-var_electric_potentials__E_Na + var_Membrane__Vm) * var_i_Na__TTX_coeff * mParameters[5] * var_chaste_interface__i_Na_h_gate__h * var_chaste_interface__i_Na_j_gate__j; // A_per_F
        const double var_i_NaCa__i_NaCa = (pow(var_chaste_interface__sodium_dynamics__Nai, 3) * mParameters[1] * exp(var_Membrane__Vm * var_i_NaCa__gamma * var_model_parameters__F / (var_model_parameters__R * mParameters[12])) - pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai * var_i_NaCa__alpha * exp((-1.0 + var_i_NaCa__gamma) * var_Membrane__Vm * var_model_parameters__F / (var_model_parameters__R * mParameters[12]))) * var_i_NaCa__kNaCa / ((1.0 + var_i_NaCa__Ksat * exp((-1.0 + var_i_NaCa__gamma) * var_Membrane__Vm * var_model_parameters__F / (var_model_parameters__R * mParameters[12]))) * (pow(var_i_NaCa__KmNai, 3) + pow(mParameters[3], 3)) * (var_i_NaCa__KmCa + mParameters[1])); // A_per_F
        const double var_calcium_dynamics__Cai_orig_deriv = (-var_calcium_dynamics__i_up - 4.9999999999999994e+17 * (-2.0 * var_i_NaCa__i_NaCa + var_i_CaL__i_CaL + var_i_PCa__i_PCa + var_i_b_Ca__i_b_Ca) * mParameters[11] / (var_model_parameters__F * var_model_parameters__Vc) + var_calcium_dynamics__i_leak + var_calcium_dynamics__i_rel) * var_calcium_dynamics__Cai_bufc; // millimolar / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Cai = 0.001 * var_calcium_dynamics__Cai_orig_deriv; // millimolar / millisecond
        const double var_i_NaK__i_NaK = var_i_NaK__PNaK * mParameters[2] * var_chaste_interface__sodium_dynamics__Nai / ((var_i_NaK__Km_K + mParameters[2]) * (var_i_NaK__Km_Na + var_chaste_interface__sodium_dynamics__Nai) * (1.0 + 0.035299999999999998 * exp(-var_Membrane__Vm * var_model_parameters__F / (var_model_parameters__R * mParameters[12])) + 0.1245 * exp(-0.10000000000000001 * var_Membrane__Vm * var_model_parameters__F / (var_model_parameters__R * mParameters[12])))); // A_per_F
        const double var_i_b_Na__i_b_Na = (-var_electric_potentials__E_Na + var_Membrane__Vm) * var_i_b_Na__g_b_Na; // A_per_F
        const double var_sodium_dynamics__Nai_orig_deriv = -9.9999999999999987e+17 * (3.0 * var_i_NaCa__i_NaCa + 3.0 * var_i_NaK__i_NaK + var_i_Na__i_Na + var_i_b_Na__i_b_Na) * mParameters[11] / (var_model_parameters__F * var_model_parameters__Vc); // millimolar / second
        const double d_dt_chaste_interface_var_sodium_dynamics__Nai = 0.001 * var_sodium_dynamics__Nai_orig_deriv; // millimolar / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_Membrane__Vm_converted = 0.0;
        }
        else
        {
            const double var_current_blockers__Chromanol_iKs30 = 0; // dimensionless
            const double var_current_blockers__Chromanol_iKs50 = 0; // dimensionless
            const double var_current_blockers__Chromanol_iKs70 = 0; // dimensionless
            const double var_current_blockers__Chromanol_iKs90 = 0; // dimensionless
            const double var_current_blockers__E4031_100nM = 0; // dimensionless
            const double var_current_blockers__E4031_30nM = 0; // dimensionless
            const double var_electric_potentials__PkNa = 0.029999999999999999; // dimensionless
            const double var_i_Kr__E4031_coeff = ((var_current_blockers__E4031_30nM == 1.0) ? (0.77000000000000002) : ((var_current_blockers__E4031_100nM == 1.0) ? (0.5) : (1.0))); // dimensionless
            const double var_i_Ks__Chromanol_coeff = ((var_current_blockers__Chromanol_iKs30 == 1.0) ? (0.69999999999999996) : ((var_current_blockers__Chromanol_iKs50 == 1.0) ? (0.5) : ((var_current_blockers__Chromanol_iKs70 == 1.0) ? (0.29999999999999999) : ((var_current_blockers__Chromanol_iKs90 == 1.0) ? (0.10000000000000001) : (1.0))))); // dimensionless
            const double var_i_Ks__g_Ks_total = (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * mParameters[9]; // S_per_F
            const double var_i_f__E_f = -0.017000000000000001; // volt
            const double var_i_f__i_f = (-var_i_f__E_f + var_Membrane__Vm) * mParameters[6] * var_chaste_interface__i_f_Xf_gate__Xf; // A_per_F
            const double var_i_K1__g_K1_total = 0.43033148291193518 * sqrt(mParameters[2]) * mParameters[7]; // S_per_F
            const double var_i_Kr__g_Kr_total = 0.43033148291193518 * sqrt(mParameters[2]) * mParameters[8]; // S_per_F
            const double var_electric_potentials__E_K = var_model_parameters__R * mParameters[12] * log(mParameters[2] / mParameters[0]) / var_model_parameters__F; // volt
            const double var_i_K1__alpha_K1 = 3.9100000000000001 / (1.0 + exp(-118.83999999999999 + 594.19999999999993 * var_Membrane__Vm - 594.19999999999993 * var_electric_potentials__E_K)); // dimensionless
            const double var_i_K1__beta_K1 = (-1.5089999999999999 * exp(0.02 + 0.20000000000000001 * var_Membrane__Vm - 0.20000000000000001 * var_electric_potentials__E_K) + exp(-5.8860000000000001 + 588.60000000000002 * var_Membrane__Vm - 588.60000000000002 * var_electric_potentials__E_K)) / (1.0 + exp(454.69999999999999 * var_Membrane__Vm - 454.69999999999999 * var_electric_potentials__E_K)); // dimensionless
            const double var_i_K1__XK1_inf = var_i_K1__alpha_K1 / (var_i_K1__alpha_K1 + var_i_K1__beta_K1); // dimensionless
            const double var_i_K1__i_K1 = (-var_electric_potentials__E_K + var_Membrane__Vm) * var_i_K1__XK1_inf * var_i_K1__g_K1_total; // A_per_F
            const double var_i_Kr__i_Kr = (-var_electric_potentials__E_K + var_Membrane__Vm) * var_i_Kr__E4031_coeff * var_i_Kr__g_Kr_total * var_chaste_interface__i_Kr_Xr1_gate__Xr1 * var_chaste_interface__i_Kr_Xr2_gate__Xr2; // A_per_F
            const double var_i_to__i_to = (-var_electric_potentials__E_K + var_Membrane__Vm) * mParameters[10] * var_chaste_interface__i_to_q_gate__q * var_chaste_interface__i_to_r_gate__r; // A_per_F
            const double var_electric_potentials__E_Ks = var_model_parameters__R * mParameters[12] * log((var_electric_potentials__PkNa * mParameters[3] + mParameters[2]) / (var_electric_potentials__PkNa * var_chaste_interface__sodium_dynamics__Nai + mParameters[0])) / var_model_parameters__F; // volt
            const double var_i_Ks__i_Ks = pow(var_chaste_interface__i_Ks_Xs_gate__Xs, 2) * (-var_electric_potentials__E_Ks + var_Membrane__Vm) * var_i_Ks__Chromanol_coeff * var_i_Ks__g_Ks_total; // A_per_F
            const double var_stim_mode__i_stim_converted = -GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
            const double var_stim_mode__i_stim = var_stim_mode__i_stim_converted / HeartConfig::Instance()->GetCapacitance(); // A_per_F
            const double var_Membrane__Vm_orig_deriv = -var_i_CaL__i_CaL - var_i_K1__i_K1 - var_i_Kr__i_Kr - var_i_Ks__i_Ks - var_i_Na__i_Na - var_i_NaCa__i_NaCa - var_i_NaK__i_NaK - var_i_PCa__i_PCa - var_i_b_Ca__i_b_Ca - var_i_b_Na__i_b_Na - var_i_f__i_f - var_i_to__i_to + var_stim_mode__i_stim; // volt / second
            const double var_Membrane__Vm_orig_deriv_a = 0.001 * var_Membrane__Vm_orig_deriv; // volt / millisecond
            d_dt_chaste_interface_var_Membrane__Vm_converted = 1000.0 * var_Membrane__Vm_orig_deriv_a; // millivolt / millisecond
        }
        
        rDY[0] = d_dt_chaste_interface_var_Membrane__Vm_converted;
        rDY[1] = d_dt_chaste_interface_var_calcium_dynamics__Cai;
        rAlphaOrTau[2] = 1000.0 * var_i_Na_m_gate__tau_m;
        rBetaOrInf[2] = var_i_Na_m_gate__m_inf;
        rAlphaOrTau[3] = 1000.0 * var_i_Na_h_gate__tau_h;
        rBetaOrInf[3] = var_i_Na_h_gate__h_inf;
        rAlphaOrTau[4] = 1000.0 * var_i_Na_j_gate__tau_j;
        rBetaOrInf[4] = var_i_Na_j_gate__j_inf;
        rAlphaOrTau[5] = 1000.0 * var_i_CaL_d_gate__tau_d;
        rBetaOrInf[5] = var_i_CaL_d_gate__d_infinity;
        rDY[6] = d_dt_chaste_interface_var_i_CaL_f1_gate__f1;
        rAlphaOrTau[7] = 1000.0 * var_i_CaL_f2_gate__tau_f2;
        rBetaOrInf[7] = var_i_CaL_f2_gate__f2_inf;
        rDY[8] = d_dt_chaste_interface_var_i_CaL_fCa_gate__fCa;
        rAlphaOrTau[9] = 1000.0 * var_i_Kr_Xr1_gate__tau_Xr1;
        rBetaOrInf[9] = var_i_Kr_Xr1_gate__Xr1_inf;
        rAlphaOrTau[10] = 1000.0 * var_i_Kr_Xr2_gate__tau_Xr2;
        rBetaOrInf[10] = var_i_Kr_Xr2_gate__Xr2_infinity;
        rAlphaOrTau[11] = 1000.0 * var_i_Ks_Xs_gate__tau_Xs;
        rBetaOrInf[11] = var_i_Ks_Xs_gate__Xs_infinity;
        rAlphaOrTau[12] = 1000.0 * var_i_f_Xf_gate__tau_Xf;
        rBetaOrInf[12] = var_i_f_Xf_gate__Xf_infinity;
        rAlphaOrTau[13] = 1000.0 * var_i_to_q_gate__tau_q;
        rBetaOrInf[13] = var_i_to_q_gate__q_inf;
        rAlphaOrTau[14] = 1000.0 * var_i_to_r_gate__tau_r;
        rBetaOrInf[14] = var_i_to_r_gate__r_inf;
        rDY[15] = d_dt_chaste_interface_var_sodium_dynamics__Nai;
        rDY[16] = d_dt_chaste_interface_var_calcium_dynamics__Ca_SR;
        rDY[17] = d_dt_chaste_interface_var_calcium_dynamics__g;
    }
    void Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLRushLarsenOpt::ComputeOneStepExceptVoltage(const std::vector<double> &rDY, const std::vector<double> &rAlphaOrTau, const std::vector<double> &rBetaOrInf)
    {
        std::vector<double>& rY = rGetStateVariables();
        
        rY[1] += mDt * rDY[1];
        rY[2] = rBetaOrInf[2] + (rY[2] - rBetaOrInf[2])*exp(-mDt/rAlphaOrTau[2]);
        rY[3] = rBetaOrInf[3] + (rY[3] - rBetaOrInf[3])*exp(-mDt/rAlphaOrTau[3]);
        rY[4] = rBetaOrInf[4] + (rY[4] - rBetaOrInf[4])*exp(-mDt/rAlphaOrTau[4]);
        rY[5] = rBetaOrInf[5] + (rY[5] - rBetaOrInf[5])*exp(-mDt/rAlphaOrTau[5]);
        rY[6] += mDt * rDY[6];
        rY[7] = rBetaOrInf[7] + (rY[7] - rBetaOrInf[7])*exp(-mDt/rAlphaOrTau[7]);
        rY[8] += mDt * rDY[8];
        rY[9] = rBetaOrInf[9] + (rY[9] - rBetaOrInf[9])*exp(-mDt/rAlphaOrTau[9]);
        rY[10] = rBetaOrInf[10] + (rY[10] - rBetaOrInf[10])*exp(-mDt/rAlphaOrTau[10]);
        rY[11] = rBetaOrInf[11] + (rY[11] - rBetaOrInf[11])*exp(-mDt/rAlphaOrTau[11]);
        rY[12] = rBetaOrInf[12] + (rY[12] - rBetaOrInf[12])*exp(-mDt/rAlphaOrTau[12]);
        rY[13] = rBetaOrInf[13] + (rY[13] - rBetaOrInf[13])*exp(-mDt/rAlphaOrTau[13]);
        rY[14] = rBetaOrInf[14] + (rY[14] - rBetaOrInf[14])*exp(-mDt/rAlphaOrTau[14]);
        rY[15] += mDt * rDY[15];
        rY[16] += mDt * rDY[16];
        rY[17] += mDt * rDY[17];
    }

    std::vector<double> Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLRushLarsenOpt::ComputeDerivedQuantities(double var_chaste_interface__environment__time_converted, const std::vector<double> & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057623841
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 1.80773974140477e-05
        double var_chaste_interface__i_Na_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.102953468725004
        double var_chaste_interface__i_Na_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.786926637881461
        double var_chaste_interface__i_Na_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.253943221774722
        double var_chaste_interface__i_CaL_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 8.96088425225182e-05
        double var_chaste_interface__i_CaL_f1_gate__f1 = rY[6];
        // Units: dimensionless; Initial value: 0.970411811263976
        double var_chaste_interface__i_CaL_f2_gate__f2 = rY[7];
        // Units: dimensionless; Initial value: 0.999965815466749
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[8];
        // Units: dimensionless; Initial value: 0.998925296531804
        double var_chaste_interface__i_Kr_Xr1_gate__Xr1 = rY[9];
        // Units: dimensionless; Initial value: 0.00778547011240132
        double var_chaste_interface__i_Kr_Xr2_gate__Xr2 = rY[10];
        // Units: dimensionless; Initial value: 0.432162576531617
        double var_chaste_interface__i_Ks_Xs_gate__Xs = rY[11];
        // Units: dimensionless; Initial value: 0.0322944866983666
        double var_chaste_interface__i_f_Xf_gate__Xf = rY[12];
        // Units: dimensionless; Initial value: 0.100615100568753
        double var_chaste_interface__i_to_q_gate__q = rY[13];
        // Units: dimensionless; Initial value: 0.839295925773219
        double var_chaste_interface__i_to_r_gate__r = rY[14];
        // Units: dimensionless; Initial value: 0.00573289893326379
        double var_chaste_interface__sodium_dynamics__Nai = rY[15];
        // Units: millimolar; Initial value: 10.9248496211574
        
        // Mathematics
        const double var_Membrane__Vm = 0.001 * var_chaste_interface__Membrane__Vm_converted; // volt
        const double var_calcium_dynamics__Buf_C = 0.25; // millimolar
        const double var_calcium_dynamics__Kbuf_C = 0.001; // millimolar
        const double var_calcium_dynamics__Cai_bufc = 1 / (1.0 + var_calcium_dynamics__Buf_C * var_calcium_dynamics__Kbuf_C / pow((var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__Kbuf_C), 2)); // dimensionless
        const double var_current_blockers__Chromanol_iKs30 = 0; // dimensionless
        const double var_current_blockers__Chromanol_iKs50 = 0; // dimensionless
        const double var_current_blockers__Chromanol_iKs70 = 0; // dimensionless
        const double var_current_blockers__Chromanol_iKs90 = 0; // dimensionless
        const double var_current_blockers__E4031_100nM = 0; // dimensionless
        const double var_current_blockers__E4031_30nM = 0; // dimensionless
        const double var_current_blockers__TTX_10uM = 0; // dimensionless
        const double var_current_blockers__TTX_30uM = 0; // dimensionless
        const double var_current_blockers__TTX_3uM = 0; // dimensionless
        const double var_electric_potentials__PkNa = 0.029999999999999999; // dimensionless
        const double var_i_Kr__E4031_coeff = ((var_current_blockers__E4031_30nM == 1.0) ? (0.77000000000000002) : ((var_current_blockers__E4031_100nM == 1.0) ? (0.5) : (1.0))); // dimensionless
        const double var_i_Ks__Chromanol_coeff = ((var_current_blockers__Chromanol_iKs30 == 1.0) ? (0.69999999999999996) : ((var_current_blockers__Chromanol_iKs50 == 1.0) ? (0.5) : ((var_current_blockers__Chromanol_iKs70 == 1.0) ? (0.29999999999999999) : ((var_current_blockers__Chromanol_iKs90 == 1.0) ? (0.10000000000000001) : (1.0))))); // dimensionless
        const double var_i_Ks__g_Ks_total = (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * mParameters[9]; // S_per_F
        const double var_i_Na__TTX_coeff = ((var_current_blockers__TTX_3uM == 1.0) ? (0.17999999999999999) : ((var_current_blockers__TTX_10uM == 1.0) ? (0.059999999999999998) : ((var_current_blockers__TTX_30uM == 1.0) ? (0.02) : (1.0)))); // dimensionless
        const double var_i_NaCa__KmCa = 1.3799999999999999; // millimolar
        const double var_i_NaCa__KmNai = 87.5; // millimolar
        const double var_i_NaCa__Ksat = 0.10000000000000001; // dimensionless
        const double var_i_NaCa__alpha = 2.8571431999999999; // dimensionless
        const double var_i_NaCa__gamma = 0.34999999999999998; // dimensionless
        const double var_i_NaCa__kNaCa = 4900.0; // A_per_F
        const double var_i_NaK__Km_K = 1.0; // millimolar
        const double var_i_NaK__Km_Na = 40.0; // millimolar
        const double var_i_NaK__PNaK = 1.8414239999999999; // A_per_F
        const double var_i_PCa__KPCa = 0.00050000000000000001; // millimolar
        const double var_i_PCa__g_PCa = 0.41249999999999998; // A_per_F
        const double var_i_PCa__i_PCa = var_chaste_interface__calcium_dynamics__Cai * var_i_PCa__g_PCa / (var_chaste_interface__calcium_dynamics__Cai + var_i_PCa__KPCa); // A_per_F
        const double var_i_PCa__i_PCa_converted = HeartConfig::Instance()->GetCapacitance() * var_i_PCa__i_PCa; // uA_per_cm2
        const double var_i_f__E_f = -0.017000000000000001; // volt
        const double var_i_f__i_f = (-var_i_f__E_f + var_Membrane__Vm) * mParameters[6] * var_chaste_interface__i_f_Xf_gate__Xf; // A_per_F
        const double var_i_f__i_f_converted = HeartConfig::Instance()->GetCapacitance() * var_i_f__i_f; // uA_per_cm2
        const double var_model_parameters__Cm_converted = 1000000.0 * mParameters[11]; // uF
        const double var_model_parameters__F = 96485.341499999995; // coulomb_per_mole
        const double var_i_K1__g_K1_total = 0.43033148291193518 * sqrt(mParameters[2]) * mParameters[7]; // S_per_F
        const double var_i_Kr__g_Kr_total = 0.43033148291193518 * sqrt(mParameters[2]) * mParameters[8]; // S_per_F
        const double var_model_parameters__R = 8.3144720000000003; // joule_per_mole_kelvin
        const double var_electric_potentials__E_K = var_model_parameters__R * mParameters[12] * log(mParameters[2] / mParameters[0]) / var_model_parameters__F; // volt
        const double var_i_CaL__i_CaL = ((fabs(var_chaste_interface__Membrane__Vm_converted) < 4.30867107414446e-9 * fabs(mParameters[12])) ? (116045061.55051096 * (4.30867107414446e-9 * mParameters[12] + var_chaste_interface__Membrane__Vm_converted) * (0.019297068299999998 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(9.9999999999999995e-8)) + 0.019297068299999998 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(-9.9999999999999995e-8))) / mParameters[12] - 0.019297068299999998 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(-9.9999999999999995e-8))) : (4478658.9572358271 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(23.209012310102192 * var_chaste_interface__Membrane__Vm_converted / mParameters[12])) * var_chaste_interface__Membrane__Vm_converted * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / ((-1.0 + exp(23.209012310102192 * var_chaste_interface__Membrane__Vm_converted / mParameters[12])) * mParameters[12]))); // A_per_F
        const double var_i_CaL__i_CaL_converted = HeartConfig::Instance()->GetCapacitance() * var_i_CaL__i_CaL; // uA_per_cm2
        const double var_i_K1__alpha_K1 = 3.9100000000000001 / (1.0 + exp(-118.83999999999999 + 594.19999999999993 * var_Membrane__Vm - 594.19999999999993 * var_electric_potentials__E_K)); // dimensionless
        const double var_i_K1__beta_K1 = (-1.5089999999999999 * exp(0.02 + 0.20000000000000001 * var_Membrane__Vm - 0.20000000000000001 * var_electric_potentials__E_K) + exp(-5.8860000000000001 + 588.60000000000002 * var_Membrane__Vm - 588.60000000000002 * var_electric_potentials__E_K)) / (1.0 + exp(454.69999999999999 * var_Membrane__Vm - 454.69999999999999 * var_electric_potentials__E_K)); // dimensionless
        const double var_i_K1__XK1_inf = var_i_K1__alpha_K1 / (var_i_K1__alpha_K1 + var_i_K1__beta_K1); // dimensionless
        const double var_i_K1__i_K1 = (-var_electric_potentials__E_K + var_Membrane__Vm) * var_i_K1__XK1_inf * var_i_K1__g_K1_total; // A_per_F
        const double var_i_K1__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_i_K1__i_K1; // uA_per_cm2
        const double var_i_Kr__i_Kr = (-var_electric_potentials__E_K + var_Membrane__Vm) * var_i_Kr__E4031_coeff * var_i_Kr__g_Kr_total * var_chaste_interface__i_Kr_Xr1_gate__Xr1 * var_chaste_interface__i_Kr_Xr2_gate__Xr2; // A_per_F
        const double var_i_Kr__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_i_Kr__i_Kr; // uA_per_cm2
        const double var_i_to__i_to = (-var_electric_potentials__E_K + var_Membrane__Vm) * mParameters[10] * var_chaste_interface__i_to_q_gate__q * var_chaste_interface__i_to_r_gate__r; // A_per_F
        const double var_i_to__i_to_converted = HeartConfig::Instance()->GetCapacitance() * var_i_to__i_to; // uA_per_cm2
        const double var_electric_potentials__E_Ks = var_model_parameters__R * mParameters[12] * log((var_electric_potentials__PkNa * mParameters[3] + mParameters[2]) / (var_electric_potentials__PkNa * var_chaste_interface__sodium_dynamics__Nai + mParameters[0])) / var_model_parameters__F; // volt
        const double var_electric_potentials__E_Na = var_model_parameters__R * mParameters[12] * log(mParameters[3] / var_chaste_interface__sodium_dynamics__Nai) / var_model_parameters__F; // volt
        const double var_i_Ks__i_Ks = pow(var_chaste_interface__i_Ks_Xs_gate__Xs, 2) * (-var_electric_potentials__E_Ks + var_Membrane__Vm) * var_i_Ks__Chromanol_coeff * var_i_Ks__g_Ks_total; // A_per_F
        const double var_i_Ks__i_Ks_converted = HeartConfig::Instance()->GetCapacitance() * var_i_Ks__i_Ks; // uA_per_cm2
        const double var_i_Na__i_Na = pow(var_chaste_interface__i_Na_m_gate__m, 3) * (-var_electric_potentials__E_Na + var_Membrane__Vm) * var_i_Na__TTX_coeff * mParameters[5] * var_chaste_interface__i_Na_h_gate__h * var_chaste_interface__i_Na_j_gate__j; // A_per_F
        const double var_i_Na__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_i_Na__i_Na; // uA_per_cm2
        const double var_i_NaCa__i_NaCa = (pow(var_chaste_interface__sodium_dynamics__Nai, 3) * mParameters[1] * exp(var_Membrane__Vm * var_i_NaCa__gamma * var_model_parameters__F / (var_model_parameters__R * mParameters[12])) - pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai * var_i_NaCa__alpha * exp((-1.0 + var_i_NaCa__gamma) * var_Membrane__Vm * var_model_parameters__F / (var_model_parameters__R * mParameters[12]))) * var_i_NaCa__kNaCa / ((1.0 + var_i_NaCa__Ksat * exp((-1.0 + var_i_NaCa__gamma) * var_Membrane__Vm * var_model_parameters__F / (var_model_parameters__R * mParameters[12]))) * (pow(var_i_NaCa__KmNai, 3) + pow(mParameters[3], 3)) * (var_i_NaCa__KmCa + mParameters[1])); // A_per_F
        const double var_i_NaCa__i_NaCa_converted = HeartConfig::Instance()->GetCapacitance() * var_i_NaCa__i_NaCa; // uA_per_cm2
        const double var_i_NaK__i_NaK = var_i_NaK__PNaK * mParameters[2] * var_chaste_interface__sodium_dynamics__Nai / ((var_i_NaK__Km_K + mParameters[2]) * (var_i_NaK__Km_Na + var_chaste_interface__sodium_dynamics__Nai) * (1.0 + 0.035299999999999998 * exp(-var_Membrane__Vm * var_model_parameters__F / (var_model_parameters__R * mParameters[12])) + 0.1245 * exp(-0.10000000000000001 * var_Membrane__Vm * var_model_parameters__F / (var_model_parameters__R * mParameters[12])))); // A_per_F
        const double var_i_NaK__i_NaK_converted = HeartConfig::Instance()->GetCapacitance() * var_i_NaK__i_NaK; // uA_per_cm2
        const double var_stim_mode__i_stim_converted = -GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2

        std::vector<double> dqs(18);
        dqs[0] = var_calcium_dynamics__Cai_bufc;
        dqs[1] = var_i_CaL__i_CaL_converted;
        dqs[2] = var_i_PCa__i_PCa_converted;
        dqs[3] = var_model_parameters__Cm_converted;
        dqs[4] = var_i_Na__i_Na_converted;
        dqs[5] = var_i_f__i_f_converted;
        dqs[6] = var_i_K1__i_K1_converted;
        dqs[7] = var_i_K1__g_K1_total;
        dqs[8] = var_i_Kr__i_Kr_converted;
        dqs[9] = var_i_Kr__g_Kr_total;
        dqs[10] = var_i_Ks__i_Ks_converted;
        dqs[11] = var_i_Ks__g_Ks_total;
        dqs[12] = var_i_NaCa__i_NaCa_converted;
        dqs[13] = var_i_NaK__i_NaK_converted;
        dqs[14] = var_stim_mode__i_stim_converted;
        dqs[15] = var_i_to__i_to_converted;
        dqs[16] = var_chaste_interface__Membrane__Vm_converted;
        dqs[17] = var_chaste_interface__environment__time_converted;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLRushLarsenOpt>::Initialise(void)
{
    this->mSystemName = "paci_hyttinen_aaltosetala_severi_ventricularVersion";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-74.3340057623841);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.80773974140477e-05);

    // rY[2]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.102953468725004);

    // rY[3]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.786926637881461);

    // rY[4]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.253943221774722);

    // rY[5]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.96088425225182e-05);

    // rY[6]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.970411811263976);

    // rY[7]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f2_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999965815466749);

    // rY[8]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_fCa_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.998925296531804);

    // rY[9]:
    this->mVariableNames.push_back("i_Kr_Xr1_gate__Xr1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00778547011240132);

    // rY[10]:
    this->mVariableNames.push_back("i_Kr_Xr2_gate__Xr2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.432162576531617);

    // rY[11]:
    this->mVariableNames.push_back("i_Ks_Xs_gate__Xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0322944866983666);

    // rY[12]:
    this->mVariableNames.push_back("membrane_hyperpolarisation_activated_funny_current_single_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.100615100568753);

    // rY[13]:
    this->mVariableNames.push_back("i_to_q_gate__q");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.839295925773219);

    // rY[14]:
    this->mVariableNames.push_back("i_to_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00573289893326379);

    // rY[15]:
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(10.9248496211574);

    // rY[16]:
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(-0.2734234751931);

    // rY[17]:
    this->mVariableNames.push_back("calcium_dynamics__g");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999999981028517);

    // mParameters[0]:
    this->mParameterNames.push_back("cytosolic_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[1]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[2]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[3]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[4]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("metre_cube_per_F_per_s");

    // mParameters[5]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("S_per_F");

    // mParameters[6]:
    this->mParameterNames.push_back("membrane_hyperpolarisation_activated_funny_current_potassium_component_conductance");
    this->mParameterUnits.push_back("S_per_F");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("S_per_F");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("S_per_F");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("S_per_F");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
    this->mParameterUnits.push_back("S_per_F");

    // mParameters[11]:
    this->mParameterNames.push_back("model_parameters__Cm");
    this->mParameterUnits.push_back("farad");

    // mParameters[12]:
    this->mParameterNames.push_back("temperature");
    this->mParameterUnits.push_back("kelvin");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("cytosolic_calcium_flux_scaling_from_intrinsic_buffers");
    this->mDerivedQuantityUnits.push_back("dimensionless");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_calcium_pump_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_capacitance");
    this->mDerivedQuantityUnits.push_back("uF");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_hyperpolarisation_activated_funny_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mDerivedQuantityUnits.push_back("S_per_F");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mDerivedQuantityUnits.push_back("S_per_F");

    // Derived Quantity index [10]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [11]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mDerivedQuantityUnits.push_back("S_per_F");

    // Derived Quantity index [12]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [13]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_potassium_pump_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [14]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [15]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [16]:
    this->mDerivedQuantityNames.push_back("membrane_voltage");
    this->mDerivedQuantityUnits.push_back("millivolt");

    // Derived Quantity index [17]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLRushLarsenOpt)

