#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: pasek_simurda_christe_2006
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: AnalyticCvodeOpt)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "pasek_simurda_christe_2006.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class Cellpasek_simurda_christe_2006FromCellMLCvodeOpt_LookupTables : public AbstractLookupTableCollection
{
public:
    static Cellpasek_simurda_christe_2006FromCellMLCvodeOpt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new Cellpasek_simurda_christe_2006FromCellMLCvodeOpt_LookupTables);
        }
        return mpInstance.get();
    }

    void FreeMemory()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }

    // Row lookup methods
    // using linear-interpolation

    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<24; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }


    const double * IndexTable0(double var_chaste_interface__Vms__Vms)
    {
        const double _offset_0 = var_chaste_interface__Vms__Vms - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = Cellpasek_simurda_christe_2006FromCellMLCvodeOpt_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }


// LCOV_EXCL_START
    bool CheckIndex0(double& var_chaste_interface__Vms__Vms)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__Vms__Vms>mTableMaxs[0] || var_chaste_interface__Vms__Vms<mTableMins[0])
        {
// LCOV_EXCL_START
            _oob_0 = true;
// LCOV_EXCL_STOP
        }
        return _oob_0;
    }
// LCOV_EXCL_STOP

    ~Cellpasek_simurda_christe_2006FromCellMLCvodeOpt_LookupTables()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

    }

protected:
    Cellpasek_simurda_christe_2006FromCellMLCvodeOpt_LookupTables(const Cellpasek_simurda_christe_2006FromCellMLCvodeOpt_LookupTables&);
    Cellpasek_simurda_christe_2006FromCellMLCvodeOpt_LookupTables& operator= (const Cellpasek_simurda_christe_2006FromCellMLCvodeOpt_LookupTables&);
    Cellpasek_simurda_christe_2006FromCellMLCvodeOpt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);

        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 24;
        mTableMins[0] = -250.0;
        mTableMaxs[0] = 550.0;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;

        Cellpasek_simurda_christe_2006FromCellMLCvodeOpt_LookupTables::RegenerateTables();
    }

    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);


        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][24];

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vms__Vms = mTableMins[0] + i*mTableSteps[0];
                double val = exp(0.078728915539782576 * var_chaste_interface__Vms__Vms);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[0] < 2){
                    double left = _lookup_table_0[i-1][0];
                    double right = _lookup_table_0[i+1][0];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 0 at ["<<i<<"][0] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[0] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[0] >= 2){
                    EXCEPTION("Lookup table 0 at ["<<i<<"][0] has non-finite value: " << val);
                }
                _lookup_table_0[i][0] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vms__Vms = mTableMins[0] + i*mTableSteps[0];
                double val = -1.0 + exp(0.078728915539782576 * var_chaste_interface__Vms__Vms);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[1] < 2){
                    double left = _lookup_table_0[i-1][1];
                    double right = _lookup_table_0[i+1][1];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 1 at ["<<i<<"][1] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[1] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[1] >= 2){
                    EXCEPTION("Lookup table 1 at ["<<i<<"][1] has non-finite value: " << val);
                }
                _lookup_table_0[i][1] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vms__Vms = mTableMins[0] + i*mTableSteps[0];
                double val = exp(0.018700000000000001 * var_chaste_interface__Vms__Vms);

                _lookup_table_0[i][2] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vms__Vms = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-0.018700000000000001 * var_chaste_interface__Vms__Vms);

                _lookup_table_0[i][3] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vms__Vms = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + 0.1245 * exp(-0.0039364457769891295 * var_chaste_interface__Vms__Vms) + 0.0052142857142857138 * (-1.0 + exp(2.0802377414561666)) * exp(-0.039364457769891288 * var_chaste_interface__Vms__Vms);

                _lookup_table_0[i][4] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vms__Vms = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(4.9444444444444438 + 0.18518518518518517 * var_chaste_interface__Vms__Vms));

                _lookup_table_0[i][5] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vms__Vms = mTableMins[0] + i*mTableSteps[0];
                double val = 0.014999999999999999 / (1.0 + exp(3.0 + 0.040000000000000001 * var_chaste_interface__Vms__Vms)) + 0.040000000000000001 / (1.0 + exp(1.0 - 0.040000000000000001 * var_chaste_interface__Vms__Vms)) + 0.105 * exp(-14.0625 * pow((1 + 0.022222222222222223 * var_chaste_interface__Vms__Vms), 2));

                _lookup_table_0[i][6] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vms__Vms = mTableMins[0] + i*mTableSteps[0];
                double val = 0.014999999999999999 / (1.0 + exp(3.0 + 0.040000000000000001 * var_chaste_interface__Vms__Vms)) + 0.080000000000000002 / (1.0 + exp(-11.0 - 0.20000000000000001 * var_chaste_interface__Vms__Vms)) + 0.041000000000000002 * exp(-15.340277777777779 * pow((1 + 0.021276595744680851 * var_chaste_interface__Vms__Vms), 2));

                _lookup_table_0[i][7] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vms__Vms = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-3.0600000000000001 - 0.20000000000000001 * var_chaste_interface__Vms__Vms));

                _lookup_table_0[i][8] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vms__Vms = mTableMins[0] + i*mTableSteps[0];
                double val = 0.00025000000000000001 + 0.0010499999999999999 * exp(-0.64800000000000002 * pow((-1 + 0.055555555555555552 * var_chaste_interface__Vms__Vms), 2)) + 0.0030500000000000002 * exp(-0.22049999999999997 * pow((1 + 0.14285714285714285 * var_chaste_interface__Vms__Vms), 2));

                _lookup_table_0[i][9] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vms__Vms = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(13.225190839694655 + 0.095419847328244267 * var_chaste_interface__Vms__Vms));

                _lookup_table_0[i][10] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vms__Vms = mTableMins[0] + i*mTableSteps[0];
                double val = 0.56230000000000002 * exp(-5.6377730796335452 - 0.070472163495419307 * var_chaste_interface__Vms__Vms) + 0.11885 * exp(2.8198801550934083 + 0.035248501938667604 * var_chaste_interface__Vms__Vms);

                _lookup_table_0[i][11] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vms__Vms = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-0.97292724196277491 - 0.084602368866328256 * var_chaste_interface__Vms__Vms));

                _lookup_table_0[i][12] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vms__Vms = mTableMins[0] + i*mTableSteps[0];
                double val = 9.8900000000000006 * exp(-3.8000000000000003 - 0.10000000000000001 * var_chaste_interface__Vms__Vms) + 4.516 * exp(1.7885000000000002 + 0.035770000000000003 * var_chaste_interface__Vms__Vms);

                _lookup_table_0[i][13] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vms__Vms = mTableMins[0] + i*mTableSteps[0];
                double val = 0.00047619047619047619 / (1.0 + exp(8.4951456310679614 + 0.097087378640776698 * var_chaste_interface__Vms__Vms));

                _lookup_table_0[i][14] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vms__Vms = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-0.92819614711033271 - 0.087565674255691769 * var_chaste_interface__Vms__Vms));

                _lookup_table_0[i][15] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vms__Vms = mTableMins[0] + i*mTableSteps[0];
                double val = 45.159999999999997 * exp(1.7885000000000002 + 0.035770000000000003 * var_chaste_interface__Vms__Vms) + 98.900000000000006 * exp(-3.8000000000000003 - 0.10000000000000001 * var_chaste_interface__Vms__Vms);

                _lookup_table_0[i][16] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vms__Vms = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(6.5803808776746413 + 0.14526227103034528 * var_chaste_interface__Vms__Vms));

                _lookup_table_0[i][17] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vms__Vms = mTableMins[0] + i*mTableSteps[0];
                double val = 0.035000000000000003 + 0.34999999999999998 * exp(-21.734244000000004 * pow((1 + 0.014285714285714285 * var_chaste_interface__Vms__Vms), 2));

                _lookup_table_0[i][18] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vms__Vms = mTableMins[0] + i*mTableSteps[0];
                double val = 0.035000000000000003 + 3.7000000000000002 * exp(-5.433561000000001 * pow((1 + 0.014285714285714285 * var_chaste_interface__Vms__Vms), 2));

                _lookup_table_0[i][19] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vms__Vms = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + exp(9.4110800000000001 + 0.081199999999999994 * var_chaste_interface__Vms__Vms);

                _lookup_table_0[i][20] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vms__Vms = mTableMins[0] + i*mTableSteps[0];
                double val = ((fabs(64.400000000000006 + var_chaste_interface__Vms__Vms) < 4.5454545455347883e-7) ? (8.5318181809268536e-6 / (1.0 - exp(-9.999999998955289e-8)) - 1099999.9999805812 * (64.399999545454548 + var_chaste_interface__Vms__Vms) * (-8.5318181809268536e-6 / (1.0 - exp(-9.999999998955289e-8)) - 8.531818183010741e-6 / (1.0 - exp(1.000000000139778e-7)))) : (18.77 * (64.400000000000006 + var_chaste_interface__Vms__Vms) / (1.0 - exp(-14.168000000000001 - 0.22 * var_chaste_interface__Vms__Vms))));
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[21] < 2){
                    double left = _lookup_table_0[i-1][21];
                    double right = _lookup_table_0[i+1][21];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 21 at ["<<i<<"][21] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[21] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[21] >= 2){
                    EXCEPTION("Lookup table 21 at ["<<i<<"][21] has non-finite value: " << val);
                }
                _lookup_table_0[i][21] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vms__Vms = mTableMins[0] + i*mTableSteps[0];
                double val = ((fabs(59.299999999999997 + var_chaste_interface__Vms__Vms) < 1.8181818181584042e-7) ? (2.1320000002980068e-5 / (1.0 - exp(-1.000000000139778e-7)) - 2750000.0000354135 * (59.299999818181817 + var_chaste_interface__Vms__Vms) * (-2.131999999647083e-5 / (1.0 - exp(9.9999999983446669e-8)) - 2.1320000002980068e-5 / (1.0 - exp(-1.000000000139778e-7)))) : (117.26000000000001 * (59.299999999999997 + var_chaste_interface__Vms__Vms) / (1.0 - exp(-32.615000000000002 - 0.55000000000000004 * var_chaste_interface__Vms__Vms))));
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[22] < 2){
                    double left = _lookup_table_0[i-1][22];
                    double right = _lookup_table_0[i+1][22];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 22 at ["<<i<<"][22] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[22] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[22] >= 2){
                    EXCEPTION("Lookup table 22 at ["<<i<<"][22] has non-finite value: " << val);
                }
                _lookup_table_0[i][22] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vms__Vms = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-4.3919999999999995 - 0.071999999999999995 * var_chaste_interface__Vms__Vms);

                _lookup_table_0[i][23] = val;
            }

            mNeedsRegeneration[0] = false;
        }

        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }

private:
    /** The single instance of the class */
    static std::shared_ptr<Cellpasek_simurda_christe_2006FromCellMLCvodeOpt_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[24];

    // Lookup tables
    double (*_lookup_table_0)[24];
    int _lookup_table_0_num_misshit_piecewise[24] = {0};

};

std::shared_ptr<Cellpasek_simurda_christe_2006FromCellMLCvodeOpt_LookupTables> Cellpasek_simurda_christe_2006FromCellMLCvodeOpt_LookupTables::mpInstance;

    boost::shared_ptr<RegularStimulus> Cellpasek_simurda_christe_2006FromCellMLCvodeOpt::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__i_Stim__stim_duration_converted = 1.0; // millisecond
        const double var_chaste_interface__i_Stim__stim_offset_converted = 0; // millisecond
        const double var_chaste_interface__i_Stim__stim_period_converted = 1000.0; // millisecond
        const double var_chaste_interface__i_Stim__stim_amplitude_converted = 118.31884057971013 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__i_Stim__stim_amplitude_converted),
                var_chaste_interface__i_Stim__stim_duration_converted,
                var_chaste_interface__i_Stim__stim_period_converted,
                var_chaste_interface__i_Stim__stim_offset_converted
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }

    double Cellpasek_simurda_christe_2006FromCellMLCvodeOpt::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Cellpasek_simurda_christe_2006FromCellMLCvodeOpt::Cellpasek_simurda_christe_2006FromCellMLCvodeOpt(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                41,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellpasek_simurda_christe_2006FromCellMLCvodeOpt>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
        
        NV_Ith_S(this->mParameters, 0) = 10.0; // (var_membrane_permeabilities__gNa) [milliS_per_cm2]
        NV_Ith_S(this->mParameters, 1) = 0.23999999999999999; // (var_membrane_permeabilities__gK1) [milliS_per_cm2]
        NV_Ith_S(this->mParameters, 2) = 0.00018000000000000001; // (var_membrane_permeabilities__i_NaCa_max) [microA_per_cm2]
        NV_Ith_S(this->mParameters, 3) = 0.34999999999999998; // (var_membrane_permeabilities__gKto) [milliS_per_cm2]
    }

    Cellpasek_simurda_christe_2006FromCellMLCvodeOpt::~Cellpasek_simurda_christe_2006FromCellMLCvodeOpt()
    {
    }

    AbstractLookupTableCollection* Cellpasek_simurda_christe_2006FromCellMLCvodeOpt::GetLookupTableCollection()
    {
        return Cellpasek_simurda_christe_2006FromCellMLCvodeOpt_LookupTables::Instance();
    }
    
    double Cellpasek_simurda_christe_2006FromCellMLCvodeOpt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -79.709547
        double var_chaste_interface__ion_concentrations__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 3.5486498e-05
        double var_chaste_interface__i_Nas_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 2.1832558e-06
        double var_chaste_interface__i_Nas_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.58232781
        double var_chaste_interface__i_Cas__Co = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 2.5436465e-06
        double var_chaste_interface__i_Cas__C1 = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__i_Cas__C2 = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__i_Cas__Ccast = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.99570063
        double var_chaste_interface__i_Ktos_rs_gate__rs = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.0023485072
        double var_chaste_interface__i_Ktos_ss_gate__ss = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.98315843
        double var_chaste_interface__i_Ktos_sss_gate__sss = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.6748337
        double var_chaste_interface__i_Ksts_rsts_gate__rsts = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 0.0031079213
        double var_chaste_interface__i_Ksts_ssts_gate__ssts = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.30773393
        double var_chaste_interface__i_Kfs_qs_gate__qs = NV_Ith_S(rY, 24);
        // Units: dimensionless; Initial value: 0.0034357356
        double var_chaste_interface__ion_concentrations__Nai = NV_Ith_S(rY, 32);
        // Units: millimolar; Initial value: 6.9435814
        double var_chaste_interface__ion_concentrations__Ki = NV_Ith_S(rY, 33);
        // Units: millimolar; Initial value: 137.53311
        double var_chaste_interface__ion_concentrations__Cass = NV_Ith_S(rY, 37);
        // Units: millimolar; Initial value: 4.3112114e-05
        double var_chaste_interface__Vmt__Vmt = NV_Ith_S(rY, 40);
        // Units: millivolt; Initial value: -79.709536
        
        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_christe_2006FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vms__Vms);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_christe_2006FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vms__Vms);

        const double var_i_Cas__i_Cas = ((fabs(var_chaste_interface__Vms__Vms) < 1.2701813471502589e-6) ? (393644.57769891288 * (1.2701813471502589e-6 + var_chaste_interface__Vms__Vms) * (5.2689000000000005e-11 * (-0.40920000000000001 + var_chaste_interface__ion_concentrations__Cass * exp(9.9999999999999995e-8)) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C1) * var_chaste_interface__i_Cas__Co / (-1.0 + exp(9.9999999999999995e-8)) + 5.2689000000000005e-11 * (-0.40920000000000001 + var_chaste_interface__ion_concentrations__Cass * exp(-9.9999999999999995e-8)) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C1) * var_chaste_interface__i_Cas__Co / (-1.0 + exp(-9.9999999999999995e-8))) - 5.2689000000000005e-11 * (-0.40920000000000001 + var_chaste_interface__ion_concentrations__Cass * exp(-9.9999999999999995e-8)) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C1) * var_chaste_interface__i_Cas__Co / (-1.0 + exp(-9.9999999999999995e-8))) : (4.1481478308756044e-5 * (-0.40920000000000001 + var_chaste_interface__ion_concentrations__Cass * _lt_0_row[0]) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C1) * var_chaste_interface__Vms__Vms * var_chaste_interface__i_Cas__Co / (_lt_0_row[1]))); // microA
        const double var_i_Ktos__E_Ks = 25.403626943005182 * log(5.4000000000000004 / var_chaste_interface__ion_concentrations__Ki); // millivolt
        const double var_i_Nas__E_Nas = 25.403626943005182 * log(140.0 / var_chaste_interface__ion_concentrations__Nai); // millivolt
        const double var_i_Cabs__i_Cabs = 2.8512000000000001e-8 * var_chaste_interface__Vms__Vms - 3.6215410569948183e-7 * log(1.2 / var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_i_K1s__i_K1s = 4.3999999999999999e-5 * (-1.73 - var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * NV_Ith_S(mParameters, 1) / (1.0 + (1.0 + exp(-35.49354838709678)) * exp(-0.10984612576230394 + 0.063494870382834648 * var_chaste_interface__Vms__Vms - 0.063494870382834648 * var_i_Ktos__E_Ks)); // microA
        const double var_i_Kbs__i_Kbs = 6.071999999999999e-8 * var_chaste_interface__Vms__Vms - 6.071999999999999e-8 * var_i_Ktos__E_Ks; // microA
        const double var_i_Kfs__i_Kfs = 6.3799999999999997e-7 * (1.0 * var_chaste_interface__Vms__Vms - 0.20000000000000001 * var_i_Nas__E_Nas - 0.80000000000000004 * var_i_Ktos__E_Ks) * var_chaste_interface__i_Kfs_qs_gate__qs; // microA
        const double var_i_Ksts__i_Ksts = 1.6800000000000002e-6 * (-var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * var_chaste_interface__i_Ksts_rsts_gate__rsts * var_chaste_interface__i_Ksts_ssts_gate__ssts; // microA
        const double var_i_Ktos__i_Ktos = 4.3999999999999999e-5 * (-var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * (0.88600000000000001 * var_chaste_interface__i_Ktos_ss_gate__ss + 0.114 * var_chaste_interface__i_Ktos_sss_gate__sss) * var_chaste_interface__i_Ktos_rs_gate__rs * NV_Ith_S(mParameters, 3); // microA
        const double var_i_Nabs__i_Nabs = 3.5266e-8 * var_chaste_interface__Vms__Vms - 3.5266e-8 * var_i_Nas__E_Nas; // microA
        const double var_i_Nas__i_Nas = 4.3999999999999999e-5 * pow(var_chaste_interface__i_Nas_m_gate__m, 3) * (-25.403626943005182 * log(140.648 / (var_chaste_interface__ion_concentrations__Nai + 0.12 * var_chaste_interface__ion_concentrations__Ki)) + var_chaste_interface__Vms__Vms) * var_chaste_interface__i_Nas_h_gate__h * NV_Ith_S(mParameters, 0); // microA
        const double var_i_NaCas__i_NaCas = 1.8999999999999994e-5 * (1.2 * pow(var_chaste_interface__ion_concentrations__Nai, 3) * _lt_0_row[2] - 2744000.0 * var_chaste_interface__ion_concentrations__Cai * _lt_0_row[3]) * NV_Ith_S(mParameters, 2) / (1.0 + 0.00012 * pow(var_chaste_interface__ion_concentrations__Nai, 3) + 274.40000000000003 * var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_i_NaKs__i_NaKs = 3.2086956521739132e-5 / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__ion_concentrations__Nai), 1.5)) * (_lt_0_row[4])); // microA
        const double var_i_pCas__i_pCas = 3.7399999999999994e-5 * var_chaste_interface__ion_concentrations__Cai / (0.00040000000000000002 + var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_i_circ__i_circ = 0.049589504033939455 * var_chaste_interface__Vmt__Vmt - 0.049589504033939455 * var_chaste_interface__Vms__Vms; // microA
        const double var_chaste_interface__i_ionic = 22753.623188405796 * (var_i_Cabs__i_Cabs + var_i_Cas__i_Cas + var_i_K1s__i_K1s + var_i_Kbs__i_Kbs + var_i_Kfs__i_Kfs + var_i_Ksts__i_Ksts + var_i_Ktos__i_Ktos + var_i_NaCas__i_NaCas + var_i_NaKs__i_NaKs + var_i_Nabs__i_Nabs + var_i_Nas__i_Nas + var_i_circ__i_circ + var_i_pCas__i_pCas) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellpasek_simurda_christe_2006FromCellMLCvodeOpt::EvaluateYDerivatives(double var_chaste_interface__environment__time_converted, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -79.709547
        double var_chaste_interface__ion_concentrations__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 3.5486498e-05
        double var_chaste_interface__i_Nas_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 2.1832558e-06
        double var_chaste_interface__i_Nas_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.58232781
        double var_chaste_interface__i_Nat_m_gate__m = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 2.1832694e-06
        double var_chaste_interface__i_Nat_h_gate__h = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.58232717
        double var_chaste_interface__i_Cas__Co = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 2.5436465e-06
        double var_chaste_interface__i_Cas__C1 = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__i_Cas__C2 = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__i_Cas__Ccast = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.99570063
        double var_chaste_interface__i_Cat__Co = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 2.543652e-06
        double var_chaste_interface__i_Cat__C1 = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__i_Cat__C2 = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__i_Cat__Ccast = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.99570063
        double var_chaste_interface__i_Ktos_rs_gate__rs = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.0023485072
        double var_chaste_interface__i_Ktos_ss_gate__ss = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.98315843
        double var_chaste_interface__i_Ktos_sss_gate__sss = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.6748337
        double var_chaste_interface__i_Ktot_rt_gate__rt = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 0.0023485094
        double var_chaste_interface__i_Ktot_st_gate__st = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 0.98315865
        double var_chaste_interface__i_Ktot_sst_gate__sst = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 0.67478532
        double var_chaste_interface__i_Ksts_rsts_gate__rsts = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 0.0031079213
        double var_chaste_interface__i_Ksts_ssts_gate__ssts = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.30773393
        double var_chaste_interface__i_Kstt_rstt_gate__rstt = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.0031079241
        double var_chaste_interface__i_Kstt_sstt_gate__sstt = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 0.30773368
        double var_chaste_interface__i_Kfs_qs_gate__qs = NV_Ith_S(rY, 24);
        // Units: dimensionless; Initial value: 0.0034357356
        double var_chaste_interface__i_Kft_qt_gate__qt = NV_Ith_S(rY, 25);
        // Units: dimensionless; Initial value: 0.0034357175
        double var_chaste_interface__JCaSRrel__F1 = NV_Ith_S(rY, 26);
        // Units: dimensionless; Initial value: 0.67606483
        double var_chaste_interface__JCaSRrel__F2 = NV_Ith_S(rY, 27);
        // Units: dimensionless; Initial value: 0.00038333331
        double var_chaste_interface__JCaSRrel__F3 = NV_Ith_S(rY, 28);
        // Units: dimensionless; Initial value: 6.4516879e-11
        double var_chaste_interface__JCaSRrel__F4 = NV_Ith_S(rY, 29);
        // Units: dimensionless; Initial value: 0.32355462
        double var_chaste_interface__CaSRup__CaSRup = NV_Ith_S(rY, 30);
        // Units: millimolar; Initial value: 0.22755058
        double var_chaste_interface__CaSRrel__CaSRrel = NV_Ith_S(rY, 31);
        // Units: millimolar; Initial value: 0.22638169
        double var_chaste_interface__ion_concentrations__Nai = NV_Ith_S(rY, 32);
        // Units: millimolar; Initial value: 6.9435814
        double var_chaste_interface__ion_concentrations__Ki = NV_Ith_S(rY, 33);
        // Units: millimolar; Initial value: 137.53311
        double var_chaste_interface__ion_concentrations__Nat = NV_Ith_S(rY, 34);
        // Units: millimolar; Initial value: 140.01386
        double var_chaste_interface__ion_concentrations__Cat = NV_Ith_S(rY, 35);
        // Units: millimolar; Initial value: 1.2271399
        double var_chaste_interface__ion_concentrations__Kt = NV_Ith_S(rY, 36);
        // Units: millimolar; Initial value: 5.3627676
        double var_chaste_interface__ion_concentrations__Cass = NV_Ith_S(rY, 37);
        // Units: millimolar; Initial value: 4.3112114e-05
        double var_chaste_interface__ion_concentrations__BTRH = NV_Ith_S(rY, 38);
        // Units: millimolar; Initial value: 0.92804169
        double var_chaste_interface__ion_concentrations__BTRL = NV_Ith_S(rY, 39);
        // Units: millimolar; Initial value: 0.034317829
        double var_chaste_interface__Vmt__Vmt = NV_Ith_S(rY, 40);
        // Units: millivolt; Initial value: -79.709536

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_christe_2006FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vms__Vms);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_christe_2006FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vms__Vms);

        // Mathematics
        double d_dt_chaste_interface_var_Vms__Vms;
        const double d_dt_chaste_interface_var_JCaSRrel__F4 = 0.017999999999999999 * var_chaste_interface__JCaSRrel__F2 - 0.00080000000000000004 * var_chaste_interface__JCaSRrel__F4; // 1 / millisecond
        const double var_i_Cas__C1inf = _lt_0_row[5]; // dimensionless
        const double d_dt_chaste_interface_var_i_Cas__C1 = 0.001 * (-var_chaste_interface__i_Cas__C1 + var_i_Cas__C1inf) / (_lt_0_row[6]); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Cas__C2 = 0.001 * (-var_chaste_interface__i_Cas__C2 + var_i_Cas__C1inf) / (_lt_0_row[7]); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Cas__Co = 0.001 * (-var_chaste_interface__i_Cas__Co + _lt_0_row[8]) / (_lt_0_row[9]); // 1 / millisecond
        const double var_i_Cat__C1inf = 1 / (1.0 + exp(4.9444444444444438 + 0.18518518518518517 * var_chaste_interface__Vmt__Vmt)); // dimensionless
        const double d_dt_chaste_interface_var_i_Cat__C1 = 0.001 * (-var_chaste_interface__i_Cat__C1 + var_i_Cat__C1inf) / (0.014999999999999999 / (1.0 + exp(3.0 + 0.040000000000000001 * var_chaste_interface__Vmt__Vmt)) + 0.040000000000000001 / (1.0 + exp(1.0 - 0.040000000000000001 * var_chaste_interface__Vmt__Vmt)) + 0.105 * exp(-14.0625 * pow((1 + 0.022222222222222223 * var_chaste_interface__Vmt__Vmt), 2))); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Cat__C2 = 0.001 * (-var_chaste_interface__i_Cat__C2 + var_i_Cat__C1inf) / (0.014999999999999999 / (1.0 + exp(3.0 + 0.040000000000000001 * var_chaste_interface__Vmt__Vmt)) + 0.080000000000000002 / (1.0 + exp(-11.0 - 0.20000000000000001 * var_chaste_interface__Vmt__Vmt)) + 0.041000000000000002 * exp(-15.340277777777779 * pow((1 + 0.021276595744680851 * var_chaste_interface__Vmt__Vmt), 2))); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Cat__Co = 0.001 * (-var_chaste_interface__i_Cat__Co + 1 / (1.0 + exp(-3.0600000000000001 - 0.20000000000000001 * var_chaste_interface__Vmt__Vmt))) / (0.00025000000000000001 + 0.0010499999999999999 * exp(-0.64800000000000002 * pow((-1 + 0.055555555555555552 * var_chaste_interface__Vmt__Vmt), 2)) + 0.0030500000000000002 * exp(-0.22049999999999997 * pow((1 + 0.14285714285714285 * var_chaste_interface__Vmt__Vmt), 2))); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Kfs_qs_gate__qs = 0.001 * (-var_chaste_interface__i_Kfs_qs_gate__qs + _lt_0_row[10]) * (_lt_0_row[11]); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Kft_qt_gate__qt = 0.001 * (-var_chaste_interface__i_Kft_qt_gate__qt + 1 / (1.0 + exp(13.225190839694655 + 0.095419847328244267 * var_chaste_interface__Vmt__Vmt))) * (0.56230000000000002 * exp(-5.6377730796335452 - 0.070472163495419307 * var_chaste_interface__Vmt__Vmt) + 0.11885 * exp(2.8198801550934083 + 0.035248501938667604 * var_chaste_interface__Vmt__Vmt)); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Ksts_rsts_gate__rsts = 0.001 * (-var_chaste_interface__i_Ksts_rsts_gate__rsts + _lt_0_row[12]) * (_lt_0_row[13]); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Ksts_ssts_gate__ssts = _lt_0_row[14] - 0.00047619047619047619 * var_chaste_interface__i_Ksts_ssts_gate__ssts; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Kstt_rstt_gate__rstt = 0.001 * (-var_chaste_interface__i_Kstt_rstt_gate__rstt + 1 / (1.0 + exp(-0.97292724196277491 - 0.084602368866328256 * var_chaste_interface__Vmt__Vmt))) * (9.8900000000000006 * exp(-3.8000000000000003 - 0.10000000000000001 * var_chaste_interface__Vmt__Vmt) + 4.516 * exp(1.7885000000000002 + 0.035770000000000003 * var_chaste_interface__Vmt__Vmt)); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Kstt_sstt_gate__sstt = 0.00047619047619047619 / (1.0 + exp(8.4951456310679614 + 0.097087378640776698 * var_chaste_interface__Vmt__Vmt)) - 0.00047619047619047619 * var_chaste_interface__i_Kstt_sstt_gate__sstt; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Ktos_rs_gate__rs = 0.001 * (-var_chaste_interface__i_Ktos_rs_gate__rs + _lt_0_row[15]) * (_lt_0_row[16]); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Ktos_ss_gate__ss = 0.001 * (-var_chaste_interface__i_Ktos_ss_gate__ss + _lt_0_row[17]) / (_lt_0_row[18]); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Ktos_sss_gate__sss = 0.001 * (-var_chaste_interface__i_Ktos_sss_gate__sss + _lt_0_row[17]) / (_lt_0_row[19]); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Ktot_rt_gate__rt = 0.001 * (-var_chaste_interface__i_Ktot_rt_gate__rt + 1 / (1.0 + exp(-0.92819614711033271 - 0.087565674255691769 * var_chaste_interface__Vmt__Vmt))) * (45.159999999999997 * exp(1.7885000000000002 + 0.035770000000000003 * var_chaste_interface__Vmt__Vmt) + 98.900000000000006 * exp(-3.8000000000000003 - 0.10000000000000001 * var_chaste_interface__Vmt__Vmt)); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Ktot_sst_gate__sst = 0.001 * (-var_chaste_interface__i_Ktot_sst_gate__sst + 1 / (1.0 + exp(6.5803808776746413 + 0.14526227103034528 * var_chaste_interface__Vmt__Vmt))) / (0.035000000000000003 + 3.7000000000000002 * exp(-5.433561000000001 * pow((1 + 0.014285714285714285 * var_chaste_interface__Vmt__Vmt), 2))); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Ktot_st_gate__st = 0.001 * (-var_chaste_interface__i_Ktot_st_gate__st + 1 / (1.0 + exp(6.5803808776746413 + 0.14526227103034528 * var_chaste_interface__Vmt__Vmt))) / (0.035000000000000003 + 0.34999999999999998 * exp(-21.734244000000004 * pow((1 + 0.014285714285714285 * var_chaste_interface__Vmt__Vmt), 2))); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Nas_h_gate__h = 0.28439999999999999 * (1.0 - var_chaste_interface__i_Nas_h_gate__h) / (_lt_0_row[20]) - 0.001 * _lt_0_row[21] * var_chaste_interface__i_Nas_h_gate__h; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Nas_m_gate__m = 0.001 * (1.0 - var_chaste_interface__i_Nas_m_gate__m) * _lt_0_row[22] - 3.7999999999999998 * var_chaste_interface__i_Nas_m_gate__m * _lt_0_row[23]; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Nat_h_gate__h = 0.28439999999999999 * (1.0 - var_chaste_interface__i_Nat_h_gate__h) / (1.0 + exp(9.4110800000000001 + 0.081199999999999994 * var_chaste_interface__Vmt__Vmt)) - 0.018769999999999998 * (64.400000000000006 + var_chaste_interface__Vmt__Vmt) * var_chaste_interface__i_Nat_h_gate__h / (1.0 - exp(-14.168000000000001 - 0.22 * var_chaste_interface__Vmt__Vmt)); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Nat_m_gate__m = -3.7999999999999998 * var_chaste_interface__i_Nat_m_gate__m * exp(-4.3919999999999995 - 0.071999999999999995 * var_chaste_interface__Vmt__Vmt) + 0.11726 * (1.0 - var_chaste_interface__i_Nat_m_gate__m) * (59.299999999999997 + var_chaste_interface__Vmt__Vmt) / (1.0 - exp(-32.615000000000002 - 0.55000000000000004 * var_chaste_interface__Vmt__Vmt)); // 1 / millisecond
        const double d_dt_chaste_interface_var_JCaSRrel__F1 = 0.57599999999999996 * var_chaste_interface__JCaSRrel__F2 - 12150000000.0 * pow(var_chaste_interface__ion_concentrations__Cass, 4) * var_chaste_interface__JCaSRrel__F1; // 1 / millisecond
        const double d_dt_chaste_interface_var_JCaSRrel__F2 = 0.00080000000000000004 * var_chaste_interface__JCaSRrel__F4 + 1.9299999999999999 * var_chaste_interface__JCaSRrel__F3 + 12150000000.0 * pow(var_chaste_interface__ion_concentrations__Cass, 4) * var_chaste_interface__JCaSRrel__F1 - 0.001 * (594.0 + 4050000000.0 * pow(var_chaste_interface__ion_concentrations__Cass, 3)) * var_chaste_interface__JCaSRrel__F2; // 1 / millisecond
        const double d_dt_chaste_interface_var_JCaSRrel__F3 = -1.9299999999999999 * var_chaste_interface__JCaSRrel__F3 + 4050000.0 * pow(var_chaste_interface__ion_concentrations__Cass, 3) * var_chaste_interface__JCaSRrel__F2; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Cas__Ccast = 0.11111111111111112 / (1.0 + 100.0 * var_chaste_interface__ion_concentrations__Cass) - 0.11111111111111112 * var_chaste_interface__i_Cas__Ccast; // 1 / millisecond
        const double var_i_Cas__i_Cas = ((fabs(var_chaste_interface__Vms__Vms) < 1.2701813471502589e-6) ? (393644.57769891288 * (1.2701813471502589e-6 + var_chaste_interface__Vms__Vms) * (5.2689000000000005e-11 * (-0.40920000000000001 + var_chaste_interface__ion_concentrations__Cass * exp(9.9999999999999995e-8)) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C1) * var_chaste_interface__i_Cas__Co / (-1.0 + exp(9.9999999999999995e-8)) + 5.2689000000000005e-11 * (-0.40920000000000001 + var_chaste_interface__ion_concentrations__Cass * exp(-9.9999999999999995e-8)) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C1) * var_chaste_interface__i_Cas__Co / (-1.0 + exp(-9.9999999999999995e-8))) - 5.2689000000000005e-11 * (-0.40920000000000001 + var_chaste_interface__ion_concentrations__Cass * exp(-9.9999999999999995e-8)) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C1) * var_chaste_interface__i_Cas__Co / (-1.0 + exp(-9.9999999999999995e-8))) : (4.1481478308756044e-5 * (-0.40920000000000001 + var_chaste_interface__ion_concentrations__Cass * _lt_0_row[0]) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C1) * var_chaste_interface__Vms__Vms * var_chaste_interface__i_Cas__Co / (_lt_0_row[1]))); // microA
        const double d_dt_chaste_interface_var_i_Cat__Ccast = 0.11111111111111112 / (1.0 + 100.0 * var_chaste_interface__ion_concentrations__Cass) - 0.11111111111111112 * var_chaste_interface__i_Cat__Ccast; // 1 / millisecond
        const double var_ion_concentrations__dBTRH = -0.070000000000000007 * var_chaste_interface__ion_concentrations__BTRH + 20000.0 * (1.0 - var_chaste_interface__ion_concentrations__BTRH) * var_chaste_interface__ion_concentrations__Cai; // millimolar_per_second
        const double d_dt_chaste_interface_var_ion_concentrations__BTRH = 0.001 * var_ion_concentrations__dBTRH; // millimolar / millisecond
        const double var_ion_concentrations__dBTRL = -40.0 * var_chaste_interface__ion_concentrations__BTRL + 40000.0 * (1.0 - var_chaste_interface__ion_concentrations__BTRL) * var_chaste_interface__ion_concentrations__Cai; // millimolar_per_second
        const double d_dt_chaste_interface_var_ion_concentrations__BTRL = 0.001 * var_ion_concentrations__dBTRL; // millimolar / millisecond
        const double var_i_Ktos__E_Ks = 25.403626943005182 * log(5.4000000000000004 / var_chaste_interface__ion_concentrations__Ki); // millivolt
        const double var_i_Ktot__E_Kt = 25.403626943005182 * log(var_chaste_interface__ion_concentrations__Kt / var_chaste_interface__ion_concentrations__Ki); // millivolt
        const double var_i_Nas__E_Nas = 25.403626943005182 * log(140.0 / var_chaste_interface__ion_concentrations__Nai); // millivolt
        const double var_i_Nat__E_Nat = 25.403626943005182 * log(var_chaste_interface__ion_concentrations__Nat / var_chaste_interface__ion_concentrations__Nai); // millivolt
        const double var_i_Stim__i_Stim = -4.3949044585987262e-5 * GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted) / HeartConfig::Instance()->GetCapacitance(); // microA
        const double var_i_Cabs__i_Cabs = 2.8512000000000001e-8 * var_chaste_interface__Vms__Vms - 3.6215410569948183e-7 * log(1.2 / var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_i_Cabt__i_Cabt = 3.6288000000000007e-8 * var_chaste_interface__Vmt__Vmt - 4.6092340725388611e-7 * log(var_chaste_interface__ion_concentrations__Cat / var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_i_Cat__i_Cat = 0.00027760681637398275 * (-0.34100000000000003 * var_chaste_interface__ion_concentrations__Cat + var_chaste_interface__ion_concentrations__Cass * exp(0.078728915539782576 * var_chaste_interface__Vmt__Vmt)) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cat__Ccast) * var_chaste_interface__i_Cat__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cat__Ccast) * var_chaste_interface__i_Cat__C1) * var_chaste_interface__Vmt__Vmt * var_chaste_interface__i_Cat__Co / (-1.0 + exp(0.078728915539782576 * var_chaste_interface__Vmt__Vmt)); // microA
        const double var_i_K1s__i_K1s = 4.3999999999999999e-5 * (-1.73 - var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * NV_Ith_S(mParameters, 1) / (1.0 + (1.0 + exp(-35.49354838709678)) * exp(-0.10984612576230394 + 0.063494870382834648 * var_chaste_interface__Vms__Vms - 0.063494870382834648 * var_i_Ktos__E_Ks)); // microA
        const double var_i_K1t__i_K1t = 5.6000000000000006e-5 * (-1.73 - var_i_Ktot__E_Kt + var_chaste_interface__Vmt__Vmt) * NV_Ith_S(mParameters, 1) / (1.0 + (1.0 + exp(8.0548387096774192 - 8.064516129032258 * var_chaste_interface__ion_concentrations__Kt)) * exp(-0.10984612576230394 + 0.063494870382834648 * var_chaste_interface__Vmt__Vmt - 0.063494870382834648 * var_i_Ktot__E_Kt)); // microA
        const double var_i_Kbs__i_Kbs = 6.071999999999999e-8 * var_chaste_interface__Vms__Vms - 6.071999999999999e-8 * var_i_Ktos__E_Ks; // microA
        const double var_i_Kbt__i_Kbt = 7.7280000000000001e-8 * var_chaste_interface__Vmt__Vmt - 7.7280000000000001e-8 * var_i_Ktot__E_Kt; // microA
        const double var_i_Kfs__i_Kfs = 6.3799999999999997e-7 * (1.0 * var_chaste_interface__Vms__Vms - 0.20000000000000001 * var_i_Nas__E_Nas - 0.80000000000000004 * var_i_Ktos__E_Ks) * var_chaste_interface__i_Kfs_qs_gate__qs; // microA
        const double var_i_Kft__i_Kft = 8.1200000000000012e-7 * (1.0 * var_chaste_interface__Vmt__Vmt - 0.20000000000000001 * var_i_Nat__E_Nat - 0.80000000000000004 * var_i_Ktot__E_Kt) * var_chaste_interface__i_Kft_qt_gate__qt; // microA
        const double var_i_Ksts__i_Ksts = 1.6800000000000002e-6 * (-var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * var_chaste_interface__i_Ksts_rsts_gate__rsts * var_chaste_interface__i_Ksts_ssts_gate__ssts; // microA
        const double var_i_Kstt__i_Kstt = 5.3200000000000007e-6 * (-var_i_Ktot__E_Kt + var_chaste_interface__Vmt__Vmt) * var_chaste_interface__i_Kstt_rstt_gate__rstt * var_chaste_interface__i_Kstt_sstt_gate__sstt; // microA
        const double var_i_Ktos__i_Ktos = 4.3999999999999999e-5 * (-var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * (0.88600000000000001 * var_chaste_interface__i_Ktos_ss_gate__ss + 0.114 * var_chaste_interface__i_Ktos_sss_gate__sss) * var_chaste_interface__i_Ktos_rs_gate__rs * NV_Ith_S(mParameters, 3); // microA
        const double var_i_Ktot__i_Ktot = 5.6000000000000006e-5 * (-var_i_Ktot__E_Kt + var_chaste_interface__Vmt__Vmt) * (0.88600000000000001 * var_chaste_interface__i_Ktot_st_gate__st + 0.114 * var_chaste_interface__i_Ktot_sst_gate__sst) * var_chaste_interface__i_Ktot_rt_gate__rt * NV_Ith_S(mParameters, 3); // microA
        const double var_i_Nabs__i_Nabs = 3.5266e-8 * var_chaste_interface__Vms__Vms - 3.5266e-8 * var_i_Nas__E_Nas; // microA
        const double var_i_Nabt__i_Nabt = 4.4884000000000007e-8 * var_chaste_interface__Vmt__Vmt - 4.4884000000000007e-8 * var_i_Nat__E_Nat; // microA
        const double var_i_Nas__i_Nas = 4.3999999999999999e-5 * pow(var_chaste_interface__i_Nas_m_gate__m, 3) * (-25.403626943005182 * log(140.648 / (var_chaste_interface__ion_concentrations__Nai + 0.12 * var_chaste_interface__ion_concentrations__Ki)) + var_chaste_interface__Vms__Vms) * var_chaste_interface__i_Nas_h_gate__h * NV_Ith_S(mParameters, 0); // microA
        const double var_i_Nat__i_Nat = 5.6000000000000006e-5 * pow(var_chaste_interface__i_Nat_m_gate__m, 3) * (-25.403626943005182 * log((var_chaste_interface__ion_concentrations__Nat + 0.12 * var_chaste_interface__ion_concentrations__Kt) / (var_chaste_interface__ion_concentrations__Nai + 0.12 * var_chaste_interface__ion_concentrations__Ki)) + var_chaste_interface__Vmt__Vmt) * var_chaste_interface__i_Nat_h_gate__h * NV_Ith_S(mParameters, 0); // microA
        const double var_i_NaCas__i_NaCas = 1.8999999999999994e-5 * (1.2 * pow(var_chaste_interface__ion_concentrations__Nai, 3) * _lt_0_row[2] - 2744000.0 * var_chaste_interface__ion_concentrations__Cai * _lt_0_row[3]) * NV_Ith_S(mParameters, 2) / (1.0 + 0.00012 * pow(var_chaste_interface__ion_concentrations__Nai, 3) + 274.40000000000003 * var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_i_NaCat__i_NaCat = 8.1000000000000004e-5 * (pow(var_chaste_interface__ion_concentrations__Nai, 3) * var_chaste_interface__ion_concentrations__Cat * exp(0.018700000000000001 * var_chaste_interface__Vmt__Vmt) - pow(var_chaste_interface__ion_concentrations__Nat, 3) * var_chaste_interface__ion_concentrations__Cai * exp(-0.018700000000000001 * var_chaste_interface__Vmt__Vmt)) * NV_Ith_S(mParameters, 2) / (1.0 + 0.0001 * pow(var_chaste_interface__ion_concentrations__Nai, 3) * var_chaste_interface__ion_concentrations__Cat + 0.0001 * pow(var_chaste_interface__ion_concentrations__Nat, 3) * var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_i_NaKs__i_NaKs = 3.2086956521739132e-5 / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__ion_concentrations__Nai), 1.5)) * (_lt_0_row[4])); // microA
        const double var_i_NaKt__i_NaKt = 5.8999999999999998e-5 * var_chaste_interface__ion_concentrations__Kt / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__ion_concentrations__Nai), 1.5)) * (1.5 + var_chaste_interface__ion_concentrations__Kt) * (1.0 + 0.1245 * exp(-0.0039364457769891295 * var_chaste_interface__Vmt__Vmt) + 0.0052142857142857138 * (-1.0 + exp(0.01485884101040119 * var_chaste_interface__ion_concentrations__Nat)) * exp(-0.039364457769891288 * var_chaste_interface__Vmt__Vmt))); // microA
        const double var_i_pCas__i_pCas = 3.7399999999999994e-5 * var_chaste_interface__ion_concentrations__Cai / (0.00040000000000000002 + var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_i_pCat__i_pCat = 4.7600000000000005e-5 * var_chaste_interface__ion_concentrations__Cai / (0.00040000000000000002 + var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_JCaSRrel__JCaSRrel = 8.0254777070063705e-8 * (-var_chaste_interface__ion_concentrations__Cass + var_chaste_interface__CaSRrel__CaSRrel) * (var_chaste_interface__JCaSRrel__F2 + var_chaste_interface__JCaSRrel__F3); // millimolar_per_second
        const double var_Jtr__Jtr = 1.2930970783395158e-9 * var_chaste_interface__CaSRup__CaSRup - 1.2930970783395158e-9 * var_chaste_interface__CaSRrel__CaSRrel; // millimolar_per_second
        const double d_dt_chaste_interface_var_CaSRrel__CaSRrel = 22428571.428571425 * (-var_JCaSRrel__JCaSRrel + var_Jtr__Jtr) / (1.0 + 12.0 / pow((0.80000000000000004 + var_chaste_interface__CaSRrel__CaSRrel), 2)); // millimolar / millisecond
        const double var_JCaSRup__JCaSRup = 7.4522292993630575e-9 * (13542.188456570031 * pow(var_chaste_interface__ion_concentrations__Cai, 1.2) - 0.2735562310030395 * var_chaste_interface__CaSRup__CaSRup) / (1.0 + 33855.471141425078 * pow(var_chaste_interface__ion_concentrations__Cai, 1.2) + 0.303951367781155 * var_chaste_interface__CaSRup__CaSRup); // millimolar_per_second
        const double d_dt_chaste_interface_var_CaSRup__CaSRup = 2492063.4920634921 * var_JCaSRup__JCaSRup - 2492063.4920634921 * var_Jtr__Jtr; // millimolar / millisecond
        const double var_JCad__JCad = 2.3847133757961781e-6 * var_chaste_interface__ion_concentrations__Cass - 2.3847133757961781e-6 * var_chaste_interface__ion_concentrations__Cai; // millimolar_per_second
        const double d_dt_chaste_interface_var_ion_concentrations__Cai = 0.001 * (1390.5495770780744 * var_i_NaCas__i_NaCas + 1390.5495770780744 * var_i_NaCat__i_NaCat + 134188034.18803419 * var_JCad__JCad - 0.070000000000000007 * var_ion_concentrations__dBTRL - 0.14000000000000001 * var_ion_concentrations__dBTRH - 695.27478853903722 * var_i_Cabs__i_Cabs - 695.27478853903722 * var_i_Cabt__i_Cabt - 695.27478853903722 * var_i_pCas__i_pCas - 695.27478853903722 * var_i_pCat__i_pCat - 134188034.18803419 * var_JCaSRup__JCaSRup) / (1.0 + 0.00011900000000000002 / pow((0.0023800000000000002 + var_chaste_interface__ion_concentrations__Cai), 2)); // millimolar / millisecond
        const double d_dt_chaste_interface_var_ion_concentrations__Cass = 0.001 * (1046666666666.6667 * var_JCaSRrel__JCaSRrel - 5423143.3506044904 * var_i_Cas__i_Cas - 5423143.3506044904 * var_i_Cat__i_Cat - 1046666666666.6667 * var_JCad__JCad) / (1.0 + 0.00011900000000000002 / pow((0.0023800000000000002 + var_chaste_interface__ion_concentrations__Cass), 2)); // millimolar / millisecond
        const double d_dt_chaste_interface_var_ion_concentrations__Ki = 1.3905495770780745 * var_i_Stim__i_Stim + 2.7810991541561489 * var_i_NaKs__i_NaKs + 2.7810991541561489 * var_i_NaKt__i_NaKt - 1.3905495770780745 * var_i_K1s__i_K1s - 1.3905495770780745 * var_i_K1t__i_K1t - 1.3905495770780745 * var_i_Kbs__i_Kbs - 1.3905495770780745 * var_i_Kbt__i_Kbt - 1.3905495770780745 * var_i_Kfs__i_Kfs - 1.3905495770780745 * var_i_Kft__i_Kft - 1.3905495770780745 * var_i_Ksts__i_Ksts - 1.3905495770780745 * var_i_Kstt__i_Kstt - 1.3905495770780745 * var_i_Ktos__i_Ktos - 1.3905495770780745 * var_i_Ktot__i_Ktot; // millimolar / millisecond
        const double d_dt_chaste_interface_var_ion_concentrations__Nai = -1.3905495770780745 * var_i_Nabs__i_Nabs - 1.3905495770780745 * var_i_Nabt__i_Nabt - 1.3905495770780745 * var_i_Nas__i_Nas - 1.3905495770780745 * var_i_Nat__i_Nat - 4.1716487312342236 * var_i_NaCas__i_NaCas - 4.1716487312342236 * var_i_NaCat__i_NaCat - 4.1716487312342236 * var_i_NaKs__i_NaKs - 4.1716487312342236 * var_i_NaKt__i_NaKt; // millimolar / millisecond
        const double var_i_circ__i_circ = 0.049589504033939455 * var_chaste_interface__Vmt__Vmt - 0.049589504033939455 * var_chaste_interface__Vms__Vms; // microA
        const double d_dt_chaste_interface_var_Vmt__Vmt = -17840.909090909088 * var_i_Cabt__i_Cabt - 17840.909090909088 * var_i_Cat__i_Cat - 17840.909090909088 * var_i_K1t__i_K1t - 17840.909090909088 * var_i_Kbt__i_Kbt - 17840.909090909088 * var_i_Kft__i_Kft - 17840.909090909088 * var_i_Kstt__i_Kstt - 17840.909090909088 * var_i_Ktot__i_Ktot - 17840.909090909088 * var_i_NaCat__i_NaCat - 17840.909090909088 * var_i_NaKt__i_NaKt - 17840.909090909088 * var_i_Nabt__i_Nabt - 17840.909090909088 * var_i_Nat__i_Nat - 17840.909090909088 * var_i_circ__i_circ - 17840.909090909088 * var_i_pCat__i_pCat; // millivolt / millisecond
        const double d_dt_chaste_interface_var_ion_concentrations__Cat = 0.0023999999999999998 + 12.325325796828386 * var_i_Cabt__i_Cabt + 12.325325796828386 * var_i_Cat__i_Cat + 12.325325796828386 * var_i_pCat__i_pCat - 0.002 * var_chaste_interface__ion_concentrations__Cat - 24.650651593656772 * var_i_NaCat__i_NaCat; // millimolar / millisecond
        const double d_dt_chaste_interface_var_ion_concentrations__Kt = 0.036000000000000004 + 24.650651593656772 * var_i_K1t__i_K1t + 24.650651593656772 * var_i_Kbt__i_Kbt + 24.650651593656772 * var_i_Kft__i_Kft + 24.650651593656772 * var_i_Kstt__i_Kstt + 24.650651593656772 * var_i_Ktot__i_Ktot - 49.301303187313543 * var_i_NaKt__i_NaKt - 0.0066666666666666671 * var_chaste_interface__ion_concentrations__Kt; // millimolar / millisecond
        const double d_dt_chaste_interface_var_ion_concentrations__Nat = 0.93333333333333335 + 73.951954780970325 * var_i_NaCat__i_NaCat + 73.951954780970325 * var_i_NaKt__i_NaKt + 24.650651593656772 * var_i_Nabt__i_Nabt + 24.650651593656772 * var_i_Nat__i_Nat - 0.0066666666666666671 * var_chaste_interface__ion_concentrations__Nat; // millimolar / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_Vms__Vms = 0.0;
        }
        else
        {
            d_dt_chaste_interface_var_Vms__Vms = 22753.623188405796 * var_i_Stim__i_Stim + 22753.623188405796 * var_i_circ__i_circ - 22753.623188405796 * var_i_Cabs__i_Cabs - 22753.623188405796 * var_i_Cas__i_Cas - 22753.623188405796 * var_i_K1s__i_K1s - 22753.623188405796 * var_i_Kbs__i_Kbs - 22753.623188405796 * var_i_Kfs__i_Kfs - 22753.623188405796 * var_i_Ksts__i_Ksts - 22753.623188405796 * var_i_Ktos__i_Ktos - 22753.623188405796 * var_i_NaCas__i_NaCas - 22753.623188405796 * var_i_NaKs__i_NaKs - 22753.623188405796 * var_i_Nabs__i_Nabs - 22753.623188405796 * var_i_Nas__i_Nas - 22753.623188405796 * var_i_pCas__i_pCas; // millivolt / millisecond
        }
        
        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_Vms__Vms;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_ion_concentrations__Cai;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_i_Nas_m_gate__m;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_i_Nas_h_gate__h;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_i_Nat_m_gate__m;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_i_Nat_h_gate__h;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_i_Cas__Co;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_i_Cas__C1;
        NV_Ith_S(rDY,8) = d_dt_chaste_interface_var_i_Cas__C2;
        NV_Ith_S(rDY,9) = d_dt_chaste_interface_var_i_Cas__Ccast;
        NV_Ith_S(rDY,10) = d_dt_chaste_interface_var_i_Cat__Co;
        NV_Ith_S(rDY,11) = d_dt_chaste_interface_var_i_Cat__C1;
        NV_Ith_S(rDY,12) = d_dt_chaste_interface_var_i_Cat__C2;
        NV_Ith_S(rDY,13) = d_dt_chaste_interface_var_i_Cat__Ccast;
        NV_Ith_S(rDY,14) = d_dt_chaste_interface_var_i_Ktos_rs_gate__rs;
        NV_Ith_S(rDY,15) = d_dt_chaste_interface_var_i_Ktos_ss_gate__ss;
        NV_Ith_S(rDY,16) = d_dt_chaste_interface_var_i_Ktos_sss_gate__sss;
        NV_Ith_S(rDY,17) = d_dt_chaste_interface_var_i_Ktot_rt_gate__rt;
        NV_Ith_S(rDY,18) = d_dt_chaste_interface_var_i_Ktot_st_gate__st;
        NV_Ith_S(rDY,19) = d_dt_chaste_interface_var_i_Ktot_sst_gate__sst;
        NV_Ith_S(rDY,20) = d_dt_chaste_interface_var_i_Ksts_rsts_gate__rsts;
        NV_Ith_S(rDY,21) = d_dt_chaste_interface_var_i_Ksts_ssts_gate__ssts;
        NV_Ith_S(rDY,22) = d_dt_chaste_interface_var_i_Kstt_rstt_gate__rstt;
        NV_Ith_S(rDY,23) = d_dt_chaste_interface_var_i_Kstt_sstt_gate__sstt;
        NV_Ith_S(rDY,24) = d_dt_chaste_interface_var_i_Kfs_qs_gate__qs;
        NV_Ith_S(rDY,25) = d_dt_chaste_interface_var_i_Kft_qt_gate__qt;
        NV_Ith_S(rDY,26) = d_dt_chaste_interface_var_JCaSRrel__F1;
        NV_Ith_S(rDY,27) = d_dt_chaste_interface_var_JCaSRrel__F2;
        NV_Ith_S(rDY,28) = d_dt_chaste_interface_var_JCaSRrel__F3;
        NV_Ith_S(rDY,29) = d_dt_chaste_interface_var_JCaSRrel__F4;
        NV_Ith_S(rDY,30) = d_dt_chaste_interface_var_CaSRup__CaSRup;
        NV_Ith_S(rDY,31) = d_dt_chaste_interface_var_CaSRrel__CaSRrel;
        NV_Ith_S(rDY,32) = d_dt_chaste_interface_var_ion_concentrations__Nai;
        NV_Ith_S(rDY,33) = d_dt_chaste_interface_var_ion_concentrations__Ki;
        NV_Ith_S(rDY,34) = d_dt_chaste_interface_var_ion_concentrations__Nat;
        NV_Ith_S(rDY,35) = d_dt_chaste_interface_var_ion_concentrations__Cat;
        NV_Ith_S(rDY,36) = d_dt_chaste_interface_var_ion_concentrations__Kt;
        NV_Ith_S(rDY,37) = d_dt_chaste_interface_var_ion_concentrations__Cass;
        NV_Ith_S(rDY,38) = d_dt_chaste_interface_var_ion_concentrations__BTRH;
        NV_Ith_S(rDY,39) = d_dt_chaste_interface_var_ion_concentrations__BTRL;
        NV_Ith_S(rDY,40) = d_dt_chaste_interface_var_Vmt__Vmt;
    }

    void Cellpasek_simurda_christe_2006FromCellMLCvodeOpt::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time_converted, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -79.709547
        double var_chaste_interface__ion_concentrations__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 3.5486498e-05
        double var_chaste_interface__i_Nas_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 2.1832558e-06
        double var_chaste_interface__i_Nas_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.58232781
        double var_chaste_interface__i_Nat_m_gate__m = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 2.1832694e-06
        double var_chaste_interface__i_Nat_h_gate__h = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.58232717
        double var_chaste_interface__i_Cas__Co = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 2.5436465e-06
        double var_chaste_interface__i_Cas__C1 = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__i_Cas__C2 = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__i_Cas__Ccast = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.99570063
        double var_chaste_interface__i_Cat__Co = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 2.543652e-06
        double var_chaste_interface__i_Cat__C1 = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__i_Cat__C2 = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__i_Cat__Ccast = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.99570063
        double var_chaste_interface__i_Ktos_rs_gate__rs = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.0023485072
        double var_chaste_interface__i_Ktos_ss_gate__ss = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.98315843
        double var_chaste_interface__i_Ktos_sss_gate__sss = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.6748337
        double var_chaste_interface__i_Ktot_rt_gate__rt = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 0.0023485094
        double var_chaste_interface__i_Ktot_st_gate__st = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 0.98315865
        double var_chaste_interface__i_Ktot_sst_gate__sst = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 0.67478532
        double var_chaste_interface__i_Ksts_rsts_gate__rsts = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 0.0031079213
        double var_chaste_interface__i_Ksts_ssts_gate__ssts = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.30773393
        double var_chaste_interface__i_Kstt_rstt_gate__rstt = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.0031079241
        double var_chaste_interface__i_Kstt_sstt_gate__sstt = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 0.30773368
        double var_chaste_interface__i_Kfs_qs_gate__qs = NV_Ith_S(rY, 24);
        // Units: dimensionless; Initial value: 0.0034357356
        double var_chaste_interface__i_Kft_qt_gate__qt = NV_Ith_S(rY, 25);
        // Units: dimensionless; Initial value: 0.0034357175
        double var_chaste_interface__JCaSRrel__F1 = NV_Ith_S(rY, 26);
        // Units: dimensionless; Initial value: 0.67606483
        double var_chaste_interface__JCaSRrel__F2 = NV_Ith_S(rY, 27);
        // Units: dimensionless; Initial value: 0.00038333331
        double var_chaste_interface__JCaSRrel__F3 = NV_Ith_S(rY, 28);
        // Units: dimensionless; Initial value: 6.4516879e-11
        double var_chaste_interface__CaSRup__CaSRup = NV_Ith_S(rY, 30);
        // Units: millimolar; Initial value: 0.22755058
        double var_chaste_interface__CaSRrel__CaSRrel = NV_Ith_S(rY, 31);
        // Units: millimolar; Initial value: 0.22638169
        double var_chaste_interface__ion_concentrations__Nai = NV_Ith_S(rY, 32);
        // Units: millimolar; Initial value: 6.9435814
        double var_chaste_interface__ion_concentrations__Ki = NV_Ith_S(rY, 33);
        // Units: millimolar; Initial value: 137.53311
        double var_chaste_interface__ion_concentrations__Nat = NV_Ith_S(rY, 34);
        // Units: millimolar; Initial value: 140.01386
        double var_chaste_interface__ion_concentrations__Cat = NV_Ith_S(rY, 35);
        // Units: millimolar; Initial value: 1.2271399
        double var_chaste_interface__ion_concentrations__Kt = NV_Ith_S(rY, 36);
        // Units: millimolar; Initial value: 5.3627676
        double var_chaste_interface__ion_concentrations__Cass = NV_Ith_S(rY, 37);
        // Units: millimolar; Initial value: 4.3112114e-05
        double var_chaste_interface__ion_concentrations__BTRH = NV_Ith_S(rY, 38);
        // Units: millimolar; Initial value: 0.92804169
        double var_chaste_interface__ion_concentrations__BTRL = NV_Ith_S(rY, 39);
        // Units: millimolar; Initial value: 0.034317829
        double var_chaste_interface__Vmt__Vmt = NV_Ith_S(rY, 40);
        // Units: millivolt; Initial value: -79.709536
        
        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_christe_2006FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vms__Vms);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_christe_2006FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vms__Vms);
const double var_x0 = exp(9.9999999999999995e-8);
        const double var_x1 = 1 / (-1.0 + var_x0);
        const double var_x2 = var_x1 * (-0.40920000000000001 + var_x0 * var_chaste_interface__ion_concentrations__Cass);
        const double var_x3 = 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast;
        const double var_x4 = 0.10000000000000001 - var_x3;
        const double var_x5 = 0.90000000000000002 + var_x3;
        const double var_x6 = var_x4 * var_chaste_interface__i_Cas__C2 + var_x5 * var_chaste_interface__i_Cas__C1;
        const double var_x7 = var_x6 * var_chaste_interface__i_Cas__Co;
        const double var_x8 = 2.0740739154378022e-5 * var_x7;
        const double var_x9 = exp(-9.9999999999999995e-8);
        const double var_x10 = 1 / (-1.0 + var_x9);
        const double var_x11 = var_x10 * (-0.40920000000000001 + var_x9 * var_chaste_interface__ion_concentrations__Cass);
        const double var_x12 = fabs(var_chaste_interface__Vms__Vms) < 1.2701813471502589e-6;
        const double var_x13 = _lt_0_row[0];
        const double var_x14 = -1.0 + var_x13;
        const double var_x15 = 1 / var_x14;
        const double var_x16 = var_x15 * var_x7;
        const double var_x17 = var_x13 * var_chaste_interface__ion_concentrations__Cass;
        const double var_x18 = -0.40920000000000001 + var_x17;
        const double var_x19 = 4.1481478308756044e-5 * var_x18;
        const double var_x20 = var_x16 * var_x19;
        const double var_x21 = var_x16 * var_chaste_interface__Vms__Vms;
        const double var_x22 = ((var_x12) ? (var_x11 * var_x8 + var_x2 * var_x8) : (var_x20 + 3.265791802235378e-6 * var_x17 * var_x21 - 3.265791802235378e-6 * var_x13 * var_x18 * var_x7 * var_chaste_interface__Vms__Vms / pow(var_x14, 2)));
        const double var_x23 = 1 / var_chaste_interface__ion_concentrations__Ki;
        const double var_x24 = log(5.4000000000000004 * var_x23);
        const double var_x25 = (1.0 + exp(-35.49354838709678)) * exp(-0.10984612576230394 + 0.063494870382834648 * var_chaste_interface__Vms__Vms - 1.613 * var_x24);
        const double var_x26 = 1.0 + var_x25;
        const double var_x27 = NV_Ith_S(mParameters, 1) / var_x26;
        const double var_x28 = var_chaste_interface__i_Ksts_rsts_gate__rsts * var_chaste_interface__i_Ksts_ssts_gate__ssts;
        const double var_x29 = (-0.88702724637681152 * var_chaste_interface__i_Ktos_ss_gate__ss - 0.11413217391304346 * var_chaste_interface__i_Ktos_sss_gate__sss) * NV_Ith_S(mParameters, 3);
        const double var_x30 = var_x29 * var_chaste_interface__i_Ktos_rs_gate__rs;
        const double var_x31 = 0.018700000000000001 * var_chaste_interface__Vms__Vms;
        const double var_x32 = exp(-var_x31);
        const double var_x33 = var_x32 * var_chaste_interface__ion_concentrations__Cai;
        const double var_x34 = pow(var_chaste_interface__ion_concentrations__Nai, 3);
        const double var_x35 = exp(var_x31);
        const double var_x36 = var_x34 * var_x35;
        const double var_x37 = NV_Ith_S(mParameters, 2) / (1.0 + 0.00012 * var_x34 + 274.40000000000003 * var_chaste_interface__ion_concentrations__Cai);
        const double var_x38 = var_x37 * (51312.800000000003 * var_x33 + 0.022440000000000002 * var_x36);
        const double var_x39 = pow(var_chaste_interface__i_Nas_m_gate__m, 3) * NV_Ith_S(mParameters, 0);
        const double var_x40 = 1.0011594202898551 * var_x39;
        const double var_x41 = 1 / var_chaste_interface__ion_concentrations__Nai;
        const double var_x42 = pow(var_x41, 1.5);
        const double var_x43 = 1 / (1.0 + 31.622776601683793 * var_x42);
        const double var_x44 = exp(-0.0039364457769891295 * var_chaste_interface__Vms__Vms);
        const double var_x45 = exp(2.0802377414561666);
        const double var_x46 = exp(-0.039364457769891288 * var_chaste_interface__Vms__Vms);
        const double var_x47 = 1.0 + 0.1245 * var_x44 + 0.0052142857142857138 * var_x46 * (-1.0 + var_x45);
        const double var_x48 = var_x43 * (0.00049008749923514655 * var_x44 + 0.039364457769891288 * var_x46 * (-0.0052142857142857138 + 0.0052142857142857138 * var_x45)) / pow(var_x47, 2);
        const double var_x49 = -25.403626943005182 * var_x24 + var_chaste_interface__Vms__Vms;
        const double var_x50 = var_x25 * (-1.73 + var_x49) * NV_Ith_S(mParameters, 1) / pow(var_x26, 2);
        const double var_x51 = 1 / var_chaste_interface__ion_concentrations__Cai;
        const double var_x52 = 0.00040000000000000002 + var_chaste_interface__ion_concentrations__Cai;
        const double var_x53 = 1 / var_x52;
        const double var_x54 = var_chaste_interface__ion_concentrations__Cai / pow(var_x52, 2);
        const double var_x55 = var_x32 * var_x37;
        const double var_x56 = 1.2 * var_x36 - 2744000.0 * var_x33;
        const double var_x57 = var_x56 * NV_Ith_S(mParameters, 2) / pow((0.0036443148688046646 + 4.3731778425655972e-7 * var_x34 + var_chaste_interface__ion_concentrations__Cai), 2);
        const double var_x58 = var_chaste_interface__ion_concentrations__Nai + 0.12 * var_chaste_interface__ion_concentrations__Ki;
        const double var_x59 = 1 / var_x58;
        const double var_x60 = -25.403626943005182 * log(140.648 * var_x59) + var_chaste_interface__Vms__Vms;
        const double var_x61 = var_x60 * pow(var_chaste_interface__i_Nas_m_gate__m, 2) * var_chaste_interface__i_Nas_h_gate__h * NV_Ith_S(mParameters, 0);
        const double var_x62 = 0.5 + 393644.57769891288 * var_chaste_interface__Vms__Vms;
        const double var_x63 = 5.2689000000000005e-11 * var_x6;
        const double var_x64 = var_x2 * var_x63;
        const double var_x65 = var_x11 * var_x63;
        const double var_x66 = var_x15 * var_x19 * var_chaste_interface__Vms__Vms;
        const double var_x67 = ((var_x12) ? (-var_x65 + var_x62 * (var_x64 + var_x65)) : (var_x6 * var_x66));
        const double var_x68 = 5.2689000000000005e-11 * var_chaste_interface__i_Cas__Co;
        const double var_x69 = var_x5 * var_x68;
        const double var_x70 = var_x11 * var_x69;
        const double var_x71 = var_x66 * var_chaste_interface__i_Cas__Co;
        const double var_x72 = ((var_x12) ? (-var_x70 + var_x62 * (var_x70 + var_x2 * var_x69)) : (var_x5 * var_x71));
        const double var_x73 = var_x4 * var_x68;
        const double var_x74 = var_x11 * var_x73;
        const double var_x75 = ((var_x12) ? (-var_x74 + var_x62 * (var_x74 + var_x2 * var_x73)) : (var_x4 * var_x71));
        const double var_x76 = 0.10000000000000001 * var_chaste_interface__i_Cas__C1 - 0.10000000000000001 * var_chaste_interface__i_Cas__C2;
        const double var_x77 = var_x68 * var_x76;
        const double var_x78 = var_x11 * var_x77;
        const double var_x79 = ((var_x12) ? (-var_x78 + var_x62 * (var_x78 + var_x2 * var_x77)) : (var_x71 * var_x76));
        const double var_x80 = var_chaste_interface__i_Ktos_rs_gate__rs * NV_Ith_S(mParameters, 3);
        const double var_x81 = 0.97108125253435462 * var_x24 - 0.038226086956521743 * var_chaste_interface__Vms__Vms;
        const double var_x82 = log(140.0 * var_x41);
        const double var_x83 = var_x41 * var_chaste_interface__i_Kfs_qs_gate__qs;
        const double var_x84 = pow(var_chaste_interface__ion_concentrations__Nai, 2);
        const double var_x85 = var_x57 * var_x84;
        const double var_x86 = var_x35 * var_x37 * var_x84;
        const double var_x87 = var_x41 * var_x42 / pow((0.031622776601683791 + var_x42), 2);
        const double var_x88 = var_x87 / var_x47;
        const double var_x89 = var_x39 * (0.00085319378874921788 * var_chaste_interface__ion_concentrations__Ki + 0.0071099482395768155 * var_chaste_interface__ion_concentrations__Nai) * var_chaste_interface__i_Nas_h_gate__h / pow(var_x58, 2);
        const double var_x90 = var_x23 * var_chaste_interface__i_Kfs_qs_gate__qs;
        const double var_x91 = var_x23 * var_x27;
        const double var_x92 = var_x23 * var_x28;
        const double var_x93 = 25.403626943005182 * var_x23;
        const double var_x94 = var_x23 * var_x50;
        const double var_x95 = var_x63 * var_chaste_interface__i_Cas__Co;
        const double var_x96 = var_x10 * var_x9 * var_x95;
        const double var_x97 = ((var_x12) ? (-var_x96 + var_x62 * (var_x96 + var_x0 * var_x1 * var_x95)) : (4.1481478308756044e-5 * var_x13 * var_x21));
        const double var_x98 = 0.0023800000000000002 + var_chaste_interface__ion_concentrations__Cai;
        const double var_x99 = 1.0 + 0.00011900000000000002 / pow(var_x98, 2);
        const double var_x100 = 1 / var_x99;
        const double var_x101 = 0.001 * var_x100;
        const double var_x102 = 0.059098357025818171 * var_x53;
        const double var_x103 = pow(var_chaste_interface__ion_concentrations__Cai, 1.2);
        const double var_x104 = 1 / (1.0 + 33855.471141425078 * var_x103 + 0.303951367781155 * var_chaste_interface__CaSRup__CaSRup);
        const double var_x105 = pow(var_chaste_interface__ion_concentrations__Cai, 0.19999999999999996);
        const double var_x106 = var_x104 * var_x105;
        const double var_x107 = 13542.188456570031 * var_x103 - 0.2735562310030395 * var_chaste_interface__CaSRup__CaSRup;
        const double var_x108 = var_x107 / pow((2.9537323401073989e-5 + var_x103 + 8.9779098483507565e-6 * var_chaste_interface__CaSRup__CaSRup), 2);
        const double var_x109 = var_x105 * var_x108;
        const double var_x110 = var_x34 * var_chaste_interface__ion_concentrations__Cat;
        const double var_x111 = pow(var_chaste_interface__ion_concentrations__Nat, 3);
        const double var_x112 = var_x111 * var_chaste_interface__ion_concentrations__Cai;
        const double var_x113 = 1.0 + 0.0001 * var_x110 + 0.0001 * var_x112;
        const double var_x114 = NV_Ith_S(mParameters, 2) / var_x113;
        const double var_x115 = 0.11263451574332405 * var_x114;
        const double var_x116 = 0.018700000000000001 * var_chaste_interface__Vmt__Vmt;
        const double var_x117 = exp(-var_x116);
        const double var_x118 = var_x111 * var_x117;
        const double var_x119 = exp(var_x116);
        const double var_x120 = var_x110 * var_x119;
        const double var_x121 = var_x112 * var_x117;
        const double var_x122 = var_x120 - var_x121;
        const double var_x123 = var_x122 * NV_Ith_S(mParameters, 2) / pow(var_x113, 2);
        const double var_x124 = 1.1263451574332405e-5 * var_x123;
        const double var_x125 = 2800.0000000000005 * var_chaste_interface__ion_concentrations__Cai;
        const double var_x126 = 0.33790354722997212 * var_x114;
        const double var_x127 = var_x84 * var_chaste_interface__ion_concentrations__Cat;
        const double var_x128 = var_x119 * var_x127;
        const double var_x129 = 3.3790354722997219e-5 * var_x123;
        const double var_x130 = pow(var_chaste_interface__ion_concentrations__Nat, 2) * var_chaste_interface__ion_concentrations__Cai;
        const double var_x131 = var_x117 * var_x130;
        const double var_x132 = 1 / var_chaste_interface__ion_concentrations__Cat;
        const double var_x133 = var_x119 * var_x34;
        const double var_x134 = 0.018700000000000001 * var_x120 + 0.018700000000000001 * var_x121;
        const double var_x135 = 1 / (1.0 - exp(9.9999999983446669e-8));
        const double var_x136 = 1 / (1.0 - exp(-1.000000000139778e-7));
        const double var_x137 = _lt_0_row[23];
        const double var_x138 = 0.27359999999999995 * var_x137 * var_chaste_interface__i_Nas_m_gate__m;
        const double var_x139 = fabs(59.299999999999997 + var_chaste_interface__Vms__Vms) < 1.8181818181584042e-7;
        const double var_x140 = 1.0 - var_chaste_interface__i_Nas_m_gate__m;
        const double var_x141 = exp(-32.615000000000002 - 0.55000000000000004 * var_chaste_interface__Vms__Vms);
        const double var_x142 = 1.0 - var_x141;
        const double var_x143 = 0.11726 / var_x142;
        const double var_x144 = 59.299999999999997 + var_chaste_interface__Vms__Vms;
        const double var_x145 = -3.7999999999999998 * var_x137;
        const double var_x146 = 1 / (1.0 - exp(-9.999999998955289e-8));
        const double var_x147 = 1 / (1.0 - exp(1.000000000139778e-7));
        const double var_x148 = exp(9.4110800000000001 + 0.081199999999999994 * var_chaste_interface__Vms__Vms);
        const double var_x149 = 1.0 + var_x148;
        const double var_x150 = -0.023093279999999997 * var_x148 * (1.0 - var_chaste_interface__i_Nas_h_gate__h) / pow(var_x149, 2);
        const double var_x151 = 64.400000000000006 + var_chaste_interface__Vms__Vms;
        const double var_x152 = fabs(var_x151) < 4.5454545455347883e-7;
        const double var_x153 = exp(-14.168000000000001 - 0.22 * var_chaste_interface__Vms__Vms);
        const double var_x154 = 1.0 - var_x153;
        const double var_x155 = 0.018769999999999998 / var_x154;
        const double var_x156 = -0.28439999999999999 / var_x149;
        const double var_x157 = exp(-4.3919999999999995 - 0.071999999999999995 * var_chaste_interface__Vmt__Vmt);
        const double var_x158 = 59.299999999999997 + var_chaste_interface__Vmt__Vmt;
        const double var_x159 = exp(-32.615000000000002 - 0.55000000000000004 * var_chaste_interface__Vmt__Vmt);
        const double var_x160 = 1.0 - var_x159;
        const double var_x161 = 0.11726 / var_x160;
        const double var_x162 = 1.0 - var_chaste_interface__i_Nat_m_gate__m;
        const double var_x163 = exp(9.4110800000000001 + 0.081199999999999994 * var_chaste_interface__Vmt__Vmt);
        const double var_x164 = 1.0 + var_x163;
        const double var_x165 = 64.400000000000006 + var_chaste_interface__Vmt__Vmt;
        const double var_x166 = exp(-14.168000000000001 - 0.22 * var_chaste_interface__Vmt__Vmt);
        const double var_x167 = 1.0 - var_x166;
        const double var_x168 = 0.018769999999999998 / var_x167;
        const double var_x169 = exp(-0.64800000000000002 * pow((-1 + 0.055555555555555552 * var_chaste_interface__Vms__Vms), 2));
        const double var_x170 = exp(-0.22049999999999997 * pow((1 + 0.14285714285714285 * var_chaste_interface__Vms__Vms), 2));
        const double var_x171 = -0.20000000000000001 * var_chaste_interface__Vms__Vms;
        const double var_x172 = exp(-3.0600000000000001 + var_x171);
        const double var_x173 = 1.0 + var_x172;
        const double var_x174 = 0.0010499999999999999 * var_x169;
        const double var_x175 = 0.0030500000000000002 * var_x170;
        const double var_x176 = 1 / (0.00025000000000000001 + var_x174 + var_x175);
        const double var_x177 = 0.040000000000000001 * var_chaste_interface__Vms__Vms;
        const double var_x178 = exp(1.0 - var_x177);
        const double var_x179 = 1.0 + var_x178;
        const double var_x180 = 1 / var_x179;
        const double var_x181 = exp(3.0 + var_x177);
        const double var_x182 = 1.0 + var_x181;
        const double var_x183 = 1 / var_x182;
        const double var_x184 = exp(-14.0625 * pow((1 + 0.022222222222222223 * var_chaste_interface__Vms__Vms), 2));
        const double var_x185 = exp(4.9444444444444438 + 0.18518518518518517 * var_chaste_interface__Vms__Vms);
        const double var_x186 = 1.0 + var_x185;
        const double var_x187 = 1 / var_x186;
        const double var_x188 = 0.00059999999999999995 * var_x181 / pow(var_x182, 2);
        const double var_x189 = 0.105 * var_x184;
        const double var_x190 = 0.014999999999999999 * var_x183;
        const double var_x191 = 1 / (var_x189 + var_x190 + 0.040000000000000001 * var_x180);
        const double var_x192 = 0.00018518518518518518 * var_x185 / pow(var_x186, 2);
        const double var_x193 = exp(-11.0 + var_x171);
        const double var_x194 = 1.0 + var_x193;
        const double var_x195 = 1 / var_x194;
        const double var_x196 = exp(-15.340277777777779 * pow((1 + 0.021276595744680851 * var_chaste_interface__Vms__Vms), 2));
        const double var_x197 = 0.041000000000000002 * var_x196;
        const double var_x198 = 1 / (var_x190 + var_x197 + 0.080000000000000002 * var_x195);
        const double var_x199 = -0.0011111111111111113 / pow((0.01 + var_chaste_interface__ion_concentrations__Cass), 2);
        const double var_x200 = exp(-0.64800000000000002 * pow((-1 + 0.055555555555555552 * var_chaste_interface__Vmt__Vmt), 2));
        const double var_x201 = 0.0010499999999999999 * var_x200;
        const double var_x202 = exp(-0.22049999999999997 * pow((1 + 0.14285714285714285 * var_chaste_interface__Vmt__Vmt), 2));
        const double var_x203 = 0.0030500000000000002 * var_x202;
        const double var_x204 = 1 / (0.00025000000000000001 + var_x201 + var_x203);
        const double var_x205 = -0.20000000000000001 * var_chaste_interface__Vmt__Vmt;
        const double var_x206 = exp(-3.0600000000000001 + var_x205);
        const double var_x207 = 1.0 + var_x206;
        const double var_x208 = 0.040000000000000001 * var_chaste_interface__Vmt__Vmt;
        const double var_x209 = exp(3.0 + var_x208);
        const double var_x210 = 1.0 + var_x209;
        const double var_x211 = 1 / var_x210;
        const double var_x212 = 0.014999999999999999 * var_x211;
        const double var_x213 = exp(1.0 - var_x208);
        const double var_x214 = 1.0 + var_x213;
        const double var_x215 = 1 / var_x214;
        const double var_x216 = exp(-14.0625 * pow((1 + 0.022222222222222223 * var_chaste_interface__Vmt__Vmt), 2));
        const double var_x217 = 0.105 * var_x216;
        const double var_x218 = 1 / (var_x212 + var_x217 + 0.040000000000000001 * var_x215);
        const double var_x219 = exp(4.9444444444444438 + 0.18518518518518517 * var_chaste_interface__Vmt__Vmt);
        const double var_x220 = 1.0 + var_x219;
        const double var_x221 = 1 / var_x220;
        const double var_x222 = 0.00059999999999999995 * var_x209 / pow(var_x210, 2);
        const double var_x223 = 0.00018518518518518518 * var_x219 / pow(var_x220, 2);
        const double var_x224 = exp(-11.0 + var_x205);
        const double var_x225 = 1.0 + var_x224;
        const double var_x226 = 1 / var_x225;
        const double var_x227 = exp(-15.340277777777779 * pow((1 + 0.021276595744680851 * var_chaste_interface__Vmt__Vmt), 2));
        const double var_x228 = 0.041000000000000002 * var_x227;
        const double var_x229 = 1 / (var_x212 + var_x228 + 0.080000000000000002 * var_x226);
        const double var_x230 = exp(-0.92819614711033271 - 0.087565674255691769 * var_chaste_interface__Vms__Vms);
        const double var_x231 = 1.0 + var_x230;
        const double var_x232 = exp(1.7885000000000002 + 0.035770000000000003 * var_chaste_interface__Vms__Vms);
        const double var_x233 = exp(-3.8000000000000003 - 0.10000000000000001 * var_chaste_interface__Vms__Vms);
        const double var_x234 = pow((1 + 0.014285714285714285 * var_chaste_interface__Vms__Vms), 2);
        const double var_x235 = exp(-21.734244000000004 * var_x234);
        const double var_x236 = 1 / (0.035000000000000003 + 0.34999999999999998 * var_x235);
        const double var_x237 = exp(6.5803808776746413 + 0.14526227103034528 * var_chaste_interface__Vms__Vms);
        const double var_x238 = 1.0 + var_x237;
        const double var_x239 = 0.00014526227103034528 * var_x237 / pow(var_x238, 2);
        const double var_x240 = 1 / var_x238;
        const double var_x241 = exp(-5.433561000000001 * var_x234);
        const double var_x242 = 1 / (0.035000000000000003 + 3.7000000000000002 * var_x241);
        const double var_x243 = exp(1.7885000000000002 + 0.035770000000000003 * var_chaste_interface__Vmt__Vmt);
        const double var_x244 = exp(-3.8000000000000003 - 0.10000000000000001 * var_chaste_interface__Vmt__Vmt);
        const double var_x245 = exp(-0.92819614711033271 - 0.087565674255691769 * var_chaste_interface__Vmt__Vmt);
        const double var_x246 = 1.0 + var_x245;
        const double var_x247 = pow((1 + 0.014285714285714285 * var_chaste_interface__Vmt__Vmt), 2);
        const double var_x248 = exp(-21.734244000000004 * var_x247);
        const double var_x249 = 1 / (0.035000000000000003 + 0.34999999999999998 * var_x248);
        const double var_x250 = exp(6.5803808776746413 + 0.14526227103034528 * var_chaste_interface__Vmt__Vmt);
        const double var_x251 = 1.0 + var_x250;
        const double var_x252 = 0.00014526227103034528 * var_x250 / pow(var_x251, 2);
        const double var_x253 = 1 / var_x251;
        const double var_x254 = exp(-5.433561000000001 * var_x247);
        const double var_x255 = 1 / (0.035000000000000003 + 3.7000000000000002 * var_x254);
        const double var_x256 = exp(-0.97292724196277491 - 0.084602368866328256 * var_chaste_interface__Vms__Vms);
        const double var_x257 = 1.0 + var_x256;
        const double var_x258 = exp(8.4951456310679614 + 0.097087378640776698 * var_chaste_interface__Vms__Vms);
        const double var_x259 = exp(-0.97292724196277491 - 0.084602368866328256 * var_chaste_interface__Vmt__Vmt);
        const double var_x260 = 1.0 + var_x259;
        const double var_x261 = exp(8.4951456310679614 + 0.097087378640776698 * var_chaste_interface__Vmt__Vmt);
        const double var_x262 = exp(13.225190839694655 + 0.095419847328244267 * var_chaste_interface__Vms__Vms);
        const double var_x263 = 1.0 + var_x262;
        const double var_x264 = exp(2.8198801550934083 + 0.035248501938667604 * var_chaste_interface__Vms__Vms);
        const double var_x265 = exp(-5.6377730796335452 - 0.070472163495419307 * var_chaste_interface__Vms__Vms);
        const double var_x266 = exp(-5.6377730796335452 - 0.070472163495419307 * var_chaste_interface__Vmt__Vmt);
        const double var_x267 = exp(2.8198801550934083 + 0.035248501938667604 * var_chaste_interface__Vmt__Vmt);
        const double var_x268 = exp(13.225190839694655 + 0.095419847328244267 * var_chaste_interface__Vmt__Vmt);
        const double var_x269 = 1.0 + var_x268;
        const double var_x270 = 12150000000.0 * pow(var_chaste_interface__ion_concentrations__Cass, 4);
        const double var_x271 = pow(var_chaste_interface__ion_concentrations__Cass, 3);
        const double var_x272 = 48600000000.0 * var_x271 * var_chaste_interface__JCaSRrel__F1;
        const double var_x273 = 4050000.0 * var_x271;
        const double var_x274 = pow(var_chaste_interface__ion_concentrations__Cass, 2) * var_chaste_interface__JCaSRrel__F2;
        const double var_x275 = 0.80000000000000004 + var_chaste_interface__CaSRrel__CaSRrel;
        const double var_x276 = pow(var_x275, (-2));
        const double var_x277 = 1 / (1.0 + 12.0 * var_x276);
        const double var_x278 = 22428571.428571425 * var_x277;
        const double var_x279 = var_x278 * (8.0254777070063705e-8 * var_chaste_interface__ion_concentrations__Cass - 8.0254777070063705e-8 * var_chaste_interface__CaSRrel__CaSRrel);
        const double var_x280 = 8.0254777070063705e-8 * var_chaste_interface__JCaSRrel__F2;
        const double var_x281 = 8.0254777070063705e-8 * var_chaste_interface__JCaSRrel__F3;
        const double var_x282 = (-var_chaste_interface__ion_concentrations__Cass + var_chaste_interface__CaSRrel__CaSRrel) * (var_chaste_interface__JCaSRrel__F2 + var_chaste_interface__JCaSRrel__F3);
        const double var_x283 = 6.1184181391435268e-5 * var_x39;
        const double var_x284 = 0.00033790354722997213 * var_x114;
        const double var_x285 = 3.3790354722997215e-8 * var_x123;
        const double var_x286 = var_chaste_interface__ion_concentrations__Nat + 0.12 * var_chaste_interface__ion_concentrations__Kt;
        const double var_x287 = -25.403626943005182 * log(var_x286 * var_x59) + var_chaste_interface__Vmt__Vmt;
        const double var_x288 = var_x287 * pow(var_chaste_interface__i_Nat_m_gate__m, 2) * var_chaste_interface__i_Nat_h_gate__h * NV_Ith_S(mParameters, 0);
        const double var_x289 = pow(var_chaste_interface__i_Nat_m_gate__m, 3) * NV_Ith_S(mParameters, 0);
        const double var_x290 = 7.7870776316372187e-5 * var_x289;
        const double var_x291 = var_x289 * var_chaste_interface__i_Nat_h_gate__h;
        const double var_x292 = var_x291 * var_x59;
        const double var_x293 = 1.0137106416899164e-7 * var_x123;
        const double var_x294 = 0.0010137106416899164 * var_x114;
        const double var_x295 = exp(-0.0039364457769891295 * var_chaste_interface__Vmt__Vmt);
        const double var_x296 = exp(0.01485884101040119 * var_chaste_interface__ion_concentrations__Nat);
        const double var_x297 = exp(-0.039364457769891288 * var_chaste_interface__Vmt__Vmt);
        const double var_x298 = 1.0 + 0.1245 * var_x295 + 0.0052142857142857138 * var_x297 * (-1.0 + var_x296);
        const double var_x299 = 1 / var_x298;
        const double var_x300 = 1 / (1.5 + var_chaste_interface__ion_concentrations__Kt);
        const double var_x301 = var_x300 * var_chaste_interface__ion_concentrations__Kt;
        const double var_x302 = var_x299 * var_x301 * var_x87;
        const double var_x303 = 1 / var_chaste_interface__ion_concentrations__Nat;
        const double var_x304 = var_x291 / var_x286;
        const double var_x305 = var_x301 * var_x43 / pow(var_x298, 2);
        const double var_x306 = var_x296 * var_x297 * var_x305;
        const double var_x307 = var_x299 * var_x43;
        const double var_x308 = var_x300 * var_x307;
        const double var_x309 = var_x307 * var_chaste_interface__ion_concentrations__Kt / pow((1 + 0.66666666666666663 * var_chaste_interface__ion_concentrations__Kt), 2);
        const double var_x310 = var_x114 * var_x134;
        const double var_x311 = var_x305 * (0.00049008749923514655 * var_x295 + 0.039364457769891288 * var_x297 * (-0.0052142857142857138 + 0.0052142857142857138 * var_x296));
        const double var_x312 = -5.4209184712811651e-5 * var_chaste_interface__i_Ktos_ss_gate__ss - 6.9749966786236214e-6 * var_chaste_interface__i_Ktos_sss_gate__sss;
        const double var_x313 = var_x312 * var_x80;
        const double var_x314 = log(var_x23 * var_chaste_interface__ion_concentrations__Kt);
        const double var_x315 = -25.403626943005182 * var_x314 + var_chaste_interface__Vmt__Vmt;
        const double var_x316 = (-6.8993507816305752e-5 * var_chaste_interface__i_Ktot_st_gate__st - 8.8772685000664288e-6 * var_chaste_interface__i_Ktot_sst_gate__sst) * NV_Ith_S(mParameters, 3);
        const double var_x317 = var_chaste_interface__i_Ktot_rt_gate__rt * NV_Ith_S(mParameters, 3);
        const double var_x318 = 5.9346004539099664e-5 * var_x24 - 2.3361232894911652e-6 * var_chaste_interface__Vms__Vms;
        const double var_x319 = 0.0001879290143738156 * var_x314 - 7.3977237500553573e-6 * var_chaste_interface__Vmt__Vmt;
        const double var_x320 = log(var_x41 * var_chaste_interface__ion_concentrations__Nat);
        const double var_x321 = 5.7367804387796348e-6 * var_chaste_interface__i_Kft_qt_gate__qt;
        const double var_x322 = 2.2947121755118539e-5 * var_chaste_interface__i_Kft_qt_gate__qt;
        const double var_x323 = var_chaste_interface__i_Kstt_rstt_gate__rstt * var_chaste_interface__i_Kstt_sstt_gate__sstt;
        const double var_x324 = 0.0001879290143738156 * var_x323;
        const double var_x325 = exp(8.0548387096774192 - 8.064516129032258 * var_chaste_interface__ion_concentrations__Kt);
        const double var_x326 = exp(-0.10984612576230394 + 0.063494870382834648 * var_chaste_interface__Vmt__Vmt - 1.613 * var_x314);
        const double var_x327 = var_x326 * (1.0 + var_x325);
        const double var_x328 = 1.0 + var_x327;
        const double var_x329 = NV_Ith_S(mParameters, 1) / var_x328;
        const double var_x330 = 0.0019782001513033221 * var_x329;
        const double var_x331 = var_x316 * var_chaste_interface__i_Ktot_rt_gate__rt;
        const double var_x332 = (-1.73 + var_x315) * NV_Ith_S(mParameters, 1) / pow(var_x328, 2);
        const double var_x333 = var_x327 * var_x332;
        const double var_x334 = var_x23 * var_x333;
        const double var_x335 = 1 / var_chaste_interface__ion_concentrations__Kt;
        const double var_x336 = var_x332 * (1.613 * var_x327 * var_x335 + 8.064516129032258 * var_x325 * var_x326);
        const double var_x337 = 25.403626943005182 * var_x335;
        const double var_x338 = 5.9901083372585972e-7 * var_x123;
        const double var_x339 = 0.005990108337258597 * var_x114;
        const double var_x340 = 0.0013804364892447795 * var_x289;
        const double var_x341 = 0.017970325011775791 * var_x114;
        const double var_x342 = 1.7970325011775791e-6 * var_x123;
        const double var_x343 = 0.0019967027790861987 * var_x114;
        const double var_x344 = 1.9967027790861991e-7 * var_x123;
        const double var_x345 = exp(0.078728915539782576 * var_chaste_interface__Vmt__Vmt);
        const double var_x346 = -1.0 + var_x345;
        const double var_x347 = 1 / var_x346;
        const double var_x348 = 0.10000000000000001 * var_chaste_interface__i_Cat__Ccast;
        const double var_x349 = 0.10000000000000001 - var_x348;
        const double var_x350 = 0.90000000000000002 + var_x348;
        const double var_x351 = var_x349 * var_chaste_interface__i_Cat__C2 + var_x350 * var_chaste_interface__i_Cat__C1;
        const double var_x352 = var_x347 * var_x351 * var_chaste_interface__Vmt__Vmt;
        const double var_x353 = var_x345 * var_chaste_interface__ion_concentrations__Cass;
        const double var_x354 = var_x353 - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Cat;
        const double var_x355 = 0.0034215944552296509 * var_x354;
        const double var_x356 = var_x347 * var_chaste_interface__i_Cat__Co;
        const double var_x357 = var_x356 * var_chaste_interface__Vmt__Vmt;
        const double var_x358 = var_x355 * var_x357;
        const double var_x359 = 0.10000000000000001 * var_chaste_interface__i_Cat__C1 - 0.10000000000000001 * var_chaste_interface__i_Cat__C2;
        const double var_x360 = 5.9901083372585972e-7 * var_x123;
        const double var_x361 = 0.005990108337258597 * var_x114;
        const double var_x362 = var_x352 * var_chaste_interface__i_Cat__Co;
        const double var_x363 = var_x345 * var_x362;
        const double var_x364 = var_x351 * var_x356;
        const double var_x365 = var_x353 * var_x362;
        const double var_x366 = var_x345 * var_x351 * var_x354 * var_chaste_interface__Vmt__Vmt * var_chaste_interface__i_Cat__Co / pow(var_x346, 2);
        const double var_x367 = 0.0012230667294708746 * var_chaste_interface__i_Ktot_st_gate__st + 0.00015736975977390487 * var_chaste_interface__i_Ktot_sst_gate__sst;
        const double var_x368 = var_x315 * NV_Ith_S(mParameters, 3);
        const double var_x369 = 0.00013114146647825407 * var_chaste_interface__Vmt__Vmt - 0.0033314688911721853 * var_x314;
        const double var_x370 = 0.00010169747141472988 * var_chaste_interface__i_Kft_qt_gate__qt;
        const double var_x371 = 0.00040678988565891953 * var_chaste_interface__i_Kft_qt_gate__qt;
        const double var_x372 = 0.03506809359128616 * var_x329;
        const double var_x373 = 0.0033314688911721853 * var_x323;
        const double var_x374 = var_x317 * var_x367;
        const double var_x375 = 0.0023800000000000002 + var_chaste_interface__ion_concentrations__Cass;
        const double var_x376 = 1.0 + 0.00011900000000000002 / pow(var_x375, 2);
        const double var_x377 = 1 / var_x376;
        const double var_x378 = 5423.1433506044905 * var_x377;
        const double var_x379 = var_x352 * var_x354;
        const double var_x380 = 1.5055015603010464 * var_x377;
        const double var_x381 = var_x354 * var_x357;
        const double var_x382 = var_x380 * var_x381;
        const double var_x383 = 0.001 * var_x377;
        const double var_x384 = var_x383 * (84000.000000000015 * var_chaste_interface__CaSRrel__CaSRrel - 84000.000000000015 * var_chaste_interface__ion_concentrations__Cass);
        const double var_x385 = 84000.000000000015 * var_chaste_interface__JCaSRrel__F2;
        const double var_x386 = 84000.000000000015 * var_chaste_interface__JCaSRrel__F3;
        const double var_x387 = var_x65 * var_chaste_interface__i_Cas__Co;
        const double var_x388 = var_x354 * var_x364;
        const double var_x389 = 1.4451136363636365 * var_x114;
        const double var_x390 = 0.00014451136363636364 * var_x123;
        const double var_x391 = 0.99909090909090914 * var_x289;
        const double var_x392 = 4.9527579739449195 * var_x381;
        const double var_x393 = -0.11389636363636366 * var_chaste_interface__i_Ktot_sst_gate__sst - 0.88519454545454557 * var_chaste_interface__i_Ktot_st_gate__st;
        const double var_x394 = 2.4111506099858695 * var_x314 - 0.094913636363636381 * var_chaste_interface__Vmt__Vmt;
        const double var_x395 = 0.073603544936410747 * var_chaste_interface__i_Kft_qt_gate__qt;
        const double var_x396 = 0.00043353409090909098 * var_x123;
        const double var_x397 = 4.3353409090909096 * var_x114;
        const double var_x398 = 0.29441417974564299 * var_chaste_interface__i_Kft_qt_gate__qt;
        const double var_x399 = 25.380532736693361 * var_x329;
        const double var_x400 = 2.4111506099858695 * var_x323;
        const double var_x401 = var_x317 * var_x393;
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = mSetVoltageDerivativeToZero ? 0.0 : (-1128.3437216687673 + var_x30 + 0.063568487623858222 * var_x50 - 0.43231884057971004 * var_x38 - 0.014516811594202898 * var_chaste_interface__i_Kfs_qs_gate__qs - 1.0011594202898551 * var_x27 - 0.038226086956521743 * var_x28 - 22753.623188405796 * var_x22 - 0.73009451795841218 * var_x48 - var_x40 * var_chaste_interface__i_Nas_h_gate__h);
        IJth(rJacobian, 1, 0) = var_x101 * (-1.9823674770825031e-5 + 0.026420441964483409 * var_x38);
        IJth(rJacobian, 2, 0) = ((var_x139) ? (var_x138 + (0.001 - 0.001 * var_chaste_interface__i_Nas_m_gate__m) * (58.6299999910498 * var_x135 + 58.630000008950205 * var_x136)) : (var_x138 + var_x140 * var_x143 - 0.064493000000000009 * var_x140 * var_x141 * var_x144 / pow(var_x142, 2)));
        IJth(rJacobian, 3, 0) = ((var_x152) ? (var_x150 + (-0.0093849999988538605 * var_x146 - 0.009385000001146138 * var_x147) * var_chaste_interface__i_Nas_h_gate__h) : (var_x150 - var_x155 * var_chaste_interface__i_Nas_h_gate__h + 0.0041294000000000001 * var_x151 * var_x153 * var_chaste_interface__i_Nas_h_gate__h / pow(var_x154, 2)));
        IJth(rJacobian, 6, 0) = 107.49798441279225 * (-var_chaste_interface__i_Cas__Co + 1 / var_x173) * (-var_x174 * (0.072000000000000008 - 0.0040000000000000001 * var_chaste_interface__Vms__Vms) - var_x175 * (-0.063 - 0.0089999999999999993 * var_chaste_interface__Vms__Vms)) / pow((0.081967213114754092 + var_x170 + 0.34426229508196715 * var_x169), 2) + 0.00020000000000000001 * var_x172 * var_x176 / pow(var_x173, 2);
        IJth(rJacobian, 7, 0) = -var_x191 * var_x192 + 0.090702947845805001 * (var_x187 - var_chaste_interface__i_Cas__C1) * (var_x188 - var_x189 * (-0.625 - 0.013888888888888888 * var_chaste_interface__Vms__Vms) - 0.0016000000000000001 * var_x178 / pow(var_x179, 2)) / pow((var_x184 + 0.38095238095238099 * var_x180 + 0.14285714285714285 * var_x183), 2);
        IJth(rJacobian, 8, 0) = -var_x192 * var_x198 + 0.15625 * (var_x187 - var_chaste_interface__i_Cas__C2) * (var_x188 - var_x197 * (-0.65277777777777779 - 0.013888888888888888 * var_chaste_interface__Vms__Vms) - 0.016 * var_x193 / pow(var_x194, 2)) / pow((var_x195 + 0.51249999999999996 * var_x196 + 0.1875 * var_x183), 2);
        IJth(rJacobian, 14, 0) = (0.001 / var_x231 - 0.001 * var_chaste_interface__i_Ktos_rs_gate__rs) * (1.6153732000000001 * var_x232 - 9.8900000000000006 * var_x233) + 8.7565674255691772e-5 * var_x230 * (45.159999999999997 * var_x232 + 98.900000000000006 * var_x233) / pow(var_x231, 2);
        IJth(rJacobian, 15, 0) = -var_x236 * var_x239 - 0.0028571428571428571 * var_x235 * (-0.62097840000000015 - 0.0088711200000000014 * var_chaste_interface__Vms__Vms) * (var_x240 - var_chaste_interface__i_Ktos_ss_gate__ss) / pow((0.10000000000000002 + var_x235), 2);
        IJth(rJacobian, 16, 0) = -var_x239 * var_x242 - 0.00027027027027027027 * var_x241 * (-0.15524460000000004 - 0.0022177800000000004 * var_chaste_interface__Vms__Vms) * (var_x240 - var_chaste_interface__i_Ktos_sss_gate__sss) / pow((0.00945945945945946 + var_x241), 2);
        IJth(rJacobian, 20, 0) = (0.001 / var_x257 - 0.001 * var_chaste_interface__i_Ksts_rsts_gate__rsts) * (0.16153732000000001 * var_x232 - 0.9890000000000001 * var_x233) + 8.4602368866328257e-5 * var_x256 * (9.8900000000000006 * var_x233 + 4.516 * var_x232) / pow(var_x257, 2);
        IJth(rJacobian, 21, 0) = -4.6232085067036518e-5 * var_x258 / pow((1.0 + var_x258), 2);
        IJth(rJacobian, 24, 0) = (0.001 / var_x263 - 0.001 * var_chaste_interface__i_Kfs_qs_gate__qs) * (0.0041892844554106447 * var_x264 - 0.039626497533474282 * var_x265) - 9.5419847328244274e-5 * var_x262 * (0.56230000000000002 * var_x265 + 0.11885 * var_x264) / pow(var_x263, 2);
        IJth(rJacobian, 32, 0) = -4.9039121385235371e-8 - 0.00013385551146308076 * var_x48 - 7.9261325893450232e-5 * var_x38 - var_x283 * var_chaste_interface__i_Nas_h_gate__h;
        IJth(rJacobian, 33, 0) = -8.4434170320180672e-8 + var_x313 + 3.8848816669290266e-6 * var_x50 + 8.9237007642053832e-5 * var_x48 - 6.1184181391435268e-5 * var_x27 - 2.3361232894911652e-6 * var_x28 - 8.8717063017581157e-7 * var_chaste_interface__i_Kfs_qs_gate__qs;
        IJth(rJacobian, 37, 0) = -var_x22 * var_x378;
        IJth(rJacobian, 40, 0) = 884.72183333278349;
        IJth(rJacobian, 0, 1) = mSetVoltageDerivativeToZero ? 0.0 : (0.85098550724637667 * var_x54 + 1186282.8985507244 * var_x55 + 0.0015755059787890306 * var_x57 - 0.0082403180572200932 * var_x51 - 0.85098550724637667 * var_x53);
        IJth(rJacobian, 1, 1) = var_x101 * (-5920.0000000000009 - var_x102 + 3.5444788081288787e-5 * var_x109 + 0.059098357025818171 * var_x54 + 2800.0000000000005 * var_chaste_interface__ion_concentrations__BTRH + 2800.0000000000005 * var_chaste_interface__ion_concentrations__BTRL - 0.00057226504376988959 * var_x51 - 9.6284409491557608e-5 * var_x57 - 16250.626147884037 * var_x106 - 72497.692750542483 * var_x55 - var_x111 * var_x124 - var_x115 * var_x118) + 2.3800000000000004e-7 * (2.8000000000000003 * var_chaste_interface__ion_concentrations__BTRL + 320.0 * var_chaste_interface__ion_concentrations__Cass + 0.00032046842451113823 * log(var_x51 * var_chaste_interface__ion_concentrations__Cat) + 0.00025179661925875141 * log(1.2 * var_x51) + 0.0098000000000000014 * var_chaste_interface__ion_concentrations__BTRH - 320.0 * var_chaste_interface__ion_concentrations__Cai - 1.9823674770825031e-5 * var_chaste_interface__Vms__Vms - 2.523013152650459e-5 * var_chaste_interface__Vmt__Vmt + var_x115 * var_x122 - var_x102 * var_chaste_interface__ion_concentrations__Cai - var_x125 * (1.0 - var_chaste_interface__ion_concentrations__BTRH) - var_x125 * (1.0 - var_chaste_interface__ion_concentrations__BTRL) + 0.026420441964483409 * var_x37 * var_x56 - var_x104 * var_x107) / (pow(var_x98, 3) * pow(var_x99, 2));
        IJth(rJacobian, 30, 1) = 301.79734274641783 * var_x106 - 6.5826035008107732e-7 * var_x109;
        IJth(rJacobian, 32, 1) = 217.49307825162742 * var_x55 + 2.8885322847467282e-7 * var_x57 + var_x111 * var_x285 + var_x118 * var_x284;
        IJth(rJacobian, 34, 1) = -var_x111 * var_x338 - var_x118 * var_x339;
        IJth(rJacobian, 35, 1) = 0.00058668550792903128 * var_x53 + 5.6810311617883583e-6 * var_x51 - 0.00058668550792903128 * var_x54 + var_x111 * var_x344 + var_x118 * var_x343;
        IJth(rJacobian, 37, 1) = 2496.0 * var_x377;
        IJth(rJacobian, 38, 1) = 20.0 - 20.0 * var_chaste_interface__ion_concentrations__BTRH;
        IJth(rJacobian, 39, 1) = 40.0 - 40.0 * var_chaste_interface__ion_concentrations__BTRL;
        IJth(rJacobian, 40, 1) = 0.84922727272727283 * var_x54 - 0.0082232926066886491 * var_x51 - 0.84922727272727283 * var_x53 + var_x111 * var_x390 + var_x118 * var_x389;
        IJth(rJacobian, 0, 2) = mSetVoltageDerivativeToZero ? 0.0 : (-3.0034782608695649 * var_x61);
        IJth(rJacobian, 2, 2) = ((var_x139) ? (var_x145 - 2.1320000002980069e-8 * var_x136 + 2750.0000000354134 * (59.299999818181817 + var_chaste_interface__Vms__Vms) * (-2.131999999647083e-5 * var_x135 - 2.1320000002980068e-5 * var_x136)) : (var_x145 - var_x143 * var_x144));
        IJth(rJacobian, 32, 2) = -0.00018355254417430582 * var_x61;
        IJth(rJacobian, 0, 3) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x40 * var_x60);
        IJth(rJacobian, 3, 3) = ((var_x152) ? (var_x156 - 8.5318181809268527e-9 * var_x146 + 1099.9999999805812 * (64.399999545454548 + var_chaste_interface__Vms__Vms) * (-8.5318181809268536e-6 * var_x146 - 8.531818183010741e-6 * var_x147)) : (var_x156 - var_x151 * var_x155));
        IJth(rJacobian, 32, 3) = -var_x283 * var_x60;
        IJth(rJacobian, 4, 4) = -3.7999999999999998 * var_x157 - var_x158 * var_x161;
        IJth(rJacobian, 32, 4) = -0.00023361232894911655 * var_x288;
        IJth(rJacobian, 34, 4) = 0.0041413094677343384 * var_x288;
        IJth(rJacobian, 40, 4) = -2.9972727272727275 * var_x288;
        IJth(rJacobian, 5, 5) = -0.28439999999999999 / var_x164 - var_x165 * var_x168;
        IJth(rJacobian, 32, 5) = -var_x287 * var_x290;
        IJth(rJacobian, 34, 5) = var_x287 * var_x340;
        IJth(rJacobian, 40, 5) = -var_x287 * var_x391;
        IJth(rJacobian, 0, 6) = mSetVoltageDerivativeToZero ? 0.0 : (-22753.623188405796 * var_x67);
        IJth(rJacobian, 6, 6) = -0.001 * var_x176;
        IJth(rJacobian, 37, 6) = -var_x378 * var_x67;
        IJth(rJacobian, 0, 7) = mSetVoltageDerivativeToZero ? 0.0 : (-22753.623188405796 * var_x72);
        IJth(rJacobian, 7, 7) = -0.001 * var_x191;
        IJth(rJacobian, 37, 7) = -var_x378 * var_x72;
        IJth(rJacobian, 0, 8) = mSetVoltageDerivativeToZero ? 0.0 : (-22753.623188405796 * var_x75);
        IJth(rJacobian, 8, 8) = -0.001 * var_x198;
        IJth(rJacobian, 37, 8) = -var_x378 * var_x75;
        IJth(rJacobian, 0, 9) = mSetVoltageDerivativeToZero ? 0.0 : (-22753.623188405796 * var_x79);
        IJth(rJacobian, 9, 9) = -0.11111111111111112;
        IJth(rJacobian, 37, 9) = -var_x378 * var_x79;
        IJth(rJacobian, 10, 10) = -0.001 * var_x204;
        IJth(rJacobian, 35, 10) = var_x352 * var_x355;
        IJth(rJacobian, 37, 10) = -var_x379 * var_x380;
        IJth(rJacobian, 40, 10) = -4.9527579739449195 * var_x379;
        IJth(rJacobian, 11, 11) = -0.001 * var_x218;
        IJth(rJacobian, 35, 11) = var_x350 * var_x358;
        IJth(rJacobian, 37, 11) = -var_x350 * var_x382;
        IJth(rJacobian, 40, 11) = -var_x350 * var_x392;
        IJth(rJacobian, 12, 12) = -0.001 * var_x229;
        IJth(rJacobian, 35, 12) = var_x349 * var_x358;
        IJth(rJacobian, 37, 12) = -var_x349 * var_x382;
        IJth(rJacobian, 40, 12) = -var_x349 * var_x392;
        IJth(rJacobian, 13, 13) = -0.11111111111111112;
        IJth(rJacobian, 35, 13) = var_x358 * var_x359;
        IJth(rJacobian, 37, 13) = -var_x359 * var_x382;
        IJth(rJacobian, 40, 13) = -var_x359 * var_x392;
        IJth(rJacobian, 0, 14) = mSetVoltageDerivativeToZero ? 0.0 : (var_x29 * var_x49);
        IJth(rJacobian, 14, 14) = -0.045159999999999999 * var_x232 - 0.098900000000000002 * var_x233;
        IJth(rJacobian, 33, 14) = var_x312 * var_x49 * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 0, 15) = mSetVoltageDerivativeToZero ? 0.0 : (var_x80 * (22.533709255237664 * var_x24 - 0.88702724637681152 * var_chaste_interface__Vms__Vms));
        IJth(rJacobian, 15, 15) = -0.001 * var_x236;
        IJth(rJacobian, 33, 15) = var_x80 * (0.0013771099053287268 * var_x24 - 5.4209184712811651e-5 * var_chaste_interface__Vms__Vms);
        IJth(rJacobian, 0, 16) = mSetVoltageDerivativeToZero ? 0.0 : (var_x80 * (2.8993711682811441 * var_x24 - 0.11413217391304346 * var_chaste_interface__Vms__Vms));
        IJth(rJacobian, 16, 16) = -0.001 * var_x242;
        IJth(rJacobian, 33, 16) = var_x80 * (0.00017719021355245469 * var_x24 - 6.9749966786236214e-6 * var_chaste_interface__Vms__Vms);
        IJth(rJacobian, 17, 17) = -0.045159999999999999 * var_x243 - 0.098900000000000002 * var_x244;
        IJth(rJacobian, 33, 17) = var_x315 * var_x316;
        IJth(rJacobian, 36, 17) = var_x367 * var_x368;
        IJth(rJacobian, 40, 17) = var_x368 * var_x393;
        IJth(rJacobian, 18, 18) = -0.001 * var_x249;
        IJth(rJacobian, 33, 18) = var_x317 * (0.0017526853340547434 * var_x314 - 6.8993507816305752e-5 * var_chaste_interface__Vmt__Vmt);
        IJth(rJacobian, 36, 18) = var_x317 * (0.0012230667294708746 * var_chaste_interface__Vmt__Vmt - 0.031070330921879542 * var_x314);
        IJth(rJacobian, 40, 18) = var_x317 * (22.487152004710317 * var_x314 - 0.88519454545454557 * var_chaste_interface__Vmt__Vmt);
        IJth(rJacobian, 19, 19) = -0.001 * var_x255;
        IJth(rJacobian, 33, 19) = var_x317 * (0.00022551481724857874 * var_x314 - 8.8772685000664288e-6 * var_chaste_interface__Vmt__Vmt);
        IJth(rJacobian, 36, 19) = var_x317 * (0.00015736975977390487 * var_chaste_interface__Vmt__Vmt - 0.0039977626694066223 * var_x314);
        IJth(rJacobian, 40, 19) = var_x317 * (2.8933807319830431 * var_x314 - 0.11389636363636366 * var_chaste_interface__Vmt__Vmt);
        IJth(rJacobian, 0, 20) = mSetVoltageDerivativeToZero ? 0.0 : (var_x81 * var_chaste_interface__i_Ksts_ssts_gate__ssts);
        IJth(rJacobian, 20, 20) = -0.0098900000000000012 * var_x233 - 0.004516 * var_x232;
        IJth(rJacobian, 33, 20) = var_x318 * var_chaste_interface__i_Ksts_ssts_gate__ssts;
        IJth(rJacobian, 0, 21) = mSetVoltageDerivativeToZero ? 0.0 : (var_x81 * var_chaste_interface__i_Ksts_rsts_gate__rsts);
        IJth(rJacobian, 21, 21) = -0.00047619047619047619;
        IJth(rJacobian, 33, 21) = var_x318 * var_chaste_interface__i_Ksts_rsts_gate__rsts;
        IJth(rJacobian, 22, 22) = -0.0098900000000000012 * var_x244 - 0.004516 * var_x243;
        IJth(rJacobian, 33, 22) = var_x319 * var_chaste_interface__i_Kstt_sstt_gate__sstt;
        IJth(rJacobian, 36, 22) = var_x369 * var_chaste_interface__i_Kstt_sstt_gate__sstt;
        IJth(rJacobian, 40, 22) = var_x394 * var_chaste_interface__i_Kstt_sstt_gate__sstt;
        IJth(rJacobian, 23, 23) = -0.00047619047619047619;
        IJth(rJacobian, 33, 23) = var_x319 * var_chaste_interface__i_Kstt_rstt_gate__rstt;
        IJth(rJacobian, 36, 23) = var_x369 * var_chaste_interface__i_Kstt_rstt_gate__rstt;
        IJth(rJacobian, 40, 23) = var_x394 * var_chaste_interface__i_Kstt_rstt_gate__rstt;
        IJth(rJacobian, 0, 24) = mSetVoltageDerivativeToZero ? 0.0 : (0.073755933228204548 * var_x82 + 0.29502373291281819 * var_x24 - 0.014516811594202898 * var_chaste_interface__Vms__Vms);
        IJth(rJacobian, 24, 24) = -0.00056230000000000006 * var_x265 - 0.00011885 * var_x264;
        IJth(rJacobian, 33, 24) = 4.5074703447554268e-6 * var_x82 + 1.8029881379021707e-5 * var_x24 - 8.8717063017581157e-7 * var_chaste_interface__Vms__Vms;
        IJth(rJacobian, 25, 25) = -0.00056230000000000006 * var_x266 - 0.00011885 * var_x267;
        IJth(rJacobian, 33, 25) = 5.7367804387796348e-6 * var_x320 + 2.2947121755118539e-5 * var_x314 - 1.1291262565873969e-6 * var_chaste_interface__Vmt__Vmt;
        IJth(rJacobian, 36, 25) = 2.0016329094049303e-5 * var_chaste_interface__Vmt__Vmt - 0.00010169747141472988 * var_x320 - 0.00040678988565891953 * var_x314;
        IJth(rJacobian, 40, 25) = 0.073603544936410747 * var_x320 + 0.29441417974564299 * var_x314 - 0.014486818181818184 * var_chaste_interface__Vmt__Vmt;
        IJth(rJacobian, 26, 26) = -var_x270;
        IJth(rJacobian, 27, 26) = var_x270;
        IJth(rJacobian, 26, 27) = 0.57599999999999996;
        IJth(rJacobian, 27, 27) = -0.59399999999999997 - var_x273;
        IJth(rJacobian, 28, 27) = var_x273;
        IJth(rJacobian, 29, 27) = 0.017999999999999999;
        IJth(rJacobian, 31, 27) = var_x279;
        IJth(rJacobian, 37, 27) = var_x384;
        IJth(rJacobian, 27, 28) = 1.9299999999999999;
        IJth(rJacobian, 28, 28) = -1.9299999999999999;
        IJth(rJacobian, 31, 28) = var_x279;
        IJth(rJacobian, 37, 28) = var_x384;
        IJth(rJacobian, 27, 29) = 0.00080000000000000004;
        IJth(rJacobian, 29, 29) = -0.00080000000000000004;
        IJth(rJacobian, 1, 30) = var_x101 * (0.2735562310030395 * var_x104 + 2.651834266564234e-10 * var_x108);
        IJth(rJacobian, 30, 30) = -0.0032224800206238726 - 0.0050803300043421621 * var_x104 - 4.9248350664764347e-12 * var_x108;
        IJth(rJacobian, 31, 30) = 0.029002320185614851 * var_x277;
        IJth(rJacobian, 30, 31) = 0.0032224800206238726;
        IJth(rJacobian, 31, 31) = var_x278 * (-1.2930970783395158e-9 - var_x280 - var_x281) + 3738095.2380952374 * (1.2930970783395158e-9 * var_chaste_interface__CaSRup__CaSRup - 1.2930970783395158e-9 * var_chaste_interface__CaSRrel__CaSRrel - 8.0254777070063705e-8 * var_x282) / (pow(var_x275, 3) * pow((0.083333333333333329 + var_x276), 2));
        IJth(rJacobian, 37, 31) = var_x383 * (var_x385 + var_x386);
        IJth(rJacobian, 0, 32) = mSetVoltageDerivativeToZero ? 0.0 : (2.0669903511809441e-9 * var_x85 - 1.5563478260869561 * var_x86 - 0.034631423759269329 * var_x88 - 0.073755933228204548 * var_x83 - 0.020384613959450324 * var_x41 - 3577.111895407073 * var_x89);
        IJth(rJacobian, 1, 32) = var_x101 * (0.095113591072140277 * var_x86 - 1.2632065385189774e-10 * var_x85 + var_x126 * var_x128 - var_x127 * var_x129);
        IJth(rJacobian, 32, 32) = 3.7896196155569321e-13 * var_x85 - 2.8312989665528797e-6 * var_x41 - 0.00028534077321642082 * var_x86 - 1.1674841756133797e-5 * var_x302 - 6.34932440385169e-6 * var_x88 - 0.21860920312040039 * var_x89 - 0.0019782001513033221 * var_x292 + var_x127 * var_x293 - var_x128 * var_x294;
        IJth(rJacobian, 33, 32) = 4.2328829359011272e-6 * var_x88 + 7.7832278374225309e-6 * var_x302 - 4.5074703447554268e-6 * var_x83 - var_x321 * var_x41;
        IJth(rJacobian, 34, 32) = 0.03506809359128616 * var_x292 + 2.8107077013415861e-5 * var_x41 + 0.00020696310385873547 * var_x302 + var_x128 * var_x341 - var_x127 * var_x342;
        IJth(rJacobian, 35, 32) = var_x127 * var_x360 - var_x128 * var_x361;
        IJth(rJacobian, 36, 32) = -0.00013797540257249032 * var_x302 + var_x370 * var_x41;
        IJth(rJacobian, 40, 32) = -0.020342496988459729 * var_x41 - 25.380532736693361 * var_x292 - 0.049929848805919934 * var_x302 + var_x127 * var_x396 - var_x128 * var_x397 - var_x395 * var_x41;
        IJth(rJacobian, 0, 33) = mSetVoltageDerivativeToZero ? 0.0 : (1.614870144927536 * var_x94 - 25.433080423518806 * var_x91 - 429.25342744884875 * var_x89 - 0.035097650984455955 * var_x23 - 0.97108125253435462 * var_x92 - 0.29502373291281819 * var_x90 + var_x30 * var_x93);
        IJth(rJacobian, 32, 33) = -0.026233104374448046 * var_x89 - 0.00023738401815639866 * var_x292;
        IJth(rJacobian, 33, 33) = 0.00012560556219830832 * var_x334 + 9.8690084584385102e-5 * var_x94 - 4.8748503728546144e-6 * var_x23 - 0.0015543001188811814 * var_x91 - 5.9346004539099664e-5 * var_x92 - 1.8029881379021707e-5 * var_x90 + var_x313 * var_x93 + var_x331 * var_x93 - var_x23 * var_x322 - var_x23 * var_x324 - var_x23 * var_x330;
        IJth(rJacobian, 34, 33) = 0.0042081712309543391 * var_x292;
        IJth(rJacobian, 36, 33) = 4.8393969155974903e-5 * var_x23 - 0.0022266440571518291 * var_x334 + var_x23 * var_x371 + var_x23 * var_x372 + var_x23 * var_x373 + var_x374 * var_x93;
        IJth(rJacobian, 40, 33) = 1.6115336363636366 * var_x334 - 0.035025135176636836 * var_x23 - 3.045663928403203 * var_x292 + var_x401 * var_x93 - var_x23 * var_x398 - var_x23 * var_x399 - var_x23 * var_x400;
        IJth(rJacobian, 1, 34) = var_x101 * (-var_x126 * var_x131 - var_x129 * var_x130);
        IJth(rJacobian, 32, 34) = 0.0019782001513033221 * var_x304 + 1.9069508687567183e-8 * var_x306 + 1.5855274212696129e-6 * var_x303 + var_x130 * var_x293 + var_x131 * var_x294;
        IJth(rJacobian, 33, 34) = -1.2713005791711456e-8 * var_x306 + var_x303 * var_x321;
        IJth(rJacobian, 34, 34) = -0.0066666666666666671 - 0.03506809359128616 * var_x304 - 2.8107077013415861e-5 * var_x303 - 3.3805038127960006e-7 * var_x306 - var_x130 * var_x342 - var_x131 * var_x341;
        IJth(rJacobian, 35, 34) = var_x130 * var_x360 + var_x131 * var_x361;
        IJth(rJacobian, 36, 34) = 2.2536692085306669e-7 * var_x306 - var_x303 * var_x370;
        IJth(rJacobian, 40, 34) = 8.1554654483703519e-5 * var_x306 + 0.020342496988459729 * var_x303 + 25.380532736693361 * var_x304 + var_x130 * var_x396 + var_x131 * var_x397 + var_x303 * var_x395;
        IJth(rJacobian, 1, 35) = var_x101 * (0.00032046842451113823 * var_x132 + var_x115 * var_x133 - var_x124 * var_x34);
        IJth(rJacobian, 32, 35) = var_x285 * var_x34 - var_x133 * var_x284;
        IJth(rJacobian, 34, 35) = var_x133 * var_x339 - var_x338 * var_x34;
        IJth(rJacobian, 35, 35) = -0.002 - 0.0011667637092333111 * var_x362 - 5.6810311617883583e-6 * var_x132 + var_x34 * var_x344 - var_x133 * var_x343;
        IJth(rJacobian, 37, 35) = 0.51337603206265692 * var_x362 * var_x377;
        IJth(rJacobian, 40, 35) = 0.0082232926066886491 * var_x132 + 1.6888904691152178 * var_x362 + var_x34 * var_x390 - var_x133 * var_x389;
        IJth(rJacobian, 32, 36) = 0.0001093899000634752 * var_x309 + 0.00023738401815639866 * var_x304 - 0.00024612727514281918 * var_x308;
        IJth(rJacobian, 33, 36) = 0.00016408485009521278 * var_x308 + 2.7299162087985846e-6 * var_x335 - 7.2926600042316791e-5 * var_x309 - 7.7870776316372187e-5 * var_x336 + var_x322 * var_x335 + var_x324 * var_x335 + var_x330 * var_x335 - var_x331 * var_x337;
        IJth(rJacobian, 34, 36) = 0.004363165332077249 * var_x308 - 0.0019391845920343328 * var_x309 - 0.0042081712309543391 * var_x304;
        IJth(rJacobian, 36, 36) = -0.0066666666666666671 + 0.0013804364892447795 * var_x336 + 0.0012927897280228886 * var_x309 - 4.8393969155974903e-5 * var_x335 - 0.0029087768880514992 * var_x308 - var_x335 * var_x371 - var_x335 * var_x372 - var_x335 * var_x373 - var_x337 * var_x374;
        IJth(rJacobian, 40, 36) = 0.035025135176636836 * var_x335 + 3.045663928403203 * var_x304 + 0.46782828282828282 * var_x309 - 1.0526136363636363 * var_x308 - 0.99909090909090914 * var_x336 + var_x335 * var_x398 + var_x335 * var_x399 + var_x335 * var_x400 - var_x337 * var_x401;
        IJth(rJacobian, 0, 37) = mSetVoltageDerivativeToZero ? 0.0 : (-22753.623188405796 * var_x97);
        IJth(rJacobian, 1, 37) = 0.32000000000000001 * var_x100;
        IJth(rJacobian, 9, 37) = var_x199;
        IJth(rJacobian, 13, 37) = var_x199;
        IJth(rJacobian, 26, 37) = -var_x272;
        IJth(rJacobian, 27, 37) = var_x272 - 12150000.0 * var_x274;
        IJth(rJacobian, 28, 37) = 12150000.0 * var_x274;
        IJth(rJacobian, 31, 37) = var_x278 * (var_x280 + var_x281);
        IJth(rJacobian, 35, 37) = 0.0034215944552296509 * var_x363;
        IJth(rJacobian, 37, 37) = var_x383 * (-2496000.0 - var_x385 - var_x386 - 5423143.3506044904 * var_x97 - 1505.5015603010465 * var_x363) + 2.3800000000000004e-7 * (84000.000000000015 * var_x282 + 2496000.0 * var_chaste_interface__ion_concentrations__Cai - 2496000.0 * var_chaste_interface__ion_concentrations__Cass - 5423143.3506044904 * ((var_x12) ? (-var_x387 + 393644.57769891288 * (1.2701813471502589e-6 + var_chaste_interface__Vms__Vms) * (var_x387 + var_x64 * var_chaste_interface__i_Cas__Co)) : (var_x20 * var_chaste_interface__Vms__Vms)) - 1505.5015603010465 * var_x354 * var_x362) / (pow(var_x375, 3) * pow(var_x376, 2));
        IJth(rJacobian, 40, 37) = -4.9527579739449195 * var_x363;
        IJth(rJacobian, 1, 38) = var_x101 * (0.0098000000000000014 + var_x125);
        IJth(rJacobian, 38, 38) = -7.0000000000000007e-5 - 20.0 * var_chaste_interface__ion_concentrations__Cai;
        IJth(rJacobian, 1, 39) = var_x101 * (2.8000000000000003 + var_x125);
        IJth(rJacobian, 39, 39) = -0.040000000000000001 - 40.0 * var_chaste_interface__ion_concentrations__Cai;
        IJth(rJacobian, 0, 40) = mSetVoltageDerivativeToZero ? 0.0 : (1128.3408888881877);
        IJth(rJacobian, 1, 40) = var_x101 * (-2.523013152650459e-5 + var_x115 * var_x134);
        IJth(rJacobian, 4, 40) = var_x161 * var_x162 + 0.27359999999999995 * var_x157 * var_chaste_interface__i_Nat_m_gate__m - 0.064493000000000009 * var_x158 * var_x159 * var_x162 / pow(var_x160, 2);
        IJth(rJacobian, 5, 40) = -var_x168 * var_chaste_interface__i_Nat_h_gate__h - 0.023093279999999997 * var_x163 * (1.0 - var_chaste_interface__i_Nat_h_gate__h) / pow(var_x164, 2) + 0.0041294000000000001 * var_x165 * var_x166 * var_chaste_interface__i_Nat_h_gate__h / pow(var_x167, 2);
        IJth(rJacobian, 10, 40) = 107.49798441279225 * (-var_chaste_interface__i_Cat__Co + 1 / var_x207) * (-var_x201 * (0.072000000000000008 - 0.0040000000000000001 * var_chaste_interface__Vmt__Vmt) - var_x203 * (-0.063 - 0.0089999999999999993 * var_chaste_interface__Vmt__Vmt)) / pow((0.081967213114754092 + var_x202 + 0.34426229508196715 * var_x200), 2) + 0.00020000000000000001 * var_x204 * var_x206 / pow(var_x207, 2);
        IJth(rJacobian, 11, 40) = -var_x218 * var_x223 + 0.090702947845805001 * (var_x221 - var_chaste_interface__i_Cat__C1) * (var_x222 - var_x217 * (-0.625 - 0.013888888888888888 * var_chaste_interface__Vmt__Vmt) - 0.0016000000000000001 * var_x213 / pow(var_x214, 2)) / pow((var_x216 + 0.38095238095238099 * var_x215 + 0.14285714285714285 * var_x211), 2);
        IJth(rJacobian, 12, 40) = -var_x223 * var_x229 + 0.15625 * (var_x221 - var_chaste_interface__i_Cat__C2) * (var_x222 - var_x228 * (-0.65277777777777779 - 0.013888888888888888 * var_chaste_interface__Vmt__Vmt) - 0.016 * var_x224 / pow(var_x225, 2)) / pow((var_x226 + 0.51249999999999996 * var_x227 + 0.1875 * var_x211), 2);
        IJth(rJacobian, 17, 40) = (0.001 / var_x246 - 0.001 * var_chaste_interface__i_Ktot_rt_gate__rt) * (1.6153732000000001 * var_x243 - 9.8900000000000006 * var_x244) + 8.7565674255691772e-5 * var_x245 * (45.159999999999997 * var_x243 + 98.900000000000006 * var_x244) / pow(var_x246, 2);
        IJth(rJacobian, 18, 40) = -var_x249 * var_x252 - 0.0028571428571428571 * var_x248 * (-0.62097840000000015 - 0.0088711200000000014 * var_chaste_interface__Vmt__Vmt) * (var_x253 - var_chaste_interface__i_Ktot_st_gate__st) / pow((0.10000000000000002 + var_x248), 2);
        IJth(rJacobian, 19, 40) = -var_x252 * var_x255 - 0.00027027027027027027 * var_x254 * (-0.15524460000000004 - 0.0022177800000000004 * var_chaste_interface__Vmt__Vmt) * (var_x253 - var_chaste_interface__i_Ktot_sst_gate__sst) / pow((0.00945945945945946 + var_x254), 2);
        IJth(rJacobian, 22, 40) = (0.001 / var_x260 - 0.001 * var_chaste_interface__i_Kstt_rstt_gate__rstt) * (0.16153732000000001 * var_x243 - 0.9890000000000001 * var_x244) + 8.4602368866328257e-5 * var_x259 * (9.8900000000000006 * var_x244 + 4.516 * var_x243) / pow(var_x260, 2);
        IJth(rJacobian, 23, 40) = -4.6232085067036518e-5 * var_x261 / pow((1.0 + var_x261), 2);
        IJth(rJacobian, 25, 40) = (0.001 / var_x269 - 0.001 * var_chaste_interface__i_Kft_qt_gate__qt) * (0.0041892844554106447 * var_x267 - 0.039626497533474282 * var_x266) - 9.5419847328244274e-5 * var_x268 * (0.56230000000000002 * var_x266 + 0.11885 * var_x267) / pow(var_x269, 2);
        IJth(rJacobian, 32, 40) = -6.2413427217572302e-8 - 0.00024612727514281918 * var_x311 - 0.00033790354722997213 * var_x310 - var_x290 * var_chaste_interface__i_Nat_h_gate__h;
        IJth(rJacobian, 33, 40) = -1.0746167131659361e-7 + var_x331 + 0.00016408485009521278 * var_x311 + 4.9443948488187619e-6 * var_x333 - 7.7870776316372187e-5 * var_x329 - 1.1291262565873969e-6 * var_chaste_interface__i_Kft_qt_gate__qt - 7.3977237500553573e-6 * var_x323;
        IJth(rJacobian, 34, 40) = 1.1064198461296908e-6 + 0.004363165332077249 * var_x311 + 0.005990108337258597 * var_x310 + var_x340 * var_chaste_interface__i_Nat_h_gate__h;
        IJth(rJacobian, 35, 40) = 4.4726142251530855e-7 + 0.00026937842087716355 * var_x365 - 0.0019967027790861987 * var_x310 - 0.00026937842087716355 * var_x366 + var_x355 * var_x364;
        IJth(rJacobian, 36, 40) = 1.9050023551577956e-6 + var_x374 + 0.0013804364892447795 * var_x329 + 0.00013114146647825407 * var_x323 + 2.0016329094049303e-5 * var_chaste_interface__i_Kft_qt_gate__qt - 8.7650635956332588e-5 * var_x333 - 0.0029087768880514992 * var_x311;
        IJth(rJacobian, 37, 40) = var_x383 * (118.52650518595198 * var_x366 - 118.52650518595198 * var_x365 - 1505.5015603010465 * var_x388);
        IJth(rJacobian, 40, 40) = -884.72466026051075 + var_x401 + 0.38992526421969426 * var_x366 + 0.063437147773395708 * var_x333 - 0.38992526421969426 * var_x365 - 1.4451136363636365 * var_x310 - 1.0526136363636363 * var_x311 - 4.9527579739449195 * var_x388 - 0.094913636363636381 * var_x323 - 0.99909090909090914 * var_x329 - 0.014486818181818184 * var_chaste_interface__i_Kft_qt_gate__qt - var_x391 * var_chaste_interface__i_Nat_h_gate__h;
    }

    N_Vector Cellpasek_simurda_christe_2006FromCellMLCvodeOpt::ComputeDerivedQuantities(double var_chaste_interface__environment__time_converted, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        

        // Mathematics
        const double var_i_Stim__i_Stim_converted = -GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_model_parameters__Smtot = 0.0001; // cm2
        const double var_model_parameters__Vc = 0.00012738853503184712 * var_model_parameters__Smtot; // cm3
        const double var_model_parameters__Sms = -4400.0 * var_model_parameters__Vc + var_model_parameters__Smtot; // cm2
        const double var_model_parameters__Cms = var_model_parameters__Sms; // microF

        N_Vector dqs = N_VNew_Serial(3);
        NV_Ith_S(dqs, 0) = var_model_parameters__Cms;
        NV_Ith_S(dqs, 1) = var_i_Stim__i_Stim_converted;
        NV_Ith_S(dqs, 2) = var_chaste_interface__environment__time_converted;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellpasek_simurda_christe_2006FromCellMLCvodeOpt>::Initialise(void)
{
    this->mSystemName = "pasek_simurda_christe_2006";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // NV_Ith_S(rY, 0):
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-79.709547);

    // NV_Ith_S(rY, 1):
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(3.5486498e-05);

    // NV_Ith_S(rY, 2):
    this->mVariableNames.push_back("i_Nas_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.1832558e-06);

    // NV_Ith_S(rY, 3):
    this->mVariableNames.push_back("i_Nas_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.58232781);

    // NV_Ith_S(rY, 4):
    this->mVariableNames.push_back("i_Nat_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.1832694e-06);

    // NV_Ith_S(rY, 5):
    this->mVariableNames.push_back("i_Nat_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.58232717);

    // NV_Ith_S(rY, 6):
    this->mVariableNames.push_back("i_Cas__Co");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.5436465e-06);

    // NV_Ith_S(rY, 7):
    this->mVariableNames.push_back("i_Cas__C1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99994546);

    // NV_Ith_S(rY, 8):
    this->mVariableNames.push_back("i_Cas__C2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99994546);

    // NV_Ith_S(rY, 9):
    this->mVariableNames.push_back("i_Cas__Ccast");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99570063);

    // NV_Ith_S(rY, 10):
    this->mVariableNames.push_back("i_Cat__Co");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.543652e-06);

    // NV_Ith_S(rY, 11):
    this->mVariableNames.push_back("i_Cat__C1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99994546);

    // NV_Ith_S(rY, 12):
    this->mVariableNames.push_back("i_Cat__C2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99994546);

    // NV_Ith_S(rY, 13):
    this->mVariableNames.push_back("i_Cat__Ccast");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99570063);

    // NV_Ith_S(rY, 14):
    this->mVariableNames.push_back("i_Ktos_rs_gate__rs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0023485072);

    // NV_Ith_S(rY, 15):
    this->mVariableNames.push_back("i_Ktos_ss_gate__ss");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.98315843);

    // NV_Ith_S(rY, 16):
    this->mVariableNames.push_back("i_Ktos_sss_gate__sss");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.6748337);

    // NV_Ith_S(rY, 17):
    this->mVariableNames.push_back("i_Ktot_rt_gate__rt");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0023485094);

    // NV_Ith_S(rY, 18):
    this->mVariableNames.push_back("i_Ktot_st_gate__st");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.98315865);

    // NV_Ith_S(rY, 19):
    this->mVariableNames.push_back("i_Ktot_sst_gate__sst");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.67478532);

    // NV_Ith_S(rY, 20):
    this->mVariableNames.push_back("i_Ksts_rsts_gate__rsts");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0031079213);

    // NV_Ith_S(rY, 21):
    this->mVariableNames.push_back("i_Ksts_ssts_gate__ssts");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.30773393);

    // NV_Ith_S(rY, 22):
    this->mVariableNames.push_back("i_Kstt_rstt_gate__rstt");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0031079241);

    // NV_Ith_S(rY, 23):
    this->mVariableNames.push_back("i_Kstt_sstt_gate__sstt");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.30773368);

    // NV_Ith_S(rY, 24):
    this->mVariableNames.push_back("i_Kfs_qs_gate__qs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0034357356);

    // NV_Ith_S(rY, 25):
    this->mVariableNames.push_back("i_Kft_qt_gate__qt");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0034357175);

    // NV_Ith_S(rY, 26):
    this->mVariableNames.push_back("JCaSRrel__F1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.67606483);

    // NV_Ith_S(rY, 27):
    this->mVariableNames.push_back("JCaSRrel__F2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00038333331);

    // NV_Ith_S(rY, 28):
    this->mVariableNames.push_back("JCaSRrel__F3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(6.4516879e-11);

    // NV_Ith_S(rY, 29):
    this->mVariableNames.push_back("JCaSRrel__F4");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.32355462);

    // NV_Ith_S(rY, 30):
    this->mVariableNames.push_back("CaSRup__CaSRup");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.22755058);

    // NV_Ith_S(rY, 31):
    this->mVariableNames.push_back("CaSRrel__CaSRrel");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.22638169);

    // NV_Ith_S(rY, 32):
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(6.9435814);

    // NV_Ith_S(rY, 33):
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(137.53311);

    // NV_Ith_S(rY, 34):
    this->mVariableNames.push_back("extracellular_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(140.01386);

    // NV_Ith_S(rY, 35):
    this->mVariableNames.push_back("extracellular_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.2271399);

    // NV_Ith_S(rY, 36):
    this->mVariableNames.push_back("extracellular_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(5.3627676);

    // NV_Ith_S(rY, 37):
    this->mVariableNames.push_back("dyadic_space_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(4.3112114e-05);

    // NV_Ith_S(rY, 38):
    this->mVariableNames.push_back("ion_concentrations__BTRH");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.92804169);

    // NV_Ith_S(rY, 39):
    this->mVariableNames.push_back("ion_concentrations__BTRL");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.034317829);

    // NV_Ith_S(rY, 40):
    this->mVariableNames.push_back("Vmt__Vmt");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-79.709536);

    // mParameters[0]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_cm2");

    // mParameters[1]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_cm2");

    // mParameters[2]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("microA_per_cm2");

    // mParameters[3]:
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
    this->mParameterUnits.push_back("milliS_per_cm2");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("membrane_capacitance");
    this->mDerivedQuantityUnits.push_back("microF");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellpasek_simurda_christe_2006FromCellMLCvodeOpt)

#endif // CHASTE_CVODE
