#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: demir_model_1994
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: AnalyticCvodeOpt)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "demir_model_1994.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class Celldemir_model_1994FromCellMLCvodeOpt_LookupTables : public AbstractLookupTableCollection
{
public:
    static Celldemir_model_1994FromCellMLCvodeOpt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new Celldemir_model_1994FromCellMLCvodeOpt_LookupTables);
        }
        return mpInstance.get();
    }

    void FreeMemory()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }

    // Row lookup methods
    // using linear-interpolation

    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<24; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }


    const double * IndexTable0(double var_chaste_interface__membrane__V)
    {
        const double _offset_0 = var_chaste_interface__membrane__V - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = Celldemir_model_1994FromCellMLCvodeOpt_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }


// LCOV_EXCL_START
    bool CheckIndex0(double& var_chaste_interface__membrane__V)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__membrane__V>mTableMaxs[0] || var_chaste_interface__membrane__V<mTableMins[0])
        {
// LCOV_EXCL_START
            _oob_0 = true;
// LCOV_EXCL_STOP
        }
        return _oob_0;
    }
// LCOV_EXCL_STOP

    ~Celldemir_model_1994FromCellMLCvodeOpt_LookupTables()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

    }

protected:
    Celldemir_model_1994FromCellMLCvodeOpt_LookupTables(const Celldemir_model_1994FromCellMLCvodeOpt_LookupTables&);
    Celldemir_model_1994FromCellMLCvodeOpt_LookupTables& operator= (const Celldemir_model_1994FromCellMLCvodeOpt_LookupTables&);
    Celldemir_model_1994FromCellMLCvodeOpt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);

        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 24;
        mTableMins[0] = -250.0001;
        mTableMaxs[0] = 549.9999;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;

        Celldemir_model_1994FromCellMLCvodeOpt_LookupTables::RegenerateTables();
    }

    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);


        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][24];

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][0] = 0.095000000000000001 / (1.0 + exp(-2.3500000000000001 - 0.16666666666666666 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][1] = exp(0.018714999999999999 * var_chaste_interface__membrane__V);
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][2] = exp(-0.018714999999999999 * var_chaste_interface__membrane__V);
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][3] = 1 / (-1.0 + exp(0.037433890822745473 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][4] = 1 / (1.5 + exp(-1.5 - 0.025000000000000001 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][5] = 1 / (1.0 + exp(-2.3500000000000001 - 0.16666666666666666 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][6] = 11.43 * (-5.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(-2.0 + 0.40000000000000002 * var_chaste_interface__membrane__V)) - 28.390000000000001 * (35.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(-14.0 - 0.40000000000000002 * var_chaste_interface__membrane__V)) - 84.900000000000006 * var_chaste_interface__membrane__V / (-1.0 + exp(-0.20799999999999999 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][7] = 1 / (1.0 + exp(6.0 + 0.20000000000000001 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][8] = 30.0 / (1.0 + exp(-7.0 - 0.25 * var_chaste_interface__membrane__V)) + 3.75 * (28.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(7.0 + 0.25 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][9] = 240.0 * exp(-3.2000000000000002 + 0.080000000000000002 * var_chaste_interface__membrane__V);
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][10] = 1 / (1.0 + exp(-4.3833333333333337 - 0.16666666666666666 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][11] = 1068.0 * exp(0.87666666666666671 + 0.033333333333333333 * var_chaste_interface__membrane__V) + 1068.0 * exp(-0.87666666666666671 - 0.033333333333333333 * var_chaste_interface__membrane__V);
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][12] = 1 / (1.0 + exp(11.017857142857144 + 0.17857142857142858 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][13] = 15.0 * exp(4.0117035110533159 + 0.065019505851755519 * var_chaste_interface__membrane__V) + 15.300000000000001 * exp(-0.74069627851140463 - 0.012004801920768308 * var_chaste_interface__membrane__V);
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][14] = 1 / (1.0 + exp(-0.68918918918918914 - 0.13513513513513511 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][15] = 17.0 * exp(0.039800000000000002 * var_chaste_interface__membrane__V) + 2.1099999999999999 * exp(-0.050999999999999997 * var_chaste_interface__membrane__V);
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][16] = exp(-0.0183 * var_chaste_interface__membrane__V);
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][17] = exp(0.0094199999999999996 * var_chaste_interface__membrane__V);
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][18] = 1 / (1.0 + exp(8.0222222222222221 + 0.1111111111111111 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][19] = 1.6483000000000001 * exp(-2.2219482120838472 - 0.041101520756267988 * var_chaste_interface__membrane__V) + 14.01055 / (0.69999999999999996 + exp(-10.909090909090908 - 0.18181818181818182 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][20] = 165.0 * exp(-8.0396825396825395 - 0.079365079365079361 * var_chaste_interface__membrane__V);
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][21] = 12360.0 / (1.0 + 320.0 * exp(-8.0396825396825395 - 0.079365079365079361 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][22] = -824.0 * (51.899999999999999 + var_chaste_interface__membrane__V) / (-1.0 + exp(-5.8314606741573032 - 0.11235955056179775 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][23] = 32960.0 * exp(-5.8314606741573032 - 0.11235955056179775 * var_chaste_interface__membrane__V);
            }

            mNeedsRegeneration[0] = false;
        }

        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }

private:
    /** The single instance of the class */
    static std::shared_ptr<Celldemir_model_1994FromCellMLCvodeOpt_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[24];

    // Lookup tables
    double (*_lookup_table_0)[24];

};

std::shared_ptr<Celldemir_model_1994FromCellMLCvodeOpt_LookupTables> Celldemir_model_1994FromCellMLCvodeOpt_LookupTables::mpInstance;


    double Celldemir_model_1994FromCellMLCvodeOpt::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Celldemir_model_1994FromCellMLCvodeOpt::Celldemir_model_1994FromCellMLCvodeOpt(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                27,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Celldemir_model_1994FromCellMLCvodeOpt>::Instance();
        Init();
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
        
        NV_Ith_S(this->mParameters, 0) = 5.5000000000000002e-5; // (var_membrane__Cm) [microF]
    }

    Celldemir_model_1994FromCellMLCvodeOpt::~Celldemir_model_1994FromCellMLCvodeOpt()
    {
    }

    AbstractLookupTableCollection* Celldemir_model_1994FromCellMLCvodeOpt::GetLookupTableCollection()
    {
        return Celldemir_model_1994FromCellMLCvodeOpt_LookupTables::Instance();
    }
    
    double Celldemir_model_1994FromCellMLCvodeOpt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -49.54105
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0003787018
        double var_chaste_interface__sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.250113
        double var_chaste_interface__sodium_current_h_gate__h1 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.001386897
        double var_chaste_interface__sodium_current_h_gate__h2 = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.002065463
        double var_chaste_interface__L_type_Ca_channel_d_gate__d_L = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.002572773
        double var_chaste_interface__L_type_Ca_channel_f_gate__f_L = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.98651
        double var_chaste_interface__T_type_Ca_channel_d_gate__d_T = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.02012114
        double var_chaste_interface__T_type_Ca_channel_f_gate__f_T = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.1945111
        double var_chaste_interface__delayed_rectifying_potassium_current_P_a_gate__P_a = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.02302278
        double var_chaste_interface__delayed_rectifying_potassium_current_P_i_gate__P_i = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.3777728
        double var_chaste_interface__hyperpolarisation_activated_current_y_gate__y = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.09227776
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i = NV_Ith_S(rY, 12);
        // Units: millimolar; Initial value: 9.701621
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__K_i = NV_Ith_S(rY, 13);
        // Units: millimolar; Initial value: 140.7347
        double var_chaste_interface__cleft_space_equations__Na_c = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 139.9988
        double var_chaste_interface__cleft_space_equations__Ca_c = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 2.00474
        double var_chaste_interface__cleft_space_equations__K_c = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 5.389014
        
        // Lookup table indexing
        const bool _oob_0 = Celldemir_model_1994FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Celldemir_model_1994FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        const double var_calcium_pump_current__i_Ca_P = 0.02869 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i / (0.00040000000000000002 + var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L = 0.021149999999999999 * (-46.399999999999999 + var_chaste_interface__membrane__V) * (_lt_0_row[0] + var_chaste_interface__L_type_Ca_channel_d_gate__d_L * var_chaste_interface__L_type_Ca_channel_f_gate__f_L); // nanoA
        const double var_T_type_Ca_channel__i_Ca_T = 0.02521 * (-45.0 + var_chaste_interface__membrane__V) * var_chaste_interface__T_type_Ca_channel_d_gate__d_T * var_chaste_interface__T_type_Ca_channel_f_gate__f_T; // nanoA
        const double var_hyperpolarisation_activated_current__i_f = 0.0128821 * pow(var_chaste_interface__hyperpolarisation_activated_current_y_gate__y, 2) * (85.0 + var_chaste_interface__membrane__V) + 0.0067478 * pow(var_chaste_interface__hyperpolarisation_activated_current_y_gate__y, 2) * (-75.0 + var_chaste_interface__membrane__V); // nanoA
        const double var_reversal_potentials__E_K = 26.713760659695652 * log(var_chaste_interface__cleft_space_equations__K_c / var_chaste_interface__intracellular_concentrations_and_buffer_equations__K_i); // millivolt
        const double var_delayed_rectifying_potassium_current__i_K = 0.018743278268729353 * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * var_chaste_interface__delayed_rectifying_potassium_current_P_a_gate__P_a * var_chaste_interface__delayed_rectifying_potassium_current_P_i_gate__P_i; // nanoA
        const double var_reversal_potentials__E_Na = 26.713760659695652 * log(var_chaste_interface__cleft_space_equations__Na_c / var_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i); // millivolt
        const double var_linear_background_current__i_B = 0.00026580000000000001 * var_chaste_interface__membrane__V - 6.9400000000000006e-5 * var_reversal_potentials__E_K - 0.00016000000000000001 * var_reversal_potentials__E_Na - 0.00048619044400646078 * log(var_chaste_interface__cleft_space_equations__Ca_c / var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i); // nanoA
        const double var_sodium_calcium_pump__i_NaCa = 1.2480000000000001e-5 * (pow(var_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i, 3) * var_chaste_interface__cleft_space_equations__Ca_c * _lt_0_row[1] - pow(var_chaste_interface__cleft_space_equations__Na_c, 3) * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i * _lt_0_row[2]) / (1.0 + 0.0001 * pow(var_chaste_interface__cleft_space_equations__Na_c, 3) * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i + 0.0001 * pow(var_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i, 3) * var_chaste_interface__cleft_space_equations__Ca_c); // nanoA
        const double var_sodium_current__i_Na = 12.424666784589714 * _lt_0_row[3] * pow(var_chaste_interface__sodium_current_m_gate__m, 3) * (-1.0 + exp(0.037433890822745473 * var_chaste_interface__membrane__V - 0.037433890822745473 * var_reversal_potentials__E_Na)) * var_chaste_interface__cleft_space_equations__Na_c * var_chaste_interface__membrane__V * var_chaste_interface__sodium_current_h_gate__h1 * var_chaste_interface__sodium_current_h_gate__h2; // nanoA
        const double var_sodium_potassium_pump__i_NaK = 0.0021546791260593943 * _lt_0_row[4] * pow(var_chaste_interface__cleft_space_equations__K_c, 2) * pow(var_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i, 3) / (pow((1 + 0.18315018315018314 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i), 3) * pow((0.621 + var_chaste_interface__cleft_space_equations__K_c), 2)); // nanoA
        const double var_chaste_interface__i_ionic = 0.001 * (var_L_type_Ca_channel__i_Ca_L + var_T_type_Ca_channel__i_Ca_T + var_calcium_pump_current__i_Ca_P + var_delayed_rectifying_potassium_current__i_K + var_hyperpolarisation_activated_current__i_f + var_linear_background_current__i_B + var_sodium_calcium_pump__i_NaCa + var_sodium_current__i_Na + var_sodium_potassium_pump__i_NaK) * HeartConfig::Instance()->GetCapacitance() / NV_Ith_S(mParameters, 0); // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Celldemir_model_1994FromCellMLCvodeOpt::EvaluateYDerivatives(double var_chaste_interface__environment__time_converted, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -49.54105
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0003787018
        double var_chaste_interface__sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.250113
        double var_chaste_interface__sodium_current_h_gate__h1 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.001386897
        double var_chaste_interface__sodium_current_h_gate__h2 = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.002065463
        double var_chaste_interface__L_type_Ca_channel_d_gate__d_L = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.002572773
        double var_chaste_interface__L_type_Ca_channel_f_gate__f_L = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.98651
        double var_chaste_interface__T_type_Ca_channel_d_gate__d_T = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.02012114
        double var_chaste_interface__T_type_Ca_channel_f_gate__f_T = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.1945111
        double var_chaste_interface__delayed_rectifying_potassium_current_P_a_gate__P_a = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.02302278
        double var_chaste_interface__delayed_rectifying_potassium_current_P_i_gate__P_i = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.3777728
        double var_chaste_interface__hyperpolarisation_activated_current_y_gate__y = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.09227776
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i = NV_Ith_S(rY, 12);
        // Units: millimolar; Initial value: 9.701621
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__K_i = NV_Ith_S(rY, 13);
        // Units: millimolar; Initial value: 140.7347
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Calmod = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.1411678
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Trop = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.07331396
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Mg_Trop = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.7618549
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__Mg_Mg_Trop = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 0.2097049
        double var_chaste_interface__cleft_space_equations__Na_c = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 139.9988
        double var_chaste_interface__cleft_space_equations__Ca_c = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 2.00474
        double var_chaste_interface__cleft_space_equations__K_c = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 5.389014
        double var_chaste_interface__SR_Ca_uptake_and_release__Ca_up = NV_Ith_S(rY, 21);
        // Units: millimolar; Initial value: 16.95311
        double var_chaste_interface__SR_Ca_uptake_and_release__Ca_rel = NV_Ith_S(rY, 22);
        // Units: millimolar; Initial value: 16.85024
        double var_chaste_interface__SR_Ca_uptake_and_release__Ca_Calse = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 0.9528726
        double var_chaste_interface__SR_Ca_uptake_and_release__F1 = NV_Ith_S(rY, 24);
        // Units: dimensionless; Initial value: 0.1133251
        double var_chaste_interface__SR_Ca_uptake_and_release__F2 = NV_Ith_S(rY, 25);
        // Units: dimensionless; Initial value: 0.0007594214
        double var_chaste_interface__SR_Ca_uptake_and_release__F3 = NV_Ith_S(rY, 26);
        // Units: dimensionless; Initial value: 0.8859153

        // Lookup table indexing
        const bool _oob_0 = Celldemir_model_1994FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Celldemir_model_1994FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        double d_dt_chaste_interface_var_membrane__V;
        const double var_SR_Ca_uptake_and_release__i_rel = 0.5 * pow(var_chaste_interface__SR_Ca_uptake_and_release__F2, 2) * var_chaste_interface__SR_Ca_uptake_and_release__Ca_rel / pow((0.25 + var_chaste_interface__SR_Ca_uptake_and_release__F2), 2); // nanoA
        const double var_SR_Ca_uptake_and_release__phi_Calse = -641.0 * var_chaste_interface__SR_Ca_uptake_and_release__Ca_Calse + 770.0 * (1.0 - var_chaste_interface__SR_Ca_uptake_and_release__Ca_Calse) * var_chaste_interface__SR_Ca_uptake_and_release__Ca_rel; // per_second
        const double d_dt_chaste_interface_var_SR_Ca_uptake_and_release__Ca_Calse = 0.001 * var_SR_Ca_uptake_and_release__phi_Calse; // 1 / millisecond
        const double var_SR_Ca_uptake_and_release__i_up = (0.080000000000000002 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i - 1.4727272727272728e-7 * var_chaste_interface__SR_Ca_uptake_and_release__Ca_up) / (9.5000000000000005e-5 + 2.0454545454545457e-6 * var_chaste_interface__SR_Ca_uptake_and_release__Ca_up + var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i); // nanoA
        const double var_SR_Ca_uptake_and_release__r_inact = 40.0 + 240.0 * pow(var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i, 4) / pow((0.0040000000000000001 + var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i), 4); // per_second
        const double d_dt_chaste_interface_var_SR_Ca_uptake_and_release__F3 = -0.00095999999999999992 * var_chaste_interface__SR_Ca_uptake_and_release__F3 + 0.001 * var_chaste_interface__SR_Ca_uptake_and_release__F2 * var_SR_Ca_uptake_and_release__r_inact; // 1 / millisecond
        const double var_calcium_pump_current__i_Ca_P = 0.02869 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i / (0.00040000000000000002 + var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i); // nanoA
        const double var_intracellular_concentrations_and_buffer_equations__phi_C = -307.0 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Calmod + 129000.0 * (1.0 - var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Calmod) * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i; // per_second
        const double d_dt_chaste_interface_var_intracellular_concentrations_and_buffer_equations__Ca_Calmod = 0.001 * var_intracellular_concentrations_and_buffer_equations__phi_C; // 1 / millisecond
        const double var_intracellular_concentrations_and_buffer_equations__phi_TC = -252.0 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Trop + 50500.0 * (1.0 - var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Trop) * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i; // per_second
        const double d_dt_chaste_interface_var_intracellular_concentrations_and_buffer_equations__Ca_Trop = 0.001 * var_intracellular_concentrations_and_buffer_equations__phi_TC; // 1 / millisecond
        const double var_intracellular_concentrations_and_buffer_equations__phi_TMgC = -4.25 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Mg_Trop + 129000.0 * (1.0 - var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Mg_Trop - var_chaste_interface__intracellular_concentrations_and_buffer_equations__Mg_Mg_Trop) * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i; // per_second
        const double d_dt_chaste_interface_var_intracellular_concentrations_and_buffer_equations__Ca_Mg_Trop = 0.001 * var_intracellular_concentrations_and_buffer_equations__phi_TMgC; // 1 / millisecond
        const double d_dt_chaste_interface_var_intracellular_concentrations_and_buffer_equations__Mg_Mg_Trop = 3.2250000000000001 - 3.2250000000000001 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Mg_Trop - 3.6539999999999999 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Mg_Mg_Trop; // 1 / millisecond
        const double var_SR_Ca_uptake_and_release__i_tr = 0.05700838747761728 * var_chaste_interface__SR_Ca_uptake_and_release__Ca_up - 0.05700838747761728 * var_chaste_interface__SR_Ca_uptake_and_release__Ca_rel; // nanoA
        const double d_dt_chaste_interface_var_SR_Ca_uptake_and_release__Ca_rel = 2.4589804690256458 * var_SR_Ca_uptake_and_release__i_tr - 0.011480000000000001 * var_SR_Ca_uptake_and_release__phi_Calse - 2.4589804690256458 * var_SR_Ca_uptake_and_release__i_rel; // millimolar / millisecond
        const double d_dt_chaste_interface_var_SR_Ca_uptake_and_release__Ca_up = 0.27331378111983162 * var_SR_Ca_uptake_and_release__i_up - 0.27331378111983162 * var_SR_Ca_uptake_and_release__i_tr; // millimolar / millisecond
        const double var_L_type_Ca_channel_d_gate__d_L_infinity = _lt_0_row[5]; // dimensionless
        const double var_L_type_Ca_channel__i_Ca_L = 0.021149999999999999 * (-46.399999999999999 + var_chaste_interface__membrane__V) * (0.095000000000000001 * var_L_type_Ca_channel_d_gate__d_L_infinity + var_chaste_interface__L_type_Ca_channel_d_gate__d_L * var_chaste_interface__L_type_Ca_channel_f_gate__f_L); // nanoA
        const double d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d_L = 0.001 * (-var_chaste_interface__L_type_Ca_channel_d_gate__d_L + var_L_type_Ca_channel_d_gate__d_L_infinity) * (_lt_0_row[6]); // 1 / millisecond
        const double d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f_L = 0.001 * (-var_chaste_interface__L_type_Ca_channel_f_gate__f_L + _lt_0_row[7]) * (_lt_0_row[8]); // 1 / millisecond
        const double var_SR_Ca_uptake_and_release__r_act = _lt_0_row[9] + 240.0 * pow(var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i, 4) / pow((0.0040000000000000001 + var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i), 4); // per_second
        const double d_dt_chaste_interface_var_SR_Ca_uptake_and_release__F1 = 0.00095999999999999992 * var_chaste_interface__SR_Ca_uptake_and_release__F3 - 0.001 * var_chaste_interface__SR_Ca_uptake_and_release__F1 * var_SR_Ca_uptake_and_release__r_act; // 1 / millisecond
        const double d_dt_chaste_interface_var_SR_Ca_uptake_and_release__F2 = 0.001 * var_chaste_interface__SR_Ca_uptake_and_release__F1 * var_SR_Ca_uptake_and_release__r_act - 0.001 * var_chaste_interface__SR_Ca_uptake_and_release__F2 * var_SR_Ca_uptake_and_release__r_inact; // 1 / millisecond
        const double var_T_type_Ca_channel__i_Ca_T = 0.02521 * (-45.0 + var_chaste_interface__membrane__V) * var_chaste_interface__T_type_Ca_channel_d_gate__d_T * var_chaste_interface__T_type_Ca_channel_f_gate__f_T; // nanoA
        const double d_dt_chaste_interface_var_T_type_Ca_channel_d_gate__d_T = 0.001 * (-var_chaste_interface__T_type_Ca_channel_d_gate__d_T + _lt_0_row[10]) * (_lt_0_row[11]); // 1 / millisecond
        const double d_dt_chaste_interface_var_T_type_Ca_channel_f_gate__f_T = 0.001 * (-var_chaste_interface__T_type_Ca_channel_f_gate__f_T + _lt_0_row[12]) * (_lt_0_row[13]); // 1 / millisecond
        const double d_dt_chaste_interface_var_delayed_rectifying_potassium_current_P_a_gate__P_a = 0.001 * (-var_chaste_interface__delayed_rectifying_potassium_current_P_a_gate__P_a + _lt_0_row[14]) * (_lt_0_row[15]); // 1 / millisecond
        const double d_dt_chaste_interface_var_delayed_rectifying_potassium_current_P_i_gate__P_i = 0.10000000000000001 * (1.0 - var_chaste_interface__delayed_rectifying_potassium_current_P_i_gate__P_i) * _lt_0_row[16] - 0.65600000000000003 * var_chaste_interface__delayed_rectifying_potassium_current_P_i_gate__P_i * _lt_0_row[17]; // 1 / millisecond
        const double var_hyperpolarisation_activated_current__i_f_K = 0.0128821 * pow(var_chaste_interface__hyperpolarisation_activated_current_y_gate__y, 2) * (85.0 + var_chaste_interface__membrane__V); // nanoA
        const double var_hyperpolarisation_activated_current__i_f_Na = 0.0067478 * pow(var_chaste_interface__hyperpolarisation_activated_current_y_gate__y, 2) * (-75.0 + var_chaste_interface__membrane__V); // nanoA
        const double d_dt_chaste_interface_var_hyperpolarisation_activated_current_y_gate__y = 0.001 * (-var_chaste_interface__hyperpolarisation_activated_current_y_gate__y + _lt_0_row[18]) * (_lt_0_row[19]); // 1 / millisecond
        const double var_linear_background_current__i_B_Ca = 3.6399999999999997e-5 * var_chaste_interface__membrane__V - 0.00048619044400646078 * log(var_chaste_interface__cleft_space_equations__Ca_c / var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i); // nanoA
        const double var_reversal_potentials__E_K = 26.713760659695652 * log(var_chaste_interface__cleft_space_equations__K_c / var_chaste_interface__intracellular_concentrations_and_buffer_equations__K_i); // millivolt
        const double var_delayed_rectifying_potassium_current__i_K = 0.018743278268729353 * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * var_chaste_interface__delayed_rectifying_potassium_current_P_a_gate__P_a * var_chaste_interface__delayed_rectifying_potassium_current_P_i_gate__P_i; // nanoA
        const double var_linear_background_current__i_B_K = 6.9400000000000006e-5 * var_chaste_interface__membrane__V - 6.9400000000000006e-5 * var_reversal_potentials__E_K; // nanoA
        const double var_reversal_potentials__E_Na = 26.713760659695652 * log(var_chaste_interface__cleft_space_equations__Na_c / var_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i); // millivolt
        const double var_linear_background_current__i_B_Na = 0.00016000000000000001 * var_chaste_interface__membrane__V - 0.00016000000000000001 * var_reversal_potentials__E_Na; // nanoA
        const double var_sodium_calcium_pump__i_NaCa = 1.2480000000000001e-5 * (pow(var_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i, 3) * var_chaste_interface__cleft_space_equations__Ca_c * _lt_0_row[1] - pow(var_chaste_interface__cleft_space_equations__Na_c, 3) * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i * _lt_0_row[2]) / (1.0 + 0.0001 * pow(var_chaste_interface__cleft_space_equations__Na_c, 3) * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i + 0.0001 * pow(var_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i, 3) * var_chaste_interface__cleft_space_equations__Ca_c); // nanoA
        const double d_dt_chaste_interface_var_cleft_space_equations__Ca_c = 0.19999999999999998 + 0.010896176395982464 * var_L_type_Ca_channel__i_Ca_L + 0.010896176395982464 * var_T_type_Ca_channel__i_Ca_T + 0.010896176395982464 * var_calcium_pump_current__i_Ca_P + 0.010896176395982464 * var_linear_background_current__i_B_Ca - 0.021792352791964929 * var_sodium_calcium_pump__i_NaCa - 0.099999999999999992 * var_chaste_interface__cleft_space_equations__Ca_c; // millimolar / millisecond
        const double d_dt_chaste_interface_var_intracellular_concentrations_and_buffer_equations__Ca_i = 0.0031868386878572369 * var_SR_Ca_uptake_and_release__i_rel + 0.0063736773757144738 * var_sodium_calcium_pump__i_NaCa - 3.1000000000000001e-5 * var_intracellular_concentrations_and_buffer_equations__phi_TC - 6.2000000000000003e-5 * var_intracellular_concentrations_and_buffer_equations__phi_TMgC - 8.9999999999999992e-5 * var_intracellular_concentrations_and_buffer_equations__phi_C - 0.0031868386878572369 * var_L_type_Ca_channel__i_Ca_L - 0.0031868386878572369 * var_SR_Ca_uptake_and_release__i_up - 0.0031868386878572369 * var_T_type_Ca_channel__i_Ca_T - 0.0031868386878572369 * var_calcium_pump_current__i_Ca_P - 0.0031868386878572369 * var_linear_background_current__i_B_Ca; // millimolar / millisecond
        const double var_sodium_current_h_gate__alpha_h1 = _lt_0_row[20]; // per_second
        const double var_sodium_current_h_gate__beta_h1 = _lt_0_row[21]; // per_second
        const double var_sodium_current_h_gate__h1_infinity = var_sodium_current_h_gate__alpha_h1 / (var_sodium_current_h_gate__alpha_h1 + var_sodium_current_h_gate__beta_h1); // dimensionless
        const double var_sodium_current_h_gate__tau_h1 = 1 / (var_sodium_current_h_gate__alpha_h1 + var_sodium_current_h_gate__beta_h1); // second
        const double d_dt_chaste_interface_var_sodium_current_h_gate__h1 = 0.001 * (-var_chaste_interface__sodium_current_h_gate__h1 + var_sodium_current_h_gate__h1_infinity) / var_sodium_current_h_gate__tau_h1; // 1 / millisecond
        const double d_dt_chaste_interface_var_sodium_current_h_gate__h2 = 5.0000000000000002e-5 * (-var_chaste_interface__sodium_current_h_gate__h2 + var_sodium_current_h_gate__h1_infinity) / var_sodium_current_h_gate__tau_h1; // 1 / millisecond
        const double var_sodium_current_m_gate__alpha_m = _lt_0_row[22]; // per_second
        const double var_sodium_current_m_gate__beta_m = _lt_0_row[23]; // per_second
        const double var_sodium_current__i_Na = 12.424666784589714 * _lt_0_row[3] * pow(var_chaste_interface__sodium_current_m_gate__m, 3) * (-1.0 + exp(0.037433890822745473 * var_chaste_interface__membrane__V - 0.037433890822745473 * var_reversal_potentials__E_Na)) * var_chaste_interface__cleft_space_equations__Na_c * var_chaste_interface__membrane__V * var_chaste_interface__sodium_current_h_gate__h1 * var_chaste_interface__sodium_current_h_gate__h2; // nanoA
        const double d_dt_chaste_interface_var_sodium_current_m_gate__m = 0.001 * (-var_chaste_interface__sodium_current_m_gate__m + var_sodium_current_m_gate__alpha_m / (var_sodium_current_m_gate__alpha_m + var_sodium_current_m_gate__beta_m)) / (1.5e-5 + 1 / (var_sodium_current_m_gate__alpha_m + var_sodium_current_m_gate__beta_m)); // 1 / millisecond
        const double var_sodium_potassium_pump__i_NaK = 0.0021546791260593943 * _lt_0_row[4] * pow(var_chaste_interface__cleft_space_equations__K_c, 2) * pow(var_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i, 3) / (pow((1 + 0.18315018315018314 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i), 3) * pow((0.621 + var_chaste_interface__cleft_space_equations__K_c), 2)); // nanoA
        const double d_dt_chaste_interface_var_cleft_space_equations__K_c = 0.54000000000000004 + 0.021792352791964929 * var_delayed_rectifying_potassium_current__i_K + 0.021792352791964929 * var_hyperpolarisation_activated_current__i_f_K + 0.021792352791964929 * var_linear_background_current__i_B_K - 0.043584705583929857 * var_sodium_potassium_pump__i_NaK - 0.099999999999999992 * var_chaste_interface__cleft_space_equations__K_c; // millimolar / millisecond
        const double d_dt_chaste_interface_var_cleft_space_equations__Na_c = 14.0 + 0.021792352791964929 * var_hyperpolarisation_activated_current__i_f_Na + 0.021792352791964929 * var_linear_background_current__i_B_Na + 0.021792352791964929 * var_sodium_current__i_Na + 0.065377058375894789 * var_sodium_calcium_pump__i_NaCa + 0.065377058375894789 * var_sodium_potassium_pump__i_NaK - 0.099999999999999992 * var_chaste_interface__cleft_space_equations__Na_c; // millimolar / millisecond
        const double d_dt_chaste_interface_var_intracellular_concentrations_and_buffer_equations__K_i = 0.012747354751428948 * var_sodium_potassium_pump__i_NaK - 0.0063736773757144738 * var_delayed_rectifying_potassium_current__i_K - 0.0063736773757144738 * var_hyperpolarisation_activated_current__i_f_K - 0.0063736773757144738 * var_linear_background_current__i_B_K; // millimolar / millisecond
        const double d_dt_chaste_interface_var_intracellular_concentrations_and_buffer_equations__Na_i = -0.019121032127143424 * var_sodium_calcium_pump__i_NaCa - 0.019121032127143424 * var_sodium_potassium_pump__i_NaK - 0.0063736773757144738 * var_hyperpolarisation_activated_current__i_f_Na - 0.0063736773757144738 * var_linear_background_current__i_B_Na - 0.0063736773757144738 * var_sodium_current__i_Na; // millimolar / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_membrane__V = 0.0;
        }
        else
        {
            d_dt_chaste_interface_var_membrane__V = 0.001 * (-var_L_type_Ca_channel__i_Ca_L - var_T_type_Ca_channel__i_Ca_T - var_calcium_pump_current__i_Ca_P - var_delayed_rectifying_potassium_current__i_K - var_hyperpolarisation_activated_current__i_f_K - var_hyperpolarisation_activated_current__i_f_Na - var_linear_background_current__i_B_Ca - var_linear_background_current__i_B_K - var_linear_background_current__i_B_Na - var_sodium_calcium_pump__i_NaCa - var_sodium_current__i_Na - var_sodium_potassium_pump__i_NaK) / NV_Ith_S(mParameters, 0); // millivolt / millisecond
        }
        
        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_membrane__V;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_intracellular_concentrations_and_buffer_equations__Ca_i;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_sodium_current_m_gate__m;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_sodium_current_h_gate__h1;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_sodium_current_h_gate__h2;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d_L;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f_L;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_T_type_Ca_channel_d_gate__d_T;
        NV_Ith_S(rDY,8) = d_dt_chaste_interface_var_T_type_Ca_channel_f_gate__f_T;
        NV_Ith_S(rDY,9) = d_dt_chaste_interface_var_delayed_rectifying_potassium_current_P_a_gate__P_a;
        NV_Ith_S(rDY,10) = d_dt_chaste_interface_var_delayed_rectifying_potassium_current_P_i_gate__P_i;
        NV_Ith_S(rDY,11) = d_dt_chaste_interface_var_hyperpolarisation_activated_current_y_gate__y;
        NV_Ith_S(rDY,12) = d_dt_chaste_interface_var_intracellular_concentrations_and_buffer_equations__Na_i;
        NV_Ith_S(rDY,13) = d_dt_chaste_interface_var_intracellular_concentrations_and_buffer_equations__K_i;
        NV_Ith_S(rDY,14) = d_dt_chaste_interface_var_intracellular_concentrations_and_buffer_equations__Ca_Calmod;
        NV_Ith_S(rDY,15) = d_dt_chaste_interface_var_intracellular_concentrations_and_buffer_equations__Ca_Trop;
        NV_Ith_S(rDY,16) = d_dt_chaste_interface_var_intracellular_concentrations_and_buffer_equations__Ca_Mg_Trop;
        NV_Ith_S(rDY,17) = d_dt_chaste_interface_var_intracellular_concentrations_and_buffer_equations__Mg_Mg_Trop;
        NV_Ith_S(rDY,18) = d_dt_chaste_interface_var_cleft_space_equations__Na_c;
        NV_Ith_S(rDY,19) = d_dt_chaste_interface_var_cleft_space_equations__Ca_c;
        NV_Ith_S(rDY,20) = d_dt_chaste_interface_var_cleft_space_equations__K_c;
        NV_Ith_S(rDY,21) = d_dt_chaste_interface_var_SR_Ca_uptake_and_release__Ca_up;
        NV_Ith_S(rDY,22) = d_dt_chaste_interface_var_SR_Ca_uptake_and_release__Ca_rel;
        NV_Ith_S(rDY,23) = d_dt_chaste_interface_var_SR_Ca_uptake_and_release__Ca_Calse;
        NV_Ith_S(rDY,24) = d_dt_chaste_interface_var_SR_Ca_uptake_and_release__F1;
        NV_Ith_S(rDY,25) = d_dt_chaste_interface_var_SR_Ca_uptake_and_release__F2;
        NV_Ith_S(rDY,26) = d_dt_chaste_interface_var_SR_Ca_uptake_and_release__F3;
    }

    void Celldemir_model_1994FromCellMLCvodeOpt::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time_converted, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -49.54105
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0003787018
        double var_chaste_interface__sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.250113
        double var_chaste_interface__sodium_current_h_gate__h1 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.001386897
        double var_chaste_interface__sodium_current_h_gate__h2 = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.002065463
        double var_chaste_interface__L_type_Ca_channel_d_gate__d_L = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.002572773
        double var_chaste_interface__L_type_Ca_channel_f_gate__f_L = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.98651
        double var_chaste_interface__T_type_Ca_channel_d_gate__d_T = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.02012114
        double var_chaste_interface__T_type_Ca_channel_f_gate__f_T = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.1945111
        double var_chaste_interface__delayed_rectifying_potassium_current_P_a_gate__P_a = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.02302278
        double var_chaste_interface__delayed_rectifying_potassium_current_P_i_gate__P_i = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.3777728
        double var_chaste_interface__hyperpolarisation_activated_current_y_gate__y = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.09227776
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i = NV_Ith_S(rY, 12);
        // Units: millimolar; Initial value: 9.701621
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__K_i = NV_Ith_S(rY, 13);
        // Units: millimolar; Initial value: 140.7347
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Calmod = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.1411678
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Trop = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.07331396
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Mg_Trop = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.7618549
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__Mg_Mg_Trop = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 0.2097049
        double var_chaste_interface__cleft_space_equations__Na_c = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 139.9988
        double var_chaste_interface__cleft_space_equations__Ca_c = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 2.00474
        double var_chaste_interface__cleft_space_equations__K_c = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 5.389014
        double var_chaste_interface__SR_Ca_uptake_and_release__Ca_up = NV_Ith_S(rY, 21);
        // Units: millimolar; Initial value: 16.95311
        double var_chaste_interface__SR_Ca_uptake_and_release__Ca_rel = NV_Ith_S(rY, 22);
        // Units: millimolar; Initial value: 16.85024
        double var_chaste_interface__SR_Ca_uptake_and_release__Ca_Calse = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 0.9528726
        double var_chaste_interface__SR_Ca_uptake_and_release__F1 = NV_Ith_S(rY, 24);
        // Units: dimensionless; Initial value: 0.1133251
        double var_chaste_interface__SR_Ca_uptake_and_release__F2 = NV_Ith_S(rY, 25);
        // Units: dimensionless; Initial value: 0.0007594214
        
        // Lookup table indexing
        const bool _oob_0 = Celldemir_model_1994FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Celldemir_model_1994FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);
const double var_x0 = pow(var_chaste_interface__hyperpolarisation_activated_current_y_gate__y, 2);
        const double var_x1 = -0.16666666666666666 * var_chaste_interface__membrane__V;
        const double var_x2 = exp(-2.3500000000000001 + var_x1);
        const double var_x3 = 1.0 + var_x2;
        const double var_x4 = 1 / var_x3;
        const double var_x5 = var_chaste_interface__L_type_Ca_channel_d_gate__d_L * var_chaste_interface__L_type_Ca_channel_f_gate__f_L;
        const double var_x6 = var_chaste_interface__T_type_Ca_channel_d_gate__d_T * var_chaste_interface__T_type_Ca_channel_f_gate__f_T;
        const double var_x7 = pow(var_chaste_interface__cleft_space_equations__Na_c, 3);
        const double var_x8 = var_x7 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i;
        const double var_x9 = pow(var_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i, 3);
        const double var_x10 = var_x9 * var_chaste_interface__cleft_space_equations__Ca_c;
        const double var_x11 = 1.0 + 0.0001 * var_x10 + 0.0001 * var_x8;
        const double var_x12 = 1 / var_x11;
        const double var_x13 = 0.018714999999999999 * var_chaste_interface__membrane__V;
        const double var_x14 = exp(-var_x13);
        const double var_x15 = var_x14 * var_x8;
        const double var_x16 = exp(var_x13);
        const double var_x17 = var_x10 * var_x16;
        const double var_x18 = var_x12 * (0.018714999999999999 * var_x15 + 0.018714999999999999 * var_x17);
        const double var_x19 = var_chaste_interface__delayed_rectifying_potassium_current_P_a_gate__P_a * var_chaste_interface__delayed_rectifying_potassium_current_P_i_gate__P_i;
        const double var_x20 = 0.9813599999999999 - 0.021149999999999999 * var_chaste_interface__membrane__V;
        const double var_x21 = var_x2 / pow(var_x3, 2);
        const double var_x22 = 0.015833333333333335 * var_x21;
        const double var_x23 = 0.037433890822745473 * var_chaste_interface__membrane__V;
        const double var_x24 = 1 / var_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i;
        const double var_x25 = var_x24 * var_chaste_interface__cleft_space_equations__Na_c;
        const double var_x26 = exp(var_x23 - 1.0 * log(var_x25));
        const double var_x27 = -1.0 + var_x26;
        const double var_x28 = var_x27 * var_chaste_interface__cleft_space_equations__Na_c;
        const double var_x29 = exp(var_x23);
        const double var_x30 = -1.0 + var_x29;
        const double var_x31 = 1 / var_x30;
        const double var_x32 = pow(var_chaste_interface__sodium_current_m_gate__m, 3);
        const double var_x33 = var_x31 * var_x32 * var_chaste_interface__sodium_current_h_gate__h1 * var_chaste_interface__sodium_current_h_gate__h2;
        const double var_x34 = 12.424666784589714 * var_x33;
        const double var_x35 = exp(-1.5 - 0.025000000000000001 * var_chaste_interface__membrane__V);
        const double var_x36 = 0.621 + var_chaste_interface__cleft_space_equations__K_c;
        const double var_x37 = pow(var_x36, (-2));
        const double var_x38 = pow(var_chaste_interface__cleft_space_equations__K_c, 2);
        const double var_x39 = 1 + 0.18315018315018314 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i;
        const double var_x40 = pow(var_x39, (-3));
        const double var_x41 = var_x35 * var_x37 * var_x38 * var_x40 * var_x9 / pow((1 + 0.66666666666666663 * var_x35), 2);
        const double var_x42 = var_x33 * var_chaste_interface__membrane__V;
        const double var_x43 = var_x26 * var_x42;
        const double var_x44 = var_x43 * var_chaste_interface__cleft_space_equations__Na_c;
        const double var_x45 = var_x28 * var_chaste_interface__sodium_current_h_gate__h2;
        const double var_x46 = var_x45 * var_chaste_interface__membrane__V * var_chaste_interface__sodium_current_h_gate__h1;
        const double var_x47 = var_x29 * var_x32 * var_x46 / pow(var_x30, 2);
        const double var_x48 = 1 / NV_Ith_S(mParameters, 0);
        const double var_x49 = 0.001 * var_x48;
        const double var_x50 = 0.00040000000000000002 + var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i;
        const double var_x51 = 1 / var_x50;
        const double var_x52 = 1 / var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i;
        const double var_x53 = var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i / pow(var_x50, 2);
        const double var_x54 = 1.2480000000000001e-5 * var_x12;
        const double var_x55 = var_x14 * var_x7;
        const double var_x56 = (var_x17 - var_x15) / pow(var_x11, 2);
        const double var_x57 = 1.2480000000000002e-9 * var_x56;
        const double var_x58 = var_x45 * var_x48;
        const double var_x59 = var_x31 * pow(var_chaste_interface__sodium_current_m_gate__m, 2);
        const double var_x60 = var_x31 * var_x32 * var_chaste_interface__membrane__V;
        const double var_x61 = 0.012424666784589715 * var_x60;
        const double var_x62 = 0.001 * var_chaste_interface__L_type_Ca_channel_f_gate__f_L;
        const double var_x63 = var_x20 * var_x48;
        const double var_x64 = 0.001 * var_chaste_interface__L_type_Ca_channel_d_gate__d_L;
        const double var_x65 = 0.001 * var_chaste_interface__T_type_Ca_channel_f_gate__f_T;
        const double var_x66 = var_x48 * (1.13445 - 0.02521 * var_chaste_interface__membrane__V);
        const double var_x67 = 0.001 * var_chaste_interface__T_type_Ca_channel_d_gate__d_T;
        const double var_x68 = 1 / var_chaste_interface__intracellular_concentrations_and_buffer_equations__K_i;
        const double var_x69 = log(var_x68 * var_chaste_interface__cleft_space_equations__K_c);
        const double var_x70 = 0.50070344964891056 * var_x69 - 0.018743278268729353 * var_chaste_interface__membrane__V;
        const double var_x71 = 0.001 * var_chaste_interface__delayed_rectifying_potassium_current_P_a_gate__P_a;
        const double var_x72 = (85.0 + var_chaste_interface__membrane__V) * var_chaste_interface__hyperpolarisation_activated_current_y_gate__y;
        const double var_x73 = (-75.0 + var_chaste_interface__membrane__V) * var_chaste_interface__hyperpolarisation_activated_current_y_gate__y;
        const double var_x74 = pow(var_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i, 2);
        const double var_x75 = var_x74 * var_chaste_interface__cleft_space_equations__Ca_c;
        const double var_x76 = 3.7440000000000003e-9 * var_x56;
        const double var_x77 = 3.7440000000000001e-5 * var_x12;
        const double var_x78 = var_x16 * var_x75;
        const double var_x79 = 1 / (1.5 + var_x35);
        const double var_x80 = var_x37 * var_x38 * var_x79;
        const double var_x81 = var_x80 * var_x9 / pow(var_x39, 4);
        const double var_x82 = var_x40 * var_x74 * var_x80;
        const double var_x83 = 12.424666784589714 * var_x43;
        const double var_x84 = 0.50070344964891056 * var_x19;
        const double var_x85 = 1 / var_chaste_interface__cleft_space_equations__Na_c;
        const double var_x86 = pow(var_chaste_interface__cleft_space_equations__Na_c, 2) * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i;
        const double var_x87 = var_x14 * var_x86;
        const double var_x88 = 1 / var_chaste_interface__cleft_space_equations__Ca_c;
        const double var_x89 = var_x16 * var_x9;
        const double var_x90 = 1 / var_chaste_interface__cleft_space_equations__K_c;
        const double var_x91 = var_x40 * var_x79 * var_x9;
        const double var_x92 = 0.0043093582521187886 * var_x91;
        const double var_x93 = var_x38 / pow(var_x36, 3);
        const double var_x94 = var_x37 * var_chaste_interface__cleft_space_equations__K_c;
        const double var_x95 = 0.0031274360147155781 - 6.7401638248180558e-5 * var_chaste_interface__membrane__V;
        const double var_x96 = 9.5000000000000005e-5 + 2.0454545454545457e-6 * var_chaste_interface__SR_Ca_uptake_and_release__Ca_up + var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i;
        const double var_x97 = 1 / var_x96;
        const double var_x98 = (0.080000000000000002 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i - 1.4727272727272728e-7 * var_chaste_interface__SR_Ca_uptake_and_release__Ca_up) / pow(var_x96, 2);
        const double var_x99 = 7.9543493648916639e-12 * var_x56;
        const double var_x100 = 7.9543493648916641e-8 * var_x12;
        const double var_x101 = 0.0036153091494396427 - 8.0340203320880944e-5 * var_chaste_interface__membrane__V;
        const double var_x102 = 2.3863048094674991e-7 * var_x12;
        const double var_x103 = 2.3863048094674993e-11 * var_x56;
        const double var_x104 = 7.9980000000000002 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i;
        const double var_x105 = 0.25 + var_chaste_interface__SR_Ca_uptake_and_release__F2;
        const double var_x106 = pow(var_x105, (-2));
        const double var_x107 = pow(var_chaste_interface__SR_Ca_uptake_and_release__F2, 2);
        const double var_x108 = var_x106 * var_x107;
        const double var_x109 = 0.0031868386878572369 * var_chaste_interface__SR_Ca_uptake_and_release__Ca_rel;
        const double var_x110 = var_x106 * var_chaste_interface__SR_Ca_uptake_and_release__F2;
        const double var_x111 = var_x107 / pow(var_x105, 3);
        const double var_x112 = exp(-5.8314606741573032 - 0.11235955056179775 * var_chaste_interface__membrane__V);
        const double var_x113 = 51.899999999999999 + var_chaste_interface__membrane__V;
        const double var_x114 = -1.0 + var_x112;
        const double var_x115 = 1 / var_x114;
        const double var_x116 = 824.0 * var_x115;
        const double var_x117 = var_x113 * var_x116;
        const double var_x118 = 1 / (-var_x117 + 32960.0 * var_x112);
        const double var_x119 = var_x113 * var_x115;
        const double var_x120 = 92.584269662921344 * var_x112 * var_x113 / pow(var_x114, 2);
        const double var_x121 = (var_x116 + var_x120 + 3703.370786516854 * var_x112) / pow((var_x112 - 0.025000000000000001 * var_x119), 2);
        const double var_x122 = 1.5e-5 + var_x118;
        const double var_x123 = 0.001 / var_x122;
        const double var_x124 = exp(-8.0396825396825395 - 0.079365079365079361 * var_chaste_interface__membrane__V);
        const double var_x125 = 1 / (1.0 + 320.0 * var_x124);
        const double var_x126 = 165.0 * var_x124 + 12360.0 * var_x125;
        const double var_x127 = 1 / var_x126;
        const double var_x128 = var_x124 * var_x127;
        const double var_x129 = 13.095238095238095 * var_x124;
        const double var_x130 = 3.0654761904761907 * var_x124 / pow((0.0031250000000000002 + var_x124), 2);
        const double var_x131 = var_x124 * (var_x129 - var_x130) / pow((var_x125 + 0.013349514563106795 * var_x124), 2);
        const double var_x132 = 0.16500000000000001 * var_x124;
        const double var_x133 = var_x130 - var_x129;
        const double var_x134 = 0.0082500000000000004 * var_x124;
        const double var_x135 = exp(-2.0 + 0.40000000000000002 * var_chaste_interface__membrane__V);
        const double var_x136 = -1.0 + var_x135;
        const double var_x137 = 1 / var_x136;
        const double var_x138 = 11.43 * var_x137;
        const double var_x139 = exp(-14.0 - 0.40000000000000002 * var_chaste_interface__membrane__V);
        const double var_x140 = -1.0 + var_x139;
        const double var_x141 = 1 / var_x140;
        const double var_x142 = 28.390000000000001 * var_x141;
        const double var_x143 = exp(-0.20799999999999999 * var_chaste_interface__membrane__V);
        const double var_x144 = -1.0 + var_x143;
        const double var_x145 = 1 / var_x144;
        const double var_x146 = 84.900000000000006 * var_x145;
        const double var_x147 = 35.0 + var_chaste_interface__membrane__V;
        const double var_x148 = -5.0 + var_chaste_interface__membrane__V;
        const double var_x149 = exp(6.0 + 0.20000000000000001 * var_chaste_interface__membrane__V);
        const double var_x150 = 1.0 + var_x149;
        const double var_x151 = 0.25 * var_chaste_interface__membrane__V;
        const double var_x152 = exp(7.0 + var_x151);
        const double var_x153 = -1.0 + var_x152;
        const double var_x154 = 1 / var_x153;
        const double var_x155 = 3.75 * var_x154;
        const double var_x156 = exp(-7.0 - var_x151);
        const double var_x157 = 1.0 + var_x156;
        const double var_x158 = 28.0 + var_chaste_interface__membrane__V;
        const double var_x159 = 1 / var_x157;
        const double var_x160 = exp(-4.3833333333333337 + var_x1);
        const double var_x161 = 1.0 + var_x160;
        const double var_x162 = 0.033333333333333333 * var_chaste_interface__membrane__V;
        const double var_x163 = exp(0.87666666666666671 + var_x162);
        const double var_x164 = exp(-0.87666666666666671 - var_x162);
        const double var_x165 = exp(11.017857142857144 + 0.17857142857142858 * var_chaste_interface__membrane__V);
        const double var_x166 = 1.0 + var_x165;
        const double var_x167 = exp(4.0117035110533159 + 0.065019505851755519 * var_chaste_interface__membrane__V);
        const double var_x168 = exp(-0.74069627851140463 - 0.012004801920768308 * var_chaste_interface__membrane__V);
        const double var_x169 = exp(0.039800000000000002 * var_chaste_interface__membrane__V);
        const double var_x170 = exp(-0.050999999999999997 * var_chaste_interface__membrane__V);
        const double var_x171 = exp(-0.68918918918918914 - 0.13513513513513511 * var_chaste_interface__membrane__V);
        const double var_x172 = 1.0 + var_x171;
        const double var_x173 = _lt_0_row[16];
        const double var_x174 = _lt_0_row[17];
        const double var_x175 = exp(8.0222222222222221 + 0.1111111111111111 * var_chaste_interface__membrane__V);
        const double var_x176 = 1.0 + var_x175;
        const double var_x177 = exp(-2.2219482120838472 - 0.041101520756267988 * var_chaste_interface__membrane__V);
        const double var_x178 = exp(-10.909090909090908 - 0.18181818181818182 * var_chaste_interface__membrane__V);
        const double var_x179 = 0.69999999999999996 + var_x178;
        const double var_x180 = 1 / var_x179;
        const double var_x181 = 0.079190817585730572 * var_x28;
        const double var_x182 = 2.3863048094674991e-7 * var_x12;
        const double var_x183 = 2.3863048094674993e-11 * var_x56;
        const double var_x184 = var_x46 * var_x59;
        const double var_x185 = var_x181 * var_x60;
        const double var_x186 = 7.158914428402498e-11 * var_x56;
        const double var_x187 = 7.1589144284024978e-7 * var_x12;
        const double var_x188 = 0.079190817585730572 * var_x43;
        const double var_x189 = var_x27 * var_x42;
        const double var_x190 = 8.2399377586133985e-5 * var_x91;
        const double var_x191 = 0.0031913222489694526 * var_x69 - 0.00011946360864812103 * var_chaste_interface__membrane__V;
        const double var_x192 = 0.0031913222489694526 * var_x19;
        const double var_x193 = 5.493291839075599e-5 * var_x91;
        const double var_x194 = -129.0 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i;
        const double var_x195 = 0.27076272189238759 * var_x28;
        const double var_x196 = 8.1590568853116704e-7 * var_x12;
        const double var_x197 = 8.159056885311671e-11 * var_x56;
        const double var_x198 = var_x195 * var_x60;
        const double var_x199 = 2.447717065593501e-6 * var_x12;
        const double var_x200 = 2.4477170655935014e-10 * var_x56;
        const double var_x201 = 0.27076272189238759 * var_x43;
        const double var_x202 = 0.00028173316601141397 * var_x91;
        const double var_x203 = -0.010693071667961351 + 0.00023045413077502912 * var_chaste_interface__membrane__V;
        const double var_x204 = 2.7196856284372237e-11 * var_x56;
        const double var_x205 = 2.7196856284372236e-7 * var_x12;
        const double var_x206 = -0.012361167312422308 + 0.00027469260694271792 * var_chaste_interface__membrane__V;
        const double var_x207 = 8.159056885311671e-11 * var_x56;
        const double var_x208 = 8.1590568853116704e-7 * var_x12;
        const double var_x209 = 0.00040846013251011971 * var_chaste_interface__membrane__V - 0.010911506218902908 * var_x69;
        const double var_x210 = 0.010911506218902908 * var_x19;
        const double var_x211 = 0.00018782211067427598 * var_x91;
        const double var_x212 = 2.4589804690256458 * var_chaste_interface__SR_Ca_uptake_and_release__Ca_rel;
        const double var_x213 = exp(-3.2000000000000002 + 0.080000000000000002 * var_chaste_interface__membrane__V);
        const double var_x214 = 0.019200000000000002 * var_x213 * var_chaste_interface__SR_Ca_uptake_and_release__F1;
        const double var_x215 = 0.0040000000000000001 + var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i;
        const double var_x216 = pow(var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i, 4);
        const double var_x217 = 0.95999999999999996 * var_x216 / pow(var_x215, 5);
        const double var_x218 = pow(var_x215, (-4));
        const double var_x219 = 0.95999999999999996 * var_x218 * pow(var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i, 3);
        const double var_x220 = var_x217 - var_x219;
        const double var_x221 = 0.23999999999999999 * var_x213;
        const double var_x222 = 0.23999999999999999 * var_x216 * var_x218;
        const double var_x223 = -var_x222;
        const double var_x224 = var_x219 - var_x217;
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = mSetVoltageDerivativeToZero ? 0.0 : (var_x49 * (-0.00026580000000000001 + 0.46510361992332344 * var_x47 - 0.021149999999999999 * var_x5 - 0.02521 * var_x6 - 1.2480000000000001e-5 * var_x18 - 0.019629899999999999 * var_x0 - 0.018743278268729353 * var_x19 - 0.46510361992332344 * var_x44 - 0.0020092499999999998 * var_x4 - 2.3940879178437715e-5 * var_x41 + var_x20 * var_x22 - var_x28 * var_x34));
        IJth(rJacobian, 1, 0) = -1.1600092823800342e-7 + 7.9543493648916641e-8 * var_x18 - 6.4031556335771533e-6 * var_x4 - 6.7401638248180558e-5 * var_x5 - 8.0340203320880944e-5 * var_x6 + var_x22 * var_x95;
        IJth(rJacobian, 2, 0) = var_x123 * (-var_x116 * var_x118 - var_x118 * var_x120 - 7.5849514563106801e-7 * var_x119 * var_x121) - 9.2050381751343198e-13 * var_x121 * (-var_chaste_interface__sodium_current_m_gate__m - var_x117 * var_x118) / pow(var_x122, 2);
        IJth(rJacobian, 3, 0) = var_x126 * (1.0800578125490936e-9 * var_x131 - 0.013095238095238096 * var_x128) + var_x133 * (-0.001 * var_chaste_interface__sodium_current_h_gate__h1 + var_x127 * var_x132);
        IJth(rJacobian, 4, 0) = var_x126 * (5.4002890627454676e-11 * var_x131 - 0.00065476190476190473 * var_x128) + var_x133 * (-5.0000000000000002e-5 * var_chaste_interface__sodium_current_h_gate__h2 + var_x127 * var_x134);
        IJth(rJacobian, 5, 0) = (-var_x64 + 0.001 * var_x4) * (var_x138 - var_x142 - var_x146 - 11.356 * var_x139 * var_x147 / pow(var_x140, 2) - 17.659200000000002 * var_x143 * var_chaste_interface__membrane__V / pow(var_x144, 2) - 4.5720000000000001 * var_x135 * var_x148 / pow(var_x136, 2)) + 0.00016666666666666666 * var_x21 * (var_x138 * var_x148 - var_x142 * var_x147 - var_x146 * var_chaste_interface__membrane__V);
        IJth(rJacobian, 6, 0) = (-var_x62 + 0.001 / var_x150) * (var_x155 + 7.5 * var_x156 / pow(var_x157, 2) - 0.9375 * var_x152 * var_x158 / pow(var_x153, 2)) - 0.00020000000000000001 * var_x149 * (30.0 * var_x159 + var_x155 * var_x158) / pow(var_x150, 2);
        IJth(rJacobian, 7, 0) = (-var_x67 + 0.001 / var_x161) * (35.600000000000001 * var_x163 - 35.600000000000001 * var_x164) + 0.00016666666666666666 * var_x160 * (1068.0 * var_x163 + 1068.0 * var_x164) / pow(var_x161, 2);
        IJth(rJacobian, 8, 0) = (-var_x65 + 0.001 / var_x166) * (0.97529258777633288 * var_x167 - 0.18367346938775511 * var_x168) - 0.00017857142857142857 * var_x165 * (15.0 * var_x167 + 15.300000000000001 * var_x168) / pow(var_x166, 2);
        IJth(rJacobian, 9, 0) = (-var_x71 + 0.001 / var_x172) * (0.67660000000000009 * var_x169 - 0.10760999999999998 * var_x170) + 0.00013513513513513514 * var_x171 * (17.0 * var_x169 + 2.1099999999999999 * var_x170) / pow(var_x172, 2);
        IJth(rJacobian, 10, 0) = -0.0183 * var_x173 * (0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__delayed_rectifying_potassium_current_P_i_gate__P_i) - 0.00617952 * var_x174 * var_chaste_interface__delayed_rectifying_potassium_current_P_i_gate__P_i;
        IJth(rJacobian, 11, 0) = (0.001 / var_x176 - 0.001 * var_chaste_interface__hyperpolarisation_activated_current_y_gate__y) * (-0.067747636662556524 * var_x177 + 2.5473727272727271 * var_x178 / pow(var_x179, 2)) - 0.00011111111111111112 * var_x175 * (1.6483000000000001 * var_x177 + 14.01055 * var_x180) / pow(var_x176, 2);
        IJth(rJacobian, 12, 0) = -1.0197883801143159e-6 + 0.0029644204196681901 * var_x47 - 4.3008300195846126e-5 * var_x0 - 0.0029644204196681901 * var_x44 - 4.5777431992296659e-7 * var_x41 - 2.3863048094674991e-7 * var_x18 - var_x181 * var_x33;
        IJth(rJacobian, 13, 0) = -4.4233320987458456e-7 + 3.0518287994864439e-7 * var_x41 - 0.00011946360864812103 * var_x19 - 8.2106349321691435e-5 * var_x0;
        IJth(rJacobian, 18, 0) = 3.486776446714389e-6 + 1.5651842556189666e-6 * var_x41 + 0.010135702170189033 * var_x44 + 8.1590568853116704e-7 * var_x18 + 0.00014705043816962094 * var_x0 - 0.010135702170189033 * var_x47 + var_x195 * var_x33;
        IJth(rJacobian, 19, 0) = 3.9662082081376168e-7 + 0.00027469260694271792 * var_x6 + 2.1893142423627767e-5 * var_x4 + 0.00023045413077502912 * var_x5 - 2.7196856284372236e-7 * var_x18 + var_x203 * var_x22;
        IJth(rJacobian, 20, 0) = 1.5123892837623662e-6 + 0.00028073126790137144 * var_x0 + 0.00040846013251011971 * var_x19 - 1.0434561704126445e-6 * var_x41;
        IJth(rJacobian, 24, 0) = -var_x214;
        IJth(rJacobian, 25, 0) = var_x214;
        IJth(rJacobian, 0, 1) = mSetVoltageDerivativeToZero ? 0.0 : (var_x49 * (0.02869 * var_x53 - 0.02869 * var_x51 - 0.00048619044400646078 * var_x52 + var_x54 * var_x55 + var_x57 * var_x7));
        IJth(rJacobian, 1, 1) = -21.173500000000001 + 11.609999999999999 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Calmod + 9.1430401954624137e-5 * var_x53 + 1.5654999999999999 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Trop + 0.0031868386878572369 * var_x98 + 7.9980000000000002 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Mg_Trop + 7.9980000000000002 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Mg_Mg_Trop - 0.00025494709502857897 * var_x97 - 9.1430401954624137e-5 * var_x51 - 1.5494105166262771e-6 * var_x52 - var_x100 * var_x55 - var_x7 * var_x99;
        IJth(rJacobian, 12, 1) = var_x182 * var_x55 + var_x183 * var_x7;
        IJth(rJacobian, 14, 1) = 129.0 - 129.0 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Calmod;
        IJth(rJacobian, 15, 1) = 50.5 - 50.5 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Trop;
        IJth(rJacobian, 16, 1) = 129.0 - 129.0 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Mg_Trop - 129.0 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Mg_Mg_Trop;
        IJth(rJacobian, 18, 1) = -var_x196 * var_x55 - var_x197 * var_x7;
        IJth(rJacobian, 19, 1) = 0.00031261130080073693 * var_x51 + 5.2976168399354324e-6 * var_x52 - 0.00031261130080073693 * var_x53 + var_x204 * var_x7 + var_x205 * var_x55;
        IJth(rJacobian, 21, 1) = 0.021865102489586532 * var_x97 - 0.27331378111983162 * var_x98;
        IJth(rJacobian, 24, 1) = var_x220 * var_chaste_interface__SR_Ca_uptake_and_release__F1;
        IJth(rJacobian, 25, 1) = var_x220 * var_chaste_interface__SR_Ca_uptake_and_release__F2 + var_x224 * var_chaste_interface__SR_Ca_uptake_and_release__F1;
        IJth(rJacobian, 26, 1) = var_x224 * var_chaste_interface__SR_Ca_uptake_and_release__F2;
        IJth(rJacobian, 0, 2) = mSetVoltageDerivativeToZero ? 0.0 : (-0.037274000353769147 * var_x58 * var_x59 * var_chaste_interface__membrane__V * var_chaste_interface__sodium_current_h_gate__h1);
        IJth(rJacobian, 2, 2) = -var_x123;
        IJth(rJacobian, 12, 2) = -0.23757245275719172 * var_x184;
        IJth(rJacobian, 18, 2) = 0.81228816567716278 * var_x184;
        IJth(rJacobian, 0, 3) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x58 * var_x61);
        IJth(rJacobian, 3, 3) = -var_x132 - 12.359999999999999 * var_x125;
        IJth(rJacobian, 12, 3) = -var_x185 * var_chaste_interface__sodium_current_h_gate__h2;
        IJth(rJacobian, 18, 3) = var_x198 * var_chaste_interface__sodium_current_h_gate__h2;
        IJth(rJacobian, 0, 4) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x28 * var_x48 * var_x61 * var_chaste_interface__sodium_current_h_gate__h1);
        IJth(rJacobian, 4, 4) = -var_x134 - 0.61799999999999999 * var_x125;
        IJth(rJacobian, 12, 4) = -var_x185 * var_chaste_interface__sodium_current_h_gate__h1;
        IJth(rJacobian, 18, 4) = var_x198 * var_chaste_interface__sodium_current_h_gate__h1;
        IJth(rJacobian, 0, 5) = mSetVoltageDerivativeToZero ? 0.0 : (var_x62 * var_x63);
        IJth(rJacobian, 1, 5) = var_x95 * var_chaste_interface__L_type_Ca_channel_f_gate__f_L;
        IJth(rJacobian, 5, 5) = 0.028390000000000002 * var_x141 * var_x147 + 0.084900000000000003 * var_x145 * var_chaste_interface__membrane__V - 0.011429999999999999 * var_x137 * var_x148;
        IJth(rJacobian, 19, 5) = var_x203 * var_chaste_interface__L_type_Ca_channel_f_gate__f_L;
        IJth(rJacobian, 0, 6) = mSetVoltageDerivativeToZero ? 0.0 : (var_x63 * var_x64);
        IJth(rJacobian, 1, 6) = var_x95 * var_chaste_interface__L_type_Ca_channel_d_gate__d_L;
        IJth(rJacobian, 6, 6) = -0.029999999999999999 * var_x159 - 0.0037499999999999999 * var_x154 * var_x158;
        IJth(rJacobian, 19, 6) = var_x203 * var_chaste_interface__L_type_Ca_channel_d_gate__d_L;
        IJth(rJacobian, 0, 7) = mSetVoltageDerivativeToZero ? 0.0 : (var_x65 * var_x66);
        IJth(rJacobian, 1, 7) = var_x101 * var_chaste_interface__T_type_Ca_channel_f_gate__f_T;
        IJth(rJacobian, 7, 7) = -1.0680000000000001 * var_x163 - 1.0680000000000001 * var_x164;
        IJth(rJacobian, 19, 7) = var_x206 * var_chaste_interface__T_type_Ca_channel_f_gate__f_T;
        IJth(rJacobian, 0, 8) = mSetVoltageDerivativeToZero ? 0.0 : (var_x66 * var_x67);
        IJth(rJacobian, 1, 8) = var_x101 * var_chaste_interface__T_type_Ca_channel_d_gate__d_T;
        IJth(rJacobian, 8, 8) = -0.015300000000000001 * var_x168 - 0.014999999999999999 * var_x167;
        IJth(rJacobian, 19, 8) = var_x206 * var_chaste_interface__T_type_Ca_channel_d_gate__d_T;
        IJth(rJacobian, 0, 9) = mSetVoltageDerivativeToZero ? 0.0 : (var_x49 * var_x70 * var_chaste_interface__delayed_rectifying_potassium_current_P_i_gate__P_i);
        IJth(rJacobian, 9, 9) = -0.0021099999999999999 * var_x170 - 0.017000000000000001 * var_x169;
        IJth(rJacobian, 13, 9) = var_x191 * var_chaste_interface__delayed_rectifying_potassium_current_P_i_gate__P_i;
        IJth(rJacobian, 20, 9) = var_x209 * var_chaste_interface__delayed_rectifying_potassium_current_P_i_gate__P_i;
        IJth(rJacobian, 0, 10) = mSetVoltageDerivativeToZero ? 0.0 : (var_x48 * var_x70 * var_x71);
        IJth(rJacobian, 10, 10) = -0.65600000000000003 * var_x174 - 0.10000000000000001 * var_x173;
        IJth(rJacobian, 13, 10) = var_x191 * var_chaste_interface__delayed_rectifying_potassium_current_P_a_gate__P_a;
        IJth(rJacobian, 20, 10) = var_x209 * var_chaste_interface__delayed_rectifying_potassium_current_P_a_gate__P_a;
        IJth(rJacobian, 0, 11) = mSetVoltageDerivativeToZero ? 0.0 : (var_x49 * (-0.025764200000000001 * var_x72 - 0.0134956 * var_x73));
        IJth(rJacobian, 11, 11) = -0.0016483000000000001 * var_x177 - 0.01401055 * var_x180;
        IJth(rJacobian, 12, 11) = -8.6016600391692252e-5 * var_x73;
        IJth(rJacobian, 13, 11) = -0.00016421269864338287 * var_x72;
        IJth(rJacobian, 18, 11) = 0.00029410087633924189 * var_x73;
        IJth(rJacobian, 20, 11) = 0.00056146253580274287 * var_x72;
        IJth(rJacobian, 0, 12) = mSetVoltageDerivativeToZero ? 0.0 : (var_x49 * (0.0011838896297029639 * var_x81 - 0.0042742017055513041 * var_x24 - 0.0064640373781781829 * var_x82 + var_x75 * var_x76 - var_x25 * var_x83 - var_x77 * var_x78));
        IJth(rJacobian, 1, 12) = var_x102 * var_x78 - var_x103 * var_x75;
        IJth(rJacobian, 12, 12) = 2.2637191644542304e-5 * var_x81 - 2.7242382709912566e-5 * var_x24 - 0.00012359906637920097 * var_x82 + var_x186 * var_x75 - var_x187 * var_x78 - var_x188 * var_x25;
        IJth(rJacobian, 13, 12) = 8.2399377586133985e-5 * var_x82 - 1.5091461096361535e-5 * var_x81;
        IJth(rJacobian, 18, 12) = 0.00042259974901712096 * var_x82 + 9.3144911471392233e-5 * var_x24 - 7.739922143170714e-5 * var_x81 + var_x199 * var_x78 + var_x201 * var_x25 - var_x200 * var_x75;
        IJth(rJacobian, 19, 12) = var_x207 * var_x75 - var_x208 * var_x78;
        IJth(rJacobian, 20, 12) = 5.1599480954471424e-5 * var_x81 - 0.00028173316601141397 * var_x82;
        IJth(rJacobian, 0, 13) = mSetVoltageDerivativeToZero ? 0.0 : (var_x49 * (-0.0018539349897828783 * var_x68 - var_x68 * var_x84));
        IJth(rJacobian, 13, 13) = -1.1816383500424576e-5 * var_x68 - var_x192 * var_x68;
        IJth(rJacobian, 20, 13) = 4.040160535071638e-5 * var_x68 + var_x210 * var_x68;
        IJth(rJacobian, 1, 14) = 0.027629999999999998 + 11.609999999999999 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i;
        IJth(rJacobian, 14, 14) = -0.307 + var_x194;
        IJth(rJacobian, 1, 15) = 0.0078120000000000004 + 1.5654999999999999 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i;
        IJth(rJacobian, 15, 15) = -0.252 - 50.5 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i;
        IJth(rJacobian, 1, 16) = 0.00026350000000000001 + var_x104;
        IJth(rJacobian, 16, 16) = -0.0042500000000000003 + var_x194;
        IJth(rJacobian, 17, 16) = -3.2250000000000001;
        IJth(rJacobian, 1, 17) = var_x104;
        IJth(rJacobian, 16, 17) = var_x194;
        IJth(rJacobian, 17, 17) = -3.6539999999999999;
        IJth(rJacobian, 0, 18) = mSetVoltageDerivativeToZero ? 0.0 : (var_x49 * (var_x83 + 0.0042742017055513041 * var_x85 + var_x76 * var_x86 + var_x77 * var_x87 - var_x27 * var_x34 * var_chaste_interface__membrane__V));
        IJth(rJacobian, 1, 18) = -var_x102 * var_x87 - var_x103 * var_x86;
        IJth(rJacobian, 12, 18) = var_x188 + 2.7242382709912566e-5 * var_x85 - 0.079190817585730572 * var_x189 + var_x186 * var_x86 + var_x187 * var_x87;
        IJth(rJacobian, 18, 18) = -0.099999999999999992 - var_x201 + 0.27076272189238759 * var_x189 - 9.3144911471392233e-5 * var_x85 - var_x199 * var_x87 - var_x200 * var_x86;
        IJth(rJacobian, 19, 18) = var_x207 * var_x86 + var_x208 * var_x87;
        IJth(rJacobian, 0, 19) = mSetVoltageDerivativeToZero ? 0.0 : (var_x49 * (0.00048619044400646078 * var_x88 + var_x57 * var_x9 - var_x54 * var_x89));
        IJth(rJacobian, 1, 19) = 1.5494105166262771e-6 * var_x88 + var_x100 * var_x89 - var_x9 * var_x99;
        IJth(rJacobian, 12, 19) = var_x183 * var_x9 - var_x182 * var_x89;
        IJth(rJacobian, 18, 19) = var_x196 * var_x89 - var_x197 * var_x9;
        IJth(rJacobian, 19, 19) = -0.099999999999999992 - 5.2976168399354324e-6 * var_x88 + var_x204 * var_x9 - var_x205 * var_x89;
        IJth(rJacobian, 0, 20) = mSetVoltageDerivativeToZero ? 0.0 : (var_x49 * (0.0018539349897828783 * var_x90 + var_x84 * var_x90 + var_x92 * var_x93 - var_x92 * var_x94));
        IJth(rJacobian, 12, 20) = var_x190 * var_x93 - var_x190 * var_x94;
        IJth(rJacobian, 13, 20) = 1.1816383500424576e-5 * var_x90 + var_x192 * var_x90 + var_x193 * var_x94 - var_x193 * var_x93;
        IJth(rJacobian, 18, 20) = var_x202 * var_x94 - var_x202 * var_x93;
        IJth(rJacobian, 20, 20) = -0.099999999999999992 - 4.040160535071638e-5 * var_x90 + var_x211 * var_x93 - var_x210 * var_x90 - var_x211 * var_x94;
        IJth(rJacobian, 1, 21) = 4.6933442493897489e-10 * var_x97 + 6.5185336797079855e-9 * var_x98;
        IJth(rJacobian, 21, 21) = -0.015581177937052042 - 4.0251665946738841e-8 * var_x97 - 5.5905091592692838e-7 * var_x98;
        IJth(rJacobian, 22, 21) = 0.14018251137810708;
        IJth(rJacobian, 1, 22) = 0.0015934193439286184 * var_x108;
        IJth(rJacobian, 21, 22) = 0.015581177937052042;
        IJth(rJacobian, 22, 22) = -8.979782511378108 + 8.8396000000000008 * var_chaste_interface__SR_Ca_uptake_and_release__Ca_Calse - 1.2294902345128229 * var_x108;
        IJth(rJacobian, 23, 22) = 0.77000000000000002 - 0.77000000000000002 * var_chaste_interface__SR_Ca_uptake_and_release__Ca_Calse;
        IJth(rJacobian, 22, 23) = 7.3586800000000006 + 8.8396000000000008 * var_chaste_interface__SR_Ca_uptake_and_release__Ca_rel;
        IJth(rJacobian, 23, 23) = -0.64100000000000001 - 0.77000000000000002 * var_chaste_interface__SR_Ca_uptake_and_release__Ca_rel;
        IJth(rJacobian, 24, 24) = var_x223 - var_x221;
        IJth(rJacobian, 25, 24) = var_x221 + var_x222;
        IJth(rJacobian, 1, 25) = var_x109 * var_x110 - var_x109 * var_x111;
        IJth(rJacobian, 22, 25) = var_x111 * var_x212 - var_x110 * var_x212;
        IJth(rJacobian, 25, 25) = -0.040000000000000001 + var_x223;
        IJth(rJacobian, 26, 25) = 0.040000000000000001 + var_x222;
        IJth(rJacobian, 24, 26) = 0.00095999999999999992;
        IJth(rJacobian, 26, 26) = -0.00095999999999999992;
    }

    N_Vector Celldemir_model_1994FromCellMLCvodeOpt::ComputeDerivedQuantities(double var_chaste_interface__environment__time_converted, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        

        // Mathematics

        N_Vector dqs = N_VNew_Serial(1);
        NV_Ith_S(dqs, 0) = var_chaste_interface__environment__time_converted;
        return dqs;
    }

template<>
void OdeSystemInformation<Celldemir_model_1994FromCellMLCvodeOpt>::Initialise(void)
{
    this->mSystemName = "demir_model_1994";
    this->mFreeVariableName = "environment__time";
    this->mFreeVariableUnits = "millisecond";

    // NV_Ith_S(rY, 0):
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-49.54105);

    // NV_Ith_S(rY, 1):
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0003787018);

    // NV_Ith_S(rY, 2):
    this->mVariableNames.push_back("sodium_current_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.250113);

    // NV_Ith_S(rY, 3):
    this->mVariableNames.push_back("sodium_current_h_gate__h1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.001386897);

    // NV_Ith_S(rY, 4):
    this->mVariableNames.push_back("sodium_current_h_gate__h2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.002065463);

    // NV_Ith_S(rY, 5):
    this->mVariableNames.push_back("L_type_Ca_channel_d_gate__d_L");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.002572773);

    // NV_Ith_S(rY, 6):
    this->mVariableNames.push_back("L_type_Ca_channel_f_gate__f_L");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.98651);

    // NV_Ith_S(rY, 7):
    this->mVariableNames.push_back("T_type_Ca_channel_d_gate__d_T");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.02012114);

    // NV_Ith_S(rY, 8):
    this->mVariableNames.push_back("T_type_Ca_channel_f_gate__f_T");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.1945111);

    // NV_Ith_S(rY, 9):
    this->mVariableNames.push_back("delayed_rectifying_potassium_current_P_a_gate__P_a");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.02302278);

    // NV_Ith_S(rY, 10):
    this->mVariableNames.push_back("delayed_rectifying_potassium_current_P_i_gate__P_i");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.3777728);

    // NV_Ith_S(rY, 11):
    this->mVariableNames.push_back("hyperpolarisation_activated_current_y_gate__y");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.09227776);

    // NV_Ith_S(rY, 12):
    this->mVariableNames.push_back("intracellular_concentrations_and_buffer_equations__Na_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(9.701621);

    // NV_Ith_S(rY, 13):
    this->mVariableNames.push_back("intracellular_concentrations_and_buffer_equations__K_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(140.7347);

    // NV_Ith_S(rY, 14):
    this->mVariableNames.push_back("intracellular_concentrations_and_buffer_equations__Ca_Calmod");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.1411678);

    // NV_Ith_S(rY, 15):
    this->mVariableNames.push_back("intracellular_concentrations_and_buffer_equations__Ca_Trop");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.07331396);

    // NV_Ith_S(rY, 16):
    this->mVariableNames.push_back("intracellular_concentrations_and_buffer_equations__Ca_Mg_Trop");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7618549);

    // NV_Ith_S(rY, 17):
    this->mVariableNames.push_back("intracellular_concentrations_and_buffer_equations__Mg_Mg_Trop");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.2097049);

    // NV_Ith_S(rY, 18):
    this->mVariableNames.push_back("cleft_space_equations__Na_c");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(139.9988);

    // NV_Ith_S(rY, 19):
    this->mVariableNames.push_back("cleft_space_equations__Ca_c");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(2.00474);

    // NV_Ith_S(rY, 20):
    this->mVariableNames.push_back("cleft_space_equations__K_c");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(5.389014);

    // NV_Ith_S(rY, 21):
    this->mVariableNames.push_back("SR_Ca_uptake_and_release__Ca_up");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(16.95311);

    // NV_Ith_S(rY, 22):
    this->mVariableNames.push_back("SR_Ca_uptake_and_release__Ca_rel");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(16.85024);

    // NV_Ith_S(rY, 23):
    this->mVariableNames.push_back("SR_Ca_uptake_and_release__Ca_Calse");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9528726);

    // NV_Ith_S(rY, 24):
    this->mVariableNames.push_back("SR_Ca_uptake_and_release__F1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.1133251);

    // NV_Ith_S(rY, 25):
    this->mVariableNames.push_back("SR_Ca_uptake_and_release__F2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0007594214);

    // NV_Ith_S(rY, 26):
    this->mVariableNames.push_back("SR_Ca_uptake_and_release__F3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.8859153);

    // mParameters[0]:
    this->mParameterNames.push_back("membrane_capacitance");
    this->mParameterUnits.push_back("microF");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("environment__time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Celldemir_model_1994FromCellMLCvodeOpt)

#endif // CHASTE_CVODE
