#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: clancy_rudy_2002
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: AnalyticCvodeOpt)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "clancy_rudy_2002.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class Cellclancy_rudy_2002FromCellMLCvodeOpt_LookupTables : public AbstractLookupTableCollection
{
public:
    static Cellclancy_rudy_2002FromCellMLCvodeOpt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new Cellclancy_rudy_2002FromCellMLCvodeOpt_LookupTables);
        }
        return mpInstance.get();
    }

    void FreeMemory()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }

    // Row lookup methods
    // using linear-interpolation

    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<37; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }


    const double * IndexTable0(double var_chaste_interface__membrane__V)
    {
        const double _offset_0 = var_chaste_interface__membrane__V - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = Cellclancy_rudy_2002FromCellMLCvodeOpt_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }


// LCOV_EXCL_START
    bool CheckIndex0(double& var_chaste_interface__membrane__V)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__membrane__V>mTableMaxs[0] || var_chaste_interface__membrane__V<mTableMins[0])
        {
// LCOV_EXCL_START
            _oob_0 = true;
// LCOV_EXCL_STOP
        }
        return _oob_0;
    }
// LCOV_EXCL_STOP

    ~Cellclancy_rudy_2002FromCellMLCvodeOpt_LookupTables()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

    }

protected:
    Cellclancy_rudy_2002FromCellMLCvodeOpt_LookupTables(const Cellclancy_rudy_2002FromCellMLCvodeOpt_LookupTables&);
    Cellclancy_rudy_2002FromCellMLCvodeOpt_LookupTables& operator= (const Cellclancy_rudy_2002FromCellMLCvodeOpt_LookupTables&);
    Cellclancy_rudy_2002FromCellMLCvodeOpt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);

        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 37;
        mTableMins[0] = -250.0001;
        mTableMaxs[0] = 549.9999;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;

        Cellclancy_rudy_2002FromCellMLCvodeOpt_LookupTables::RegenerateTables();
    }

    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);


        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][37];

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(0.074871767015605231 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][0] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = -1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][1] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(0.037435883507802616 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][2] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = -1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][3] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-0.031820500981632228 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][4] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-0.037435883507802616 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][5] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.1245 * exp(-0.003743588350780262 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][6] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][7] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(0.01 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][8] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 55.5 * exp(-0.66565836 + 0.055471529999999998 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][9] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 65.5 * exp(-1.9969750799999999 + 0.055471529999999998 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][10] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-0.58799999999999997 - 0.023519999999999999 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][11] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 2.3570000000000002 * exp(-0.036588000000000002 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][12] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 2.9357000000000002 * exp(-0.021579999999999998 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][13] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(0.00094200000000000002 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][14] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][15] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 - exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][16] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(4.0 + 0.125 * var_chaste_interface__membrane__V)) + 0.59999999999999998 / (1.0 + exp(2.5 - 0.050000000000000003 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][17] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.001 / (0.02 + 0.019699999999999999 * exp(-0.113569 * pow((1 + 0.10000000000000001 * var_chaste_interface__membrane__V), 2)));

                _lookup_table_0[i][18] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 3802.0 / (0.20000000000000001 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V) + 0.1027 * exp(-0.058823529411764705 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][19] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 3802.0 / (0.1027 * exp(-0.066666666666666666 * var_chaste_interface__membrane__V) + 0.23000000000000001 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][20] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 3802.0 / (0.25 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V) + 0.1027 * exp(-0.083333333333333329 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][21] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 9178.0 * exp(0.033692722371967652 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][22] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.00037932999999999999 * exp(-0.12987012987012986 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][23] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 191.69999999999999 * exp(-0.04926108374384236 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][24] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 200.0 * exp(0.24630541871921183 - 0.04926108374384236 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][25] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 220.0 * exp(0.49261083743842365 - 0.04926108374384236 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][26] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-1.2962962962962963 - 0.092592592592592587 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][27] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.0037000000000000002 + 0.0061000000000000004 / (1.0 + exp(5.5555555555555554 + 0.22222222222222221 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][28] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(10.714285714285715 + 0.17857142857142858 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][29] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][30] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.13100000000000001 * (30.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__V)) + 0.071899999999999992 * (30.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][31] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.032750000000000001 * (30.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__V)) + 0.017974999999999998 * (30.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][32] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 15.0 / (1.0 + exp(12.0 + 0.20000000000000001 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][33] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 100.0 * exp(5.0 + 0.20000000000000001 * var_chaste_interface__membrane__V) / (1.0 + exp(5.0 + 0.20000000000000001 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][34] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 10000.0 * exp(-1.6000000000000001 + 0.040000000000000001 * var_chaste_interface__membrane__V) / (1.0 + exp(-1.6000000000000001 + 0.040000000000000001 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][35] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 10000.0 * exp(-3.6000000000000001 - 0.040000000000000001 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.6000000000000001 - 0.040000000000000001 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][36] = val;
            }

            mNeedsRegeneration[0] = false;
        }

        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }

private:
    /** The single instance of the class */
    static std::shared_ptr<Cellclancy_rudy_2002FromCellMLCvodeOpt_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[37];

    // Lookup tables
    double (*_lookup_table_0)[37];
    int _lookup_table_0_num_misshit_piecewise[37] = {0};

};

std::shared_ptr<Cellclancy_rudy_2002FromCellMLCvodeOpt_LookupTables> Cellclancy_rudy_2002FromCellMLCvodeOpt_LookupTables::mpInstance;

    boost::shared_ptr<RegularStimulus> Cellclancy_rudy_2002FromCellMLCvodeOpt::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__stim_amplitude_converted = -50.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        const double var_chaste_interface__membrane__stim_duration_converted = 2.0; // millisecond
        const double var_chaste_interface__membrane__stim_period_converted = 1000.0; // millisecond
        const double var_chaste_interface__membrane__stim_start_converted = 3000.0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__stim_amplitude_converted),
                var_chaste_interface__membrane__stim_duration_converted,
                var_chaste_interface__membrane__stim_period_converted,
                var_chaste_interface__membrane__stim_start_converted
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }

    double Cellclancy_rudy_2002FromCellMLCvodeOpt::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Cellclancy_rudy_2002FromCellMLCvodeOpt::Cellclancy_rudy_2002FromCellMLCvodeOpt(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                35,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellclancy_rudy_2002FromCellMLCvodeOpt>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
        
        NV_Ith_S(this->mParameters, 0) = 60000.0; // (var_calcium_dynamics__G_rel_max) [per_second]
        NV_Ith_S(this->mParameters, 1) = 1.8; // (var_calcium_dynamics__Cao) [millimolar]
        NV_Ith_S(this->mParameters, 2) = 4.5; // (var_ionic_concentrations__Ko) [millimolar]
        NV_Ith_S(this->mParameters, 3) = 132.0; // (var_ionic_concentrations__Nao) [millimolar]
        NV_Ith_S(this->mParameters, 4) = 1.0; // (var_L_type_Ca_channel__P_scale) [dimensionless]
        NV_Ith_S(this->mParameters, 5) = 0.001; // (var_membrane__Cm) [microF]
        NV_Ith_S(this->mParameters, 6) = 23.5; // (var_fast_sodium_current__g_Na) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 7) = 0.75; // (var_time_independent_potassium_current__g_K1_max) [milliS_per_cm2]
        NV_Ith_S(this->mParameters, 8) = 0.0135; // (var_rapid_delayed_rectifier_potassium_current__g_Kr_max) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 9) = 1.1699999999999999; // (var_slow_delayed_rectifier_potassium_current__g_Ks_max) [dimensionless]
        NV_Ith_S(this->mParameters, 10) = 0.00025000000000000001; // (var_Na_Ca_exchanger__c1) [microA_per_microF]
        NV_Ith_S(this->mParameters, 11) = 1.0; // (var_transient_outward_current__g_to_max) [dimensionless]
    }

    Cellclancy_rudy_2002FromCellMLCvodeOpt::~Cellclancy_rudy_2002FromCellMLCvodeOpt()
    {
    }

    AbstractLookupTableCollection* Cellclancy_rudy_2002FromCellMLCvodeOpt::GetLookupTableCollection()
    {
        return Cellclancy_rudy_2002FromCellMLCvodeOpt_LookupTables::Instance();
    }
    
    double Cellclancy_rudy_2002FromCellMLCvodeOpt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__calcium_dynamics__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.000104
        double var_chaste_interface__Na_channel_states__P_O_Na = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 3.756e-13
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 3.289e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.99975
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.000983
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.9942
        double var_chaste_interface__Kr_channel_states__P_O = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 1.104e-10
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.01167
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 0.99998
        double var_chaste_interface__ionic_concentrations__Nai = NV_Ith_S(rY, 33);
        // Units: millimolar; Initial value: 10.532
        double var_chaste_interface__ionic_concentrations__Ki = NV_Ith_S(rY, 34);
        // Units: millimolar; Initial value: 140.557
        
        // Lookup table indexing
        const bool _oob_0 = Cellclancy_rudy_2002FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellclancy_rudy_2002FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + 1666.6666666666667 * var_chaste_interface__calcium_dynamics__Cai); // dimensionless
        const double var_calcium_background_current__E_Ca = 13.356169352749133 * log(NV_Ith_S(mParameters, 1) / var_chaste_interface__calcium_dynamics__Cai); // millivolt
        const double var_fast_sodium_current__E_Na = 26.712338705498265 * log(NV_Ith_S(mParameters, 3) / var_chaste_interface__ionic_concentrations__Nai); // millivolt
        const double var_L_type_Ca_channel__i_Ca_L_converted = (7.8019226357407252 * (-0.34100000000000003 * NV_Ith_S(mParameters, 1) + var_chaste_interface__calcium_dynamics__Cai * _lt_0_row[0]) * NV_Ith_S(mParameters, 4) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__membrane__V / (_lt_0_row[1]) + 0.0024381008236689767 * (-0.75 * NV_Ith_S(mParameters, 3) + 0.75 * var_chaste_interface__ionic_concentrations__Nai * _lt_0_row[2]) * NV_Ith_S(mParameters, 4) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__membrane__V / (_lt_0_row[3]) + 0.00069711623550831479 * (-0.75 * NV_Ith_S(mParameters, 2) + 0.75 * var_chaste_interface__ionic_concentrations__Ki * _lt_0_row[2]) * NV_Ith_S(mParameters, 4) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__membrane__V / (_lt_0_row[3])) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        const double var_Na_Ca_exchanger__i_NaCa_converted = (-pow(NV_Ith_S(mParameters, 3), 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * NV_Ith_S(mParameters, 1) * _lt_0_row[2]) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 10) * _lt_0_row[4] / (1.0 + 0.0001 * (pow(NV_Ith_S(mParameters, 3), 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * NV_Ith_S(mParameters, 1) * _lt_0_row[2]) * _lt_0_row[4]); // uA_per_cm2
        const double var_T_type_Ca_channel__i_Ca_T = 0.050000000000000003 * pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2) * (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_chaste_interface__T_type_Ca_channel_g_gate__g; // microA_per_microF
        const double var_calcium_background_current__i_Ca_b = 0.003016 * var_chaste_interface__membrane__V - 0.003016 * var_calcium_background_current__E_Ca; // microA_per_microF
        const double var_fast_sodium_current__i_Na_converted = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * HeartConfig::Instance()->GetCapacitance() * var_chaste_interface__Na_channel_states__P_O_Na * NV_Ith_S(mParameters, 6); // uA_per_cm2
        const double var_non_specific_calcium_activated_current__P_ns_Ca = 0; // cm_per_second
        const double var_non_specific_calcium_activated_current__i_ns_Ca = 3612.0012202503358 * (-0.75 * NV_Ith_S(mParameters, 2) + 0.75 * var_chaste_interface__ionic_concentrations__Ki * _lt_0_row[2]) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((1.0 + 1.7279999999999996e-9 / pow(var_chaste_interface__calcium_dynamics__Cai, 3)) * (_lt_0_row[3])) + 3612.0012202503358 * (-0.75 * NV_Ith_S(mParameters, 3) + 0.75 * var_chaste_interface__ionic_concentrations__Nai * _lt_0_row[2]) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((1.0 + 1.7279999999999996e-9 / pow(var_chaste_interface__calcium_dynamics__Cai, 3)) * (_lt_0_row[3])); // microA_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr_converted = pow(NV_Ith_S(mParameters, 2), 0.58999999999999997) * (-26.712338705498265 * log(NV_Ith_S(mParameters, 2) / var_chaste_interface__ionic_concentrations__Ki) + var_chaste_interface__membrane__V) * HeartConfig::Instance()->GetCapacitance() * var_chaste_interface__Kr_channel_states__P_O * NV_Ith_S(mParameters, 8); // uA_per_cm2
        const double var_sarcolemmal_calcium_pump__i_p_Ca = 1.1499999999999999 * var_chaste_interface__calcium_dynamics__Cai / (0.00050000000000000001 + var_chaste_interface__calcium_dynamics__Cai); // microA_per_microF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks_converted = 0.433 * (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * (-26.712338705498265 * log((0.018329999999999999 * NV_Ith_S(mParameters, 3) + NV_Ith_S(mParameters, 2)) / (0.018329999999999999 * var_chaste_interface__ionic_concentrations__Nai + var_chaste_interface__ionic_concentrations__Ki)) + var_chaste_interface__membrane__V) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 9) * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2; // uA_per_cm2
        const double var_sodium_background_current__i_Na_b = 0.0040000000000000001 * var_chaste_interface__membrane__V - 0.0040000000000000001 * var_fast_sodium_current__E_Na; // microA_per_microF
        const double var_sodium_potassium_pump__i_NaK = 2.25 * NV_Ith_S(mParameters, 2) / ((1.0 + 100.0 / pow(var_chaste_interface__ionic_concentrations__Nai, 2)) * (1.5 + NV_Ith_S(mParameters, 2)) * (1.0 + _lt_0_row[6] + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * NV_Ith_S(mParameters, 3))) * _lt_0_row[5])); // microA_per_microF
        const double var_time_independent_potassium_current__E_K = 26.712338705498265 * log(NV_Ith_S(mParameters, 2) / var_chaste_interface__ionic_concentrations__Ki); // millivolt
        const double var_ATP_sensitive_potassium_current__i_K_ATP = 1.921898339896919e-8 * pow(NV_Ith_S(mParameters, 2), 0.23999999999999999) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V); // microA_per_microF
        const double var_plateau_potassium_current__i_Kp = 0.0055199999999999997 * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) / (_lt_0_row[7]); // microA_per_microF
        const double var_sodium_activated_potassium_current__i_K_Na = 0; // microA_per_microF
        const double var_time_independent_potassium_current__i_K1_converted = 438.93811257017387 * sqrt(NV_Ith_S(mParameters, 2)) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 7) / ((1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K)) * (1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K)) + 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V)))); // uA_per_cm2
        const double var_transient_outward_current__i_to_converted = 1.1000000000000001 * pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 11) * var_chaste_interface__transient_outward_current_ydv_gate__ydv * _lt_0_row[8]; // uA_per_cm2
        const double var_chaste_interface__i_ionic = HeartConfig::Instance()->GetCapacitance() * var_ATP_sensitive_potassium_current__i_K_ATP + HeartConfig::Instance()->GetCapacitance() * var_T_type_Ca_channel__i_Ca_T + HeartConfig::Instance()->GetCapacitance() * var_calcium_background_current__i_Ca_b + HeartConfig::Instance()->GetCapacitance() * var_non_specific_calcium_activated_current__i_ns_Ca + HeartConfig::Instance()->GetCapacitance() * var_plateau_potassium_current__i_Kp + HeartConfig::Instance()->GetCapacitance() * var_sarcolemmal_calcium_pump__i_p_Ca + HeartConfig::Instance()->GetCapacitance() * var_sodium_activated_potassium_current__i_K_Na + HeartConfig::Instance()->GetCapacitance() * var_sodium_background_current__i_Na_b + HeartConfig::Instance()->GetCapacitance() * var_sodium_potassium_pump__i_NaK + var_L_type_Ca_channel__i_Ca_L_converted + var_Na_Ca_exchanger__i_NaCa_converted + var_fast_sodium_current__i_Na_converted + var_rapid_delayed_rectifier_potassium_current__i_Kr_converted + var_slow_delayed_rectifier_potassium_current__i_Ks_converted + var_time_independent_potassium_current__i_K1_converted + var_transient_outward_current__i_to_converted; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellclancy_rudy_2002FromCellMLCvodeOpt::EvaluateYDerivatives(double var_chaste_interface__environment__time_converted, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__calcium_dynamics__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.000104
        double var_chaste_interface__Na_channel_states__P_O_Na = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 3.756e-13
        double var_chaste_interface__Na_channel_states__P_C1 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 4.744e-10
        double var_chaste_interface__Na_channel_states__P_C2 = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 9.776e-08
        double var_chaste_interface__Na_channel_states__P_C3 = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 7.583e-06
        double var_chaste_interface__Na_channel_states__P_IF = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 8.147e-11
        double var_chaste_interface__Na_channel_states__P_IC3 = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 1.302e-06
        double var_chaste_interface__Na_channel_states__P_IC2 = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 1.679e-08
        double var_chaste_interface__Na_channel_states__P_IM1 = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 9.736e-12
        double var_chaste_interface__Na_channel_states__P_IM2 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 6.187e-14
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 3.289e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.99975
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.000983
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.9942
        double var_chaste_interface__Kr_channel_states__P_O = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 1.104e-10
        double var_chaste_interface__Kr_channel_states__P_C1 = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 3.4083e-08
        double var_chaste_interface__Kr_channel_states__P_C2 = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 1.69e-08
        double var_chaste_interface__Kr_channel_states__P_C3 = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 4.949e-06
        double var_chaste_interface__Kr_channel_states__P_I = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 3.386e-11
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.01167
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 0.99998
        double var_chaste_interface__calcium_dynamics__Ca_JSR = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 1.516
        double var_chaste_interface__calcium_dynamics__Ca_NSR = NV_Ith_S(rY, 25);
        // Units: millimolar; Initial value: 1.518
        double var_chaste_interface__calcium_dynamics__APtrack = NV_Ith_S(rY, 26);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__APtrack2 = NV_Ith_S(rY, 27);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__APtrack3 = NV_Ith_S(rY, 28);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__Cainfluxtrack = NV_Ith_S(rY, 29);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack = NV_Ith_S(rY, 30);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack2 = NV_Ith_S(rY, 31);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack3 = NV_Ith_S(rY, 32);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ionic_concentrations__Nai = NV_Ith_S(rY, 33);
        // Units: millimolar; Initial value: 10.532
        double var_chaste_interface__ionic_concentrations__Ki = NV_Ith_S(rY, 34);
        // Units: millimolar; Initial value: 140.557

        // Lookup table indexing
        const bool _oob_0 = Cellclancy_rudy_2002FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellclancy_rudy_2002FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        double d_dt_chaste_interface_var_membrane__V;
        const double d_dt_chaste_interface_var_calcium_dynamics__APtrack2 = 0.001 * (((var_chaste_interface__calcium_dynamics__APtrack > 0.17999999999999999) && (var_chaste_interface__calcium_dynamics__APtrack < 0.20000000000000001)) ? (100000.0 - 100500.0 * var_chaste_interface__calcium_dynamics__APtrack2) : (-500.0 * var_chaste_interface__calcium_dynamics__APtrack2)); // 1 / millisecond
        const double d_dt_chaste_interface_var_calcium_dynamics__APtrack3 = 0.001 * (((var_chaste_interface__calcium_dynamics__APtrack > 0.17999999999999999) && (var_chaste_interface__calcium_dynamics__APtrack < 0.20000000000000001)) ? (100000.0 - 100500.0 * var_chaste_interface__calcium_dynamics__APtrack3) : (-10.0 * var_chaste_interface__calcium_dynamics__APtrack3)); // 1 / millisecond
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + 1666.6666666666667 * var_chaste_interface__calcium_dynamics__Cai); // dimensionless
        const double d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack2 = 0.001 * (((var_chaste_interface__calcium_dynamics__OVRLDtrack > 0.97999999999999998) && (var_chaste_interface__calcium_dynamics__OVRLDtrack2 < 0.97999999999999998)) ? (50000.0 - 50000.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (-500.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack2)); // 1 / millisecond
        const double d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack3 = 0.001 * (((var_chaste_interface__calcium_dynamics__OVRLDtrack > 0.97999999999999998) && (var_chaste_interface__calcium_dynamics__OVRLDtrack3 < 0.97999999999999998)) ? (50000.0 - 50000.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack3) : (-10.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack3)); // 1 / millisecond
        const double d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack = 0.001 * (((var_chaste_interface__calcium_dynamics__APtrack3 < 0.37) && (var_chaste_interface__calcium_dynamics__OVRLDtrack3 < 0.37) && (1 / (1.0 + 0.80000000000000004 / var_chaste_interface__calcium_dynamics__Ca_NSR) > 0.69999999999999996)) ? (50000.0 - 50000.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack) : (-500.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack)); // 1 / millisecond
        const double var_calcium_dynamics__i_leak = 0.58333333333333337 * var_chaste_interface__calcium_dynamics__Ca_NSR; // millimolar_per_second
        const double var_calcium_dynamics__i_rel = (-var_chaste_interface__calcium_dynamics__Cai + var_chaste_interface__calcium_dynamics__Ca_JSR) * ((var_chaste_interface__calcium_dynamics__Cainfluxtrack > 0.00018000000000000001) ? ((1.0 - var_chaste_interface__calcium_dynamics__APtrack2) * (-0.00018000000000000001 + var_chaste_interface__calcium_dynamics__Cainfluxtrack) * var_chaste_interface__calcium_dynamics__APtrack2 * NV_Ith_S(mParameters, 0) / (0.00062 + var_chaste_interface__calcium_dynamics__Cainfluxtrack)) : ((var_chaste_interface__calcium_dynamics__OVRLDtrack2 > 0) ? (4000.0 * (1.0 - var_chaste_interface__calcium_dynamics__OVRLDtrack2) * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (0))); // millimolar_per_second
        const double var_calcium_dynamics__i_up = 8.75 * var_chaste_interface__calcium_dynamics__Cai / (0.00092000000000000003 + var_chaste_interface__calcium_dynamics__Cai); // millimolar_per_second
        const double var_calcium_dynamics__i_tr = 5.5555555555555554 * var_chaste_interface__calcium_dynamics__Ca_NSR - 5.5555555555555554 * var_chaste_interface__calcium_dynamics__Ca_JSR; // millimolar_per_second
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_JSR = 0.001 * (-var_calcium_dynamics__i_rel + var_calcium_dynamics__i_tr) / (1.0 + 8.0 / pow((0.80000000000000004 + var_chaste_interface__calcium_dynamics__Ca_JSR), 2)); // millimolar / millisecond
        const double d_dt_chaste_interface_var_ionic_concentrations__Ki = 0; // millimolar / millisecond
        const double d_dt_chaste_interface_var_ionic_concentrations__Nai = 0; // millimolar / millisecond
        const double var_ionic_concentrations__V_myo = 8.2280000000000009e-12 * M_PI; // micro_litre
        const double var_calcium_dynamics__V_JSR = 0.0070588235294117632 * var_ionic_concentrations__V_myo; // micro_litre
        const double var_calcium_dynamics__V_NSR = 0.081176470588235281 * var_ionic_concentrations__V_myo; // micro_litre
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_NSR = 0.001 * var_calcium_dynamics__i_up - 0.001 * var_calcium_dynamics__i_leak - 0.001 * var_calcium_dynamics__V_JSR * var_calcium_dynamics__i_tr / var_calcium_dynamics__V_NSR; // millimolar / millisecond
        const double var_membrane__I_st = GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted) / HeartConfig::Instance()->GetCapacitance(); // microA_per_microF
        const double var_calcium_background_current__E_Ca = 13.356169352749133 * log(NV_Ith_S(mParameters, 1) / var_chaste_interface__calcium_dynamics__Cai); // millivolt
        const double var_fast_sodium_current__E_Na = 26.712338705498265 * log(NV_Ith_S(mParameters, 3) / var_chaste_interface__ionic_concentrations__Nai); // millivolt
        const double var_Kr_channel_states__alpha = _lt_0_row[9]; // per_second
        const double var_Kr_channel_states__alpha_alpha = _lt_0_row[10]; // per_second
        const double var_Kr_channel_states__alpha_i = 1975.5 * _lt_0_row[11] / NV_Ith_S(mParameters, 2); // per_second
        const double var_Kr_channel_states__beta = _lt_0_row[12]; // per_second
        const double d_dt_chaste_interface_var_Kr_channel_states__P_C2 = 1.077 * var_chaste_interface__Kr_channel_states__P_C1 + 0.001 * (-2172.0 - var_Kr_channel_states__beta) * var_chaste_interface__Kr_channel_states__P_C2 + 0.001 * var_chaste_interface__Kr_channel_states__P_C3 * var_Kr_channel_states__alpha; // 1 / millisecond
        const double d_dt_chaste_interface_var_Kr_channel_states__P_C3 = 0.001 * var_chaste_interface__Kr_channel_states__P_C2 * var_Kr_channel_states__beta - 0.001 * var_chaste_interface__Kr_channel_states__P_C3 * var_Kr_channel_states__alpha; // 1 / millisecond
        const double var_Kr_channel_states__beta_beta = _lt_0_row[13]; // per_second
        const double var_Kr_channel_states__beta_i = 1030.0720270741688 * pow(NV_Ith_S(mParameters, 2), (-0.29999999999999999)) * _lt_0_row[14]; // per_second
        const double d_dt_chaste_interface_var_Kr_channel_states__P_O = 0.001 * (-var_Kr_channel_states__beta_beta - var_Kr_channel_states__beta_i) * var_chaste_interface__Kr_channel_states__P_O + 0.001 * var_chaste_interface__Kr_channel_states__P_C1 * var_Kr_channel_states__alpha_alpha + 0.001 * var_chaste_interface__Kr_channel_states__P_I * var_Kr_channel_states__alpha_i; // 1 / millisecond
        const double var_Kr_channel_states__mu = var_Kr_channel_states__alpha_i * var_Kr_channel_states__beta_beta / var_Kr_channel_states__beta_i; // per_second
        const double d_dt_chaste_interface_var_Kr_channel_states__P_C1 = 2.1720000000000002 * var_chaste_interface__Kr_channel_states__P_C2 + 0.001 * (-1077.0 - 2 * var_Kr_channel_states__alpha_alpha) * var_chaste_interface__Kr_channel_states__P_C1 + 0.001 * var_chaste_interface__Kr_channel_states__P_I * var_Kr_channel_states__mu + 0.001 * var_chaste_interface__Kr_channel_states__P_O * var_Kr_channel_states__beta_beta; // 1 / millisecond
        const double d_dt_chaste_interface_var_Kr_channel_states__P_I = 0.001 * (-var_Kr_channel_states__alpha_i - var_Kr_channel_states__mu) * var_chaste_interface__Kr_channel_states__P_I + 0.001 * var_chaste_interface__Kr_channel_states__P_C1 * var_Kr_channel_states__alpha_alpha + 0.001 * var_chaste_interface__Kr_channel_states__P_O * var_Kr_channel_states__beta_i; // 1 / millisecond
        const double var_L_type_Ca_channel__i_CaCa = 7.8019226357407252 * (-0.34100000000000003 * NV_Ith_S(mParameters, 1) + var_chaste_interface__calcium_dynamics__Cai * _lt_0_row[0]) * NV_Ith_S(mParameters, 4) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__membrane__V / (_lt_0_row[1]); // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L = 0.0024381008236689767 * (-0.75 * NV_Ith_S(mParameters, 3) + 0.75 * var_chaste_interface__ionic_concentrations__Nai * _lt_0_row[2]) * NV_Ith_S(mParameters, 4) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__membrane__V / (_lt_0_row[3]) + 0.00069711623550831479 * (-0.75 * NV_Ith_S(mParameters, 2) + 0.75 * var_chaste_interface__ionic_concentrations__Ki * _lt_0_row[2]) * NV_Ith_S(mParameters, 4) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__membrane__V / (_lt_0_row[3]) + var_L_type_Ca_channel__i_CaCa; // microA_per_microF
        const double var_L_type_Ca_channel_d_gate__d_infinity = _lt_0_row[15]; // dimensionless
        const double var_L_type_Ca_channel_d_gate__tau_d = 0.028571428571428571 * (_lt_0_row[16]) * var_L_type_Ca_channel_d_gate__d_infinity / (10.0 + var_chaste_interface__membrane__V); // second
        const double d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d = 0.001 * (1.0 - var_chaste_interface__L_type_Ca_channel_d_gate__d) * var_L_type_Ca_channel_d_gate__d_infinity / var_L_type_Ca_channel_d_gate__tau_d - 0.001 * (1.0 - var_L_type_Ca_channel_d_gate__d_infinity) * var_chaste_interface__L_type_Ca_channel_d_gate__d / var_L_type_Ca_channel_d_gate__tau_d; // 1 / millisecond
        const double var_L_type_Ca_channel_f_gate__f_infinity = _lt_0_row[17]; // dimensionless
        const double var_L_type_Ca_channel_f_gate__tau_f = _lt_0_row[18]; // second
        const double d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f = 0.001 * (1.0 - var_chaste_interface__L_type_Ca_channel_f_gate__f) * var_L_type_Ca_channel_f_gate__f_infinity / var_L_type_Ca_channel_f_gate__tau_f - 0.001 * (1.0 - var_L_type_Ca_channel_f_gate__f_infinity) * var_chaste_interface__L_type_Ca_channel_f_gate__f / var_L_type_Ca_channel_f_gate__tau_f; // 1 / millisecond
        const double var_Na_Ca_exchanger__i_NaCa = (-pow(NV_Ith_S(mParameters, 3), 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * NV_Ith_S(mParameters, 1) * _lt_0_row[2]) * NV_Ith_S(mParameters, 10) * _lt_0_row[4] / (1.0 + 0.0001 * (pow(NV_Ith_S(mParameters, 3), 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * NV_Ith_S(mParameters, 1) * _lt_0_row[2]) * _lt_0_row[4]); // microA_per_microF
        const double var_Na_channel_states__alpha_11 = _lt_0_row[19]; // per_second
        const double var_Na_channel_states__alpha_12 = _lt_0_row[20]; // per_second
        const double var_Na_channel_states__alpha_13 = _lt_0_row[21]; // per_second
        const double var_Na_channel_states__alpha_2 = _lt_0_row[22]; // per_second
        const double var_Na_channel_states__alpha_3 = _lt_0_row[23]; // per_second
        const double var_Na_channel_states__alpha_4 = 0.01 * var_Na_channel_states__alpha_2; // per_second
        const double var_Na_channel_states__alpha_5 = 1.0526315789473684e-5 * var_Na_channel_states__alpha_2; // per_second
        const double var_Na_channel_states__beta_11 = _lt_0_row[24]; // per_second
        const double var_Na_channel_states__beta_12 = _lt_0_row[25]; // per_second
        const double var_Na_channel_states__beta_13 = _lt_0_row[26]; // per_second
        const double var_Na_channel_states__beta_3 = 8.4000000000000004 + 0.02 * var_chaste_interface__membrane__V; // per_second
        const double d_dt_chaste_interface_var_Na_channel_states__P_C1 = 0.001 * (-var_Na_channel_states__alpha_13 - var_Na_channel_states__beta_12 - var_Na_channel_states__beta_3) * var_chaste_interface__Na_channel_states__P_C1 + 0.001 * var_chaste_interface__Na_channel_states__P_C2 * var_Na_channel_states__alpha_12 + 0.001 * var_chaste_interface__Na_channel_states__P_IF * var_Na_channel_states__alpha_3 + 0.001 * var_chaste_interface__Na_channel_states__P_O_Na * var_Na_channel_states__beta_13; // 1 / millisecond
        const double d_dt_chaste_interface_var_Na_channel_states__P_C2 = 0.001 * (-var_Na_channel_states__alpha_12 - var_Na_channel_states__beta_11 - var_Na_channel_states__beta_3) * var_chaste_interface__Na_channel_states__P_C2 + 0.001 * var_chaste_interface__Na_channel_states__P_C1 * var_Na_channel_states__beta_12 + 0.001 * var_chaste_interface__Na_channel_states__P_C3 * var_Na_channel_states__alpha_11 + 0.001 * var_chaste_interface__Na_channel_states__P_IC2 * var_Na_channel_states__alpha_3; // 1 / millisecond
        const double d_dt_chaste_interface_var_Na_channel_states__P_C3 = 0.001 * (-var_Na_channel_states__alpha_11 - var_Na_channel_states__beta_3) * var_chaste_interface__Na_channel_states__P_C3 + 0.001 * var_chaste_interface__Na_channel_states__P_C2 * var_Na_channel_states__beta_11 + 0.001 * var_chaste_interface__Na_channel_states__P_IC3 * var_Na_channel_states__alpha_3; // 1 / millisecond
        const double d_dt_chaste_interface_var_Na_channel_states__P_IC2 = 0.001 * (-var_Na_channel_states__alpha_12 - var_Na_channel_states__alpha_3 - var_Na_channel_states__beta_11) * var_chaste_interface__Na_channel_states__P_IC2 + 0.001 * var_chaste_interface__Na_channel_states__P_C2 * var_Na_channel_states__beta_3 + 0.001 * var_chaste_interface__Na_channel_states__P_IC3 * var_Na_channel_states__alpha_11 + 0.001 * var_chaste_interface__Na_channel_states__P_IF * var_Na_channel_states__beta_12; // 1 / millisecond
        const double d_dt_chaste_interface_var_Na_channel_states__P_IC3 = 0.001 * (-var_Na_channel_states__alpha_11 - var_Na_channel_states__alpha_3) * var_chaste_interface__Na_channel_states__P_IC3 + 0.001 * var_chaste_interface__Na_channel_states__P_C3 * var_Na_channel_states__beta_3 + 0.001 * var_chaste_interface__Na_channel_states__P_IC2 * var_Na_channel_states__beta_11; // 1 / millisecond
        const double var_Na_channel_states__beta_2 = var_Na_channel_states__alpha_13 * var_Na_channel_states__alpha_2 * var_Na_channel_states__alpha_3 / (var_Na_channel_states__beta_13 * var_Na_channel_states__beta_3); // per_second
        const double d_dt_chaste_interface_var_Na_channel_states__P_O_Na = 0.001 * (-var_Na_channel_states__alpha_2 - var_Na_channel_states__beta_13) * var_chaste_interface__Na_channel_states__P_O_Na + 0.001 * var_chaste_interface__Na_channel_states__P_C1 * var_Na_channel_states__alpha_13 + 0.001 * var_chaste_interface__Na_channel_states__P_IF * var_Na_channel_states__beta_2; // 1 / millisecond
        const double var_Na_channel_states__beta_4 = var_Na_channel_states__alpha_3; // per_second
        const double d_dt_chaste_interface_var_Na_channel_states__P_IF = 0.001 * (-var_Na_channel_states__alpha_3 - var_Na_channel_states__alpha_4 - var_Na_channel_states__beta_12 - var_Na_channel_states__beta_2) * var_chaste_interface__Na_channel_states__P_IF + 0.001 * var_chaste_interface__Na_channel_states__P_C1 * var_Na_channel_states__beta_3 + 0.001 * var_chaste_interface__Na_channel_states__P_IC2 * var_Na_channel_states__alpha_12 + 0.001 * var_chaste_interface__Na_channel_states__P_IM1 * var_Na_channel_states__beta_4 + 0.001 * var_chaste_interface__Na_channel_states__P_O_Na * var_Na_channel_states__alpha_2; // 1 / millisecond
        const double var_Na_channel_states__beta_5 = 0.02 * var_Na_channel_states__alpha_3; // per_second
        const double d_dt_chaste_interface_var_Na_channel_states__P_IM1 = 0.001 * (-var_Na_channel_states__alpha_5 - var_Na_channel_states__beta_4) * var_chaste_interface__Na_channel_states__P_IM1 + 0.001 * var_chaste_interface__Na_channel_states__P_IF * var_Na_channel_states__alpha_4 + 0.001 * var_chaste_interface__Na_channel_states__P_IM2 * var_Na_channel_states__beta_5; // 1 / millisecond
        const double d_dt_chaste_interface_var_Na_channel_states__P_IM2 = 0.001 * var_chaste_interface__Na_channel_states__P_IM1 * var_Na_channel_states__alpha_5 - 0.001 * var_chaste_interface__Na_channel_states__P_IM2 * var_Na_channel_states__beta_5; // 1 / millisecond
        const double var_T_type_Ca_channel__i_Ca_T = 0.050000000000000003 * pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2) * (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_chaste_interface__T_type_Ca_channel_g_gate__g; // microA_per_microF
        const double d_dt_chaste_interface_var_T_type_Ca_channel_b_gate__b = 0.001 * (-var_chaste_interface__T_type_Ca_channel_b_gate__b + _lt_0_row[27]) / (_lt_0_row[28]); // 1 / millisecond
        const double d_dt_chaste_interface_var_T_type_Ca_channel_g_gate__g = 0.001 * (-var_chaste_interface__T_type_Ca_channel_g_gate__g + _lt_0_row[29]) * ((var_chaste_interface__membrane__V <= 0) ? (1 / (0.012 - 0.00087500000000000002 * var_chaste_interface__membrane__V)) : (83.333333333333329)); // 1 / millisecond
        const double var_calcium_background_current__i_Ca_b = 0.003016 * var_chaste_interface__membrane__V - 0.003016 * var_calcium_background_current__E_Ca; // microA_per_microF
        const double var_fast_sodium_current__i_Na = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__Na_channel_states__P_O_Na * NV_Ith_S(mParameters, 6); // microA_per_microF
        const double var_non_specific_calcium_activated_current__P_ns_Ca = 0; // cm_per_second
        const double var_non_specific_calcium_activated_current__i_ns_Ca = 3612.0012202503358 * (-0.75 * NV_Ith_S(mParameters, 2) + 0.75 * var_chaste_interface__ionic_concentrations__Ki * _lt_0_row[2]) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((1.0 + 1.7279999999999996e-9 / pow(var_chaste_interface__calcium_dynamics__Cai, 3)) * (_lt_0_row[3])) + 3612.0012202503358 * (-0.75 * NV_Ith_S(mParameters, 3) + 0.75 * var_chaste_interface__ionic_concentrations__Nai * _lt_0_row[2]) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((1.0 + 1.7279999999999996e-9 / pow(var_chaste_interface__calcium_dynamics__Cai, 3)) * (_lt_0_row[3])); // microA_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = pow(NV_Ith_S(mParameters, 2), 0.58999999999999997) * (-26.712338705498265 * log(NV_Ith_S(mParameters, 2) / var_chaste_interface__ionic_concentrations__Ki) + var_chaste_interface__membrane__V) * var_chaste_interface__Kr_channel_states__P_O * NV_Ith_S(mParameters, 8); // microA_per_microF
        const double var_sarcolemmal_calcium_pump__i_p_Ca = 1.1499999999999999 * var_chaste_interface__calcium_dynamics__Cai / (0.00050000000000000001 + var_chaste_interface__calcium_dynamics__Cai); // microA_per_microF
        const double d_dt_chaste_interface_var_calcium_dynamics__Cai = 0.001 * (-7.4312069233559624e-13 * (-2.0 * var_Na_Ca_exchanger__i_NaCa + var_L_type_Ca_channel__i_CaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_sarcolemmal_calcium_pump__i_p_Ca) / var_ionic_concentrations__V_myo + (-var_calcium_dynamics__i_up + var_calcium_dynamics__i_leak) * var_calcium_dynamics__V_NSR / var_ionic_concentrations__V_myo + var_calcium_dynamics__V_JSR * var_calcium_dynamics__i_rel / var_ionic_concentrations__V_myo) / (1.0 + 0.00011900000000000002 / pow((0.0023800000000000002 + var_chaste_interface__calcium_dynamics__Cai), 2) + 3.5000000000000004e-5 / pow((0.00050000000000000001 + var_chaste_interface__calcium_dynamics__Cai), 2)); // millimolar / millisecond
        const double d_dt_chaste_interface_var_calcium_dynamics__Cainfluxtrack = 0.001 * ((var_chaste_interface__calcium_dynamics__APtrack > 0.20000000000000001) ? (-7.4312069233559624e-13 * (-var_Na_Ca_exchanger__i_NaCa + var_L_type_Ca_channel__i_CaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_sarcolemmal_calcium_pump__i_p_Ca) / var_ionic_concentrations__V_myo) : ((var_chaste_interface__calcium_dynamics__APtrack2 > 0.01) ? (0) : (-500.0 * var_chaste_interface__calcium_dynamics__Cainfluxtrack))); // 1 / millisecond
        const double d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = 0.001 * (-var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 + _lt_0_row[30]) * (_lt_0_row[31]); // 1 / millisecond
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = 0.433 * (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * (-26.712338705498265 * log((0.018329999999999999 * NV_Ith_S(mParameters, 3) + NV_Ith_S(mParameters, 2)) / (0.018329999999999999 * var_chaste_interface__ionic_concentrations__Nai + var_chaste_interface__ionic_concentrations__Ki)) + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 9) * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2; // microA_per_microF
        const double d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = 0.001 * (-var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 + _lt_0_row[30]) * (_lt_0_row[32]); // 1 / millisecond
        const double var_sodium_background_current__i_Na_b = 0.0040000000000000001 * var_chaste_interface__membrane__V - 0.0040000000000000001 * var_fast_sodium_current__E_Na; // microA_per_microF
        const double var_sodium_potassium_pump__i_NaK = 2.25 * NV_Ith_S(mParameters, 2) / ((1.0 + 100.0 / pow(var_chaste_interface__ionic_concentrations__Nai, 2)) * (1.5 + NV_Ith_S(mParameters, 2)) * (1.0 + _lt_0_row[6] + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * NV_Ith_S(mParameters, 3))) * _lt_0_row[5])); // microA_per_microF
        const double var_time_independent_potassium_current__E_K = 26.712338705498265 * log(NV_Ith_S(mParameters, 2) / var_chaste_interface__ionic_concentrations__Ki); // millivolt
        const double var_ATP_sensitive_potassium_current__i_K_ATP = 1.921898339896919e-8 * pow(NV_Ith_S(mParameters, 2), 0.23999999999999999) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V); // microA_per_microF
        const double var_plateau_potassium_current__i_Kp = 0.0055199999999999997 * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) / (_lt_0_row[7]); // microA_per_microF
        const double var_sodium_activated_potassium_current__i_K_Na = 0; // microA_per_microF
        const double var_time_independent_potassium_current__i_K1 = 438.93811257017387 * sqrt(NV_Ith_S(mParameters, 2)) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 7) / ((1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K)) * (1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K)) + 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_transient_outward_current_ydv_gate__alpha_ydv = _lt_0_row[33]; // per_second
        const double var_transient_outward_current_ydv_gate__beta_ydv = _lt_0_row[34]; // per_second
        const double d_dt_chaste_interface_var_transient_outward_current_ydv_gate__ydv = 0.001 * (-var_chaste_interface__transient_outward_current_ydv_gate__ydv + var_transient_outward_current_ydv_gate__alpha_ydv / (var_transient_outward_current_ydv_gate__alpha_ydv + var_transient_outward_current_ydv_gate__beta_ydv)) * (var_transient_outward_current_ydv_gate__alpha_ydv + var_transient_outward_current_ydv_gate__beta_ydv); // 1 / millisecond
        const double var_transient_outward_current_zdv_gate__alpha_zdv = _lt_0_row[35]; // per_second
        const double var_transient_outward_current_zdv_gate__beta_zdv = _lt_0_row[36]; // per_second
        const double var_transient_outward_current__i_to = 1.1000000000000001 * pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 11) * var_chaste_interface__transient_outward_current_ydv_gate__ydv * _lt_0_row[8]; // microA_per_microF
        const double d_dt_chaste_interface_var_calcium_dynamics__APtrack = 0.001 * (((var_ATP_sensitive_potassium_current__i_K_ATP + var_L_type_Ca_channel__i_Ca_L + var_Na_Ca_exchanger__i_NaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_fast_sodium_current__i_Na + var_membrane__I_st + var_non_specific_calcium_activated_current__i_ns_Ca + var_plateau_potassium_current__i_Kp + var_rapid_delayed_rectifier_potassium_current__i_Kr + var_sarcolemmal_calcium_pump__i_p_Ca + var_slow_delayed_rectifier_potassium_current__i_Ks + var_sodium_activated_potassium_current__i_K_Na + var_sodium_background_current__i_Na_b + var_sodium_potassium_pump__i_NaK + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) / NV_Ith_S(mParameters, 5) < -150000.0) ? (100000.0 - 100500.0 * var_chaste_interface__calcium_dynamics__APtrack) : (-500.0 * var_chaste_interface__calcium_dynamics__APtrack)); // 1 / millisecond
        const double d_dt_chaste_interface_var_transient_outward_current_zdv_gate__zdv = 0.001 * (-var_chaste_interface__transient_outward_current_zdv_gate__zdv + var_transient_outward_current_zdv_gate__alpha_zdv / (var_transient_outward_current_zdv_gate__alpha_zdv + var_transient_outward_current_zdv_gate__beta_zdv)) * (var_transient_outward_current_zdv_gate__alpha_zdv + var_transient_outward_current_zdv_gate__beta_zdv); // 1 / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_membrane__V = 0.0;
        }
        else
        {
            d_dt_chaste_interface_var_membrane__V = -0.001 * (var_ATP_sensitive_potassium_current__i_K_ATP + var_L_type_Ca_channel__i_Ca_L + var_Na_Ca_exchanger__i_NaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_fast_sodium_current__i_Na + var_membrane__I_st + var_non_specific_calcium_activated_current__i_ns_Ca + var_plateau_potassium_current__i_Kp + var_rapid_delayed_rectifier_potassium_current__i_Kr + var_sarcolemmal_calcium_pump__i_p_Ca + var_slow_delayed_rectifier_potassium_current__i_Ks + var_sodium_activated_potassium_current__i_K_Na + var_sodium_background_current__i_Na_b + var_sodium_potassium_pump__i_NaK + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) / NV_Ith_S(mParameters, 5); // millivolt / millisecond
        }
        
        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_membrane__V;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_calcium_dynamics__Cai;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_Na_channel_states__P_O_Na;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_Na_channel_states__P_C1;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_Na_channel_states__P_C2;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_Na_channel_states__P_C3;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_Na_channel_states__P_IF;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_Na_channel_states__P_IC3;
        NV_Ith_S(rDY,8) = d_dt_chaste_interface_var_Na_channel_states__P_IC2;
        NV_Ith_S(rDY,9) = d_dt_chaste_interface_var_Na_channel_states__P_IM1;
        NV_Ith_S(rDY,10) = d_dt_chaste_interface_var_Na_channel_states__P_IM2;
        NV_Ith_S(rDY,11) = d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d;
        NV_Ith_S(rDY,12) = d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f;
        NV_Ith_S(rDY,13) = d_dt_chaste_interface_var_T_type_Ca_channel_b_gate__b;
        NV_Ith_S(rDY,14) = d_dt_chaste_interface_var_T_type_Ca_channel_g_gate__g;
        NV_Ith_S(rDY,15) = d_dt_chaste_interface_var_Kr_channel_states__P_O;
        NV_Ith_S(rDY,16) = d_dt_chaste_interface_var_Kr_channel_states__P_C1;
        NV_Ith_S(rDY,17) = d_dt_chaste_interface_var_Kr_channel_states__P_C2;
        NV_Ith_S(rDY,18) = d_dt_chaste_interface_var_Kr_channel_states__P_C3;
        NV_Ith_S(rDY,19) = d_dt_chaste_interface_var_Kr_channel_states__P_I;
        NV_Ith_S(rDY,20) = d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1;
        NV_Ith_S(rDY,21) = d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2;
        NV_Ith_S(rDY,22) = d_dt_chaste_interface_var_transient_outward_current_zdv_gate__zdv;
        NV_Ith_S(rDY,23) = d_dt_chaste_interface_var_transient_outward_current_ydv_gate__ydv;
        NV_Ith_S(rDY,24) = d_dt_chaste_interface_var_calcium_dynamics__Ca_JSR;
        NV_Ith_S(rDY,25) = d_dt_chaste_interface_var_calcium_dynamics__Ca_NSR;
        NV_Ith_S(rDY,26) = d_dt_chaste_interface_var_calcium_dynamics__APtrack;
        NV_Ith_S(rDY,27) = d_dt_chaste_interface_var_calcium_dynamics__APtrack2;
        NV_Ith_S(rDY,28) = d_dt_chaste_interface_var_calcium_dynamics__APtrack3;
        NV_Ith_S(rDY,29) = d_dt_chaste_interface_var_calcium_dynamics__Cainfluxtrack;
        NV_Ith_S(rDY,30) = d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack;
        NV_Ith_S(rDY,31) = d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack2;
        NV_Ith_S(rDY,32) = d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack3;
        NV_Ith_S(rDY,33) = d_dt_chaste_interface_var_ionic_concentrations__Nai;
        NV_Ith_S(rDY,34) = d_dt_chaste_interface_var_ionic_concentrations__Ki;
    }

    void Cellclancy_rudy_2002FromCellMLCvodeOpt::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time_converted, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__calcium_dynamics__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.000104
        double var_chaste_interface__Na_channel_states__P_O_Na = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 3.756e-13
        double var_chaste_interface__Na_channel_states__P_C1 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 4.744e-10
        double var_chaste_interface__Na_channel_states__P_C2 = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 9.776e-08
        double var_chaste_interface__Na_channel_states__P_C3 = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 7.583e-06
        double var_chaste_interface__Na_channel_states__P_IF = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 8.147e-11
        double var_chaste_interface__Na_channel_states__P_IC3 = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 1.302e-06
        double var_chaste_interface__Na_channel_states__P_IC2 = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 1.679e-08
        double var_chaste_interface__Na_channel_states__P_IM1 = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 9.736e-12
        double var_chaste_interface__Na_channel_states__P_IM2 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 6.187e-14
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 3.289e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.99975
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.000983
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.9942
        double var_chaste_interface__Kr_channel_states__P_O = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 1.104e-10
        double var_chaste_interface__Kr_channel_states__P_C1 = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 3.4083e-08
        double var_chaste_interface__Kr_channel_states__P_C2 = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 1.69e-08
        double var_chaste_interface__Kr_channel_states__P_C3 = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 4.949e-06
        double var_chaste_interface__Kr_channel_states__P_I = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 3.386e-11
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.01167
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 0.99998
        double var_chaste_interface__calcium_dynamics__Ca_JSR = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 1.516
        double var_chaste_interface__calcium_dynamics__Ca_NSR = NV_Ith_S(rY, 25);
        // Units: millimolar; Initial value: 1.518
        double var_chaste_interface__calcium_dynamics__APtrack = NV_Ith_S(rY, 26);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__APtrack2 = NV_Ith_S(rY, 27);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__APtrack3 = NV_Ith_S(rY, 28);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__Cainfluxtrack = NV_Ith_S(rY, 29);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack = NV_Ith_S(rY, 30);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack2 = NV_Ith_S(rY, 31);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack3 = NV_Ith_S(rY, 32);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ionic_concentrations__Nai = NV_Ith_S(rY, 33);
        // Units: millimolar; Initial value: 10.532
        double var_chaste_interface__ionic_concentrations__Ki = NV_Ith_S(rY, 34);
        // Units: millimolar; Initial value: 140.557
        
        // Lookup table indexing
        const bool _oob_0 = Cellclancy_rudy_2002FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellclancy_rudy_2002FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);
const double var_x0 = exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V);
        const double var_x1 = 1.0 + var_x0;
        const double var_x2 = 1 / var_x1;
        const double var_x3 = 0.0055199999999999997 * var_x2;
        const double var_x4 = pow(NV_Ith_S(mParameters, 2), 0.23999999999999999);
        const double var_x5 = 1.921898339896919e-8 * var_x4;
        const double var_x6 = var_chaste_interface__Na_channel_states__P_O_Na * NV_Ith_S(mParameters, 6);
        const double var_x7 = pow(NV_Ith_S(mParameters, 2), 0.58999999999999997) * NV_Ith_S(mParameters, 8);
        const double var_x8 = var_x7 * var_chaste_interface__Kr_channel_states__P_O;
        const double var_x9 = 1 / var_chaste_interface__ionic_concentrations__Ki;
        const double var_x10 = log(var_x9 * NV_Ith_S(mParameters, 2));
        const double var_x11 = -26.712338705498265 * var_x10 + var_chaste_interface__membrane__V;
        const double var_x12 = 1 / var_chaste_interface__calcium_dynamics__Cai;
        const double var_x13 = pow(var_x12, 1.3999999999999999);
        const double var_x14 = 1.0 + 6.4818210260626455e-7 * var_x13;
        const double var_x15 = 1 / var_x14;
        const double var_x16 = (0.433 + 0.25979999999999998 * var_x15) * NV_Ith_S(mParameters, 9);
        const double var_x17 = var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2;
        const double var_x18 = var_x16 * var_x17;
        const double var_x19 = _lt_0_row[8];
        const double var_x20 = var_x19 * pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * NV_Ith_S(mParameters, 11);
        const double var_x21 = var_x20 * var_chaste_interface__transient_outward_current_ydv_gate__ydv;
        const double var_x22 = 1.1000000000000001 * var_x21;
        const double var_x23 = exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 6.3708927812613361 * var_x10);
        const double var_x24 = 1.0 + var_x23;
        const double var_x25 = 1 / var_x24;
        const double var_x26 = exp(-2.4444678999999998 + 13.738155796237757 * var_x10 - 0.51429999999999998 * var_chaste_interface__membrane__V);
        const double var_x27 = 1.0 + var_x26;
        const double var_x28 = 1 / var_x27;
        const double var_x29 = exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 2.1455350448256207 * var_x10);
        const double var_x30 = exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 1.6494869150645177 * var_x10);
        const double var_x31 = var_x30 + 0.49124000000000001 * var_x29;
        const double var_x32 = var_x28 * var_x31;
        const double var_x33 = 1 / (1000.0 * var_x32 + 1020.0 * var_x25);
        const double var_x34 = sqrt(NV_Ith_S(mParameters, 2));
        const double var_x35 = var_x25 * var_x34 * NV_Ith_S(mParameters, 7);
        const double var_x36 = var_x33 * var_x35;
        const double var_x37 = 438.93811257017387 * var_x36;
        const double var_x38 = pow(NV_Ith_S(mParameters, 3), 3);
        const double var_x39 = var_x38 * var_chaste_interface__calcium_dynamics__Cai;
        const double var_x40 = pow(var_chaste_interface__ionic_concentrations__Nai, 3);
        const double var_x41 = 0.037435883507802616 * var_chaste_interface__membrane__V;
        const double var_x42 = exp(var_x41);
        const double var_x43 = var_x42 * NV_Ith_S(mParameters, 1);
        const double var_x44 = var_x40 * var_x43;
        const double var_x45 = var_x44 - var_x39;
        const double var_x46 = _lt_0_row[4];
        const double var_x47 = 0.031820500981632228 * var_x46;
        const double var_x48 = 1.0 + 0.0001 * var_x46 * (var_x39 + var_x44);
        const double var_x49 = NV_Ith_S(mParameters, 10) / var_x48;
        const double var_x50 = var_x45 * var_x47 * var_x49;
        const double var_x51 = var_x45 * NV_Ith_S(mParameters, 10) / pow(var_x48, 2);
        const double var_x52 = var_x46 * var_x51 * (var_x47 * (0.0001 * var_x39 + 0.0001 * var_x44) - 3.7435883507802621e-6 * var_x44 * var_x46);
        const double var_x53 = 1 / (1.5 + NV_Ith_S(mParameters, 2));
        const double var_x54 = exp(-0.003743588350780262 * var_chaste_interface__membrane__V);
        const double var_x55 = exp(0.01485884101040119 * NV_Ith_S(mParameters, 3));
        const double var_x56 = exp(-var_x41);
        const double var_x57 = 1.0 + 0.1245 * var_x54 + 0.036499999999999998 * var_x56 * (-0.14285714285714285 + 0.14285714285714285 * var_x55);
        const double var_x58 = pow(var_chaste_interface__ionic_concentrations__Nai, 2);
        const double var_x59 = 1 / var_x58;
        const double var_x60 = 2.25 / (1.0 + 100.0 * var_x59);
        const double var_x61 = var_x46 * var_x49;
        const double var_x62 = var_x44 * var_x61;
        const double var_x63 = 0.037435883507802616 * var_x62;
        const double var_x64 = -1.0 + var_x42;
        const double var_x65 = 1 / var_x64;
        const double var_x66 = 1 / (1.0 + 1666.6666666666667 * var_chaste_interface__calcium_dynamics__Cai);
        const double var_x67 = var_x66 * NV_Ith_S(mParameters, 4) * var_chaste_interface__L_type_Ca_channel_f_gate__f;
        const double var_x68 = var_x67 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x69 = var_x65 * var_x68;
        const double var_x70 = 0.75 * var_x42;
        const double var_x71 = -0.75 * NV_Ith_S(mParameters, 3) + var_x70 * var_chaste_interface__ionic_concentrations__Nai;
        const double var_x72 = 0.0024381008236689767 * var_x71;
        const double var_x73 = var_x69 * var_x72;
        const double var_x74 = -0.75 * NV_Ith_S(mParameters, 2) + var_x70 * var_chaste_interface__ionic_concentrations__Ki;
        const double var_x75 = 0.00069711623550831479 * var_x74;
        const double var_x76 = var_x69 * var_x75;
        const double var_x77 = var_x23 / pow(var_x24, 2);
        const double var_x78 = 1000.0 * var_x28;
        const double var_x79 = var_x26 * var_x31 / pow(var_x27, 2);
        const double var_x80 = 0.0004218936106979757 * var_x11 * var_x35 / pow((var_x25 + 0.98039215686274506 * var_x32), 2);
        const double var_x81 = var_x11 * var_x33 * var_x34 * NV_Ith_S(mParameters, 7);
        const double var_x82 = var_x42 * var_x69 * var_chaste_interface__membrane__V;
        const double var_x83 = var_x68 * var_chaste_interface__membrane__V;
        const double var_x84 = var_x42 * var_x83 / pow(var_x64, 2);
        const double var_x85 = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2);
        const double var_x86 = var_x85 * var_chaste_interface__T_type_Ca_channel_g_gate__g;
        const double var_x87 = 0.050000000000000003 * var_x86;
        const double var_x88 = _lt_0_row[0];
        const double var_x89 = -1.0 + var_x88;
        const double var_x90 = 1 / var_x89;
        const double var_x91 = var_x88 * var_chaste_interface__calcium_dynamics__Cai;
        const double var_x92 = var_x91 - 0.34100000000000003 * NV_Ith_S(mParameters, 1);
        const double var_x93 = var_x90 * var_x92;
        const double var_x94 = 7.8019226357407252 * var_x93;
        const double var_x95 = var_x68 * var_x94;
        const double var_x96 = var_x83 * var_x90;
        const double var_x97 = var_x87 + var_x95 + 0.58414373385695628 * var_x91 * var_x96 - 0.58414373385695628 * var_x83 * var_x88 * var_x92 / pow(var_x89, 2);
        const double var_x98 = 1 / NV_Ith_S(mParameters, 5);
        const double var_x99 = 0.001 * var_x98;
        const double var_x100 = var_x38 * var_x61;
        const double var_x101 = var_x51 * pow(var_x46, 2);
        const double var_x102 = var_x101 * var_x38;
        const double var_x103 = 0.0001 * var_x102;
        const double var_x104 = 1 / (0.018329999999999999 * var_chaste_interface__ionic_concentrations__Nai + var_chaste_interface__ionic_concentrations__Ki);
        const double var_x105 = -26.712338705498265 * log(var_x104 * (0.018329999999999999 * NV_Ith_S(mParameters, 3) + NV_Ith_S(mParameters, 2))) + var_chaste_interface__membrane__V;
        const double var_x106 = var_x105 * var_x17 * NV_Ith_S(mParameters, 9);
        const double var_x107 = NV_Ith_S(mParameters, 4) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__membrane__V;
        const double var_x108 = var_x107 * var_chaste_interface__L_type_Ca_channel_f_gate__f / pow((0.00059999999999999995 + var_chaste_interface__calcium_dynamics__Cai), 2);
        const double var_x109 = var_x108 * var_x65;
        const double var_x110 = 0.00050000000000000001 + var_chaste_interface__calcium_dynamics__Cai;
        const double var_x111 = 1.1499999999999999 / var_x110;
        const double var_x112 = pow(var_x110, (-2));
        const double var_x113 = var_x111 + 0.040282206767891383 * var_x12 + 7.8019226357407252 * var_x88 * var_x96 + 0.6678084676374566 * var_x12 * var_x86 - 1.1499999999999999 * var_x112 * var_chaste_interface__calcium_dynamics__Cai - 0.0046811535814444347 * var_x108 * var_x93;
        const double var_x114 = 1 / var_chaste_interface__ionic_concentrations__Nai;
        const double var_x115 = log(var_x114 * NV_Ith_S(mParameters, 3));
        const double var_x116 = -26.712338705498265 * var_x115 + var_chaste_interface__membrane__V;
        const double var_x117 = var_x67 * var_chaste_interface__membrane__V;
        const double var_x118 = var_x117 * var_x65;
        const double var_x119 = var_x107 * var_x66;
        const double var_x120 = var_x119 * var_x65;
        const double var_x121 = log(var_x12 * NV_Ith_S(mParameters, 1));
        const double var_x122 = -13.356169352749133 * var_x121 + var_chaste_interface__membrane__V;
        const double var_x123 = var_x122 * var_chaste_interface__T_type_Ca_channel_b_gate__b * var_chaste_interface__T_type_Ca_channel_g_gate__g;
        const double var_x124 = var_x122 * var_x85;
        const double var_x125 = 0.001 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2;
        const double var_x126 = var_x105 * var_x16 * var_x98;
        const double var_x127 = 0.001 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1;
        const double var_x128 = var_x11 * var_x98;
        const double var_x129 = var_x53 * NV_Ith_S(mParameters, 2) / var_x57;
        const double var_x130 = var_x104 * var_x18;
        const double var_x131 = var_x43 * var_x58;
        const double var_x132 = var_x131 * var_x61;
        const double var_x133 = 3 * var_x132;
        const double var_x134 = var_x101 * var_x131;
        const double var_x135 = 0.00030000000000000003 * var_x134;
        const double var_x136 = var_x77 * var_x9;
        const double var_x137 = var_x45 * var_x61;
        const double var_x138 = 0.003016 + var_x97;
        const double var_x139 = 0.0023800000000000002 + var_chaste_interface__calcium_dynamics__Cai;
        const double var_x140 = 1.0 + 0.00011900000000000002 / pow(var_x139, 2) + 3.5000000000000004e-5 * var_x112;
        const double var_x141 = 1 / var_x140;
        const double var_x142 = 1 / M_PI;
        const double var_x143 = 9.0316078310111333e-5 * var_x142;
        const double var_x144 = var_x141 * var_x143;
        const double var_x145 = 0.00062 + var_chaste_interface__calcium_dynamics__Cainfluxtrack;
        const double var_x146 = 1 / var_x145;
        const double var_x147 = 1.0 - var_chaste_interface__calcium_dynamics__APtrack2;
        const double var_x148 = -0.00018000000000000001 + var_chaste_interface__calcium_dynamics__Cainfluxtrack;
        const double var_x149 = var_x146 * var_x147 * var_x148 * NV_Ith_S(mParameters, 0);
        const double var_x150 = var_x149 * var_chaste_interface__calcium_dynamics__APtrack2;
        const double var_x151 = var_chaste_interface__calcium_dynamics__Cainfluxtrack > 0.00018000000000000001;
        const double var_x152 = 4000.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack2;
        const double var_x153 = var_chaste_interface__calcium_dynamics__OVRLDtrack2 > 0;
        const double var_x154 = ((var_x151) ? (-var_x150) : ((var_x153) ? ((-4000.0 + var_x152) * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (0)));
        const double var_x155 = 0.00092000000000000003 + var_chaste_interface__calcium_dynamics__Cai;
        const double var_x156 = 1 / var_x155;
        const double var_x157 = 0.71029411764705874 * var_x156;
        const double var_x158 = var_chaste_interface__calcium_dynamics__Cai / pow(var_x155, 2);
        const double var_x159 = 0.090316078310111333 * var_x142;
        const double var_x160 = -var_chaste_interface__calcium_dynamics__Cai + var_chaste_interface__calcium_dynamics__Ca_JSR;
        const double var_x161 = ((var_x151) ? (var_x150 * var_x160) : ((var_x153) ? (var_x152 * var_x160 * (1.0 - var_chaste_interface__calcium_dynamics__OVRLDtrack2)) : (0)));
        const double var_x162 = -0.040282206767891383 * var_x121 + var_x111 * var_chaste_interface__calcium_dynamics__Cai + var_x122 * var_x87 + var_x95 * var_chaste_interface__membrane__V;
        const double var_x163 = 0.00070463905573898956 * var_x142 * var_x93;
        const double var_x164 = var_x117 * var_x163;
        const double var_x165 = var_x119 * var_x163;
        const double var_x166 = 9.0316078310111336e-6 * var_x123 * var_x142;
        const double var_x167 = 4.5158039155055668e-6 * var_x124 * var_x142;
        const double var_x168 = 4000.0 - var_x152;
        const double var_x169 = ((var_x151) ? (var_x150) : ((var_x153) ? (var_x168 * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (0)));
        const double var_x170 = 7.0588235294117632e-6 * var_x141;
        const double var_x171 = var_x146 * var_x160 * var_chaste_interface__calcium_dynamics__APtrack2 * NV_Ith_S(mParameters, 0);
        const double var_x172 = ((var_x151) ? (var_x149 * var_x160 - var_x148 * var_x171) : (0));
        const double var_x173 = ((var_x151) ? (var_x147 * var_x171 - var_x147 * var_x148 * var_x160 * var_chaste_interface__calcium_dynamics__APtrack2 * NV_Ith_S(mParameters, 0) / pow(var_x145, 2)) : (0));
        const double var_x174 = ((var_x151) ? (0) : ((var_x153) ? (var_x160 * var_x168 + (4000.0 * var_chaste_interface__calcium_dynamics__Cai - 4000.0 * var_chaste_interface__calcium_dynamics__Ca_JSR) * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (0)));
        const double var_x175 = -0.04926108374384236 * var_chaste_interface__membrane__V;
        const double var_x176 = exp(0.49261083743842365 + var_x175);
        const double var_x177 = exp(0.033692722371967652 * var_chaste_interface__membrane__V);
        const double var_x178 = 0.30923180592991917 * var_x177;
        const double var_x179 = exp(-0.083333333333333329 * var_chaste_interface__membrane__V);
        const double var_x180 = exp(-0.0066666666666666671 * var_chaste_interface__membrane__V);
        const double var_x181 = (0.0085583333333333327 * var_x179 + 0.0016666666666666668 * var_x180) / pow((var_x180 + 0.4108 * var_x179), 2);
        const double var_x182 = 60.832000000000001 * var_x181;
        const double var_x183 = 1 / (8.4000000000000004 + 0.02 * var_chaste_interface__membrane__V);
        const double var_x184 = 1 / (0.25 * var_x180 + 0.1027 * var_x179);
        const double var_x185 = exp(-0.12987012987012986 * var_chaste_interface__membrane__V);
        const double var_x186 = 1 / var_x176;
        const double var_x187 = var_x177 * var_x184 * var_x185 * var_x186;
        const double var_x188 = var_x183 * var_x187;
        const double var_x189 = var_x187 / pow((1 + 0.0023809523809523807 * var_chaste_interface__membrane__V), 2);
        const double var_x190 = 0.96266383952581813 * var_x177 * var_x181 * var_x183 * var_x185 * var_x186;
        const double var_x191 = 9.1780000000000008 * var_x177;
        const double var_x192 = 0.22 * var_x176;
        const double var_x193 = 3.802 * var_x184;
        const double var_x194 = 0.060166489970363633 * var_x188;
        const double var_x195 = exp(0.24630541871921183 + var_x175);
        const double var_x196 = 0.009852216748768473 * var_x195;
        const double var_x197 = 4.926363636363636e-8 * var_x185;
        const double var_x198 = exp(-0.066666666666666666 * var_chaste_interface__membrane__V);
        const double var_x199 = 71.871455576559541 * (0.0068466666666666667 * var_x198 + 0.0015333333333333334 * var_x180) / pow((var_x180 + 0.44652173913043475 * var_x198), 2);
        const double var_x200 = 0.20000000000000001 * var_x195;
        const double var_x201 = -var_x200;
        const double var_x202 = 2.0000000000000002e-5 * var_chaste_interface__membrane__V;
        const double var_x203 = -0.0084000000000000012 - var_x202;
        const double var_x204 = 3.802 / (0.1027 * var_x198 + 0.23000000000000001 * var_x180);
        const double var_x205 = 3.7933e-7 * var_x185;
        const double var_x206 = exp(var_x175);
        const double var_x207 = 0.0094433497536945809 * var_x206;
        const double var_x208 = var_x207 - var_x199;
        const double var_x209 = exp(-0.058823529411764705 * var_chaste_interface__membrane__V);
        const double var_x210 = 95.049999999999983 * (0.0013333333333333335 * var_x180 + 0.0060411764705882356 * var_x209) / pow((var_x180 + 0.51349999999999996 * var_x209), 2);
        const double var_x211 = 0.19169999999999998 * var_x206;
        const double var_x212 = -var_x204 - var_x211;
        const double var_x213 = 3.802 / (0.20000000000000001 * var_x180 + 0.1027 * var_x209);
        const double var_x214 = -var_x210;
        const double var_x215 = -var_x213;
        const double var_x216 = 0.0030923180592991916 * var_x177;
        const double var_x217 = 0.0084000000000000012 + var_x202;
        const double var_x218 = 0.09178 * var_x177;
        const double var_x219 = -var_x205;
        const double var_x220 = 3.2550716413675699e-6 * var_x177;
        const double var_x221 = 9.8527272727272722e-10 * var_x185 * var_chaste_interface__Na_channel_states__P_IM2;
        const double var_x222 = 9.6610526315789479e-5 * var_x177;
        const double var_x223 = 7.5866000000000003e-9 * var_x185;
        const double var_x224 = 1.0 - var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x225 = exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V);
        const double var_x226 = 1.0 - var_x225;
        const double var_x227 = 1 / var_x226;
        const double var_x228 = 0.035000000000000003 * var_x227;
        const double var_x229 = 10.0 + var_chaste_interface__membrane__V;
        const double var_x230 = 0.005608974358974359 * var_x225 * var_x229;
        const double var_x231 = var_x230 / pow(var_x226, 2);
        const double var_x232 = 1.0 + var_x225;
        const double var_x233 = 1 / var_x232;
        const double var_x234 = 1.0 - var_x233;
        const double var_x235 = var_x232 * var_x234;
        const double var_x236 = var_x235 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x237 = var_x227 * var_x230 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x238 = var_x228 * var_x229;
        const double var_x239 = exp(-0.113569 * pow((1 + 0.10000000000000001 * var_chaste_interface__membrane__V), 2));
        const double var_x240 = 19.699999999999999 * var_x239;
        const double var_x241 = 0.001 - 0.001 * var_chaste_interface__L_type_Ca_channel_f_gate__f;
        const double var_x242 = exp(2.5 - 0.050000000000000003 * var_chaste_interface__membrane__V);
        const double var_x243 = 1.0 + var_x242;
        const double var_x244 = 0.029999999999999999 * var_x242 / pow(var_x243, 2);
        const double var_x245 = exp(4.0 + 0.125 * var_chaste_interface__membrane__V);
        const double var_x246 = 1.0 + var_x245;
        const double var_x247 = 0.125 * var_x245 / pow(var_x246, 2);
        const double var_x248 = 0.019699999999999999 * var_x239;
        const double var_x249 = -0.02 - var_x248;
        const double var_x250 = 1 / var_x246;
        const double var_x251 = 0.59999999999999998 / var_x243;
        const double var_x252 = var_x250 + var_x251;
        const double var_x253 = -0.022713800000000003 - 0.0022713799999999999 * var_chaste_interface__membrane__V;
        const double var_x254 = 1.0 - var_x250 - var_x251;
        const double var_x255 = exp(-1.2962962962962963 - 0.092592592592592587 * var_chaste_interface__membrane__V);
        const double var_x256 = 1.0 + var_x255;
        const double var_x257 = exp(5.5555555555555554 + 0.22222222222222221 * var_chaste_interface__membrane__V);
        const double var_x258 = 1.0 + var_x257;
        const double var_x259 = 1 / var_x258;
        const double var_x260 = 1 / (0.0037000000000000002 + 0.0061000000000000004 * var_x259);
        const double var_x261 = exp(10.714285714285715 + 0.17857142857142858 * var_chaste_interface__membrane__V);
        const double var_x262 = 1.0 + var_x261;
        const double var_x263 = 1 / (0.012 - 0.00087500000000000002 * var_chaste_interface__membrane__V);
        const double var_x264 = var_x261 / pow(var_x262, 2);
        const double var_x265 = var_chaste_interface__membrane__V <= 0;
        const double var_x266 = exp(-0.021579999999999998 * var_chaste_interface__membrane__V);
        const double var_x267 = _lt_0_row[14];
        const double var_x268 = var_x267 * pow(NV_Ith_S(mParameters, 2), (-0.29999999999999999));
        const double var_x269 = 0.00097032784950386709 * var_x268;
        const double var_x270 = 0.055471529999999998 * var_chaste_interface__membrane__V;
        const double var_x271 = exp(-1.9969750799999999 + var_x270);
        const double var_x272 = var_x271 * var_chaste_interface__Kr_channel_states__P_C1;
        const double var_x273 = 0.0036333852149999998 * var_x272;
        const double var_x274 = _lt_0_row[11];
        const double var_x275 = var_x274 / NV_Ith_S(mParameters, 2);
        const double var_x276 = 0.04646376 * var_x275;
        const double var_x277 = 0.0029357000000000003 * var_x266;
        const double var_x278 = 1.0300720270741688 * var_x268;
        const double var_x279 = 0.065500000000000003 * var_x271;
        const double var_x280 = 1.9755 * var_x275;
        const double var_x281 = var_x266 * var_x274 * pow(NV_Ith_S(mParameters, 2), (-0.69999999999999996)) / var_x267;
        const double var_x282 = 0.00025922405137351976 * var_x281;
        const double var_x283 = 0.0056301648793171408 * var_x281;
        const double var_x284 = exp(-0.036588000000000002 * var_chaste_interface__membrane__V);
        const double var_x285 = var_x284 * var_chaste_interface__Kr_channel_states__P_C2;
        const double var_x286 = exp(-0.66565836 + var_x270);
        const double var_x287 = 0.0030786699149999998 * var_x286 * var_chaste_interface__Kr_channel_states__P_C3;
        const double var_x288 = 0.0023570000000000002 * var_x284;
        const double var_x289 = 0.055500000000000001 * var_x286;
        const double var_x290 = exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__membrane__V);
        const double var_x291 = 1.0 + var_x290;
        const double var_x292 = 0.001 / var_x291;
        const double var_x293 = exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__V);
        const double var_x294 = -1.0 + var_x293;
        const double var_x295 = 1 / var_x294;
        const double var_x296 = 0.13100000000000001 * var_x295;
        const double var_x297 = exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__V);
        const double var_x298 = 1.0 - var_x297;
        const double var_x299 = 1 / var_x298;
        const double var_x300 = 0.071899999999999992 * var_x299;
        const double var_x301 = 30.0 + var_chaste_interface__membrane__V;
        const double var_x302 = var_x293 * var_x301 / pow(var_x294, 2);
        const double var_x303 = var_x297 * var_x301 / pow(var_x298, 2);
        const double var_x304 = 5.9880239520958083e-5 * var_x290 / pow(var_x291, 2);
        const double var_x305 = var_x295 * var_x301;
        const double var_x306 = var_x299 * var_x301;
        const double var_x307 = 0.032750000000000001 * var_x295;
        const double var_x308 = 0.017974999999999998 * var_x299;
        const double var_x309 = 0.040000000000000001 * var_chaste_interface__membrane__V;
        const double var_x310 = exp(-1.6000000000000001 + var_x309);
        const double var_x311 = 1.0 + var_x310;
        const double var_x312 = var_x310 / var_x311;
        const double var_x313 = exp(-3.6000000000000001 - var_x309);
        const double var_x314 = 1.0 + var_x313;
        const double var_x315 = var_x313 / var_x314;
        const double var_x316 = 10000.0 * var_x312 + 10000.0 * var_x315;
        const double var_x317 = 1 / var_x316;
        const double var_x318 = 10.0 * var_x312;
        const double var_x319 = 400.0 * var_x312;
        const double var_x320 = 400.0 * pow(var_x313, 2) / pow(var_x314, 2);
        const double var_x321 = pow(var_x310, 2) / pow(var_x311, 2);
        const double var_x322 = 400.0 * var_x321;
        const double var_x323 = 400.0 * var_x315;
        const double var_x324 = 0.40000000000000002 * var_x317;
        const double var_x325 = 0.20000000000000001 * var_chaste_interface__membrane__V;
        const double var_x326 = exp(12.0 + var_x325);
        const double var_x327 = 1.0 + var_x326;
        const double var_x328 = 1 / var_x327;
        const double var_x329 = exp(5.0 + var_x325);
        const double var_x330 = 1.0 + var_x329;
        const double var_x331 = var_x329 / var_x330;
        const double var_x332 = 15.0 * var_x328 + 100.0 * var_x331;
        const double var_x333 = var_x326 / pow(var_x327, 2);
        const double var_x334 = 3.0 * var_x333;
        const double var_x335 = 20.0 * pow(var_x329, 2) / pow(var_x330, 2);
        const double var_x336 = 20.0 * var_x331;
        const double var_x337 = 1 / var_x332;
        const double var_x338 = 0.014999999999999999 * var_x328;
        const double var_x339 = 0.80000000000000004 + var_chaste_interface__calcium_dynamics__Ca_JSR;
        const double var_x340 = pow(var_x339, (-2));
        const double var_x341 = 1 / (1.0 + 8.0 * var_x340);
        const double var_x342 = 0.001 * var_x341;
        const double var_x343 = (var_chaste_interface__calcium_dynamics__APtrack > 0.17999999999999999) && (var_chaste_interface__calcium_dynamics__APtrack < 0.20000000000000001);
        const double var_x344 = var_chaste_interface__calcium_dynamics__APtrack > 0.20000000000000001;
        const double var_x345 = var_chaste_interface__calcium_dynamics__OVRLDtrack > 0.97999999999999998;
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x99 * (0.0070159999999999997 + var_x18 + var_x22 + var_x3 + var_x37 + var_x5 + var_x52 + var_x6 + var_x63 + var_x73 + var_x76 + var_x8 + var_x97 - var_x50 + var_x80 * (243.26999999999998 * var_x77 - 514.29999999999995 * var_x79 - var_x78 * (0.061749999999999999 * var_x30 + 0.039456396800000001 * var_x29)) + 6.8454343811362063e-5 * var_x82 * var_chaste_interface__ionic_concentrations__Nai + 1.9572871637915374e-5 * var_x82 * var_chaste_interface__ionic_concentrations__Ki + 0.011000000000000001 * var_x11 * var_x21 - 2.6097162183887167e-5 * var_x74 * var_x84 - 9.1272458415149417e-5 * var_x71 * var_x84 - 104.68673984798647 * var_x77 * var_x81 + 0.00092307692307692295 * var_x0 * var_x11 / pow(var_x1, 2) + var_x53 * var_x60 * (0.00046607674967214262 * var_x54 + 0.037435883507802616 * var_x56 * (-0.0052142857142857138 + 0.0052142857142857138 * var_x55)) * NV_Ith_S(mParameters, 2) / pow(var_x57, 2)));
        IJth(rJacobian, 1, 0) = -var_x144 * (var_x138 + 0.063641001963264457 * var_x137 - 2.0 * var_x52 - 0.074871767015605231 * var_x62);
        IJth(rJacobian, 2, 0) = var_x182 * var_chaste_interface__Na_channel_states__P_C1 + var_x190 * var_chaste_interface__Na_channel_states__P_IF + (-var_x178 + 0.01083743842364532 * var_x176) * var_chaste_interface__Na_channel_states__P_O_Na - 0.0028227905226106183 * var_x188 * var_chaste_interface__Na_channel_states__P_IF - 1.7053993755772005e-5 * var_x189 * var_chaste_interface__Na_channel_states__P_IF;
        IJth(rJacobian, 3, 0) = var_x199 * var_chaste_interface__Na_channel_states__P_C2 + (-2.0000000000000002e-5 + var_x196 - var_x182) * var_chaste_interface__Na_channel_states__P_C1 - var_x197 * var_chaste_interface__Na_channel_states__P_IF - 0.01083743842364532 * var_x176 * var_chaste_interface__Na_channel_states__P_O_Na;
        IJth(rJacobian, 4, 0) = var_x210 * var_chaste_interface__Na_channel_states__P_C3 + (-2.0000000000000002e-5 + var_x208) * var_chaste_interface__Na_channel_states__P_C2 - var_x196 * var_chaste_interface__Na_channel_states__P_C1 - var_x197 * var_chaste_interface__Na_channel_states__P_IC2;
        IJth(rJacobian, 5, 0) = (-2.0000000000000002e-5 + var_x214) * var_chaste_interface__Na_channel_states__P_C3 - var_x197 * var_chaste_interface__Na_channel_states__P_IC3 - var_x207 * var_chaste_interface__Na_channel_states__P_C2;
        IJth(rJacobian, 6, 0) = 2.0000000000000002e-5 * var_chaste_interface__Na_channel_states__P_C1 + var_x178 * var_chaste_interface__Na_channel_states__P_O_Na + var_x199 * var_chaste_interface__Na_channel_states__P_IC2 + (var_x196 + var_x197 - var_x190 - var_x216 + 0.0028227905226106183 * var_x188 + 1.7053993755772005e-5 * var_x189) * var_chaste_interface__Na_channel_states__P_IF - var_x197 * var_chaste_interface__Na_channel_states__P_IM1;
        IJth(rJacobian, 7, 0) = 2.0000000000000002e-5 * var_chaste_interface__Na_channel_states__P_C3 + (var_x197 + var_x214) * var_chaste_interface__Na_channel_states__P_IC3 - var_x207 * var_chaste_interface__Na_channel_states__P_IC2;
        IJth(rJacobian, 8, 0) = 2.0000000000000002e-5 * var_chaste_interface__Na_channel_states__P_C2 + var_x210 * var_chaste_interface__Na_channel_states__P_IC3 + (var_x197 + var_x208) * var_chaste_interface__Na_channel_states__P_IC2 - var_x196 * var_chaste_interface__Na_channel_states__P_IF;
        IJth(rJacobian, 9, 0) = -var_x221 + var_x216 * var_chaste_interface__Na_channel_states__P_IF + (var_x197 - var_x220) * var_chaste_interface__Na_channel_states__P_IM1;
        IJth(rJacobian, 10, 0) = var_x221 + var_x220 * var_chaste_interface__Na_channel_states__P_IM1;
        IJth(rJacobian, 11, 0) = var_x224 * var_x228 + var_x231 * var_x236 + var_x233 * var_x237 + var_x234 * var_x237 - var_x224 * var_x231 - var_x228 * var_x236;
        IJth(rJacobian, 12, 0) = var_x241 * (20.0 + var_x240) * (var_x244 - var_x247) + var_x249 * (var_x247 - var_x244) * var_chaste_interface__L_type_Ca_channel_f_gate__f + var_x240 * var_x241 * var_x252 * var_x253 - var_x248 * var_x253 * var_x254 * var_chaste_interface__L_type_Ca_channel_f_gate__f;
        IJth(rJacobian, 13, 0) = 9.2592592592592588e-5 * var_x255 * var_x260 / pow(var_x256, 2) + 0.036429872495446262 * var_x257 * (-var_chaste_interface__T_type_Ca_channel_b_gate__b + 1 / var_x256) / (pow(var_x258, 2) * pow((0.60655737704918034 + var_x259), 2));
        IJth(rJacobian, 14, 0) = ((var_x265) ? (0.006076388888888889 * (-var_chaste_interface__T_type_Ca_channel_g_gate__g + 1 / var_x262) / pow((1 - 0.072916666666666671 * var_chaste_interface__membrane__V), 2) - 0.00017857142857142857 * var_x263 * var_x264) : (-0.014880952380952382 * var_x264));
        IJth(rJacobian, 15, 0) = var_x273 + (-var_x269 + 6.3352406000000003e-5 * var_x266) * var_chaste_interface__Kr_channel_states__P_O - var_x276 * var_chaste_interface__Kr_channel_states__P_I;
        IJth(rJacobian, 16, 0) = -0.0072667704299999997 * var_x272 - var_x282 * var_chaste_interface__Kr_channel_states__P_I - 6.3352406000000003e-5 * var_x266 * var_chaste_interface__Kr_channel_states__P_O;
        IJth(rJacobian, 17, 0) = var_x287 + 8.6237916000000007e-5 * var_x285;
        IJth(rJacobian, 18, 0) = -var_x287 - 8.6237916000000007e-5 * var_x285;
        IJth(rJacobian, 19, 0) = var_x273 + var_x269 * var_chaste_interface__Kr_channel_states__P_O + (var_x276 + var_x282) * var_chaste_interface__Kr_channel_states__P_I;
        IJth(rJacobian, 20, 0) = var_x304 * (var_x296 * var_x301 + var_x300 * var_x301) + (var_x292 - var_x127) * (var_x296 + var_x300 - 0.0089997000000000011 * var_x302 - 0.0106412 * var_x303);
        IJth(rJacobian, 21, 0) = var_x304 * (var_x301 * var_x307 + var_x301 * var_x308) + (var_x292 - var_x125) * (var_x307 + var_x308 - 0.0022499250000000003 * var_x302 - 0.0026603 * var_x303);
        IJth(rJacobian, 22, 0) = var_x316 * (var_x312 * var_x324 - var_x321 * var_x324 + 9.9999999999999995e-8 * var_x312 * (var_x322 + var_x323 - var_x319 - var_x320) / pow((var_x312 + var_x315), 2)) + (-0.001 * var_chaste_interface__transient_outward_current_zdv_gate__zdv + var_x317 * var_x318) * (var_x319 + var_x320 - var_x322 - var_x323);
        IJth(rJacobian, 23, 0) = var_x332 * (-0.0030000000000000001 * var_x333 * var_x337 + 1.5e-6 * var_x328 * (var_x334 + var_x335 - var_x336) / pow((var_x331 + 0.14999999999999999 * var_x328), 2)) + (-0.001 * var_chaste_interface__transient_outward_current_ydv_gate__ydv + var_x337 * var_x338) * (var_x336 - var_x334 - var_x335);
        IJth(rJacobian, 29, 0) = ((var_x344) ? (-var_x143 * (var_x138 + var_x50 - var_x52 - var_x63)) : (0));
        IJth(rJacobian, 0, 1) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x99 * (var_x113 - var_x100 - var_x103 - 1.4628604942013857e-6 * var_x109 * var_x71 - 4.1826974130498884e-7 * var_x109 * var_x74 + 2.3575679435995052e-7 * var_x106 * var_x12 * var_x13 / pow(var_x14, 2)));
        IJth(rJacobian, 1, 1) = 0.001 * var_x141 * (-var_x157 + 0.71029411764705874 * var_x158 + 0.0070588235294117632 * var_x154 - var_x159 * (var_x113 + 2.0 * var_x100 + 0.00020000000000000001 * var_x102)) + 0.001 * (0.00023800000000000004 / pow(var_x139, 3) + 7.0000000000000007e-5 / pow(var_x110, 3)) * (0.047352941176470584 * var_chaste_interface__calcium_dynamics__Ca_NSR + 0.0070588235294117632 * var_x161 - var_x157 * var_chaste_interface__calcium_dynamics__Cai - var_x159 * (var_x162 + 0.003016 * var_chaste_interface__membrane__V - 2.0 * var_x137)) / pow(var_x140, 2);
        IJth(rJacobian, 24, 1) = -var_x154 * var_x342;
        IJth(rJacobian, 25, 1) = 0.0087500000000000008 * var_x156 - 0.0087500000000000008 * var_x158;
        IJth(rJacobian, 29, 1) = ((var_x344) ? (-var_x143 * (var_x100 + var_x103 + var_x113)) : (0));
        IJth(rJacobian, 0, 2) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x116 * var_x99 * NV_Ith_S(mParameters, 6));
        IJth(rJacobian, 2, 2) = -var_x191 - var_x192;
        IJth(rJacobian, 3, 2) = var_x192;
        IJth(rJacobian, 6, 2) = var_x191;
        IJth(rJacobian, 2, 3) = var_x193;
        IJth(rJacobian, 3, 3) = var_x201 + var_x203 - var_x193;
        IJth(rJacobian, 4, 3) = var_x200;
        IJth(rJacobian, 6, 3) = var_x217;
        IJth(rJacobian, 3, 4) = var_x204;
        IJth(rJacobian, 4, 4) = var_x203 + var_x212;
        IJth(rJacobian, 5, 4) = var_x211;
        IJth(rJacobian, 8, 4) = var_x217;
        IJth(rJacobian, 4, 5) = var_x213;
        IJth(rJacobian, 5, 5) = var_x203 + var_x215;
        IJth(rJacobian, 7, 5) = var_x217;
        IJth(rJacobian, 2, 6) = var_x194;
        IJth(rJacobian, 3, 6) = var_x205;
        IJth(rJacobian, 6, 6) = var_x201 + var_x219 - var_x194 - var_x218;
        IJth(rJacobian, 8, 6) = var_x200;
        IJth(rJacobian, 9, 6) = var_x218;
        IJth(rJacobian, 5, 7) = var_x205;
        IJth(rJacobian, 7, 7) = var_x215 + var_x219;
        IJth(rJacobian, 8, 7) = var_x213;
        IJth(rJacobian, 4, 8) = var_x205;
        IJth(rJacobian, 6, 8) = var_x204;
        IJth(rJacobian, 7, 8) = var_x211;
        IJth(rJacobian, 8, 8) = var_x212 + var_x219;
        IJth(rJacobian, 6, 9) = var_x205;
        IJth(rJacobian, 9, 9) = var_x219 - var_x222;
        IJth(rJacobian, 10, 9) = var_x222;
        IJth(rJacobian, 9, 10) = var_x223;
        IJth(rJacobian, 10, 10) = -var_x223;
        IJth(rJacobian, 0, 11) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x99 * (var_x117 * var_x94 + var_x118 * var_x72 + var_x118 * var_x75));
        IJth(rJacobian, 1, 11) = -var_x141 * var_x164;
        IJth(rJacobian, 11, 11) = -var_x238 - var_x235 * var_x238;
        IJth(rJacobian, 29, 11) = ((var_x344) ? (-var_x164) : (0));
        IJth(rJacobian, 0, 12) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x99 * (var_x119 * var_x94 + var_x120 * var_x72 + var_x120 * var_x75));
        IJth(rJacobian, 1, 12) = -var_x141 * var_x165;
        IJth(rJacobian, 12, 12) = var_x249 * var_x252 + var_x249 * var_x254;
        IJth(rJacobian, 29, 12) = ((var_x344) ? (-var_x165) : (0));
        IJth(rJacobian, 0, 13) = mSetVoltageDerivativeToZero ? 0.0 : (-0.0001 * var_x123 * var_x98);
        IJth(rJacobian, 1, 13) = -var_x141 * var_x166;
        IJth(rJacobian, 13, 13) = -0.001 * var_x260;
        IJth(rJacobian, 29, 13) = ((var_x344) ? (-var_x166) : (0));
        IJth(rJacobian, 0, 14) = mSetVoltageDerivativeToZero ? 0.0 : (-5.0000000000000002e-5 * var_x124 * var_x98);
        IJth(rJacobian, 1, 14) = -var_x141 * var_x167;
        IJth(rJacobian, 14, 14) = ((var_x265) ? (-0.001 * var_x263) : (-0.083333333333333329));
        IJth(rJacobian, 29, 14) = ((var_x344) ? (-var_x167) : (0));
        IJth(rJacobian, 0, 15) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x11 * var_x7 * var_x99);
        IJth(rJacobian, 15, 15) = -var_x277 - var_x278;
        IJth(rJacobian, 16, 15) = var_x277;
        IJth(rJacobian, 19, 15) = var_x278;
        IJth(rJacobian, 15, 16) = var_x279;
        IJth(rJacobian, 16, 16) = -1.077 - 0.13100000000000001 * var_x271;
        IJth(rJacobian, 17, 16) = 1.077;
        IJth(rJacobian, 19, 16) = var_x279;
        IJth(rJacobian, 16, 17) = 2.1720000000000002;
        IJth(rJacobian, 17, 17) = -2.1720000000000002 - var_x288;
        IJth(rJacobian, 18, 17) = var_x288;
        IJth(rJacobian, 17, 18) = var_x289;
        IJth(rJacobian, 18, 18) = -var_x289;
        IJth(rJacobian, 15, 19) = var_x280;
        IJth(rJacobian, 16, 19) = var_x283;
        IJth(rJacobian, 19, 19) = -var_x280 - var_x283;
        IJth(rJacobian, 0, 20) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x125 * var_x126);
        IJth(rJacobian, 20, 20) = -0.00013100000000000001 * var_x305 - 7.1899999999999999e-5 * var_x306;
        IJth(rJacobian, 0, 21) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x126 * var_x127);
        IJth(rJacobian, 21, 21) = -3.2750000000000003e-5 * var_x305 - 1.7975e-5 * var_x306;
        IJth(rJacobian, 0, 22) = mSetVoltageDerivativeToZero ? 0.0 : (-0.0033000000000000004 * var_x128 * var_x19 * pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 2) * NV_Ith_S(mParameters, 11) * var_chaste_interface__transient_outward_current_ydv_gate__ydv);
        IJth(rJacobian, 22, 22) = -var_x318 - 10.0 * var_x315;
        IJth(rJacobian, 0, 23) = mSetVoltageDerivativeToZero ? 0.0 : (-0.0011000000000000001 * var_x128 * var_x20);
        IJth(rJacobian, 23, 23) = -var_x338 - 0.10000000000000001 * var_x331;
        IJth(rJacobian, 1, 24) = var_x169 * var_x170;
        IJth(rJacobian, 24, 24) = var_x342 * (-5.5555555555555554 - var_x169) + 0.00025000000000000001 * (-var_x161 + 5.5555555555555554 * var_chaste_interface__calcium_dynamics__Ca_NSR - 5.5555555555555554 * var_chaste_interface__calcium_dynamics__Ca_JSR) / (pow(var_x339, 3) * pow((0.125 + var_x340), 2));
        IJth(rJacobian, 25, 24) = 0.00048309178743961351;
        IJth(rJacobian, 1, 25) = 4.7352941176470584e-5 * var_x141;
        IJth(rJacobian, 24, 25) = 0.0055555555555555558 * var_x341;
        IJth(rJacobian, 25, 25) = -0.001066425120772947;
        IJth(rJacobian, 26, 26) = ((var_x98 * (var_x137 + var_x162 + 0.0070159999999999997 * var_chaste_interface__membrane__V - 0.10684935482199306 * var_x115 + var_x11 * var_x22 + var_x11 * var_x3 + var_x11 * var_x37 + var_x11 * var_x5 + var_x11 * var_x8 + var_x116 * var_x6 + var_x129 * var_x60 + var_x73 * var_chaste_interface__membrane__V + var_x76 * var_chaste_interface__membrane__V + GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted) / HeartConfig::Instance()->GetCapacitance() + 0.433 * var_x106 * (1.0 + 0.59999999999999998 * var_x15)) < -150000.0) ? (-100.5) : (-0.5));
        IJth(rJacobian, 1, 27) = var_x170 * var_x172;
        IJth(rJacobian, 24, 27) = -var_x172 * var_x342;
        IJth(rJacobian, 27, 27) = ((var_x343) ? (-100.5) : (-0.5));
        IJth(rJacobian, 28, 28) = ((var_x343) ? (-100.5) : (-0.01));
        IJth(rJacobian, 1, 29) = var_x170 * var_x173;
        IJth(rJacobian, 24, 29) = -var_x173 * var_x342;
        IJth(rJacobian, 29, 29) = (((var_x344) || (var_chaste_interface__calcium_dynamics__APtrack2 > 0.01)) ? (0) : (-0.5));
        IJth(rJacobian, 30, 30) = (((var_chaste_interface__calcium_dynamics__APtrack3 < 0.37) && (var_chaste_interface__calcium_dynamics__OVRLDtrack3 < 0.37) && (1 / (1.0 + 0.80000000000000004 / var_chaste_interface__calcium_dynamics__Ca_NSR) > 0.69999999999999996)) ? (-50.0) : (-0.5));
        IJth(rJacobian, 1, 31) = var_x170 * var_x174;
        IJth(rJacobian, 24, 31) = -var_x174 * var_x342;
        IJth(rJacobian, 31, 31) = (((var_x345) && (var_chaste_interface__calcium_dynamics__OVRLDtrack2 < 0.97999999999999998)) ? (-50.0) : (-0.5));
        IJth(rJacobian, 32, 32) = (((var_x345) && (var_chaste_interface__calcium_dynamics__OVRLDtrack3 < 0.97999999999999998)) ? (-50.0) : (-0.01));
        IJth(rJacobian, 0, 33) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x99 * (var_x133 - var_x135 + 0.10684935482199306 * var_x114 + 0.0018285756177517324 * var_x82 + 0.48963716847178318 * var_x130 + 26.712338705498265 * var_x114 * var_x6 + 0.044999999999999998 * var_x129 / (var_x40 * pow((0.01 + var_x59), 2))));
        IJth(rJacobian, 1, 33) = -var_x144 * (0.00060000000000000006 * var_x134 - 6.0 * var_x132);
        IJth(rJacobian, 29, 33) = ((var_x344) ? (-var_x143 * (var_x135 - var_x133)) : (0));
        IJth(rJacobian, 0, 34) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x99 * (0.00052283717663123607 * var_x82 + 26.712338705498265 * var_x130 + var_x80 * (6498.310636886562 * var_x136 - var_x78 * (1.053972635420138 * var_x29 * var_x9 + 1.6494869150645177 * var_x30 * var_x9) - 13738.155796237757 * var_x79 * var_x9) + 29.383572576048092 * var_x21 * var_x9 + 5.1338399412861326e-7 * var_x4 * var_x9 + 0.14745210965435041 * var_x2 * var_x9 + 11725.06353372661 * var_x36 * var_x9 + 26.712338705498265 * var_x8 * var_x9 - 2796.4276527937964 * var_x136 * var_x81));
    }

    N_Vector Cellclancy_rudy_2002FromCellMLCvodeOpt::ComputeDerivedQuantities(double var_chaste_interface__environment__time_converted, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__calcium_dynamics__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.000104
        double var_chaste_interface__Na_channel_states__P_O_Na = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 3.756e-13
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 3.289e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.99975
        double var_chaste_interface__Kr_channel_states__P_O = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 1.104e-10
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.01167
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 0.99998
        double var_chaste_interface__calcium_dynamics__Ca_JSR = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 1.516
        double var_chaste_interface__calcium_dynamics__APtrack2 = NV_Ith_S(rY, 27);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__Cainfluxtrack = NV_Ith_S(rY, 29);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack2 = NV_Ith_S(rY, 31);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ionic_concentrations__Nai = NV_Ith_S(rY, 33);
        // Units: millimolar; Initial value: 10.532
        double var_chaste_interface__ionic_concentrations__Ki = NV_Ith_S(rY, 34);
        // Units: millimolar; Initial value: 140.557
        
        // Lookup table indexing
        const bool _oob_0 = Cellclancy_rudy_2002FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellclancy_rudy_2002FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_L_type_Ca_channel__P_Ca = 0.00054000000000000001; // cm_per_second
        const double var_L_type_Ca_channel__P_K = 1.9299999999999999e-7; // cm_per_second
        const double var_L_type_Ca_channel__P_Na = 6.75e-7; // cm_per_second
        const double var_L_type_Ca_channel__gamma_Cai = 1.0; // dimensionless
        const double var_L_type_Ca_channel__gamma_Cao = 0.34100000000000003; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ki = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ko = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nai = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nao = 0.75; // dimensionless
        const double var_L_type_Ca_channel_f_Ca_gate__Km_Ca = 0.00059999999999999995; // millimolar
        const double var_Na_Ca_exchanger__c2 = 0.0001; // millimolar
        const double var_Na_Ca_exchanger__gamma = 0.14999999999999999; // dimensionless
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + var_chaste_interface__calcium_dynamics__Cai / var_L_type_Ca_channel_f_Ca_gate__Km_Ca); // dimensionless
        const double var_calcium_dynamics__G_rel_overload = 4000.0; // per_second
        const double var_calcium_dynamics__K_mrel = 0.00080000000000000004; // millimolar
        const double var_calcium_dynamics__delta_Ca_ith = 0.00018000000000000001; // millimolar
        const double var_calcium_dynamics__G_rel = ((var_chaste_interface__calcium_dynamics__Cainfluxtrack > var_calcium_dynamics__delta_Ca_ith) ? ((1.0 - var_chaste_interface__calcium_dynamics__APtrack2) * (-var_calcium_dynamics__delta_Ca_ith + var_chaste_interface__calcium_dynamics__Cainfluxtrack) * var_chaste_interface__calcium_dynamics__APtrack2 * NV_Ith_S(mParameters, 0) / (-var_calcium_dynamics__delta_Ca_ith + var_chaste_interface__calcium_dynamics__Cainfluxtrack + var_calcium_dynamics__K_mrel)) : ((var_chaste_interface__calcium_dynamics__OVRLDtrack2 > 0) ? ((1.0 - var_chaste_interface__calcium_dynamics__OVRLDtrack2) * var_calcium_dynamics__G_rel_overload * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (0))); // per_second
        const double var_calcium_dynamics__i_rel = (-var_chaste_interface__calcium_dynamics__Cai + var_chaste_interface__calcium_dynamics__Ca_JSR) * var_calcium_dynamics__G_rel; // millimolar_per_second
        const double var_membrane__F = 96485.0; // coulomb_per_mole
        const double var_membrane__I_st_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 3) / var_chaste_interface__ionic_concentrations__Nai) / var_membrane__F; // millivolt
        const double var_L_type_Ca_channel__I_CaCa = 4.0 * pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Cao * NV_Ith_S(mParameters, 1) + var_L_type_Ca_channel__gamma_Cai * var_chaste_interface__calcium_dynamics__Cai * exp(2.0 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_Ca * NV_Ith_S(mParameters, 4) * var_chaste_interface__membrane__V / ((-1.0 + exp(2.0 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaK = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * NV_Ith_S(mParameters, 2) + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_K * NV_Ith_S(mParameters, 4) * var_chaste_interface__membrane__V / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaNa = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * NV_Ith_S(mParameters, 3) + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_Na * NV_Ith_S(mParameters, 4) * var_chaste_interface__membrane__V / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaCa = var_L_type_Ca_channel__I_CaCa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaK = var_L_type_Ca_channel__I_CaK * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaNa = var_L_type_Ca_channel__I_CaNa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_CaCa + var_L_type_Ca_channel__i_CaK + var_L_type_Ca_channel__i_CaNa; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L_converted = HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L; // uA_per_cm2
        const double var_Na_Ca_exchanger__i_NaCa = (-pow(NV_Ith_S(mParameters, 3), 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * NV_Ith_S(mParameters, 1) * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * NV_Ith_S(mParameters, 10) * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) / (1.0 + (pow(NV_Ith_S(mParameters, 3), 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * NV_Ith_S(mParameters, 1) * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_Na_Ca_exchanger__c2 * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // microA_per_microF
        const double var_Na_Ca_exchanger__i_NaCa_converted = HeartConfig::Instance()->GetCapacitance() * var_Na_Ca_exchanger__i_NaCa; // uA_per_cm2
        const double var_fast_sodium_current__i_Na = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__Na_channel_states__P_O_Na * NV_Ith_S(mParameters, 6); // microA_per_microF
        const double var_fast_sodium_current__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na; // uA_per_cm2
        const double var_rapid_delayed_rectifier_potassium_current__E_Kr = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 2) / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_rapid_delayed_rectifier_potassium_current__g_Kr = pow(NV_Ith_S(mParameters, 2), 0.58999999999999997) * NV_Ith_S(mParameters, 8); // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_rapid_delayed_rectifier_potassium_current__E_Kr + var_chaste_interface__membrane__V) * var_chaste_interface__Kr_channel_states__P_O * var_rapid_delayed_rectifier_potassium_current__g_Kr; // microA_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_rapid_delayed_rectifier_potassium_current__i_Kr; // uA_per_cm2
        const double var_slow_delayed_rectifier_potassium_current__PNaK = 0.018329999999999999; // dimensionless
        const double var_slow_delayed_rectifier_potassium_current__E_Ks = var_membrane__R * var_membrane__T * log((NV_Ith_S(mParameters, 3) * var_slow_delayed_rectifier_potassium_current__PNaK + NV_Ith_S(mParameters, 2)) / (var_chaste_interface__ionic_concentrations__Nai * var_slow_delayed_rectifier_potassium_current__PNaK + var_chaste_interface__ionic_concentrations__Ki)) / var_membrane__F; // millivolt
        const double var_slow_delayed_rectifier_potassium_current__g_Ks = 0.433 * (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * NV_Ith_S(mParameters, 9); // milliS_per_microF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = (-var_slow_delayed_rectifier_potassium_current__E_Ks + var_chaste_interface__membrane__V) * var_slow_delayed_rectifier_potassium_current__g_Ks * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2; // microA_per_microF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks_converted = HeartConfig::Instance()->GetCapacitance() * var_slow_delayed_rectifier_potassium_current__i_Ks; // uA_per_cm2
        const double var_time_independent_potassium_current__E_K = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 2) / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_time_independent_potassium_current__g_K1 = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 2)) * NV_Ith_S(mParameters, 7); // milliS_per_cm2
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K)); // per_second
        const double var_time_independent_potassium_current_K1_gate__beta_K1 = 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V)); // per_second
        const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_microF
        const double var_time_independent_potassium_current__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_time_independent_potassium_current__i_K1; // uA_per_cm2
        const double var_transient_outward_current__g_to = 1.1000000000000001; // milliS_per_microF
        const double var_transient_outward_current__rvdv = _lt_0_row[8]; // dimensionless
        const double var_transient_outward_current__i_to = pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_transient_outward_current__g_to * NV_Ith_S(mParameters, 11) * var_transient_outward_current__rvdv * var_chaste_interface__transient_outward_current_ydv_gate__ydv; // microA_per_microF
        const double var_transient_outward_current__i_to_converted = HeartConfig::Instance()->GetCapacitance() * var_transient_outward_current__i_to; // uA_per_cm2

        N_Vector dqs = N_VNew_Serial(10);
        NV_Ith_S(dqs, 0) = var_calcium_dynamics__i_rel;
        NV_Ith_S(dqs, 1) = var_L_type_Ca_channel__i_Ca_L_converted;
        NV_Ith_S(dqs, 2) = var_fast_sodium_current__i_Na_converted;
        NV_Ith_S(dqs, 3) = var_time_independent_potassium_current__i_K1_converted;
        NV_Ith_S(dqs, 4) = var_rapid_delayed_rectifier_potassium_current__i_Kr_converted;
        NV_Ith_S(dqs, 5) = var_slow_delayed_rectifier_potassium_current__i_Ks_converted;
        NV_Ith_S(dqs, 6) = var_Na_Ca_exchanger__i_NaCa_converted;
        NV_Ith_S(dqs, 7) = var_membrane__I_st_converted;
        NV_Ith_S(dqs, 8) = var_transient_outward_current__i_to_converted;
        NV_Ith_S(dqs, 9) = var_chaste_interface__environment__time_converted;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellclancy_rudy_2002FromCellMLCvodeOpt>::Initialise(void)
{
    this->mSystemName = "clancy_rudy_2002";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // NV_Ith_S(rY, 0):
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-88.78);

    // NV_Ith_S(rY, 1):
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.000104);

    // NV_Ith_S(rY, 2):
    this->mVariableNames.push_back("Na_channel_states__P_O_Na");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.756e-13);

    // NV_Ith_S(rY, 3):
    this->mVariableNames.push_back("Na_channel_states__P_C1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(4.744e-10);

    // NV_Ith_S(rY, 4):
    this->mVariableNames.push_back("Na_channel_states__P_C2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.776e-08);

    // NV_Ith_S(rY, 5):
    this->mVariableNames.push_back("Na_channel_states__P_C3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(7.583e-06);

    // NV_Ith_S(rY, 6):
    this->mVariableNames.push_back("Na_channel_states__P_IF");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.147e-11);

    // NV_Ith_S(rY, 7):
    this->mVariableNames.push_back("Na_channel_states__P_IC3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.302e-06);

    // NV_Ith_S(rY, 8):
    this->mVariableNames.push_back("Na_channel_states__P_IC2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.679e-08);

    // NV_Ith_S(rY, 9):
    this->mVariableNames.push_back("Na_channel_states__P_IM1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.736e-12);

    // NV_Ith_S(rY, 10):
    this->mVariableNames.push_back("Na_channel_states__P_IM2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(6.187e-14);

    // NV_Ith_S(rY, 11):
    this->mVariableNames.push_back("L_type_Ca_channel_d_gate__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.289e-06);

    // NV_Ith_S(rY, 12):
    this->mVariableNames.push_back("L_type_Ca_channel_f_gate__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99975);

    // NV_Ith_S(rY, 13):
    this->mVariableNames.push_back("T_type_Ca_channel_b_gate__b");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000983);

    // NV_Ith_S(rY, 14):
    this->mVariableNames.push_back("T_type_Ca_channel_g_gate__g");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9942);

    // NV_Ith_S(rY, 15):
    this->mVariableNames.push_back("Kr_channel_states__P_O");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.104e-10);

    // NV_Ith_S(rY, 16):
    this->mVariableNames.push_back("Kr_channel_states__P_C1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.4083e-08);

    // NV_Ith_S(rY, 17):
    this->mVariableNames.push_back("Kr_channel_states__P_C2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.69e-08);

    // NV_Ith_S(rY, 18):
    this->mVariableNames.push_back("Kr_channel_states__P_C3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(4.949e-06);

    // NV_Ith_S(rY, 19):
    this->mVariableNames.push_back("Kr_channel_states__P_I");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.386e-11);

    // NV_Ith_S(rY, 20):
    this->mVariableNames.push_back("slow_delayed_rectifier_potassium_current_xs1_gate__xs1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00447);

    // NV_Ith_S(rY, 21):
    this->mVariableNames.push_back("slow_delayed_rectifier_potassium_current_xs2_gate__xs2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00447);

    // NV_Ith_S(rY, 22):
    this->mVariableNames.push_back("transient_outward_current_zdv_gate__zdv");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.01167);

    // NV_Ith_S(rY, 23):
    this->mVariableNames.push_back("transient_outward_current_ydv_gate__ydv");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99998);

    // NV_Ith_S(rY, 24):
    this->mVariableNames.push_back("calcium_dynamics__Ca_JSR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.516);

    // NV_Ith_S(rY, 25):
    this->mVariableNames.push_back("calcium_dynamics__Ca_NSR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.518);

    // NV_Ith_S(rY, 26):
    this->mVariableNames.push_back("calcium_dynamics__APtrack");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 27):
    this->mVariableNames.push_back("calcium_dynamics__APtrack2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 28):
    this->mVariableNames.push_back("calcium_dynamics__APtrack3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 29):
    this->mVariableNames.push_back("calcium_dynamics__Cainfluxtrack");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 30):
    this->mVariableNames.push_back("calcium_dynamics__OVRLDtrack");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 31):
    this->mVariableNames.push_back("calcium_dynamics__OVRLDtrack2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 32):
    this->mVariableNames.push_back("calcium_dynamics__OVRLDtrack3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 33):
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(10.532);

    // NV_Ith_S(rY, 34):
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(140.557);

    // mParameters[0]:
    this->mParameterNames.push_back("SR_release_current_max");
    this->mParameterUnits.push_back("per_second");

    // mParameters[1]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[2]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[3]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[4]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[5]:
    this->mParameterNames.push_back("membrane_capacitance");
    this->mParameterUnits.push_back("microF");

    // mParameters[6]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_cm2");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("microA_per_microF");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("SR_release_current");
    this->mDerivedQuantityUnits.push_back("millimolar_per_second");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellclancy_rudy_2002FromCellMLCvodeOpt)

#endif // CHASTE_CVODE
