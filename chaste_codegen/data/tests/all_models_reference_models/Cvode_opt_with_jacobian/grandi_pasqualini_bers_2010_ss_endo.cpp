#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: grandi_pasqualini_bers_2010
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: AnalyticCvodeOpt)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "grandi_pasqualini_bers_2010_ss_endo.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt_LookupTables : public AbstractLookupTableCollection
{
public:
    static Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt_LookupTables);
        }
        return mpInstance.get();
    }

    void FreeMemory()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }

    // Row lookup methods
    // using linear-interpolation

    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<28; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }


    const double * IndexTable0(double var_chaste_interface__membrane_potential__V_m)
    {
        const double _offset_0 = var_chaste_interface__membrane_potential__V_m - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }


// LCOV_EXCL_START
    bool CheckIndex0(double& var_chaste_interface__membrane_potential__V_m)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__membrane_potential__V_m>mTableMaxs[0] || var_chaste_interface__membrane_potential__V_m<mTableMins[0])
        {
// LCOV_EXCL_START
            _oob_0 = true;
// LCOV_EXCL_STOP
        }
        return _oob_0;
    }
// LCOV_EXCL_STOP

    ~Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt_LookupTables()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

    }

protected:
    Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt_LookupTables(const Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt_LookupTables&);
    Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt_LookupTables& operator= (const Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt_LookupTables&);
    Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);

        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 28;
        mTableMins[0] = -250.0;
        mTableMaxs[0] = 550.0;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;

        Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt_LookupTables::RegenerateTables();
    }

    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);


        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][28];

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(7.4880000000000004 - 0.16722408026755853 * var_chaste_interface__membrane_potential__V_m));

                _lookup_table_0[i][0] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-0.037435883507802616 * var_chaste_interface__membrane_potential__V_m);

                _lookup_table_0[i][1] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = 0.1245 * exp(-0.003743588350780262 * var_chaste_interface__membrane_potential__V_m);

                _lookup_table_0[i][2] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = exp(0.010107688547106707 * var_chaste_interface__membrane_potential__V_m);

                _lookup_table_0[i][3] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-0.027328194960695912 * var_chaste_interface__membrane_potential__V_m);

                _lookup_table_0[i][4] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + 0.32000000000000001 * exp(-0.027328194960695912 * var_chaste_interface__membrane_potential__V_m);

                _lookup_table_0[i][5] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = exp(0.037435883507802616 * var_chaste_interface__membrane_potential__V_m);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[6] < 2){
                    double left = _lookup_table_0[i-1][6];
                    double right = _lookup_table_0[i+1][6];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 6 at ["<<i<<"][6] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[6] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[6] >= 2){
                    EXCEPTION("Lookup table 6 at ["<<i<<"][6] has non-finite value: " << val);
                }
                _lookup_table_0[i][6] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = -1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane_potential__V_m);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[7] < 2){
                    double left = _lookup_table_0[i-1][7];
                    double right = _lookup_table_0[i+1][7];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 7 at ["<<i<<"][7] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[7] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[7] >= 2){
                    EXCEPTION("Lookup table 7 at ["<<i<<"][7] has non-finite value: " << val);
                }
                _lookup_table_0[i][7] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + exp(3.0833333333333335 + 0.041666666666666664 * var_chaste_interface__membrane_potential__V_m);

                _lookup_table_0[i][8] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = exp(0.074871767015605231 * var_chaste_interface__membrane_potential__V_m);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[9] < 2){
                    double left = _lookup_table_0[i-1][9];
                    double right = _lookup_table_0[i+1][9];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 9 at ["<<i<<"][9] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[9] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[9] >= 2){
                    EXCEPTION("Lookup table 9 at ["<<i<<"][9] has non-finite value: " << val);
                }
                _lookup_table_0[i][9] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = -1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane_potential__V_m);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[10] < 2){
                    double left = _lookup_table_0[i-1][10];
                    double right = _lookup_table_0[i+1][10];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 10 at ["<<i<<"][10] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[10] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[10] >= 2){
                    EXCEPTION("Lookup table 10 at ["<<i<<"][10] has non-finite value: " << val);
                }
                _lookup_table_0[i][10] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-0.83333333333333337 - 0.16666666666666666 * var_chaste_interface__membrane_potential__V_m));

                _lookup_table_0[i][11] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = ((fabs(5.0 + var_chaste_interface__membrane_potential__V_m) < 6.0000000000337561e-7) ? (1 / (47619047.618779711 * (1.0 - exp(-1.000000000005626e-7)) / (1.0 + exp(-1.000000000005626e-7)) - 833333.33332864498 * (4.9999994000000001 + var_chaste_interface__membrane_potential__V_m) * (-47619047.618779711 * (1.0 - exp(1.000000000005626e-7)) / (1.0 + exp(1.000000000005626e-7)) - 47619047.618779711 * (1.0 - exp(-1.000000000005626e-7)) / (1.0 + exp(-1.000000000005626e-7))))) : (0.035000000000000003 * (1.0 + exp(-0.83333333333333337 - 0.16666666666666666 * var_chaste_interface__membrane_potential__V_m)) * (5.0 + var_chaste_interface__membrane_potential__V_m) / (1.0 - exp(-0.83333333333333337 - 0.16666666666666666 * var_chaste_interface__membrane_potential__V_m))));
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[12] < 2){
                    double left = _lookup_table_0[i-1][12];
                    double right = _lookup_table_0[i+1][12];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 12 at ["<<i<<"][12] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[12] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[12] >= 2){
                    EXCEPTION("Lookup table 12 at ["<<i<<"][12] has non-finite value: " << val);
                }
                _lookup_table_0[i][12] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(3.8888888888888888 + 0.1111111111111111 * var_chaste_interface__membrane_potential__V_m));

                _lookup_table_0[i][13] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = 0.59999999999999998 / (1.0 + exp(2.5 - 0.050000000000000003 * var_chaste_interface__membrane_potential__V_m));

                _lookup_table_0[i][14] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = 0.02 + 0.019699999999999999 * exp(-0.23877882250000002 * pow((1 + 0.068965517241379309 * var_chaste_interface__membrane_potential__V_m), 2));

                _lookup_table_0[i][15] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-2.0 - 0.20000000000000001 * var_chaste_interface__membrane_potential__V_m));

                _lookup_table_0[i][16] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = 230.0 / (1.0 + exp(2.0 + 0.050000000000000003 * var_chaste_interface__membrane_potential__V_m)) + 3300.0 / ((1.0 + exp(1.2222222222222223 + 0.1111111111111111 * var_chaste_interface__membrane_potential__V_m)) * (1.0 + exp(-2.4444444444444446 - 0.1111111111111111 * var_chaste_interface__membrane_potential__V_m)));

                _lookup_table_0[i][17] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-0.26666666666666666 - 0.070175438596491224 * var_chaste_interface__membrane_potential__V_m));

                _lookup_table_0[i][18] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = 0.00100999899000101 + 0.00100999899000101 * exp(-0.17252124645892353 - 0.070821529745042494 * var_chaste_interface__membrane_potential__V_m);

                _lookup_table_0[i][19] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / pow((1.0 + exp(-6.2967884828349945 - 0.11074197120708749 * var_chaste_interface__membrane_potential__V_m)), 2);

                _lookup_table_0[i][20] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = 0.12920000000000001 * exp(-8.682389366752302 * pow((1 + 0.021838829438742085 * var_chaste_interface__membrane_potential__V_m), 2)) + 0.064869999999999997 * exp(-0.0089012876052174655 * pow((-1 + 0.2073398299813394 * var_chaste_interface__membrane_potential__V_m), 2));

                _lookup_table_0[i][21] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(1.4615384615384615 - 0.076923076923076927 * var_chaste_interface__membrane_potential__V_m));

                _lookup_table_0[i][22] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = 0.5 + 8.5 * exp(-0.81000000000000005 * pow((1 + 0.022222222222222223 * var_chaste_interface__membrane_potential__V_m), 2));

                _lookup_table_0[i][23] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = 0.5 + 9.0 / (1.0 + exp(0.20000000000000001 + 0.066666666666666666 * var_chaste_interface__membrane_potential__V_m));

                _lookup_table_0[i][24] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(3.8999999999999999 + 0.20000000000000001 * var_chaste_interface__membrane_potential__V_m));

                _lookup_table_0[i][25] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = 7.0 + 85.0 * exp(-7.2727272727272725 * pow((1 + 0.025000000000000001 * var_chaste_interface__membrane_potential__V_m), 2));

                _lookup_table_0[i][26] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane_potential__V_m = mTableMins[0] + i*mTableSteps[0];
                double val = 30.0 + 800.0 / (1.0 + exp(6.0 + 0.10000000000000001 * var_chaste_interface__membrane_potential__V_m));

                _lookup_table_0[i][27] = val;
            }

            mNeedsRegeneration[0] = false;
        }

        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }

private:
    /** The single instance of the class */
    static std::shared_ptr<Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[28];

    // Lookup tables
    double (*_lookup_table_0)[28];
    int _lookup_table_0_num_misshit_piecewise[28] = {0};

};

std::shared_ptr<Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt_LookupTables> Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt_LookupTables::mpInstance;

    boost::shared_ptr<RegularStimulus> Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane_potential__stim_amplitude_converted = -9.5 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        const double var_chaste_interface__membrane_potential__stim_duration = 5.0; // msec
        const double var_chaste_interface__membrane_potential__stim_period = 1000.0; // msec
        const double var_chaste_interface__membrane_potential__stim_start = 100.0; // msec
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane_potential__stim_amplitude_converted),
                var_chaste_interface__membrane_potential__stim_duration,
                var_chaste_interface__membrane_potential__stim_period,
                var_chaste_interface__membrane_potential__stim_start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }

    double Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt::Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                39,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
        
        NV_Ith_S(this->mParameters, 0) = 5.3480000000000003e-6; // (var_SR_Fluxes__SR_leak_max) [per_msec]
        NV_Ith_S(this->mParameters, 1) = 25.0; // (var_parameters__ks) [per_msec]
        NV_Ith_S(this->mParameters, 2) = 0.0053114; // (var_parameters__Vmax_SRCaP) [mM_per_msec]
        NV_Ith_S(this->mParameters, 3) = 1.0; // (var_Na_Concentrations__conc_clamp) [dimensionless]
        NV_Ith_S(this->mParameters, 4) = 1.8; // (var_parameters__Cao) [mM]
        NV_Ith_S(this->mParameters, 5) = 5.4000000000000004; // (var_parameters__Ko) [mM]
        NV_Ith_S(this->mParameters, 6) = 140.0; // (var_parameters__Nao) [mM]
        NV_Ith_S(this->mParameters, 7) = 0.5; // (var_parameters__pCa_max) [cm_per_sec]
        NV_Ith_S(this->mParameters, 8) = 23.0; // (var_parameters__GNa) [mS_per_uF]
        NV_Ith_S(this->mParameters, 9) = 0; // (var_I_Na__perc_reduced_inact_for_IpNa) [dimensionless]
        NV_Ith_S(this->mParameters, 10) = 0; // (var_I_Na__shift_INa_inact) [mV]
        NV_Ith_S(this->mParameters, 11) = 1.0; // (var_I_to__GtoFast_factor) [dimensionless]
        NV_Ith_S(this->mParameters, 12) = 0.34999999999999998; // (var_I_Ki__g_ki) [mS_per_uF]
        NV_Ith_S(this->mParameters, 13) = 0.035000000000000003; // (var_I_Kr__gkr_max) [mS_per_uF]
        NV_Ith_S(this->mParameters, 14) = 0.0035000000000000001; // (var_I_Ks__gks_sl) [mS_per_uF]
        NV_Ith_S(this->mParameters, 15) = 1.0; // (var_I_to__GtoSlow_factor) [dimensionless]
        NV_Ith_S(this->mParameters, 16) = 4.5; // (var_parameters__IbarNCX) [uA_per_uF]
        NV_Ith_S(this->mParameters, 17) = 1.8; // (var_parameters__IbarNaK) [uA_per_uF]
        NV_Ith_S(this->mParameters, 18) = 1.3809999999999999e-10; // (var_parameters__Cmem) [farad]
    }

    Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt::~Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt()
    {
    }

    AbstractLookupTableCollection* Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt::GetLookupTableCollection()
    {
        return Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt_LookupTables::Instance();
    }
    
    double Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__membrane_potential__V_m = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: mV; Initial value: -81.4229700631461
        double var_chaste_interface__I_Na__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.00381858135062259
        double var_chaste_interface__I_Na__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.625086621635645
        double var_chaste_interface__I_Na__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.62332507235506
        double var_chaste_interface__I_Kr__x_kr = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.021733554982663
        double var_chaste_interface__I_Ks__x_ks = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.00428981903391989
        double var_chaste_interface__I_to__x_to_s = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.000441539203559411
        double var_chaste_interface__I_to__y_to_s = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.784875334693892
        double var_chaste_interface__I_to__x_to_f = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.000441531250866821
        double var_chaste_interface__I_to__y_to_f = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.999995817153572
        double var_chaste_interface__I_Ca__d = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 2.93982287251302e-06
        double var_chaste_interface__I_Ca__f = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.99511673495949
        double var_chaste_interface__I_Ca__f_Ca_Bj = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.0246142436477748
        double var_chaste_interface__I_Ca__f_Ca_Bsl = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.0152416826209301
        double var_chaste_interface__Na_Concentrations__Na_j = NV_Ith_S(rY, 33);
        // Units: mM; Initial value: 8.3215690202059
        double var_chaste_interface__Na_Concentrations__Na_sl = NV_Ith_S(rY, 34);
        // Units: mM; Initial value: 8.32094589677861
        double var_chaste_interface__Na_Concentrations__Na_i = NV_Ith_S(rY, 35);
        // Units: mM; Initial value: 8.32114502072456
        double var_chaste_interface__K_Concentration__K_i = NV_Ith_S(rY, 36);
        // Units: mM; Initial value: 120.0
        double var_chaste_interface__Ca_Concentrations__Ca_j = NV_Ith_S(rY, 37);
        // Units: mM; Initial value: 0.000175415190830688
        double var_chaste_interface__Ca_Concentrations__Ca_sl = NV_Ith_S(rY, 38);
        // Units: mM; Initial value: 0.000106544589194246
        
        // Lookup table indexing
        const bool _oob_0 = Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane_potential__V_m);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane_potential__V_m);

        const double var_I_Ca__fcaCaMSL = 0; // dimensionless
        const double var_I_Ca__fcaCaj = 0; // dimensionless
        const double var_I_Kp__kp_kp = _lt_0_row[0]; // dimensionless
        const double var_I_NaK__fnak = 1 / (1.0 + _lt_0_row[2] + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * NV_Ith_S(mParameters, 6))) * _lt_0_row[1]); // dimensionless
        const double var_I_NaK__I_nak_junc = 0.11 * var_I_NaK__fnak * NV_Ith_S(mParameters, 17) * NV_Ith_S(mParameters, 5) / ((1.0 + 14641.0 / pow(var_chaste_interface__Na_Concentrations__Na_j, 4)) * (1.5 + NV_Ith_S(mParameters, 5))); // uA_per_uF
        const double var_I_NaK__I_nak_sl = 0.89000000000000001 * var_I_NaK__fnak * NV_Ith_S(mParameters, 17) * NV_Ith_S(mParameters, 5) / ((1.0 + 14641.0 / pow(var_chaste_interface__Na_Concentrations__Na_sl, 4)) * (1.5 + NV_Ith_S(mParameters, 5))); // uA_per_uF
        const double var_parameters__Qpow = 0; // dimensionless
        const double var_parameters__ek = 26.712338705498265 * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__K_Concentration__K_i); // mV
        const double var_parameters__ena_junc = 26.712338705498265 * log(NV_Ith_S(mParameters, 6) / var_chaste_interface__Na_Concentrations__Na_j); // mV
        const double var_parameters__ena_sl = 26.712338705498265 * log(NV_Ith_S(mParameters, 6) / var_chaste_interface__Na_Concentrations__Na_sl); // mV
        const double var_parameters__epi = 0; // dimensionless
        const double var_I_NCX__I_ncx_junc = 0.11 * pow(1.5700000000000001, var_parameters__Qpow) * (pow(var_chaste_interface__Na_Concentrations__Na_j, 3) * NV_Ith_S(mParameters, 4) * _lt_0_row[3] - pow(NV_Ith_S(mParameters, 6), 3) * var_chaste_interface__Ca_Concentrations__Ca_j * _lt_0_row[4]) * NV_Ith_S(mParameters, 16) / ((_lt_0_row[5]) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Ca_Concentrations__Ca_j, 2)) * (1.3 * pow(var_chaste_interface__Na_Concentrations__Na_j, 3) + pow(var_chaste_interface__Na_Concentrations__Na_j, 3) * NV_Ith_S(mParameters, 4) + pow(NV_Ith_S(mParameters, 6), 3) * var_chaste_interface__Ca_Concentrations__Ca_j + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Ca_Concentrations__Ca_j) * var_chaste_interface__Ca_Concentrations__Ca_j + 0.0035899999999999999 * pow(NV_Ith_S(mParameters, 6), 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Na_Concentrations__Na_j, 3)))); // uA_per_uF
        const double var_I_NCX__I_ncx_sl = 0.89000000000000001 * pow(1.5700000000000001, var_parameters__Qpow) * (pow(var_chaste_interface__Na_Concentrations__Na_sl, 3) * NV_Ith_S(mParameters, 4) * _lt_0_row[3] - pow(NV_Ith_S(mParameters, 6), 3) * var_chaste_interface__Ca_Concentrations__Ca_sl * _lt_0_row[4]) * NV_Ith_S(mParameters, 16) / ((_lt_0_row[5]) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Ca_Concentrations__Ca_sl, 2)) * (1.3 * pow(var_chaste_interface__Na_Concentrations__Na_sl, 3) + pow(var_chaste_interface__Na_Concentrations__Na_sl, 3) * NV_Ith_S(mParameters, 4) + pow(NV_Ith_S(mParameters, 6), 3) * var_chaste_interface__Ca_Concentrations__Ca_sl + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Ca_Concentrations__Ca_sl) * var_chaste_interface__Ca_Concentrations__Ca_sl + 0.0035899999999999999 * pow(NV_Ith_S(mParameters, 6), 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Na_Concentrations__Na_sl, 3)))); // uA_per_uF
        const double var_I_Ks__eks = 26.712338705498265 * log((0.018329999999999999 * NV_Ith_S(mParameters, 6) + NV_Ith_S(mParameters, 5)) / (0.018329999999999999 * var_chaste_interface__Na_Concentrations__Na_i + var_chaste_interface__K_Concentration__K_i)); // mV
        const double var_membrane_potential__I_tot = 0.5535668961205934 + var_I_NCX__I_ncx_junc + var_I_NCX__I_ncx_sl + var_I_NaK__I_nak_junc + var_I_NaK__I_nak_sl + 0.010148299999999999 * var_chaste_interface__membrane_potential__V_m - 6.567e-5 * var_parameters__ena_junc - 0.00053133 * var_parameters__ena_sl - 0.00080995817805876559 * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__Ca_Concentrations__Ca_j) - 0.0065532979861118307 * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__Ca_Concentrations__Ca_sl) + 0.002 * (-var_parameters__ek + var_chaste_interface__membrane_potential__V_m) * var_I_Kp__kp_kp + 0.006029375 * (61.507432902288166 + var_chaste_interface__membrane_potential__V_m) / (1.0 + 0.10000000000000001 / var_chaste_interface__Ca_Concentrations__Ca_j) + 0.048783124999999997 * (61.507432902288166 + var_chaste_interface__membrane_potential__V_m) / (1.0 + 0.10000000000000001 / var_chaste_interface__Ca_Concentrations__Ca_sl) + 0.00038500000000000003 * pow(var_chaste_interface__I_Ks__x_ks, 2) * (-var_I_Ks__eks + var_chaste_interface__membrane_potential__V_m) + 0.89000000000000001 * pow(var_chaste_interface__I_Ks__x_ks, 2) * (-var_I_Ks__eks + var_chaste_interface__membrane_potential__V_m) * NV_Ith_S(mParameters, 14) + 0.0074029999999999999 * pow(2.3500000000000001, var_parameters__Qpow) * pow(var_chaste_interface__Ca_Concentrations__Ca_j, 1.6000000000000001) / (5.2281977629563632e-6 + pow(var_chaste_interface__Ca_Concentrations__Ca_j, 1.6000000000000001)) + 0.059896999999999999 * pow(2.3500000000000001, var_parameters__Qpow) * pow(var_chaste_interface__Ca_Concentrations__Ca_sl, 1.6000000000000001) / (5.2281977629563632e-6 + pow(var_chaste_interface__Ca_Concentrations__Ca_sl, 1.6000000000000001)) + (-var_parameters__ek + var_chaste_interface__membrane_potential__V_m) * ((var_parameters__epi == 1.0) ? (0.1144 * NV_Ith_S(mParameters, 11)) : (0.0014039999999999999 * NV_Ith_S(mParameters, 11))) * var_chaste_interface__I_to__x_to_f * var_chaste_interface__I_to__y_to_f + (-var_parameters__ek + var_chaste_interface__membrane_potential__V_m) * ((var_parameters__epi == 1.0) ? (0.015599999999999999 * NV_Ith_S(mParameters, 15)) : (0.037595999999999997 * NV_Ith_S(mParameters, 15))) * var_chaste_interface__I_to__x_to_s * var_chaste_interface__I_to__y_to_s + 0.11 * pow(var_chaste_interface__I_Na__m, 3) * (-var_parameters__ena_junc + var_chaste_interface__membrane_potential__V_m) * var_chaste_interface__I_Na__h * var_chaste_interface__I_Na__j * NV_Ith_S(mParameters, 8) + 0.45000000000000001 * pow(1.8, var_parameters__Qpow) * (1.0 + 0.099999999999999978 * var_I_Ca__fcaCaMSL + 0.90000000000000002 * var_I_Ca__fcaCaj - 0.099999999999999978 * var_chaste_interface__I_Ca__f_Ca_Bsl - 0.90000000000000002 * var_chaste_interface__I_Ca__f_Ca_Bj) * ((fabs(var_chaste_interface__membrane_potential__V_m) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane_potential__V_m) * (1.3025475e-9 * (-0.75 * NV_Ith_S(mParameters, 5) + 0.75 * var_chaste_interface__K_Concentration__K_i * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) + 1.3025475e-9 * (-0.75 * NV_Ith_S(mParameters, 5) + 0.75 * var_chaste_interface__K_Concentration__K_i * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8))) - 1.3025475e-9 * (-0.75 * NV_Ith_S(mParameters, 5) + 0.75 * var_chaste_interface__K_Concentration__K_i * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8))) : (0.00048762016473379531 * (-0.75 * NV_Ith_S(mParameters, 5) + 0.75 * var_chaste_interface__K_Concentration__K_i * _lt_0_row[6]) * var_chaste_interface__membrane_potential__V_m / (_lt_0_row[7]))) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f + 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 5)) * (-var_parameters__ek + var_chaste_interface__membrane_potential__V_m) * NV_Ith_S(mParameters, 13) * var_chaste_interface__I_Kr__x_kr / (_lt_0_row[8]) + 0.89000000000000001 * pow(var_chaste_interface__I_Na__m, 3) * (-var_parameters__ena_sl + var_chaste_interface__membrane_potential__V_m) * var_chaste_interface__I_Na__h * var_chaste_interface__I_Na__j * NV_Ith_S(mParameters, 8) + 0.044999999999999991 * pow(1.8, var_parameters__Qpow) * (1.0 - var_chaste_interface__I_Ca__f_Ca_Bsl + var_I_Ca__fcaCaMSL) * ((fabs(var_chaste_interface__membrane_potential__V_m) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane_potential__V_m) * (7.236374999999999e-11 * (-0.75 * NV_Ith_S(mParameters, 6) + 0.75 * var_chaste_interface__Na_Concentrations__Na_sl * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) + 7.236374999999999e-11 * (-0.75 * NV_Ith_S(mParameters, 6) + 0.75 * var_chaste_interface__Na_Concentrations__Na_sl * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8))) - 7.236374999999999e-11 * (-0.75 * NV_Ith_S(mParameters, 6) + 0.75 * var_chaste_interface__Na_Concentrations__Na_sl * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8))) : (2.7090009151877515e-5 * (-0.75 * NV_Ith_S(mParameters, 6) + 0.75 * var_chaste_interface__Na_Concentrations__Na_sl * _lt_0_row[6]) * var_chaste_interface__membrane_potential__V_m / (_lt_0_row[7]))) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f + 0.044999999999999991 * pow(1.8, var_parameters__Qpow) * (1.0 - var_chaste_interface__I_Ca__f_Ca_Bsl + var_I_Ca__fcaCaMSL) * ((fabs(var_chaste_interface__membrane_potential__V_m) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane_potential__V_m) * (1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 7) / (-1.0 + exp(9.9999999999999995e-8)) + 1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 7) / (-1.0 + exp(-9.9999999999999995e-8))) - 1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 7) / (-1.0 + exp(-9.9999999999999995e-8))) : (7.8019226357407252 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl * _lt_0_row[9]) * var_chaste_interface__membrane_potential__V_m * NV_Ith_S(mParameters, 7) / (_lt_0_row[10]))) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f + 0.40500000000000003 * pow(1.8, var_parameters__Qpow) * (1.0 - var_chaste_interface__I_Ca__f_Ca_Bj + var_I_Ca__fcaCaj) * ((fabs(var_chaste_interface__membrane_potential__V_m) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane_potential__V_m) * (7.236374999999999e-11 * (-0.75 * NV_Ith_S(mParameters, 6) + 0.75 * var_chaste_interface__Na_Concentrations__Na_j * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) + 7.236374999999999e-11 * (-0.75 * NV_Ith_S(mParameters, 6) + 0.75 * var_chaste_interface__Na_Concentrations__Na_j * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8))) - 7.236374999999999e-11 * (-0.75 * NV_Ith_S(mParameters, 6) + 0.75 * var_chaste_interface__Na_Concentrations__Na_j * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8))) : (2.7090009151877515e-5 * (-0.75 * NV_Ith_S(mParameters, 6) + 0.75 * var_chaste_interface__Na_Concentrations__Na_j * _lt_0_row[6]) * var_chaste_interface__membrane_potential__V_m / (_lt_0_row[7]))) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f + 0.40500000000000003 * pow(1.8, var_parameters__Qpow) * (1.0 - var_chaste_interface__I_Ca__f_Ca_Bj + var_I_Ca__fcaCaj) * ((fabs(var_chaste_interface__membrane_potential__V_m) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane_potential__V_m) * (1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 7) / (-1.0 + exp(9.9999999999999995e-8)) + 1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 7) / (-1.0 + exp(-9.9999999999999995e-8))) - 1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 7) / (-1.0 + exp(-9.9999999999999995e-8))) : (7.8019226357407252 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j * _lt_0_row[9]) * var_chaste_interface__membrane_potential__V_m * NV_Ith_S(mParameters, 7) / (_lt_0_row[10]))) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f + 0.4389381125701739 * sqrt(NV_Ith_S(mParameters, 5)) * (-var_parameters__ek + var_chaste_interface__membrane_potential__V_m) * NV_Ith_S(mParameters, 12) / ((1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane_potential__V_m - 0.23849999999999999 * var_parameters__ek)) * (1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane_potential__V_m - 0.23849999999999999 * var_parameters__ek)) + (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane_potential__V_m - 0.080320000000000003 * var_parameters__ek) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane_potential__V_m - 0.061749999999999999 * var_parameters__ek)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_parameters__ek - 0.51429999999999998 * var_chaste_interface__membrane_potential__V_m)))); // uA_per_uF
        const double var_chaste_interface__i_ionic = HeartConfig::Instance()->GetCapacitance() * var_membrane_potential__I_tot; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt::EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane_potential__V_m = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: mV; Initial value: -81.4229700631461
        double var_chaste_interface__Ca_Concentrations__Ca_i = NV_Ith_S(rY, 1);
        // Units: mM; Initial value: 8.72745589849657e-05
        double var_chaste_interface__I_Na__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.00381858135062259
        double var_chaste_interface__I_Na__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.625086621635645
        double var_chaste_interface__I_Na__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.62332507235506
        double var_chaste_interface__I_Kr__x_kr = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.021733554982663
        double var_chaste_interface__I_Ks__x_ks = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.00428981903391989
        double var_chaste_interface__I_to__x_to_s = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.000441539203559411
        double var_chaste_interface__I_to__y_to_s = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.784875334693892
        double var_chaste_interface__I_to__x_to_f = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.000441531250866821
        double var_chaste_interface__I_to__y_to_f = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.999995817153572
        double var_chaste_interface__I_Ca__d = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 2.93982287251302e-06
        double var_chaste_interface__I_Ca__f = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.99511673495949
        double var_chaste_interface__I_Ca__f_Ca_Bj = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.0246142436477748
        double var_chaste_interface__I_Ca__f_Ca_Bsl = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.0152416826209301
        double var_chaste_interface__SR_Fluxes__Ry_Rr = NV_Ith_S(rY, 15);
        // Units: mM; Initial value: 0.891022230597263
        double var_chaste_interface__SR_Fluxes__Ry_Ro = NV_Ith_S(rY, 16);
        // Units: mM; Initial value: 7.37484660389498e-07
        double var_chaste_interface__SR_Fluxes__Ry_Ri = NV_Ith_S(rY, 17);
        // Units: mM; Initial value: 9.01984485847386e-08
        double var_chaste_interface__Na_Buffers__Na_Bj = NV_Ith_S(rY, 18);
        // Units: mM; Initial value: 3.43545459048316
        double var_chaste_interface__Na_Buffers__Na_Bsl = NV_Ith_S(rY, 19);
        // Units: mM; Initial value: 0.749601264899653
        double var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CL = NV_Ith_S(rY, 20);
        // Units: mM; Initial value: 0.00893708435270205
        double var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHc = NV_Ith_S(rY, 21);
        // Units: mM; Initial value: 0.117445983314504
        double var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHm = NV_Ith_S(rY, 22);
        // Units: mM; Initial value: 0.0105996734077994
        double var_chaste_interface__Cytosolic_Ca_Buffers__CaM = NV_Ith_S(rY, 23);
        // Units: mM; Initial value: 0.000295653619580701
        double var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c = NV_Ith_S(rY, 24);
        // Units: mM; Initial value: 0.00192645052472679
        double var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m = NV_Ith_S(rY, 25);
        // Units: mM; Initial value: 0.137557201546068
        double var_chaste_interface__Cytosolic_Ca_Buffers__SRB = NV_Ith_S(rY, 26);
        // Units: mM; Initial value: 0.00217414510791738
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j = NV_Ith_S(rY, 27);
        // Units: mM; Initial value: 0.00738583890572642
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl = NV_Ith_S(rY, 28);
        // Units: mM; Initial value: 0.00988178900584875
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j = NV_Ith_S(rY, 29);
        // Units: mM; Initial value: 0.0734662466011574
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl = NV_Ith_S(rY, 30);
        // Units: mM; Initial value: 0.114400081504523
        double var_chaste_interface__SR_Ca_Concentrations__Csqn_b = NV_Ith_S(rY, 31);
        // Units: mM; Initial value: 1.19772047585784
        double var_chaste_interface__SR_Ca_Concentrations__Ca_sr = NV_Ith_S(rY, 32);
        // Units: mM; Initial value: 0.555180633859957
        double var_chaste_interface__Na_Concentrations__Na_j = NV_Ith_S(rY, 33);
        // Units: mM; Initial value: 8.3215690202059
        double var_chaste_interface__Na_Concentrations__Na_sl = NV_Ith_S(rY, 34);
        // Units: mM; Initial value: 8.32094589677861
        double var_chaste_interface__Na_Concentrations__Na_i = NV_Ith_S(rY, 35);
        // Units: mM; Initial value: 8.32114502072456
        double var_chaste_interface__K_Concentration__K_i = NV_Ith_S(rY, 36);
        // Units: mM; Initial value: 120.0
        double var_chaste_interface__Ca_Concentrations__Ca_j = NV_Ith_S(rY, 37);
        // Units: mM; Initial value: 0.000175415190830688
        double var_chaste_interface__Ca_Concentrations__Ca_sl = NV_Ith_S(rY, 38);
        // Units: mM; Initial value: 0.000106544589194246

        // Lookup table indexing
        const bool _oob_0 = Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane_potential__V_m);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane_potential__V_m);

        // Mathematics
        double d_dt_chaste_interface_var_membrane_potential__V_m;
        const double d_dt_chaste_interface_var_K_Concentration__K_i = 0; // mM / msec
        const double d_dt_chaste_interface_var_I_Ca__f_Ca_Bj = -0.011900000000000001 * var_chaste_interface__I_Ca__f_Ca_Bj + 1.7 * (1.0 - var_chaste_interface__I_Ca__f_Ca_Bj) * var_chaste_interface__Ca_Concentrations__Ca_j; // 1 / msec
        const double d_dt_chaste_interface_var_I_Ca__f_Ca_Bsl = -0.011900000000000001 * var_chaste_interface__I_Ca__f_Ca_Bsl + 1.7 * (1.0 - var_chaste_interface__I_Ca__f_Ca_Bsl) * var_chaste_interface__Ca_Concentrations__Ca_sl; // 1 / msec
        const double var_I_Ca__fcaCaMSL = 0; // dimensionless
        const double var_I_Ca__fcaCaj = 0; // dimensionless
        const double var_SR_Fluxes__RI = 1.0 - var_chaste_interface__SR_Fluxes__Ry_Ri - var_chaste_interface__SR_Fluxes__Ry_Ro - var_chaste_interface__SR_Fluxes__Ry_Rr; // mM
        const double var_SR_Fluxes__J_SRleak = (-var_chaste_interface__Ca_Concentrations__Ca_j + var_chaste_interface__SR_Ca_Concentrations__Ca_sr) * NV_Ith_S(mParameters, 0); // mM_per_msec
        const double d_dt_chaste_interface_var_I_Ca__d = (-var_chaste_interface__I_Ca__d + _lt_0_row[11]) * _lt_0_row[12]; // 1 / msec
        const double d_dt_chaste_interface_var_I_Ca__f = (_lt_0_row[15]) * (-var_chaste_interface__I_Ca__f + _lt_0_row[13] + _lt_0_row[14]); // 1 / msec
        const double d_dt_chaste_interface_var_I_Kr__x_kr = (-var_chaste_interface__I_Kr__x_kr + _lt_0_row[16]) / (_lt_0_row[17]); // 1 / msec
        const double d_dt_chaste_interface_var_I_Ks__x_ks = (_lt_0_row[19]) * (-var_chaste_interface__I_Ks__x_ks + _lt_0_row[18]); // 1 / msec
        const double d_dt_chaste_interface_var_I_Na__h = (((var_chaste_interface__membrane_potential__V_m >= -40.0) ? (0) : (0.057000000000000002 * exp(-11.764705882352942 + 0.14705882352941177 * NV_Ith_S(mParameters, 10) - 0.14705882352941177 * var_chaste_interface__membrane_potential__V_m))) + ((var_chaste_interface__membrane_potential__V_m >= -40.0) ? (5.9230769230769234 / (1.0 + exp(-0.96036036036036043 + 0.0900900900900901 * NV_Ith_S(mParameters, 10) - 0.0900900900900901 * var_chaste_interface__membrane_potential__V_m))) : (310000.0 * exp(0.34849999999999998 * var_chaste_interface__membrane_potential__V_m - 0.34849999999999998 * NV_Ith_S(mParameters, 10)) + 2.7000000000000002 * exp(0.079000000000000001 * var_chaste_interface__membrane_potential__V_m - 0.079000000000000001 * NV_Ith_S(mParameters, 10))))) * (-var_chaste_interface__I_Na__h + 0.01 * NV_Ith_S(mParameters, 9) + (1.0 - 0.01 * NV_Ith_S(mParameters, 9)) / pow((1.0 + exp(9.6298788694481825 + 0.13458950201884254 * var_chaste_interface__membrane_potential__V_m - 0.13458950201884254 * NV_Ith_S(mParameters, 10))), 2)); // 1 / msec
        const double d_dt_chaste_interface_var_I_Na__j = (((var_chaste_interface__membrane_potential__V_m >= -40.0) ? (0) : ((37.780000000000001 + var_chaste_interface__membrane_potential__V_m) * (-25428.0 * exp(0.24440000000000001 * var_chaste_interface__membrane_potential__V_m - 0.24440000000000001 * NV_Ith_S(mParameters, 10)) - 6.9480000000000002e-6 * exp(0.043909999999999998 * NV_Ith_S(mParameters, 10) - 0.043909999999999998 * var_chaste_interface__membrane_potential__V_m)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane_potential__V_m - 0.311 * NV_Ith_S(mParameters, 10))))) + ((var_chaste_interface__membrane_potential__V_m >= -40.0) ? (0.59999999999999998 * exp(0.057000000000000002 * var_chaste_interface__membrane_potential__V_m - 0.057000000000000002 * NV_Ith_S(mParameters, 10)) / (1.0 + exp(-3.2000000000000002 + 0.10000000000000001 * NV_Ith_S(mParameters, 10) - 0.10000000000000001 * var_chaste_interface__membrane_potential__V_m))) : (0.024240000000000001 * exp(0.01052 * NV_Ith_S(mParameters, 10) - 0.01052 * var_chaste_interface__membrane_potential__V_m) / (1.0 + exp(-5.5312920000000005 + 0.13780000000000001 * NV_Ith_S(mParameters, 10) - 0.13780000000000001 * var_chaste_interface__membrane_potential__V_m))))) * (-var_chaste_interface__I_Na__j + 0.01 * NV_Ith_S(mParameters, 9) + (1.0 - 0.01 * NV_Ith_S(mParameters, 9)) / pow((1.0 + exp(9.6298788694481825 + 0.13458950201884254 * var_chaste_interface__membrane_potential__V_m - 0.13458950201884254 * NV_Ith_S(mParameters, 10))), 2)); // 1 / msec
        const double d_dt_chaste_interface_var_I_Na__m = (-var_chaste_interface__I_Na__m + _lt_0_row[20]) / (_lt_0_row[21]); // 1 / msec
        const double var_I_to__xtoss = _lt_0_row[22]; // dimensionless
        const double d_dt_chaste_interface_var_I_to__x_to_f = (-var_chaste_interface__I_to__x_to_f + var_I_to__xtoss) / (_lt_0_row[23]); // 1 / msec
        const double d_dt_chaste_interface_var_I_to__x_to_s = (-var_chaste_interface__I_to__x_to_s + var_I_to__xtoss) / (_lt_0_row[24]); // 1 / msec
        const double var_I_to__ytoss = _lt_0_row[25]; // dimensionless
        const double d_dt_chaste_interface_var_I_to__y_to_f = (-var_chaste_interface__I_to__y_to_f + var_I_to__ytoss) / (_lt_0_row[26]); // 1 / msec
        const double d_dt_chaste_interface_var_I_to__y_to_s = (-var_chaste_interface__I_to__y_to_s + var_I_to__ytoss) / (_lt_0_row[27]); // 1 / msec
        const double var_I_NaK__fnak = 1 / (1.0 + _lt_0_row[2] + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * NV_Ith_S(mParameters, 6))) * _lt_0_row[1]); // dimensionless
        const double var_I_NaK__I_nak_junc = 0.11 * var_I_NaK__fnak * NV_Ith_S(mParameters, 17) * NV_Ith_S(mParameters, 5) / ((1.0 + 14641.0 / pow(var_chaste_interface__Na_Concentrations__Na_j, 4)) * (1.5 + NV_Ith_S(mParameters, 5))); // uA_per_uF
        const double var_I_NaK__I_nak_sl = 0.89000000000000001 * var_I_NaK__fnak * NV_Ith_S(mParameters, 17) * NV_Ith_S(mParameters, 5) / ((1.0 + 14641.0 / pow(var_chaste_interface__Na_Concentrations__Na_sl, 4)) * (1.5 + NV_Ith_S(mParameters, 5))); // uA_per_uF
        const double var_parameters__Qpow = 0; // dimensionless
        const double var_parameters__Vcell = 1.0506250000000001e-11 * M_PI; // liter
        const double var_parameters__Vjunc = 0.00053900000000000009 * var_parameters__Vcell; // liter
        const double var_parameters__Vmyo = 0.65000000000000002 * var_parameters__Vcell; // liter
        const double d_dt_chaste_interface_var_Na_Concentrations__Na_i = 1.6385999999999999e-12 * (-var_chaste_interface__Na_Concentrations__Na_i + var_chaste_interface__Na_Concentrations__Na_sl) * NV_Ith_S(mParameters, 3) / var_parameters__Vmyo; // mM / msec
        const double var_parameters__Bmax_SLhighj = 0.000165 * var_parameters__Vmyo / var_parameters__Vjunc; // mM
        const double var_parameters__Bmax_SLlowj = 0.00046000000000000001 * var_parameters__Vmyo / var_parameters__Vjunc; // mM
        const double var_parameters__Vsl = 0.02 * var_parameters__Vcell; // liter
        const double var_parameters__Bmax_SLhighsl = 0.0134 * var_parameters__Vmyo / var_parameters__Vsl; // mM
        const double var_parameters__Bmax_SLlowsl = 0.037400000000000003 * var_parameters__Vmyo / var_parameters__Vsl; // mM
        const double var_parameters__Vsr = 0.035000000000000003 * var_parameters__Vcell; // liter
        const double var_parameters__Bmax_Csqn = 0.14000000000000001 * var_parameters__Vmyo / var_parameters__Vsr; // mM
        const double var_SR_Fluxes__kCaSR = 15.0 - 14.0 / (1.0 + 0.13584112963311223 * pow((1 / var_chaste_interface__SR_Ca_Concentrations__Ca_sr), 2.5)); // dimensionless
        const double var_parameters__ena_junc = 26.712338705498265 * log(NV_Ith_S(mParameters, 6) / var_chaste_interface__Na_Concentrations__Na_j); // mV
        const double var_parameters__ena_sl = 26.712338705498265 * log(NV_Ith_S(mParameters, 6) / var_chaste_interface__Na_Concentrations__Na_sl); // mV
        const double var_SR_Fluxes__J_serca = pow(2.6000000000000001, var_parameters__Qpow) * (2814485.1633595936 * pow(var_chaste_interface__Ca_Concentrations__Ca_i, 1.7869999999999999) - 0.38742512113256738 * pow(var_chaste_interface__SR_Ca_Concentrations__Ca_sr, 1.7869999999999999)) * NV_Ith_S(mParameters, 2) / (1.0 + 0.38742512113256738 * pow(var_chaste_interface__SR_Ca_Concentrations__Ca_sr, 1.7869999999999999) + 2814485.1633595936 * pow(var_chaste_interface__Ca_Concentrations__Ca_i, 1.7869999999999999)); // mM_per_msec
        const double var_SR_Fluxes__kiSRCa = 0.5 * var_SR_Fluxes__kCaSR; // per_mM_per_msec
        const double var_SR_Fluxes__koSRCa = 10.0 / var_SR_Fluxes__kCaSR; // per_mM2_per_msec
        const double d_dt_chaste_interface_var_SR_Fluxes__Ry_Ri = -0.065000000000000002 * var_chaste_interface__SR_Fluxes__Ry_Ri + pow(var_chaste_interface__Ca_Concentrations__Ca_j, 2) * var_SR_Fluxes__RI * var_SR_Fluxes__koSRCa + var_chaste_interface__Ca_Concentrations__Ca_j * var_chaste_interface__SR_Fluxes__Ry_Ro * var_SR_Fluxes__kiSRCa; // mM / msec
        const double d_dt_chaste_interface_var_SR_Fluxes__Ry_Ro = 0.0050000000000000001 * var_chaste_interface__SR_Fluxes__Ry_Ri - 0.059999999999999998 * var_chaste_interface__SR_Fluxes__Ry_Ro + pow(var_chaste_interface__Ca_Concentrations__Ca_j, 2) * var_chaste_interface__SR_Fluxes__Ry_Rr * var_SR_Fluxes__koSRCa - var_chaste_interface__Ca_Concentrations__Ca_j * var_chaste_interface__SR_Fluxes__Ry_Ro * var_SR_Fluxes__kiSRCa; // mM / msec
        const double d_dt_chaste_interface_var_SR_Fluxes__Ry_Rr = 0.059999999999999998 * var_chaste_interface__SR_Fluxes__Ry_Ro + 0.0050000000000000001 * var_SR_Fluxes__RI - pow(var_chaste_interface__Ca_Concentrations__Ca_j, 2) * var_chaste_interface__SR_Fluxes__Ry_Rr * var_SR_Fluxes__koSRCa - var_chaste_interface__Ca_Concentrations__Ca_j * var_chaste_interface__SR_Fluxes__Ry_Rr * var_SR_Fluxes__kiSRCa; // mM / msec
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__CaM = -0.23799999999999999 * var_chaste_interface__Cytosolic_Ca_Buffers__CaM + 34.0 * (0.024 - var_chaste_interface__Cytosolic_Ca_Buffers__CaM) * var_chaste_interface__Ca_Concentrations__Ca_i; // mM / msec
        const double d_dt_chaste_interface_var_SR_Ca_Concentrations__Csqn_b = -65.0 * var_chaste_interface__SR_Ca_Concentrations__Csqn_b + 100.0 * (-var_chaste_interface__SR_Ca_Concentrations__Csqn_b + var_parameters__Bmax_Csqn) * var_chaste_interface__SR_Ca_Concentrations__Ca_sr; // mM / msec
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_c = -0.00046000000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c + 13.800000000000001 * (0.14000000000000001 - var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c - var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m) * var_chaste_interface__Ca_Concentrations__Ca_i; // mM / msec
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_m = 0.0021979999999999999 - 0.015699999999999999 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c - 0.015757 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m; // mM / msec
        const double var_Na_Buffers__dNa_Bj_dt = -0.001 * var_chaste_interface__Na_Buffers__Na_Bj + 0.0001 * (7.5609999999999999 - var_chaste_interface__Na_Buffers__Na_Bj) * var_chaste_interface__Na_Concentrations__Na_j; // mM_per_msec
        const double d_dt_chaste_interface_var_Na_Buffers__Na_Bj = var_Na_Buffers__dNa_Bj_dt; // mM / msec
        const double var_Na_Buffers__dNa_Bsl_dt = -0.001 * var_chaste_interface__Na_Buffers__Na_Bsl + 0.0001 * (1.6499999999999999 - var_chaste_interface__Na_Buffers__Na_Bsl) * var_chaste_interface__Na_Concentrations__Na_sl; // mM_per_msec
        const double d_dt_chaste_interface_var_Na_Buffers__Na_Bsl = var_Na_Buffers__dNa_Bsl_dt; // mM / msec
        const double d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_j = -0.029999999999999999 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j + 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j + var_parameters__Bmax_SLhighj) * var_chaste_interface__Ca_Concentrations__Ca_j; // mM / msec
        const double d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_sl = -0.029999999999999999 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl + 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl + var_parameters__Bmax_SLhighsl) * var_chaste_interface__Ca_Concentrations__Ca_sl; // mM / msec
        const double d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_j = -1.3 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j + 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j + var_parameters__Bmax_SLlowj) * var_chaste_interface__Ca_Concentrations__Ca_j; // mM / msec
        const double d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_sl = -1.3 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl + 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl + var_parameters__Bmax_SLlowsl) * var_chaste_interface__Ca_Concentrations__Ca_sl; // mM / msec
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__SRB = -0.059999999999999998 * var_chaste_interface__Cytosolic_Ca_Buffers__SRB + 100.0 * (0.017100000000000001 - var_chaste_interface__Cytosolic_Ca_Buffers__SRB) * var_chaste_interface__Ca_Concentrations__Ca_i; // mM / msec
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Tn_CHc = -3.1999999999999999e-5 * var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHc + 2.3700000000000001 * (0.14000000000000001 - var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHc - var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHm) * var_chaste_interface__Ca_Concentrations__Ca_i; // mM / msec
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Tn_CHm = 0.00042000000000000007 - 0.0030000000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHc - 0.0063300000000000006 * var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHm; // mM / msec
        const double d_dt_chaste_interface_var_Ca_Concentrations__Ca_i = -0.0026180000000000001 + 0.23799999999999999 * var_chaste_interface__Cytosolic_Ca_Buffers__CaM + 0.059999999999999998 * var_chaste_interface__Cytosolic_Ca_Buffers__SRB + 0.019599999999999999 * var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CL + 0.0063300000000000006 * var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHm + 0.016159999999999997 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c + 0.003032 * var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHc + 0.015757 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m + 3.2742999999999999e-12 * (-var_chaste_interface__Ca_Concentrations__Ca_i + var_chaste_interface__Ca_Concentrations__Ca_sl) / var_parameters__Vmyo - 34.0 * (0.024 - var_chaste_interface__Cytosolic_Ca_Buffers__CaM) * var_chaste_interface__Ca_Concentrations__Ca_i - 100.0 * (0.017100000000000001 - var_chaste_interface__Cytosolic_Ca_Buffers__SRB) * var_chaste_interface__Ca_Concentrations__Ca_i - 32.700000000000003 * (0.070000000000000007 - var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CL) * var_chaste_interface__Ca_Concentrations__Ca_i - 2.3700000000000001 * (0.14000000000000001 - var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHc - var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHm) * var_chaste_interface__Ca_Concentrations__Ca_i - 13.800000000000001 * (0.14000000000000001 - var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c - var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m) * var_chaste_interface__Ca_Concentrations__Ca_i - var_SR_Fluxes__J_serca * var_parameters__Vsr / var_parameters__Vmyo; // mM / msec
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Tn_CL = -0.019599999999999999 * var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CL + 32.700000000000003 * (0.070000000000000007 - var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CL) * var_chaste_interface__Ca_Concentrations__Ca_i; // mM / msec
        const double var_SR_Fluxes__J_SRCarel = (-var_chaste_interface__Ca_Concentrations__Ca_j + var_chaste_interface__SR_Ca_Concentrations__Ca_sr) * var_chaste_interface__SR_Fluxes__Ry_Ro * NV_Ith_S(mParameters, 1); // mM_per_msec
        const double d_dt_chaste_interface_var_SR_Ca_Concentrations__Ca_sr = -var_SR_Fluxes__J_SRCarel + 65.0 * var_chaste_interface__SR_Ca_Concentrations__Csqn_b - 100.0 * (-var_chaste_interface__SR_Ca_Concentrations__Csqn_b + var_parameters__Bmax_Csqn) * var_chaste_interface__SR_Ca_Concentrations__Ca_sr - var_SR_Fluxes__J_SRleak * var_parameters__Vmyo / var_parameters__Vsr + var_SR_Fluxes__J_serca; // mM / msec
        const double var_I_NCX__I_ncx_junc = 0.11 * pow(1.5700000000000001, var_parameters__Qpow) * (pow(var_chaste_interface__Na_Concentrations__Na_j, 3) * NV_Ith_S(mParameters, 4) * _lt_0_row[3] - pow(NV_Ith_S(mParameters, 6), 3) * var_chaste_interface__Ca_Concentrations__Ca_j * _lt_0_row[4]) * NV_Ith_S(mParameters, 16) / ((_lt_0_row[5]) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Ca_Concentrations__Ca_j, 2)) * (1.3 * pow(var_chaste_interface__Na_Concentrations__Na_j, 3) + pow(var_chaste_interface__Na_Concentrations__Na_j, 3) * NV_Ith_S(mParameters, 4) + pow(NV_Ith_S(mParameters, 6), 3) * var_chaste_interface__Ca_Concentrations__Ca_j + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Ca_Concentrations__Ca_j) * var_chaste_interface__Ca_Concentrations__Ca_j + 0.0035899999999999999 * pow(NV_Ith_S(mParameters, 6), 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Na_Concentrations__Na_j, 3)))); // uA_per_uF
        const double var_I_NCX__I_ncx_sl = 0.89000000000000001 * pow(1.5700000000000001, var_parameters__Qpow) * (pow(var_chaste_interface__Na_Concentrations__Na_sl, 3) * NV_Ith_S(mParameters, 4) * _lt_0_row[3] - pow(NV_Ith_S(mParameters, 6), 3) * var_chaste_interface__Ca_Concentrations__Ca_sl * _lt_0_row[4]) * NV_Ith_S(mParameters, 16) / ((_lt_0_row[5]) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Ca_Concentrations__Ca_sl, 2)) * (1.3 * pow(var_chaste_interface__Na_Concentrations__Na_sl, 3) + pow(var_chaste_interface__Na_Concentrations__Na_sl, 3) * NV_Ith_S(mParameters, 4) + pow(NV_Ith_S(mParameters, 6), 3) * var_chaste_interface__Ca_Concentrations__Ca_sl + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Ca_Concentrations__Ca_sl) * var_chaste_interface__Ca_Concentrations__Ca_sl + 0.0035899999999999999 * pow(NV_Ith_S(mParameters, 6), 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Na_Concentrations__Na_sl, 3)))); // uA_per_uF
        const double var_Na_Concentrations__I_Na_tot_junc = 3.0 * var_I_NCX__I_ncx_junc + 3.0 * var_I_NaK__I_nak_junc + 6.567e-5 * var_chaste_interface__membrane_potential__V_m - 6.567e-5 * var_parameters__ena_junc + 0.11 * pow(var_chaste_interface__I_Na__m, 3) * (-var_parameters__ena_junc + var_chaste_interface__membrane_potential__V_m) * var_chaste_interface__I_Na__h * var_chaste_interface__I_Na__j * NV_Ith_S(mParameters, 8) + 0.40500000000000003 * pow(1.8, var_parameters__Qpow) * (1.0 - var_chaste_interface__I_Ca__f_Ca_Bj + var_I_Ca__fcaCaj) * ((fabs(var_chaste_interface__membrane_potential__V_m) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane_potential__V_m) * (7.236374999999999e-11 * (-0.75 * NV_Ith_S(mParameters, 6) + 0.75 * var_chaste_interface__Na_Concentrations__Na_j * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) + 7.236374999999999e-11 * (-0.75 * NV_Ith_S(mParameters, 6) + 0.75 * var_chaste_interface__Na_Concentrations__Na_j * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8))) - 7.236374999999999e-11 * (-0.75 * NV_Ith_S(mParameters, 6) + 0.75 * var_chaste_interface__Na_Concentrations__Na_j * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8))) : (2.7090009151877515e-5 * (-0.75 * NV_Ith_S(mParameters, 6) + 0.75 * var_chaste_interface__Na_Concentrations__Na_j * _lt_0_row[6]) * var_chaste_interface__membrane_potential__V_m / (_lt_0_row[7]))) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f; // uA_per_uF
        const double d_dt_chaste_interface_var_Na_Concentrations__Na_j = (-var_Na_Buffers__dNa_Bj_dt + 1.8312999999999999e-14 * (-var_chaste_interface__Na_Concentrations__Na_j + var_chaste_interface__Na_Concentrations__Na_sl) / var_parameters__Vjunc - 1.0364305332435094e-5 * var_Na_Concentrations__I_Na_tot_junc * NV_Ith_S(mParameters, 18) / var_parameters__Vjunc) * NV_Ith_S(mParameters, 3); // mM / msec
        const double var_Na_Concentrations__I_Na_tot_sl = 3.0 * var_I_NCX__I_ncx_sl + 3.0 * var_I_NaK__I_nak_sl + 0.00053133 * var_chaste_interface__membrane_potential__V_m - 0.00053133 * var_parameters__ena_sl + 0.89000000000000001 * pow(var_chaste_interface__I_Na__m, 3) * (-var_parameters__ena_sl + var_chaste_interface__membrane_potential__V_m) * var_chaste_interface__I_Na__h * var_chaste_interface__I_Na__j * NV_Ith_S(mParameters, 8) + 0.044999999999999991 * pow(1.8, var_parameters__Qpow) * (1.0 - var_chaste_interface__I_Ca__f_Ca_Bsl + var_I_Ca__fcaCaMSL) * ((fabs(var_chaste_interface__membrane_potential__V_m) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane_potential__V_m) * (7.236374999999999e-11 * (-0.75 * NV_Ith_S(mParameters, 6) + 0.75 * var_chaste_interface__Na_Concentrations__Na_sl * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) + 7.236374999999999e-11 * (-0.75 * NV_Ith_S(mParameters, 6) + 0.75 * var_chaste_interface__Na_Concentrations__Na_sl * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8))) - 7.236374999999999e-11 * (-0.75 * NV_Ith_S(mParameters, 6) + 0.75 * var_chaste_interface__Na_Concentrations__Na_sl * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8))) : (2.7090009151877515e-5 * (-0.75 * NV_Ith_S(mParameters, 6) + 0.75 * var_chaste_interface__Na_Concentrations__Na_sl * _lt_0_row[6]) * var_chaste_interface__membrane_potential__V_m / (_lt_0_row[7]))) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f; // uA_per_uF
        const double d_dt_chaste_interface_var_Na_Concentrations__Na_sl = (-var_Na_Buffers__dNa_Bsl_dt + 1.6385999999999999e-12 * (-var_chaste_interface__Na_Concentrations__Na_sl + var_chaste_interface__Na_Concentrations__Na_i) / var_parameters__Vsl + 1.8312999999999999e-14 * (-var_chaste_interface__Na_Concentrations__Na_sl + var_chaste_interface__Na_Concentrations__Na_j) / var_parameters__Vsl - 1.0364305332435094e-5 * var_Na_Concentrations__I_Na_tot_sl * NV_Ith_S(mParameters, 18) / var_parameters__Vsl) * NV_Ith_S(mParameters, 3); // mM / msec
        const double var_Ca_Concentrations__I_Ca_tot_junc = 6.0643000000000002e-5 * var_chaste_interface__membrane_potential__V_m - 2.0 * var_I_NCX__I_ncx_junc - 0.00080995817805876559 * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__Ca_Concentrations__Ca_j) + 0.0074029999999999999 * pow(2.3500000000000001, var_parameters__Qpow) * pow(var_chaste_interface__Ca_Concentrations__Ca_j, 1.6000000000000001) / (5.2281977629563632e-6 + pow(var_chaste_interface__Ca_Concentrations__Ca_j, 1.6000000000000001)) + 0.40500000000000003 * pow(1.8, var_parameters__Qpow) * (1.0 - var_chaste_interface__I_Ca__f_Ca_Bj + var_I_Ca__fcaCaj) * ((fabs(var_chaste_interface__membrane_potential__V_m) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane_potential__V_m) * (1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 7) / (-1.0 + exp(9.9999999999999995e-8)) + 1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 7) / (-1.0 + exp(-9.9999999999999995e-8))) - 1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 7) / (-1.0 + exp(-9.9999999999999995e-8))) : (7.8019226357407252 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j * _lt_0_row[9]) * var_chaste_interface__membrane_potential__V_m * NV_Ith_S(mParameters, 7) / (_lt_0_row[10]))) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f; // uA_per_uF
        const double d_dt_chaste_interface_var_Ca_Concentrations__Ca_j = 0.029999999999999999 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j + 1.3 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j + 8.2413000000000004e-13 * (-var_chaste_interface__Ca_Concentrations__Ca_j + var_chaste_interface__Ca_Concentrations__Ca_sl) / var_parameters__Vjunc - 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j + var_parameters__Bmax_SLhighj) * var_chaste_interface__Ca_Concentrations__Ca_j - 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j + var_parameters__Bmax_SLlowj) * var_chaste_interface__Ca_Concentrations__Ca_j + var_SR_Fluxes__J_SRCarel * var_parameters__Vsr / var_parameters__Vjunc + var_SR_Fluxes__J_SRleak * var_parameters__Vmyo / var_parameters__Vjunc - 5.182152666217547e-6 * var_Ca_Concentrations__I_Ca_tot_junc * NV_Ith_S(mParameters, 18) / var_parameters__Vjunc; // mM / msec
        const double var_Ca_Concentrations__I_Ca_tot_sl = 0.00049065700000000003 * var_chaste_interface__membrane_potential__V_m - 2.0 * var_I_NCX__I_ncx_sl - 0.0065532979861118307 * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__Ca_Concentrations__Ca_sl) + 0.059896999999999999 * pow(2.3500000000000001, var_parameters__Qpow) * pow(var_chaste_interface__Ca_Concentrations__Ca_sl, 1.6000000000000001) / (5.2281977629563632e-6 + pow(var_chaste_interface__Ca_Concentrations__Ca_sl, 1.6000000000000001)) + 0.044999999999999991 * pow(1.8, var_parameters__Qpow) * (1.0 - var_chaste_interface__I_Ca__f_Ca_Bsl + var_I_Ca__fcaCaMSL) * ((fabs(var_chaste_interface__membrane_potential__V_m) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane_potential__V_m) * (1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 7) / (-1.0 + exp(9.9999999999999995e-8)) + 1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 7) / (-1.0 + exp(-9.9999999999999995e-8))) - 1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 7) / (-1.0 + exp(-9.9999999999999995e-8))) : (7.8019226357407252 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl * _lt_0_row[9]) * var_chaste_interface__membrane_potential__V_m * NV_Ith_S(mParameters, 7) / (_lt_0_row[10]))) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f; // uA_per_uF
        const double d_dt_chaste_interface_var_Ca_Concentrations__Ca_sl = 0.029999999999999999 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl + 1.3 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl + 8.2413000000000004e-13 * (-var_chaste_interface__Ca_Concentrations__Ca_sl + var_chaste_interface__Ca_Concentrations__Ca_j) / var_parameters__Vsl + 3.2742999999999999e-12 * (-var_chaste_interface__Ca_Concentrations__Ca_sl + var_chaste_interface__Ca_Concentrations__Ca_i) / var_parameters__Vsl - 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl + var_parameters__Bmax_SLhighsl) * var_chaste_interface__Ca_Concentrations__Ca_sl - 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl + var_parameters__Bmax_SLlowsl) * var_chaste_interface__Ca_Concentrations__Ca_sl - 5.182152666217547e-6 * var_Ca_Concentrations__I_Ca_tot_sl * NV_Ith_S(mParameters, 18) / var_parameters__Vsl; // mM / msec

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_membrane_potential__V_m = 0.0;
        }
        else
        {
            const double var_I_Kp__kp_kp = _lt_0_row[0]; // dimensionless
            const double var_parameters__ek = 26.712338705498265 * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__K_Concentration__K_i); // mV
            const double var_parameters__epi = 0; // dimensionless
            const double var_I_Ks__eks = 26.712338705498265 * log((0.018329999999999999 * NV_Ith_S(mParameters, 6) + NV_Ith_S(mParameters, 5)) / (0.018329999999999999 * var_chaste_interface__Na_Concentrations__Na_i + var_chaste_interface__K_Concentration__K_i)); // mV
            d_dt_chaste_interface_var_membrane_potential__V_m = -0.5535668961205934 - var_Ca_Concentrations__I_Ca_tot_junc - var_Ca_Concentrations__I_Ca_tot_sl - var_Na_Concentrations__I_Na_tot_junc - var_Na_Concentrations__I_Na_tot_sl + 2.0 * var_I_NaK__I_nak_junc + 2.0 * var_I_NaK__I_nak_sl - 0.0089999999999999993 * var_chaste_interface__membrane_potential__V_m - GetIntracellularAreaStimulus(var_chaste_interface__environment__time) / HeartConfig::Instance()->GetCapacitance() - 0.002 * (-var_parameters__ek + var_chaste_interface__membrane_potential__V_m) * var_I_Kp__kp_kp - 0.006029375 * (61.507432902288166 + var_chaste_interface__membrane_potential__V_m) / (1.0 + 0.10000000000000001 / var_chaste_interface__Ca_Concentrations__Ca_j) - 0.048783124999999997 * (61.507432902288166 + var_chaste_interface__membrane_potential__V_m) / (1.0 + 0.10000000000000001 / var_chaste_interface__Ca_Concentrations__Ca_sl) - 0.00038500000000000003 * pow(var_chaste_interface__I_Ks__x_ks, 2) * (-var_I_Ks__eks + var_chaste_interface__membrane_potential__V_m) - 0.89000000000000001 * pow(var_chaste_interface__I_Ks__x_ks, 2) * (-var_I_Ks__eks + var_chaste_interface__membrane_potential__V_m) * NV_Ith_S(mParameters, 14) - (-var_parameters__ek + var_chaste_interface__membrane_potential__V_m) * ((var_parameters__epi == 1.0) ? (0.1144 * NV_Ith_S(mParameters, 11)) : (0.0014039999999999999 * NV_Ith_S(mParameters, 11))) * var_chaste_interface__I_to__x_to_f * var_chaste_interface__I_to__y_to_f - (-var_parameters__ek + var_chaste_interface__membrane_potential__V_m) * ((var_parameters__epi == 1.0) ? (0.015599999999999999 * NV_Ith_S(mParameters, 15)) : (0.037595999999999997 * NV_Ith_S(mParameters, 15))) * var_chaste_interface__I_to__x_to_s * var_chaste_interface__I_to__y_to_s - 0.45000000000000001 * pow(1.8, var_parameters__Qpow) * (1.0 + 0.099999999999999978 * var_I_Ca__fcaCaMSL + 0.90000000000000002 * var_I_Ca__fcaCaj - 0.099999999999999978 * var_chaste_interface__I_Ca__f_Ca_Bsl - 0.90000000000000002 * var_chaste_interface__I_Ca__f_Ca_Bj) * ((fabs(var_chaste_interface__membrane_potential__V_m) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane_potential__V_m) * (1.3025475e-9 * (-0.75 * NV_Ith_S(mParameters, 5) + 0.75 * var_chaste_interface__K_Concentration__K_i * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) + 1.3025475e-9 * (-0.75 * NV_Ith_S(mParameters, 5) + 0.75 * var_chaste_interface__K_Concentration__K_i * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8))) - 1.3025475e-9 * (-0.75 * NV_Ith_S(mParameters, 5) + 0.75 * var_chaste_interface__K_Concentration__K_i * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8))) : (0.00048762016473379531 * (-0.75 * NV_Ith_S(mParameters, 5) + 0.75 * var_chaste_interface__K_Concentration__K_i * _lt_0_row[6]) * var_chaste_interface__membrane_potential__V_m / (_lt_0_row[7]))) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f - 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 5)) * (-var_parameters__ek + var_chaste_interface__membrane_potential__V_m) * NV_Ith_S(mParameters, 13) * var_chaste_interface__I_Kr__x_kr / (_lt_0_row[8]) - 0.4389381125701739 * sqrt(NV_Ith_S(mParameters, 5)) * (-var_parameters__ek + var_chaste_interface__membrane_potential__V_m) * NV_Ith_S(mParameters, 12) / ((1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane_potential__V_m - 0.23849999999999999 * var_parameters__ek)) * (1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane_potential__V_m - 0.23849999999999999 * var_parameters__ek)) + (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane_potential__V_m - 0.080320000000000003 * var_parameters__ek) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane_potential__V_m - 0.061749999999999999 * var_parameters__ek)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_parameters__ek - 0.51429999999999998 * var_chaste_interface__membrane_potential__V_m)))); // mV / msec
        }
        
        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_membrane_potential__V_m;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_Ca_Concentrations__Ca_i;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_I_Na__m;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_I_Na__h;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_I_Na__j;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_I_Kr__x_kr;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_I_Ks__x_ks;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_I_to__x_to_s;
        NV_Ith_S(rDY,8) = d_dt_chaste_interface_var_I_to__y_to_s;
        NV_Ith_S(rDY,9) = d_dt_chaste_interface_var_I_to__x_to_f;
        NV_Ith_S(rDY,10) = d_dt_chaste_interface_var_I_to__y_to_f;
        NV_Ith_S(rDY,11) = d_dt_chaste_interface_var_I_Ca__d;
        NV_Ith_S(rDY,12) = d_dt_chaste_interface_var_I_Ca__f;
        NV_Ith_S(rDY,13) = d_dt_chaste_interface_var_I_Ca__f_Ca_Bj;
        NV_Ith_S(rDY,14) = d_dt_chaste_interface_var_I_Ca__f_Ca_Bsl;
        NV_Ith_S(rDY,15) = d_dt_chaste_interface_var_SR_Fluxes__Ry_Rr;
        NV_Ith_S(rDY,16) = d_dt_chaste_interface_var_SR_Fluxes__Ry_Ro;
        NV_Ith_S(rDY,17) = d_dt_chaste_interface_var_SR_Fluxes__Ry_Ri;
        NV_Ith_S(rDY,18) = d_dt_chaste_interface_var_Na_Buffers__Na_Bj;
        NV_Ith_S(rDY,19) = d_dt_chaste_interface_var_Na_Buffers__Na_Bsl;
        NV_Ith_S(rDY,20) = d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Tn_CL;
        NV_Ith_S(rDY,21) = d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Tn_CHc;
        NV_Ith_S(rDY,22) = d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Tn_CHm;
        NV_Ith_S(rDY,23) = d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__CaM;
        NV_Ith_S(rDY,24) = d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_c;
        NV_Ith_S(rDY,25) = d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_m;
        NV_Ith_S(rDY,26) = d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__SRB;
        NV_Ith_S(rDY,27) = d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_j;
        NV_Ith_S(rDY,28) = d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_sl;
        NV_Ith_S(rDY,29) = d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_j;
        NV_Ith_S(rDY,30) = d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_sl;
        NV_Ith_S(rDY,31) = d_dt_chaste_interface_var_SR_Ca_Concentrations__Csqn_b;
        NV_Ith_S(rDY,32) = d_dt_chaste_interface_var_SR_Ca_Concentrations__Ca_sr;
        NV_Ith_S(rDY,33) = d_dt_chaste_interface_var_Na_Concentrations__Na_j;
        NV_Ith_S(rDY,34) = d_dt_chaste_interface_var_Na_Concentrations__Na_sl;
        NV_Ith_S(rDY,35) = d_dt_chaste_interface_var_Na_Concentrations__Na_i;
        NV_Ith_S(rDY,36) = d_dt_chaste_interface_var_K_Concentration__K_i;
        NV_Ith_S(rDY,37) = d_dt_chaste_interface_var_Ca_Concentrations__Ca_j;
        NV_Ith_S(rDY,38) = d_dt_chaste_interface_var_Ca_Concentrations__Ca_sl;
    }

    void Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane_potential__V_m = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: mV; Initial value: -81.4229700631461
        double var_chaste_interface__Ca_Concentrations__Ca_i = NV_Ith_S(rY, 1);
        // Units: mM; Initial value: 8.72745589849657e-05
        double var_chaste_interface__I_Na__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.00381858135062259
        double var_chaste_interface__I_Na__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.625086621635645
        double var_chaste_interface__I_Na__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.62332507235506
        double var_chaste_interface__I_Kr__x_kr = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.021733554982663
        double var_chaste_interface__I_Ks__x_ks = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.00428981903391989
        double var_chaste_interface__I_to__x_to_s = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.000441539203559411
        double var_chaste_interface__I_to__y_to_s = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.784875334693892
        double var_chaste_interface__I_to__x_to_f = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.000441531250866821
        double var_chaste_interface__I_to__y_to_f = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.999995817153572
        double var_chaste_interface__I_Ca__d = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 2.93982287251302e-06
        double var_chaste_interface__I_Ca__f = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.99511673495949
        double var_chaste_interface__I_Ca__f_Ca_Bj = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.0246142436477748
        double var_chaste_interface__I_Ca__f_Ca_Bsl = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.0152416826209301
        double var_chaste_interface__SR_Fluxes__Ry_Rr = NV_Ith_S(rY, 15);
        // Units: mM; Initial value: 0.891022230597263
        double var_chaste_interface__SR_Fluxes__Ry_Ro = NV_Ith_S(rY, 16);
        // Units: mM; Initial value: 7.37484660389498e-07
        double var_chaste_interface__SR_Fluxes__Ry_Ri = NV_Ith_S(rY, 17);
        // Units: mM; Initial value: 9.01984485847386e-08
        double var_chaste_interface__Na_Buffers__Na_Bj = NV_Ith_S(rY, 18);
        // Units: mM; Initial value: 3.43545459048316
        double var_chaste_interface__Na_Buffers__Na_Bsl = NV_Ith_S(rY, 19);
        // Units: mM; Initial value: 0.749601264899653
        double var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CL = NV_Ith_S(rY, 20);
        // Units: mM; Initial value: 0.00893708435270205
        double var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHc = NV_Ith_S(rY, 21);
        // Units: mM; Initial value: 0.117445983314504
        double var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHm = NV_Ith_S(rY, 22);
        // Units: mM; Initial value: 0.0105996734077994
        double var_chaste_interface__Cytosolic_Ca_Buffers__CaM = NV_Ith_S(rY, 23);
        // Units: mM; Initial value: 0.000295653619580701
        double var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c = NV_Ith_S(rY, 24);
        // Units: mM; Initial value: 0.00192645052472679
        double var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m = NV_Ith_S(rY, 25);
        // Units: mM; Initial value: 0.137557201546068
        double var_chaste_interface__Cytosolic_Ca_Buffers__SRB = NV_Ith_S(rY, 26);
        // Units: mM; Initial value: 0.00217414510791738
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j = NV_Ith_S(rY, 27);
        // Units: mM; Initial value: 0.00738583890572642
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl = NV_Ith_S(rY, 28);
        // Units: mM; Initial value: 0.00988178900584875
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j = NV_Ith_S(rY, 29);
        // Units: mM; Initial value: 0.0734662466011574
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl = NV_Ith_S(rY, 30);
        // Units: mM; Initial value: 0.114400081504523
        double var_chaste_interface__SR_Ca_Concentrations__Csqn_b = NV_Ith_S(rY, 31);
        // Units: mM; Initial value: 1.19772047585784
        double var_chaste_interface__SR_Ca_Concentrations__Ca_sr = NV_Ith_S(rY, 32);
        // Units: mM; Initial value: 0.555180633859957
        double var_chaste_interface__Na_Concentrations__Na_j = NV_Ith_S(rY, 33);
        // Units: mM; Initial value: 8.3215690202059
        double var_chaste_interface__Na_Concentrations__Na_sl = NV_Ith_S(rY, 34);
        // Units: mM; Initial value: 8.32094589677861
        double var_chaste_interface__Na_Concentrations__Na_i = NV_Ith_S(rY, 35);
        // Units: mM; Initial value: 8.32114502072456
        double var_chaste_interface__K_Concentration__K_i = NV_Ith_S(rY, 36);
        // Units: mM; Initial value: 120.0
        double var_chaste_interface__Ca_Concentrations__Ca_j = NV_Ith_S(rY, 37);
        // Units: mM; Initial value: 0.000175415190830688
        double var_chaste_interface__Ca_Concentrations__Ca_sl = NV_Ith_S(rY, 38);
        // Units: mM; Initial value: 0.000106544589194246
        
        // Lookup table indexing
        const bool _oob_0 = Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane_potential__V_m);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane_potential__V_m);
const double var_x0 = -0.34100000000000003 * NV_Ith_S(mParameters, 4);
        const double var_x1 = exp(9.9999999999999995e-8);
        const double var_x2 = 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl;
        const double var_x3 = var_x0 + var_x1 * var_x2;
        const double var_x4 = 1 / (-1.0 + var_x1);
        const double var_x5 = 3.9009613178703626 * NV_Ith_S(mParameters, 7);
        const double var_x6 = var_x4 * var_x5;
        const double var_x7 = exp(-9.9999999999999995e-8);
        const double var_x8 = var_x0 + var_x2 * var_x7;
        const double var_x9 = 1 / (-1.0 + var_x7);
        const double var_x10 = var_x5 * var_x9;
        const double var_x11 = var_x10 * var_x8 + var_x3 * var_x6;
        const double var_x12 = 0.044999999999999991 * var_chaste_interface__I_Ca__f_Ca_Bsl;
        const double var_x13 = -0.044999999999999991 + var_x12;
        const double var_x14 = var_x13 * var_chaste_interface__I_Ca__f;
        const double var_x15 = var_x14 * var_chaste_interface__I_Ca__d;
        const double var_x16 = 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j;
        const double var_x17 = var_x0 + var_x1 * var_x16;
        const double var_x18 = var_x0 + var_x16 * var_x7;
        const double var_x19 = var_x10 * var_x18 + var_x17 * var_x6;
        const double var_x20 = 0.40500000000000003 * var_chaste_interface__I_Ca__f_Ca_Bj;
        const double var_x21 = -0.40500000000000003 + var_x20;
        const double var_x22 = var_x21 * var_chaste_interface__I_Ca__f;
        const double var_x23 = var_x22 * var_chaste_interface__I_Ca__d;
        const double var_x24 = -0.75 * NV_Ith_S(mParameters, 6);
        const double var_x25 = 0.75 * var_chaste_interface__Na_Concentrations__Na_sl;
        const double var_x26 = var_x24 + var_x1 * var_x25;
        const double var_x27 = 1.3545004575938757e-5 * var_x4;
        const double var_x28 = var_x24 + var_x25 * var_x7;
        const double var_x29 = 1.3545004575938757e-5 * var_x9;
        const double var_x30 = var_x26 * var_x27 + var_x28 * var_x29;
        const double var_x31 = 0.75 * var_chaste_interface__Na_Concentrations__Na_j;
        const double var_x32 = var_x24 + var_x1 * var_x31;
        const double var_x33 = var_x24 + var_x31 * var_x7;
        const double var_x34 = var_x27 * var_x32 + var_x29 * var_x33;
        const double var_x35 = -0.75 * NV_Ith_S(mParameters, 5);
        const double var_x36 = 0.75 * var_chaste_interface__K_Concentration__K_i;
        const double var_x37 = var_x4 * (var_x35 + var_x1 * var_x36);
        const double var_x38 = var_x9 * (var_x35 + var_x36 * var_x7);
        const double var_x39 = 1.0 - 0.099999999999999978 * var_chaste_interface__I_Ca__f_Ca_Bsl - 0.90000000000000002 * var_chaste_interface__I_Ca__f_Ca_Bj;
        const double var_x40 = var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f;
        const double var_x41 = var_x39 * var_x40;
        const double var_x42 = exp(7.4880000000000004 - 0.16722408026755853 * var_chaste_interface__membrane_potential__V_m);
        const double var_x43 = 1.0 + var_x42;
        const double var_x44 = 1 / var_x43;
        const double var_x45 = 1 / var_chaste_interface__Ca_Concentrations__Ca_j;
        const double var_x46 = 1.0 + 0.10000000000000001 * var_x45;
        const double var_x47 = 1 / var_chaste_interface__Ca_Concentrations__Ca_sl;
        const double var_x48 = 1.0 + 0.10000000000000001 * var_x47;
        const double var_x49 = pow(var_chaste_interface__I_Ks__x_ks, 2);
        const double var_x50 = var_x49 * NV_Ith_S(mParameters, 14);
        const double var_x51 = 1 / var_chaste_interface__K_Concentration__K_i;
        const double var_x52 = log(var_x51 * NV_Ith_S(mParameters, 5));
        const double var_x53 = -26.712338705498265 * var_x52 + var_chaste_interface__membrane_potential__V_m;
        const double var_x54 = NV_Ith_S(mParameters, 15) * var_chaste_interface__I_to__x_to_s * var_chaste_interface__I_to__y_to_s;
        const double var_x55 = NV_Ith_S(mParameters, 11) * var_chaste_interface__I_to__x_to_f * var_chaste_interface__I_to__y_to_f;
        const double var_x56 = pow(var_chaste_interface__I_Na__m, 3);
        const double var_x57 = var_x56 * var_chaste_interface__I_Na__j * NV_Ith_S(mParameters, 8);
        const double var_x58 = var_x57 * var_chaste_interface__I_Na__h;
        const double var_x59 = sqrt(NV_Ith_S(mParameters, 5));
        const double var_x60 = var_x59 * NV_Ith_S(mParameters, 13) * var_chaste_interface__I_Kr__x_kr;
        const double var_x61 = exp(3.0833333333333335 + 0.041666666666666664 * var_chaste_interface__membrane_potential__V_m);
        const double var_x62 = 1.0 + var_x61;
        const double var_x63 = 1 / var_x62;
        const double var_x64 = 0.43033148291193518 * var_x63;
        const double var_x65 = exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane_potential__V_m - 6.3708927812613361 * var_x52);
        const double var_x66 = 1.0 + var_x65;
        const double var_x67 = 1 / var_x66;
        const double var_x68 = exp(-2.4444678999999998 + 13.738155796237757 * var_x52 - 0.51429999999999998 * var_chaste_interface__membrane_potential__V_m);
        const double var_x69 = 1.0 + var_x68;
        const double var_x70 = 1 / var_x69;
        const double var_x71 = exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane_potential__V_m - 2.1455350448256207 * var_x52);
        const double var_x72 = exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane_potential__V_m - 1.6494869150645177 * var_x52);
        const double var_x73 = var_x72 + 0.49124000000000001 * var_x71;
        const double var_x74 = var_x70 * var_x73;
        const double var_x75 = var_x59 * NV_Ith_S(mParameters, 12) / (var_x74 + 1.02 * var_x67);
        const double var_x76 = var_x67 * var_x75;
        const double var_x77 = _lt_0_row[3];
        const double var_x78 = pow(var_chaste_interface__Na_Concentrations__Na_j, 3);
        const double var_x79 = var_x78 * NV_Ith_S(mParameters, 4);
        const double var_x80 = var_x77 * var_x79;
        const double var_x81 = _lt_0_row[4];
        const double var_x82 = pow(NV_Ith_S(mParameters, 6), 3);
        const double var_x83 = var_x82 * var_chaste_interface__Ca_Concentrations__Ca_j;
        const double var_x84 = var_x81 * var_x83;
        const double var_x85 = 1.0 + 0.32000000000000001 * var_x81;
        const double var_x86 = NV_Ith_S(mParameters, 16) / var_x85;
        const double var_x87 = pow(var_chaste_interface__Ca_Concentrations__Ca_j, 2);
        const double var_x88 = 1 / var_x87;
        const double var_x89 = 1.0 + 2.2499999999999996e-8 * var_x88;
        const double var_x90 = 1 / var_x89;
        const double var_x91 = (1.0 + 278.55153203342621 * var_chaste_interface__Ca_Concentrations__Ca_j) * var_chaste_interface__Ca_Concentrations__Ca_j;
        const double var_x92 = 1.0 + 0.00053869674493876331 * var_x78;
        const double var_x93 = 0.0035899999999999999 * var_x82;
        const double var_x94 = 1 / (var_x79 + var_x83 + 669921.875 * var_x91 + 1.3 * var_x78 + var_x92 * var_x93);
        const double var_x95 = var_x90 * var_x94;
        const double var_x96 = var_x86 * var_x95;
        const double var_x97 = var_x96 * (0.010107688547106707 * var_x80 + 0.027328194960695912 * var_x84);
        const double var_x98 = pow(var_chaste_interface__Na_Concentrations__Na_sl, 3);
        const double var_x99 = var_x98 * NV_Ith_S(mParameters, 4);
        const double var_x100 = var_x77 * var_x99;
        const double var_x101 = var_x82 * var_chaste_interface__Ca_Concentrations__Ca_sl;
        const double var_x102 = var_x101 * var_x81;
        const double var_x103 = pow(var_chaste_interface__Ca_Concentrations__Ca_sl, (-2));
        const double var_x104 = 1.0 + 2.2499999999999996e-8 * var_x103;
        const double var_x105 = 1 / var_x104;
        const double var_x106 = (1.0 + 278.55153203342621 * var_chaste_interface__Ca_Concentrations__Ca_sl) * var_chaste_interface__Ca_Concentrations__Ca_sl;
        const double var_x107 = 1.0 + 0.00053869674493876331 * var_x98;
        const double var_x108 = 1 / (var_x101 + var_x99 + 669921.875 * var_x106 + 1.3 * var_x98 + var_x107 * var_x93);
        const double var_x109 = var_x105 * var_x108;
        const double var_x110 = var_x109 * var_x86;
        const double var_x111 = var_x110 * (0.010107688547106707 * var_x100 + 0.027328194960695912 * var_x102);
        const double var_x112 = var_x65 / pow(var_x66, 2);
        const double var_x113 = var_x53 * var_x75;
        const double var_x114 = pow(var_chaste_interface__Na_Concentrations__Na_j, (-4));
        const double var_x115 = exp(-0.003743588350780262 * var_chaste_interface__membrane_potential__V_m);
        const double var_x116 = exp(0.01485884101040119 * NV_Ith_S(mParameters, 6));
        const double var_x117 = 0.037435883507802616 * var_chaste_interface__membrane_potential__V_m;
        const double var_x118 = exp(-var_x117);
        const double var_x119 = 1.0 + 0.1245 * var_x115 + 0.036499999999999998 * var_x118 * (-0.14285714285714285 + 0.14285714285714285 * var_x116);
        const double var_x120 = NV_Ith_S(mParameters, 17) * NV_Ith_S(mParameters, 5) / (1.5 + NV_Ith_S(mParameters, 5));
        const double var_x121 = var_x120 * (0.00046607674967214262 * var_x115 + 0.037435883507802616 * var_x118 * (-0.0052142857142857138 + 0.0052142857142857138 * var_x116)) / pow(var_x119, 2);
        const double var_x122 = var_x121 / (1.0 + 14641.0 * var_x114);
        const double var_x123 = pow(var_chaste_interface__Na_Concentrations__Na_sl, (-4));
        const double var_x124 = var_x121 / (1.0 + 14641.0 * var_x123);
        const double var_x125 = var_x68 * var_x73 / pow(var_x69, 2);
        const double var_x126 = var_x53 * var_x59;
        const double var_x127 = 0.42189361069797565 * var_x126 * var_x67 * NV_Ith_S(mParameters, 12) / pow((var_x67 + 0.98039215686274506 * var_x74), 2);
        const double var_x128 = var_x100 - var_x102;
        const double var_x129 = var_x81 * NV_Ith_S(mParameters, 16) / pow(var_x85, 2);
        const double var_x130 = var_x109 * var_x128 * var_x129;
        const double var_x131 = var_x80 - var_x84;
        const double var_x132 = var_x129 * var_x131 * var_x95;
        const double var_x133 = -0.010148299999999999 - var_x58 - 0.002 * var_x44 - 0.11 * var_x122 - 0.11 * var_x97 - 0.89000000000000001 * var_x111 - 0.89000000000000001 * var_x124 - 0.89000000000000001 * var_x50 - 0.006029375 / var_x46 - 0.0077830699248061953 * var_x130 - 0.037595999999999997 * var_x54 - 0.0014039999999999999 * var_x55 - 0.048783124999999997 / var_x48 - 0.00038500000000000003 * var_x49 - 0.4389381125701739 * var_x76 - 0.00096195246261649608 * var_x132 - var_x127 * (0.24326999999999999 * var_x112 - 0.51429999999999998 * var_x125 - var_x70 * (0.061749999999999999 * var_x72 + 0.039456396800000001 * var_x71)) - var_x60 * var_x64 + 0.10468673984798647 * var_x112 * var_x113 - 0.00033444816053511704 * var_x42 * var_x53 / pow(var_x43, 2) + 0.017930478454663966 * var_x53 * var_x60 * var_x61 / pow(var_x62, 2);
        const double var_x134 = var_x133 + var_x15 * var_x30 + var_x23 * var_x34 + var_x41 * (-0.00010971453706510395 * var_x37 - 0.00010971453706510395 * var_x38);
        const double var_x135 = fabs(var_chaste_interface__membrane_potential__V_m);
        const double var_x136 = var_x135 < 1.3356169352749131e-6;
        const double var_x137 = _lt_0_row[9];
        const double var_x138 = -1.0 + var_x137;
        const double var_x139 = NV_Ith_S(mParameters, 7) / var_x138;
        const double var_x140 = 1.0 - var_chaste_interface__I_Ca__f_Ca_Bj;
        const double var_x141 = var_x140 * var_x40;
        const double var_x142 = var_x139 * var_x141;
        const double var_x143 = var_x0 + var_x137 * var_x16;
        const double var_x144 = 3.1597786674749937 * var_x143;
        const double var_x145 = var_x142 * var_x144;
        const double var_x146 = 1.0 - var_chaste_interface__I_Ca__f_Ca_Bsl;
        const double var_x147 = var_x139 * var_x40;
        const double var_x148 = var_x146 * var_x147;
        const double var_x149 = var_x0 + var_x137 * var_x2;
        const double var_x150 = 0.35108651860833257 * var_x149;
        const double var_x151 = var_x148 * var_x150;
        const double var_x152 = var_x146 * var_x40;
        const double var_x153 = var_x137 * var_chaste_interface__membrane_potential__V_m;
        const double var_x154 = var_x153 * NV_Ith_S(mParameters, 7) / pow(var_x138, 2);
        const double var_x155 = 0.026286468023563027 * var_x149 * var_x152 * var_x154;
        const double var_x156 = 0.23657821221206732 * var_x141 * var_x143 * var_x154;
        const double var_x157 = var_x148 * var_x153;
        const double var_x158 = 0.0089636855960349929 * var_x157 * var_chaste_interface__Ca_Concentrations__Ca_sl;
        const double var_x159 = var_x142 * var_x153;
        const double var_x160 = 0.080673170364314956 * var_x159 * var_chaste_interface__Ca_Concentrations__Ca_j;
        const double var_x161 = var_x155 + var_x156 - var_x145 - var_x151 - var_x158 - var_x160;
        const double var_x162 = var_x135 < 2.6712338705498262e-6;
        const double var_x163 = exp(var_x117);
        const double var_x164 = -1.0 + var_x163;
        const double var_x165 = 1 / var_x164;
        const double var_x166 = var_x165 * var_x40;
        const double var_x167 = var_x146 * var_x166;
        const double var_x168 = var_x24 + var_x163 * var_x25;
        const double var_x169 = 1.2190504118344879e-6 * var_x168;
        const double var_x170 = var_x167 * var_x169;
        const double var_x171 = var_x140 * var_x166;
        const double var_x172 = var_x24 + var_x163 * var_x31;
        const double var_x173 = 1.0971453706510394e-5 * var_x172;
        const double var_x174 = var_x171 * var_x173;
        const double var_x175 = var_x165 * var_x41;
        const double var_x176 = var_x35 + var_x163 * var_x36;
        const double var_x177 = 0.0002194290741302079 * var_x176;
        const double var_x178 = var_x163 * var_chaste_interface__membrane_potential__V_m;
        const double var_x179 = var_x178 / pow(var_x164, 2);
        const double var_x180 = 4.1072606286817238e-7 * var_x141 * var_x172 * var_x179;
        const double var_x181 = 4.5636229207574697e-8 * var_x152 * var_x168 * var_x179;
        const double var_x182 = var_x167 * var_x178;
        const double var_x183 = 3.4227171905681023e-8 * var_x182 * var_chaste_interface__Na_Concentrations__Na_sl;
        const double var_x184 = var_x175 * var_x178;
        const double var_x185 = var_x171 * var_x178;
        const double var_x186 = 3.0804454715112929e-7 * var_x185 * var_chaste_interface__Na_Concentrations__Na_j;
        const double var_x187 = 1 / var_chaste_interface__Na_Concentrations__Na_j;
        const double var_x188 = -26.712338705498265 * log(var_x187 * NV_Ith_S(mParameters, 6)) + var_chaste_interface__membrane_potential__V_m;
        const double var_x189 = var_chaste_interface__I_Na__h * NV_Ith_S(mParameters, 8);
        const double var_x190 = var_x189 * pow(var_chaste_interface__I_Na__m, 2) * var_chaste_interface__I_Na__j;
        const double var_x191 = var_x188 * var_x190;
        const double var_x192 = 1 / var_chaste_interface__Na_Concentrations__Na_sl;
        const double var_x193 = -26.712338705498265 * log(var_x192 * NV_Ith_S(mParameters, 6)) + var_chaste_interface__membrane_potential__V_m;
        const double var_x194 = var_x190 * var_x193;
        const double var_x195 = 0.11 * var_x188;
        const double var_x196 = 0.89000000000000001 * var_x193;
        const double var_x197 = var_x189 * var_x56;
        const double var_x198 = 1 / (0.018329999999999999 * var_chaste_interface__Na_Concentrations__Na_i + var_chaste_interface__K_Concentration__K_i);
        const double var_x199 = (-26.712338705498265 * log(var_x198 * (0.018329999999999999 * NV_Ith_S(mParameters, 6) + NV_Ith_S(mParameters, 5))) + var_chaste_interface__membrane_potential__V_m) * var_chaste_interface__I_Ks__x_ks;
        const double var_x200 = (1.0042770859719128 * var_x52 - 0.037595999999999997 * var_chaste_interface__membrane_potential__V_m) * NV_Ith_S(mParameters, 15);
        const double var_x201 = (0.037504123542519557 * var_x52 - 0.0014039999999999999 * var_chaste_interface__membrane_potential__V_m) * NV_Ith_S(mParameters, 11);
        const double var_x202 = 0.5 + 374358.83507802623 * var_chaste_interface__membrane_potential__V_m;
        const double var_x203 = 1.042038e-5 * NV_Ith_S(mParameters, 7);
        const double var_x204 = var_x203 * var_x4;
        const double var_x205 = var_x203 * var_x9;
        const double var_x206 = var_x205 * var_x8;
        const double var_x207 = var_x206 + var_x204 * var_x3;
        const double var_x208 = var_x202 * var_x207;
        const double var_x209 = -var_x206;
        const double var_x210 = var_x208 + var_x209;
        const double var_x211 = var_x18 * var_x205;
        const double var_x212 = var_x211 + var_x17 * var_x204;
        const double var_x213 = var_x202 * var_x212;
        const double var_x214 = -var_x211;
        const double var_x215 = var_x213 + var_x214;
        const double var_x216 = 0.5 + 187179.41753901311 * var_chaste_interface__membrane_potential__V_m;
        const double var_x217 = 7.236374999999999e-11 * var_x4;
        const double var_x218 = 7.236374999999999e-11 * var_x9;
        const double var_x219 = var_x218 * var_x28;
        const double var_x220 = var_x219 + var_x217 * var_x26;
        const double var_x221 = var_x216 * var_x220;
        const double var_x222 = -var_x219;
        const double var_x223 = var_x221 + var_x222;
        const double var_x224 = var_x218 * var_x33;
        const double var_x225 = var_x224 + var_x217 * var_x32;
        const double var_x226 = var_x216 * var_x225;
        const double var_x227 = -var_x224;
        const double var_x228 = var_x226 + var_x227;
        const double var_x229 = var_x216 * (1.3025475e-9 * var_x37 + 1.3025475e-9 * var_x38);
        const double var_x230 = var_x39 * (5.8614637499999997e-10 * var_x38 - 0.45000000000000001 * var_x229);
        const double var_x231 = var_x14 * var_x223 + var_x22 * var_x228 + var_x230 * var_chaste_interface__I_Ca__f;
        const double var_x232 = var_x139 * var_chaste_interface__membrane_potential__V_m;
        const double var_x233 = var_x232 * var_chaste_interface__I_Ca__f;
        const double var_x234 = var_x140 * var_x144;
        const double var_x235 = var_x233 * var_x234;
        const double var_x236 = var_x146 * var_x150;
        const double var_x237 = var_x233 * var_x236;
        const double var_x238 = -var_x235 - var_x237;
        const double var_x239 = var_x165 * var_chaste_interface__membrane_potential__V_m;
        const double var_x240 = var_x239 * var_chaste_interface__I_Ca__f;
        const double var_x241 = var_x146 * var_x169;
        const double var_x242 = var_x240 * var_x241;
        const double var_x243 = var_x140 * var_x173;
        const double var_x244 = var_x240 * var_x243;
        const double var_x245 = var_x177 * var_x39;
        const double var_x246 = var_x13 * var_chaste_interface__I_Ca__d;
        const double var_x247 = var_x21 * var_chaste_interface__I_Ca__d;
        const double var_x248 = var_x223 * var_x246 + var_x228 * var_x247 + var_x230 * var_chaste_interface__I_Ca__d;
        const double var_x249 = var_x232 * var_chaste_interface__I_Ca__d;
        const double var_x250 = var_x234 * var_x249;
        const double var_x251 = var_x236 * var_x249;
        const double var_x252 = -var_x250 - var_x251;
        const double var_x253 = var_x239 * var_chaste_interface__I_Ca__d;
        const double var_x254 = var_x241 * var_x253;
        const double var_x255 = var_x243 * var_x253;
        const double var_x256 = var_x9 * NV_Ith_S(mParameters, 7);
        const double var_x257 = 4.2202539000000001e-6 * var_x18 * var_x256;
        const double var_x258 = 2.9307318749999998e-11 * var_x33 * var_x9;
        const double var_x259 = var_x40 * (-var_x258 + 0.40500000000000003 * var_x226) + var_x40 * (0.40500000000000003 * var_x229 - 5.2753173749999997e-10 * var_x38);
        const double var_x260 = var_x147 * var_chaste_interface__membrane_potential__V_m;
        const double var_x261 = var_x144 * var_x260;
        const double var_x262 = var_x166 * var_chaste_interface__membrane_potential__V_m;
        const double var_x263 = var_x173 * var_x262;
        const double var_x264 = var_x176 * var_x262;
        const double var_x265 = 4.689170999999999e-7 * var_x256 * var_x8;
        const double var_x266 = 3.2563687499999991e-12 * var_x28 * var_x9;
        const double var_x267 = var_x40 * (-var_x266 + 0.044999999999999991 * var_x221) + var_x40 * (0.044999999999999991 * var_x229 - 5.8614637499999984e-11 * var_x38);
        const double var_x268 = var_x150 * var_x260;
        const double var_x269 = var_x169 * var_x262;
        const double var_x270 = var_x1 * var_x4;
        const double var_x271 = var_x7 * var_x9;
        const double var_x272 = 5.4272812499999995e-11 * var_x271;
        const double var_x273 = -var_x272 + var_x216 * (var_x272 + 5.4272812499999995e-11 * var_x270);
        const double var_x274 = 0.001754199282790071 * var_x187;
        const double var_x275 = 2.9383572576048089 * var_x187 * var_x58;
        const double var_x276 = var_x120 / var_x119;
        const double var_x277 = var_x276 / (pow((6.8301345536507063e-5 + var_x114), 2) * pow(var_chaste_interface__Na_Concentrations__Na_j, 5));
        const double var_x278 = pow(var_chaste_interface__Na_Concentrations__Na_j, 2);
        const double var_x279 = 3 * NV_Ith_S(mParameters, 4);
        const double var_x280 = 5.8017639429904805e-6 * var_x82;
        const double var_x281 = -3.9000000000000004 * var_x278 - var_x278 * var_x279 - var_x278 * var_x280;
        const double var_x282 = 5.3588338192419823e-9 * var_x82;
        const double var_x283 = var_x131 * var_x86;
        const double var_x284 = var_x283 * var_x90 / pow((var_x91 + 1.9405247813411081e-6 * var_x78 + 1.4927113702623908e-6 * var_x79 + 1.4927113702623908e-6 * var_x83 + var_x282 * var_x92), 2);
        const double var_x285 = 2.4510059584016866e-13 * var_x284;
        const double var_x286 = var_x77 * NV_Ith_S(mParameters, 4);
        const double var_x287 = var_x278 * var_x286 * var_x96;
        const double var_x288 = -var_x274 - var_x275 - 0.33000000000000002 * var_x287 - 3.0052592036063111e-5 * var_x277 - var_x281 * var_x285;
        const double var_x289 = 8.228590279882795e-6 * var_x185;
        const double var_x290 = 0.014193066924392391 * var_x192;
        const double var_x291 = 23.773981447893455 * var_x192 * var_x58;
        const double var_x292 = pow(var_chaste_interface__Na_Concentrations__Na_sl, 2);
        const double var_x293 = -3.9000000000000004 * var_x292 - var_x279 * var_x292 - var_x280 * var_x292;
        const double var_x294 = var_x128 * var_x86;
        const double var_x295 = var_x105 * var_x294 / pow((var_x106 + 1.9405247813411081e-6 * var_x98 + 1.4927113702623908e-6 * var_x101 + 1.4927113702623908e-6 * var_x99 + var_x107 * var_x282), 2);
        const double var_x296 = 1.9830866390704552e-12 * var_x295;
        const double var_x297 = var_x276 / (pow((6.8301345536507063e-5 + var_x123), 2) * pow(var_chaste_interface__Na_Concentrations__Na_sl, 5));
        const double var_x298 = var_x110 * var_x286 * var_x292;
        const double var_x299 = -var_x290 - var_x291 - 2.6699999999999999 * var_x298 - 0.00024315279010996517 * var_x297 - var_x293 * var_x296;
        const double var_x300 = 9.1428780887586595e-7 * var_x182;
        const double var_x301 = var_x198 * var_x49;
        const double var_x302 = var_x198 * var_x50;
        const double var_x303 = var_x112 * var_x51;
        const double var_x304 = -23.773981447893455 * var_x302 - 0.010284250401616832 * var_x301 - var_x127 * (6.4983106368865622 * var_x303 - var_x70 * (1.053972635420138 * var_x51 * var_x71 + 1.6494869150645177 * var_x51 * var_x72) - 13.738155796237757 * var_x125 * var_x51) + 2.7964276527937963 * var_x113 * var_x303 - 1.0042770859719128 * var_x51 * var_x54 - 11.72506353372661 * var_x51 * var_x76 - 0.037504123542519557 * var_x51 * var_x55 - 0.053424677410996532 * var_x44 * var_x51 - 11.495160327182951 * var_x51 * var_x60 * var_x63;
        const double var_x305 = 3.5533495800000002e-6 * NV_Ith_S(mParameters, 7);
        const double var_x306 = var_x271 * var_x305;
        const double var_x307 = -var_x306 + var_x202 * (var_x306 + var_x270 * var_x305);
        const double var_x308 = 0.00080995817805876559 * var_x45;
        const double var_x309 = 5.2281977629563632e-6 + pow(var_chaste_interface__Ca_Concentrations__Ca_j, 1.6000000000000001);
        const double var_x310 = 0.011844800000000001 * pow(var_chaste_interface__Ca_Concentrations__Ca_j, 2.2000000000000002) / pow(var_x309, 2);
        const double var_x311 = 0.011844800000000001 * pow(var_chaste_interface__Ca_Concentrations__Ca_j, 0.60000000000000009) / var_x309;
        const double var_x312 = 61.507432902288166 + var_chaste_interface__membrane_potential__V_m;
        const double var_x313 = var_x81 * var_x82;
        const double var_x314 = var_x313 * var_x96;
        const double var_x315 = -669921.875 - var_x82;
        const double var_x316 = var_x315 - 373215529.24791086 * var_chaste_interface__Ca_Concentrations__Ca_j;
        const double var_x317 = var_x283 * var_x94 / (pow(var_x89, 2) * pow(var_chaste_interface__Ca_Concentrations__Ca_j, 3));
        const double var_x318 = var_x310 - var_x308 - var_x311 + 0.11 * var_x314 - 4.9499999999999988e-9 * var_x317 - var_x285 * var_x316 - 0.00060293750000000007 * var_x312 * var_x88 / pow(var_x46, 2);
        const double var_x319 = 1.0774845256089729 * var_x159;
        const double var_x320 = 0.0065532979861118307 * var_x47;
        const double var_x321 = 5.2281977629563632e-6 + pow(var_chaste_interface__Ca_Concentrations__Ca_sl, 1.6000000000000001);
        const double var_x322 = 0.095835200000000009 * pow(var_chaste_interface__Ca_Concentrations__Ca_sl, 2.2000000000000002) / pow(var_x321, 2);
        const double var_x323 = 0.095835200000000009 * pow(var_chaste_interface__Ca_Concentrations__Ca_sl, 0.60000000000000009) / var_x321;
        const double var_x324 = var_x110 * var_x313;
        const double var_x325 = var_x315 - 373215529.24791086 * var_chaste_interface__Ca_Concentrations__Ca_sl;
        const double var_x326 = var_x108 * var_x294 / (pow(var_x104, 2) * pow(var_chaste_interface__Ca_Concentrations__Ca_sl, 3));
        const double var_x327 = var_x322 - var_x320 - var_x323 + 0.89000000000000001 * var_x324 - 4.0049999999999991e-8 * var_x326 - var_x296 * var_x325 - 0.0048783125000000007 * var_x103 * var_x312 / pow(var_x48, 2);
        const double var_x328 = 0.11972050284544142 * var_x157;
        const double var_x329 = 34.0 * var_chaste_interface__Cytosolic_Ca_Buffers__CaM;
        const double var_x330 = 100.0 * var_chaste_interface__Cytosolic_Ca_Buffers__SRB;
        const double var_x331 = 32.700000000000003 * var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CL;
        const double var_x332 = 2.3700000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHc;
        const double var_x333 = 2.3700000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__Tn_CHm;
        const double var_x334 = 13.800000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c;
        const double var_x335 = 13.800000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m;
        const double var_x336 = 1 / M_PI;
        const double var_x337 = 0.4794655196082917 * var_x336;
        const double var_x338 = pow(var_chaste_interface__Ca_Concentrations__Ca_i, 0.78699999999999992);
        const double var_x339 = pow(var_chaste_interface__SR_Ca_Concentrations__Ca_sr, 1.7869999999999999);
        const double var_x340 = 0.38742512113256738 * var_x339;
        const double var_x341 = pow(var_chaste_interface__Ca_Concentrations__Ca_i, 1.7869999999999999);
        const double var_x342 = 2814485.1633595936 * var_x341;
        const double var_x343 = NV_Ith_S(mParameters, 2) / (1.0 + var_x340 + var_x342);
        const double var_x344 = var_x338 * var_x343;
        const double var_x345 = (var_x342 - var_x340) * NV_Ith_S(mParameters, 2) / pow((3.5530476870814998e-7 + var_x341 + 1.3765399305573384e-7 * var_x339), 2);
        const double var_x346 = var_x338 * var_x345;
        const double var_x347 = 32.700000000000003 * var_chaste_interface__Ca_Concentrations__Ca_i;
        const double var_x348 = 2.3700000000000001 * var_chaste_interface__Ca_Concentrations__Ca_i;
        const double var_x349 = 34.0 * var_chaste_interface__Ca_Concentrations__Ca_i;
        const double var_x350 = 13.800000000000001 * var_chaste_interface__Ca_Concentrations__Ca_i;
        const double var_x351 = 100.0 * var_chaste_interface__Ca_Concentrations__Ca_i;
        const double var_x352 = pow(var_chaste_interface__SR_Ca_Concentrations__Ca_sr, 0.78699999999999992);
        const double var_x353 = var_x343 * var_x352;
        const double var_x354 = var_x345 * var_x352;
        const double var_x355 = exp(-0.0089012876052174655 * pow((-1 + 0.2073398299813394 * var_chaste_interface__membrane_potential__V_m), 2));
        const double var_x356 = exp(-8.682389366752302 * pow((1 + 0.021838829438742085 * var_chaste_interface__membrane_potential__V_m), 2));
        const double var_x357 = exp(-6.2967884828349945 - 0.11074197120708749 * var_chaste_interface__membrane_potential__V_m);
        const double var_x358 = 1.0 + var_x357;
        const double var_x359 = 0.12920000000000001 * var_x356;
        const double var_x360 = 0.064869999999999997 * var_x355;
        const double var_x361 = 1 / (var_x359 + var_x360);
        const double var_x362 = exp(-0.96036036036036043 + 0.0900900900900901 * NV_Ith_S(mParameters, 10) - 0.0900900900900901 * var_chaste_interface__membrane_potential__V_m);
        const double var_x363 = 1.0 + var_x362;
        const double var_x364 = 0.01 * NV_Ith_S(mParameters, 9);
        const double var_x365 = exp(9.6298788694481825 + 0.13458950201884254 * var_chaste_interface__membrane_potential__V_m - 0.13458950201884254 * NV_Ith_S(mParameters, 10));
        const double var_x366 = 1.0 + var_x365;
        const double var_x367 = 1.0 - var_x364;
        const double var_x368 = var_x364 + var_x367 / pow(var_x366, 2);
        const double var_x369 = var_x368 - var_chaste_interface__I_Na__h;
        const double var_x370 = 1 / var_x363;
        const double var_x371 = var_x365 * var_x367 / pow(var_x366, 3);
        const double var_x372 = var_chaste_interface__membrane_potential__V_m >= -40.0;
        const double var_x373 = exp(0.34849999999999998 * var_chaste_interface__membrane_potential__V_m - 0.34849999999999998 * NV_Ith_S(mParameters, 10));
        const double var_x374 = exp(0.079000000000000001 * var_chaste_interface__membrane_potential__V_m - 0.079000000000000001 * NV_Ith_S(mParameters, 10));
        const double var_x375 = exp(-11.764705882352942 + 0.14705882352941177 * NV_Ith_S(mParameters, 10) - 0.14705882352941177 * var_chaste_interface__membrane_potential__V_m);
        const double var_x376 = 310000.0 * var_x373;
        const double var_x377 = 2.7000000000000002 * var_x374;
        const double var_x378 = 0.057000000000000002 * var_x375;
        const double var_x379 = 0.26917900403768508 * var_x371;
        const double var_x380 = var_x368 - var_chaste_interface__I_Na__j;
        const double var_x381 = exp(-3.2000000000000002 + 0.10000000000000001 * NV_Ith_S(mParameters, 10) - 0.10000000000000001 * var_chaste_interface__membrane_potential__V_m);
        const double var_x382 = 1.0 + var_x381;
        const double var_x383 = exp(0.057000000000000002 * var_chaste_interface__membrane_potential__V_m - 0.057000000000000002 * NV_Ith_S(mParameters, 10));
        const double var_x384 = var_x383 / var_x382;
        const double var_x385 = exp(0.24440000000000001 * var_chaste_interface__membrane_potential__V_m - 0.24440000000000001 * NV_Ith_S(mParameters, 10));
        const double var_x386 = exp(0.043909999999999998 * NV_Ith_S(mParameters, 10) - 0.043909999999999998 * var_chaste_interface__membrane_potential__V_m);
        const double var_x387 = -25428.0 * var_x385 - 6.9480000000000002e-6 * var_x386;
        const double var_x388 = exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane_potential__V_m - 0.311 * NV_Ith_S(mParameters, 10));
        const double var_x389 = 1.0 + var_x388;
        const double var_x390 = 1 / var_x389;
        const double var_x391 = var_x387 * var_x390;
        const double var_x392 = exp(-5.5312920000000005 + 0.13780000000000001 * NV_Ith_S(mParameters, 10) - 0.13780000000000001 * var_chaste_interface__membrane_potential__V_m);
        const double var_x393 = 1.0 + var_x392;
        const double var_x394 = exp(0.01052 * NV_Ith_S(mParameters, 10) - 0.01052 * var_chaste_interface__membrane_potential__V_m);
        const double var_x395 = var_x394 / var_x393;
        const double var_x396 = 37.780000000000001 + var_chaste_interface__membrane_potential__V_m;
        const double var_x397 = 0.024240000000000001 * var_x395;
        const double var_x398 = var_x391 * var_x396;
        const double var_x399 = 0.050000000000000003 * var_chaste_interface__membrane_potential__V_m;
        const double var_x400 = exp(2.0 + var_x399);
        const double var_x401 = 1.0 + var_x400;
        const double var_x402 = 1 / var_x401;
        const double var_x403 = 0.1111111111111111 * var_chaste_interface__membrane_potential__V_m;
        const double var_x404 = exp(1.2222222222222223 + var_x403);
        const double var_x405 = 1.0 + var_x404;
        const double var_x406 = 1 / var_x405;
        const double var_x407 = exp(-2.4444444444444446 - var_x403);
        const double var_x408 = 1.0 + var_x407;
        const double var_x409 = 1 / var_x408;
        const double var_x410 = var_x406 * var_x409;
        const double var_x411 = 0.20000000000000001 * var_chaste_interface__membrane_potential__V_m;
        const double var_x412 = exp(-2.0 - var_x411);
        const double var_x413 = 1.0 + var_x412;
        const double var_x414 = 1 / (230.0 * var_x402 + 3300.0 * var_x410);
        const double var_x415 = exp(-0.26666666666666666 - 0.070175438596491224 * var_chaste_interface__membrane_potential__V_m);
        const double var_x416 = 1.0 + var_x415;
        const double var_x417 = exp(-0.17252124645892353 - 0.070821529745042494 * var_chaste_interface__membrane_potential__V_m);
        const double var_x418 = 0.00100999899000101 * var_x417;
        const double var_x419 = exp(0.20000000000000001 + 0.066666666666666666 * var_chaste_interface__membrane_potential__V_m);
        const double var_x420 = 1.0 + var_x419;
        const double var_x421 = 1 / var_x420;
        const double var_x422 = 1 / (0.5 + 9.0 * var_x421);
        const double var_x423 = exp(1.4615384615384615 - 0.076923076923076927 * var_chaste_interface__membrane_potential__V_m);
        const double var_x424 = 1.0 + var_x423;
        const double var_x425 = 0.076923076923076927 * var_x423 / pow(var_x424, 2);
        const double var_x426 = 1 / var_x424;
        const double var_x427 = exp(6.0 + 0.10000000000000001 * var_chaste_interface__membrane_potential__V_m);
        const double var_x428 = 1.0 + var_x427;
        const double var_x429 = 1 / var_x428;
        const double var_x430 = 1 / (30.0 + 800.0 * var_x429);
        const double var_x431 = exp(3.8999999999999999 + var_x411);
        const double var_x432 = 1.0 + var_x431;
        const double var_x433 = 0.20000000000000001 * var_x431 / pow(var_x432, 2);
        const double var_x434 = 1 / var_x432;
        const double var_x435 = exp(-0.81000000000000005 * pow((1 + 0.022222222222222223 * var_chaste_interface__membrane_potential__V_m), 2));
        const double var_x436 = 1 / (0.5 + 8.5 * var_x435);
        const double var_x437 = exp(-7.2727272727272725 * pow((1 + 0.025000000000000001 * var_chaste_interface__membrane_potential__V_m), 2));
        const double var_x438 = 1 / (7.0 + 85.0 * var_x437);
        const double var_x439 = exp(-0.83333333333333337 - 0.16666666666666666 * var_chaste_interface__membrane_potential__V_m);
        const double var_x440 = 1.0 + var_x439;
        const double var_x441 = exp(-1.000000000005626e-7);
        const double var_x442 = (1.0 - var_x441) / (1.0 + var_x441);
        const double var_x443 = 47619047.618779711 * var_x442;
        const double var_x444 = exp(1.000000000005626e-7);
        const double var_x445 = (1.0 - var_x444) / (1.0 + var_x444);
        const double var_x446 = (4.9999994000000001 + var_chaste_interface__membrane_potential__V_m) * (-var_x443 - 47619047.618779711 * var_x445);
        const double var_x447 = 1 / (var_x443 - 833333.33332864498 * var_x446);
        const double var_x448 = 1 / var_x440;
        const double var_x449 = -var_chaste_interface__I_Ca__d + var_x448;
        const double var_x450 = 5.0 + var_chaste_interface__membrane_potential__V_m;
        const double var_x451 = fabs(var_x450) < 6.0000000000337561e-7;
        const double var_x452 = 1.0 - var_x439;
        const double var_x453 = 1 / var_x452;
        const double var_x454 = var_x449 * var_x453;
        const double var_x455 = 0.035000000000000003 * var_x440;
        const double var_x456 = var_x450 * var_x453;
        const double var_x457 = 0.0058333333333333336 * var_x439;
        const double var_x458 = var_x450 * var_x457;
        const double var_x459 = 0.019699999999999999 * exp(-0.23877882250000002 * pow((1 + 0.068965517241379309 * var_chaste_interface__membrane_potential__V_m), 2));
        const double var_x460 = exp(2.5 - var_x399);
        const double var_x461 = 1.0 + var_x460;
        const double var_x462 = exp(3.8888888888888888 + var_x403);
        const double var_x463 = 1.0 + var_x462;
        const double var_x464 = 1 / var_chaste_interface__SR_Ca_Concentrations__Ca_sr;
        const double var_x465 = pow(var_x464, 2.5);
        const double var_x466 = 1.0 + 0.13584112963311223 * var_x465;
        const double var_x467 = 1 / var_x466;
        const double var_x468 = 7.0 * var_x467;
        const double var_x469 = -7.5 + var_x468;
        const double var_x470 = var_x469 * var_chaste_interface__Ca_Concentrations__Ca_j;
        const double var_x471 = 1 / (15.0 - 14.0 * var_x467);
        const double var_x472 = 10.0 * var_x471 * var_x87;
        const double var_x473 = -var_x472;
        const double var_x474 = var_chaste_interface__Ca_Concentrations__Ca_j * var_chaste_interface__SR_Fluxes__Ry_Rr;
        const double var_x475 = var_x464 * var_x465 / pow(var_x466, 2);
        const double var_x476 = 2.3772197685794643 * var_x475;
        const double var_x477 = 0.21130842387373014 * var_x475 * var_x87 / pow((1 - 0.93333333333333335 * var_x467), 2);
        const double var_x478 = var_x477 * var_chaste_interface__SR_Fluxes__Ry_Rr;
        const double var_x479 = 20.0 * var_x471;
        const double var_x480 = var_x474 * var_x479;
        const double var_x481 = var_x476 * var_chaste_interface__Ca_Concentrations__Ca_j * var_chaste_interface__SR_Fluxes__Ry_Ro;
        const double var_x482 = 7.5 - var_x468;
        const double var_x483 = 1.0 - var_chaste_interface__SR_Fluxes__Ry_Ri - var_chaste_interface__SR_Fluxes__Ry_Ro - var_chaste_interface__SR_Fluxes__Ry_Rr;
        const double var_x484 = 0.0001 * var_chaste_interface__Na_Concentrations__Na_j;
        const double var_x485 = 0.0001 * var_chaste_interface__Na_Buffers__Na_Bj;
        const double var_x486 = 0.0001 * var_chaste_interface__Na_Concentrations__Na_sl;
        const double var_x487 = 0.0001 * var_chaste_interface__Na_Buffers__Na_Bsl;
        const double var_x488 = -var_x348;
        const double var_x489 = -var_x350;
        const double var_x490 = 100.0 * var_chaste_interface__Ca_Concentrations__Ca_j;
        const double var_x491 = -var_x490;
        const double var_x492 = 100.0 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j;
        const double var_x493 = 100.0 * var_chaste_interface__Ca_Concentrations__Ca_sl;
        const double var_x494 = -var_x493;
        const double var_x495 = 100.0 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl;
        const double var_x496 = 100.0 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j;
        const double var_x497 = 100.0 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl;
        const double var_x498 = 100.0 * var_chaste_interface__SR_Ca_Concentrations__Ca_sr;
        const double var_x499 = 100.0 * var_chaste_interface__SR_Ca_Concentrations__Csqn_b;
        const double var_x500 = 18.571428571428569 * NV_Ith_S(mParameters, 0);
        const double var_x501 = var_chaste_interface__SR_Fluxes__Ry_Ro * NV_Ith_S(mParameters, 1);
        const double var_x502 = var_x501;
        const double var_x503 = 0.40500000000000003 - var_x20;
        const double var_x504 = var_x40 * var_x503;
        const double var_x505 = 6.567e-5 + 0.11 * var_x58 + 0.33000000000000002 * var_x122 + 0.33000000000000002 * var_x97 + 0.0028858573878494881 * var_x132;
        const double var_x506 = var_x336 * NV_Ith_S(mParameters, 3);
        const double var_x507 = var_x506 * NV_Ith_S(mParameters, 18);
        const double var_x508 = 1830221710.9367213 * var_x507;
        const double var_x509 = var_x507 * var_x57;
        const double var_x510 = 201324388.20303935 * var_x188;
        const double var_x511 = var_x197 * var_x507;
        const double var_x512 = 2.6712338705498262e-6 + var_chaste_interface__membrane_potential__V_m;
        const double var_x513 = var_x225 * var_x512;
        const double var_x514 = var_x503 * (var_x227 + 187179.41753901311 * var_x513);
        const double var_x515 = 3.2338732908121872 * var_x336;
        const double var_x516 = 7.3530178752050587e-13 * var_x284;
        const double var_x517 = var_x274 + var_x275 + 9.0157776108189337e-5 * var_x277 + 0.98999999999999999 * var_x287 + var_x281 * var_x516;
        const double var_x518 = var_x336 * NV_Ith_S(mParameters, 18);
        const double var_x519 = 0.044999999999999991 - var_x12;
        const double var_x520 = var_x40 * var_x519;
        const double var_x521 = 0.00053133 + 0.89000000000000001 * var_x58 + 2.6699999999999999 * var_x111 + 2.6699999999999999 * var_x124 + 0.023349209774418588 * var_x130;
        const double var_x522 = 49324475.109744638 * var_x507;
        const double var_x523 = 43898782.847672731 * var_x193;
        const double var_x524 = var_x220 * var_x512;
        const double var_x525 = var_x519 * (var_x222 + 187179.41753901311 * var_x524);
        const double var_x526 = 5.9492599172113663e-12 * var_x295;
        const double var_x527 = var_x290 + var_x291 + 8.0099999999999998 * var_x298 + 0.00072945837032989554 * var_x297 + var_x293 * var_x526;
        const double var_x528 = 0.23994508763098885 * var_x506;
        const double var_x529 = 6.0643000000000002e-5 - 0.22 * var_x97 - 0.0019239049252329922 * var_x132;
        const double var_x530 = 915110855.46836066 * var_x518;
        const double var_x531 = 1.3356169352749131e-6 + var_chaste_interface__membrane_potential__V_m;
        const double var_x532 = var_x212 * var_x531;
        const double var_x533 = var_x503 * (var_x214 + 374358.83507802623 * var_x532);
        const double var_x534 = 1205.9369202226344 * NV_Ith_S(mParameters, 0);
        const double var_x535 = 64.935064935064929 * var_x501;
        const double var_x536 = 4.9020119168033731e-13 * var_x284;
        const double var_x537 = 145.53224458892851 * var_x336;
        const double var_x538 = var_x308 + var_x311 - var_x310 + 0.22 * var_x314 - 9.8999999999999977e-9 * var_x317 - var_x316 * var_x536;
        const double var_x539 = 0.00049065700000000003 - 1.78 * var_x111 - 0.015566139849612391 * var_x130;
        const double var_x540 = 24662237.554872319 * var_x518;
        const double var_x541 = var_x207 * var_x531;
        const double var_x542 = var_x519 * (var_x209 + 374358.83507802623 * var_x541);
        const double var_x543 = 3.9661732781409103e-12 * var_x295;
        const double var_x544 = var_x320 + var_x323 - var_x322 + 1.78 * var_x324 - 8.0099999999999983e-8 * var_x326 - var_x325 * var_x543;
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = mSetVoltageDerivativeToZero ? 0.0 : (((var_x136) ? (var_x134 + var_x11 * var_x15 + var_x19 * var_x23) : ((var_x162) ? (var_x134 + var_x161) : (var_x133 + var_x161 + var_x180 + var_x181 - var_x170 - var_x174 - var_x183 - var_x186 - var_x175 * var_x177 - 6.1608909430225857e-6 * var_x184 * var_chaste_interface__K_Concentration__K_i + 8.2145212573634477e-6 * var_x176 * var_x179 * var_x41))));
        IJth(rJacobian, 2, 0) = 59.906641489902128 * (-var_chaste_interface__I_Na__m + 1 / pow(var_x358, 2)) * (-var_x359 * (-0.3792264410025028 - 0.0082818615637148471 * var_chaste_interface__membrane_potential__V_m) - var_x360 * (0.0036911829173615863 - 0.00076532923851577563 * var_chaste_interface__membrane_potential__V_m)) / pow((var_x356 + 0.5020897832817337 * var_x355), 2) + 0.22148394241417499 * var_x357 * var_x361 / pow(var_x358, 3);
        IJth(rJacobian, 3, 0) = ((var_x372) ? (-1.5943679469924423 * var_x370 * var_x371 + 0.53361053361053368 * var_x362 * var_x369 / pow(var_x363, 2)) : (var_x369 * (108035.0 * var_x373 + 0.21330000000000002 * var_x374 - 0.008382352941176471 * var_x375) - var_x379 * (var_x376 + var_x377 + var_x378)));
        IJth(rJacobian, 4, 0) = ((var_x372) ? (0.034200000000000001 * var_x380 * var_x384 - 0.16150740242261102 * var_x371 * var_x384 + 0.059999999999999998 * var_x380 * var_x381 * var_x383 / pow(var_x382, 2)) : (var_x380 * (var_x391 - 0.00025500480000000003 * var_x395 + var_x390 * var_x396 * (3.0508668000000001e-7 * var_x386 - 6214.6032000000005 * var_x385) + 0.0033402720000000005 * var_x392 * var_x394 / pow(var_x393, 2) - 0.311 * var_x387 * var_x388 * var_x396 / pow(var_x389, 2)) - var_x379 * (var_x397 + var_x398)));
        IJth(rJacobian, 5, 0) = 9.1827364554637282e-8 * (-var_chaste_interface__I_Kr__x_kr + 1 / var_x413) * (11.5 * var_x400 / pow(var_x401, 2) + 366.66666666666669 * var_x404 * var_x409 / pow(var_x405, 2) - 366.66666666666669 * var_x406 * var_x407 / pow(var_x408, 2)) / pow((var_x410 + 0.069696969696969702 * var_x402), 2) + 0.20000000000000001 * var_x412 * var_x414 / pow(var_x413, 2);
        IJth(rJacobian, 6, 0) = -7.1529673512819408e-5 * var_x417 * (-var_chaste_interface__I_Ks__x_ks + 1 / var_x416) + 0.070175438596491224 * var_x415 * (0.00100999899000101 + var_x418) / pow(var_x416, 2);
        IJth(rJacobian, 7, 0) = var_x422 * var_x425 + 0.0074074074074074077 * var_x419 * (var_x426 - var_chaste_interface__I_to__x_to_s) / (pow(var_x420, 2) * pow((0.055555555555555552 + var_x421), 2));
        IJth(rJacobian, 8, 0) = -var_x430 * var_x433 + 0.000125 * var_x427 * (var_x434 - var_chaste_interface__I_to__y_to_s) / (pow(var_x428, 2) * pow((0.037499999999999999 + var_x429), 2));
        IJth(rJacobian, 9, 0) = var_x425 * var_x436 - 0.11764705882352941 * var_x435 * (-0.035999999999999997 - 0.00080000000000000004 * var_chaste_interface__membrane_potential__V_m) * (var_x426 - var_chaste_interface__I_to__x_to_f) / pow((0.058823529411764705 + var_x435), 2);
        IJth(rJacobian, 10, 0) = -var_x433 * var_x438 - 0.011764705882352941 * var_x437 * (-0.36363636363636365 - 0.0090909090909090905 * var_chaste_interface__membrane_potential__V_m) * (var_x434 - var_chaste_interface__I_to__y_to_f) / pow((0.082352941176470587 + var_x437), 2);
        IJth(rJacobian, 11, 0) = ((var_x451) ? (0.16666666666666666 * var_x439 * var_x447 / pow(var_x440, 2) + 4.4100000000496225e-16 * var_x449 * (-39682539682093.172 * var_x442 - 39682539682093.172 * var_x445) / pow((var_x442 - 0.017500000000000002 * var_x446), 2)) : (var_x454 * var_x455 - var_x454 * var_x458 + var_x448 * var_x456 * var_x457 - var_x440 * var_x449 * var_x458 / pow(var_x452, 2)));
        IJth(rJacobian, 12, 0) = (0.02 + var_x459) * (0.029999999999999999 * var_x460 / pow(var_x461, 2) - 0.1111111111111111 * var_x462 / pow(var_x463, 2)) + var_x459 * (-0.032935010000000001 - 0.0022713799999999999 * var_chaste_interface__membrane_potential__V_m) * (-var_chaste_interface__I_Ca__f + 1 / var_x463 + 0.59999999999999998 / var_x461);
        IJth(rJacobian, 33, 0) = -var_x508 * ((var_x162) ? (var_x505 + var_x34 * var_x504) : (var_x174 + var_x186 + var_x505 - var_x180));
        IJth(rJacobian, 34, 0) = -var_x522 * ((var_x162) ? (var_x521 + var_x30 * var_x520) : (var_x170 + var_x183 + var_x521 - var_x181));
        IJth(rJacobian, 37, 0) = -var_x530 * ((var_x136) ? (var_x529 + var_x19 * var_x504) : (var_x145 + var_x160 + var_x529 - var_x156));
        IJth(rJacobian, 38, 0) = -var_x540 * ((var_x136) ? (var_x539 + var_x11 * var_x520) : (var_x151 + var_x158 + var_x539 - var_x155));
        IJth(rJacobian, 1, 1) = -7.0788000000000011 + var_x329 + var_x330 + var_x331 + var_x332 + var_x333 + var_x334 + var_x335 - var_x337 + 3.4188518090540365e-8 * var_x346 - 270818.42237280885 * var_x344;
        IJth(rJacobian, 20, 1) = 2.2890000000000006 - var_x331;
        IJth(rJacobian, 21, 1) = 0.33180000000000004 - var_x332 - var_x333;
        IJth(rJacobian, 23, 1) = 0.81600000000000006 - var_x329;
        IJth(rJacobian, 24, 1) = 1.9320000000000004 - var_x334 - var_x335;
        IJth(rJacobian, 26, 1) = 1.71 - var_x330;
        IJth(rJacobian, 32, 1) = 5029484.9869235931 * var_x344 - 6.3492962168146398e-7 * var_x346;
        IJth(rJacobian, 38, 1) = 15.582629387269481 * var_x336;
        IJth(rJacobian, 0, 2) = mSetVoltageDerivativeToZero ? 0.0 : (-0.33000000000000002 * var_x191 - 2.6699999999999999 * var_x194);
        IJth(rJacobian, 2, 2) = -var_x361;
        IJth(rJacobian, 33, 2) = -603973164.60911798 * var_x191 * var_x507;
        IJth(rJacobian, 34, 2) = -131696348.54301819 * var_x194 * var_x507;
        IJth(rJacobian, 0, 3) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x195 * var_x57 - var_x196 * var_x57);
        IJth(rJacobian, 3, 3) = ((var_x372) ? (-5.9230769230769234 * var_x370) : (-var_x376 - var_x377 - var_x378));
        IJth(rJacobian, 33, 3) = -var_x509 * var_x510;
        IJth(rJacobian, 34, 3) = -var_x509 * var_x523;
        IJth(rJacobian, 0, 4) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x195 * var_x197 - var_x196 * var_x197);
        IJth(rJacobian, 4, 4) = ((var_x372) ? (-0.59999999999999998 * var_x384) : (-var_x397 - var_x398));
        IJth(rJacobian, 33, 4) = -var_x510 * var_x511;
        IJth(rJacobian, 34, 4) = -var_x511 * var_x523;
        IJth(rJacobian, 0, 5) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x126 * var_x64 * NV_Ith_S(mParameters, 13));
        IJth(rJacobian, 5, 5) = -var_x414;
        IJth(rJacobian, 0, 6) = mSetVoltageDerivativeToZero ? 0.0 : (-0.00077000000000000007 * var_x199 - 1.78 * var_x199 * NV_Ith_S(mParameters, 14));
        IJth(rJacobian, 6, 6) = -0.00100999899000101 - var_x418;
        IJth(rJacobian, 0, 7) = mSetVoltageDerivativeToZero ? 0.0 : (var_x200 * var_chaste_interface__I_to__y_to_s);
        IJth(rJacobian, 7, 7) = -var_x422;
        IJth(rJacobian, 0, 8) = mSetVoltageDerivativeToZero ? 0.0 : (var_x200 * var_chaste_interface__I_to__x_to_s);
        IJth(rJacobian, 8, 8) = -var_x430;
        IJth(rJacobian, 0, 9) = mSetVoltageDerivativeToZero ? 0.0 : (var_x201 * var_chaste_interface__I_to__y_to_f);
        IJth(rJacobian, 9, 9) = -var_x436;
        IJth(rJacobian, 0, 10) = mSetVoltageDerivativeToZero ? 0.0 : (var_x201 * var_chaste_interface__I_to__x_to_f);
        IJth(rJacobian, 10, 10) = -var_x438;
        IJth(rJacobian, 0, 11) = mSetVoltageDerivativeToZero ? 0.0 : (((var_x136) ? (var_x231 + var_x14 * var_x210 + var_x215 * var_x22) : ((var_x162) ? (var_x231 + var_x238) : (var_x238 - var_x242 - var_x244 - var_x240 * var_x245))));
        IJth(rJacobian, 11, 11) = ((var_x451) ? (-var_x447) : (-var_x455 * var_x456));
        IJth(rJacobian, 33, 11) = -var_x508 * ((var_x162) ? (var_x514 * var_chaste_interface__I_Ca__f) : (var_x244));
        IJth(rJacobian, 34, 11) = -var_x522 * ((var_x162) ? (var_x525 * var_chaste_interface__I_Ca__f) : (var_x242));
        IJth(rJacobian, 37, 11) = -var_x530 * ((var_x136) ? (var_x533 * var_chaste_interface__I_Ca__f) : (var_x235));
        IJth(rJacobian, 38, 11) = -var_x540 * ((var_x136) ? (var_x542 * var_chaste_interface__I_Ca__f) : (var_x237));
        IJth(rJacobian, 0, 12) = mSetVoltageDerivativeToZero ? 0.0 : (((var_x136) ? (var_x248 + var_x210 * var_x246 + var_x215 * var_x247) : ((var_x162) ? (var_x248 + var_x252) : (var_x252 - var_x254 - var_x255 - var_x245 * var_x253))));
        IJth(rJacobian, 12, 12) = -0.02 - var_x459;
        IJth(rJacobian, 33, 12) = -var_x508 * ((var_x162) ? (var_x514 * var_chaste_interface__I_Ca__d) : (var_x255));
        IJth(rJacobian, 34, 12) = -var_x522 * ((var_x162) ? (var_x525 * var_chaste_interface__I_Ca__d) : (var_x254));
        IJth(rJacobian, 37, 12) = -var_x530 * ((var_x136) ? (var_x533 * var_chaste_interface__I_Ca__d) : (var_x250));
        IJth(rJacobian, 38, 12) = -var_x540 * ((var_x136) ? (var_x542 * var_chaste_interface__I_Ca__d) : (var_x251));
        IJth(rJacobian, 0, 13) = mSetVoltageDerivativeToZero ? 0.0 : (((var_x136) ? (var_x259 + var_x40 * (-var_x257 + 0.40500000000000003 * var_x213)) : ((var_x162) ? (var_x259 + var_x261) : (var_x261 + var_x263 + 0.00019748616671718712 * var_x264))));
        IJth(rJacobian, 13, 13) = -0.011900000000000001 - 1.7 * var_chaste_interface__Ca_Concentrations__Ca_j;
        IJth(rJacobian, 33, 13) = -var_x508 * ((var_x162) ? (var_x40 * (var_x258 - 75807.664103300311 * var_x513)) : (-var_x263));
        IJth(rJacobian, 37, 13) = -var_x530 * ((var_x136) ? (var_x40 * (var_x257 - 151615.32820660062 * var_x532)) : (-var_x261));
        IJth(rJacobian, 0, 14) = mSetVoltageDerivativeToZero ? 0.0 : (((var_x136) ? (var_x267 + var_x40 * (-var_x265 + 0.044999999999999991 * var_x208)) : ((var_x162) ? (var_x267 + var_x268) : (var_x268 + var_x269 + 2.1942907413020785e-5 * var_x264))));
        IJth(rJacobian, 14, 14) = -0.011900000000000001 - 1.7 * var_chaste_interface__Ca_Concentrations__Ca_sl;
        IJth(rJacobian, 34, 14) = -var_x522 * ((var_x162) ? (var_x40 * (var_x266 - 8423.0737892555881 * var_x524)) : (-var_x269));
        IJth(rJacobian, 38, 14) = -var_x540 * ((var_x136) ? (var_x40 * (var_x265 - 16846.147578511176 * var_x541)) : (-var_x268));
        IJth(rJacobian, 15, 15) = -0.0050000000000000001 + var_x470 + var_x473;
        IJth(rJacobian, 16, 15) = var_x472;
        IJth(rJacobian, 17, 15) = var_x473;
        IJth(rJacobian, 15, 16) = 0.055;
        IJth(rJacobian, 16, 16) = -0.059999999999999998 + var_x470;
        IJth(rJacobian, 17, 16) = var_x473 + var_x482 * var_chaste_interface__Ca_Concentrations__Ca_j;
        IJth(rJacobian, 32, 16) = (var_chaste_interface__Ca_Concentrations__Ca_j - var_chaste_interface__SR_Ca_Concentrations__Ca_sr) * NV_Ith_S(mParameters, 1);
        IJth(rJacobian, 37, 16) = (64.935064935064929 * var_chaste_interface__SR_Ca_Concentrations__Ca_sr - 64.935064935064929 * var_chaste_interface__Ca_Concentrations__Ca_j) * NV_Ith_S(mParameters, 1);
        IJth(rJacobian, 15, 17) = -0.0050000000000000001;
        IJth(rJacobian, 16, 17) = 0.0050000000000000001;
        IJth(rJacobian, 17, 17) = -0.065000000000000002 + var_x473;
        IJth(rJacobian, 18, 18) = -0.001 - var_x484;
        IJth(rJacobian, 33, 18) = (0.001 + var_x484) * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 19, 19) = -0.001 - var_x486;
        IJth(rJacobian, 34, 19) = (0.001 + var_x486) * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 1, 20) = 0.019599999999999999 + var_x347;
        IJth(rJacobian, 20, 20) = -0.019599999999999999 - var_x347;
        IJth(rJacobian, 1, 21) = 0.003032 + var_x348;
        IJth(rJacobian, 21, 21) = -3.1999999999999999e-5 + var_x488;
        IJth(rJacobian, 22, 21) = -0.0030000000000000001;
        IJth(rJacobian, 1, 22) = 0.0063300000000000006 + var_x348;
        IJth(rJacobian, 21, 22) = var_x488;
        IJth(rJacobian, 22, 22) = -0.0063300000000000006;
        IJth(rJacobian, 1, 23) = 0.23799999999999999 + var_x349;
        IJth(rJacobian, 23, 23) = -0.23799999999999999 - var_x349;
        IJth(rJacobian, 1, 24) = 0.016159999999999997 + var_x350;
        IJth(rJacobian, 24, 24) = -0.00046000000000000001 + var_x489;
        IJth(rJacobian, 25, 24) = -0.015699999999999999;
        IJth(rJacobian, 1, 25) = 0.015757 + var_x350;
        IJth(rJacobian, 24, 25) = var_x489;
        IJth(rJacobian, 25, 25) = -0.015757;
        IJth(rJacobian, 1, 26) = 0.059999999999999998 + var_x351;
        IJth(rJacobian, 26, 26) = -0.059999999999999998 - var_x351;
        IJth(rJacobian, 27, 27) = -1.3 + var_x491;
        IJth(rJacobian, 37, 27) = 1.3 + var_x490;
        IJth(rJacobian, 28, 28) = -1.3 + var_x494;
        IJth(rJacobian, 38, 28) = 1.3 + var_x493;
        IJth(rJacobian, 29, 29) = -0.029999999999999999 + var_x491;
        IJth(rJacobian, 37, 29) = 0.029999999999999999 + var_x490;
        IJth(rJacobian, 30, 30) = -0.029999999999999999 + var_x494;
        IJth(rJacobian, 38, 30) = 0.029999999999999999 + var_x493;
        IJth(rJacobian, 31, 31) = -65.0 - var_x498;
        IJth(rJacobian, 32, 31) = 65.0 + var_x498;
        IJth(rJacobian, 1, 32) = 0.037279237232671424 * var_x353 + 4.7061860318210743e-15 * var_x354;
        IJth(rJacobian, 15, 32) = -var_x478 + var_x474 * var_x476;
        IJth(rJacobian, 16, 32) = var_x478 + var_x481;
        IJth(rJacobian, 17, 32) = -var_x481 + var_x477 * var_x483;
        IJth(rJacobian, 31, 32) = 260.0 - var_x499;
        IJth(rJacobian, 32, 32) = -260.0 + var_x499 - var_x500 - var_x502 - 0.69232869146389786 * var_x353 - 8.7400597733819945e-14 * var_x354;
        IJth(rJacobian, 37, 32) = var_x534 + var_x535;
        IJth(rJacobian, 0, 33) = mSetVoltageDerivativeToZero ? 0.0 : (((var_x162) ? (var_x288 + var_x23 * var_x273) : (var_x288 - var_x289)));
        IJth(rJacobian, 18, 33) = 0.0007561 - var_x485;
        IJth(rJacobian, 33, 33) = (-0.0007561 + var_x485 - var_x515 - 1830221710.9367213 * var_x518 * ((var_x162) ? (var_x517 + var_x273 * var_x504) : (var_x289 + var_x517))) * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 34, 33) = 0.087152885187388451 * var_x506;
        IJth(rJacobian, 37, 33) = -var_x530 * (-0.66000000000000003 * var_x287 - var_x281 * var_x536);
        IJth(rJacobian, 0, 34) = mSetVoltageDerivativeToZero ? 0.0 : (((var_x162) ? (var_x299 + var_x15 * var_x273) : (var_x299 - var_x300)));
        IJth(rJacobian, 19, 34) = 0.000165 - var_x487;
        IJth(rJacobian, 33, 34) = var_x515 * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 34, 34) = (-0.000165 + var_x487 - 7.8853682331945256 * var_x336 - 49324475.109744638 * var_x518 * ((var_x162) ? (var_x527 + var_x273 * var_x520) : (var_x300 + var_x527))) * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 35, 34) = var_x528;
        IJth(rJacobian, 38, 34) = -var_x540 * (-5.3399999999999999 * var_x298 - var_x293 * var_x543);
        IJth(rJacobian, 0, 35) = mSetVoltageDerivativeToZero ? 0.0 : (-0.00018851030986163651 * var_x301 - 0.43577707993988701 * var_x302);
        IJth(rJacobian, 34, 35) = 7.7982153480071377 * var_x506;
        IJth(rJacobian, 35, 35) = -var_x528;
        IJth(rJacobian, 0, 36) = mSetVoltageDerivativeToZero ? 0.0 : (((var_x162) ? (var_x304 + var_x41 * (4.3960978125000003e-10 * var_x271 - 0.45000000000000001 * var_x216 * (9.7691062500000009e-10 * var_x270 + 9.7691062500000009e-10 * var_x271))) : (var_x304 - 0.00016457180559765593 * var_x184)));
        IJth(rJacobian, 0, 37) = mSetVoltageDerivativeToZero ? 0.0 : (((var_x136) ? (var_x318 + var_x23 * var_x307) : (var_x318 - var_x319)));
        IJth(rJacobian, 13, 37) = 1.7 - 1.7 * var_chaste_interface__I_Ca__f_Ca_Bj;
        IJth(rJacobian, 15, 37) = -var_x480 + var_x469 * var_chaste_interface__SR_Fluxes__Ry_Rr;
        IJth(rJacobian, 16, 37) = var_x480 + var_x469 * var_chaste_interface__SR_Fluxes__Ry_Ro;
        IJth(rJacobian, 17, 37) = var_x482 * var_chaste_interface__SR_Fluxes__Ry_Ro + var_x479 * var_x483 * var_chaste_interface__Ca_Concentrations__Ca_j;
        IJth(rJacobian, 27, 37) = 55.473098330241186 - var_x492;
        IJth(rJacobian, 29, 37) = 19.897959183673468 - var_x496;
        IJth(rJacobian, 32, 37) = var_x500 + var_x502;
        IJth(rJacobian, 33, 37) = -var_x508 * (1.4849999999999997e-8 * var_x317 - 0.33000000000000002 * var_x314 + var_x316 * var_x516);
        IJth(rJacobian, 37, 37) = -75.37105751391465 + var_x492 + var_x496 - var_x534 - var_x535 - var_x537 - var_x530 * ((var_x136) ? (var_x538 + var_x307 * var_x504) : (var_x319 + var_x538));
        IJth(rJacobian, 38, 37) = 3.9220939916716238 * var_x336;
        IJth(rJacobian, 0, 38) = mSetVoltageDerivativeToZero ? 0.0 : (((var_x136) ? (var_x327 + var_x15 * var_x307) : (var_x327 - var_x328)));
        IJth(rJacobian, 1, 38) = var_x337;
        IJth(rJacobian, 14, 38) = 1.7 - 1.7 * var_chaste_interface__I_Ca__f_Ca_Bsl;
        IJth(rJacobian, 28, 38) = 121.55000000000001 - var_x495;
        IJth(rJacobian, 30, 38) = 43.550000000000004 - var_x497;
        IJth(rJacobian, 34, 38) = -var_x522 * (1.2014999999999997e-7 * var_x326 - 2.6699999999999999 * var_x324 + var_x325 * var_x526);
        IJth(rJacobian, 37, 38) = var_x537;
        IJth(rJacobian, 38, 38) = -165.10000000000002 + var_x495 + var_x497 - 19.504723378941105 * var_x336 - var_x540 * ((var_x136) ? (var_x544 + var_x307 * var_x520) : (var_x328 + var_x544));
    }

    N_Vector Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane_potential__V_m = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: mV; Initial value: -81.4229700631461
        double var_chaste_interface__I_Na__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.00381858135062259
        double var_chaste_interface__I_Na__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.625086621635645
        double var_chaste_interface__I_Na__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.62332507235506
        double var_chaste_interface__I_Kr__x_kr = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.021733554982663
        double var_chaste_interface__I_Ks__x_ks = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.00428981903391989
        double var_chaste_interface__I_to__x_to_s = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.000441539203559411
        double var_chaste_interface__I_to__y_to_s = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.784875334693892
        double var_chaste_interface__I_to__x_to_f = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.000441531250866821
        double var_chaste_interface__I_to__y_to_f = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.999995817153572
        double var_chaste_interface__I_Ca__d = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 2.93982287251302e-06
        double var_chaste_interface__I_Ca__f = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.99511673495949
        double var_chaste_interface__I_Ca__f_Ca_Bj = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.0246142436477748
        double var_chaste_interface__I_Ca__f_Ca_Bsl = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.0152416826209301
        double var_chaste_interface__SR_Fluxes__Ry_Ro = NV_Ith_S(rY, 16);
        // Units: mM; Initial value: 7.37484660389498e-07
        double var_chaste_interface__SR_Ca_Concentrations__Ca_sr = NV_Ith_S(rY, 32);
        // Units: mM; Initial value: 0.555180633859957
        double var_chaste_interface__Na_Concentrations__Na_j = NV_Ith_S(rY, 33);
        // Units: mM; Initial value: 8.3215690202059
        double var_chaste_interface__Na_Concentrations__Na_sl = NV_Ith_S(rY, 34);
        // Units: mM; Initial value: 8.32094589677861
        double var_chaste_interface__Na_Concentrations__Na_i = NV_Ith_S(rY, 35);
        // Units: mM; Initial value: 8.32114502072456
        double var_chaste_interface__K_Concentration__K_i = NV_Ith_S(rY, 36);
        // Units: mM; Initial value: 120.0
        double var_chaste_interface__Ca_Concentrations__Ca_j = NV_Ith_S(rY, 37);
        // Units: mM; Initial value: 0.000175415190830688
        double var_chaste_interface__Ca_Concentrations__Ca_sl = NV_Ith_S(rY, 38);
        // Units: mM; Initial value: 0.000106544589194246
        
        // Lookup table indexing
        const bool _oob_0 = Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane_potential__V_m);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane_potential__V_m);

        // Mathematics
        const double var_I_Ca__fcaCaMSL = 0; // dimensionless
        const double var_I_Ca__fcaCaj = 0; // dimensionless
        const double var_I_Ks__gks_junc = 0.0035000000000000001; // mS_per_uF
        const double var_I_Ca__tauf = 1 / (_lt_0_row[15]); // msec
        const double var_I_Kr__rkr = 1 / (_lt_0_row[8]); // dimensionless
        const double var_I_Na__ah = ((var_chaste_interface__membrane_potential__V_m >= -40.0) ? (0) : (0.057000000000000002 * exp(-11.764705882352942 + 0.14705882352941177 * NV_Ith_S(mParameters, 10) - 0.14705882352941177 * var_chaste_interface__membrane_potential__V_m))); // dimensionless
        const double var_I_Na__aj = ((var_chaste_interface__membrane_potential__V_m >= -40.0) ? (0) : ((37.780000000000001 + var_chaste_interface__membrane_potential__V_m) * (-25428.0 * exp(0.24440000000000001 * var_chaste_interface__membrane_potential__V_m - 0.24440000000000001 * NV_Ith_S(mParameters, 10)) - 6.9480000000000002e-6 * exp(0.043909999999999998 * NV_Ith_S(mParameters, 10) - 0.043909999999999998 * var_chaste_interface__membrane_potential__V_m)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane_potential__V_m - 0.311 * NV_Ith_S(mParameters, 10))))); // dimensionless
        const double var_I_Na__bh = ((var_chaste_interface__membrane_potential__V_m >= -40.0) ? (5.9230769230769234 / (1.0 + exp(-0.96036036036036043 + 0.0900900900900901 * NV_Ith_S(mParameters, 10) - 0.0900900900900901 * var_chaste_interface__membrane_potential__V_m))) : (310000.0 * exp(0.34849999999999998 * var_chaste_interface__membrane_potential__V_m - 0.34849999999999998 * NV_Ith_S(mParameters, 10)) + 2.7000000000000002 * exp(0.079000000000000001 * var_chaste_interface__membrane_potential__V_m - 0.079000000000000001 * NV_Ith_S(mParameters, 10)))); // dimensionless
        const double var_I_Na__bj = ((var_chaste_interface__membrane_potential__V_m >= -40.0) ? (0.59999999999999998 * exp(0.057000000000000002 * var_chaste_interface__membrane_potential__V_m - 0.057000000000000002 * NV_Ith_S(mParameters, 10)) / (1.0 + exp(-3.2000000000000002 + 0.10000000000000001 * NV_Ith_S(mParameters, 10) - 0.10000000000000001 * var_chaste_interface__membrane_potential__V_m))) : (0.024240000000000001 * exp(0.01052 * NV_Ith_S(mParameters, 10) - 0.01052 * var_chaste_interface__membrane_potential__V_m) / (1.0 + exp(-5.5312920000000005 + 0.13780000000000001 * NV_Ith_S(mParameters, 10) - 0.13780000000000001 * var_chaste_interface__membrane_potential__V_m)))); // dimensionless
        const double var_I_Na__tauh = 1 / (var_I_Na__ah + var_I_Na__bh); // msec
        const double var_I_Na__tauj = 1 / (var_I_Na__aj + var_I_Na__bj); // msec
        const double var_membrane_potential__i_Stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
        const double var_parameters__Cmem_converted = 1000000.0 * NV_Ith_S(mParameters, 18); // uF
        const double var_parameters__Fjunc = 0.11; // dimensionless
        const double var_parameters__Fjunc_CaL = 0.90000000000000002; // dimensionless
        const double var_parameters__Frdy = 96485.0; // coulomb_per_mole
        const double var_parameters__Fsl = 1.0 - var_parameters__Fjunc; // dimensionless
        const double var_parameters__Fsl_CaL = 1.0 - var_parameters__Fjunc_CaL; // dimensionless
        const double var_parameters__Kdact = 0.00014999999999999999; // mM
        const double var_I_NCX__Ka_junc = 1 / (1.0 + pow(var_parameters__Kdact, 2) / pow(var_chaste_interface__Ca_Concentrations__Ca_j, 2)); // dimensionless
        const double var_I_NCX__Ka_sl = 1 / (1.0 + pow(var_parameters__Kdact, 2) / pow(var_chaste_interface__Ca_Concentrations__Ca_sl, 2)); // dimensionless
        const double var_parameters__KmCai = 0.0035899999999999999; // mM
        const double var_parameters__KmCao = 1.3; // mM
        const double var_parameters__KmNai = 12.289999999999999; // mM
        const double var_parameters__KmNao = 87.5; // mM
        const double var_I_Kr__gkr = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 5)) * NV_Ith_S(mParameters, 13); // mS_per_uF
        const double var_I_NCX__s3_junc = pow(var_chaste_interface__Na_Concentrations__Na_j, 3) * NV_Ith_S(mParameters, 4) + pow(var_chaste_interface__Na_Concentrations__Na_j, 3) * var_parameters__KmCao + pow(NV_Ith_S(mParameters, 6), 3) * var_chaste_interface__Ca_Concentrations__Ca_j + pow(var_parameters__KmNao, 3) * (1.0 + var_chaste_interface__Ca_Concentrations__Ca_j / var_parameters__KmCai) * var_chaste_interface__Ca_Concentrations__Ca_j + pow(NV_Ith_S(mParameters, 6), 3) * (1.0 + pow(var_chaste_interface__Na_Concentrations__Na_j, 3) / pow(var_parameters__KmNai, 3)) * var_parameters__KmCai; // mM4
        const double var_I_NCX__s3_sl = pow(var_chaste_interface__Na_Concentrations__Na_sl, 3) * NV_Ith_S(mParameters, 4) + pow(var_chaste_interface__Na_Concentrations__Na_sl, 3) * var_parameters__KmCao + pow(NV_Ith_S(mParameters, 6), 3) * var_chaste_interface__Ca_Concentrations__Ca_sl + pow(var_parameters__KmNao, 3) * (1.0 + var_chaste_interface__Ca_Concentrations__Ca_sl / var_parameters__KmCai) * var_chaste_interface__Ca_Concentrations__Ca_sl + pow(NV_Ith_S(mParameters, 6), 3) * (1.0 + pow(var_chaste_interface__Na_Concentrations__Na_sl, 3) / pow(var_parameters__KmNai, 3)) * var_parameters__KmCai; // mM4
        const double var_parameters__Q10CaL = 1.8; // dimensionless
        const double var_parameters__Q10NCX = 1.5700000000000001; // dimensionless
        const double var_parameters__R = 8314.0; // joule_per_kelvin_per_kilomole
        const double var_parameters__Temp = 310.0; // kelvin
        const double var_parameters__FoRT = var_parameters__Frdy / (var_parameters__R * var_parameters__Temp); // per_mV
        const double var_parameters__Qpow = -31.0 + 0.10000000000000001 * var_parameters__Temp; // dimensionless
        const double var_parameters__ek = log(NV_Ith_S(mParameters, 5) / var_chaste_interface__K_Concentration__K_i) / var_parameters__FoRT; // mV
        const double var_I_Ki__aki = 1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane_potential__V_m - 0.23849999999999999 * var_parameters__ek)); // dimensionless
        const double var_I_Ki__bki = (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane_potential__V_m - 0.080320000000000003 * var_parameters__ek) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane_potential__V_m - 0.061749999999999999 * var_parameters__ek)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_parameters__ek - 0.51429999999999998 * var_chaste_interface__membrane_potential__V_m)); // dimensionless
        const double var_I_Ki__kiss = var_I_Ki__aki / (var_I_Ki__aki + var_I_Ki__bki); // dimensionless
        const double var_I_Ki__I_ki = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 5)) * (-var_parameters__ek + var_chaste_interface__membrane_potential__V_m) * NV_Ith_S(mParameters, 12) * var_I_Ki__kiss; // uA_per_uF
        const double var_I_Ki__I_ki_converted = HeartConfig::Instance()->GetCapacitance() * var_I_Ki__I_ki; // uA_per_cm2
        const double var_I_Kr__I_kr = (-var_parameters__ek + var_chaste_interface__membrane_potential__V_m) * var_I_Kr__gkr * var_I_Kr__rkr * var_chaste_interface__I_Kr__x_kr; // uA_per_uF
        const double var_I_Kr__I_kr_converted = HeartConfig::Instance()->GetCapacitance() * var_I_Kr__I_kr; // uA_per_cm2
        const double var_parameters__ena_junc = log(NV_Ith_S(mParameters, 6) / var_chaste_interface__Na_Concentrations__Na_j) / var_parameters__FoRT; // mV
        const double var_I_Na__I_Na_junc = pow(var_chaste_interface__I_Na__m, 3) * (-var_parameters__ena_junc + var_chaste_interface__membrane_potential__V_m) * var_chaste_interface__I_Na__h * var_chaste_interface__I_Na__j * var_parameters__Fjunc * NV_Ith_S(mParameters, 8); // uA_per_uF
        const double var_parameters__ena_sl = log(NV_Ith_S(mParameters, 6) / var_chaste_interface__Na_Concentrations__Na_sl) / var_parameters__FoRT; // mV
        const double var_I_Na__I_Na_sl = pow(var_chaste_interface__I_Na__m, 3) * (-var_parameters__ena_sl + var_chaste_interface__membrane_potential__V_m) * var_chaste_interface__I_Na__h * var_chaste_interface__I_Na__j * var_parameters__Fsl * NV_Ith_S(mParameters, 8); // uA_per_uF
        const double var_I_Na__I_Na = var_I_Na__I_Na_junc + var_I_Na__I_Na_sl; // uA_per_uF
        const double var_I_Na__I_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_I_Na__I_Na; // uA_per_cm2
        const double var_parameters__epi = 0; // dimensionless
        const double var_I_to__GtoFast = ((var_parameters__epi == 1.0) ? (0.1144 * NV_Ith_S(mParameters, 11)) : (0.0014039999999999999 * NV_Ith_S(mParameters, 11))); // mS_per_uF
        const double var_I_to__GtoSlow = ((var_parameters__epi == 1.0) ? (0.015599999999999999 * NV_Ith_S(mParameters, 15)) : (0.037595999999999997 * NV_Ith_S(mParameters, 15))); // mS_per_uF
        const double var_I_to__I_tof = (-var_parameters__ek + var_chaste_interface__membrane_potential__V_m) * var_I_to__GtoFast * var_chaste_interface__I_to__x_to_f * var_chaste_interface__I_to__y_to_f; // uA_per_uF
        const double var_I_to__I_tof_converted = HeartConfig::Instance()->GetCapacitance() * var_I_to__I_tof; // uA_per_cm2
        const double var_I_to__I_tos = (-var_parameters__ek + var_chaste_interface__membrane_potential__V_m) * var_I_to__GtoSlow * var_chaste_interface__I_to__x_to_s * var_chaste_interface__I_to__y_to_s; // uA_per_uF
        const double var_I_to__I_to = var_I_to__I_tof + var_I_to__I_tos; // uA_per_uF
        const double var_I_to__I_to_converted = HeartConfig::Instance()->GetCapacitance() * var_I_to__I_to; // uA_per_cm2
        const double var_I_to__I_tos_converted = HeartConfig::Instance()->GetCapacitance() * var_I_to__I_tos; // uA_per_cm2
        const double var_SR_Fluxes__J_SRCarel = (-var_chaste_interface__Ca_Concentrations__Ca_j + var_chaste_interface__SR_Ca_Concentrations__Ca_sr) * var_chaste_interface__SR_Fluxes__Ry_Ro * NV_Ith_S(mParameters, 1); // mM_per_msec
        const double var_parameters__ksat = 0.32000000000000001; // dimensionless
        const double var_parameters__nu = 0.27000000000000002; // dimensionless
        const double var_I_NCX__s1_junc = pow(var_chaste_interface__Na_Concentrations__Na_j, 3) * NV_Ith_S(mParameters, 4) * exp(var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT * var_parameters__nu); // mM4
        const double var_I_NCX__s1_sl = pow(var_chaste_interface__Na_Concentrations__Na_sl, 3) * NV_Ith_S(mParameters, 4) * exp(var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT * var_parameters__nu); // mM4
        const double var_I_NCX__s2_junc = pow(NV_Ith_S(mParameters, 6), 3) * var_chaste_interface__Ca_Concentrations__Ca_j * exp((-1.0 + var_parameters__nu) * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT); // mM4
        const double var_I_NCX__I_ncx_junc = pow(var_parameters__Q10NCX, var_parameters__Qpow) * (-var_I_NCX__s2_junc + var_I_NCX__s1_junc) * var_I_NCX__Ka_junc * var_parameters__Fjunc * NV_Ith_S(mParameters, 16) / ((1.0 + var_parameters__ksat * exp((-1.0 + var_parameters__nu) * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT)) * var_I_NCX__s3_junc); // uA_per_uF
        const double var_I_NCX__s2_sl = pow(NV_Ith_S(mParameters, 6), 3) * var_chaste_interface__Ca_Concentrations__Ca_sl * exp((-1.0 + var_parameters__nu) * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT); // mM4
        const double var_I_NCX__I_ncx_sl = pow(var_parameters__Q10NCX, var_parameters__Qpow) * (-var_I_NCX__s2_sl + var_I_NCX__s1_sl) * var_I_NCX__Ka_sl * var_parameters__Fsl * NV_Ith_S(mParameters, 16) / ((1.0 + var_parameters__ksat * exp((-1.0 + var_parameters__nu) * var_chaste_interface__membrane_potential__V_m * var_parameters__FoRT)) * var_I_NCX__s3_sl); // uA_per_uF
        const double var_I_NCX__I_ncx = var_I_NCX__I_ncx_junc + var_I_NCX__I_ncx_sl; // uA_per_uF
        const double var_I_NCX__I_ncx_converted = HeartConfig::Instance()->GetCapacitance() * var_I_NCX__I_ncx; // uA_per_cm2
        const double var_I_Ca__ibarca_j = ((fabs(var_chaste_interface__membrane_potential__V_m) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane_potential__V_m) * (1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 7) / (-1.0 + exp(9.9999999999999995e-8)) + 1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 7) / (-1.0 + exp(-9.9999999999999995e-8))) - 1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 7) / (-1.0 + exp(-9.9999999999999995e-8))) : (7.8019226357407252 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_j * _lt_0_row[9]) * var_chaste_interface__membrane_potential__V_m * NV_Ith_S(mParameters, 7) / (_lt_0_row[10]))); // uA_per_uF
        const double var_I_Ca__I_Ca_junc = 0.45000000000000001 * pow(var_parameters__Q10CaL, var_parameters__Qpow) * (1.0 - var_chaste_interface__I_Ca__f_Ca_Bj + var_I_Ca__fcaCaj) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f * var_I_Ca__ibarca_j * var_parameters__Fjunc_CaL; // uA_per_uF
        const double var_I_Ca__ibarca_sl = ((fabs(var_chaste_interface__membrane_potential__V_m) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane_potential__V_m) * (1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 7) / (-1.0 + exp(9.9999999999999995e-8)) + 1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 7) / (-1.0 + exp(-9.9999999999999995e-8))) - 1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 7) / (-1.0 + exp(-9.9999999999999995e-8))) : (7.8019226357407252 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + 0.34100000000000003 * var_chaste_interface__Ca_Concentrations__Ca_sl * _lt_0_row[9]) * var_chaste_interface__membrane_potential__V_m * NV_Ith_S(mParameters, 7) / (_lt_0_row[10]))); // uA_per_uF
        const double var_I_Ca__I_Ca_sl = 0.45000000000000001 * pow(var_parameters__Q10CaL, var_parameters__Qpow) * (1.0 - var_chaste_interface__I_Ca__f_Ca_Bsl + var_I_Ca__fcaCaMSL) * var_chaste_interface__I_Ca__d * var_chaste_interface__I_Ca__f * var_I_Ca__ibarca_sl * var_parameters__Fsl_CaL; // uA_per_uF
        const double var_I_Ca__I_Ca = var_I_Ca__I_Ca_junc + var_I_Ca__I_Ca_sl; // uA_per_uF
        const double var_I_Ca__I_Ca_converted = HeartConfig::Instance()->GetCapacitance() * var_I_Ca__I_Ca; // uA_per_cm2
        const double var_parameters__pNaK = 0.018329999999999999; // dimensionless
        const double var_I_Ks__eks = log((NV_Ith_S(mParameters, 6) * var_parameters__pNaK + NV_Ith_S(mParameters, 5)) / (var_chaste_interface__Na_Concentrations__Na_i * var_parameters__pNaK + var_chaste_interface__K_Concentration__K_i)) / var_parameters__FoRT; // mV
        const double var_I_Ks__I_ks_junc = pow(var_chaste_interface__I_Ks__x_ks, 2) * (-var_I_Ks__eks + var_chaste_interface__membrane_potential__V_m) * var_I_Ks__gks_junc * var_parameters__Fjunc; // uA_per_uF
        const double var_I_Ks__I_ks_sl = pow(var_chaste_interface__I_Ks__x_ks, 2) * (-var_I_Ks__eks + var_chaste_interface__membrane_potential__V_m) * NV_Ith_S(mParameters, 14) * var_parameters__Fsl; // uA_per_uF
        const double var_I_Ks__I_ks = var_I_Ks__I_ks_junc + var_I_Ks__I_ks_sl; // uA_per_uF
        const double var_I_Ks__I_ks_converted = HeartConfig::Instance()->GetCapacitance() * var_I_Ks__I_ks; // uA_per_cm2

        N_Vector dqs = N_VNew_Serial(16);
        NV_Ith_S(dqs, 0) = var_SR_Fluxes__J_SRCarel;
        NV_Ith_S(dqs, 1) = var_I_Ca__I_Ca_converted;
        NV_Ith_S(dqs, 2) = var_I_Ca__tauf;
        NV_Ith_S(dqs, 3) = var_parameters__Cmem_converted;
        NV_Ith_S(dqs, 4) = var_I_Na__I_Na_converted;
        NV_Ith_S(dqs, 5) = var_I_Na__tauh;
        NV_Ith_S(dqs, 6) = var_I_Na__tauj;
        NV_Ith_S(dqs, 7) = var_I_to__I_tof_converted;
        NV_Ith_S(dqs, 8) = var_I_Ki__I_ki_converted;
        NV_Ith_S(dqs, 9) = var_I_Kr__I_kr_converted;
        NV_Ith_S(dqs, 10) = var_I_Ks__I_ks_converted;
        NV_Ith_S(dqs, 11) = var_I_to__I_tos_converted;
        NV_Ith_S(dqs, 12) = var_I_NCX__I_ncx_converted;
        NV_Ith_S(dqs, 13) = var_membrane_potential__i_Stim_converted;
        NV_Ith_S(dqs, 14) = var_I_to__I_to_converted;
        NV_Ith_S(dqs, 15) = var_chaste_interface__environment__time;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt>::Initialise(void)
{
    this->mSystemName = "grandi_pasqualini_bers_2010";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "msec";

    // NV_Ith_S(rY, 0):
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("mV");
    this->mInitialConditions.push_back(-81.4229700631461);

    // NV_Ith_S(rY, 1):
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(8.72745589849657e-05);

    // NV_Ith_S(rY, 2):
    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00381858135062259);

    // NV_Ith_S(rY, 3):
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.625086621635645);

    // NV_Ith_S(rY, 4):
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.62332507235506);

    // NV_Ith_S(rY, 5):
    this->mVariableNames.push_back("I_Kr__x_kr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.021733554982663);

    // NV_Ith_S(rY, 6):
    this->mVariableNames.push_back("I_Ks__x_ks");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00428981903391989);

    // NV_Ith_S(rY, 7):
    this->mVariableNames.push_back("I_to__x_to_s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000441539203559411);

    // NV_Ith_S(rY, 8):
    this->mVariableNames.push_back("I_to__y_to_s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.784875334693892);

    // NV_Ith_S(rY, 9):
    this->mVariableNames.push_back("I_to__x_to_f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000441531250866821);

    // NV_Ith_S(rY, 10):
    this->mVariableNames.push_back("I_to__y_to_f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999995817153572);

    // NV_Ith_S(rY, 11):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.93982287251302e-06);

    // NV_Ith_S(rY, 12):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99511673495949);

    // NV_Ith_S(rY, 13):
    this->mVariableNames.push_back("I_Ca__f_Ca_Bj");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0246142436477748);

    // NV_Ith_S(rY, 14):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_fCa_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0152416826209301);

    // NV_Ith_S(rY, 15):
    this->mVariableNames.push_back("SR_Fluxes__Ry_Rr");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.891022230597263);

    // NV_Ith_S(rY, 16):
    this->mVariableNames.push_back("SR_Fluxes__Ry_Ro");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(7.37484660389498e-07);

    // NV_Ith_S(rY, 17):
    this->mVariableNames.push_back("SR_Fluxes__Ry_Ri");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(9.01984485847386e-08);

    // NV_Ith_S(rY, 18):
    this->mVariableNames.push_back("Na_Buffers__Na_Bj");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(3.43545459048316);

    // NV_Ith_S(rY, 19):
    this->mVariableNames.push_back("Na_Buffers__Na_Bsl");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.749601264899653);

    // NV_Ith_S(rY, 20):
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__Tn_CL");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.00893708435270205);

    // NV_Ith_S(rY, 21):
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__Tn_CHc");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.117445983314504);

    // NV_Ith_S(rY, 22):
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__Tn_CHm");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.0105996734077994);

    // NV_Ith_S(rY, 23):
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__CaM");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.000295653619580701);

    // NV_Ith_S(rY, 24):
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__Myo_c");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.00192645052472679);

    // NV_Ith_S(rY, 25):
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__Myo_m");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.137557201546068);

    // NV_Ith_S(rY, 26):
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__SRB");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.00217414510791738);

    // NV_Ith_S(rY, 27):
    this->mVariableNames.push_back("Junctional_and_SL_Ca_Buffers__SLL_j");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.00738583890572642);

    // NV_Ith_S(rY, 28):
    this->mVariableNames.push_back("Junctional_and_SL_Ca_Buffers__SLL_sl");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.00988178900584875);

    // NV_Ith_S(rY, 29):
    this->mVariableNames.push_back("Junctional_and_SL_Ca_Buffers__SLH_j");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.0734662466011574);

    // NV_Ith_S(rY, 30):
    this->mVariableNames.push_back("Junctional_and_SL_Ca_Buffers__SLH_sl");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.114400081504523);

    // NV_Ith_S(rY, 31):
    this->mVariableNames.push_back("SR_Ca_Concentrations__Csqn_b");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(1.19772047585784);

    // NV_Ith_S(rY, 32):
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.555180633859957);

    // NV_Ith_S(rY, 33):
    this->mVariableNames.push_back("Na_Concentrations__Na_j");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(8.3215690202059);

    // NV_Ith_S(rY, 34):
    this->mVariableNames.push_back("Na_Concentrations__Na_sl");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(8.32094589677861);

    // NV_Ith_S(rY, 35):
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(8.32114502072456);

    // NV_Ith_S(rY, 36):
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(120.0);

    // NV_Ith_S(rY, 37):
    this->mVariableNames.push_back("Ca_Concentrations__Ca_j");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.000175415190830688);

    // NV_Ith_S(rY, 38):
    this->mVariableNames.push_back("dyadic_space_calcium_concentration");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.000106544589194246);

    // mParameters[0]:
    this->mParameterNames.push_back("SR_leak_current_max");
    this->mParameterUnits.push_back("per_msec");

    // mParameters[1]:
    this->mParameterNames.push_back("SR_release_current_max");
    this->mParameterUnits.push_back("per_msec");

    // mParameters[2]:
    this->mParameterNames.push_back("SR_uptake_current_max");
    this->mParameterUnits.push_back("mM_per_msec");

    // mParameters[3]:
    this->mParameterNames.push_back("concentration_clamp_onoff");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[4]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("mM");

    // mParameters[5]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("mM");

    // mParameters[6]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("mM");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("cm_per_sec");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("mS_per_uF");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_reduced_inactivation");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_shift_inactivation");
    this->mParameterUnits.push_back("mV");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_fast_transient_outward_current_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[12]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("mS_per_uF");

    // mParameters[13]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("mS_per_uF");

    // mParameters[14]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("mS_per_uF");

    // mParameters[15]:
    this->mParameterNames.push_back("membrane_slow_transient_outward_current_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[16]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("uA_per_uF");

    // mParameters[17]:
    this->mParameterNames.push_back("membrane_sodium_potassium_pump_current_permeability");
    this->mParameterUnits.push_back("uA_per_uF");

    // mParameters[18]:
    this->mParameterNames.push_back("parameters__Cmem");
    this->mParameterUnits.push_back("farad");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("SR_release_current");
    this->mDerivedQuantityUnits.push_back("mM_per_msec");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current_f_gate_tau");
    this->mDerivedQuantityUnits.push_back("msec");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_capacitance");
    this->mDerivedQuantityUnits.push_back("uF");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_h_gate_tau");
    this->mDerivedQuantityUnits.push_back("msec");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_j_gate_tau");
    this->mDerivedQuantityUnits.push_back("msec");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_fast_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [10]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [11]:
    this->mDerivedQuantityNames.push_back("membrane_slow_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [12]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [13]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [14]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [15]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("msec");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellgrandi_pasqualini_bers_2010_ss_endoFromCellMLCvodeOpt)

#endif // CHASTE_CVODE
