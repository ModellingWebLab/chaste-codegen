#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: espinosa_model_1998
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: AnalyticCvodeOpt)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "espinosa_model_1998_normal.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class Cellespinosa_model_1998_normalFromCellMLCvodeOpt_LookupTables : public AbstractLookupTableCollection
{
public:
    static Cellespinosa_model_1998_normalFromCellMLCvodeOpt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new Cellespinosa_model_1998_normalFromCellMLCvodeOpt_LookupTables);
        }
        return mpInstance.get();
    }

    void FreeMemory()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }

    // Row lookup methods
    // using linear-interpolation

    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<18; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }


    const double * IndexTable0(double var_chaste_interface__membrane__V)
    {
        const double _offset_0 = var_chaste_interface__membrane__V - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = Cellespinosa_model_1998_normalFromCellMLCvodeOpt_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }


// LCOV_EXCL_START
    bool CheckIndex0(double& var_chaste_interface__membrane__V)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__membrane__V>mTableMaxs[0] || var_chaste_interface__membrane__V<mTableMins[0])
        {
// LCOV_EXCL_START
            _oob_0 = true;
// LCOV_EXCL_STOP
        }
        return _oob_0;
    }
// LCOV_EXCL_STOP

    ~Cellespinosa_model_1998_normalFromCellMLCvodeOpt_LookupTables()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

    }

protected:
    Cellespinosa_model_1998_normalFromCellMLCvodeOpt_LookupTables(const Cellespinosa_model_1998_normalFromCellMLCvodeOpt_LookupTables&);
    Cellespinosa_model_1998_normalFromCellMLCvodeOpt_LookupTables& operator= (const Cellespinosa_model_1998_normalFromCellMLCvodeOpt_LookupTables&);
    Cellespinosa_model_1998_normalFromCellMLCvodeOpt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);

        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 18;
        mTableMins[0] = -250.0;
        mTableMaxs[0] = 550.0;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;

        Cellespinosa_model_1998_normalFromCellMLCvodeOpt_LookupTables::RegenerateTables();
    }

    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);


        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][18];

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(3.7433890822745473 - 0.074867781645490947 * var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[0] < 2){
                    double left = _lookup_table_0[i-1][0];
                    double right = _lookup_table_0[i+1][0];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 0 at ["<<i<<"][0] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[0] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[0] >= 2){
                    EXCEPTION("Lookup table 0 at ["<<i<<"][0] has non-finite value: " << val);
                }
                _lookup_table_0[i][0] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 - exp(3.7433890822745473 - 0.074867781645490947 * var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[1] < 2){
                    double left = _lookup_table_0[i-1][1];
                    double right = _lookup_table_0[i+1][1];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 1 at ["<<i<<"][1] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[1] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[1] >= 2){
                    EXCEPTION("Lookup table 1 at ["<<i<<"][1] has non-finite value: " << val);
                }
                _lookup_table_0[i][1] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(1.8716945411372736 - 0.037433890822745473 * var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[2] < 2){
                    double left = _lookup_table_0[i-1][2];
                    double right = _lookup_table_0[i+1][2];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 2 at ["<<i<<"][2] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[2] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[2] >= 2){
                    EXCEPTION("Lookup table 2 at ["<<i<<"][2] has non-finite value: " << val);
                }
                _lookup_table_0[i][2] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 - exp(1.8716945411372736 - 0.037433890822745473 * var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[3] < 2){
                    double left = _lookup_table_0[i-1][3];
                    double right = _lookup_table_0[i+1][3];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 3 at ["<<i<<"][3] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[3] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[3] >= 2){
                    EXCEPTION("Lookup table 3 at ["<<i<<"][3] has non-finite value: " << val);
                }
                _lookup_table_0[i][3] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(0.018716945411372737 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][4] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-0.018716945411372737 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][5] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-0.037433890822745473 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][6] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = ((fabs(4.0 + var_chaste_interface__membrane__V) < 2.9999999999648364e-7) ? (9.000000000258801e-6 / (1.0 - exp(-1.0000000000287557e-7)) - 1666666.6666862019 * (3.9999997 + var_chaste_interface__membrane__V) * (-9.000000000258801e-6 / (1.0 - exp(1.0000000000287557e-7)) - 9.000000000258801e-6 / (1.0 - exp(-1.0000000000287557e-7)))) : (30.0 * (4.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-1.3333333333333333 - 0.33333333333333331 * var_chaste_interface__membrane__V))));
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[7] < 2){
                    double left = _lookup_table_0[i-1][7];
                    double right = _lookup_table_0[i+1][7];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 7 at ["<<i<<"][7] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[7] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[7] >= 2){
                    EXCEPTION("Lookup table 7 at ["<<i<<"][7] has non-finite value: " << val);
                }
                _lookup_table_0[i][7] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = ((fabs(4.0 + var_chaste_interface__membrane__V) < 7.5000000000075007e-7) ? (-8.9999999999257341e-6 / (-1.0 + exp(-9.9999999999174827e-8)) + 666666.66666599992 * (4.0000007499999999 + var_chaste_interface__membrane__V) * (8.9999999999257341e-6 / (-1.0 + exp(9.9999999999174827e-8)) + 8.9999999999257341e-6 / (-1.0 + exp(-9.9999999999174827e-8)))) : (12.0 * (4.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(0.53333333333333333 + 0.13333333333333333 * var_chaste_interface__membrane__V))));
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[8] < 2){
                    double left = _lookup_table_0[i-1][8];
                    double right = _lookup_table_0[i+1][8];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 8 at ["<<i<<"][8] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[8] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[8] >= 2){
                    EXCEPTION("Lookup table 8 at ["<<i<<"][8] has non-finite value: " << val);
                }
                _lookup_table_0[i][8] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = ((fabs(24.0 + var_chaste_interface__membrane__V) < 5.5000000001581562e-7) ? (-3.4374999999253752e-6 / (-1.0 + exp(-9.9999999997829103e-8)) + 909090.90906476753 * (24.000000549999999 + var_chaste_interface__membrane__V) * (3.4374999999253752e-6 / (-1.0 + exp(9.9999999997829103e-8)) + 3.4374999999253752e-6 / (-1.0 + exp(-9.9999999997829103e-8)))) : (6.25 * (24.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(4.3636363636363633 + 0.18181818181818182 * var_chaste_interface__membrane__V))));
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[9] < 2){
                    double left = _lookup_table_0[i-1][9];
                    double right = _lookup_table_0[i+1][9];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 9 at ["<<i<<"][9] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[9] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[9] >= 2){
                    EXCEPTION("Lookup table 9 at ["<<i<<"][9] has non-finite value: " << val);
                }
                _lookup_table_0[i][9] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + exp(-6.1818181818181817 - 0.18181818181818182 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][10] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = ((fabs(41.0 + var_chaste_interface__membrane__V) < 1.0000000000287557e-6) ? (0.00020000000000575113 / (1.0 - exp(-1.0000000000287557e-7)) - 499999.99998562218 * (40.999999000000003 + var_chaste_interface__membrane__V) * (-0.00020000000000575113 / (1.0 - exp(1.0000000000287557e-7)) - 0.00020000000000575113 / (1.0 - exp(-1.0000000000287557e-7)))) : (200.0 * (41.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.1000000000000005 - 0.10000000000000001 * var_chaste_interface__membrane__V))));
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[11] < 2){
                    double left = _lookup_table_0[i-1][11];
                    double right = _lookup_table_0[i+1][11];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 11 at ["<<i<<"][11] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[11] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[11] >= 2){
                    EXCEPTION("Lookup table 11 at ["<<i<<"][11] has non-finite value: " << val);
                }
                _lookup_table_0[i][11] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-3.6960000000000002 - 0.056000000000000001 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][12] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = ((fabs(-18.0 + var_chaste_interface__membrane__V) < 5.0000000000050004e-7) ? (7.5000000002156675e-7 / (1.0 - exp(-1.0000000000287557e-7)) - 999999.99999899988 * (-18.000000499999999 + var_chaste_interface__membrane__V) * (-7.5000000002156675e-7 / (1.0 - exp(-1.0000000000287557e-7)) - 7.4999999997993338e-7 / (1.0 - exp(9.9999999991773334e-8)))) : (1.5 * (-18.0 + var_chaste_interface__membrane__V) / (1.0 - exp(3.6000000000000001 - 0.20000000000000001 * var_chaste_interface__membrane__V))));
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[13] < 2){
                    double left = _lookup_table_0[i-1][13];
                    double right = _lookup_table_0[i+1][13];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 13 at ["<<i<<"][13] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[13] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[13] >= 2){
                    EXCEPTION("Lookup table 13 at ["<<i<<"][13] has non-finite value: " << val);
                }
                _lookup_table_0[i][13] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = ((fabs(-18.0 + var_chaste_interface__membrane__V) < 1.4999999999876223e-6) ? (-8.0099999999339032e-7 / (-1.0 + exp(-9.9999999999174827e-8)) + 333333.33333608392 * (-17.9999985 + var_chaste_interface__membrane__V) * (8.0099999999339032e-7 / (-1.0 + exp(9.9999999999174827e-8)) + 8.0099999999339032e-7 / (-1.0 + exp(-9.9999999999174827e-8)))) : (0.53400000000000003 * (-18.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(-1.2 + 0.066666666666666666 * var_chaste_interface__membrane__V))));
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[14] < 2){
                    double left = _lookup_table_0[i-1][14];
                    double right = _lookup_table_0[i+1][14];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 14 at ["<<i<<"][14] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[14] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[14] >= 2){
                    EXCEPTION("Lookup table 14 at ["<<i<<"][14] has non-finite value: " << val);
                }
                _lookup_table_0[i][14] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.33300000000000002 / (1.0 + exp(2.0 - 0.10000000000000001 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][15] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-0.067226890756302518 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][16] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + exp(-1.4285714285714286 - 0.14285714285714285 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][17] = val;
            }

            mNeedsRegeneration[0] = false;
        }

        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }

private:
    /** The single instance of the class */
    static std::shared_ptr<Cellespinosa_model_1998_normalFromCellMLCvodeOpt_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[18];

    // Lookup tables
    double (*_lookup_table_0)[18];
    int _lookup_table_0_num_misshit_piecewise[18] = {0};

};

std::shared_ptr<Cellespinosa_model_1998_normalFromCellMLCvodeOpt_LookupTables> Cellespinosa_model_1998_normalFromCellMLCvodeOpt_LookupTables::mpInstance;

    boost::shared_ptr<RegularStimulus> Cellespinosa_model_1998_normalFromCellMLCvodeOpt::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__stim_amplitude_converted = -0.0018000000000000002 * HeartConfig::Instance()->GetCapacitance() / NV_Ith_S(mParameters, 10); // uA_per_cm2
        const double var_chaste_interface__membrane__stim_duration_converted = 2.0; // millisecond
        const double var_chaste_interface__membrane__stim_period_converted = 500.0; // millisecond
        const double var_chaste_interface__membrane__stim_start_converted = 100.0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__stim_amplitude_converted),
                var_chaste_interface__membrane__stim_duration_converted,
                var_chaste_interface__membrane__stim_period_converted,
                var_chaste_interface__membrane__stim_start_converted
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }

    double Cellespinosa_model_1998_normalFromCellMLCvodeOpt::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Cellespinosa_model_1998_normalFromCellMLCvodeOpt::Cellespinosa_model_1998_normalFromCellMLCvodeOpt(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                21,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellespinosa_model_1998_normalFromCellMLCvodeOpt>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
        
        NV_Ith_S(this->mParameters, 0) = 0.050000000000000003; // (var_calcium_release__K_leak_rate) [per_second]
        NV_Ith_S(this->mParameters, 1) = 250.0; // (var_calcium_release__K_m_rel) [per_second]
        NV_Ith_S(this->mParameters, 2) = 0.00050000000000000001; // (var_calcium_release__K_m_Ca_cyt) [millimolar]
        NV_Ith_S(this->mParameters, 3) = 0.01; // (var_calcium_release__K_m_Ca_ds) [millimolar]
        NV_Ith_S(this->mParameters, 4) = 1.0; // (var_sarcoplasmic_reticulum_calcium_pump__uptake_factor) [dimensionless]
        NV_Ith_S(this->mParameters, 5) = 5.4000000000000004; // (var_extracellular_potassium_concentration__K_b) [millimolar]
        NV_Ith_S(this->mParameters, 6) = 1.0; // (var_intracellular_sodium_concentration__conc_clamp) [dimensionless]
        NV_Ith_S(this->mParameters, 7) = 2.5; // (var_extracellular_calcium_concentration__Ca_o) [millimolar]
        NV_Ith_S(this->mParameters, 8) = 148.5; // (var_extracellular_sodium_concentration__Na_o) [millimolar]
        NV_Ith_S(this->mParameters, 9) = 0.059999999999999998; // (var_L_type_Ca_channel__P_Ca_L) [nanoA_per_millimolar]
        NV_Ith_S(this->mParameters, 10) = 9.5000000000000005e-5; // (var_membrane__Cm) [microF]
        NV_Ith_S(this->mParameters, 11) = 1.5; // (var_time_dependent_potassium_current__i_K_max) [nanoA]
        NV_Ith_S(this->mParameters, 12) = 0.59999999999999998; // (var_fast_sodium_current__g_Na) [microS]
        NV_Ith_S(this->mParameters, 13) = 0; // (var_fast_sodium_current__perc_reduced_inact_for_IpNa) [dimensionless]
        NV_Ith_S(this->mParameters, 14) = 0; // (var_fast_sodium_current__shift_INa_inact) [millivolt]
        NV_Ith_S(this->mParameters, 15) = 0.12; // (var_time_independent_potassium_current__g_K1) [microS]
        NV_Ith_S(this->mParameters, 16) = 0.00020000000000000001; // (var_sodium_calcium_exchanger__k_NaCa) [nanoA]
        NV_Ith_S(this->mParameters, 17) = 0.080000000000000002; // (var_transient_outward_current__g_to) [microS]
    }

    Cellespinosa_model_1998_normalFromCellMLCvodeOpt::~Cellespinosa_model_1998_normalFromCellMLCvodeOpt()
    {
    }

    AbstractLookupTableCollection* Cellespinosa_model_1998_normalFromCellMLCvodeOpt::GetLookupTableCollection()
    {
        return Cellespinosa_model_1998_normalFromCellMLCvodeOpt_LookupTables::Instance();
    }
    
    double Cellespinosa_model_1998_normalFromCellMLCvodeOpt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -86.27784
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 7.07933e-05
        double var_chaste_interface__time_dependent_potassium_current_x_gate__x = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 2.3455e-06
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.003956
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.9759885
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 3.06884e-12
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.9999977
        double var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.4387865
        double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.954689
        double var_chaste_interface__transient_outward_current_r_gate__r = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 2.4223e-05
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = NV_Ith_S(rY, 13);
        // Units: millimolar; Initial value: 6.835
        double var_chaste_interface__extracellular_potassium_concentration__K_o = NV_Ith_S(rY, 14);
        // Units: millimolar; Initial value: 5.3201028
        double var_chaste_interface__intracellular_potassium_concentration__K_i = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 140.1333
        double var_chaste_interface__intracellular_calcium_concentration__Ca_ds = NV_Ith_S(rY, 16);
        // Units: millimolar; Initial value: 0.0008364
        
        // Lookup table indexing
        const bool _oob_0 = Cellespinosa_model_1998_normalFromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellespinosa_model_1998_normalFromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        const double var_L_type_Ca_channel__i_Ca_L_Ca_cyt = 0; // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Ca_ds = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 1.3356880329551402e-6) ? (-374338.90823576227 * (-50.000001335688033 + var_chaste_interface__membrane__V) * (-1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - NV_Ith_S(mParameters, 7) * exp(9.9999999997780743e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999997780743e-8)) - 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - NV_Ith_S(mParameters, 7) * exp(-9.9999999997780743e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) + 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - NV_Ith_S(mParameters, 7) * exp(-9.9999999997780743e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) : (0.14973556329098189 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - NV_Ith_S(mParameters, 7) * _lt_0_row[0]) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[1]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K_cyt = 0; // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K_ds = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-2.9999999999957622e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - var_chaste_interface__extracellular_potassium_concentration__K_o * exp(9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 2.9999999999957622e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - var_chaste_interface__extracellular_potassium_concentration__K_o * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 2.9999999999957622e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - var_chaste_interface__extracellular_potassium_concentration__K_o * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (0.00011230167246823642 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - var_chaste_interface__extracellular_potassium_concentration__K_o * _lt_0_row[2]) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na_cyt = 0; // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na_ds = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 8) * exp(9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 8) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 8) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (0.00037433890822745472 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 8) * _lt_0_row[2]) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_calcium_background_current__i_b_Ca = 0.00025000000000000001 * var_chaste_interface__membrane__V - 0.0033392200824619565 * log(NV_Ith_S(mParameters, 7) / var_chaste_interface__intracellular_calcium_concentration__Ca_i); // nanoA
        const double var_reversal_potentials__E_K = 26.713760659695652 * log(var_chaste_interface__extracellular_potassium_concentration__K_o / var_chaste_interface__intracellular_potassium_concentration__K_i); // millivolt
        const double var_potassium_background_current__i_b_K = 0.0040000000000000001 * var_chaste_interface__membrane__V - 0.0040000000000000001 * var_reversal_potentials__E_K; // nanoA
        const double var_fast_sodium_current__i_Na_converted = 0.001 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-26.713760659695652 * log((NV_Ith_S(mParameters, 8) + 0.12 * var_chaste_interface__extracellular_potassium_concentration__K_o) / (var_chaste_interface__intracellular_sodium_concentration__Na_i + 0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i)) + var_chaste_interface__membrane__V) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 12) * var_chaste_interface__fast_sodium_current_h_gate__h / NV_Ith_S(mParameters, 10); // uA_per_cm2
        const double var_sodium_background_current__i_b_Na = 0.0001 * var_chaste_interface__membrane__V - 0.0026713760659695649 * log(NV_Ith_S(mParameters, 8) / var_chaste_interface__intracellular_sodium_concentration__Na_i); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa_cyt = 0.999 * (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * NV_Ith_S(mParameters, 7) * _lt_0_row[4] - pow(NV_Ith_S(mParameters, 8), 3.0) * var_chaste_interface__intracellular_calcium_concentration__Ca_i * _lt_0_row[5]) * NV_Ith_S(mParameters, 16) / ((1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i) * (1.0 + 0.0050000000000000001 * pow(NV_Ith_S(mParameters, 8), 3.0) * var_chaste_interface__intracellular_calcium_concentration__Ca_i + 0.0050000000000000001 * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * NV_Ith_S(mParameters, 7))); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa_ds = 0.001 * (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * NV_Ith_S(mParameters, 7) * _lt_0_row[4] - pow(NV_Ith_S(mParameters, 8), 3.0) * var_chaste_interface__intracellular_calcium_concentration__Ca_ds * _lt_0_row[5]) * NV_Ith_S(mParameters, 16) / ((1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds) * (1.0 + 0.0050000000000000001 * pow(NV_Ith_S(mParameters, 8), 3.0) * var_chaste_interface__intracellular_calcium_concentration__Ca_ds + 0.0050000000000000001 * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * NV_Ith_S(mParameters, 7))); // nanoA
        const double var_sodium_potassium_pump__i_NaK = 0.69999999999999996 * var_chaste_interface__extracellular_potassium_concentration__K_o * var_chaste_interface__intracellular_sodium_concentration__Na_i / ((1.0 + var_chaste_interface__extracellular_potassium_concentration__K_o) * (40.0 + var_chaste_interface__intracellular_sodium_concentration__Na_i)); // nanoA
        const double var_time_dependent_potassium_current__i_K_converted = 7.1428571428571427e-6 * (-var_chaste_interface__extracellular_potassium_concentration__K_o * _lt_0_row[6] + var_chaste_interface__intracellular_potassium_concentration__K_i) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 11) * var_chaste_interface__time_dependent_potassium_current_x_gate__x / NV_Ith_S(mParameters, 10); // uA_per_cm2
        const double var_time_independent_potassium_current__i_K1_converted = 0.001 * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * HeartConfig::Instance()->GetCapacitance() * var_chaste_interface__extracellular_potassium_concentration__K_o * NV_Ith_S(mParameters, 15) / ((1.0 + exp(0.6251459767398494 + 0.062514597673984929 * var_chaste_interface__membrane__V - 0.062514597673984929 * var_reversal_potentials__E_K)) * (10.0 + var_chaste_interface__extracellular_potassium_concentration__K_o) * NV_Ith_S(mParameters, 10)); // uA_per_cm2
        const double var_transient_outward_current__i_to_converted = 0.001 * (0.14999999999999999 + 0.84999999999999998 * var_chaste_interface__transient_outward_current_s_gate__s) * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 17) * var_chaste_interface__transient_outward_current_r_gate__r / NV_Ith_S(mParameters, 10); // uA_per_cm2
        const double var_chaste_interface__i_ionic = ((var_fast_sodium_current__i_Na_converted + var_time_dependent_potassium_current__i_K_converted + var_time_independent_potassium_current__i_K1_converted + var_transient_outward_current__i_to_converted) * NV_Ith_S(mParameters, 10) + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L_Ca_cyt + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L_Ca_ds + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L_K_cyt + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L_K_ds + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L_Na_cyt + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L_Na_ds + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_calcium_background_current__i_b_Ca + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_potassium_background_current__i_b_K + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_sodium_background_current__i_b_Na + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_sodium_calcium_exchanger__i_NaCa_cyt + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_sodium_calcium_exchanger__i_NaCa_ds + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_sodium_potassium_pump__i_NaK) / NV_Ith_S(mParameters, 10); // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellespinosa_model_1998_normalFromCellMLCvodeOpt::EvaluateYDerivatives(double var_chaste_interface__environment__time_converted, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -86.27784
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 7.07933e-05
        double var_chaste_interface__time_dependent_potassium_current_x_gate__x = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 2.3455e-06
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.003956
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.9759885
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 3.06884e-12
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.9999977
        double var_chaste_interface__L_type_Ca_channel_f2_gate__f2 = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.994096
        double var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.4387865
        double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.954689
        double var_chaste_interface__transient_outward_current_r_gate__r = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 2.4223e-05
        double var_chaste_interface__calcium_release__ActFrac = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.0113161
        double var_chaste_interface__calcium_release__ProdFrac = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.9402563
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = NV_Ith_S(rY, 13);
        // Units: millimolar; Initial value: 6.835
        double var_chaste_interface__extracellular_potassium_concentration__K_o = NV_Ith_S(rY, 14);
        // Units: millimolar; Initial value: 5.3201028
        double var_chaste_interface__intracellular_potassium_concentration__K_i = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 140.1333
        double var_chaste_interface__intracellular_calcium_concentration__Ca_ds = NV_Ith_S(rY, 16);
        // Units: millimolar; Initial value: 0.0008364
        double var_chaste_interface__intracellular_calcium_concentration__Ca_up = NV_Ith_S(rY, 17);
        // Units: millimolar; Initial value: 0.479749
        double var_chaste_interface__intracellular_calcium_concentration__Ca_rel = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 0.43984
        double var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 0.0024448
        double var_chaste_interface__intracellular_calcium_concentration__Ca_Trop = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 0.0017012

        // Lookup table indexing
        const bool _oob_0 = Cellespinosa_model_1998_normalFromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellespinosa_model_1998_normalFromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        double d_dt_chaste_interface_var_membrane__V;
        const double d_dt_chaste_interface_var_L_type_Ca_channel_f2ds_gate__f2ds = 0.02 - 0.02 * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds - 0.02 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_ds); // 1 / millisecond
        const double d_dt_chaste_interface_var_L_type_Ca_channel_f2_gate__f2 = 0.001 - 0.001 * var_chaste_interface__L_type_Ca_channel_f2_gate__f2 - 0.001 * var_chaste_interface__intracellular_calcium_concentration__Ca_i / (100000.0 + var_chaste_interface__intracellular_calcium_concentration__Ca_i); // 1 / millisecond
        const double var_calcium_release__RegBindSite = var_chaste_interface__intracellular_calcium_concentration__Ca_i / (NV_Ith_S(mParameters, 2) + var_chaste_interface__intracellular_calcium_concentration__Ca_i) + (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (NV_Ith_S(mParameters, 2) + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * var_chaste_interface__intracellular_calcium_concentration__Ca_ds / (NV_Ith_S(mParameters, 3) + var_chaste_interface__intracellular_calcium_concentration__Ca_ds); // dimensionless
        const double var_calcium_release__InactRate = 60.0 + 500.0 * pow(var_calcium_release__RegBindSite, 2); // per_second
        const double var_calcium_release__i_rel = (pow(var_chaste_interface__calcium_release__ActFrac, 2) * NV_Ith_S(mParameters, 1) / pow((0.25 + var_chaste_interface__calcium_release__ActFrac), 2) + NV_Ith_S(mParameters, 0)) * var_chaste_interface__intracellular_calcium_concentration__Ca_rel; // millimolar_per_second
        const double var_calcium_translocation__i_trans = 50.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_up - 50.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_rel; // millimolar_per_second
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_rel = 9.9999999999999991e-5 * var_calcium_translocation__i_trans - 0.001 * var_calcium_release__i_rel; // millimolar / millisecond
        const double var_intracellular_calcium_concentration__Ca_Calmod_orig_deriv = -50.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod + 100000.0 * (0.02 - var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod) * var_chaste_interface__intracellular_calcium_concentration__Ca_i; // millimolar / second
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_Calmod = 0.001 * var_intracellular_calcium_concentration__Ca_Calmod_orig_deriv; // millimolar / millisecond
        const double var_intracellular_calcium_concentration__Ca_Trop_orig_deriv = -200.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_Trop + 100000.0 * (0.050000000000000003 - var_chaste_interface__intracellular_calcium_concentration__Ca_Trop) * var_chaste_interface__intracellular_calcium_concentration__Ca_i; // millimolar / second
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_Trop = 0.001 * var_intracellular_calcium_concentration__Ca_Trop_orig_deriv; // millimolar / millisecond
        const double var_L_type_Ca_channel__i_Ca_L_Ca_cyt = 0; // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Ca_ds = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 1.3356880329551402e-6) ? (-374338.90823576227 * (-50.000001335688033 + var_chaste_interface__membrane__V) * (-1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - NV_Ith_S(mParameters, 7) * exp(9.9999999997780743e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999997780743e-8)) - 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - NV_Ith_S(mParameters, 7) * exp(-9.9999999997780743e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) + 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - NV_Ith_S(mParameters, 7) * exp(-9.9999999997780743e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) : (0.14973556329098189 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - NV_Ith_S(mParameters, 7) * _lt_0_row[0]) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[1]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K_cyt = 0; // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K_ds = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-2.9999999999957622e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - var_chaste_interface__extracellular_potassium_concentration__K_o * exp(9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 2.9999999999957622e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - var_chaste_interface__extracellular_potassium_concentration__K_o * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 2.9999999999957622e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - var_chaste_interface__extracellular_potassium_concentration__K_o * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (0.00011230167246823642 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - var_chaste_interface__extracellular_potassium_concentration__K_o * _lt_0_row[2]) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na_cyt = 0; // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na_ds = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 8) * exp(9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 8) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 8) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (0.00037433890822745472 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 8) * _lt_0_row[2]) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d = 0.01 * (1.0 - var_chaste_interface__L_type_Ca_channel_d_gate__d) * _lt_0_row[7] - 0.01 * _lt_0_row[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d; // 1 / millisecond
        const double d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f = 0.002 * (1.0 - var_chaste_interface__L_type_Ca_channel_f_gate__f) * _lt_0_row[9] - 0.024 * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[10]); // 1 / millisecond
        const double var_calcium_release__SpeedRel = ((var_chaste_interface__membrane__V < -50.0) ? (5.0) : (1.0)); // dimensionless
        const double d_dt_chaste_interface_var_calcium_release__ActFrac = 0.5 * pow(var_calcium_release__RegBindSite, 2) * (1.0 - var_chaste_interface__calcium_release__ActFrac - var_chaste_interface__calcium_release__ProdFrac) * var_calcium_release__SpeedRel - 0.001 * var_chaste_interface__calcium_release__ActFrac * var_calcium_release__InactRate * var_calcium_release__SpeedRel; // 1 / millisecond
        const double d_dt_chaste_interface_var_calcium_release__ProdFrac = -0.001 * var_chaste_interface__calcium_release__ProdFrac * var_calcium_release__SpeedRel + 0.001 * var_chaste_interface__calcium_release__ActFrac * var_calcium_release__InactRate * var_calcium_release__SpeedRel; // 1 / millisecond
        const double var_fast_sodium_current_h_gate__alpha_h = 20.0 * exp(-9.375 + 0.125 * NV_Ith_S(mParameters, 14) - 0.125 * var_chaste_interface__membrane__V); // per_second
        const double var_fast_sodium_current_h_gate__beta_h = 2000.0 / (1.0 + 320.0 * exp(-7.5 + 0.10000000000000001 * NV_Ith_S(mParameters, 14) - 0.10000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double d_dt_chaste_interface_var_fast_sodium_current_h_gate__h = 0.001 * (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h) * (-var_chaste_interface__fast_sodium_current_h_gate__h + 0.01 * NV_Ith_S(mParameters, 13) + (1.0 - 0.01 * NV_Ith_S(mParameters, 13)) * var_fast_sodium_current_h_gate__alpha_h / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h)); // 1 / millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_m_gate__m = 0.001 * (1.0 - var_chaste_interface__fast_sodium_current_m_gate__m) * _lt_0_row[11] - 8.0 * var_chaste_interface__fast_sodium_current_m_gate__m * _lt_0_row[12]; // 1 / millisecond
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_ds = -0.003159137300842461 * var_L_type_Ca_channel__i_Ca_L_Ca_ds - 0.01 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds; // millimolar / millisecond
        const double var_calcium_background_current__i_b_Ca = 0.00025000000000000001 * var_chaste_interface__membrane__V - 0.0033392200824619565 * log(NV_Ith_S(mParameters, 7) / var_chaste_interface__intracellular_calcium_concentration__Ca_i); // nanoA
        const double var_reversal_potentials__E_K = 26.713760659695652 * log(var_chaste_interface__extracellular_potassium_concentration__K_o / var_chaste_interface__intracellular_potassium_concentration__K_i); // millivolt
        const double var_potassium_background_current__i_b_K = 0.0040000000000000001 * var_chaste_interface__membrane__V - 0.0040000000000000001 * var_reversal_potentials__E_K; // nanoA
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-26.713760659695652 * log((NV_Ith_S(mParameters, 8) + 0.12 * var_chaste_interface__extracellular_potassium_concentration__K_o) / (var_chaste_interface__intracellular_sodium_concentration__Na_i + 0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i)) + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 12) * var_chaste_interface__fast_sodium_current_h_gate__h; // nanoA
        const double var_sarcoplasmic_reticulum_calcium_pump__i_up = (0.40000000000000002 * var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.00041999999999999996 + 0.00023999999999999998 * var_chaste_interface__intracellular_calcium_concentration__Ca_up + var_chaste_interface__intracellular_calcium_concentration__Ca_i) - 7.1999999999999997e-6 * var_chaste_interface__intracellular_calcium_concentration__Ca_up / (0.00041999999999999996 + 0.00023999999999999998 * var_chaste_interface__intracellular_calcium_concentration__Ca_up + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * NV_Ith_S(mParameters, 4); // millimolar_per_second
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_up = 0.048999999999999995 * var_sarcoplasmic_reticulum_calcium_pump__i_up - 0.001 * var_calcium_translocation__i_trans; // millimolar / millisecond
        const double var_sodium_background_current__i_b_Na = 0.0001 * var_chaste_interface__membrane__V - 0.0026713760659695649 * log(NV_Ith_S(mParameters, 8) / var_chaste_interface__intracellular_sodium_concentration__Na_i); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa_cyt = 0.999 * (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * NV_Ith_S(mParameters, 7) * _lt_0_row[4] - pow(NV_Ith_S(mParameters, 8), 3.0) * var_chaste_interface__intracellular_calcium_concentration__Ca_i * _lt_0_row[5]) * NV_Ith_S(mParameters, 16) / ((1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i) * (1.0 + 0.0050000000000000001 * pow(NV_Ith_S(mParameters, 8), 3.0) * var_chaste_interface__intracellular_calcium_concentration__Ca_i + 0.0050000000000000001 * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * NV_Ith_S(mParameters, 7))); // nanoA
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_i = 0.00063182746016849224 * var_sodium_calcium_exchanger__i_NaCa_cyt + 0.00020408163265306126 * var_calcium_release__i_rel + 0.001 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds - 0.001 * var_intracellular_calcium_concentration__Ca_Calmod_orig_deriv - 0.001 * var_intracellular_calcium_concentration__Ca_Trop_orig_deriv - 0.001 * var_sarcoplasmic_reticulum_calcium_pump__i_up - 0.00031591373008424612 * var_L_type_Ca_channel__i_Ca_L_Ca_cyt - 0.00031591373008424612 * var_calcium_background_current__i_b_Ca; // millimolar / millisecond
        const double var_sodium_potassium_pump__i_NaK = 0.69999999999999996 * var_chaste_interface__extracellular_potassium_concentration__K_o * var_chaste_interface__intracellular_sodium_concentration__Na_i / ((1.0 + var_chaste_interface__extracellular_potassium_concentration__K_o) * (40.0 + var_chaste_interface__intracellular_sodium_concentration__Na_i)); // nanoA
        const double d_dt_chaste_interface_var_intracellular_sodium_concentration__Na_i = -0.00063182746016849224 * (3.0 * var_sodium_calcium_exchanger__i_NaCa_cyt + 3.0 * var_sodium_potassium_pump__i_NaK + var_L_type_Ca_channel__i_Ca_L_Na_cyt + var_L_type_Ca_channel__i_Ca_L_Na_ds + var_fast_sodium_current__i_Na + var_sodium_background_current__i_b_Na) * NV_Ith_S(mParameters, 6); // millimolar / millisecond
        const double var_time_dependent_potassium_current__i_K = 0.0071428571428571426 * (-var_chaste_interface__extracellular_potassium_concentration__K_o * _lt_0_row[6] + var_chaste_interface__intracellular_potassium_concentration__K_i) * NV_Ith_S(mParameters, 11) * var_chaste_interface__time_dependent_potassium_current_x_gate__x; // nanoA
        const double d_dt_chaste_interface_var_time_dependent_potassium_current_x_gate__x = 0.001 * (1.0 - var_chaste_interface__time_dependent_potassium_current_x_gate__x) * _lt_0_row[13] - 0.001 * _lt_0_row[14] * var_chaste_interface__time_dependent_potassium_current_x_gate__x; // 1 / millisecond
        const double var_time_independent_potassium_current__i_K1 = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * var_chaste_interface__extracellular_potassium_concentration__K_o * NV_Ith_S(mParameters, 15) / ((1.0 + exp(0.6251459767398494 + 0.062514597673984929 * var_chaste_interface__membrane__V - 0.062514597673984929 * var_reversal_potentials__E_K)) * (10.0 + var_chaste_interface__extracellular_potassium_concentration__K_o)); // nanoA
        const double d_dt_chaste_interface_var_transient_outward_current_r_gate__r = _lt_0_row[15] - 0.33300000000000002 * var_chaste_interface__transient_outward_current_r_gate__r; // 1 / millisecond
        const double var_transient_outward_current__i_to = (0.14999999999999999 + 0.84999999999999998 * var_chaste_interface__transient_outward_current_s_gate__s) * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 17) * var_chaste_interface__transient_outward_current_r_gate__r; // nanoA
        const double d_dt_chaste_interface_var_extracellular_potassium_concentration__K_o = 0.001 * (0.69999999999999996 * NV_Ith_S(mParameters, 5) + 0.77398863870640289 * var_L_type_Ca_channel__i_Ca_L_K_cyt + 0.77398863870640289 * var_L_type_Ca_channel__i_Ca_L_K_ds + 0.77398863870640289 * var_potassium_background_current__i_b_K + 0.77398863870640289 * var_time_dependent_potassium_current__i_K + 0.77398863870640289 * var_time_independent_potassium_current__i_K1 + 0.77398863870640289 * var_transient_outward_current__i_to - 0.69999999999999996 * var_chaste_interface__extracellular_potassium_concentration__K_o - 1.5479772774128058 * var_sodium_potassium_pump__i_NaK) * NV_Ith_S(mParameters, 6); // millimolar / millisecond
        const double d_dt_chaste_interface_var_intracellular_potassium_concentration__K_i = -0.00063182746016849224 * (-2.0 * var_sodium_potassium_pump__i_NaK + var_L_type_Ca_channel__i_Ca_L_K_cyt + var_L_type_Ca_channel__i_Ca_L_K_ds + var_potassium_background_current__i_b_K + var_time_dependent_potassium_current__i_K + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) * NV_Ith_S(mParameters, 6); // millimolar / millisecond
        const double d_dt_chaste_interface_var_transient_outward_current_s_gate__s = 8.5800000000000009e-6 * (1.0 - var_chaste_interface__transient_outward_current_s_gate__s) * _lt_0_row[16] - 0.0085800000000000008 * var_chaste_interface__transient_outward_current_s_gate__s / (_lt_0_row[17]); // 1 / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_membrane__V = 0.0;
        }
        else
        {
            d_dt_chaste_interface_var_membrane__V = -0.001 * (1000.0 * GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted) * NV_Ith_S(mParameters, 10) / HeartConfig::Instance()->GetCapacitance() + 0.001 * (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * NV_Ith_S(mParameters, 7) * _lt_0_row[4] - pow(NV_Ith_S(mParameters, 8), 3.0) * var_chaste_interface__intracellular_calcium_concentration__Ca_ds * _lt_0_row[5]) * NV_Ith_S(mParameters, 16) / ((1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds) * (1.0 + 0.0050000000000000001 * pow(NV_Ith_S(mParameters, 8), 3.0) * var_chaste_interface__intracellular_calcium_concentration__Ca_ds + 0.0050000000000000001 * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * NV_Ith_S(mParameters, 7))) + var_L_type_Ca_channel__i_Ca_L_Ca_cyt + var_L_type_Ca_channel__i_Ca_L_Ca_ds + var_L_type_Ca_channel__i_Ca_L_K_cyt + var_L_type_Ca_channel__i_Ca_L_K_ds + var_L_type_Ca_channel__i_Ca_L_Na_cyt + var_L_type_Ca_channel__i_Ca_L_Na_ds + var_calcium_background_current__i_b_Ca + var_fast_sodium_current__i_Na + var_potassium_background_current__i_b_K + var_sodium_background_current__i_b_Na + var_sodium_calcium_exchanger__i_NaCa_cyt + var_sodium_potassium_pump__i_NaK + var_time_dependent_potassium_current__i_K + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) / NV_Ith_S(mParameters, 10); // millivolt / millisecond
        }
        
        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_membrane__V;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_i;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_time_dependent_potassium_current_x_gate__x;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_fast_sodium_current_m_gate__m;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_fast_sodium_current_h_gate__h;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_L_type_Ca_channel_f2_gate__f2;
        NV_Ith_S(rDY,8) = d_dt_chaste_interface_var_L_type_Ca_channel_f2ds_gate__f2ds;
        NV_Ith_S(rDY,9) = d_dt_chaste_interface_var_transient_outward_current_s_gate__s;
        NV_Ith_S(rDY,10) = d_dt_chaste_interface_var_transient_outward_current_r_gate__r;
        NV_Ith_S(rDY,11) = d_dt_chaste_interface_var_calcium_release__ActFrac;
        NV_Ith_S(rDY,12) = d_dt_chaste_interface_var_calcium_release__ProdFrac;
        NV_Ith_S(rDY,13) = d_dt_chaste_interface_var_intracellular_sodium_concentration__Na_i;
        NV_Ith_S(rDY,14) = d_dt_chaste_interface_var_extracellular_potassium_concentration__K_o;
        NV_Ith_S(rDY,15) = d_dt_chaste_interface_var_intracellular_potassium_concentration__K_i;
        NV_Ith_S(rDY,16) = d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_ds;
        NV_Ith_S(rDY,17) = d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_up;
        NV_Ith_S(rDY,18) = d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_rel;
        NV_Ith_S(rDY,19) = d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_Calmod;
        NV_Ith_S(rDY,20) = d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_Trop;
    }

    void Cellespinosa_model_1998_normalFromCellMLCvodeOpt::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time_converted, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -86.27784
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 7.07933e-05
        double var_chaste_interface__time_dependent_potassium_current_x_gate__x = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 2.3455e-06
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.003956
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.9759885
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 3.06884e-12
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.9999977
        double var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.4387865
        double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.954689
        double var_chaste_interface__transient_outward_current_r_gate__r = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 2.4223e-05
        double var_chaste_interface__calcium_release__ActFrac = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.0113161
        double var_chaste_interface__calcium_release__ProdFrac = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.9402563
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = NV_Ith_S(rY, 13);
        // Units: millimolar; Initial value: 6.835
        double var_chaste_interface__extracellular_potassium_concentration__K_o = NV_Ith_S(rY, 14);
        // Units: millimolar; Initial value: 5.3201028
        double var_chaste_interface__intracellular_potassium_concentration__K_i = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 140.1333
        double var_chaste_interface__intracellular_calcium_concentration__Ca_ds = NV_Ith_S(rY, 16);
        // Units: millimolar; Initial value: 0.0008364
        double var_chaste_interface__intracellular_calcium_concentration__Ca_up = NV_Ith_S(rY, 17);
        // Units: millimolar; Initial value: 0.479749
        double var_chaste_interface__intracellular_calcium_concentration__Ca_rel = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 0.43984
        double var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 0.0024448
        double var_chaste_interface__intracellular_calcium_concentration__Ca_Trop = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 0.0017012
        
        // Lookup table indexing
        const bool _oob_0 = Cellespinosa_model_1998_normalFromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellespinosa_model_1998_normalFromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);
const double var_x0 = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * NV_Ith_S(mParameters, 12);
        const double var_x1 = var_x0 * var_chaste_interface__fast_sodium_current_h_gate__h;
        const double var_x2 = 0.14999999999999999 + 0.84999999999999998 * var_chaste_interface__transient_outward_current_s_gate__s;
        const double var_x3 = NV_Ith_S(mParameters, 17) * var_chaste_interface__transient_outward_current_r_gate__r;
        const double var_x4 = var_x2 * var_x3;
        const double var_x5 = 1 / var_chaste_interface__intracellular_potassium_concentration__K_i;
        const double var_x6 = var_x5 * var_chaste_interface__extracellular_potassium_concentration__K_o;
        const double var_x7 = log(var_x6);
        const double var_x8 = exp(0.6251459767398494 + 0.062514597673984929 * var_chaste_interface__membrane__V - 1.6699999999999999 * var_x7);
        const double var_x9 = 1.0 + var_x8;
        const double var_x10 = 1 / var_x9;
        const double var_x11 = NV_Ith_S(mParameters, 15) / (10.0 + var_chaste_interface__extracellular_potassium_concentration__K_o);
        const double var_x12 = var_x10 * var_x11;
        const double var_x13 = var_x12 * var_chaste_interface__extracellular_potassium_concentration__K_o;
        const double var_x14 = pow(NV_Ith_S(mParameters, 8), 3.0);
        const double var_x15 = 0.018716945411372737 * var_chaste_interface__membrane__V;
        const double var_x16 = var_x14 * exp(-var_x15);
        const double var_x17 = var_x16 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds;
        const double var_x18 = exp(var_x15);
        const double var_x19 = pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * NV_Ith_S(mParameters, 7);
        const double var_x20 = var_x18 * var_x19;
        const double var_x21 = 0.018716945411372737 * var_x20;
        const double var_x22 = 1 / (1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds);
        const double var_x23 = 0.0050000000000000001 * var_x14;
        const double var_x24 = 1.0 + 0.0050000000000000001 * var_x19;
        const double var_x25 = var_x24 + var_x23 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds;
        const double var_x26 = NV_Ith_S(mParameters, 16) / var_x25;
        const double var_x27 = var_x22 * var_x26;
        const double var_x28 = 0.001 * var_x27;
        const double var_x29 = -0.037433890822745473 * var_chaste_interface__membrane__V;
        const double var_x30 = exp(var_x29);
        const double var_x31 = var_x30 * var_chaste_interface__extracellular_potassium_concentration__K_o;
        const double var_x32 = NV_Ith_S(mParameters, 11) * var_chaste_interface__time_dependent_potassium_current_x_gate__x;
        const double var_x33 = var_x31 * var_x32;
        const double var_x34 = var_x16 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
        const double var_x35 = 1 / (1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i);
        const double var_x36 = var_x24 + var_x23 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
        const double var_x37 = NV_Ith_S(mParameters, 16) / var_x36;
        const double var_x38 = var_x35 * var_x37;
        const double var_x39 = var_x38 * (var_x21 + 0.018716945411372737 * var_x34);
        const double var_x40 = -26.713760659695652 * var_x7 + var_chaste_interface__membrane__V;
        const double var_x41 = var_x11 * var_x40 * var_x8 / pow(var_x9, 2);
        const double var_x42 = var_x41 * var_chaste_interface__extracellular_potassium_concentration__K_o;
        const double var_x43 = exp(9.9999999999858739e-8);
        const double var_x44 = 1 / (1.0 - var_x43);
        const double var_x45 = exp(1.8716945411372736);
        const double var_x46 = var_x45 * var_chaste_interface__intracellular_potassium_concentration__K_i;
        const double var_x47 = var_x44 * (var_x46 - var_x43 * var_chaste_interface__extracellular_potassium_concentration__K_o);
        const double var_x48 = NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds;
        const double var_x49 = var_x48 * var_chaste_interface__L_type_Ca_channel_f_gate__f;
        const double var_x50 = var_x49 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x51 = 5.6150836234118209e-5 * var_x50;
        const double var_x52 = exp(-9.9999999999858739e-8);
        const double var_x53 = 1 / (1.0 - var_x52);
        const double var_x54 = var_x53 * (var_x46 - var_x52 * var_chaste_interface__extracellular_potassium_concentration__K_o);
        const double var_x55 = -50.0 + var_chaste_interface__membrane__V;
        const double var_x56 = fabs(var_x55);
        const double var_x57 = var_x56 < 2.6713760659657915e-6;
        const double var_x58 = exp(1.8716945411372736 + var_x29);
        const double var_x59 = 1.0 - var_x58;
        const double var_x60 = 1 / var_x59;
        const double var_x61 = var_x50 * var_x60;
        const double var_x62 = var_x58 * var_chaste_interface__extracellular_potassium_concentration__K_o;
        const double var_x63 = var_x46 - var_x62;
        const double var_x64 = 0.00011230167246823642 * var_x63;
        const double var_x65 = var_x55 * var_x61;
        const double var_x66 = var_x50 * var_x55;
        const double var_x67 = var_x58 * var_x66 / pow(var_x59, 2);
        const double var_x68 = ((var_x57) ? (var_x47 * var_x51 + var_x51 * var_x54) : (var_x61 * var_x64 + 4.203888546387683e-6 * var_x62 * var_x65 - 4.203888546387683e-6 * var_x63 * var_x67));
        const double var_x69 = var_x45 * var_chaste_interface__intracellular_sodium_concentration__Na_i;
        const double var_x70 = var_x44 * (var_x69 - var_x43 * NV_Ith_S(mParameters, 8));
        const double var_x71 = var_x70 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x72 = 0.00018716945411372736 * var_x49;
        const double var_x73 = var_x53 * (var_x69 - var_x52 * NV_Ith_S(mParameters, 8));
        const double var_x74 = var_x73 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x75 = var_x58 * NV_Ith_S(mParameters, 8);
        const double var_x76 = var_x69 - var_x75;
        const double var_x77 = 0.00037433890822745472 * var_x76;
        const double var_x78 = ((var_x57) ? (var_x71 * var_x72 + var_x72 * var_x74) : (var_x61 * var_x77 + 1.4012961821292276e-5 * var_x65 * var_x75 - 1.4012961821292276e-5 * var_x67 * var_x76));
        const double var_x79 = exp(9.9999999997780743e-8);
        const double var_x80 = 1 / (1.0 - var_x79);
        const double var_x81 = exp(3.7433890822745473);
        const double var_x82 = var_x81 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
        const double var_x83 = var_x80 * (var_x82 - var_x79 * NV_Ith_S(mParameters, 7));
        const double var_x84 = 0.074867781645490947 * var_x50;
        const double var_x85 = exp(-9.9999999997780743e-8);
        const double var_x86 = 1 / (1.0 - var_x85);
        const double var_x87 = var_x86 * (var_x82 - var_x85 * NV_Ith_S(mParameters, 7));
        const double var_x88 = var_x56 < 1.3356880329551402e-6;
        const double var_x89 = _lt_0_row[0];
        const double var_x90 = 1.0 - var_x89;
        const double var_x91 = 1 / var_x90;
        const double var_x92 = var_x50 * var_x91;
        const double var_x93 = var_x89 * NV_Ith_S(mParameters, 7);
        const double var_x94 = var_x82 - var_x93;
        const double var_x95 = 0.14973556329098189 * var_x94;
        const double var_x96 = var_x55 * var_x92;
        const double var_x97 = ((var_x88) ? (var_x83 * var_x84 + var_x84 * var_x87) : (var_x92 * var_x95 + 0.011210369457033822 * var_x93 * var_x96 - 0.011210369457033822 * var_x66 * var_x89 * var_x94 / pow(var_x90, 2)));
        const double var_x98 = 1 / NV_Ith_S(mParameters, 10);
        const double var_x99 = 0.001 * var_x98;
        const double var_x100 = 1 / var_chaste_interface__intracellular_calcium_concentration__Ca_i;
        const double var_x101 = var_x20 - var_x34;
        const double var_x102 = var_x101 * var_x37 / pow((0.0068999999999999999 + var_chaste_interface__intracellular_calcium_concentration__Ca_i), 2);
        const double var_x103 = var_x14 * NV_Ith_S(mParameters, 16);
        const double var_x104 = var_x101 * var_x35 / pow(var_x36, 2);
        const double var_x105 = var_x103 * var_x104;
        const double var_x106 = var_x16 * var_x38;
        const double var_x107 = 18716945.911788113 - 374338.90823576227 * var_chaste_interface__membrane__V;
        const double var_x108 = 1.9999999999556149e-7 * var_x49;
        const double var_x109 = var_x108 * var_x81 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x110 = var_x109 * var_x86;
        const double var_x111 = ((var_x88) ? (var_x110 + var_x107 * (-var_x110 - var_x109 * var_x80)) : (0.14973556329098189 * var_x81 * var_x96));
        const double var_x112 = (0.0071428571428571426 * var_chaste_interface__intracellular_potassium_concentration__K_i - 0.0071428571428571426 * var_x31) * NV_Ith_S(mParameters, 11);
        const double var_x113 = 1 / (var_chaste_interface__intracellular_sodium_concentration__Na_i + 0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i);
        const double var_x114 = NV_Ith_S(mParameters, 8) + 0.12 * var_chaste_interface__extracellular_potassium_concentration__K_o;
        const double var_x115 = -26.713760659695652 * log(var_x113 * var_x114) + var_chaste_interface__membrane__V;
        const double var_x116 = var_x115 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 2) * NV_Ith_S(mParameters, 12) * var_chaste_interface__fast_sodium_current_h_gate__h;
        const double var_x117 = var_x0 * var_x115;
        const double var_x118 = 9358473.2056995872 - 187169.45411399176 * var_chaste_interface__membrane__V;
        const double var_x119 = 9.9999999999858744e-10 * var_x49;
        const double var_x120 = var_x119 * var_x73;
        const double var_x121 = var_x49 * var_x55;
        const double var_x122 = var_x121 * var_x60;
        const double var_x123 = ((var_x57) ? (var_x120 + var_x118 * (-var_x120 - var_x119 * var_x70)) : (var_x122 * var_x77));
        const double var_x124 = 2.9999999999957622e-10 * var_x49;
        const double var_x125 = var_x124 * var_x54;
        const double var_x126 = ((var_x57) ? (var_x125 + var_x118 * (-var_x125 - var_x124 * var_x47)) : (var_x122 * var_x64));
        const double var_x127 = var_x108 * var_x87;
        const double var_x128 = var_x91 * var_x95;
        const double var_x129 = ((var_x88) ? (var_x127 + var_x107 * (-var_x127 - var_x108 * var_x83)) : (var_x121 * var_x128));
        const double var_x130 = var_x48 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x131 = 9.9999999999858744e-10 * var_x130;
        const double var_x132 = var_x131 * var_x73;
        const double var_x133 = var_x130 * var_x55;
        const double var_x134 = var_x133 * var_x60;
        const double var_x135 = ((var_x57) ? (var_x132 + var_x118 * (-var_x132 - var_x131 * var_x70)) : (var_x134 * var_x77));
        const double var_x136 = 2.9999999999957622e-10 * var_x130;
        const double var_x137 = var_x136 * var_x54;
        const double var_x138 = ((var_x57) ? (var_x137 + var_x118 * (-var_x137 - var_x136 * var_x47)) : (var_x134 * var_x64));
        const double var_x139 = 1.9999999999556149e-7 * var_x130;
        const double var_x140 = var_x139 * var_x87;
        const double var_x141 = ((var_x88) ? (var_x140 + var_x107 * (-var_x140 - var_x139 * var_x83)) : (var_x128 * var_x133));
        const double var_x142 = NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_f_gate__f;
        const double var_x143 = 9.9999999999858744e-10 * var_x142;
        const double var_x144 = var_x143 * var_x74;
        const double var_x145 = var_x142 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x146 = var_x145 * var_x55;
        const double var_x147 = var_x146 * var_x60;
        const double var_x148 = ((var_x57) ? (var_x144 + var_x118 * (-var_x144 - var_x143 * var_x71)) : (var_x147 * var_x77));
        const double var_x149 = 2.9999999999957622e-10 * var_x145;
        const double var_x150 = var_x149 * var_x54;
        const double var_x151 = ((var_x57) ? (var_x150 + var_x118 * (-var_x150 - var_x149 * var_x47)) : (var_x147 * var_x64));
        const double var_x152 = 1.9999999999556149e-7 * var_x145;
        const double var_x153 = var_x152 * var_x87;
        const double var_x154 = ((var_x88) ? (var_x153 + var_x107 * (-var_x153 - var_x152 * var_x83)) : (var_x128 * var_x146));
        const double var_x155 = var_x3 * (0.84999999999999998 * var_chaste_interface__membrane__V - 22.706696560741303 * var_x7);
        const double var_x156 = var_x40 * NV_Ith_S(mParameters, 17);
        const double var_x157 = var_x156 * var_x2;
        const double var_x158 = 1 / var_chaste_interface__intracellular_sodium_concentration__Na_i;
        const double var_x159 = 1.0 + var_chaste_interface__extracellular_potassium_concentration__K_o;
        const double var_x160 = 1 / var_x159;
        const double var_x161 = 1 / (40.0 + var_chaste_interface__intracellular_sodium_concentration__Na_i);
        const double var_x162 = var_x160 * var_x161;
        const double var_x163 = 0.69999999999999996 * var_x162;
        const double var_x164 = var_x1 * var_x113;
        const double var_x165 = var_chaste_interface__extracellular_potassium_concentration__K_o * var_chaste_interface__intracellular_sodium_concentration__Na_i;
        const double var_x166 = var_x160 * var_x165 / pow((1 + 0.025000000000000001 * var_chaste_interface__intracellular_sodium_concentration__Na_i), 2);
        const double var_x167 = pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 2.0) * NV_Ith_S(mParameters, 7);
        const double var_x168 = var_x167 * var_x18;
        const double var_x169 = var_x168 * var_x38;
        const double var_x170 = var_x20 - var_x17;
        const double var_x171 = var_x170 * var_x22 / pow(var_x25, 2);
        const double var_x172 = var_x167 * NV_Ith_S(mParameters, 16);
        const double var_x173 = var_x104 * var_x172;
        const double var_x174 = var_x44 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x175 = var_x119 * var_x45;
        const double var_x176 = var_x53 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x177 = var_x175 * var_x176;
        const double var_x178 = var_x45 * var_x65;
        const double var_x179 = ((var_x57) ? (var_x177 + var_x118 * (-var_x177 - var_x174 * var_x175)) : (0.00037433890822745472 * var_x178));
        const double var_x180 = 1 / var_chaste_interface__extracellular_potassium_concentration__K_o;
        const double var_x181 = 26.713760659695652 * var_x12;
        const double var_x182 = 0.0071428571428571426 * var_x32;
        const double var_x183 = var_x12 * var_x40;
        const double var_x184 = var_x161 * var_x165 / pow(var_x159, 2);
        const double var_x185 = 26.713760659695652 * var_x4;
        const double var_x186 = var_x1 / var_x114;
        const double var_x187 = 1.6699999999999999 * var_x41;
        const double var_x188 = var_x10 * var_x40 * var_chaste_interface__extracellular_potassium_concentration__K_o * NV_Ith_S(mParameters, 15) / pow((1 + 0.10000000000000001 * var_chaste_interface__extracellular_potassium_concentration__K_o), 2);
        const double var_x189 = var_x124 * var_x174;
        const double var_x190 = var_x124 * var_x176;
        const double var_x191 = var_x190 * var_x52;
        const double var_x192 = ((var_x57) ? (-var_x191 + var_x118 * (var_x191 + var_x189 * var_x43)) : (-0.00011230167246823642 * var_x58 * var_x65));
        const double var_x193 = var_x190 * var_x45;
        const double var_x194 = ((var_x57) ? (var_x193 + var_x118 * (-var_x193 - var_x189 * var_x45)) : (0.00011230167246823642 * var_x178));
        const double var_x195 = 100.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod;
        const double var_x196 = 100.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_Trop;
        const double var_x197 = 0.00041999999999999996 + 0.00023999999999999998 * var_chaste_interface__intracellular_calcium_concentration__Ca_up + var_chaste_interface__intracellular_calcium_concentration__Ca_i;
        const double var_x198 = 1 / var_x197;
        const double var_x199 = pow(var_x197, (-2));
        const double var_x200 = var_x199 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
        const double var_x201 = var_x199 * var_chaste_interface__intracellular_calcium_concentration__Ca_up;
        const double var_x202 = 0.00040816326530612252 * NV_Ith_S(mParameters, 1);
        const double var_x203 = 0.25 + var_chaste_interface__calcium_release__ActFrac;
        const double var_x204 = pow(var_x203, (-2));
        const double var_x205 = var_x204 * var_chaste_interface__calcium_release__ActFrac;
        const double var_x206 = pow(var_chaste_interface__calcium_release__ActFrac, 2);
        const double var_x207 = var_x206 / pow(var_x203, 3);
        const double var_x208 = var_x204 * var_x206 * NV_Ith_S(mParameters, 1);
        const double var_x209 = 100.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
        const double var_x210 = 1 / (1.0 - exp(9.9999999991773334e-8));
        const double var_x211 = 1 / (1.0 - exp(-1.0000000000287557e-7));
        const double var_x212 = 1 / (-1.0 + exp(9.9999999999174827e-8));
        const double var_x213 = 1 / (-1.0 + exp(-9.9999999999174827e-8));
        const double var_x214 = (-0.00026699999999999998 * var_x212 - 0.00026699999999999998 * var_x213) * var_chaste_interface__time_dependent_potassium_current_x_gate__x;
        const double var_x215 = -18.0 + var_chaste_interface__membrane__V;
        const double var_x216 = fabs(var_x215);
        const double var_x217 = var_x216 < 5.0000000000050004e-7;
        const double var_x218 = 1.0 - var_chaste_interface__time_dependent_potassium_current_x_gate__x;
        const double var_x219 = exp(3.6000000000000001 - 0.20000000000000001 * var_chaste_interface__membrane__V);
        const double var_x220 = 1.0 - var_x219;
        const double var_x221 = 0.0015 / var_x220;
        const double var_x222 = var_x218 * var_x221 - 0.00029999999999999997 * var_x215 * var_x218 * var_x219 / pow(var_x220, 2);
        const double var_x223 = var_x216 < 1.4999999999876223e-6;
        const double var_x224 = exp(-1.2 + 0.066666666666666666 * var_chaste_interface__membrane__V);
        const double var_x225 = -1.0 + var_x224;
        const double var_x226 = 0.00053399999999999997 / var_x225;
        const double var_x227 = 8.0099999999339034e-10 * var_x213 - 333.33333333608391 * (-17.9999985 + var_chaste_interface__membrane__V) * (8.0099999999339032e-7 * var_x212 + 8.0099999999339032e-7 * var_x213);
        const double var_x228 = -var_x215 * var_x221;
        const double var_x229 = 1 / (1.0 - exp(1.0000000000287557e-7));
        const double var_x230 = 1 / (1.0 - exp(-1.0000000000287557e-7));
        const double var_x231 = _lt_0_row[12];
        const double var_x232 = 0.44800000000000001 * var_x231 * var_chaste_interface__fast_sodium_current_m_gate__m;
        const double var_x233 = 41.0 + var_chaste_interface__membrane__V;
        const double var_x234 = fabs(var_x233) < 1.0000000000287557e-6;
        const double var_x235 = 1.0 - var_chaste_interface__fast_sodium_current_m_gate__m;
        const double var_x236 = -0.10000000000000001 * var_chaste_interface__membrane__V;
        const double var_x237 = exp(-4.1000000000000005 + var_x236);
        const double var_x238 = 1.0 - var_x237;
        const double var_x239 = 0.20000000000000001 / var_x238;
        const double var_x240 = -8.0 * var_x231;
        const double var_x241 = exp(-7.5 + var_x236 + 0.10000000000000001 * NV_Ith_S(mParameters, 14));
        const double var_x242 = 1 / (1.0 + 320.0 * var_x241);
        const double var_x243 = 2.0 * var_x242;
        const double var_x244 = exp(-9.375 + 0.125 * NV_Ith_S(mParameters, 14) - 0.125 * var_chaste_interface__membrane__V);
        const double var_x245 = 0.02 * var_x244;
        const double var_x246 = 2.5 * var_x244;
        const double var_x247 = 20.0 * var_x244;
        const double var_x248 = 0.01 * NV_Ith_S(mParameters, 13);
        const double var_x249 = 1.0 - var_x248;
        const double var_x250 = var_x249 / (var_x247 + 2000.0 * var_x242);
        const double var_x251 = var_x241 / pow((0.0031250000000000002 + var_x241), 2);
        const double var_x252 = 1 / (1.0 - exp(1.0000000000287557e-7));
        const double var_x253 = (-0.059999999999444886 * var_x212 - 0.059999999999444886 * var_x213) * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x254 = 4.0 + var_chaste_interface__membrane__V;
        const double var_x255 = fabs(var_x254);
        const double var_x256 = var_x255 < 2.9999999999648364e-7;
        const double var_x257 = 1.0 - var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x258 = exp(-1.3333333333333333 - 0.33333333333333331 * var_chaste_interface__membrane__V);
        const double var_x259 = 1.0 - var_x258;
        const double var_x260 = 0.29999999999999999 / var_x259;
        const double var_x261 = var_x257 * var_x260 - 0.10000000000000001 * var_x254 * var_x257 * var_x258 / pow(var_x259, 2);
        const double var_x262 = var_x255 < 7.5000000000075007e-7;
        const double var_x263 = exp(0.53333333333333333 + 0.13333333333333333 * var_chaste_interface__membrane__V);
        const double var_x264 = -1.0 + var_x263;
        const double var_x265 = 0.12 / var_x264;
        const double var_x266 = 8.9999999999257336e-8 * var_x213 - 6666.6666666599995 * (4.0000007499999999 + var_chaste_interface__membrane__V) * (8.9999999999257341e-6 * var_x212 + 8.9999999999257341e-6 * var_x213);
        const double var_x267 = -var_x254 * var_x260;
        const double var_x268 = 1 / (-1.0 + exp(9.9999999997829103e-8));
        const double var_x269 = 1 / (-1.0 + exp(-9.9999999997829103e-8));
        const double var_x270 = 0.18181818181818182 * var_chaste_interface__membrane__V;
        const double var_x271 = exp(-6.1818181818181817 - var_x270);
        const double var_x272 = 1.0 + var_x271;
        const double var_x273 = -0.0043636363636363638 * var_x271 * var_chaste_interface__L_type_Ca_channel_f_gate__f / pow(var_x272, 2);
        const double var_x274 = 24.0 + var_chaste_interface__membrane__V;
        const double var_x275 = fabs(var_x274) < 5.5000000001581562e-7;
        const double var_x276 = 1.0 - var_chaste_interface__L_type_Ca_channel_f_gate__f;
        const double var_x277 = exp(4.3636363636363633 + var_x270);
        const double var_x278 = -1.0 + var_x277;
        const double var_x279 = 0.012500000000000001 / var_x278;
        const double var_x280 = -0.024 / var_x272;
        const double var_x281 = 0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_ds;
        const double var_x282 = _lt_0_row[16];
        const double var_x283 = exp(-1.4285714285714286 - 0.14285714285714285 * var_chaste_interface__membrane__V);
        const double var_x284 = 1.0 + var_x283;
        const double var_x285 = exp(2.0 - 0.10000000000000001 * var_chaste_interface__membrane__V);
        const double var_x286 = 1.0 - var_chaste_interface__calcium_release__ActFrac - var_chaste_interface__calcium_release__ProdFrac;
        const double var_x287 = NV_Ith_S(mParameters, 2) + var_chaste_interface__intracellular_calcium_concentration__Ca_i;
        const double var_x288 = 1 / var_x287;
        const double var_x289 = var_chaste_interface__intracellular_calcium_concentration__Ca_i / pow(var_x287, 2);
        const double var_x290 = NV_Ith_S(mParameters, 3) + var_chaste_interface__intracellular_calcium_concentration__Ca_ds;
        const double var_x291 = 1 / var_x290;
        const double var_x292 = 2 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds;
        const double var_x293 = ((var_chaste_interface__membrane__V < -50.0) ? (5.0) : (1.0));
        const double var_x294 = var_x288 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
        const double var_x295 = 1.0 - var_x294;
        const double var_x296 = var_x291 * var_x295;
        const double var_x297 = var_x294 + var_x296 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds;
        const double var_x298 = 0.5 * var_x293 * var_x297;
        const double var_x299 = var_x298 * (-2 * var_x289 + 2 * var_x288 + var_x291 * var_x292 * (var_x289 - var_x288));
        const double var_x300 = var_x299 * var_chaste_interface__calcium_release__ActFrac;
        const double var_x301 = 0.5 * pow(var_x297, 2);
        const double var_x302 = -var_x293 * var_x301;
        const double var_x303 = var_x298 * (2 * var_x296 - var_x292 * var_x295 / pow(var_x290, 2));
        const double var_x304 = var_x303 * var_chaste_interface__calcium_release__ActFrac;
        const double var_x305 = 0.00063182746016849224 * NV_Ith_S(mParameters, 6);
        const double var_x306 = 0.0013268376663538336 * var_x162;
        const double var_x307 = 0.11609829580596043 + 0.65789034290044246 * var_chaste_interface__transient_outward_current_s_gate__s;
        const double var_x308 = 0.001 * var_x3;
        const double var_x309 = 0.001 * NV_Ith_S(mParameters, 6);
        const double var_x310 = 0.00077398863870640285 * NV_Ith_S(mParameters, 6);
        const double var_x311 = 0.001083584094188964 * var_x162;
        const double var_x312 = 5.5284902764743067e-6 * var_x32;
        const double var_x313 = 0.020676147247726494 * var_x12;
        const double var_x314 = 0.026713760659695648 * var_x3 * var_x307;
        const double var_x315 = 0.0012925610266396929 * var_x41;
        const double var_x316 = 0.00088455844423588909 * var_x162;
        const double var_x317 = 0.016878487549164489 * var_x12;
        const double var_x318 = 4.5130532869178019e-6 * var_x32;
        const double var_x319 = 0.016878487549164489 * var_x4;
        const double var_x320 = 0.001055151858481382 * var_x41;
        const double var_x321 = 0.002 * NV_Ith_S(mParameters, 1);
        const double var_x322 = -var_x209;
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x99 * (0.0043499999999999997 + var_x1 + var_x13 + var_x4 + var_x68 + var_x78 + var_x97 + 0.00026738493444818193 * var_x33 + 0.999 * var_x39 - 0.062514597673984929 * var_x42 + var_x28 * (var_x21 + 0.018716945411372737 * var_x17)));
        IJth(rJacobian, 1, 0) = -7.8978432521061529e-8 + 0.00063119563270832375 * var_x39;
        IJth(rJacobian, 2, 0) = ((var_x217) ? (var_x214 + (0.001 - 0.001 * var_chaste_interface__time_dependent_potassium_current_x_gate__x) * (0.74999999997918332 * var_x210 + 0.75000000002081668 * var_x211)) : ((var_x223) ? (var_x214 + var_x222) : (var_x222 - var_x226 * var_chaste_interface__time_dependent_potassium_current_x_gate__x + 3.5599999999999998e-5 * var_x215 * var_x224 * var_chaste_interface__time_dependent_potassium_current_x_gate__x / pow(var_x225, 2))));
        IJth(rJacobian, 3, 0) = ((var_x234) ? (var_x232 + (0.001 - 0.001 * var_chaste_interface__fast_sodium_current_m_gate__m) * (100.0 * var_x229 + 100.0 * var_x230)) : (var_x232 + var_x235 * var_x239 - 0.02 * var_x233 * var_x235 * var_x237 / pow(var_x238, 2)));
        IJth(rJacobian, 4, 0) = (var_x243 + var_x245) * (-var_x246 * var_x250 + 5.0000000000000004e-6 * var_x244 * var_x249 * (var_x246 - 0.625 * var_x251) / pow((var_x242 + 0.01 * var_x244), 2)) + (0.00062500000000000001 * var_x251 - 0.0025000000000000001 * var_x244) * (var_x248 - var_chaste_interface__fast_sodium_current_h_gate__h + var_x247 * var_x250);
        IJth(rJacobian, 5, 0) = ((var_x256) ? (var_x253 + (0.01 - 0.01 * var_chaste_interface__L_type_Ca_channel_d_gate__d) * (15.000000000607153 * var_x211 + 15.000000000607153 * var_x252)) : ((var_x262) ? (var_x253 + var_x261) : (var_x261 - var_x265 * var_chaste_interface__L_type_Ca_channel_d_gate__d + 0.016 * var_x254 * var_x263 * var_chaste_interface__L_type_Ca_channel_d_gate__d / pow(var_x264, 2))));
        IJth(rJacobian, 6, 0) = ((var_x275) ? (var_x273 + (0.002 - 0.002 * var_chaste_interface__L_type_Ca_channel_f_gate__f) * (3.1249999998422977 * var_x268 + 3.1249999998422977 * var_x269)) : (var_x273 + var_x276 * var_x279 - 0.0022727272727272726 * var_x274 * var_x276 * var_x277 / pow(var_x278, 2)));
        IJth(rJacobian, 9, 0) = -0.067226890756302518 * var_x282 * (8.5800000000000009e-6 - 8.5800000000000009e-6 * var_chaste_interface__transient_outward_current_s_gate__s) - 0.0012257142857142857 * var_x283 * var_chaste_interface__transient_outward_current_s_gate__s / pow(var_x284, 2);
        IJth(rJacobian, 10, 0) = 0.033300000000000003 * var_x285 / pow((1.0 + var_x285), 2);
        IJth(rJacobian, 13, 0) = (-6.3182746016849228e-8 - 0.0018935868981249711 * var_x39 - 0.00063182746016849224 * var_x1 - 0.00063182746016849224 * var_x78) * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 14, 0) = (3.0959545548256117e-6 + 0.00077398863870640285 * var_x13 + 0.00077398863870640285 * var_x68 + 2.069529014241491e-7 * var_x33 - 4.8385588352966063e-5 * var_x42 + var_x307 * var_x308) * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 15, 0) = (-2.5273098406739689e-6 + 3.9498439471809035e-5 * var_x42 - 0.00063182746016849224 * var_x13 - 0.00063182746016849224 * var_x4 - 0.00063182746016849224 * var_x68 - 1.6894114401971358e-7 * var_x33) * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 16, 0) = -0.003159137300842461 * var_x97;
        IJth(rJacobian, 0, 1) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x99 * (var_x111 + 0.0033392200824619565 * var_x100 - 0.0049950000000000003 * var_x105 - 0.0068931000000000001 * var_x102 - 0.999 * var_x106));
        IJth(rJacobian, 1, 1) = -7.0 + var_x195 + var_x196 - 0.00063119563270832375 * var_x106 - 1.0549054718227806e-6 * var_x100 - 4.3552498656874335e-6 * var_x102 - 3.1559781635416187e-6 * var_x105 + (0.00040000000000000002 * var_x200 - 0.00040000000000000002 * var_x198 - 7.1999999999999991e-9 * var_x201) * NV_Ith_S(mParameters, 4);
        IJth(rJacobian, 7, 1) = -0.001 / (100000.0 + var_chaste_interface__intracellular_calcium_concentration__Ca_i) + 1.0e-13 * var_chaste_interface__intracellular_calcium_concentration__Ca_i / pow((1 + 1.0000000000000001e-5 * var_chaste_interface__intracellular_calcium_concentration__Ca_i), 2);
        IJth(rJacobian, 11, 1) = -var_x300 + var_x286 * var_x299;
        IJth(rJacobian, 12, 1) = var_x300;
        IJth(rJacobian, 13, 1) = (9.4679344906248553e-6 * var_x105 + 0.0018935868981249711 * var_x106 + 1.3065749597062301e-5 * var_x102) * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 16, 1) = -0.003159137300842461 * var_x111;
        IJth(rJacobian, 17, 1) = (3.5279999999999993e-7 * var_x201 + 0.019599999999999999 * var_x198 - 0.019599999999999999 * var_x200) * NV_Ith_S(mParameters, 4);
        IJth(rJacobian, 19, 1) = 2.0 - var_x195;
        IJth(rJacobian, 20, 1) = 5.0 - var_x196;
        IJth(rJacobian, 0, 2) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x112 * var_x99);
        IJth(rJacobian, 2, 2) = ((var_x217) ? (var_x227 - 7.5000000002156676e-10 * var_x211 + 999.9999999989999 * (-18.000000499999999 + var_chaste_interface__membrane__V) * (-7.5000000002156675e-7 * var_x211 - 7.4999999997993338e-7 * var_x210)) : ((var_x223) ? (var_x227 + var_x228) : (var_x228 - var_x215 * var_x226)));
        IJth(rJacobian, 14, 2) = var_x309 * (0.0055284902764743066 * var_chaste_interface__intracellular_potassium_concentration__K_i - 0.0055284902764743066 * var_x31) * NV_Ith_S(mParameters, 11);
        IJth(rJacobian, 15, 2) = -var_x112 * var_x305;
        IJth(rJacobian, 0, 3) = mSetVoltageDerivativeToZero ? 0.0 : (-0.0030000000000000001 * var_x116 * var_x98);
        IJth(rJacobian, 3, 3) = ((var_x234) ? (var_x240 - 2.0000000000575113e-7 * var_x230 + 499.9999999856222 * (40.999999000000003 + var_chaste_interface__membrane__V) * (-0.00020000000000575113 * var_x229 - 0.00020000000000575113 * var_x230)) : (var_x240 - var_x233 * var_x239));
        IJth(rJacobian, 13, 3) = -0.0018954823805054767 * var_x116 * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 0, 4) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x117 * var_x99);
        IJth(rJacobian, 4, 4) = -var_x243 - var_x245;
        IJth(rJacobian, 13, 4) = -var_x117 * var_x305;
        IJth(rJacobian, 0, 5) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x99 * (var_x123 + var_x126 + var_x129));
        IJth(rJacobian, 5, 5) = ((var_x256) ? (var_x266 - 9.0000000002588015e-8 * var_x211 + 16666.66666686202 * (3.9999997 + var_chaste_interface__membrane__V) * (-9.000000000258801e-6 * var_x211 - 9.000000000258801e-6 * var_x252)) : ((var_x262) ? (var_x266 + var_x267) : (var_x267 - var_x254 * var_x265)));
        IJth(rJacobian, 13, 5) = -var_x123 * var_x305;
        IJth(rJacobian, 14, 5) = var_x126 * var_x310;
        IJth(rJacobian, 15, 5) = -var_x126 * var_x305;
        IJth(rJacobian, 16, 5) = -0.003159137300842461 * var_x129;
        IJth(rJacobian, 0, 6) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x99 * (var_x135 + var_x138 + var_x141));
        IJth(rJacobian, 6, 6) = ((var_x275) ? (var_x280 + 6.8749999998507505e-9 * var_x269 - 1818.1818181295353 * (24.000000549999999 + var_chaste_interface__membrane__V) * (3.4374999999253752e-6 * var_x268 + 3.4374999999253752e-6 * var_x269)) : (var_x280 - var_x274 * var_x279));
        IJth(rJacobian, 13, 6) = -var_x135 * var_x305;
        IJth(rJacobian, 14, 6) = var_x138 * var_x310;
        IJth(rJacobian, 15, 6) = -var_x138 * var_x305;
        IJth(rJacobian, 16, 6) = -0.003159137300842461 * var_x141;
        IJth(rJacobian, 7, 7) = -0.001;
        IJth(rJacobian, 0, 8) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x99 * (var_x148 + var_x151 + var_x154));
        IJth(rJacobian, 8, 8) = -0.02;
        IJth(rJacobian, 13, 8) = -var_x148 * var_x305;
        IJth(rJacobian, 14, 8) = var_x151 * var_x310;
        IJth(rJacobian, 15, 8) = -var_x151 * var_x305;
        IJth(rJacobian, 16, 8) = -0.003159137300842461 * var_x154;
        IJth(rJacobian, 0, 9) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x155 * var_x99);
        IJth(rJacobian, 9, 9) = -8.5800000000000009e-6 * var_x282 - 0.0085800000000000008 / var_x284;
        IJth(rJacobian, 14, 9) = var_x308 * (0.65789034290044246 * var_chaste_interface__membrane__V - 17.574725160567521 * var_x7) * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 15, 9) = -var_x155 * var_x305;
        IJth(rJacobian, 0, 10) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x157 * var_x99);
        IJth(rJacobian, 10, 10) = -0.33300000000000002;
        IJth(rJacobian, 14, 10) = var_x156 * var_x307 * var_x309;
        IJth(rJacobian, 15, 10) = -var_x157 * var_x305;
        IJth(rJacobian, 1, 11) = (var_x202 * var_x205 - var_x202 * var_x207) * var_chaste_interface__intracellular_calcium_concentration__Ca_rel;
        IJth(rJacobian, 11, 11) = var_x302 + var_x293 * (-0.059999999999999998 - var_x301);
        IJth(rJacobian, 12, 11) = var_x293 * (0.059999999999999998 + var_x301);
        IJth(rJacobian, 18, 11) = (var_x207 * var_x321 - var_x205 * var_x321) * var_chaste_interface__intracellular_calcium_concentration__Ca_rel;
        IJth(rJacobian, 11, 12) = var_x302;
        IJth(rJacobian, 12, 12) = -0.001 * var_x293;
        IJth(rJacobian, 0, 13) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x99 * (var_x179 + 26.713760659695652 * var_x164 + 0.0026713760659695649 * var_x158 + 2.9969999999999999 * var_x169 - 0.00043749999999999995 * var_x166 - 0.014985 * var_x173 + var_x163 * var_chaste_interface__extracellular_potassium_concentration__K_o + 0.0030000000000000001 * var_x168 * var_x27 - 1.5e-5 * var_x171 * var_x172));
        IJth(rJacobian, 1, 13) = 0.0018935868981249711 * var_x169 - 9.4679344906248553e-6 * var_x173;
        IJth(rJacobian, 13, 13) = (8.2927354147114598e-7 * var_x166 + 2.8403803471874569e-5 * var_x173 - 0.016878487549164489 * var_x164 - 0.00063182746016849224 * var_x179 - 0.0056807606943749134 * var_x169 - 1.6878487549164488e-6 * var_x158 - var_x306 * var_chaste_interface__extracellular_potassium_concentration__K_o) * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 14, 13) = (6.7724005886810246e-7 * var_x166 - var_x311 * var_chaste_interface__extracellular_potassium_concentration__K_o) * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 15, 13) = (-5.5284902764743069e-7 * var_x166 + var_x316 * var_chaste_interface__extracellular_potassium_concentration__K_o) * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 0, 14) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x99 * (var_x183 + var_x187 + var_x192 - var_x181 - 0.69999999999999996 * var_x184 - 0.10685504263878261 * var_x180 - 0.01 * var_x188 - 3.2056512791634777 * var_x186 + var_x163 * var_chaste_interface__intracellular_sodium_concentration__Na_i - var_x180 * var_x185 - var_x182 * var_x30));
        IJth(rJacobian, 13, 14) = (0.0020254185058997385 * var_x186 + 0.0013268376663538336 * var_x184 - var_x306 * var_chaste_interface__intracellular_sodium_concentration__Na_i) * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 14, 14) = (-0.00069999999999999999 + var_x315 - var_x313 + 0.00077398863870640285 * var_x183 + 0.00077398863870640285 * var_x192 + 0.001083584094188964 * var_x184 - 8.2704588990905987e-5 * var_x180 - 7.7398863870640281e-6 * var_x188 - var_x180 * var_x314 - var_x30 * var_x312 - var_x311 * var_chaste_interface__intracellular_sodium_concentration__Na_i) * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 15, 14) = (var_x317 - var_x320 + 6.7513950196657958e-5 * var_x180 + 6.3182746016849225e-6 * var_x188 - 0.00088455844423588909 * var_x184 - 0.00063182746016849224 * var_x183 - 0.00063182746016849224 * var_x192 + var_x180 * var_x319 + var_x30 * var_x318 + var_x316 * var_chaste_interface__intracellular_sodium_concentration__Na_i) * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 0, 15) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x99 * (var_x182 + var_x194 + 0.10685504263878261 * var_x5 + 3.2056512791634777 * var_x164 + var_x181 * var_x6 + var_x185 * var_x5 - var_x187 * var_x6));
        IJth(rJacobian, 13, 15) = -0.0020254185058997385 * var_x164 * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 14, 15) = (var_x312 + 8.2704588990905987e-5 * var_x5 + 0.00077398863870640285 * var_x194 + var_x313 * var_x6 + var_x314 * var_x5 - var_x315 * var_x6) * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 15, 15) = (-var_x318 - 6.7513950196657958e-5 * var_x5 - 0.00063182746016849224 * var_x194 + var_x320 * var_x6 - var_x317 * var_x6 - var_x319 * var_x5) * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 0, 16) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x99 * (-var_x16 * var_x28 - 5.0000000000000004e-6 * var_x103 * var_x171 - 6.9e-6 * var_x170 * var_x26 / pow((0.0068999999999999999 + var_chaste_interface__intracellular_calcium_concentration__Ca_ds), 2)));
        IJth(rJacobian, 1, 16) = 0.001;
        IJth(rJacobian, 8, 16) = -0.02 / var_x281 + 0.02 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds / pow(var_x281, 2);
        IJth(rJacobian, 11, 16) = -var_x304 + var_x286 * var_x303;
        IJth(rJacobian, 12, 16) = var_x304;
        IJth(rJacobian, 16, 16) = -0.01;
        IJth(rJacobian, 1, 17) = (9.5999999999999999e-8 * var_x200 + 7.1999999999999991e-9 * var_x198 - 1.7279999999999999e-12 * var_x201) * NV_Ith_S(mParameters, 4);
        IJth(rJacobian, 17, 17) = -0.050000000000000003 + (8.4671999999999982e-11 * var_x201 - 4.7039999999999993e-6 * var_x200 - 3.5279999999999993e-7 * var_x198) * NV_Ith_S(mParameters, 4);
        IJth(rJacobian, 18, 17) = 0.0050000000000000001;
        IJth(rJacobian, 1, 18) = 0.00020408163265306126 * var_x208 + 0.00020408163265306126 * NV_Ith_S(mParameters, 0);
        IJth(rJacobian, 17, 18) = 0.050000000000000003;
        IJth(rJacobian, 18, 18) = -0.0050000000000000001 - 0.001 * var_x208 - 0.001 * NV_Ith_S(mParameters, 0);
        IJth(rJacobian, 1, 19) = 0.050000000000000003 + var_x209;
        IJth(rJacobian, 19, 19) = -0.050000000000000003 + var_x322;
        IJth(rJacobian, 1, 20) = 0.20000000000000001 + var_x209;
        IJth(rJacobian, 20, 20) = -0.20000000000000001 + var_x322;
    }

    N_Vector Cellespinosa_model_1998_normalFromCellMLCvodeOpt::ComputeDerivedQuantities(double var_chaste_interface__environment__time_converted, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -86.27784
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 7.07933e-05
        double var_chaste_interface__time_dependent_potassium_current_x_gate__x = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 2.3455e-06
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.003956
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.9759885
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 3.06884e-12
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.9999977
        double var_chaste_interface__L_type_Ca_channel_f2_gate__f2 = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.994096
        double var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.4387865
        double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.954689
        double var_chaste_interface__transient_outward_current_r_gate__r = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 2.4223e-05
        double var_chaste_interface__calcium_release__ActFrac = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.0113161
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = NV_Ith_S(rY, 13);
        // Units: millimolar; Initial value: 6.835
        double var_chaste_interface__extracellular_potassium_concentration__K_o = NV_Ith_S(rY, 14);
        // Units: millimolar; Initial value: 5.3201028
        double var_chaste_interface__intracellular_potassium_concentration__K_i = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 140.1333
        double var_chaste_interface__intracellular_calcium_concentration__Ca_ds = NV_Ith_S(rY, 16);
        // Units: millimolar; Initial value: 0.0008364
        double var_chaste_interface__intracellular_calcium_concentration__Ca_rel = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 0.43984
        
        // Lookup table indexing
        const bool _oob_0 = Cellespinosa_model_1998_normalFromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellespinosa_model_1998_normalFromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_L_type_Ca_channel__FrICa = 1.0; // dimensionless
        const double var_L_type_Ca_channel__P_CaK = 0.0030000000000000001; // dimensionless
        const double var_L_type_Ca_channel__P_CaNa = 0.01; // dimensionless
        const double var_calcium_release__i_rel = (pow(var_chaste_interface__calcium_release__ActFrac, 2) * NV_Ith_S(mParameters, 1) / pow((0.25 + var_chaste_interface__calcium_release__ActFrac), 2) + NV_Ith_S(mParameters, 0)) * var_chaste_interface__intracellular_calcium_concentration__Ca_rel; // millimolar_per_second
        const double var_membrane__F = 96485.341499999995; // coulomb_per_mole
        const double var_membrane__R = 8314.4719999999998; // millijoule_per_mole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_L_type_Ca_channel__i_Ca_L_Ca_cyt = 4.0 * (1.0 - var_L_type_Ca_channel__FrICa) * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(100.0 * var_membrane__F / (var_membrane__R * var_membrane__T)) - NV_Ith_S(mParameters, 7) * exp(2.0 * (50.0 - var_chaste_interface__membrane__V) * var_membrane__F / (var_membrane__R * var_membrane__T))) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2_gate__f2 * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_membrane__F / ((1.0 - exp(2.0 * (50.0 - var_chaste_interface__membrane__V) * var_membrane__F / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Ca_ds = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 1.3356880329551402e-6) ? (-374338.90823576227 * (-50.000001335688033 + var_chaste_interface__membrane__V) * (-1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - NV_Ith_S(mParameters, 7) * exp(9.9999999997780743e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999997780743e-8)) - 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - NV_Ith_S(mParameters, 7) * exp(-9.9999999997780743e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) + 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - NV_Ith_S(mParameters, 7) * exp(-9.9999999997780743e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) : (0.14973556329098189 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - NV_Ith_S(mParameters, 7) * _lt_0_row[0]) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[1]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K_cyt = (1.0 - var_L_type_Ca_channel__FrICa) * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(50.0 * var_membrane__F / (var_membrane__R * var_membrane__T)) - var_chaste_interface__extracellular_potassium_concentration__K_o * exp((50.0 - var_chaste_interface__membrane__V) * var_membrane__F / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_CaK * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2_gate__f2 * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_membrane__F / ((1.0 - exp((50.0 - var_chaste_interface__membrane__V) * var_membrane__F / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K_ds = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-2.9999999999957622e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - var_chaste_interface__extracellular_potassium_concentration__K_o * exp(9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 2.9999999999957622e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - var_chaste_interface__extracellular_potassium_concentration__K_o * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 2.9999999999957622e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - var_chaste_interface__extracellular_potassium_concentration__K_o * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (0.00011230167246823642 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - var_chaste_interface__extracellular_potassium_concentration__K_o * _lt_0_row[2]) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na_cyt = (1.0 - var_L_type_Ca_channel__FrICa) * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(50.0 * var_membrane__F / (var_membrane__R * var_membrane__T)) - NV_Ith_S(mParameters, 8) * exp((50.0 - var_chaste_interface__membrane__V) * var_membrane__F / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_CaNa * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2_gate__f2 * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_membrane__F / ((1.0 - exp((50.0 - var_chaste_interface__membrane__V) * var_membrane__F / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na_ds = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 8) * exp(9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 8) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 8) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (0.00037433890822745472 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 8) * _lt_0_row[2]) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_Ca_L_Ca_cyt + var_L_type_Ca_channel__i_Ca_L_Ca_ds + var_L_type_Ca_channel__i_Ca_L_K_cyt + var_L_type_Ca_channel__i_Ca_L_K_ds + var_L_type_Ca_channel__i_Ca_L_Na_cyt + var_L_type_Ca_channel__i_Ca_L_Na_ds; // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L / NV_Ith_S(mParameters, 10); // uA_per_cm2
        const double var_L_type_Ca_channel_f_gate__alpha_f = _lt_0_row[9]; // per_second
        const double var_L_type_Ca_channel_f_gate__beta_f = 12.0 / (_lt_0_row[10]); // per_second
        const double var_L_type_Ca_channel_f_gate__tau_f = 1 / (var_L_type_Ca_channel_f_gate__alpha_f + var_L_type_Ca_channel_f_gate__beta_f); // second
        const double var_fast_sodium_current_h_gate__alpha_h = 20.0 * exp(-9.375 + 0.125 * NV_Ith_S(mParameters, 14) - 0.125 * var_chaste_interface__membrane__V); // per_second
        const double var_fast_sodium_current_h_gate__beta_h = 2000.0 / (1.0 + 320.0 * exp(-7.5 + 0.10000000000000001 * NV_Ith_S(mParameters, 14) - 0.10000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_fast_sodium_current_h_gate__tau_h = 1 / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h); // second
        const double var_membrane__i_Stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_reversal_potentials__E_K = var_membrane__R * var_membrane__T * log(var_chaste_interface__extracellular_potassium_concentration__K_o / var_chaste_interface__intracellular_potassium_concentration__K_i) / var_membrane__F; // millivolt
        const double var_reversal_potentials__E_mh = var_membrane__R * var_membrane__T * log((NV_Ith_S(mParameters, 8) + 0.12 * var_chaste_interface__extracellular_potassium_concentration__K_o) / (var_chaste_interface__intracellular_sodium_concentration__Na_i + 0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i)) / var_membrane__F; // millivolt
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_reversal_potentials__E_mh + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 12) * var_chaste_interface__fast_sodium_current_h_gate__h; // nanoA
        const double var_fast_sodium_current__i_Na_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na / NV_Ith_S(mParameters, 10); // uA_per_cm2
        const double var_sodium_calcium_exchanger__FRiNaCa = 0.001; // dimensionless
        const double var_sodium_calcium_exchanger__d_NaCa = 0.0050000000000000001; // dimensionless
        const double var_sodium_calcium_exchanger__gamma = 0.5; // dimensionless
        const double var_sodium_calcium_exchanger__n_NaCa = 3.0; // dimensionless
        const double var_sodium_calcium_exchanger__i_NaCa_cyt = (1.0 - var_sodium_calcium_exchanger__FRiNaCa) * (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, var_sodium_calcium_exchanger__n_NaCa) * NV_Ith_S(mParameters, 7) * exp((-2.0 + var_sodium_calcium_exchanger__n_NaCa) * var_membrane__F * var_chaste_interface__membrane__V * var_sodium_calcium_exchanger__gamma / (var_membrane__R * var_membrane__T)) - pow(NV_Ith_S(mParameters, 8), var_sodium_calcium_exchanger__n_NaCa) * var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp((-1.0 + var_sodium_calcium_exchanger__gamma) * (-2.0 + var_sodium_calcium_exchanger__n_NaCa) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * NV_Ith_S(mParameters, 16) / ((1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i) * (1.0 + (pow(NV_Ith_S(mParameters, 8), var_sodium_calcium_exchanger__n_NaCa) * var_chaste_interface__intracellular_calcium_concentration__Ca_i + pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, var_sodium_calcium_exchanger__n_NaCa) * NV_Ith_S(mParameters, 7)) * var_sodium_calcium_exchanger__d_NaCa)); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa_ds = (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, var_sodium_calcium_exchanger__n_NaCa) * NV_Ith_S(mParameters, 7) * exp((-2.0 + var_sodium_calcium_exchanger__n_NaCa) * var_membrane__F * var_chaste_interface__membrane__V * var_sodium_calcium_exchanger__gamma / (var_membrane__R * var_membrane__T)) - pow(NV_Ith_S(mParameters, 8), var_sodium_calcium_exchanger__n_NaCa) * var_chaste_interface__intracellular_calcium_concentration__Ca_ds * exp((-1.0 + var_sodium_calcium_exchanger__gamma) * (-2.0 + var_sodium_calcium_exchanger__n_NaCa) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_sodium_calcium_exchanger__FRiNaCa * NV_Ith_S(mParameters, 16) / ((1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds) * (1.0 + (pow(NV_Ith_S(mParameters, 8), var_sodium_calcium_exchanger__n_NaCa) * var_chaste_interface__intracellular_calcium_concentration__Ca_ds + pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, var_sodium_calcium_exchanger__n_NaCa) * NV_Ith_S(mParameters, 7)) * var_sodium_calcium_exchanger__d_NaCa)); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa = var_sodium_calcium_exchanger__i_NaCa_cyt + var_sodium_calcium_exchanger__i_NaCa_ds; // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_sodium_calcium_exchanger__i_NaCa / NV_Ith_S(mParameters, 10); // uA_per_cm2
        const double var_time_dependent_potassium_current__I_K = 0.0071428571428571426 * (-var_chaste_interface__extracellular_potassium_concentration__K_o * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + var_chaste_interface__intracellular_potassium_concentration__K_i) * NV_Ith_S(mParameters, 11); // nanoA
        const double var_time_dependent_potassium_current__i_K = var_time_dependent_potassium_current__I_K * var_chaste_interface__time_dependent_potassium_current_x_gate__x; // nanoA
        const double var_time_dependent_potassium_current__i_K_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_time_dependent_potassium_current__i_K / NV_Ith_S(mParameters, 10); // uA_per_cm2
        const double var_time_independent_potassium_current__K_mk1 = 10.0; // millimolar
        const double var_time_independent_potassium_current__i_K1 = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * var_chaste_interface__extracellular_potassium_concentration__K_o * NV_Ith_S(mParameters, 15) / ((1.0 + exp(1.6699999999999999 * (10.0 - var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * var_membrane__F / (var_membrane__R * var_membrane__T))) * (var_chaste_interface__extracellular_potassium_concentration__K_o + var_time_independent_potassium_current__K_mk1)); // nanoA
        const double var_time_independent_potassium_current__i_K1_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_time_independent_potassium_current__i_K1 / NV_Ith_S(mParameters, 10); // uA_per_cm2
        const double var_transient_outward_current__g_tos = 0.14999999999999999; // dimensionless
        const double var_transient_outward_current__i_to = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * ((1.0 - var_transient_outward_current__g_tos) * var_chaste_interface__transient_outward_current_s_gate__s + var_transient_outward_current__g_tos) * NV_Ith_S(mParameters, 17) * var_chaste_interface__transient_outward_current_r_gate__r; // nanoA
        const double var_transient_outward_current__i_to_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_transient_outward_current__i_to / NV_Ith_S(mParameters, 10); // uA_per_cm2

        N_Vector dqs = N_VNew_Serial(11);
        NV_Ith_S(dqs, 0) = var_calcium_release__i_rel;
        NV_Ith_S(dqs, 1) = var_L_type_Ca_channel__i_Ca_L_converted;
        NV_Ith_S(dqs, 2) = var_L_type_Ca_channel_f_gate__tau_f;
        NV_Ith_S(dqs, 3) = var_time_dependent_potassium_current__i_K_converted;
        NV_Ith_S(dqs, 4) = var_fast_sodium_current__i_Na_converted;
        NV_Ith_S(dqs, 5) = var_fast_sodium_current_h_gate__tau_h;
        NV_Ith_S(dqs, 6) = var_time_independent_potassium_current__i_K1_converted;
        NV_Ith_S(dqs, 7) = var_sodium_calcium_exchanger__i_NaCa_converted;
        NV_Ith_S(dqs, 8) = var_membrane__i_Stim_converted;
        NV_Ith_S(dqs, 9) = var_transient_outward_current__i_to_converted;
        NV_Ith_S(dqs, 10) = var_chaste_interface__environment__time_converted;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellespinosa_model_1998_normalFromCellMLCvodeOpt>::Initialise(void)
{
    this->mSystemName = "espinosa_model_1998";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // NV_Ith_S(rY, 0):
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-86.27784);

    // NV_Ith_S(rY, 1):
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.07933e-05);

    // NV_Ith_S(rY, 2):
    this->mVariableNames.push_back("time_dependent_potassium_current_x_gate__x");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.3455e-06);

    // NV_Ith_S(rY, 3):
    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.003956);

    // NV_Ith_S(rY, 4):
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9759885);

    // NV_Ith_S(rY, 5):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.06884e-12);

    // NV_Ith_S(rY, 6):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9999977);

    // NV_Ith_S(rY, 7):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_fCa_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.994096);

    // NV_Ith_S(rY, 8):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_fCa2_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.4387865);

    // NV_Ith_S(rY, 9):
    this->mVariableNames.push_back("transient_outward_current_s_gate__s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.954689);

    // NV_Ith_S(rY, 10):
    this->mVariableNames.push_back("transient_outward_current_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.4223e-05);

    // NV_Ith_S(rY, 11):
    this->mVariableNames.push_back("calcium_release__ActFrac");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0113161);

    // NV_Ith_S(rY, 12):
    this->mVariableNames.push_back("calcium_release__ProdFrac");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9402563);

    // NV_Ith_S(rY, 13):
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(6.835);

    // NV_Ith_S(rY, 14):
    this->mVariableNames.push_back("extracellular_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(5.3201028);

    // NV_Ith_S(rY, 15):
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(140.1333);

    // NV_Ith_S(rY, 16):
    this->mVariableNames.push_back("dyadic_space_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0008364);

    // NV_Ith_S(rY, 17):
    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_up");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.479749);

    // NV_Ith_S(rY, 18):
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.43984);

    // NV_Ith_S(rY, 19):
    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_Calmod");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0024448);

    // NV_Ith_S(rY, 20):
    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_Trop");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0017012);

    // mParameters[0]:
    this->mParameterNames.push_back("SR_leak_current_max");
    this->mParameterUnits.push_back("per_second");

    // mParameters[1]:
    this->mParameterNames.push_back("SR_release_current_max");
    this->mParameterUnits.push_back("per_second");

    // mParameters[2]:
    this->mParameterNames.push_back("SR_release_kmcacyt");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[3]:
    this->mParameterNames.push_back("SR_release_kmcads");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[4]:
    this->mParameterNames.push_back("SR_uptake_current_max");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[5]:
    this->mParameterNames.push_back("bath_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[6]:
    this->mParameterNames.push_back("concentration_clamp_onoff");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[7]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[8]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("nanoA_per_millimolar");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_capacitance");
    this->mParameterUnits.push_back("microF");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("nanoA");

    // mParameters[12]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("microS");

    // mParameters[13]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_reduced_inactivation");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[14]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_shift_inactivation");
    this->mParameterUnits.push_back("millivolt");

    // mParameters[15]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("microS");

    // mParameters[16]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("nanoA");

    // mParameters[17]:
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
    this->mParameterUnits.push_back("microS");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("SR_release_current");
    this->mDerivedQuantityUnits.push_back("millimolar_per_second");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current_f_gate_tau");
    this->mDerivedQuantityUnits.push_back("second");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_h_gate_tau");
    this->mDerivedQuantityUnits.push_back("second");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [10]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellespinosa_model_1998_normalFromCellMLCvodeOpt)

#endif // CHASTE_CVODE
