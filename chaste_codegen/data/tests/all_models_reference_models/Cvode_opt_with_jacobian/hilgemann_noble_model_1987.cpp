#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: hilgemann_noble_model_1987
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: AnalyticCvodeOpt)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "hilgemann_noble_model_1987.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class Cellhilgemann_noble_model_1987FromCellMLCvodeOpt_LookupTables : public AbstractLookupTableCollection
{
public:
    static Cellhilgemann_noble_model_1987FromCellMLCvodeOpt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new Cellhilgemann_noble_model_1987FromCellMLCvodeOpt_LookupTables);
        }
        return mpInstance.get();
    }

    void FreeMemory()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }

    // Row lookup methods
    // using linear-interpolation

    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<13; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }


    const double * IndexTable0(double var_chaste_interface__membrane__V)
    {
        const double _offset_0 = var_chaste_interface__membrane__V - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = Cellhilgemann_noble_model_1987FromCellMLCvodeOpt_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }


// LCOV_EXCL_START
    bool CheckIndex0(double& var_chaste_interface__membrane__V)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__membrane__V>mTableMaxs[0] || var_chaste_interface__membrane__V<mTableMins[0])
        {
// LCOV_EXCL_START
            _oob_0 = true;
// LCOV_EXCL_STOP
        }
        return _oob_0;
    }
// LCOV_EXCL_STOP

    ~Cellhilgemann_noble_model_1987FromCellMLCvodeOpt_LookupTables()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

    }

protected:
    Cellhilgemann_noble_model_1987FromCellMLCvodeOpt_LookupTables(const Cellhilgemann_noble_model_1987FromCellMLCvodeOpt_LookupTables&);
    Cellhilgemann_noble_model_1987FromCellMLCvodeOpt_LookupTables& operator= (const Cellhilgemann_noble_model_1987FromCellMLCvodeOpt_LookupTables&);
    Cellhilgemann_noble_model_1987FromCellMLCvodeOpt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);

        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 13;
        mTableMins[0] = -250.0;
        mTableMaxs[0] = 550.0;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;

        Cellhilgemann_noble_model_1987FromCellMLCvodeOpt_LookupTables::RegenerateTables();
    }

    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);


        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][13];

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(0.018716945411372737 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][0] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(-0.018716945411372737 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][1] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(1.8716945411372736 - 0.037433890822745473 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[2] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[2] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[2] >= 2){
                    EXCEPTION("Lookup table 2 at ["<<i<<"][2] has non-finite value: " << val);
                }
                _lookup_table_0[i][2] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return 1.0 - exp(1.8716945411372736 - 0.037433890822745473 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[3] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[3] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[3] >= 2){
                    EXCEPTION("Lookup table 3 at ["<<i<<"][3] has non-finite value: " << val);
                }
                _lookup_table_0[i][3] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(3.7433890822745473 - 0.074867781645490947 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[4] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[4] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[4] >= 2){
                    EXCEPTION("Lookup table 4 at ["<<i<<"][4] has non-finite value: " << val);
                }
                _lookup_table_0[i][4] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return 1.0 - exp(3.7433890822745473 - 0.074867781645490947 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[5] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[5] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[5] >= 2){
                    EXCEPTION("Lookup table 5 at ["<<i<<"][5] has non-finite value: " << val);
                }
                _lookup_table_0[i][5] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return 600.0 * exp(-3.2000000000000002 + 0.080000000000000002 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][6] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return ((fabs(41.0 + var_chaste_interface__membrane__V) < 1.0000000000287557e-6) ? (0.00020000000000575113 / (1.0 - exp(-1.0000000000287557e-7)) - 499999.99998562218 * (40.999999000000003 + var_chaste_interface__membrane__V) * (-0.00020000000000575113 / (1.0 - exp(1.0000000000287557e-7)) - 0.00020000000000575113 / (1.0 - exp(-1.0000000000287557e-7)))) : (200.0 * (41.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.1000000000000005 - 0.10000000000000001 * var_chaste_interface__membrane__V))));
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[7] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[7] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[7] >= 2){
                    EXCEPTION("Lookup table 7 at ["<<i<<"][7] has non-finite value: " << val);
                }
                _lookup_table_0[i][7] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(-3.6960000000000002 - 0.056000000000000001 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][8] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return ((fabs(19.0 + var_chaste_interface__membrane__V) < 4.0000000001150227e-7) ? (1.2000000000345068e-5 / (1.0 - exp(-1.0000000000287557e-7)) - 1249999.9999640554 * (18.999999599999999 + var_chaste_interface__membrane__V) * (-1.2000000000345068e-5 / (1.0 - exp(1.0000000000287557e-7)) - 1.2000000000345068e-5 / (1.0 - exp(-1.0000000000287557e-7)))) : (30.0 * (19.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.75 - 0.25 * var_chaste_interface__membrane__V))));
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[9] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[9] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[9] >= 2){
                    EXCEPTION("Lookup table 9 at ["<<i<<"][9] has non-finite value: " << val);
                }
                _lookup_table_0[i][9] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return ((fabs(19.0 + var_chaste_interface__membrane__V) < 9.999999999871223e-7) ? (-1.1999999999678934e-5 / (-1.0 + exp(-9.9999999997324457e-8)) + 500000.00000643887 * (19.000001000000001 + var_chaste_interface__membrane__V) * (1.1999999999678934e-5 / (-1.0 + exp(-9.9999999997324457e-8)) + 1.2000000000012001e-5 / (-1.0 + exp(1.0000000000010001e-7)))) : (12.0 * (19.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(1.8999999999999999 + 0.10000000000000001 * var_chaste_interface__membrane__V))));
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[10] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[10] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[10] >= 2){
                    EXCEPTION("Lookup table 10 at ["<<i<<"][10] has non-finite value: " << val);
                }
                _lookup_table_0[i][10] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return 1.0 + exp(-8.5 - 0.25 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][11] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return ((fabs(34.0 + var_chaste_interface__membrane__V) < 4.0000000001150227e-7) ? (-2.5000000000718892e-6 / (-1.0 + exp(-1.0000000000287557e-7)) + 1249999.9999640554 * (34.000000399999998 + var_chaste_interface__membrane__V) * (2.5000000000718892e-6 / (-1.0 + exp(1.0000000000287557e-7)) + 2.5000000000718892e-6 / (-1.0 + exp(-1.0000000000287557e-7)))) : (6.25 * (34.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(8.5 + 0.25 * var_chaste_interface__membrane__V))));
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[12] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[12] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[12] >= 2){
                    EXCEPTION("Lookup table 12 at ["<<i<<"][12] has non-finite value: " << val);
                }
                _lookup_table_0[i][12] = val;
            }

            mNeedsRegeneration[0] = false;
        }

        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }

private:
    /** The single instance of the class */
    static std::shared_ptr<Cellhilgemann_noble_model_1987FromCellMLCvodeOpt_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[13];

    // Lookup tables
    double (*_lookup_table_0)[13];
    int _lookup_table_0_num_misshit_piecewise[13] = {0};

};

std::shared_ptr<Cellhilgemann_noble_model_1987FromCellMLCvodeOpt_LookupTables> Cellhilgemann_noble_model_1987FromCellMLCvodeOpt_LookupTables::mpInstance;


    boost::shared_ptr<RegularStimulus> Cellhilgemann_noble_model_1987FromCellMLCvodeOpt::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__stim_amplitude_converted = -0.20000000000000001 * HeartConfig::Instance()->GetCapacitance() / NV_Ith_S(mParameters, 8); // uA_per_cm2
        const double var_chaste_interface__membrane__stim_duration_converted = 2.0; // millisecond
        const double var_chaste_interface__membrane__stim_period_converted = 1000.0; // millisecond
        const double var_chaste_interface__membrane__stim_start_converted = 100.0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__stim_amplitude_converted),
                var_chaste_interface__membrane__stim_duration_converted,
                var_chaste_interface__membrane__stim_period_converted,
                var_chaste_interface__membrane__stim_start_converted
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }

    double Cellhilgemann_noble_model_1987FromCellMLCvodeOpt::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Cellhilgemann_noble_model_1987FromCellMLCvodeOpt::Cellhilgemann_noble_model_1987FromCellMLCvodeOpt(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                15,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellhilgemann_noble_model_1987FromCellMLCvodeOpt>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
        
        NV_Ith_S(this->mParameters, 0) = 0; // (var_calcium_release__K_leak_rate) [per_second]
        NV_Ith_S(this->mParameters, 1) = 250.0; // (var_calcium_release__K_m_rel) [per_second]
        NV_Ith_S(this->mParameters, 2) = 0.00050000000000000001; // (var_calcium_release__K_m_Ca) [millimolar]
        NV_Ith_S(this->mParameters, 3) = 1.0; // (var_sarcoplasmic_reticulum_calcium_pump__uptake_factor) [dimensionless]
        NV_Ith_S(this->mParameters, 4) = 1.0; // (var_intracellular_sodium_concentration__conc_clamp) [dimensionless]
        NV_Ith_S(this->mParameters, 5) = 4.0; // (var_extracellular_potassium_concentration__K_c) [millimolar]
        NV_Ith_S(this->mParameters, 6) = 140.0; // (var_extracellular_sodium_concentration__Na_o) [millimolar]
        NV_Ith_S(this->mParameters, 7) = 5.0; // (var_second_inward_calcium_current__P_si) [nanoA_per_millimolar]
        NV_Ith_S(this->mParameters, 8) = 0.0060000000000000001; // (var_membrane__C_m) [microF]
        NV_Ith_S(this->mParameters, 9) = 50.0; // (var_fast_sodium_current__g_Na) [microS]
        NV_Ith_S(this->mParameters, 10) = 0; // (var_fast_sodium_current__perc_reduced_inact_for_IpNa) [dimensionless]
        NV_Ith_S(this->mParameters, 11) = 0; // (var_fast_sodium_current__shift_INa_inact) [millivolt]
        NV_Ith_S(this->mParameters, 12) = 1.7; // (var_time_independent_potassium_current__g_K1) [microS]
        NV_Ith_S(this->mParameters, 13) = 0.01; // (var_Na_Ca_exchanger__k_NaCa) [nanoA]
    }

    Cellhilgemann_noble_model_1987FromCellMLCvodeOpt::~Cellhilgemann_noble_model_1987FromCellMLCvodeOpt()
    {
    }

    AbstractLookupTableCollection* Cellhilgemann_noble_model_1987FromCellMLCvodeOpt::GetLookupTableCollection()
    {
        return Cellhilgemann_noble_model_1987FromCellMLCvodeOpt_LookupTables::Instance();
    }
    
    double Cellhilgemann_noble_model_1987FromCellMLCvodeOpt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -88.0
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 1e-05
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.076
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.015
        double var_chaste_interface__second_inward_calcium_current_d_gate__d = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.0011
        double var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.785
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = NV_Ith_S(rY, 8);
        // Units: millimolar; Initial value: 6.5
        double var_chaste_interface__extracellular_calcium_concentration__Ca_o = NV_Ith_S(rY, 9);
        // Units: millimolar; Initial value: 2.0
        double var_chaste_interface__intracellular_potassium_concentration__K_i = NV_Ith_S(rY, 10);
        // Units: millimolar; Initial value: 140.0
        
        // Lookup table indexing
        const bool _oob_0 = Cellhilgemann_noble_model_1987FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellhilgemann_noble_model_1987FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        const double var_Na_Ca_exchanger__i_NaCa_converted = 0.001 * (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * var_chaste_interface__extracellular_calcium_concentration__Ca_o * _lt_0_row[0] - pow(NV_Ith_S(mParameters, 6), 3.0) * var_chaste_interface__intracellular_calcium_concentration__Ca_i * _lt_0_row[1]) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 13) / ((1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i) * (1.0 + 0.0001 * pow(NV_Ith_S(mParameters, 6), 3.0) * var_chaste_interface__intracellular_calcium_concentration__Ca_i + 0.0001 * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * var_chaste_interface__extracellular_calcium_concentration__Ca_o) * NV_Ith_S(mParameters, 8)); // uA_per_cm2
        const double var_calcium_background_current__i_b_Ca = 0.0050000000000000001 * var_chaste_interface__membrane__V - 0.066784401649239128 * log(var_chaste_interface__extracellular_calcium_concentration__Ca_o / var_chaste_interface__intracellular_calcium_concentration__Ca_i); // nanoA
        const double var_fast_sodium_current__i_Na_converted = 0.001 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-26.713760659695652 * log((NV_Ith_S(mParameters, 6) + 0.12 * NV_Ith_S(mParameters, 5)) / (var_chaste_interface__intracellular_sodium_concentration__Na_i + 0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i)) + var_chaste_interface__membrane__V) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 9) * var_chaste_interface__fast_sodium_current_h_gate__h / NV_Ith_S(mParameters, 8); // uA_per_cm2
        const double var_second_inward_calcium_current__i_si_converted = 0.001 * (((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-9.9999999999858744e-10 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 6) * exp(9.9999999999858739e-8)) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (1.0 - exp(9.9999999999858739e-8)) - 9.9999999999858744e-10 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 6) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (1.0 - exp(-9.9999999999858739e-8))) + 9.9999999999858744e-10 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 6) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (1.0 - exp(-9.9999999999858739e-8))) : (0.00037433890822745472 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 6) * _lt_0_row[2]) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (_lt_0_row[3]))) + ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-1.999999999997175e-10 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 5) * exp(9.9999999999858739e-8)) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (1.0 - exp(9.9999999999858739e-8)) - 1.999999999997175e-10 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 5) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (1.0 - exp(-9.9999999999858739e-8))) + 1.999999999997175e-10 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 5) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (1.0 - exp(-9.9999999999858739e-8))) : (7.4867781645490941e-5 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 5) * _lt_0_row[2]) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (_lt_0_row[3]))) + ((fabs(-50.0 + var_chaste_interface__membrane__V) < 1.3356880329551402e-6) ? (-374338.90823576227 * (-50.000001335688033 + var_chaste_interface__membrane__V) * (-1.9999999999556149e-7 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - var_chaste_interface__extracellular_calcium_concentration__Ca_o * exp(9.9999999997780743e-8)) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (1.0 - exp(9.9999999997780743e-8)) - 1.9999999999556149e-7 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - var_chaste_interface__extracellular_calcium_concentration__Ca_o * exp(-9.9999999997780743e-8)) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (1.0 - exp(-9.9999999997780743e-8))) + 1.9999999999556149e-7 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - var_chaste_interface__extracellular_calcium_concentration__Ca_o * exp(-9.9999999997780743e-8)) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (1.0 - exp(-9.9999999997780743e-8))) : (0.14973556329098189 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - var_chaste_interface__extracellular_calcium_concentration__Ca_o * _lt_0_row[4]) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (_lt_0_row[5])))) * HeartConfig::Instance()->GetCapacitance() / NV_Ith_S(mParameters, 8); // uA_per_cm2
        const double var_sodium_background_current__i_b_Na = 0.012 * var_chaste_interface__membrane__V - 0.32056512791634778 * log(NV_Ith_S(mParameters, 6) / var_chaste_interface__intracellular_sodium_concentration__Na_i); // nanoA
        const double var_sodium_potassium_pump__i_NaK = 14.0 * NV_Ith_S(mParameters, 5) * var_chaste_interface__intracellular_sodium_concentration__Na_i / ((1.0 + NV_Ith_S(mParameters, 5)) * (40.0 + var_chaste_interface__intracellular_sodium_concentration__Na_i)); // nanoA
        const double var_time_independent_potassium_current__E_K = 26.713760659695652 * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__intracellular_potassium_concentration__K_i); // millivolt
        const double var_potassium_background_current__i_b_K = 0.17000000000000001 * var_chaste_interface__membrane__V - 0.17000000000000001 * var_time_independent_potassium_current__E_K; // nanoA
        const double var_time_independent_potassium_current__i_K1_converted = 0.001 * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 5) * NV_Ith_S(mParameters, 12) / ((1.0 + exp(-0.74867781645490938 + 0.074867781645490947 * var_chaste_interface__membrane__V - 0.074867781645490947 * var_time_independent_potassium_current__E_K)) * (10.0 + NV_Ith_S(mParameters, 5)) * NV_Ith_S(mParameters, 8)); // uA_per_cm2
        const double var_chaste_interface__i_ionic = ((var_Na_Ca_exchanger__i_NaCa_converted + var_fast_sodium_current__i_Na_converted + var_second_inward_calcium_current__i_si_converted + var_time_independent_potassium_current__i_K1_converted) * NV_Ith_S(mParameters, 8) + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_calcium_background_current__i_b_Ca + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_potassium_background_current__i_b_K + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_sodium_background_current__i_b_Na + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_sodium_potassium_pump__i_NaK) / NV_Ith_S(mParameters, 8); // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellhilgemann_noble_model_1987FromCellMLCvodeOpt::EvaluateYDerivatives(double var_chaste_interface__environment__time_converted, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -88.0
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 1e-05
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.076
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.015
        double var_chaste_interface__second_inward_calcium_current_d_gate__d = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.0011
        double var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.785
        double var_chaste_interface__calcium_release__ActFrac = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_release__ProdFrac = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = NV_Ith_S(rY, 8);
        // Units: millimolar; Initial value: 6.5
        double var_chaste_interface__extracellular_calcium_concentration__Ca_o = NV_Ith_S(rY, 9);
        // Units: millimolar; Initial value: 2.0
        double var_chaste_interface__intracellular_potassium_concentration__K_i = NV_Ith_S(rY, 10);
        // Units: millimolar; Initial value: 140.0
        double var_chaste_interface__intracellular_calcium_concentration__Ca_up = NV_Ith_S(rY, 11);
        // Units: millimolar; Initial value: 0.3
        double var_chaste_interface__intracellular_calcium_concentration__Ca_rel = NV_Ith_S(rY, 12);
        // Units: millimolar; Initial value: 0.3
        double var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod = NV_Ith_S(rY, 13);
        // Units: millimolar; Initial value: 0.0005
        double var_chaste_interface__intracellular_calcium_concentration__Ca_Trop = NV_Ith_S(rY, 14);
        // Units: millimolar; Initial value: 0.0015

        // Lookup table indexing
        const bool _oob_0 = Cellhilgemann_noble_model_1987FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellhilgemann_noble_model_1987FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        double d_dt_chaste_interface_var_membrane__V;
        const double var_calcium_release__RegBindSite = pow(var_chaste_interface__intracellular_calcium_concentration__Ca_i, 2) / pow((NV_Ith_S(mParameters, 2) + var_chaste_interface__intracellular_calcium_concentration__Ca_i), 2); // dimensionless
        const double var_calcium_release__InactRate = 60.0 + 500.0 * var_calcium_release__RegBindSite; // per_second
        const double d_dt_chaste_interface_var_calcium_release__ProdFrac = -0.00059999999999999995 * var_chaste_interface__calcium_release__ProdFrac + 0.001 * var_chaste_interface__calcium_release__ActFrac * var_calcium_release__InactRate; // 1 / millisecond
        const double var_calcium_release__i_rel = (pow(var_chaste_interface__calcium_release__ActFrac, 2) * NV_Ith_S(mParameters, 1) / pow((0.25 + var_chaste_interface__calcium_release__ActFrac), 2) + NV_Ith_S(mParameters, 0)) * var_chaste_interface__intracellular_calcium_concentration__Ca_rel; // millimolar_per_second
        const double var_calcium_translocation__i_trans = 50.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_up - 50.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_rel; // millimolar_per_second
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_rel = 9.9999999999999991e-5 * var_calcium_translocation__i_trans - 0.001 * var_calcium_release__i_rel; // millimolar / millisecond
        const double var_intracellular_calcium_concentration__Ca_Calmod_orig_deriv = -50.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod + 100000.0 * (0.02 - var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod) * var_chaste_interface__intracellular_calcium_concentration__Ca_i; // millimolar / second
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_Calmod = 0.001 * var_intracellular_calcium_concentration__Ca_Calmod_orig_deriv; // millimolar / millisecond
        const double var_intracellular_calcium_concentration__Ca_Trop_orig_deriv = -200.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_Trop + 100000.0 * (0.14999999999999999 - var_chaste_interface__intracellular_calcium_concentration__Ca_Trop) * var_chaste_interface__intracellular_calcium_concentration__Ca_i; // millimolar / second
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_Trop = 0.001 * var_intracellular_calcium_concentration__Ca_Trop_orig_deriv; // millimolar / millisecond
        const double var_Na_Ca_exchanger__i_NaCa = (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * var_chaste_interface__extracellular_calcium_concentration__Ca_o * _lt_0_row[0] - pow(NV_Ith_S(mParameters, 6), 3.0) * var_chaste_interface__intracellular_calcium_concentration__Ca_i * _lt_0_row[1]) * NV_Ith_S(mParameters, 13) / ((1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i) * (1.0 + 0.0001 * pow(NV_Ith_S(mParameters, 6), 3.0) * var_chaste_interface__intracellular_calcium_concentration__Ca_i + 0.0001 * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * var_chaste_interface__extracellular_calcium_concentration__Ca_o)); // nanoA
        const double var_calcium_background_current__i_b_Ca = 0.0050000000000000001 * var_chaste_interface__membrane__V - 0.066784401649239128 * log(var_chaste_interface__extracellular_calcium_concentration__Ca_o / var_chaste_interface__intracellular_calcium_concentration__Ca_i); // nanoA
        const double d_dt_chaste_interface_var_calcium_release__ActFrac = 0.001 * (_lt_0_row[6] + 500.0 * var_calcium_release__RegBindSite) * (1.0 - var_chaste_interface__calcium_release__ActFrac - var_chaste_interface__calcium_release__ProdFrac) - 0.001 * var_chaste_interface__calcium_release__ActFrac * var_calcium_release__InactRate; // 1 / millisecond
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-26.713760659695652 * log((NV_Ith_S(mParameters, 6) + 0.12 * NV_Ith_S(mParameters, 5)) / (var_chaste_interface__intracellular_sodium_concentration__Na_i + 0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i)) + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 9) * var_chaste_interface__fast_sodium_current_h_gate__h; // nanoA
        const double var_fast_sodium_current_h_gate__alpha_h = 20.0 * exp(-9.375 + 0.125 * NV_Ith_S(mParameters, 11) - 0.125 * var_chaste_interface__membrane__V); // per_second
        const double var_fast_sodium_current_h_gate__beta_h = 2000.0 / (1.0 + 320.0 * exp(-7.5 + 0.10000000000000001 * NV_Ith_S(mParameters, 11) - 0.10000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double d_dt_chaste_interface_var_fast_sodium_current_h_gate__h = 0.001 * (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h) * (-var_chaste_interface__fast_sodium_current_h_gate__h + 0.01 * NV_Ith_S(mParameters, 10) + (1.0 - 0.01 * NV_Ith_S(mParameters, 10)) * var_fast_sodium_current_h_gate__alpha_h / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h)); // 1 / millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_m_gate__m = 0.001 * (1.0 - var_chaste_interface__fast_sodium_current_m_gate__m) * _lt_0_row[7] - 8.0 * var_chaste_interface__fast_sodium_current_m_gate__m * _lt_0_row[8]; // 1 / millisecond
        const double var_sarcoplasmic_reticulum_calcium_pump__i_up = (3.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.00041999999999999996 + 0.00023999999999999998 * var_chaste_interface__intracellular_calcium_concentration__Ca_up + var_chaste_interface__intracellular_calcium_concentration__Ca_i) - 5.52e-5 * var_chaste_interface__intracellular_calcium_concentration__Ca_up / (0.00041999999999999996 + 0.00023999999999999998 * var_chaste_interface__intracellular_calcium_concentration__Ca_up + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * NV_Ith_S(mParameters, 3); // millimolar_per_second
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_up = 0.048999999999999995 * var_sarcoplasmic_reticulum_calcium_pump__i_up - 0.001 * var_calcium_translocation__i_trans; // millimolar / millisecond
        const double d_dt_chaste_interface_var_second_inward_calcium_current_d_gate__d = 0.001 * (1.0 - var_chaste_interface__second_inward_calcium_current_d_gate__d) * _lt_0_row[9] - 0.001 * _lt_0_row[10] * var_chaste_interface__second_inward_calcium_current_d_gate__d; // 1 / millisecond
        const double var_second_inward_calcium_current__i_siCa = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 1.3356880329551402e-6) ? (-374338.90823576227 * (-50.000001335688033 + var_chaste_interface__membrane__V) * (-1.9999999999556149e-7 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - var_chaste_interface__extracellular_calcium_concentration__Ca_o * exp(9.9999999997780743e-8)) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (1.0 - exp(9.9999999997780743e-8)) - 1.9999999999556149e-7 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - var_chaste_interface__extracellular_calcium_concentration__Ca_o * exp(-9.9999999997780743e-8)) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (1.0 - exp(-9.9999999997780743e-8))) + 1.9999999999556149e-7 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - var_chaste_interface__extracellular_calcium_concentration__Ca_o * exp(-9.9999999997780743e-8)) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (1.0 - exp(-9.9999999997780743e-8))) : (0.14973556329098189 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - var_chaste_interface__extracellular_calcium_concentration__Ca_o * _lt_0_row[4]) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (_lt_0_row[5]))); // nanoA
        const double d_dt_chaste_interface_var_extracellular_calcium_concentration__Ca_o = 0.001 * (0.001 - 0.00050000000000000001 * var_chaste_interface__extracellular_calcium_concentration__Ca_o - 0.0080543192715385042 * var_Na_Ca_exchanger__i_NaCa - 0.0080543192715385042 * var_calcium_background_current__i_b_Ca - 0.0080543192715385042 * var_second_inward_calcium_current__i_siCa) * NV_Ith_S(mParameters, 4); // millimolar / millisecond
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_i = 0.00020408163265306126 * var_calcium_release__i_rel + 1.3149909014756744e-5 * var_Na_Ca_exchanger__i_NaCa - 0.001 * var_intracellular_calcium_concentration__Ca_Calmod_orig_deriv - 0.001 * var_intracellular_calcium_concentration__Ca_Trop_orig_deriv - 0.001 * var_sarcoplasmic_reticulum_calcium_pump__i_up - 6.5749545073783721e-6 * var_calcium_background_current__i_b_Ca - 6.5749545073783721e-6 * var_second_inward_calcium_current__i_siCa; // millimolar / millisecond
        const double var_second_inward_calcium_current__i_siK = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-1.999999999997175e-10 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 5) * exp(9.9999999999858739e-8)) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (1.0 - exp(9.9999999999858739e-8)) - 1.999999999997175e-10 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 5) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (1.0 - exp(-9.9999999999858739e-8))) + 1.999999999997175e-10 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 5) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (1.0 - exp(-9.9999999999858739e-8))) : (7.4867781645490941e-5 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 5) * _lt_0_row[2]) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (_lt_0_row[3]))); // nanoA
        const double var_second_inward_calcium_current__i_siNa = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-9.9999999999858744e-10 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 6) * exp(9.9999999999858739e-8)) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (1.0 - exp(9.9999999999858739e-8)) - 9.9999999999858744e-10 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 6) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (1.0 - exp(-9.9999999999858739e-8))) + 9.9999999999858744e-10 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 6) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (1.0 - exp(-9.9999999999858739e-8))) : (0.00037433890822745472 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 6) * _lt_0_row[2]) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (_lt_0_row[3]))); // nanoA
        const double d_dt_chaste_interface_var_second_inward_calcium_current_f_Ca_gate__f_Ca = 0.012 * ((1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) + 120.0 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) / (_lt_0_row[11]) - 0.001 * _lt_0_row[12] * var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca; // 1 / millisecond
        const double var_sodium_background_current__i_b_Na = 0.012 * var_chaste_interface__membrane__V - 0.32056512791634778 * log(NV_Ith_S(mParameters, 6) / var_chaste_interface__intracellular_sodium_concentration__Na_i); // nanoA
        const double var_sodium_potassium_pump__i_NaK = 14.0 * NV_Ith_S(mParameters, 5) * var_chaste_interface__intracellular_sodium_concentration__Na_i / ((1.0 + NV_Ith_S(mParameters, 5)) * (40.0 + var_chaste_interface__intracellular_sodium_concentration__Na_i)); // nanoA
        const double d_dt_chaste_interface_var_intracellular_sodium_concentration__Na_i = -1.3149909014756744e-5 * (3.0 * var_Na_Ca_exchanger__i_NaCa + 3.0 * var_sodium_potassium_pump__i_NaK + var_fast_sodium_current__i_Na + var_second_inward_calcium_current__i_siNa + var_sodium_background_current__i_b_Na) * NV_Ith_S(mParameters, 4); // millimolar / millisecond
        const double var_time_independent_potassium_current__E_K = 26.713760659695652 * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__intracellular_potassium_concentration__K_i); // millivolt
        const double var_potassium_background_current__i_b_K = 0.17000000000000001 * var_chaste_interface__membrane__V - 0.17000000000000001 * var_time_independent_potassium_current__E_K; // nanoA
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 5) * NV_Ith_S(mParameters, 12) / ((1.0 + exp(-0.74867781645490938 + 0.074867781645490947 * var_chaste_interface__membrane__V - 0.074867781645490947 * var_time_independent_potassium_current__E_K)) * (10.0 + NV_Ith_S(mParameters, 5))); // nanoA
        const double d_dt_chaste_interface_var_intracellular_potassium_concentration__K_i = -1.3149909014756744e-5 * (-2.0 * var_sodium_potassium_pump__i_NaK + var_potassium_background_current__i_b_K + var_second_inward_calcium_current__i_siK + var_time_independent_potassium_current__i_K1) * NV_Ith_S(mParameters, 4); // millimolar / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_membrane__V = 0.0;
        }
        else
        {
            d_dt_chaste_interface_var_membrane__V = 0.001 * (-var_Na_Ca_exchanger__i_NaCa - var_calcium_background_current__i_b_Ca - var_fast_sodium_current__i_Na - var_potassium_background_current__i_b_K - var_second_inward_calcium_current__i_siCa - var_second_inward_calcium_current__i_siK - var_second_inward_calcium_current__i_siNa - var_sodium_background_current__i_b_Na - var_sodium_potassium_pump__i_NaK - var_time_independent_potassium_current__i_K1 - 1000.0 * GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted) * NV_Ith_S(mParameters, 8) / HeartConfig::Instance()->GetCapacitance()) / NV_Ith_S(mParameters, 8); // millivolt / millisecond
        }
        
        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_membrane__V;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_i;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_fast_sodium_current_m_gate__m;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_fast_sodium_current_h_gate__h;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_second_inward_calcium_current_d_gate__d;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_second_inward_calcium_current_f_Ca_gate__f_Ca;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_calcium_release__ActFrac;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_calcium_release__ProdFrac;
        NV_Ith_S(rDY,8) = d_dt_chaste_interface_var_intracellular_sodium_concentration__Na_i;
        NV_Ith_S(rDY,9) = d_dt_chaste_interface_var_extracellular_calcium_concentration__Ca_o;
        NV_Ith_S(rDY,10) = d_dt_chaste_interface_var_intracellular_potassium_concentration__K_i;
        NV_Ith_S(rDY,11) = d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_up;
        NV_Ith_S(rDY,12) = d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_rel;
        NV_Ith_S(rDY,13) = d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_Calmod;
        NV_Ith_S(rDY,14) = d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_Trop;
    }

    void Cellhilgemann_noble_model_1987FromCellMLCvodeOpt::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time_converted, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -88.0
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 1e-05
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.076
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.015
        double var_chaste_interface__second_inward_calcium_current_d_gate__d = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.0011
        double var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.785
        double var_chaste_interface__calcium_release__ActFrac = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_release__ProdFrac = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = NV_Ith_S(rY, 8);
        // Units: millimolar; Initial value: 6.5
        double var_chaste_interface__extracellular_calcium_concentration__Ca_o = NV_Ith_S(rY, 9);
        // Units: millimolar; Initial value: 2.0
        double var_chaste_interface__intracellular_potassium_concentration__K_i = NV_Ith_S(rY, 10);
        // Units: millimolar; Initial value: 140.0
        double var_chaste_interface__intracellular_calcium_concentration__Ca_up = NV_Ith_S(rY, 11);
        // Units: millimolar; Initial value: 0.3
        double var_chaste_interface__intracellular_calcium_concentration__Ca_rel = NV_Ith_S(rY, 12);
        // Units: millimolar; Initial value: 0.3
        double var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod = NV_Ith_S(rY, 13);
        // Units: millimolar; Initial value: 0.0005
        double var_chaste_interface__intracellular_calcium_concentration__Ca_Trop = NV_Ith_S(rY, 14);
        // Units: millimolar; Initial value: 0.0015
        
        // Lookup table indexing
        const bool _oob_0 = Cellhilgemann_noble_model_1987FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellhilgemann_noble_model_1987FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);
const double var_x0 = exp(9.9999999999858739e-8);
        const double var_x1 = 1 / (1.0 - var_x0);
        const double var_x2 = exp(1.8716945411372736);
        const double var_x3 = var_x2 * var_chaste_interface__intracellular_potassium_concentration__K_i;
        const double var_x4 = var_x1 * (var_x3 - var_x0 * NV_Ith_S(mParameters, 5));
        const double var_x5 = 1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca;
        const double var_x6 = 0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i;
        const double var_x7 = 1 / var_x6;
        const double var_x8 = var_x7 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
        const double var_x9 = 1.0 - var_x8;
        const double var_x10 = var_x5 * var_x9;
        const double var_x11 = var_x10 * NV_Ith_S(mParameters, 7);
        const double var_x12 = var_x11 * var_chaste_interface__second_inward_calcium_current_d_gate__d;
        const double var_x13 = 3.743389082274547e-5 * var_x12;
        const double var_x14 = exp(-9.9999999999858739e-8);
        const double var_x15 = 1 / (1.0 - var_x14);
        const double var_x16 = var_x15 * (var_x3 - var_x14 * NV_Ith_S(mParameters, 5));
        const double var_x17 = -50.0 + var_chaste_interface__membrane__V;
        const double var_x18 = fabs(var_x17);
        const double var_x19 = var_x18 < 2.6713760659657915e-6;
        const double var_x20 = _lt_0_row[2];
        const double var_x21 = 1.0 - var_x20;
        const double var_x22 = 1 / var_x21;
        const double var_x23 = var_x12 * var_x22;
        const double var_x24 = var_x20 * NV_Ith_S(mParameters, 5);
        const double var_x25 = var_x3 - var_x24;
        const double var_x26 = 7.4867781645490941e-5 * var_x25;
        const double var_x27 = var_x17 * var_x23;
        const double var_x28 = var_x12 * var_x17;
        const double var_x29 = var_x20 * var_x28 / pow(var_x21, 2);
        const double var_x30 = ((var_x19) ? (var_x13 * var_x16 + var_x13 * var_x4) : (var_x23 * var_x26 + 2.8025923642584555e-6 * var_x24 * var_x27 - 2.8025923642584555e-6 * var_x25 * var_x29));
        const double var_x31 = var_x2 * var_chaste_interface__intracellular_sodium_concentration__Na_i;
        const double var_x32 = var_x1 * (var_x31 - var_x0 * NV_Ith_S(mParameters, 6));
        const double var_x33 = var_x32 * var_chaste_interface__second_inward_calcium_current_d_gate__d;
        const double var_x34 = 0.00018716945411372736 * var_x11;
        const double var_x35 = var_x15 * (var_x31 - var_x14 * NV_Ith_S(mParameters, 6));
        const double var_x36 = var_x35 * var_chaste_interface__second_inward_calcium_current_d_gate__d;
        const double var_x37 = var_x20 * NV_Ith_S(mParameters, 6);
        const double var_x38 = var_x31 - var_x37;
        const double var_x39 = 0.00037433890822745472 * var_x38;
        const double var_x40 = ((var_x19) ? (var_x33 * var_x34 + var_x34 * var_x36) : (var_x23 * var_x39 + 1.4012961821292276e-5 * var_x27 * var_x37 - 1.4012961821292276e-5 * var_x29 * var_x38));
        const double var_x41 = exp(9.9999999997780743e-8);
        const double var_x42 = 1 / (1.0 - var_x41);
        const double var_x43 = exp(3.7433890822745473);
        const double var_x44 = var_x43 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
        const double var_x45 = var_x42 * (var_x44 - var_x41 * var_chaste_interface__extracellular_calcium_concentration__Ca_o);
        const double var_x46 = 0.074867781645490947 * var_x12;
        const double var_x47 = exp(-9.9999999997780743e-8);
        const double var_x48 = 1 / (1.0 - var_x47);
        const double var_x49 = var_x48 * (var_x44 - var_x47 * var_chaste_interface__extracellular_calcium_concentration__Ca_o);
        const double var_x50 = var_x18 < 1.3356880329551402e-6;
        const double var_x51 = _lt_0_row[4];
        const double var_x52 = 1.0 - var_x51;
        const double var_x53 = 1 / var_x52;
        const double var_x54 = var_x12 * var_x53;
        const double var_x55 = var_x51 * var_chaste_interface__extracellular_calcium_concentration__Ca_o;
        const double var_x56 = var_x44 - var_x55;
        const double var_x57 = 0.14973556329098189 * var_x56;
        const double var_x58 = var_x17 * var_x54;
        const double var_x59 = ((var_x50) ? (var_x45 * var_x46 + var_x46 * var_x49) : (var_x54 * var_x57 + 0.011210369457033822 * var_x55 * var_x58 - 0.011210369457033822 * var_x28 * var_x51 * var_x56 / pow(var_x52, 2)));
        const double var_x60 = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * NV_Ith_S(mParameters, 9);
        const double var_x61 = var_x60 * var_chaste_interface__fast_sodium_current_h_gate__h;
        const double var_x62 = 0.018716945411372737 * var_chaste_interface__membrane__V;
        const double var_x63 = exp(-var_x62);
        const double var_x64 = pow(NV_Ith_S(mParameters, 6), 3.0);
        const double var_x65 = var_x64 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
        const double var_x66 = var_x63 * var_x65;
        const double var_x67 = exp(var_x62);
        const double var_x68 = pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0);
        const double var_x69 = var_x68 * var_chaste_interface__extracellular_calcium_concentration__Ca_o;
        const double var_x70 = var_x67 * var_x69;
        const double var_x71 = 1 / (1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i);
        const double var_x72 = 1.0 + 0.0001 * var_x65 + 0.0001 * var_x69;
        const double var_x73 = NV_Ith_S(mParameters, 13) / var_x72;
        const double var_x74 = var_x71 * var_x73;
        const double var_x75 = var_x74 * (0.018716945411372737 * var_x66 + 0.018716945411372737 * var_x70);
        const double var_x76 = 1 / var_chaste_interface__intracellular_potassium_concentration__K_i;
        const double var_x77 = var_x76 * NV_Ith_S(mParameters, 5);
        const double var_x78 = log(var_x77);
        const double var_x79 = exp(-0.74867781645490938 + 0.074867781645490947 * var_chaste_interface__membrane__V - 2.0 * var_x78);
        const double var_x80 = 1.0 + var_x79;
        const double var_x81 = NV_Ith_S(mParameters, 12) / (10.0 + NV_Ith_S(mParameters, 5));
        const double var_x82 = var_x81 / var_x80;
        const double var_x83 = var_x82 * NV_Ith_S(mParameters, 5);
        const double var_x84 = var_x79 * var_x81 * (-26.713760659695652 * var_x78 + var_chaste_interface__membrane__V) / pow(var_x80, 2);
        const double var_x85 = var_x84 * NV_Ith_S(mParameters, 5);
        const double var_x86 = 1 / NV_Ith_S(mParameters, 8);
        const double var_x87 = 0.001 * var_x86;
        const double var_x88 = 9358473.2056995872 - 187169.45411399176 * var_chaste_interface__membrane__V;
        const double var_x89 = var_chaste_interface__intracellular_calcium_concentration__Ca_i / pow(var_x6, 2);
        const double var_x90 = var_x5 * (var_x89 - var_x7);
        const double var_x91 = var_x90 * NV_Ith_S(mParameters, 7);
        const double var_x92 = 9.9999999999858744e-10 * var_x91;
        const double var_x93 = var_x36 * var_x92;
        const double var_x94 = var_x91 * var_chaste_interface__second_inward_calcium_current_d_gate__d;
        const double var_x95 = var_x17 * var_x94;
        const double var_x96 = var_x22 * var_x95;
        const double var_x97 = ((var_x19) ? (var_x93 + var_x88 * (-var_x93 - var_x33 * var_x92)) : (var_x39 * var_x96));
        const double var_x98 = 1.999999999997175e-10 * var_x94;
        const double var_x99 = var_x16 * var_x98;
        const double var_x100 = ((var_x19) ? (var_x99 + var_x88 * (-var_x99 - var_x4 * var_x98)) : (var_x26 * var_x96));
        const double var_x101 = 18716945.911788113 - 374338.90823576227 * var_chaste_interface__membrane__V;
        const double var_x102 = 1.9999999999556149e-7 * var_x11;
        const double var_x103 = var_x102 * var_chaste_interface__second_inward_calcium_current_d_gate__d;
        const double var_x104 = var_x103 * var_x43;
        const double var_x105 = 1.9999999999556149e-7 * var_x94;
        const double var_x106 = var_x104 * var_x48;
        const double var_x107 = var_x105 * var_x49;
        const double var_x108 = 0.14973556329098189 * var_x58;
        const double var_x109 = var_x53 * var_x57;
        const double var_x110 = ((var_x50) ? (var_x106 + var_x107 + var_x101 * (-var_x106 - var_x107 - var_x104 * var_x42 - var_x105 * var_x45)) : (var_x108 * var_x43 + var_x109 * var_x95));
        const double var_x111 = 1 / var_chaste_interface__intracellular_calcium_concentration__Ca_i;
        const double var_x112 = var_x70 - var_x66;
        const double var_x113 = var_x112 * var_x73 / pow((0.0068999999999999999 + var_chaste_interface__intracellular_calcium_concentration__Ca_i), 2);
        const double var_x114 = var_x63 * var_x64 * var_x74;
        const double var_x115 = var_x112 * var_x71 * NV_Ith_S(mParameters, 13) / pow(var_x72, 2);
        const double var_x116 = 0.0001 * var_x115;
        const double var_x117 = 1 / (var_chaste_interface__intracellular_sodium_concentration__Na_i + 0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i);
        const double var_x118 = -26.713760659695652 * log(var_x117 * (NV_Ith_S(mParameters, 6) + 0.12 * NV_Ith_S(mParameters, 5))) + var_chaste_interface__membrane__V;
        const double var_x119 = var_x118 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 2) * NV_Ith_S(mParameters, 9) * var_chaste_interface__fast_sodium_current_h_gate__h;
        const double var_x120 = var_x118 * var_x60;
        const double var_x121 = 9.9999999999858744e-10 * var_x11;
        const double var_x122 = var_x121 * var_x35;
        const double var_x123 = var_x11 * var_x17;
        const double var_x124 = var_x123 * var_x22;
        const double var_x125 = ((var_x19) ? (var_x122 + var_x88 * (-var_x122 - var_x121 * var_x32)) : (var_x124 * var_x39));
        const double var_x126 = 1.999999999997175e-10 * var_x11;
        const double var_x127 = var_x126 * var_x16;
        const double var_x128 = ((var_x19) ? (var_x127 + var_x88 * (-var_x127 - var_x126 * var_x4)) : (var_x124 * var_x26));
        const double var_x129 = var_x102 * var_x49;
        const double var_x130 = ((var_x50) ? (var_x129 + var_x101 * (-var_x129 - var_x102 * var_x45)) : (var_x109 * var_x123));
        const double var_x131 = var_x9 * NV_Ith_S(mParameters, 7);
        const double var_x132 = 9.9999999999858744e-10 * var_x131;
        const double var_x133 = var_x132 * var_x36;
        const double var_x134 = var_x131 * var_chaste_interface__second_inward_calcium_current_d_gate__d;
        const double var_x135 = var_x134 * var_x17;
        const double var_x136 = var_x135 * var_x22;
        const double var_x137 = ((var_x19) ? (-var_x133 + var_x88 * (var_x133 + var_x132 * var_x33)) : (-var_x136 * var_x39));
        const double var_x138 = 1.999999999997175e-10 * var_x134;
        const double var_x139 = var_x138 * var_x16;
        const double var_x140 = ((var_x19) ? (-var_x139 + var_x88 * (var_x139 + var_x138 * var_x4)) : (-var_x136 * var_x26));
        const double var_x141 = 1.9999999999556149e-7 * var_x134;
        const double var_x142 = var_x141 * var_x49;
        const double var_x143 = ((var_x50) ? (-var_x142 + var_x101 * (var_x142 + var_x141 * var_x45)) : (-var_x109 * var_x135));
        const double var_x144 = var_x2 * var_chaste_interface__second_inward_calcium_current_d_gate__d;
        const double var_x145 = var_x121 * var_x144;
        const double var_x146 = var_x145 * var_x15;
        const double var_x147 = var_x2 * var_x27;
        const double var_x148 = ((var_x19) ? (var_x146 + var_x88 * (-var_x146 - var_x1 * var_x145)) : (0.00037433890822745472 * var_x147));
        const double var_x149 = 1 / var_chaste_interface__intracellular_sodium_concentration__Na_i;
        const double var_x150 = NV_Ith_S(mParameters, 5) / (1.0 + NV_Ith_S(mParameters, 5));
        const double var_x151 = var_x150 / (40.0 + var_chaste_interface__intracellular_sodium_concentration__Na_i);
        const double var_x152 = var_x150 * var_chaste_interface__intracellular_sodium_concentration__Na_i / pow((1 + 0.025000000000000001 * var_chaste_interface__intracellular_sodium_concentration__Na_i), 2);
        const double var_x153 = var_x117 * var_x61;
        const double var_x154 = pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 2.0) * var_chaste_interface__extracellular_calcium_concentration__Ca_o;
        const double var_x155 = var_x115 * var_x154;
        const double var_x156 = var_x67 * var_x74;
        const double var_x157 = var_x154 * var_x156;
        const double var_x158 = var_x103 * var_x47 * var_x48;
        const double var_x159 = ((var_x50) ? (-var_x158 + var_x101 * (var_x158 + var_x103 * var_x41 * var_x42)) : (-var_x108 * var_x51));
        const double var_x160 = 1 / var_chaste_interface__extracellular_calcium_concentration__Ca_o;
        const double var_x161 = var_x156 * var_x68;
        const double var_x162 = var_x126 * var_x144;
        const double var_x163 = var_x15 * var_x162;
        const double var_x164 = ((var_x19) ? (var_x163 + var_x88 * (-var_x163 - var_x1 * var_x162)) : (7.4867781645490941e-5 * var_x147));
        const double var_x165 = var_x77 * var_x82;
        const double var_x166 = var_x77 * var_x84;
        const double var_x167 = 100.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod;
        const double var_x168 = 100.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_Trop;
        const double var_x169 = 0.00041999999999999996 + 0.00023999999999999998 * var_chaste_interface__intracellular_calcium_concentration__Ca_up + var_chaste_interface__intracellular_calcium_concentration__Ca_i;
        const double var_x170 = 1 / var_x169;
        const double var_x171 = pow(var_x169, (-2));
        const double var_x172 = var_x171 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
        const double var_x173 = var_x171 * var_chaste_interface__intracellular_calcium_concentration__Ca_up;
        const double var_x174 = 1.3149909014756744e-9 * var_x115;
        const double var_x175 = 0.00040816326530612252 * NV_Ith_S(mParameters, 1);
        const double var_x176 = 0.25 + var_chaste_interface__calcium_release__ActFrac;
        const double var_x177 = pow(var_x176, (-2));
        const double var_x178 = var_x177 * var_chaste_interface__calcium_release__ActFrac;
        const double var_x179 = pow(var_chaste_interface__calcium_release__ActFrac, 2);
        const double var_x180 = var_x179 / pow(var_x176, 3);
        const double var_x181 = 3.944972704427023e-9 * var_x115;
        const double var_x182 = var_x177 * var_x179 * NV_Ith_S(mParameters, 1);
        const double var_x183 = 100.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
        const double var_x184 = 1 / (1.0 - exp(1.0000000000287557e-7));
        const double var_x185 = 1 / (1.0 - exp(-1.0000000000287557e-7));
        const double var_x186 = _lt_0_row[8];
        const double var_x187 = 0.44800000000000001 * var_x186 * var_chaste_interface__fast_sodium_current_m_gate__m;
        const double var_x188 = 41.0 + var_chaste_interface__membrane__V;
        const double var_x189 = fabs(var_x188) < 1.0000000000287557e-6;
        const double var_x190 = 1.0 - var_chaste_interface__fast_sodium_current_m_gate__m;
        const double var_x191 = -0.10000000000000001 * var_chaste_interface__membrane__V;
        const double var_x192 = exp(-4.1000000000000005 + var_x191);
        const double var_x193 = 1.0 - var_x192;
        const double var_x194 = 0.20000000000000001 / var_x193;
        const double var_x195 = -8.0 * var_x186;
        const double var_x196 = exp(-7.5 + var_x191 + 0.10000000000000001 * NV_Ith_S(mParameters, 11));
        const double var_x197 = 1 / (1.0 + 320.0 * var_x196);
        const double var_x198 = 2.0 * var_x197;
        const double var_x199 = exp(-9.375 + 0.125 * NV_Ith_S(mParameters, 11) - 0.125 * var_chaste_interface__membrane__V);
        const double var_x200 = 0.02 * var_x199;
        const double var_x201 = 2.5 * var_x199;
        const double var_x202 = 20.0 * var_x199;
        const double var_x203 = 0.01 * NV_Ith_S(mParameters, 10);
        const double var_x204 = 1.0 - var_x203;
        const double var_x205 = var_x204 / (var_x202 + 2000.0 * var_x197);
        const double var_x206 = var_x196 / pow((0.0031250000000000002 + var_x196), 2);
        const double var_x207 = exp(1.0000000000287557e-7);
        const double var_x208 = 1 / (1.0 - var_x207);
        const double var_x209 = exp(-1.0000000000287557e-7);
        const double var_x210 = 1 / (1.0 - var_x209);
        const double var_x211 = 1 / (-1.0 + exp(-9.9999999997324457e-8));
        const double var_x212 = 1 / (-1.0 + exp(1.0000000000010001e-7));
        const double var_x213 = (-0.0059999999999167334 * var_x211 - 0.0060000000000832669 * var_x212) * var_chaste_interface__second_inward_calcium_current_d_gate__d;
        const double var_x214 = 19.0 + var_chaste_interface__membrane__V;
        const double var_x215 = fabs(var_x214);
        const double var_x216 = var_x215 < 4.0000000001150227e-7;
        const double var_x217 = 1.0 - var_chaste_interface__second_inward_calcium_current_d_gate__d;
        const double var_x218 = 0.25 * var_chaste_interface__membrane__V;
        const double var_x219 = -var_x218;
        const double var_x220 = exp(-4.75 + var_x219);
        const double var_x221 = 1.0 - var_x220;
        const double var_x222 = 0.029999999999999999 / var_x221;
        const double var_x223 = var_x217 * var_x222 - 0.0074999999999999997 * var_x214 * var_x217 * var_x220 / pow(var_x221, 2);
        const double var_x224 = var_x215 < 9.999999999871223e-7;
        const double var_x225 = exp(1.8999999999999999 + 0.10000000000000001 * var_chaste_interface__membrane__V);
        const double var_x226 = -1.0 + var_x225;
        const double var_x227 = 0.012 / var_x226;
        const double var_x228 = 1.1999999999678935e-8 * var_x211 - 500.00000000643882 * (19.000001000000001 + var_chaste_interface__membrane__V) * (1.1999999999678934e-5 * var_x211 + 1.2000000000012001e-5 * var_x212);
        const double var_x229 = -var_x214 * var_x222;
        const double var_x230 = 1 / (-1.0 + var_x207);
        const double var_x231 = 1 / (-1.0 + var_x209);
        const double var_x232 = exp(-8.5 + var_x219);
        const double var_x233 = 1.0 + var_x232;
        const double var_x234 = 120.0 * var_x5;
        const double var_x235 = 0.0030000000000000001 * var_x232 * (var_x10 + var_x234 * var_x8) / pow(var_x233, 2);
        const double var_x236 = 34.0 + var_chaste_interface__membrane__V;
        const double var_x237 = fabs(var_x236) < 4.0000000001150227e-7;
        const double var_x238 = exp(8.5 + var_x218);
        const double var_x239 = -1.0 + var_x238;
        const double var_x240 = 0.0062500000000000003 / var_x239;
        const double var_x241 = 0.012 / var_x233;
        const double var_x242 = var_x241 * (-1.0 - 119.0 * var_x8);
        const double var_x243 = 1.0 - var_chaste_interface__calcium_release__ActFrac - var_chaste_interface__calcium_release__ProdFrac;
        const double var_x244 = exp(-3.2000000000000002 + 0.080000000000000002 * var_chaste_interface__membrane__V);
        const double var_x245 = NV_Ith_S(mParameters, 2) + var_chaste_interface__intracellular_calcium_concentration__Ca_i;
        const double var_x246 = pow(var_chaste_interface__intracellular_calcium_concentration__Ca_i, 2);
        const double var_x247 = var_x246;
        const double var_x248 = var_x247 / pow(var_x245, 3);
        const double var_x249 = pow(var_x245, (-2));
        const double var_x250 = var_x249 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
        const double var_x251 = var_x250 - var_x248;
        const double var_x252 = -0.59999999999999998 * var_x244;
        const double var_x253 = 0.5 * var_x246 * var_x249;
        const double var_x254 = 1.3149909014756744e-5 * NV_Ith_S(mParameters, 4);
        const double var_x255 = 8.0543192715385049e-10 * var_x115;
        const double var_x256 = 8.054319271538504e-6 * NV_Ith_S(mParameters, 4);
        const double var_x257 = 0.002 * NV_Ith_S(mParameters, 1);
        const double var_x258 = -var_x183;
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = mSetVoltageDerivativeToZero ? 0.0 : (var_x87 * (-0.187 - var_x30 - var_x40 - var_x59 - var_x61 - var_x75 - var_x83 + 0.074867781645490947 * var_x85));
        IJth(rJacobian, 1, 0) = -3.2874772536891862e-8 + 1.3149909014756744e-5 * var_x75 - 6.5749545073783721e-6 * var_x59;
        IJth(rJacobian, 2, 0) = ((var_x189) ? (var_x187 + (0.001 - 0.001 * var_chaste_interface__fast_sodium_current_m_gate__m) * (100.0 * var_x184 + 100.0 * var_x185)) : (var_x187 + var_x190 * var_x194 - 0.02 * var_x188 * var_x190 * var_x192 / pow(var_x193, 2)));
        IJth(rJacobian, 3, 0) = (var_x198 + var_x200) * (-var_x201 * var_x205 + 5.0000000000000004e-6 * var_x199 * var_x204 * (var_x201 - 0.625 * var_x206) / pow((var_x197 + 0.01 * var_x199), 2)) + (0.00062500000000000001 * var_x206 - 0.0025000000000000001 * var_x199) * (var_x203 - var_chaste_interface__fast_sodium_current_h_gate__h + var_x202 * var_x205);
        IJth(rJacobian, 4, 0) = ((var_x216) ? (var_x213 + (0.001 - 0.001 * var_chaste_interface__second_inward_calcium_current_d_gate__d) * (15.0 * var_x208 + 15.0 * var_x210)) : ((var_x224) ? (var_x213 + var_x223) : (var_x223 - var_x227 * var_chaste_interface__second_inward_calcium_current_d_gate__d + 0.0011999999999999999 * var_x214 * var_x225 * var_chaste_interface__second_inward_calcium_current_d_gate__d / pow(var_x226, 2))));
        IJth(rJacobian, 5, 0) = ((var_x237) ? (var_x235 + (-0.0031250000000000002 * var_x230 - 0.0031250000000000002 * var_x231) * var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) : (var_x235 - var_x240 * var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca + 0.0015625000000000001 * var_x236 * var_x238 * var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca / pow(var_x239, 2)));
        IJth(rJacobian, 6, 0) = 0.048000000000000001 * var_x243 * var_x244;
        IJth(rJacobian, 8, 0) = (-1.5779890817708093e-7 - 3.9449727044270228e-5 * var_x75 - 1.3149909014756744e-5 * var_x40 - 1.3149909014756744e-5 * var_x61) * NV_Ith_S(mParameters, 4);
        IJth(rJacobian, 9, 0) = (-4.0271596357692526e-8 - 8.054319271538504e-6 * var_x59 - 8.054319271538504e-6 * var_x75) * NV_Ith_S(mParameters, 4);
        IJth(rJacobian, 10, 0) = (-2.2354845325086465e-6 + 9.8450451677488091e-7 * var_x85 - 1.3149909014756744e-5 * var_x30 - 1.3149909014756744e-5 * var_x83) * NV_Ith_S(mParameters, 4);
        IJth(rJacobian, 0, 1) = mSetVoltageDerivativeToZero ? 0.0 : (var_x87 * (var_x114 - var_x100 - var_x110 - var_x97 + 0.0068999999999999999 * var_x113 - 0.066784401649239128 * var_x111 + var_x116 * var_x64));
        IJth(rJacobian, 1, 1) = -17.0 + var_x167 + var_x168 - 9.0734372201821531e-8 * var_x113 - 6.5749545073783721e-6 * var_x110 - 1.3149909014756744e-5 * var_x114 - 4.3910440264623234e-7 * var_x111 + (0.0030000000000000001 * var_x172 - 5.5199999999999998e-8 * var_x173 - 0.0030000000000000001 * var_x170) * NV_Ith_S(mParameters, 3) - var_x174 * var_x64;
        IJth(rJacobian, 5, 1) = var_x241 * (var_x90 + var_x234 * var_x7 - var_x234 * var_x89);
        IJth(rJacobian, 6, 1) = var_x243 * var_x251 + (var_x248 - var_x250) * var_chaste_interface__calcium_release__ActFrac;
        IJth(rJacobian, 7, 1) = var_x251 * var_chaste_interface__calcium_release__ActFrac;
        IJth(rJacobian, 8, 1) = (2.7220311660546459e-7 * var_x113 + 3.9449727044270228e-5 * var_x114 - 1.3149909014756744e-5 * var_x97 + var_x181 * var_x64) * NV_Ith_S(mParameters, 4);
        IJth(rJacobian, 9, 1) = (8.054319271538504e-6 * var_x114 + 5.5574802973615678e-8 * var_x113 - 8.054319271538504e-6 * var_x110 - 5.3790289324163455e-7 * var_x111 + var_x255 * var_x64) * NV_Ith_S(mParameters, 4);
        IJth(rJacobian, 10, 1) = -var_x100 * var_x254;
        IJth(rJacobian, 11, 1) = (2.7047999999999999e-6 * var_x173 + 0.14699999999999999 * var_x170 - 0.14699999999999999 * var_x172) * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 13, 1) = 2.0 - var_x167;
        IJth(rJacobian, 14, 1) = 15.0 - var_x168;
        IJth(rJacobian, 0, 2) = mSetVoltageDerivativeToZero ? 0.0 : (-0.0030000000000000001 * var_x119 * var_x86);
        IJth(rJacobian, 2, 2) = ((var_x189) ? (var_x195 - 2.0000000000575113e-7 * var_x185 + 499.9999999856222 * (40.999999000000003 + var_chaste_interface__membrane__V) * (-0.00020000000000575113 * var_x184 - 0.00020000000000575113 * var_x185)) : (var_x195 - var_x188 * var_x194));
        IJth(rJacobian, 8, 2) = -3.9449727044270228e-5 * var_x119 * NV_Ith_S(mParameters, 4);
        IJth(rJacobian, 0, 3) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x120 * var_x87);
        IJth(rJacobian, 3, 3) = -var_x198 - var_x200;
        IJth(rJacobian, 8, 3) = -var_x120 * var_x254;
        IJth(rJacobian, 0, 4) = mSetVoltageDerivativeToZero ? 0.0 : (var_x87 * (-var_x125 - var_x128 - var_x130));
        IJth(rJacobian, 1, 4) = -6.5749545073783721e-6 * var_x130;
        IJth(rJacobian, 4, 4) = ((var_x216) ? (var_x228 - 1.2000000000345068e-8 * var_x210 + 1249.9999999640554 * (18.999999599999999 + var_chaste_interface__membrane__V) * (-1.2000000000345068e-5 * var_x208 - 1.2000000000345068e-5 * var_x210)) : ((var_x224) ? (var_x228 + var_x229) : (var_x229 - var_x214 * var_x227)));
        IJth(rJacobian, 8, 4) = -var_x125 * var_x254;
        IJth(rJacobian, 9, 4) = -var_x130 * var_x256;
        IJth(rJacobian, 10, 4) = -var_x128 * var_x254;
        IJth(rJacobian, 0, 5) = mSetVoltageDerivativeToZero ? 0.0 : (var_x87 * (-var_x137 - var_x140 - var_x143));
        IJth(rJacobian, 1, 5) = -6.5749545073783721e-6 * var_x143;
        IJth(rJacobian, 5, 5) = ((var_x237) ? (var_x242 + 2.5000000000718891e-9 * var_x231 - 1249.9999999640554 * (34.000000399999998 + var_chaste_interface__membrane__V) * (2.5000000000718892e-6 * var_x230 + 2.5000000000718892e-6 * var_x231)) : (var_x242 - var_x236 * var_x240));
        IJth(rJacobian, 8, 5) = -var_x137 * var_x254;
        IJth(rJacobian, 9, 5) = -var_x143 * var_x256;
        IJth(rJacobian, 10, 5) = -var_x140 * var_x254;
        IJth(rJacobian, 1, 6) = (var_x175 * var_x178 - var_x175 * var_x180) * var_chaste_interface__intracellular_calcium_concentration__Ca_rel;
        IJth(rJacobian, 6, 6) = -0.059999999999999998 + var_x252 - var_x247 * var_x249;
        IJth(rJacobian, 7, 6) = 0.059999999999999998 + var_x253;
        IJth(rJacobian, 12, 6) = (var_x180 * var_x257 - var_x178 * var_x257) * var_chaste_interface__intracellular_calcium_concentration__Ca_rel;
        IJth(rJacobian, 6, 7) = var_x252 - var_x253;
        IJth(rJacobian, 7, 7) = -0.00059999999999999995;
        IJth(rJacobian, 0, 8) = mSetVoltageDerivativeToZero ? 0.0 : (var_x87 * (-var_x148 + 0.00030000000000000003 * var_x155 + 0.0087500000000000008 * var_x152 - 3.0 * var_x157 - 14.0 * var_x151 - 26.713760659695652 * var_x153 - 0.32056512791634778 * var_x149));
        IJth(rJacobian, 1, 8) = 3.9449727044270228e-5 * var_x157 - var_x154 * var_x181;
        IJth(rJacobian, 8, 8) = (3.4518511163736454e-7 * var_x152 + 1.183491811328107e-8 * var_x155 - 0.00055229617861978322 * var_x151 - 4.215402265403831e-6 * var_x149 - 0.00035128352211698585 * var_x153 - 1.3149909014756744e-5 * var_x148 - 0.0001183491811328107 * var_x157) * NV_Ith_S(mParameters, 4);
        IJth(rJacobian, 9, 8) = (2.4162957814615515e-9 * var_x155 - 2.4162957814615514e-5 * var_x157) * NV_Ith_S(mParameters, 4);
        IJth(rJacobian, 10, 8) = (0.00036819745241318885 * var_x151 - 2.3012340775824301e-7 * var_x152) * NV_Ith_S(mParameters, 4);
        IJth(rJacobian, 0, 9) = mSetVoltageDerivativeToZero ? 0.0 : (var_x87 * (-var_x159 - var_x161 + 0.066784401649239128 * var_x160 + var_x116 * var_x68));
        IJth(rJacobian, 1, 9) = 1.3149909014756744e-5 * var_x161 + 4.3910440264623234e-7 * var_x160 - 6.5749545073783721e-6 * var_x159 - var_x174 * var_x68;
        IJth(rJacobian, 8, 9) = (-3.9449727044270228e-5 * var_x161 + var_x181 * var_x68) * NV_Ith_S(mParameters, 4);
        IJth(rJacobian, 9, 9) = (-4.9999999999999998e-7 + 5.3790289324163455e-7 * var_x160 - 8.054319271538504e-6 * var_x159 - 8.054319271538504e-6 * var_x161 + var_x255 * var_x68) * NV_Ith_S(mParameters, 4);
        IJth(rJacobian, 0, 10) = mSetVoltageDerivativeToZero ? 0.0 : (var_x87 * (-var_x164 + 2.0 * var_x166 - 26.713760659695652 * var_x165 - 4.5413393121482608 * var_x76 - 3.2056512791634777 * var_x153));
        IJth(rJacobian, 8, 10) = -4.2154022654038303e-5 * var_x153 * NV_Ith_S(mParameters, 4);
        IJth(rJacobian, 10, 10) = (2.6299818029513489e-5 * var_x166 - 0.00035128352211698585 * var_x165 - 1.3149909014756744e-5 * var_x164 - 5.9718198759887604e-5 * var_x76) * NV_Ith_S(mParameters, 4);
        IJth(rJacobian, 1, 11) = (5.5199999999999998e-8 * var_x170 + 7.1999999999999999e-7 * var_x172 - 1.3248e-11 * var_x173) * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 11, 11) = -0.050000000000000003 + (6.4915199999999989e-10 * var_x173 - 2.7047999999999999e-6 * var_x170 - 3.5279999999999994e-5 * var_x172) * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 12, 11) = 0.0050000000000000001;
        IJth(rJacobian, 1, 12) = 0.00020408163265306126 * var_x182 + 0.00020408163265306126 * NV_Ith_S(mParameters, 0);
        IJth(rJacobian, 11, 12) = 0.050000000000000003;
        IJth(rJacobian, 12, 12) = -0.0050000000000000001 - 0.001 * var_x182 - 0.001 * NV_Ith_S(mParameters, 0);
        IJth(rJacobian, 1, 13) = 0.050000000000000003 + var_x183;
        IJth(rJacobian, 13, 13) = -0.050000000000000003 + var_x258;
        IJth(rJacobian, 1, 14) = 0.20000000000000001 + var_x183;
        IJth(rJacobian, 14, 14) = -0.20000000000000001 + var_x258;
    }

    N_Vector Cellhilgemann_noble_model_1987FromCellMLCvodeOpt::ComputeDerivedQuantities(double var_chaste_interface__environment__time_converted, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -88.0
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 1e-05
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.076
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.015
        double var_chaste_interface__second_inward_calcium_current_d_gate__d = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.0011
        double var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.785
        double var_chaste_interface__calcium_release__ActFrac = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = NV_Ith_S(rY, 8);
        // Units: millimolar; Initial value: 6.5
        double var_chaste_interface__extracellular_calcium_concentration__Ca_o = NV_Ith_S(rY, 9);
        // Units: millimolar; Initial value: 2.0
        double var_chaste_interface__intracellular_potassium_concentration__K_i = NV_Ith_S(rY, 10);
        // Units: millimolar; Initial value: 140.0
        double var_chaste_interface__intracellular_calcium_concentration__Ca_rel = NV_Ith_S(rY, 12);
        // Units: millimolar; Initial value: 0.3
        
        // Lookup table indexing
        const bool _oob_0 = Cellhilgemann_noble_model_1987FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellhilgemann_noble_model_1987FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_Na_Ca_exchanger__d_NaCa = 0.0001; // dimensionless
        const double var_Na_Ca_exchanger__gamma = 0.5; // dimensionless
        const double var_Na_Ca_exchanger__n_NaCa = 3.0; // dimensionless
        const double var_calcium_release__i_rel = (pow(var_chaste_interface__calcium_release__ActFrac, 2) * NV_Ith_S(mParameters, 1) / pow((0.25 + var_chaste_interface__calcium_release__ActFrac), 2) + NV_Ith_S(mParameters, 0)) * var_chaste_interface__intracellular_calcium_concentration__Ca_rel; // millimolar_per_second
        const double var_membrane__F = 96485.341499999995; // coulomb_per_mole
        const double var_membrane__R = 8314.4719999999998; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_membrane__RTONF = var_membrane__R * var_membrane__T / var_membrane__F; // millivolt
        const double var_fast_sodium_current__E_mh = var_membrane__RTONF * log((NV_Ith_S(mParameters, 6) + 0.12 * NV_Ith_S(mParameters, 5)) / (var_chaste_interface__intracellular_sodium_concentration__Na_i + 0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i)); // millivolt
        const double var_Na_Ca_exchanger__i_NaCa = (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, var_Na_Ca_exchanger__n_NaCa) * var_chaste_interface__extracellular_calcium_concentration__Ca_o * exp((-2.0 + var_Na_Ca_exchanger__n_NaCa) * var_Na_Ca_exchanger__gamma * var_chaste_interface__membrane__V / var_membrane__RTONF) - pow(NV_Ith_S(mParameters, 6), var_Na_Ca_exchanger__n_NaCa) * var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp((-1.0 + var_Na_Ca_exchanger__gamma) * (-2.0 + var_Na_Ca_exchanger__n_NaCa) * var_chaste_interface__membrane__V / var_membrane__RTONF)) * NV_Ith_S(mParameters, 13) / ((1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i) * (1.0 + (pow(NV_Ith_S(mParameters, 6), var_Na_Ca_exchanger__n_NaCa) * var_chaste_interface__intracellular_calcium_concentration__Ca_i + pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, var_Na_Ca_exchanger__n_NaCa) * var_chaste_interface__extracellular_calcium_concentration__Ca_o) * var_Na_Ca_exchanger__d_NaCa)); // nanoA
        const double var_Na_Ca_exchanger__i_NaCa_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_Na_Ca_exchanger__i_NaCa / NV_Ith_S(mParameters, 8); // uA_per_cm2
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_mh + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 9) * var_chaste_interface__fast_sodium_current_h_gate__h; // nanoA
        const double var_fast_sodium_current__i_Na_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na / NV_Ith_S(mParameters, 8); // uA_per_cm2
        const double var_fast_sodium_current_h_gate__alpha_h = 20.0 * exp(-9.375 + 0.125 * NV_Ith_S(mParameters, 11) - 0.125 * var_chaste_interface__membrane__V); // per_second
        const double var_fast_sodium_current_h_gate__beta_h = 2000.0 / (1.0 + 320.0 * exp(-7.5 + 0.10000000000000001 * NV_Ith_S(mParameters, 11) - 0.10000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_fast_sodium_current_h_gate__tau_h = 1 / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h); // second
        const double var_membrane__i_Stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_second_inward_calcium_current_f_Ca_gate__alpha_f_Ca = _lt_0_row[12]; // per_second
        const double var_second_inward_calcium_current_f_Ca_gate__beta_f_Ca = 12.0 / (_lt_0_row[11]); // per_second
        const double var_second_inward_calcium_current__i_siCa = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 1.3356880329551402e-6) ? (-374338.90823576227 * (-50.000001335688033 + var_chaste_interface__membrane__V) * (-1.9999999999556149e-7 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - var_chaste_interface__extracellular_calcium_concentration__Ca_o * exp(9.9999999997780743e-8)) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (1.0 - exp(9.9999999997780743e-8)) - 1.9999999999556149e-7 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - var_chaste_interface__extracellular_calcium_concentration__Ca_o * exp(-9.9999999997780743e-8)) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (1.0 - exp(-9.9999999997780743e-8))) + 1.9999999999556149e-7 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - var_chaste_interface__extracellular_calcium_concentration__Ca_o * exp(-9.9999999997780743e-8)) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (1.0 - exp(-9.9999999997780743e-8))) : (0.14973556329098189 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - var_chaste_interface__extracellular_calcium_concentration__Ca_o * _lt_0_row[4]) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (_lt_0_row[5]))); // nanoA
        const double var_second_inward_calcium_current__i_siK = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-1.999999999997175e-10 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 5) * exp(9.9999999999858739e-8)) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (1.0 - exp(9.9999999999858739e-8)) - 1.999999999997175e-10 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 5) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (1.0 - exp(-9.9999999999858739e-8))) + 1.999999999997175e-10 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 5) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (1.0 - exp(-9.9999999999858739e-8))) : (7.4867781645490941e-5 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 5) * _lt_0_row[2]) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (_lt_0_row[3]))); // nanoA
        const double var_second_inward_calcium_current__i_siNa = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-9.9999999999858744e-10 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 6) * exp(9.9999999999858739e-8)) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (1.0 - exp(9.9999999999858739e-8)) - 9.9999999999858744e-10 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 6) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (1.0 - exp(-9.9999999999858739e-8))) + 9.9999999999858744e-10 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 6) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (1.0 - exp(-9.9999999999858739e-8))) : (0.00037433890822745472 * (1.0 - var_chaste_interface__second_inward_calcium_current_f_Ca_gate__f_Ca) * (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 6) * _lt_0_row[2]) * NV_Ith_S(mParameters, 7) * var_chaste_interface__second_inward_calcium_current_d_gate__d / (_lt_0_row[3]))); // nanoA
        const double var_second_inward_calcium_current__i_si = var_second_inward_calcium_current__i_siCa + var_second_inward_calcium_current__i_siK + var_second_inward_calcium_current__i_siNa; // nanoA
        const double var_second_inward_calcium_current__i_si_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_second_inward_calcium_current__i_si / NV_Ith_S(mParameters, 8); // uA_per_cm2
        const double var_second_inward_calcium_current_f_Ca_gate__tau_f_Ca = 1 / (var_second_inward_calcium_current_f_Ca_gate__alpha_f_Ca + var_second_inward_calcium_current_f_Ca_gate__beta_f_Ca); // second
        const double var_time_independent_potassium_current__E_K = var_membrane__RTONF * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__intracellular_potassium_concentration__K_i); // millivolt
        const double var_time_independent_potassium_current__K_m_K1 = 10.0; // millimolar
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 5) * NV_Ith_S(mParameters, 12) / ((1.0 + exp(2.0 * (-10.0 - var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) / var_membrane__RTONF)) * (NV_Ith_S(mParameters, 5) + var_time_independent_potassium_current__K_m_K1)); // nanoA
        const double var_time_independent_potassium_current__i_K1_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_time_independent_potassium_current__i_K1 / NV_Ith_S(mParameters, 8); // uA_per_cm2

        N_Vector dqs = N_VNew_Serial(9);
        NV_Ith_S(dqs, 0) = var_calcium_release__i_rel;
        NV_Ith_S(dqs, 1) = var_second_inward_calcium_current__i_si_converted;
        NV_Ith_S(dqs, 2) = var_second_inward_calcium_current_f_Ca_gate__tau_f_Ca;
        NV_Ith_S(dqs, 3) = var_fast_sodium_current__i_Na_converted;
        NV_Ith_S(dqs, 4) = var_fast_sodium_current_h_gate__tau_h;
        NV_Ith_S(dqs, 5) = var_time_independent_potassium_current__i_K1_converted;
        NV_Ith_S(dqs, 6) = var_Na_Ca_exchanger__i_NaCa_converted;
        NV_Ith_S(dqs, 7) = var_membrane__i_Stim_converted;
        NV_Ith_S(dqs, 8) = var_chaste_interface__environment__time_converted;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellhilgemann_noble_model_1987FromCellMLCvodeOpt>::Initialise(void)
{
    this->mSystemName = "hilgemann_noble_model_1987";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // NV_Ith_S(rY, 0):
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-88.0);

    // NV_Ith_S(rY, 1):
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1e-05);

    // NV_Ith_S(rY, 2):
    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.076);

    // NV_Ith_S(rY, 3):
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.015);

    // NV_Ith_S(rY, 4):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0011);

    // NV_Ith_S(rY, 5):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_fCa_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.785);

    // NV_Ith_S(rY, 6):
    this->mVariableNames.push_back("calcium_release__ActFrac");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 7):
    this->mVariableNames.push_back("calcium_release__ProdFrac");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 8):
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(6.5);

    // NV_Ith_S(rY, 9):
    this->mVariableNames.push_back("extracellular_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(2.0);

    // NV_Ith_S(rY, 10):
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(140.0);

    // NV_Ith_S(rY, 11):
    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_up");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.3);

    // NV_Ith_S(rY, 12):
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.3);

    // NV_Ith_S(rY, 13):
    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_Calmod");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0005);

    // NV_Ith_S(rY, 14):
    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_Trop");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0015);

    // mParameters[0]:
    this->mParameterNames.push_back("SR_leak_current_max");
    this->mParameterUnits.push_back("per_second");

    // mParameters[1]:
    this->mParameterNames.push_back("SR_release_current_max");
    this->mParameterUnits.push_back("per_second");

    // mParameters[2]:
    this->mParameterNames.push_back("SR_release_kmcacyt");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[3]:
    this->mParameterNames.push_back("SR_uptake_current_max");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[4]:
    this->mParameterNames.push_back("concentration_clamp_onoff");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[5]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[6]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("nanoA_per_millimolar");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_capacitance");
    this->mParameterUnits.push_back("microF");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("microS");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_reduced_inactivation");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_shift_inactivation");
    this->mParameterUnits.push_back("millivolt");

    // mParameters[12]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("microS");

    // mParameters[13]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("nanoA");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("SR_release_current");
    this->mDerivedQuantityUnits.push_back("millimolar_per_second");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current_fCa_gate_tau");
    this->mDerivedQuantityUnits.push_back("second");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_h_gate_tau");
    this->mDerivedQuantityUnits.push_back("second");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellhilgemann_noble_model_1987FromCellMLCvodeOpt)

#endif // CHASTE_CVODE
