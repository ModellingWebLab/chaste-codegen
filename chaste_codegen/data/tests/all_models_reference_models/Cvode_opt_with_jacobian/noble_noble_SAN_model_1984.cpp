#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: NN_SAN_model_1984
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: AnalyticCvodeOpt)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "noble_noble_SAN_model_1984.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt_LookupTables : public AbstractLookupTableCollection
{
public:
    static Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt_LookupTables);
        }
        return mpInstance.get();
    }

    void FreeMemory()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }

    // Row lookup methods
    // using linear-interpolation

    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<21; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }


    const double * IndexTable0(double var_chaste_interface__membrane__V)
    {
        const double _offset_0 = var_chaste_interface__membrane__V - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }


// LCOV_EXCL_START
    bool CheckIndex0(double& var_chaste_interface__membrane__V)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__membrane__V>mTableMaxs[0] || var_chaste_interface__membrane__V<mTableMins[0])
        {
// LCOV_EXCL_START
            _oob_0 = true;
// LCOV_EXCL_STOP
        }
        return _oob_0;
    }
// LCOV_EXCL_STOP

    ~Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt_LookupTables()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

    }

protected:
    Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt_LookupTables(const Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt_LookupTables&);
    Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt_LookupTables& operator= (const Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt_LookupTables&);
    Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);

        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 21;
        mTableMins[0] = -250.0;
        mTableMaxs[0] = 550.0;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;

        Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt_LookupTables::RegenerateTables();
    }

    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);


        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][21];

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(0.018716945411372737 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][0] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(-0.018716945411372737 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][1] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(1.8716945411372736 - 0.037433890822745473 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[2] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[2] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[2] >= 2){
                    EXCEPTION("Lookup table 2 at ["<<i<<"][2] has non-finite value: " << val);
                }
                _lookup_table_0[i][2] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return 1.0 - exp(1.8716945411372736 - 0.037433890822745473 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[3] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[3] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[3] >= 2){
                    EXCEPTION("Lookup table 3 at ["<<i<<"][3] has non-finite value: " << val);
                }
                _lookup_table_0[i][3] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(3.7433890822745473 - 0.074867781645490947 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[4] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[4] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[4] >= 2){
                    EXCEPTION("Lookup table 4 at ["<<i<<"][4] has non-finite value: " << val);
                }
                _lookup_table_0[i][4] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return 1.0 - exp(3.7433890822745473 - 0.074867781645490947 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[5] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[5] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[5] >= 2){
                    EXCEPTION("Lookup table 5 at ["<<i<<"][5] has non-finite value: " << val);
                }
                _lookup_table_0[i][5] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(-0.037433890822745473 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][6] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(-9.375 - 0.125 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][7] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return 1.0 + 320.0 * exp(-7.5 - 0.10000000000000001 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][8] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return ((fabs(41.0 + var_chaste_interface__membrane__V) < 1.0000000010279564e-6) ? (-0.00020000000091613401 / (1.0 - exp(1.0000000045806701e-7)) + 499999.99948602181 * (41.000001000000005 + var_chaste_interface__membrane__V) * (0.00019999999949504854 / (1.0 - exp(-9.9999999747524276e-8)) + 0.00020000000091613401 / (1.0 - exp(1.0000000045806701e-7)))) : (200.0 * (41.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.1000000000000005 - 0.10000000000000001 * var_chaste_interface__membrane__V))));
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[9] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[9] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[9] >= 2){
                    EXCEPTION("Lookup table 9 at ["<<i<<"][9] has non-finite value: " << val);
                }
                _lookup_table_0[i][9] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(-3.6960000000000002 - 0.056000000000000001 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][10] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(-3.484 - 0.067000000000000004 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][11] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return ((fabs(52.0 + var_chaste_interface__membrane__V) < 4.9999999873762135e-7) ? (-5.0000000584304871e-7 / (1.0 - exp(1.0000000116860974e-7)) + 1000000.0025247573 * (52.000000500000006 + var_chaste_interface__membrane__V) * (4.99999991632194e-7 / (1.0 - exp(-9.999999832643881e-8)) + 5.0000000584304871e-7 / (1.0 - exp(1.0000000116860974e-7)))) : ((52.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-10.4 - 0.20000000000000001 * var_chaste_interface__membrane__V))));
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[12] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[12] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[12] >= 2){
                    EXCEPTION("Lookup table 12 at ["<<i<<"][12] has non-finite value: " << val);
                }
                _lookup_table_0[i][12] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return 1.0 + exp(-16.0 - 0.25 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][13] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return -1.0 + exp(16.0 + 0.25 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][14] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return ((fabs(19.0 + var_chaste_interface__membrane__V) < 4.0000000112172529e-7) ? (-1.2000000033651759e-5 / (1.0 - exp(1.0000000028043132e-7)) + 1249999.9964946085 * (19.000000400000001 + var_chaste_interface__membrane__V) * (1.2000000033651759e-5 / (1.0 - exp(1.0000000028043132e-7)) + 1.2000000033651759e-5 / (1.0 - exp(-1.0000000028043132e-7)))) : (30.0 * (19.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.75 - 0.25 * var_chaste_interface__membrane__V))));
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[15] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[15] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[15] >= 2){
                    EXCEPTION("Lookup table 15 at ["<<i<<"][15] has non-finite value: " << val);
                }
                _lookup_table_0[i][15] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return ((fabs(19.0 + var_chaste_interface__membrane__V) < 1.0000000010279564e-6) ? (1.2000000012335477e-5 / (-1.0 + exp(1.0000000010279564e-7)) - 499999.99948602181 * (18.999998999999999 + var_chaste_interface__membrane__V) * (-1.2000000012335477e-5 / (-1.0 + exp(1.0000000010279564e-7)) - 1.2000000012335477e-5 / (-1.0 + exp(-1.0000000010279564e-7)))) : (12.0 * (19.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(1.8999999999999999 + 0.10000000000000001 * var_chaste_interface__membrane__V))));
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[16] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[16] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[16] >= 2){
                    EXCEPTION("Lookup table 16 at ["<<i<<"][16] has non-finite value: " << val);
                }
                _lookup_table_0[i][16] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return 1.0 + exp(-8.5 - 0.25 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][17] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return -1.0 + exp(8.5 + 0.25 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][18] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return ((fabs(22.0 + var_chaste_interface__membrane__V) < 4.9999999873762135e-7) ? (-2.4999999936881068e-7 / (1.0 - exp(9.9999999747524276e-8)) + 1000000.0025247573 * (22.000000499999999 + var_chaste_interface__membrane__V) * (2.4999999936881068e-7 / (1.0 - exp(9.9999999747524276e-8)) + 2.4999999936881068e-7 / (1.0 - exp(-9.9999999747524276e-8)))) : (0.5 * (22.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.4000000000000004 - 0.20000000000000001 * var_chaste_interface__membrane__V))));
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[19] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[19] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[19] >= 2){
                    EXCEPTION("Lookup table 19 at ["<<i<<"][19] has non-finite value: " << val);
                }
                _lookup_table_0[i][19] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return ((fabs(22.0 + var_chaste_interface__membrane__V) < 1.4999999997655777e-6) ? (2.6699999995827282e-7 / (-1.0 + exp(9.9999999984371854e-8)) - 333333.33338542719 * (21.9999985 + var_chaste_interface__membrane__V) * (-2.6699999995827282e-7 / (-1.0 + exp(9.9999999984371854e-8)) - 2.6699999995827282e-7 / (-1.0 + exp(-9.9999999984371854e-8)))) : (0.17799999999999999 * (22.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(1.4666666666666666 + 0.066666666666666666 * var_chaste_interface__membrane__V))));
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[20] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[20] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[20] >= 2){
                    EXCEPTION("Lookup table 20 at ["<<i<<"][20] has non-finite value: " << val);
                }
                _lookup_table_0[i][20] = val;
            }

            mNeedsRegeneration[0] = false;
        }

        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }

private:
    /** The single instance of the class */
    static std::shared_ptr<Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[21];

    // Lookup tables
    double (*_lookup_table_0)[21];
    int _lookup_table_0_num_misshit_piecewise[21] = {0};

};

std::shared_ptr<Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt_LookupTables> Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt_LookupTables::mpInstance;



    double Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt::Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                15,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt>::Instance();
        Init();
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
        
        NV_Ith_S(this->mParameters, 0) = 2.0; // (var_extracellular_calcium_concentration__Cao) [millimolar]
        NV_Ith_S(this->mParameters, 1) = 140.0; // (var_extracellular_sodium_concentration__Nao) [millimolar]
        NV_Ith_S(this->mParameters, 2) = 7.5; // (var_second_inward_current__P_si) [nanoA_per_millimolar]
        NV_Ith_S(this->mParameters, 3) = 0.0060000000000000001; // (var_membrane__C) [microF]
        NV_Ith_S(this->mParameters, 4) = 20.0; // (var_time_dependent_potassium_current__i_K_max) [nanoA]
        NV_Ith_S(this->mParameters, 5) = 1.25; // (var_fast_sodium_current__g_Na) [microS]
        NV_Ith_S(this->mParameters, 6) = 6.0; // (var_hyperpolarising_activated_current__g_f_K) [microS]
        NV_Ith_S(this->mParameters, 7) = 6.0; // (var_hyperpolarising_activated_current__g_f_Na) [microS]
        NV_Ith_S(this->mParameters, 8) = 0.75; // (var_time_independent_potassium_current__g_K1) [microS]
    }

    Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt::~Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt()
    {
    }

    AbstractLookupTableCollection* Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt::GetLookupTableCollection()
    {
        return Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt_LookupTables::Instance();
    }
    
    double Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -60.0
        double var_chaste_interface__intracellular_calcium_concentration__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 5.8e-05
        double var_chaste_interface__hyperpolarising_activated_current_y_gate__y = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.007
        double var_chaste_interface__time_dependent_potassium_current_x_gate__x = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.54
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.076
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.015
        double var_chaste_interface__second_inward_current_d_gate__d = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.0011
        double var_chaste_interface__second_inward_current_f_gate__f = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.785
        double var_chaste_interface__second_inward_current_f2_gate__f2 = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.785
        double var_chaste_interface__intracellular_sodium_concentration__Nai = NV_Ith_S(rY, 9);
        // Units: millimolar; Initial value: 7.5
        double var_chaste_interface__extracellular_potassium_concentration__Kc = NV_Ith_S(rY, 13);
        // Units: millimolar; Initial value: 3.0
        double var_chaste_interface__intracellular_potassium_concentration__Ki = NV_Ith_S(rY, 14);
        // Units: millimolar; Initial value: 140.0
        
        // Lookup table indexing
        const bool _oob_0 = Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        const double var_hyperpolarising_activated_current__E_K = 26.713760659695652 * log(var_chaste_interface__extracellular_potassium_concentration__Kc / var_chaste_interface__intracellular_potassium_concentration__Ki); // millivolt
        const double var_hyperpolarising_activated_current__E_Na = 26.713760659695652 * log(NV_Ith_S(mParameters, 1) / var_chaste_interface__intracellular_sodium_concentration__Nai); // millivolt
        const double var_Na_Ca_exchanger__i_NaCa = 0.002 * (pow(var_chaste_interface__intracellular_sodium_concentration__Nai, 3.0) * NV_Ith_S(mParameters, 0) * _lt_0_row[0] - pow(NV_Ith_S(mParameters, 1), 3.0) * var_chaste_interface__intracellular_calcium_concentration__Cai * _lt_0_row[1]) / ((1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Cai) * (1.0 + 0.0001 * pow(NV_Ith_S(mParameters, 1), 3.0) * var_chaste_interface__intracellular_calcium_concentration__Cai + 0.0001 * pow(var_chaste_interface__intracellular_sodium_concentration__Nai, 3.0) * NV_Ith_S(mParameters, 0))); // nanoA
        const double var_calcium_background_current__i_Ca_b = 0.01 * var_chaste_interface__membrane__V - 0.13356880329847826 * log(NV_Ith_S(mParameters, 0) / var_chaste_interface__intracellular_calcium_concentration__Cai); // nanoA
        const double var_fast_sodium_current__i_Na_converted = 0.001 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-26.713760659695652 * log((NV_Ith_S(mParameters, 1) + 0.12 * var_chaste_interface__extracellular_potassium_concentration__Kc) / (var_chaste_interface__intracellular_sodium_concentration__Nai + 0.12 * var_chaste_interface__intracellular_potassium_concentration__Ki)) + var_chaste_interface__membrane__V) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 5) * var_chaste_interface__fast_sodium_current_h_gate__h / NV_Ith_S(mParameters, 3); // uA_per_cm2
        const double var_hyperpolarising_activated_current__i_f_converted = 0.001 * ((-var_hyperpolarising_activated_current__E_K + var_chaste_interface__membrane__V) * var_chaste_interface__extracellular_potassium_concentration__Kc * NV_Ith_S(mParameters, 6) * var_chaste_interface__hyperpolarising_activated_current_y_gate__y / (45.0 + var_chaste_interface__extracellular_potassium_concentration__Kc) + (-var_hyperpolarising_activated_current__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__extracellular_potassium_concentration__Kc * NV_Ith_S(mParameters, 7) * var_chaste_interface__hyperpolarising_activated_current_y_gate__y / (45.0 + var_chaste_interface__extracellular_potassium_concentration__Kc)) * HeartConfig::Instance()->GetCapacitance() / NV_Ith_S(mParameters, 3); // uA_per_cm2
        const double var_second_inward_current__i_si_converted = 0.001 * (((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760661323249e-6) ? (187169.45410232362 * (-49.999997328623934 + var_chaste_interface__membrane__V) * (1.0000000000609275e-9 * (var_chaste_interface__intracellular_potassium_concentration__Ki * exp(1.8716945411372736) - var_chaste_interface__extracellular_potassium_concentration__Kc * exp(1.0000000000609274e-7)) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (1.0 - exp(1.0000000000609274e-7)) + 1.0000000000609275e-9 * (var_chaste_interface__intracellular_potassium_concentration__Ki * exp(1.8716945411372736) - var_chaste_interface__extracellular_potassium_concentration__Kc * exp(-1.0000000000609274e-7)) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (1.0 - exp(-1.0000000000609274e-7))) - 1.0000000000609275e-9 * (var_chaste_interface__intracellular_potassium_concentration__Ki * exp(1.8716945411372736) - var_chaste_interface__extracellular_potassium_concentration__Kc * exp(1.0000000000609274e-7)) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (1.0 - exp(1.0000000000609274e-7))) : (0.00037433890822745472 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_potassium_concentration__Ki * exp(1.8716945411372736) - var_chaste_interface__extracellular_potassium_concentration__Kc * _lt_0_row[2]) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (_lt_0_row[3]))) + ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760661323249e-6) ? (187169.45410232362 * (-49.999997328623934 + var_chaste_interface__membrane__V) * (1.0000000000609275e-9 * (var_chaste_interface__intracellular_sodium_concentration__Nai * exp(1.8716945411372736) - NV_Ith_S(mParameters, 1) * exp(1.0000000000609274e-7)) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (1.0 - exp(1.0000000000609274e-7)) + 1.0000000000609275e-9 * (var_chaste_interface__intracellular_sodium_concentration__Nai * exp(1.8716945411372736) - NV_Ith_S(mParameters, 1) * exp(-1.0000000000609274e-7)) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (1.0 - exp(-1.0000000000609274e-7))) - 1.0000000000609275e-9 * (var_chaste_interface__intracellular_sodium_concentration__Nai * exp(1.8716945411372736) - NV_Ith_S(mParameters, 1) * exp(1.0000000000609274e-7)) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (1.0 - exp(1.0000000000609274e-7))) : (0.00037433890822745472 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_sodium_concentration__Nai * exp(1.8716945411372736) - NV_Ith_S(mParameters, 1) * _lt_0_row[2]) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (_lt_0_row[3]))) + ((fabs(-50.0 + var_chaste_interface__membrane__V) < 1.3356880330661625e-6) ? (374338.90820464725 * (-49.999998664311967 + var_chaste_interface__membrane__V) * (2.0000000001218549e-7 * (var_chaste_interface__intracellular_calcium_concentration__Cai * exp(3.7433890822745473) - NV_Ith_S(mParameters, 0) * exp(1.0000000000609274e-7)) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (1.0 - exp(1.0000000000609274e-7)) + 2.0000000001218549e-7 * (var_chaste_interface__intracellular_calcium_concentration__Cai * exp(3.7433890822745473) - NV_Ith_S(mParameters, 0) * exp(-1.0000000000609274e-7)) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (1.0 - exp(-1.0000000000609274e-7))) - 2.0000000001218549e-7 * (var_chaste_interface__intracellular_calcium_concentration__Cai * exp(3.7433890822745473) - NV_Ith_S(mParameters, 0) * exp(1.0000000000609274e-7)) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (1.0 - exp(1.0000000000609274e-7))) : (0.14973556329098189 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_calcium_concentration__Cai * exp(3.7433890822745473) - NV_Ith_S(mParameters, 0) * _lt_0_row[4]) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (_lt_0_row[5])))) * HeartConfig::Instance()->GetCapacitance() / NV_Ith_S(mParameters, 3); // uA_per_cm2
        const double var_sodium_background_current__i_Na_b = 0.070000000000000007 * var_chaste_interface__membrane__V - 0.070000000000000007 * var_hyperpolarising_activated_current__E_Na; // nanoA
        const double var_sodium_potassium_pump__i_p = 50.0 * var_chaste_interface__extracellular_potassium_concentration__Kc * var_chaste_interface__intracellular_sodium_concentration__Nai / ((1.0 + var_chaste_interface__extracellular_potassium_concentration__Kc) * (40.0 + var_chaste_interface__intracellular_sodium_concentration__Nai)); // nanoA
        const double var_time_dependent_potassium_current__i_K_converted = 7.1428571428571427e-6 * (-var_chaste_interface__extracellular_potassium_concentration__Kc * _lt_0_row[6] + var_chaste_interface__intracellular_potassium_concentration__Ki) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 4) * var_chaste_interface__time_dependent_potassium_current_x_gate__x / NV_Ith_S(mParameters, 3); // uA_per_cm2
        const double var_time_independent_potassium_current__i_K1_converted = 0.001 * (-var_hyperpolarising_activated_current__E_K + var_chaste_interface__membrane__V) * HeartConfig::Instance()->GetCapacitance() * var_chaste_interface__extracellular_potassium_concentration__Kc * NV_Ith_S(mParameters, 8) / ((1.0 + exp(0.74867781645490938 + 0.074867781645490947 * var_chaste_interface__membrane__V - 0.074867781645490947 * var_hyperpolarising_activated_current__E_K)) * (10.0 + var_chaste_interface__extracellular_potassium_concentration__Kc) * NV_Ith_S(mParameters, 3)); // uA_per_cm2
        const double var_chaste_interface__i_ionic = ((var_fast_sodium_current__i_Na_converted + var_hyperpolarising_activated_current__i_f_converted + var_second_inward_current__i_si_converted + var_time_dependent_potassium_current__i_K_converted + var_time_independent_potassium_current__i_K1_converted) * NV_Ith_S(mParameters, 3) + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_Na_Ca_exchanger__i_NaCa + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_calcium_background_current__i_Ca_b + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_sodium_background_current__i_Na_b + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_sodium_potassium_pump__i_p) / NV_Ith_S(mParameters, 3); // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt::EvaluateYDerivatives(double var_chaste_interface__environment__time_converted, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -60.0
        double var_chaste_interface__intracellular_calcium_concentration__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 5.8e-05
        double var_chaste_interface__hyperpolarising_activated_current_y_gate__y = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.007
        double var_chaste_interface__time_dependent_potassium_current_x_gate__x = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.54
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.076
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.015
        double var_chaste_interface__second_inward_current_d_gate__d = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.0011
        double var_chaste_interface__second_inward_current_f_gate__f = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.785
        double var_chaste_interface__second_inward_current_f2_gate__f2 = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.785
        double var_chaste_interface__intracellular_sodium_concentration__Nai = NV_Ith_S(rY, 9);
        // Units: millimolar; Initial value: 7.5
        double var_chaste_interface__intracellular_calcium_concentration__Ca_up = NV_Ith_S(rY, 10);
        // Units: millimolar; Initial value: 1.98
        double var_chaste_interface__intracellular_calcium_concentration__Ca_rel = NV_Ith_S(rY, 11);
        // Units: millimolar; Initial value: 0.55
        double var_chaste_interface__intracellular_calcium_concentration__p = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.785
        double var_chaste_interface__extracellular_potassium_concentration__Kc = NV_Ith_S(rY, 13);
        // Units: millimolar; Initial value: 3.0
        double var_chaste_interface__intracellular_potassium_concentration__Ki = NV_Ith_S(rY, 14);
        // Units: millimolar; Initial value: 140.0

        // Lookup table indexing
        const bool _oob_0 = Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        double d_dt_chaste_interface_var_membrane__V;
        const double var_intracellular_calcium_concentration__i_rel = 558.70643418638997 * pow(var_chaste_interface__intracellular_calcium_concentration__Cai, 2.0) * var_chaste_interface__intracellular_calcium_concentration__Ca_rel / (3.9999999999999998e-6 + pow(var_chaste_interface__intracellular_calcium_concentration__Cai, 2.0)); // nanoA
        const double var_intracellular_calcium_concentration__i_tr = 27.935321709319496 * (-var_chaste_interface__intracellular_calcium_concentration__Ca_rel + var_chaste_interface__intracellular_calcium_concentration__Ca_up) * var_chaste_interface__intracellular_calcium_concentration__p; // nanoA
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_rel = 0.00017898487270085565 * var_intracellular_calcium_concentration__i_tr - 0.00017898487270085565 * var_intracellular_calcium_concentration__i_rel; // millimolar / millisecond
        const double var_intracellular_calcium_concentration__i_up = 11174.128683727798 * (5.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_up) * var_chaste_interface__intracellular_calcium_concentration__Cai; // nanoA
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_up = 7.1593949080342261e-5 * var_intracellular_calcium_concentration__i_up - 7.1593949080342261e-5 * var_intracellular_calcium_concentration__i_tr; // millimolar / millisecond
        const double var_hyperpolarising_activated_current__E_K = 26.713760659695652 * log(var_chaste_interface__extracellular_potassium_concentration__Kc / var_chaste_interface__intracellular_potassium_concentration__Ki); // millivolt
        const double var_hyperpolarising_activated_current__E_Na = 26.713760659695652 * log(NV_Ith_S(mParameters, 1) / var_chaste_interface__intracellular_sodium_concentration__Nai); // millivolt
        const double var_Na_Ca_exchanger__i_NaCa = 0.002 * (pow(var_chaste_interface__intracellular_sodium_concentration__Nai, 3.0) * NV_Ith_S(mParameters, 0) * _lt_0_row[0] - pow(NV_Ith_S(mParameters, 1), 3.0) * var_chaste_interface__intracellular_calcium_concentration__Cai * _lt_0_row[1]) / ((1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Cai) * (1.0 + 0.0001 * pow(NV_Ith_S(mParameters, 1), 3.0) * var_chaste_interface__intracellular_calcium_concentration__Cai + 0.0001 * pow(var_chaste_interface__intracellular_sodium_concentration__Nai, 3.0) * NV_Ith_S(mParameters, 0))); // nanoA
        const double var_calcium_background_current__i_Ca_b = 0.01 * var_chaste_interface__membrane__V - 0.13356880329847826 * log(NV_Ith_S(mParameters, 0) / var_chaste_interface__intracellular_calcium_concentration__Cai); // nanoA
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-26.713760659695652 * log((NV_Ith_S(mParameters, 1) + 0.12 * var_chaste_interface__extracellular_potassium_concentration__Kc) / (var_chaste_interface__intracellular_sodium_concentration__Nai + 0.12 * var_chaste_interface__intracellular_potassium_concentration__Ki)) + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 5) * var_chaste_interface__fast_sodium_current_h_gate__h; // nanoA
        const double d_dt_chaste_interface_var_fast_sodium_current_h_gate__h = 0.02 * (1.0 - var_chaste_interface__fast_sodium_current_h_gate__h) * _lt_0_row[7] - 2.0 * var_chaste_interface__fast_sodium_current_h_gate__h / (_lt_0_row[8]); // 1 / millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_m_gate__m = 0.001 * (1.0 - var_chaste_interface__fast_sodium_current_m_gate__m) * _lt_0_row[9] - 8.0 * var_chaste_interface__fast_sodium_current_m_gate__m * _lt_0_row[10]; // 1 / millisecond
        const double var_hyperpolarising_activated_current__i_fK = (-var_hyperpolarising_activated_current__E_K + var_chaste_interface__membrane__V) * var_chaste_interface__extracellular_potassium_concentration__Kc * NV_Ith_S(mParameters, 6) * var_chaste_interface__hyperpolarising_activated_current_y_gate__y / (45.0 + var_chaste_interface__extracellular_potassium_concentration__Kc); // nanoA
        const double var_hyperpolarising_activated_current__i_fNa = (-var_hyperpolarising_activated_current__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__extracellular_potassium_concentration__Kc * NV_Ith_S(mParameters, 7) * var_chaste_interface__hyperpolarising_activated_current_y_gate__y / (45.0 + var_chaste_interface__extracellular_potassium_concentration__Kc); // nanoA
        const double d_dt_chaste_interface_var_hyperpolarising_activated_current_y_gate__y = 0.0001 * (1.0 - var_chaste_interface__hyperpolarising_activated_current_y_gate__y) * _lt_0_row[11] - 0.002 * _lt_0_row[12] * var_chaste_interface__hyperpolarising_activated_current_y_gate__y; // 1 / millisecond
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__p = -0.0050000000000000001 * var_chaste_interface__intracellular_calcium_concentration__p / (_lt_0_row[13]) + 0.00062500000000000001 * (1.0 - var_chaste_interface__intracellular_calcium_concentration__p) * (64.0 + var_chaste_interface__membrane__V) / (_lt_0_row[14]); // 1 / millisecond
        const double d_dt_chaste_interface_var_second_inward_current_d_gate__d = 0.001 * (1.0 - var_chaste_interface__second_inward_current_d_gate__d) * _lt_0_row[15] - 0.001 * _lt_0_row[16] * var_chaste_interface__second_inward_current_d_gate__d; // 1 / millisecond
        const double d_dt_chaste_interface_var_second_inward_current_f2_gate__f2 = 0.01 - 0.001 * (10.0 + 20000.0 * var_chaste_interface__intracellular_calcium_concentration__Cai) * var_chaste_interface__second_inward_current_f2_gate__f2; // 1 / millisecond
        const double var_second_inward_current__i_siCa = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 1.3356880330661625e-6) ? (374338.90820464725 * (-49.999998664311967 + var_chaste_interface__membrane__V) * (2.0000000001218549e-7 * (var_chaste_interface__intracellular_calcium_concentration__Cai * exp(3.7433890822745473) - NV_Ith_S(mParameters, 0) * exp(1.0000000000609274e-7)) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (1.0 - exp(1.0000000000609274e-7)) + 2.0000000001218549e-7 * (var_chaste_interface__intracellular_calcium_concentration__Cai * exp(3.7433890822745473) - NV_Ith_S(mParameters, 0) * exp(-1.0000000000609274e-7)) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (1.0 - exp(-1.0000000000609274e-7))) - 2.0000000001218549e-7 * (var_chaste_interface__intracellular_calcium_concentration__Cai * exp(3.7433890822745473) - NV_Ith_S(mParameters, 0) * exp(1.0000000000609274e-7)) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (1.0 - exp(1.0000000000609274e-7))) : (0.14973556329098189 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_calcium_concentration__Cai * exp(3.7433890822745473) - NV_Ith_S(mParameters, 0) * _lt_0_row[4]) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (_lt_0_row[5]))); // nanoA
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Cai = 3.5796974540171135e-6 * var_intracellular_calcium_concentration__i_rel + 7.1593949080342271e-6 * var_Na_Ca_exchanger__i_NaCa - 3.5796974540171135e-6 * var_calcium_background_current__i_Ca_b - 3.5796974540171135e-6 * var_intracellular_calcium_concentration__i_up - 3.5796974540171135e-6 * var_second_inward_current__i_siCa; // millimolar / millisecond
        const double var_second_inward_current__i_siK = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760661323249e-6) ? (187169.45410232362 * (-49.999997328623934 + var_chaste_interface__membrane__V) * (1.0000000000609275e-9 * (var_chaste_interface__intracellular_potassium_concentration__Ki * exp(1.8716945411372736) - var_chaste_interface__extracellular_potassium_concentration__Kc * exp(1.0000000000609274e-7)) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (1.0 - exp(1.0000000000609274e-7)) + 1.0000000000609275e-9 * (var_chaste_interface__intracellular_potassium_concentration__Ki * exp(1.8716945411372736) - var_chaste_interface__extracellular_potassium_concentration__Kc * exp(-1.0000000000609274e-7)) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (1.0 - exp(-1.0000000000609274e-7))) - 1.0000000000609275e-9 * (var_chaste_interface__intracellular_potassium_concentration__Ki * exp(1.8716945411372736) - var_chaste_interface__extracellular_potassium_concentration__Kc * exp(1.0000000000609274e-7)) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (1.0 - exp(1.0000000000609274e-7))) : (0.00037433890822745472 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_potassium_concentration__Ki * exp(1.8716945411372736) - var_chaste_interface__extracellular_potassium_concentration__Kc * _lt_0_row[2]) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_second_inward_current__i_siNa = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760661323249e-6) ? (187169.45410232362 * (-49.999997328623934 + var_chaste_interface__membrane__V) * (1.0000000000609275e-9 * (var_chaste_interface__intracellular_sodium_concentration__Nai * exp(1.8716945411372736) - NV_Ith_S(mParameters, 1) * exp(1.0000000000609274e-7)) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (1.0 - exp(1.0000000000609274e-7)) + 1.0000000000609275e-9 * (var_chaste_interface__intracellular_sodium_concentration__Nai * exp(1.8716945411372736) - NV_Ith_S(mParameters, 1) * exp(-1.0000000000609274e-7)) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (1.0 - exp(-1.0000000000609274e-7))) - 1.0000000000609275e-9 * (var_chaste_interface__intracellular_sodium_concentration__Nai * exp(1.8716945411372736) - NV_Ith_S(mParameters, 1) * exp(1.0000000000609274e-7)) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (1.0 - exp(1.0000000000609274e-7))) : (0.00037433890822745472 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_sodium_concentration__Nai * exp(1.8716945411372736) - NV_Ith_S(mParameters, 1) * _lt_0_row[2]) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double d_dt_chaste_interface_var_second_inward_current_f_gate__f = -0.050000000000000003 * var_chaste_interface__second_inward_current_f_gate__f / (_lt_0_row[17]) + 0.0062500000000000003 * (1.0 - var_chaste_interface__second_inward_current_f_gate__f) * (34.0 + var_chaste_interface__membrane__V) / (_lt_0_row[18]); // 1 / millisecond
        const double var_sodium_background_current__i_Na_b = 0.070000000000000007 * var_chaste_interface__membrane__V - 0.070000000000000007 * var_hyperpolarising_activated_current__E_Na; // nanoA
        const double var_sodium_potassium_pump__i_p = 50.0 * var_chaste_interface__extracellular_potassium_concentration__Kc * var_chaste_interface__intracellular_sodium_concentration__Nai / ((1.0 + var_chaste_interface__extracellular_potassium_concentration__Kc) * (40.0 + var_chaste_interface__intracellular_sodium_concentration__Nai)); // nanoA
        const double d_dt_chaste_interface_var_intracellular_sodium_concentration__Nai = -2.147818472410268e-5 * var_Na_Ca_exchanger__i_NaCa - 2.147818472410268e-5 * var_sodium_potassium_pump__i_p - 7.1593949080342271e-6 * var_fast_sodium_current__i_Na - 7.1593949080342271e-6 * var_hyperpolarising_activated_current__i_fNa - 7.1593949080342271e-6 * var_second_inward_current__i_siNa - 7.1593949080342271e-6 * var_sodium_background_current__i_Na_b; // millimolar / millisecond
        const double var_time_dependent_potassium_current__i_K = 0.0071428571428571426 * (-var_chaste_interface__extracellular_potassium_concentration__Kc * _lt_0_row[6] + var_chaste_interface__intracellular_potassium_concentration__Ki) * NV_Ith_S(mParameters, 4) * var_chaste_interface__time_dependent_potassium_current_x_gate__x; // nanoA
        const double d_dt_chaste_interface_var_time_dependent_potassium_current_x_gate__x = 0.001 * (1.0 - var_chaste_interface__time_dependent_potassium_current_x_gate__x) * _lt_0_row[19] - 0.001 * _lt_0_row[20] * var_chaste_interface__time_dependent_potassium_current_x_gate__x; // 1 / millisecond
        const double var_time_independent_potassium_current__i_K1 = (-var_hyperpolarising_activated_current__E_K + var_chaste_interface__membrane__V) * var_chaste_interface__extracellular_potassium_concentration__Kc * NV_Ith_S(mParameters, 8) / ((1.0 + exp(0.74867781645490938 + 0.074867781645490947 * var_chaste_interface__membrane__V - 0.074867781645490947 * var_hyperpolarising_activated_current__E_K)) * (10.0 + var_chaste_interface__extracellular_potassium_concentration__Kc)); // nanoA
        const double var_extracellular_potassium_concentration__i_mK = -2.0 * var_sodium_potassium_pump__i_p + var_hyperpolarising_activated_current__i_fK + var_second_inward_current__i_siK + var_time_dependent_potassium_current__i_K + var_time_independent_potassium_current__i_K1; // nanoA
        const double d_dt_chaste_interface_var_extracellular_potassium_concentration__Kc = 0.0030000000000000001 + 6.4466434341209093e-5 * var_extracellular_potassium_concentration__i_mK - 0.001 * var_chaste_interface__extracellular_potassium_concentration__Kc; // millimolar / millisecond
        const double d_dt_chaste_interface_var_intracellular_potassium_concentration__Ki = -7.1593949080342271e-6 * var_extracellular_potassium_concentration__i_mK; // millimolar / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_membrane__V = 0.0;
        }
        else
        {
            d_dt_chaste_interface_var_membrane__V = 0.001 * (-var_Na_Ca_exchanger__i_NaCa - var_calcium_background_current__i_Ca_b - var_fast_sodium_current__i_Na - var_hyperpolarising_activated_current__i_fK - var_hyperpolarising_activated_current__i_fNa - var_second_inward_current__i_siCa - var_second_inward_current__i_siK - var_second_inward_current__i_siNa - var_sodium_background_current__i_Na_b - var_sodium_potassium_pump__i_p - var_time_dependent_potassium_current__i_K - var_time_independent_potassium_current__i_K1) / NV_Ith_S(mParameters, 3); // millivolt / millisecond
        }
        
        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_membrane__V;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_intracellular_calcium_concentration__Cai;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_hyperpolarising_activated_current_y_gate__y;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_time_dependent_potassium_current_x_gate__x;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_fast_sodium_current_m_gate__m;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_fast_sodium_current_h_gate__h;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_second_inward_current_d_gate__d;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_second_inward_current_f_gate__f;
        NV_Ith_S(rDY,8) = d_dt_chaste_interface_var_second_inward_current_f2_gate__f2;
        NV_Ith_S(rDY,9) = d_dt_chaste_interface_var_intracellular_sodium_concentration__Nai;
        NV_Ith_S(rDY,10) = d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_up;
        NV_Ith_S(rDY,11) = d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_rel;
        NV_Ith_S(rDY,12) = d_dt_chaste_interface_var_intracellular_calcium_concentration__p;
        NV_Ith_S(rDY,13) = d_dt_chaste_interface_var_extracellular_potassium_concentration__Kc;
        NV_Ith_S(rDY,14) = d_dt_chaste_interface_var_intracellular_potassium_concentration__Ki;
    }

    void Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time_converted, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -60.0
        double var_chaste_interface__intracellular_calcium_concentration__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 5.8e-05
        double var_chaste_interface__hyperpolarising_activated_current_y_gate__y = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.007
        double var_chaste_interface__time_dependent_potassium_current_x_gate__x = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.54
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.076
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.015
        double var_chaste_interface__second_inward_current_d_gate__d = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.0011
        double var_chaste_interface__second_inward_current_f_gate__f = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.785
        double var_chaste_interface__second_inward_current_f2_gate__f2 = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.785
        double var_chaste_interface__intracellular_sodium_concentration__Nai = NV_Ith_S(rY, 9);
        // Units: millimolar; Initial value: 7.5
        double var_chaste_interface__intracellular_calcium_concentration__Ca_up = NV_Ith_S(rY, 10);
        // Units: millimolar; Initial value: 1.98
        double var_chaste_interface__intracellular_calcium_concentration__Ca_rel = NV_Ith_S(rY, 11);
        // Units: millimolar; Initial value: 0.55
        double var_chaste_interface__intracellular_calcium_concentration__p = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.785
        double var_chaste_interface__extracellular_potassium_concentration__Kc = NV_Ith_S(rY, 13);
        // Units: millimolar; Initial value: 3.0
        double var_chaste_interface__intracellular_potassium_concentration__Ki = NV_Ith_S(rY, 14);
        // Units: millimolar; Initial value: 140.0
        
        // Lookup table indexing
        const bool _oob_0 = Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);
const double var_x0 = exp(1.0000000000609274e-7);
        const double var_x1 = 1 / (1.0 - var_x0);
        const double var_x2 = exp(3.7433890822745473);
        const double var_x3 = var_x2 * var_chaste_interface__intracellular_calcium_concentration__Cai;
        const double var_x4 = var_x1 * (var_x3 - var_x0 * NV_Ith_S(mParameters, 0));
        const double var_x5 = var_x4 * var_chaste_interface__second_inward_current_d_gate__d;
        const double var_x6 = NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_f2_gate__f2;
        const double var_x7 = var_x6 * var_chaste_interface__second_inward_current_f_gate__f;
        const double var_x8 = 0.074867781645490947 * var_x7;
        const double var_x9 = exp(-1.0000000000609274e-7);
        const double var_x10 = 1 / (1.0 - var_x9);
        const double var_x11 = var_x10 * (var_x3 - var_x9 * NV_Ith_S(mParameters, 0));
        const double var_x12 = var_x11 * var_chaste_interface__second_inward_current_d_gate__d;
        const double var_x13 = -50.0 + var_chaste_interface__membrane__V;
        const double var_x14 = fabs(var_x13);
        const double var_x15 = var_x14 < 1.3356880330661625e-6;
        const double var_x16 = var_x7 * var_chaste_interface__second_inward_current_d_gate__d;
        const double var_x17 = _lt_0_row[4];
        const double var_x18 = 1.0 - var_x17;
        const double var_x19 = 1 / var_x18;
        const double var_x20 = var_x17 * NV_Ith_S(mParameters, 0);
        const double var_x21 = var_x3 - var_x20;
        const double var_x22 = 0.14973556329098189 * var_x19 * var_x21;
        const double var_x23 = var_x13 * var_x16;
        const double var_x24 = var_x19 * var_x23;
        const double var_x25 = ((var_x15) ? (var_x12 * var_x8 + var_x5 * var_x8) : (var_x16 * var_x22 + 0.011210369457033822 * var_x20 * var_x24 - 0.011210369457033822 * var_x17 * var_x21 * var_x23 / pow(var_x18, 2)));
        const double var_x26 = exp(1.8716945411372736);
        const double var_x27 = var_x26 * var_chaste_interface__intracellular_potassium_concentration__Ki;
        const double var_x28 = var_x27 - var_x0 * var_chaste_interface__extracellular_potassium_concentration__Kc;
        const double var_x29 = var_x1 * var_x28;
        const double var_x30 = var_x29 * var_chaste_interface__second_inward_current_d_gate__d;
        const double var_x31 = var_x27 - var_x9 * var_chaste_interface__extracellular_potassium_concentration__Kc;
        const double var_x32 = 0.00018716945411372736 * var_x16;
        const double var_x33 = var_x10 * var_x32;
        const double var_x34 = var_x14 < 2.6713760661323249e-6;
        const double var_x35 = _lt_0_row[2];
        const double var_x36 = 1.0 - var_x35;
        const double var_x37 = 1 / var_x36;
        const double var_x38 = 0.00037433890822745472 * var_x37;
        const double var_x39 = var_x35 * var_chaste_interface__extracellular_potassium_concentration__Kc;
        const double var_x40 = var_x27 - var_x39;
        const double var_x41 = var_x16 * var_x40;
        const double var_x42 = 1.4012961821292276e-5 * var_x23;
        const double var_x43 = var_x37 * var_x42;
        const double var_x44 = var_x35 / pow(var_x36, 2);
        const double var_x45 = ((var_x34) ? (var_x31 * var_x33 + 0.00018716945411372736 * var_x30 * var_x7) : (var_x38 * var_x41 + var_x39 * var_x43 - 1.4012961821292276e-5 * var_x13 * var_x41 * var_x44));
        const double var_x46 = var_x26 * var_chaste_interface__intracellular_sodium_concentration__Nai;
        const double var_x47 = var_x46 - var_x0 * NV_Ith_S(mParameters, 1);
        const double var_x48 = var_x1 * var_x47;
        const double var_x49 = var_x46 - var_x9 * NV_Ith_S(mParameters, 1);
        const double var_x50 = var_x35 * NV_Ith_S(mParameters, 1);
        const double var_x51 = var_x46 - var_x50;
        const double var_x52 = var_x38 * var_x51;
        const double var_x53 = ((var_x34) ? (var_x32 * var_x48 + var_x33 * var_x49) : (var_x16 * var_x52 + var_x43 * var_x50 - var_x42 * var_x44 * var_x51));
        const double var_x54 = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * NV_Ith_S(mParameters, 5);
        const double var_x55 = var_x54 * var_chaste_interface__fast_sodium_current_h_gate__h;
        const double var_x56 = 0.018716945411372737 * var_chaste_interface__membrane__V;
        const double var_x57 = exp(-var_x56);
        const double var_x58 = pow(NV_Ith_S(mParameters, 1), 3.0);
        const double var_x59 = var_x58 * var_chaste_interface__intracellular_calcium_concentration__Cai;
        const double var_x60 = var_x57 * var_x59;
        const double var_x61 = exp(var_x56);
        const double var_x62 = pow(var_chaste_interface__intracellular_sodium_concentration__Nai, 3.0) * NV_Ith_S(mParameters, 0);
        const double var_x63 = var_x61 * var_x62;
        const double var_x64 = 1 / (1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Cai);
        const double var_x65 = 1.0 + 0.0001 * var_x59 + 0.0001 * var_x62;
        const double var_x66 = 1 / var_x65;
        const double var_x67 = var_x64 * var_x66;
        const double var_x68 = var_x67 * (0.018716945411372737 * var_x60 + 0.018716945411372737 * var_x63);
        const double var_x69 = var_chaste_interface__extracellular_potassium_concentration__Kc / var_chaste_interface__intracellular_potassium_concentration__Ki;
        const double var_x70 = log(var_x69);
        const double var_x71 = exp(0.74867781645490938 + 0.074867781645490947 * var_chaste_interface__membrane__V - 2.0 * var_x70);
        const double var_x72 = 1.0 + var_x71;
        const double var_x73 = 1 / var_x72;
        const double var_x74 = NV_Ith_S(mParameters, 8) / (10.0 + var_chaste_interface__extracellular_potassium_concentration__Kc);
        const double var_x75 = var_x73 * var_x74;
        const double var_x76 = var_x75 * var_chaste_interface__extracellular_potassium_concentration__Kc;
        const double var_x77 = 1 / (45.0 + var_chaste_interface__extracellular_potassium_concentration__Kc);
        const double var_x78 = var_x77 * var_chaste_interface__extracellular_potassium_concentration__Kc;
        const double var_x79 = var_x78 * var_chaste_interface__hyperpolarising_activated_current_y_gate__y;
        const double var_x80 = var_x79 * NV_Ith_S(mParameters, 6);
        const double var_x81 = var_x79 * NV_Ith_S(mParameters, 7);
        const double var_x82 = _lt_0_row[6];
        const double var_x83 = var_x82 * var_chaste_interface__extracellular_potassium_concentration__Kc;
        const double var_x84 = NV_Ith_S(mParameters, 4) * var_chaste_interface__time_dependent_potassium_current_x_gate__x;
        const double var_x85 = var_x83 * var_x84;
        const double var_x86 = -26.713760659695652 * var_x70 + var_chaste_interface__membrane__V;
        const double var_x87 = var_x86 * var_chaste_interface__extracellular_potassium_concentration__Kc;
        const double var_x88 = var_x71 * var_x74 / pow(var_x72, 2);
        const double var_x89 = var_x87 * var_x88;
        const double var_x90 = 1 / NV_Ith_S(mParameters, 3);
        const double var_x91 = 0.001 * var_x90;
        const double var_x92 = -18716944.910232361 + 374338.90820464725 * var_chaste_interface__membrane__V;
        const double var_x93 = 2.0000000001218549e-7 * var_x7;
        const double var_x94 = var_x2 * var_x93 * var_chaste_interface__second_inward_current_d_gate__d;
        const double var_x95 = var_x1 * var_x94;
        const double var_x96 = ((var_x15) ? (-var_x95 + var_x92 * (var_x95 + var_x10 * var_x94)) : (0.14973556329098189 * var_x2 * var_x24));
        const double var_x97 = 1 / var_chaste_interface__intracellular_calcium_concentration__Cai;
        const double var_x98 = var_x63 - var_x60;
        const double var_x99 = var_x66 * var_x98 / pow((0.0068999999999999999 + var_chaste_interface__intracellular_calcium_concentration__Cai), 2);
        const double var_x100 = var_x57 * var_x58 * var_x67;
        const double var_x101 = var_x64 * var_x98 / pow(var_x65, 2);
        const double var_x102 = var_x101 * var_x58;
        const double var_x103 = var_x86 * NV_Ith_S(mParameters, 6);
        const double var_x104 = var_x103 * var_x78;
        const double var_x105 = 1 / var_chaste_interface__intracellular_sodium_concentration__Nai;
        const double var_x106 = (-26.713760659695652 * log(var_x105 * NV_Ith_S(mParameters, 1)) + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 7);
        const double var_x107 = var_x106 * var_x78;
        const double var_x108 = 1 / (var_chaste_interface__intracellular_sodium_concentration__Nai + 0.12 * var_chaste_interface__intracellular_potassium_concentration__Ki);
        const double var_x109 = NV_Ith_S(mParameters, 1) + 0.12 * var_chaste_interface__extracellular_potassium_concentration__Kc;
        const double var_x110 = -26.713760659695652 * log(var_x108 * var_x109) + var_chaste_interface__membrane__V;
        const double var_x111 = var_x110 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 2) * NV_Ith_S(mParameters, 5) * var_chaste_interface__fast_sodium_current_h_gate__h;
        const double var_x112 = var_x110 * var_x54;
        const double var_x113 = -9358472.2051161807 + 187169.45410232362 * var_chaste_interface__membrane__V;
        const double var_x114 = 1.0000000000609275e-9 * var_x7;
        const double var_x115 = var_x1 * var_x114;
        const double var_x116 = var_x115 * var_x28;
        const double var_x117 = var_x10 * var_x114;
        const double var_x118 = var_x13 * var_x7;
        const double var_x119 = var_x38 * var_x40;
        const double var_x120 = ((var_x34) ? (-var_x116 + var_x113 * (var_x116 + var_x117 * var_x31)) : (var_x118 * var_x119));
        const double var_x121 = var_x115 * var_x47;
        const double var_x122 = ((var_x34) ? (-var_x121 + var_x113 * (var_x121 + var_x117 * var_x49)) : (var_x118 * var_x52));
        const double var_x123 = var_x4 * var_x93;
        const double var_x124 = ((var_x15) ? (-var_x123 + var_x92 * (var_x123 + var_x11 * var_x93)) : (var_x118 * var_x22));
        const double var_x125 = var_x6 * var_chaste_interface__second_inward_current_d_gate__d;
        const double var_x126 = 1.0000000000609275e-9 * var_x125;
        const double var_x127 = var_x126 * var_x29;
        const double var_x128 = var_x10 * var_x126;
        const double var_x129 = var_x125 * var_x13;
        const double var_x130 = ((var_x34) ? (-var_x127 + var_x113 * (var_x127 + var_x128 * var_x31)) : (var_x119 * var_x129));
        const double var_x131 = var_x126 * var_x48;
        const double var_x132 = ((var_x34) ? (-var_x131 + var_x113 * (var_x131 + var_x128 * var_x49)) : (var_x129 * var_x52));
        const double var_x133 = 2.0000000001218549e-7 * var_x125;
        const double var_x134 = var_x133 * var_x4;
        const double var_x135 = ((var_x15) ? (-var_x134 + var_x92 * (var_x134 + var_x11 * var_x133)) : (var_x129 * var_x22));
        const double var_x136 = NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_f_gate__f;
        const double var_x137 = 1.0000000000609275e-9 * var_x136;
        const double var_x138 = var_x137 * var_x30;
        const double var_x139 = var_x137 * var_chaste_interface__second_inward_current_d_gate__d;
        const double var_x140 = var_x10 * var_x139;
        const double var_x141 = var_x13 * var_x136 * var_chaste_interface__second_inward_current_d_gate__d;
        const double var_x142 = ((var_x34) ? (-var_x138 + var_x113 * (var_x138 + var_x140 * var_x31)) : (var_x119 * var_x141));
        const double var_x143 = var_x139 * var_x48;
        const double var_x144 = ((var_x34) ? (-var_x143 + var_x113 * (var_x143 + var_x140 * var_x49)) : (var_x141 * var_x52));
        const double var_x145 = 2.0000000001218549e-7 * var_x136;
        const double var_x146 = var_x145 * var_x5;
        const double var_x147 = ((var_x15) ? (-var_x146 + var_x92 * (var_x146 + var_x12 * var_x145)) : (var_x141 * var_x22));
        const double var_x148 = var_x26 * var_chaste_interface__second_inward_current_d_gate__d;
        const double var_x149 = var_x115 * var_x148;
        const double var_x150 = var_x23 * var_x38;
        const double var_x151 = ((var_x34) ? (-var_x149 + var_x113 * (var_x149 + var_x117 * var_x148)) : (var_x150 * var_x26));
        const double var_x152 = -var_x151;
        const double var_x153 = 1.0 + var_chaste_interface__extracellular_potassium_concentration__Kc;
        const double var_x154 = 1 / var_x153;
        const double var_x155 = 1 / (40.0 + var_chaste_interface__intracellular_sodium_concentration__Nai);
        const double var_x156 = var_x154 * var_x155;
        const double var_x157 = 50.0 * var_x156;
        const double var_x158 = var_chaste_interface__extracellular_potassium_concentration__Kc * var_chaste_interface__intracellular_sodium_concentration__Nai;
        const double var_x159 = var_x154 * var_x158 / pow((1 + 0.025000000000000001 * var_chaste_interface__intracellular_sodium_concentration__Nai), 2);
        const double var_x160 = var_x108 * var_x55;
        const double var_x161 = pow(var_chaste_interface__intracellular_sodium_concentration__Nai, 2.0) * NV_Ith_S(mParameters, 0);
        const double var_x162 = var_x101 * var_x161;
        const double var_x163 = var_x161 * var_x61 * var_x67;
        const double var_x164 = var_x105 * var_x81;
        const double var_x165 = var_x0 * var_x115 * var_chaste_interface__second_inward_current_d_gate__d;
        const double var_x166 = ((var_x34) ? (var_x165 + var_x113 * (-var_x165 - var_x117 * var_x9 * var_chaste_interface__second_inward_current_d_gate__d)) : (-var_x150 * var_x35));
        const double var_x167 = 26.713760659695652 * var_x75;
        const double var_x168 = var_x77 * var_chaste_interface__hyperpolarising_activated_current_y_gate__y;
        const double var_x169 = var_x168 * NV_Ith_S(mParameters, 6);
        const double var_x170 = 26.713760659695652 * var_x169;
        const double var_x171 = 0.0071428571428571426 * var_x84;
        const double var_x172 = var_x75 * var_x86;
        const double var_x173 = var_x103 * var_x168;
        const double var_x174 = var_x106 * var_x168;
        const double var_x175 = var_x155 * var_x158 / pow(var_x153, 2);
        const double var_x176 = var_x55 / var_x109;
        const double var_x177 = var_chaste_interface__extracellular_potassium_concentration__Kc * var_chaste_interface__hyperpolarising_activated_current_y_gate__y / pow((1 + 0.022222222222222223 * var_chaste_interface__extracellular_potassium_concentration__Kc), 2);
        const double var_x178 = 0.00049382716049382717 * var_x177;
        const double var_x179 = var_x73 * var_x87 * NV_Ith_S(mParameters, 8) / pow((1 + 0.10000000000000001 * var_chaste_interface__extracellular_potassium_concentration__Kc), 2);
        const double var_x180 = var_x86 * var_x88;
        const double var_x181 = 2.0 * var_x180;
        const double var_x182 = 0.0040000000000000001 * var_chaste_interface__intracellular_calcium_concentration__Ca_rel;
        const double var_x183 = pow(var_chaste_interface__intracellular_calcium_concentration__Cai, 2.0);
        const double var_x184 = 3.9999999999999998e-6 + var_x183;
        const double var_x185 = 1 / var_x184;
        const double var_x186 = var_x185 * pow(var_chaste_interface__intracellular_calcium_concentration__Cai, 1.0);
        const double var_x187 = pow(var_chaste_interface__intracellular_calcium_concentration__Cai, 3.0) / pow(var_x184, 2);
        const double var_x188 = var_x183 * var_x185;
        const double var_x189 = 1 / (1.0 - exp(1.0000000116860974e-7));
        const double var_x190 = 1 / (1.0 - exp(-9.999999832643881e-8));
        const double var_x191 = _lt_0_row[11];
        const double var_x192 = -0.067000000000000004 * var_x191 * (0.0001 - 0.0001 * var_chaste_interface__hyperpolarising_activated_current_y_gate__y);
        const double var_x193 = 52.0 + var_chaste_interface__membrane__V;
        const double var_x194 = fabs(var_x193) < 4.9999999873762135e-7;
        const double var_x195 = exp(-10.4 - 0.20000000000000001 * var_chaste_interface__membrane__V);
        const double var_x196 = 1.0 - var_x195;
        const double var_x197 = 0.002 / var_x196;
        const double var_x198 = -0.0001 * var_x191;
        const double var_x199 = 1 / (1.0 - exp(9.9999999747524276e-8));
        const double var_x200 = 1 / (1.0 - exp(-9.9999999747524276e-8));
        const double var_x201 = 1 / (-1.0 + exp(9.9999999984371854e-8));
        const double var_x202 = 1 / (-1.0 + exp(-9.9999999984371854e-8));
        const double var_x203 = (-8.8999999999999995e-5 * var_x201 - 8.8999999999999995e-5 * var_x202) * var_chaste_interface__time_dependent_potassium_current_x_gate__x;
        const double var_x204 = 22.0 + var_chaste_interface__membrane__V;
        const double var_x205 = fabs(var_x204);
        const double var_x206 = var_x205 < 4.9999999873762135e-7;
        const double var_x207 = 1.0 - var_chaste_interface__time_dependent_potassium_current_x_gate__x;
        const double var_x208 = exp(-4.4000000000000004 - 0.20000000000000001 * var_chaste_interface__membrane__V);
        const double var_x209 = 1.0 - var_x208;
        const double var_x210 = 0.00050000000000000001 / var_x209;
        const double var_x211 = var_x207 * var_x210 - 0.0001 * var_x204 * var_x207 * var_x208 / pow(var_x209, 2);
        const double var_x212 = var_x205 < 1.4999999997655777e-6;
        const double var_x213 = exp(1.4666666666666666 + 0.066666666666666666 * var_chaste_interface__membrane__V);
        const double var_x214 = -1.0 + var_x213;
        const double var_x215 = 0.00017799999999999999 / var_x214;
        const double var_x216 = -2.6699999995827283e-10 * var_x201 + 333.33333338542718 * (21.9999985 + var_chaste_interface__membrane__V) * (-2.6699999995827282e-7 * var_x201 - 2.6699999995827282e-7 * var_x202);
        const double var_x217 = -var_x204 * var_x210;
        const double var_x218 = 1 / (1.0 - exp(-9.9999999747524276e-8));
        const double var_x219 = 1 / (1.0 - exp(1.0000000045806701e-7));
        const double var_x220 = _lt_0_row[10];
        const double var_x221 = 0.44800000000000001 * var_x220 * var_chaste_interface__fast_sodium_current_m_gate__m;
        const double var_x222 = 41.0 + var_chaste_interface__membrane__V;
        const double var_x223 = fabs(var_x222) < 1.0000000010279564e-6;
        const double var_x224 = 1.0 - var_chaste_interface__fast_sodium_current_m_gate__m;
        const double var_x225 = -0.10000000000000001 * var_chaste_interface__membrane__V;
        const double var_x226 = exp(-4.1000000000000005 + var_x225);
        const double var_x227 = 1.0 - var_x226;
        const double var_x228 = 0.20000000000000001 / var_x227;
        const double var_x229 = -8.0 * var_x220;
        const double var_x230 = _lt_0_row[7];
        const double var_x231 = exp(-7.5 + var_x225);
        const double var_x232 = 1 / (1.0 - exp(1.0000000028043132e-7));
        const double var_x233 = 1 / (1.0 - exp(-1.0000000028043132e-7));
        const double var_x234 = 1 / (-1.0 + exp(1.0000000010279564e-7));
        const double var_x235 = 1 / (-1.0 + exp(-1.0000000010279564e-7));
        const double var_x236 = (-0.0060000000000000001 * var_x234 - 0.0060000000000000001 * var_x235) * var_chaste_interface__second_inward_current_d_gate__d;
        const double var_x237 = 19.0 + var_chaste_interface__membrane__V;
        const double var_x238 = fabs(var_x237);
        const double var_x239 = var_x238 < 4.0000000112172529e-7;
        const double var_x240 = 1.0 - var_chaste_interface__second_inward_current_d_gate__d;
        const double var_x241 = 0.25 * var_chaste_interface__membrane__V;
        const double var_x242 = -var_x241;
        const double var_x243 = exp(-4.75 + var_x242);
        const double var_x244 = 1.0 - var_x243;
        const double var_x245 = 0.029999999999999999 / var_x244;
        const double var_x246 = var_x240 * var_x245 - 0.0074999999999999997 * var_x237 * var_x240 * var_x243 / pow(var_x244, 2);
        const double var_x247 = var_x238 < 1.0000000010279564e-6;
        const double var_x248 = exp(1.8999999999999999 + 0.10000000000000001 * var_chaste_interface__membrane__V);
        const double var_x249 = -1.0 + var_x248;
        const double var_x250 = 0.012 / var_x249;
        const double var_x251 = -1.2000000012335476e-8 * var_x234 + 499.99999948602181 * (18.999998999999999 + var_chaste_interface__membrane__V) * (-1.2000000012335477e-5 * var_x234 - 1.2000000012335477e-5 * var_x235);
        const double var_x252 = -var_x237 * var_x245;
        const double var_x253 = 1.0 - var_chaste_interface__second_inward_current_f_gate__f;
        const double var_x254 = exp(8.5 + var_x241);
        const double var_x255 = -1.0 + var_x254;
        const double var_x256 = 0.0062500000000000003 / var_x255;
        const double var_x257 = exp(-8.5 + var_x242);
        const double var_x258 = 1.0 + var_x257;
        const double var_x259 = 34.0 + var_chaste_interface__membrane__V;
        const double var_x260 = -7.1593949080342271e-6 * var_x151;
        const double var_x261 = 0.0010739092362051341 * var_x156;
        const double var_x262 = 3.5355036582885069e-9 * var_x177;
        const double var_x263 = 0.002 * var_chaste_interface__intracellular_calcium_concentration__p;
        const double var_x264 = 0.19999999999999998 * var_chaste_interface__intracellular_calcium_concentration__Ca_rel;
        const double var_x265 = 0.0050000000000000001 * var_chaste_interface__intracellular_calcium_concentration__p;
        const double var_x266 = 1.0 - var_chaste_interface__intracellular_calcium_concentration__p;
        const double var_x267 = exp(16.0 + var_x241);
        const double var_x268 = -1.0 + var_x267;
        const double var_x269 = 0.00062500000000000001 / var_x268;
        const double var_x270 = exp(-16.0 + var_x242);
        const double var_x271 = 1.0 + var_x270;
        const double var_x272 = 64.0 + var_chaste_interface__membrane__V;
        const double var_x273 = 0.0064466434341209095 * var_x156;
        const double var_x274 = 0.0017221408975750443 * var_x75;
        const double var_x275 = 0.0017221408975750443 * var_x169;
        const double var_x276 = 4.6047453100863642e-7 * var_x84;
        const double var_x277 = 0.00012893286868241819 * var_x180;
        const double var_x278 = 0.00071593949080342272 * var_x156;
        const double var_x279 = 5.1138535057387335e-8 * var_x84;
        const double var_x280 = 0.00019125436204147007 * var_x75;
        const double var_x281 = 0.00019125436204147007 * var_x169;
        const double var_x282 = 1.4318789816068454e-5 * var_x180;
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = mSetVoltageDerivativeToZero ? 0.0 : (var_x91 * (-0.080000000000000002 - var_x25 - var_x45 - var_x53 - var_x55 - var_x76 - var_x80 - var_x81 + 0.074867781645490947 * var_x89 - 0.002 * var_x68 - 0.00026738493444818193 * var_x85));
        IJth(rJacobian, 1, 0) = -3.5796974540171133e-8 + 1.4318789816068453e-8 * var_x68 - 3.5796974540171135e-6 * var_x25;
        IJth(rJacobian, 2, 0) = ((var_x194) ? (var_x192 + (-0.0010000000142108547 * var_x189 - 0.00099999998578914531 * var_x190) * var_chaste_interface__hyperpolarising_activated_current_y_gate__y) : (var_x192 - var_x197 * var_chaste_interface__hyperpolarising_activated_current_y_gate__y + 0.00040000000000000002 * var_x193 * var_x195 * var_chaste_interface__hyperpolarising_activated_current_y_gate__y / pow(var_x196, 2)));
        IJth(rJacobian, 3, 0) = ((var_x206) ? (var_x203 + (0.001 - 0.001 * var_chaste_interface__time_dependent_potassium_current_x_gate__x) * (0.25 * var_x199 + 0.25 * var_x200)) : ((var_x212) ? (var_x203 + var_x211) : (var_x211 - var_x215 * var_chaste_interface__time_dependent_potassium_current_x_gate__x + 1.1866666666666666e-5 * var_x204 * var_x213 * var_chaste_interface__time_dependent_potassium_current_x_gate__x / pow(var_x214, 2))));
        IJth(rJacobian, 4, 0) = ((var_x223) ? (var_x221 + (0.001 - 0.001 * var_chaste_interface__fast_sodium_current_m_gate__m) * (99.999999644728632 * var_x218 + 100.00000035527137 * var_x219)) : (var_x221 + var_x224 * var_x228 - 0.02 * var_x222 * var_x224 * var_x226 / pow(var_x227, 2)));
        IJth(rJacobian, 5, 0) = -0.125 * var_x230 * (0.02 - 0.02 * var_chaste_interface__fast_sodium_current_h_gate__h) - 0.00062500000000000001 * var_x231 * var_chaste_interface__fast_sodium_current_h_gate__h / pow((0.0031250000000000002 + var_x231), 2);
        IJth(rJacobian, 6, 0) = ((var_x239) ? (var_x236 + (0.001 - 0.001 * var_chaste_interface__second_inward_current_d_gate__d) * (15.0 * var_x232 + 15.0 * var_x233)) : ((var_x247) ? (var_x236 + var_x246) : (var_x246 - var_x250 * var_chaste_interface__second_inward_current_d_gate__d + 0.0011999999999999999 * var_x237 * var_x248 * var_chaste_interface__second_inward_current_d_gate__d / pow(var_x249, 2))));
        IJth(rJacobian, 7, 0) = var_x253 * var_x256 - 0.012500000000000001 * var_x257 * var_chaste_interface__second_inward_current_f_gate__f / pow(var_x258, 2) - 0.0015625000000000001 * var_x253 * var_x254 * var_x259 / pow(var_x255, 2);
        IJth(rJacobian, 9, 0) = -5.0115764356239594e-7 - 4.2956369448205359e-8 * var_x68 - 7.1593949080342271e-6 * var_x53 - 7.1593949080342271e-6 * var_x55 - 7.1593949080342271e-6 * var_x81;
        IJth(rJacobian, 12, 0) = var_x266 * var_x269 - 0.00125 * var_x270 * var_chaste_interface__intracellular_calcium_concentration__p / pow(var_x271, 2) - 0.00015625 * var_x266 * var_x267 * var_x272 / pow(var_x268, 2);
        IJth(rJacobian, 13, 0) = 6.4466434341209093e-5 * var_x45 + 6.4466434341209093e-5 * var_x76 + 6.4466434341209093e-5 * var_x80 + 1.7237353320432221e-8 * var_x85 - 4.8264589297210214e-6 * var_x89;
        IJth(rJacobian, 14, 0) = 5.3600801468854619e-7 * var_x89 - 1.9143143381733793e-9 * var_x85 - 7.1593949080342271e-6 * var_x45 - 7.1593949080342271e-6 * var_x76 - 7.1593949080342271e-6 * var_x80;
        IJth(rJacobian, 0, 1) = mSetVoltageDerivativeToZero ? 0.0 : (var_x91 * (-var_x96 + 0.002 * var_x100 + 1.38e-5 * var_x99 + 2.0000000000000002e-7 * var_x102 - 0.13356880329847826 * var_x97));
        IJth(rJacobian, 1, 1) = -0.19999999999999998 + 0.040000000000000001 * var_chaste_interface__intracellular_calcium_concentration__Ca_up - 9.8799649730872331e-11 * var_x99 - 4.7813590510367518e-7 * var_x97 - 1.4318789816068454e-12 * var_x102 - 3.5796974540171135e-6 * var_x96 - 1.4318789816068453e-8 * var_x100 + var_x182 * var_x186 - var_x182 * var_x187;
        IJth(rJacobian, 8, 1) = -20.0 * var_chaste_interface__second_inward_current_f2_gate__f2;
        IJth(rJacobian, 9, 1) = 4.2956369448205366e-12 * var_x102 + 2.9639894919261698e-10 * var_x99 + 4.2956369448205359e-8 * var_x100;
        IJth(rJacobian, 10, 1) = 3.9999999999999996 - 0.79999999999999993 * var_chaste_interface__intracellular_calcium_concentration__Ca_up;
        IJth(rJacobian, 11, 1) = var_x187 * var_x264 - var_x186 * var_x264;
        IJth(rJacobian, 0, 2) = mSetVoltageDerivativeToZero ? 0.0 : (var_x91 * (-var_x104 - var_x107));
        IJth(rJacobian, 2, 2) = ((var_x194) ? (var_x198 + 1.0000000116860974e-9 * var_x189 - 2000.0000050495146 * (52.000000500000006 + var_chaste_interface__membrane__V) * (4.99999991632194e-7 * var_x190 + 5.0000000584304871e-7 * var_x189)) : (var_x198 - var_x193 * var_x197));
        IJth(rJacobian, 9, 2) = -7.1593949080342271e-6 * var_x107;
        IJth(rJacobian, 13, 2) = 6.4466434341209093e-5 * var_x104;
        IJth(rJacobian, 14, 2) = -7.1593949080342271e-6 * var_x104;
        IJth(rJacobian, 0, 3) = mSetVoltageDerivativeToZero ? 0.0 : (var_x91 * (0.0071428571428571426 * var_x83 - 0.0071428571428571426 * var_chaste_interface__intracellular_potassium_concentration__Ki) * NV_Ith_S(mParameters, 4));
        IJth(rJacobian, 3, 3) = ((var_x206) ? (var_x216 + 2.499999993688107e-10 * var_x199 - 1000.0000025247573 * (22.000000499999999 + var_chaste_interface__membrane__V) * (2.4999999936881068e-7 * var_x199 + 2.4999999936881068e-7 * var_x200)) : ((var_x212) ? (var_x216 + var_x217) : (var_x217 - var_x204 * var_x215)));
        IJth(rJacobian, 13, 3) = (4.6047453100863642e-7 * var_chaste_interface__intracellular_potassium_concentration__Ki - 4.6047453100863642e-7 * var_x83) * NV_Ith_S(mParameters, 4);
        IJth(rJacobian, 14, 3) = (5.1138535057387335e-8 * var_x83 - 5.1138535057387335e-8 * var_chaste_interface__intracellular_potassium_concentration__Ki) * NV_Ith_S(mParameters, 4);
        IJth(rJacobian, 0, 4) = mSetVoltageDerivativeToZero ? 0.0 : (-0.0030000000000000001 * var_x111 * var_x90);
        IJth(rJacobian, 4, 4) = ((var_x223) ? (var_x229 + 2.0000000091613402e-7 * var_x219 - 499.99999948602181 * (41.000001000000005 + var_chaste_interface__membrane__V) * (0.00019999999949504854 * var_x218 + 0.00020000000091613401 * var_x219)) : (var_x229 - var_x222 * var_x228));
        IJth(rJacobian, 9, 4) = -2.147818472410268e-5 * var_x111;
        IJth(rJacobian, 0, 5) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x112 * var_x91);
        IJth(rJacobian, 5, 5) = -2.0 / (1.0 + 320.0 * var_x231) - 0.02 * var_x230;
        IJth(rJacobian, 9, 5) = -7.1593949080342271e-6 * var_x112;
        IJth(rJacobian, 0, 6) = mSetVoltageDerivativeToZero ? 0.0 : (var_x91 * (-var_x120 - var_x122 - var_x124));
        IJth(rJacobian, 1, 6) = -3.5796974540171135e-6 * var_x124;
        IJth(rJacobian, 6, 6) = ((var_x239) ? (var_x251 + 1.2000000033651759e-8 * var_x232 - 1249.9999964946085 * (19.000000400000001 + var_chaste_interface__membrane__V) * (1.2000000033651759e-5 * var_x232 + 1.2000000033651759e-5 * var_x233)) : ((var_x247) ? (var_x251 + var_x252) : (var_x252 - var_x237 * var_x250)));
        IJth(rJacobian, 9, 6) = -7.1593949080342271e-6 * var_x122;
        IJth(rJacobian, 13, 6) = 6.4466434341209093e-5 * var_x120;
        IJth(rJacobian, 14, 6) = -7.1593949080342271e-6 * var_x120;
        IJth(rJacobian, 0, 7) = mSetVoltageDerivativeToZero ? 0.0 : (var_x91 * (-var_x130 - var_x132 - var_x135));
        IJth(rJacobian, 1, 7) = -3.5796974540171135e-6 * var_x135;
        IJth(rJacobian, 7, 7) = -0.050000000000000003 / var_x258 - var_x256 * var_x259;
        IJth(rJacobian, 9, 7) = -7.1593949080342271e-6 * var_x132;
        IJth(rJacobian, 13, 7) = 6.4466434341209093e-5 * var_x130;
        IJth(rJacobian, 14, 7) = -7.1593949080342271e-6 * var_x130;
        IJth(rJacobian, 0, 8) = mSetVoltageDerivativeToZero ? 0.0 : (var_x91 * (-var_x142 - var_x144 - var_x147));
        IJth(rJacobian, 1, 8) = -3.5796974540171135e-6 * var_x147;
        IJth(rJacobian, 8, 8) = -0.01 - 20.0 * var_chaste_interface__intracellular_calcium_concentration__Cai;
        IJth(rJacobian, 9, 8) = -7.1593949080342271e-6 * var_x144;
        IJth(rJacobian, 13, 8) = 6.4466434341209093e-5 * var_x142;
        IJth(rJacobian, 14, 8) = -7.1593949080342271e-6 * var_x142;
        IJth(rJacobian, 0, 9) = mSetVoltageDerivativeToZero ? 0.0 : (var_x91 * (var_x152 + 0.03125 * var_x159 + 6.0000000000000008e-7 * var_x162 - 0.0060000000000000001 * var_x163 - 26.713760659695652 * var_x160 - 26.713760659695652 * var_x164 - 1.8699632461786957 * var_x105 - var_x157 * var_chaste_interface__extracellular_potassium_concentration__Kc));
        IJth(rJacobian, 1, 9) = 4.2956369448205359e-8 * var_x163 - 4.2956369448205366e-12 * var_x162;
        IJth(rJacobian, 9, 9) = var_x260 + 1.2886910834461608e-11 * var_x162 + 6.7119327262820874e-7 * var_x159 - 1.2886910834461608e-7 * var_x163 - 0.00019125436204147007 * var_x160 - 0.00019125436204147007 * var_x164 - 1.3387805342902908e-5 * var_x105 - var_x261 * var_chaste_interface__extracellular_potassium_concentration__Kc;
        IJth(rJacobian, 13, 9) = 4.0291521463255683e-6 * var_x159 - var_x273 * var_chaste_interface__extracellular_potassium_concentration__Kc;
        IJth(rJacobian, 14, 9) = -4.4746218175213919e-7 * var_x159 + var_x278 * var_chaste_interface__extracellular_potassium_concentration__Kc;
        IJth(rJacobian, 1, 10) = 0.040000000000000001 * var_chaste_interface__intracellular_calcium_concentration__Cai;
        IJth(rJacobian, 10, 10) = -var_x263 - 0.79999999999999993 * var_chaste_interface__intracellular_calcium_concentration__Cai;
        IJth(rJacobian, 11, 10) = var_x265;
        IJth(rJacobian, 1, 11) = 0.002 * var_x188;
        IJth(rJacobian, 10, 11) = var_x263;
        IJth(rJacobian, 11, 11) = -var_x265 - 0.099999999999999992 * var_x188;
        IJth(rJacobian, 10, 12) = 0.002 * var_chaste_interface__intracellular_calcium_concentration__Ca_rel - 0.002 * var_chaste_interface__intracellular_calcium_concentration__Ca_up;
        IJth(rJacobian, 11, 12) = 0.0050000000000000001 * var_chaste_interface__intracellular_calcium_concentration__Ca_up - 0.0050000000000000001 * var_chaste_interface__intracellular_calcium_concentration__Ca_rel;
        IJth(rJacobian, 12, 12) = -0.0050000000000000001 / var_x271 - var_x269 * var_x272;
        IJth(rJacobian, 0, 13) = mSetVoltageDerivativeToZero ? 0.0 : (var_x91 * (var_x167 + var_x170 - var_x166 - var_x172 - var_x173 - var_x174 - var_x181 + 50.0 * var_x175 + 0.01 * var_x179 + 3.2056512791634777 * var_x176 + var_x103 * var_x178 + var_x106 * var_x178 + var_x171 * var_x82 - var_x157 * var_chaste_interface__intracellular_sodium_concentration__Nai));
        IJth(rJacobian, 9, 13) = 2.2950523444976409e-5 * var_x176 + 0.0010739092362051341 * var_x175 - 7.1593949080342271e-6 * var_x174 + var_x106 * var_x262 - var_x261 * var_chaste_interface__intracellular_sodium_concentration__Nai;
        IJth(rJacobian, 13, 13) = -0.001 + var_x277 - var_x274 - var_x275 + 6.4466434341209093e-5 * var_x166 + 6.4466434341209093e-5 * var_x172 + 6.4466434341209093e-5 * var_x173 + 0.0064466434341209095 * var_x175 - 6.4466434341209093e-7 * var_x179 - var_x273 * var_chaste_interface__intracellular_sodium_concentration__Nai - var_x276 * var_x82 - 3.1835276217881036e-8 * var_x103 * var_x177;
        IJth(rJacobian, 14, 13) = var_x280 + var_x281 - var_x282 + 7.1593949080342266e-8 * var_x179 - 0.00071593949080342272 * var_x175 - 7.1593949080342271e-6 * var_x166 - 7.1593949080342271e-6 * var_x172 - 7.1593949080342271e-6 * var_x173 + var_x103 * var_x262 + var_x278 * var_chaste_interface__intracellular_sodium_concentration__Nai + var_x279 * var_x82;
        IJth(rJacobian, 0, 14) = mSetVoltageDerivativeToZero ? 0.0 : (var_x91 * (var_x152 - var_x171 - 3.2056512791634777 * var_x160 + var_x181 * var_x69 - var_x167 * var_x69 - var_x170 * var_x69));
        IJth(rJacobian, 9, 14) = -2.2950523444976409e-5 * var_x160;
        IJth(rJacobian, 13, 14) = var_x276 + 6.4466434341209093e-5 * var_x151 + var_x274 * var_x69 + var_x275 * var_x69 - var_x277 * var_x69;
        IJth(rJacobian, 14, 14) = var_x260 - var_x279 + var_x282 * var_x69 - var_x280 * var_x69 - var_x281 * var_x69;
    }

    N_Vector Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt::ComputeDerivedQuantities(double var_chaste_interface__environment__time_converted, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -60.0
        double var_chaste_interface__intracellular_calcium_concentration__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 5.8e-05
        double var_chaste_interface__hyperpolarising_activated_current_y_gate__y = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.007
        double var_chaste_interface__time_dependent_potassium_current_x_gate__x = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.54
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.076
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.015
        double var_chaste_interface__second_inward_current_d_gate__d = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.0011
        double var_chaste_interface__second_inward_current_f_gate__f = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.785
        double var_chaste_interface__second_inward_current_f2_gate__f2 = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.785
        double var_chaste_interface__intracellular_sodium_concentration__Nai = NV_Ith_S(rY, 9);
        // Units: millimolar; Initial value: 7.5
        double var_chaste_interface__extracellular_potassium_concentration__Kc = NV_Ith_S(rY, 13);
        // Units: millimolar; Initial value: 3.0
        double var_chaste_interface__intracellular_potassium_concentration__Ki = NV_Ith_S(rY, 14);
        // Units: millimolar; Initial value: 140.0
        
        // Lookup table indexing
        const bool _oob_0 = Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_hyperpolarising_activated_current__Km_f = 45.0; // millimolar
        const double var_membrane__F = 96485.341499999995; // coulomb_per_mole
        const double var_membrane__R = 8314.4719999999998; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_membrane__RTONF = var_membrane__R * var_membrane__T / var_membrane__F; // millivolt
        const double var_fast_sodium_current__E_mh = var_membrane__RTONF * log((NV_Ith_S(mParameters, 1) + 0.12 * var_chaste_interface__extracellular_potassium_concentration__Kc) / (var_chaste_interface__intracellular_sodium_concentration__Nai + 0.12 * var_chaste_interface__intracellular_potassium_concentration__Ki)); // millivolt
        const double var_hyperpolarising_activated_current__E_K = var_membrane__RTONF * log(var_chaste_interface__extracellular_potassium_concentration__Kc / var_chaste_interface__intracellular_potassium_concentration__Ki); // millivolt
        const double var_hyperpolarising_activated_current__E_Na = var_membrane__RTONF * log(NV_Ith_S(mParameters, 1) / var_chaste_interface__intracellular_sodium_concentration__Nai); // millivolt
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_mh + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 5) * var_chaste_interface__fast_sodium_current_h_gate__h; // nanoA
        const double var_fast_sodium_current__i_Na_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na / NV_Ith_S(mParameters, 3); // uA_per_cm2
        const double var_hyperpolarising_activated_current__i_fK = (-var_hyperpolarising_activated_current__E_K + var_chaste_interface__membrane__V) * var_chaste_interface__extracellular_potassium_concentration__Kc * NV_Ith_S(mParameters, 6) * var_chaste_interface__hyperpolarising_activated_current_y_gate__y / (var_chaste_interface__extracellular_potassium_concentration__Kc + var_hyperpolarising_activated_current__Km_f); // nanoA
        const double var_hyperpolarising_activated_current__i_fNa = (-var_hyperpolarising_activated_current__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__extracellular_potassium_concentration__Kc * NV_Ith_S(mParameters, 7) * var_chaste_interface__hyperpolarising_activated_current_y_gate__y / (var_chaste_interface__extracellular_potassium_concentration__Kc + var_hyperpolarising_activated_current__Km_f); // nanoA
        const double var_hyperpolarising_activated_current__i_f = var_hyperpolarising_activated_current__i_fK + var_hyperpolarising_activated_current__i_fNa; // nanoA
        const double var_hyperpolarising_activated_current__i_f_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_hyperpolarising_activated_current__i_f / NV_Ith_S(mParameters, 3); // uA_per_cm2
        const double var_second_inward_current__i_siCa = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 1.3356880330661625e-6) ? (374338.90820464725 * (-49.999998664311967 + var_chaste_interface__membrane__V) * (2.0000000001218549e-7 * (var_chaste_interface__intracellular_calcium_concentration__Cai * exp(3.7433890822745473) - NV_Ith_S(mParameters, 0) * exp(1.0000000000609274e-7)) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (1.0 - exp(1.0000000000609274e-7)) + 2.0000000001218549e-7 * (var_chaste_interface__intracellular_calcium_concentration__Cai * exp(3.7433890822745473) - NV_Ith_S(mParameters, 0) * exp(-1.0000000000609274e-7)) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (1.0 - exp(-1.0000000000609274e-7))) - 2.0000000001218549e-7 * (var_chaste_interface__intracellular_calcium_concentration__Cai * exp(3.7433890822745473) - NV_Ith_S(mParameters, 0) * exp(1.0000000000609274e-7)) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (1.0 - exp(1.0000000000609274e-7))) : (0.14973556329098189 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_calcium_concentration__Cai * exp(3.7433890822745473) - NV_Ith_S(mParameters, 0) * _lt_0_row[4]) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (_lt_0_row[5]))); // nanoA
        const double var_second_inward_current__i_siK = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760661323249e-6) ? (187169.45410232362 * (-49.999997328623934 + var_chaste_interface__membrane__V) * (1.0000000000609275e-9 * (var_chaste_interface__intracellular_potassium_concentration__Ki * exp(1.8716945411372736) - var_chaste_interface__extracellular_potassium_concentration__Kc * exp(1.0000000000609274e-7)) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (1.0 - exp(1.0000000000609274e-7)) + 1.0000000000609275e-9 * (var_chaste_interface__intracellular_potassium_concentration__Ki * exp(1.8716945411372736) - var_chaste_interface__extracellular_potassium_concentration__Kc * exp(-1.0000000000609274e-7)) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (1.0 - exp(-1.0000000000609274e-7))) - 1.0000000000609275e-9 * (var_chaste_interface__intracellular_potassium_concentration__Ki * exp(1.8716945411372736) - var_chaste_interface__extracellular_potassium_concentration__Kc * exp(1.0000000000609274e-7)) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (1.0 - exp(1.0000000000609274e-7))) : (0.00037433890822745472 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_potassium_concentration__Ki * exp(1.8716945411372736) - var_chaste_interface__extracellular_potassium_concentration__Kc * _lt_0_row[2]) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_second_inward_current__i_siNa = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760661323249e-6) ? (187169.45410232362 * (-49.999997328623934 + var_chaste_interface__membrane__V) * (1.0000000000609275e-9 * (var_chaste_interface__intracellular_sodium_concentration__Nai * exp(1.8716945411372736) - NV_Ith_S(mParameters, 1) * exp(1.0000000000609274e-7)) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (1.0 - exp(1.0000000000609274e-7)) + 1.0000000000609275e-9 * (var_chaste_interface__intracellular_sodium_concentration__Nai * exp(1.8716945411372736) - NV_Ith_S(mParameters, 1) * exp(-1.0000000000609274e-7)) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (1.0 - exp(-1.0000000000609274e-7))) - 1.0000000000609275e-9 * (var_chaste_interface__intracellular_sodium_concentration__Nai * exp(1.8716945411372736) - NV_Ith_S(mParameters, 1) * exp(1.0000000000609274e-7)) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (1.0 - exp(1.0000000000609274e-7))) : (0.00037433890822745472 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_sodium_concentration__Nai * exp(1.8716945411372736) - NV_Ith_S(mParameters, 1) * _lt_0_row[2]) * NV_Ith_S(mParameters, 2) * var_chaste_interface__second_inward_current_d_gate__d * var_chaste_interface__second_inward_current_f2_gate__f2 * var_chaste_interface__second_inward_current_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_second_inward_current__i_si = var_second_inward_current__i_siCa + var_second_inward_current__i_siK + var_second_inward_current__i_siNa; // nanoA
        const double var_second_inward_current__i_si_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_second_inward_current__i_si / NV_Ith_S(mParameters, 3); // uA_per_cm2
        const double var_time_dependent_potassium_current__i_K = 0.0071428571428571426 * (-var_chaste_interface__extracellular_potassium_concentration__Kc * exp(-var_chaste_interface__membrane__V / var_membrane__RTONF) + var_chaste_interface__intracellular_potassium_concentration__Ki) * NV_Ith_S(mParameters, 4) * var_chaste_interface__time_dependent_potassium_current_x_gate__x; // nanoA
        const double var_time_dependent_potassium_current__i_K_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_time_dependent_potassium_current__i_K / NV_Ith_S(mParameters, 3); // uA_per_cm2
        const double var_time_independent_potassium_current__Km_K1 = 10.0; // millimolar
        const double var_time_independent_potassium_current__i_K1 = (-var_hyperpolarising_activated_current__E_K + var_chaste_interface__membrane__V) * var_chaste_interface__extracellular_potassium_concentration__Kc * NV_Ith_S(mParameters, 8) / ((1.0 + exp(2.0 * (10.0 - var_hyperpolarising_activated_current__E_K + var_chaste_interface__membrane__V) / var_membrane__RTONF)) * (var_chaste_interface__extracellular_potassium_concentration__Kc + var_time_independent_potassium_current__Km_K1)); // nanoA
        const double var_time_independent_potassium_current__i_K1_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_time_independent_potassium_current__i_K1 / NV_Ith_S(mParameters, 3); // uA_per_cm2

        N_Vector dqs = N_VNew_Serial(8);
        NV_Ith_S(dqs, 0) = var_second_inward_current__i_si_converted;
        NV_Ith_S(dqs, 1) = var_time_dependent_potassium_current__i_K_converted;
        NV_Ith_S(dqs, 2) = var_fast_sodium_current__i_Na_converted;
        NV_Ith_S(dqs, 3) = var_hyperpolarising_activated_current__i_f_converted;
        NV_Ith_S(dqs, 4) = var_hyperpolarising_activated_current__i_fK;
        NV_Ith_S(dqs, 5) = var_hyperpolarising_activated_current__i_fNa;
        NV_Ith_S(dqs, 6) = var_time_independent_potassium_current__i_K1_converted;
        NV_Ith_S(dqs, 7) = var_chaste_interface__environment__time_converted;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt>::Initialise(void)
{
    this->mSystemName = "NN_SAN_model_1984";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // NV_Ith_S(rY, 0):
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-60.0);

    // NV_Ith_S(rY, 1):
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(5.8e-05);

    // NV_Ith_S(rY, 2):
    this->mVariableNames.push_back("hyperpolarising_activated_current_y_gate__y");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.007);

    // NV_Ith_S(rY, 3):
    this->mVariableNames.push_back("time_dependent_potassium_current_x_gate__x");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.54);

    // NV_Ith_S(rY, 4):
    this->mVariableNames.push_back("fast_sodium_current_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.076);

    // NV_Ith_S(rY, 5):
    this->mVariableNames.push_back("fast_sodium_current_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.015);

    // NV_Ith_S(rY, 6):
    this->mVariableNames.push_back("second_inward_current_d_gate__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0011);

    // NV_Ith_S(rY, 7):
    this->mVariableNames.push_back("second_inward_current_f_gate__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.785);

    // NV_Ith_S(rY, 8):
    this->mVariableNames.push_back("second_inward_current_f2_gate__f2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.785);

    // NV_Ith_S(rY, 9):
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.5);

    // NV_Ith_S(rY, 10):
    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_up");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.98);

    // NV_Ith_S(rY, 11):
    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_rel");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.55);

    // NV_Ith_S(rY, 12):
    this->mVariableNames.push_back("intracellular_calcium_concentration__p");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.785);

    // NV_Ith_S(rY, 13):
    this->mVariableNames.push_back("extracellular_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(3.0);

    // NV_Ith_S(rY, 14):
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(140.0);

    // mParameters[0]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[1]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[2]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("nanoA_per_millimolar");

    // mParameters[3]:
    this->mParameterNames.push_back("membrane_capacitance");
    this->mParameterUnits.push_back("microF");

    // mParameters[4]:
    this->mParameterNames.push_back("membrane_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("nanoA");

    // mParameters[5]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("microS");

    // mParameters[6]:
    this->mParameterNames.push_back("membrane_hyperpolarisation_activated_funny_current_potassium_component_conductance");
    this->mParameterUnits.push_back("microS");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_hyperpolarisation_activated_funny_current_sodium_component_conductance");
    this->mParameterUnits.push_back("microS");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("microS");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_hyperpolarisation_activated_funny_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_hyperpolarisation_activated_funny_current_potassium_component");
    this->mDerivedQuantityUnits.push_back("nanoA");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_hyperpolarisation_activated_funny_current_sodium_component");
    this->mDerivedQuantityUnits.push_back("nanoA");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellnoble_noble_SAN_model_1984FromCellMLCvodeOpt)

#endif // CHASTE_CVODE
