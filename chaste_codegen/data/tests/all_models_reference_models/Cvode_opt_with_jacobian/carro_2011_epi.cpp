#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: Carro_Rodriguez_Laguna_Pueyo_CinC2010_EPI
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: AnalyticCvodeOpt)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "carro_2011_epi.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class Cellcarro_2011_epiFromCellMLCvodeOpt_LookupTables : public AbstractLookupTableCollection
{
public:
    static Cellcarro_2011_epiFromCellMLCvodeOpt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new Cellcarro_2011_epiFromCellMLCvodeOpt_LookupTables);
        }
        return mpInstance.get();
    }

    void FreeMemory()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }

    // Row lookup methods
    // using linear-interpolation

    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<32; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }


    const double * IndexTable0(double var_chaste_interface__membrane__V)
    {
        const double _offset_0 = var_chaste_interface__membrane__V - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = Cellcarro_2011_epiFromCellMLCvodeOpt_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }


// LCOV_EXCL_START
    bool CheckIndex0(double& var_chaste_interface__membrane__V)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__membrane__V>mTableMaxs[0] || var_chaste_interface__membrane__V<mTableMins[0])
        {
// LCOV_EXCL_START
            _oob_0 = true;
// LCOV_EXCL_STOP
        }
        return _oob_0;
    }
// LCOV_EXCL_STOP

    ~Cellcarro_2011_epiFromCellMLCvodeOpt_LookupTables()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

    }

protected:
    Cellcarro_2011_epiFromCellMLCvodeOpt_LookupTables(const Cellcarro_2011_epiFromCellMLCvodeOpt_LookupTables&);
    Cellcarro_2011_epiFromCellMLCvodeOpt_LookupTables& operator= (const Cellcarro_2011_epiFromCellMLCvodeOpt_LookupTables&);
    Cellcarro_2011_epiFromCellMLCvodeOpt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);

        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 32;
        mTableMins[0] = -250.0;
        mTableMaxs[0] = 550.0;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;

        Cellcarro_2011_epiFromCellMLCvodeOpt_LookupTables::RegenerateTables();
    }

    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);


        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][32];

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(0.010107688547106707 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][0] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-0.027328194960695912 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][1] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + 0.32000000000000001 * exp(-0.027328194960695912 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][2] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-0.037435883507802616 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][3] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.1245 * exp(-0.003743588350780262 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][4] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + exp(7.4880000000000004 - 0.16722408026755853 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][5] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(0.037435883507802616 * var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[6] < 2){
                    double left = _lookup_table_0[i-1][6];
                    double right = _lookup_table_0[i+1][6];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 6 at ["<<i<<"][6] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[6] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[6] >= 2){
                    EXCEPTION("Lookup table 6 at ["<<i<<"][6] has non-finite value: " << val);
                }
                _lookup_table_0[i][6] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = -1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[7] < 2){
                    double left = _lookup_table_0[i-1][7];
                    double right = _lookup_table_0[i+1][7];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 7 at ["<<i<<"][7] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[7] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[7] >= 2){
                    EXCEPTION("Lookup table 7 at ["<<i<<"][7] has non-finite value: " << val);
                }
                _lookup_table_0[i][7] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(0.074871767015605231 * var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[8] < 2){
                    double left = _lookup_table_0[i-1][8];
                    double right = _lookup_table_0[i+1][8];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 8 at ["<<i<<"][8] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[8] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[8] >= 2){
                    EXCEPTION("Lookup table 8 at ["<<i<<"][8] has non-finite value: " << val);
                }
                _lookup_table_0[i][8] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = -1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[9] < 2){
                    double left = _lookup_table_0[i-1][9];
                    double right = _lookup_table_0[i+1][9];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 9 at ["<<i<<"][9] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[9] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[9] >= 2){
                    EXCEPTION("Lookup table 9 at ["<<i<<"][9] has non-finite value: " << val);
                }
                _lookup_table_0[i][9] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + exp(3.0833333333333335 + 0.041666666666666664 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][10] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / pow((1.0 + exp(9.6298788694481825 + 0.13458950201884254 * var_chaste_interface__membrane__V)), 2);

                _lookup_table_0[i][11] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = ((var_chaste_interface__membrane__V >= -40.0) ? (0) : (0.057000000000000002 * exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__membrane__V))) + ((var_chaste_interface__membrane__V >= -40.0) ? (5.9230999999999998 / (1.0 + exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__membrane__V))) : (310000.0 * exp(0.34849999999999998 * var_chaste_interface__membrane__V) + 2.7000000000000002 * exp(0.079000000000000001 * var_chaste_interface__membrane__V)));

                _lookup_table_0[i][12] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = ((var_chaste_interface__membrane__V >= -40.0) ? (0) : ((37.780000000000001 + var_chaste_interface__membrane__V) * (-25428.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__V) - 6.9480000000000002e-6 * exp(-0.043909999999999998 * var_chaste_interface__membrane__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V)))) + ((var_chaste_interface__membrane__V >= -40.0) ? (0.59999999999999998 * exp(0.057000000000000002 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.2000000000000002 - 0.10000000000000001 * var_chaste_interface__membrane__V))) : (0.024240000000000001 * exp(-0.01052 * var_chaste_interface__membrane__V) / (1.0 + exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__membrane__V))));

                _lookup_table_0[i][13] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / pow((1.0 + exp(-6.2967884828349945 - 0.11074197120708749 * var_chaste_interface__membrane__V)), 2);

                _lookup_table_0[i][14] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.12920000000000001 * exp(-8.682389366752302 * pow((1 + 0.021838829438742085 * var_chaste_interface__membrane__V), 2)) + 0.064869999999999997 * exp(-0.0089012876052174655 * pow((-1 + 0.2073398299813394 * var_chaste_interface__membrane__V), 2));

                _lookup_table_0[i][15] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-0.83333333333333337 - 0.16666666666666666 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][16] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(2.5 - 0.050000000000000003 * var_chaste_interface__membrane__V)) + 1.3999999999999999 * (0.25 + 1.3999999999999999 / (1.0 + exp(-2.6923076923076925 - 0.076923076923076927 * var_chaste_interface__membrane__V))) / (1.0 + exp(1.0 + 0.20000000000000001 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][17] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(2.8571428571428572 + 0.14285714285714285 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][18] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 20.0 + 200.0 / (1.0 + exp(1.3 - 0.10000000000000001 * var_chaste_interface__membrane__V)) + 180.0 / (1.0 + exp(3.0 + 0.10000000000000001 * var_chaste_interface__membrane__V)) + 1102.5 * exp(-3.2400000000000002 * pow((1 + 0.037037037037037035 * var_chaste_interface__membrane__V), 2));

                _lookup_table_0[i][19] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.67000000000000004 / (1.0 + exp(5.0 + 0.14285714285714285 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][20] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 16.0 / (1.0 + exp(3.0 + 0.10000000000000001 * var_chaste_interface__membrane__V)) + 31.0 / (1.0 + exp(2.5 - 0.10000000000000001 * var_chaste_interface__membrane__V)) + 300.0 * exp(-3.6764705882352939 * pow((1 + 0.040000000000000001 * var_chaste_interface__membrane__V), 2));

                _lookup_table_0[i][21] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-2.0 - 0.20000000000000001 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][22] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 230.0 / (1.0 + exp(2.0 + 0.050000000000000003 * var_chaste_interface__membrane__V)) + 3300.0 / ((1.0 + exp(1.2222222222222223 + 0.1111111111111111 * var_chaste_interface__membrane__V)) * (1.0 + exp(-2.4444444444444446 - 0.1111111111111111 * var_chaste_interface__membrane__V)));

                _lookup_table_0[i][23] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-0.26666666666666666 - 0.070175438596491224 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][24] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.00100999899000101 + 0.00100999899000101 * exp(-0.17252124645892353 - 0.070821529745042494 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][25] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(1.4615384615384615 - 0.076923076923076927 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][26] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.5 + 8.5 * exp(-0.81000000000000005 * pow((1 + 0.022222222222222223 * var_chaste_interface__membrane__V), 2));

                _lookup_table_0[i][27] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.5 + 9.0 / (1.0 + exp(0.20000000000000001 + 0.066666666666666666 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][28] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(3.8999999999999999 + 0.20000000000000001 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][29] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 7.0 + 85.0 * exp(-7.2727272727272725 * pow((1 + 0.025000000000000001 * var_chaste_interface__membrane__V), 2));

                _lookup_table_0[i][30] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 30.0 + 800.0 / (1.0 + exp(6.0 + 0.10000000000000001 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][31] = val;
            }

            mNeedsRegeneration[0] = false;
        }

        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }

private:
    /** The single instance of the class */
    static std::shared_ptr<Cellcarro_2011_epiFromCellMLCvodeOpt_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[32];

    // Lookup tables
    double (*_lookup_table_0)[32];
    int _lookup_table_0_num_misshit_piecewise[32] = {0};

};

std::shared_ptr<Cellcarro_2011_epiFromCellMLCvodeOpt_LookupTables> Cellcarro_2011_epiFromCellMLCvodeOpt_LookupTables::mpInstance;

    boost::shared_ptr<RegularStimulus> Cellcarro_2011_epiFromCellMLCvodeOpt::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__I_Stim_Amplitude_converted = 40.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        const double var_chaste_interface__membrane__I_Stim_Period = 1000.0; // millisecond
        const double var_chaste_interface__membrane__I_Stim_PulseDuration = 1.0; // millisecond
        const double var_chaste_interface__membrane__I_Stim_Start = 0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__I_Stim_Amplitude_converted),
                var_chaste_interface__membrane__I_Stim_PulseDuration,
                var_chaste_interface__membrane__I_Stim_Period,
                var_chaste_interface__membrane__I_Stim_Start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }

    double Cellcarro_2011_epiFromCellMLCvodeOpt::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Cellcarro_2011_epiFromCellMLCvodeOpt::Cellcarro_2011_epiFromCellMLCvodeOpt(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                39,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellcarro_2011_epiFromCellMLCvodeOpt>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
        
        NV_Ith_S(this->mParameters, 0) = 0.0053114; // (var_SR_Fluxes__V_max_SR_CaP) [milliM_per_millis]
        NV_Ith_S(this->mParameters, 1) = 138.0; // (var_Potassium_Concentrations__K_i) [millimolar]
        NV_Ith_S(this->mParameters, 2) = 1.8; // (var_Calcium_Concentrations__Ca_o) [millimolar]
        NV_Ith_S(this->mParameters, 3) = 5.4000000000000004; // (var_Potassium_Concentrations__K_o) [millimolar]
        NV_Ith_S(this->mParameters, 4) = 140.0; // (var_Sodium_Concentrations__Na_o) [millimolar]
        NV_Ith_S(this->mParameters, 5) = 1.0; // (var_L_Type_Calcium_Current__P_scale) [dimensionless]
        NV_Ith_S(this->mParameters, 6) = 1.3809999999999999e-10; // (var_membrane__C_mem) [farad]
        NV_Ith_S(this->mParameters, 7) = 18.859999999999999; // (var_Fast_Na_Current__G_Na) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 8) = 0.1144; // (var_Transient_Outward_K_Current__G_to_f) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 9) = 0.57152999999999998; // (var_Inward_Rectifier_K_Current__G_K1) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 10) = 0.035000000000000003; // (var_Rapidly_Activating_K_Current__G_Kr) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 11) = 0.0035000000000000001; // (var_Slowly_Activating_K_Current__G_Ks) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 12) = 0.015599999999999999; // (var_Transient_Outward_K_Current__G_to_s) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 13) = 4.5; // (var_Na_Ca_Exchanger_Current__Ibar_NCX) [picoA_per_picoF]
        NV_Ith_S(this->mParameters, 14) = 0.98999999999999999; // (var_Na_K_Pump_Current__Ibar_NaK) [picoA_per_picoF]
    }

    Cellcarro_2011_epiFromCellMLCvodeOpt::~Cellcarro_2011_epiFromCellMLCvodeOpt()
    {
    }

    AbstractLookupTableCollection* Cellcarro_2011_epiFromCellMLCvodeOpt::GetLookupTableCollection()
    {
        return Cellcarro_2011_epiFromCellMLCvodeOpt_LookupTables::Instance();
    }
    
    double Cellcarro_2011_epiFromCellMLCvodeOpt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -84.13368
        double var_chaste_interface__Fast_Na_Current__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.002163678
        double var_chaste_interface__Fast_Na_Current__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.7126555
        double var_chaste_interface__Fast_Na_Current__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.7128671
        double var_chaste_interface__Rapidly_Activating_K_Current__x_Kr = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.01516232
        double var_chaste_interface__Slowly_Activating_K_Current__x_Ks = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.003549354
        double var_chaste_interface__Transient_Outward_K_Current__x_to_s = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.0003584727
        double var_chaste_interface__Transient_Outward_K_Current__y_to_s = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.8087629
        double var_chaste_interface__Transient_Outward_K_Current__x_to_f = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.0003584625
        double var_chaste_interface__Transient_Outward_K_Current__y_to_f = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.9999976
        double var_chaste_interface__L_Type_Calcium_Current__d = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 1.871177e-06
        double var_chaste_interface__L_Type_Calcium_Current__f = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.9804391
        double var_chaste_interface__L_Type_Calcium_Current__f_2 = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.999401
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.02847118
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.01692189
        double var_chaste_interface__Sodium_Concentrations__Na_j = NV_Ith_S(rY, 30);
        // Units: millimolar; Initial value: 10.07931
        double var_chaste_interface__Sodium_Concentrations__Na_sl = NV_Ith_S(rY, 31);
        // Units: millimolar; Initial value: 10.0781
        double var_chaste_interface__Sodium_Concentrations__Na_i = NV_Ith_S(rY, 32);
        // Units: millimolar; Initial value: 10.07825
        double var_chaste_interface__Calcium_Concentrations__Ca_j = NV_Ith_S(rY, 35);
        // Units: millimolar; Initial value: 0.0002038197
        double var_chaste_interface__Calcium_Concentrations__Ca_sl = NV_Ith_S(rY, 36);
        // Units: millimolar; Initial value: 0.0001184305
        
        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_epiFromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_epiFromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        const double var_Nerst_Potentials__E_K = 26.712338705498265 * log(NV_Ith_S(mParameters, 3) / NV_Ith_S(mParameters, 1)); // millivolt
        const double var_Nerst_Potentials__E_Ks = 26.712338705498265 * log((0.018329999999999999 * NV_Ith_S(mParameters, 4) + NV_Ith_S(mParameters, 3)) / (0.018329999999999999 * var_chaste_interface__Sodium_Concentrations__Na_i + NV_Ith_S(mParameters, 1))); // millivolt
        const double var_Nerst_Potentials__E_Na_junc = 26.712338705498265 * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__Sodium_Concentrations__Na_j); // millivolt
        const double var_Nerst_Potentials__E_Na_sl = 26.712338705498265 * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__Sodium_Concentrations__Na_sl); // millivolt
        const double var_Na_Ca_Exchanger_Current__I_ncx_junc = 0.11 * (pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) * NV_Ith_S(mParameters, 2) * _lt_0_row[0] - pow(NV_Ith_S(mParameters, 4), 3) * var_chaste_interface__Calcium_Concentrations__Ca_j * _lt_0_row[1]) * NV_Ith_S(mParameters, 13) / ((_lt_0_row[2]) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2)) * (1.3 * pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) + pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) * NV_Ith_S(mParameters, 2) + pow(NV_Ith_S(mParameters, 4), 3) * var_chaste_interface__Calcium_Concentrations__Ca_j + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Calcium_Concentrations__Ca_j) * var_chaste_interface__Calcium_Concentrations__Ca_j + 0.0035899999999999999 * pow(NV_Ith_S(mParameters, 4), 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3)))); // picoA_per_picoF
        const double var_Na_Ca_Exchanger_Current__I_ncx_sl = 0.89000000000000001 * (pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) * NV_Ith_S(mParameters, 2) * _lt_0_row[0] - pow(NV_Ith_S(mParameters, 4), 3) * var_chaste_interface__Calcium_Concentrations__Ca_sl * _lt_0_row[1]) * NV_Ith_S(mParameters, 13) / ((_lt_0_row[2]) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 2)) * (1.3 * pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) + pow(NV_Ith_S(mParameters, 4), 3) * var_chaste_interface__Calcium_Concentrations__Ca_sl + pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) * NV_Ith_S(mParameters, 2) + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Calcium_Concentrations__Ca_sl) * var_chaste_interface__Calcium_Concentrations__Ca_sl + 0.0035899999999999999 * pow(NV_Ith_S(mParameters, 4), 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3)))); // picoA_per_picoF
        const double var_Na_K_Pump_Current__f_NaK = 1 / (1.0 + _lt_0_row[4] + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * NV_Ith_S(mParameters, 4))) * _lt_0_row[3]); // dimensionless
        const double var_Na_K_Pump_Current__I_NaK_junc = 0.11 * NV_Ith_S(mParameters, 14) * var_Na_K_Pump_Current__f_NaK * NV_Ith_S(mParameters, 3) / ((1.0 + 14641.0 / pow(var_chaste_interface__Sodium_Concentrations__Na_j, 4)) * (1.5 + NV_Ith_S(mParameters, 3))); // picoA_per_picoF
        const double var_Na_K_Pump_Current__I_NaK_sl = 0.89000000000000001 * NV_Ith_S(mParameters, 14) * var_Na_K_Pump_Current__f_NaK * NV_Ith_S(mParameters, 3) / ((1.0 + 14641.0 / pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 4)) * (1.5 + NV_Ith_S(mParameters, 3))); // picoA_per_picoF
        const double var_membrane__I_tot = 0.5535668961205934 + var_Na_Ca_Exchanger_Current__I_ncx_junc + var_Na_Ca_Exchanger_Current__I_ncx_sl + var_Na_K_Pump_Current__I_NaK_junc + var_Na_K_Pump_Current__I_NaK_sl + 0.010148299999999999 * var_chaste_interface__membrane__V - 6.567e-5 * var_Nerst_Potentials__E_Na_junc - 0.00053133 * var_Nerst_Potentials__E_Na_sl - 0.00080995817805876559 * log(NV_Ith_S(mParameters, 2) / var_chaste_interface__Calcium_Concentrations__Ca_j) - 0.0065532979861118307 * log(NV_Ith_S(mParameters, 2) / var_chaste_interface__Calcium_Concentrations__Ca_sl) + 0.002 * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) / (_lt_0_row[5]) + 0.048783569999999998 * (61.507432902288166 + var_chaste_interface__membrane__V) / (1.0 + 0.10000000000000001 / var_chaste_interface__Calcium_Concentrations__Ca_sl) + 0.0074029999999999999 * pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 1.6000000000000001) / (5.2281977629563632e-6 + pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 1.6000000000000001)) + 0.0060294299999999997 * (61.507432902288166 + var_chaste_interface__membrane__V) / (1.0 + 0.10000000000000001 / var_chaste_interface__Calcium_Concentrations__Ca_j) + 0.059896999999999999 * pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 1.6000000000000001) / (5.2281977629563632e-6 + pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 1.6000000000000001)) + pow(var_chaste_interface__Slowly_Activating_K_Current__x_Ks, 2) * (-var_Nerst_Potentials__E_Ks + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 11) + (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 8) * var_chaste_interface__Transient_Outward_K_Current__x_to_f * var_chaste_interface__Transient_Outward_K_Current__y_to_f + (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 12) * var_chaste_interface__Transient_Outward_K_Current__x_to_s * var_chaste_interface__Transient_Outward_K_Current__y_to_s + (1.0 - 0.099999999999999978 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl - 0.90000000000000002 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (5.2753173749999997e-10 * (-NV_Ith_S(mParameters, 3) + NV_Ith_S(mParameters, 1) * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(9.9999999999999995e-8)) + 5.2753173749999997e-10 * (-NV_Ith_S(mParameters, 3) + NV_Ith_S(mParameters, 1) * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) - 5.2753173749999997e-10 * (-NV_Ith_S(mParameters, 3) + NV_Ith_S(mParameters, 1) * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) : (0.00019748616671718709 * (-NV_Ith_S(mParameters, 3) + NV_Ith_S(mParameters, 1) * _lt_0_row[6]) * NV_Ith_S(mParameters, 5) * var_chaste_interface__membrane__V / (_lt_0_row[7]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 + 0.099999999999999978 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (2.9307318749999998e-11 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_sl * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(9.9999999999999995e-8)) + 2.9307318749999998e-11 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_sl * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) - 2.9307318749999998e-11 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_sl * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) : (1.0971453706510394e-5 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_sl * _lt_0_row[6]) * NV_Ith_S(mParameters, 5) * var_chaste_interface__membrane__V / (_lt_0_row[7]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 + 0.099999999999999978 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (9.5939859749999992e-7 * (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_sl * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(9.9999999999999995e-8)) + 9.5939859749999992e-7 * (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) - 9.5939859749999992e-7 * (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) : (0.71831868267118426 * (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_sl * _lt_0_row[8]) * NV_Ith_S(mParameters, 5) * var_chaste_interface__membrane__V / (_lt_0_row[9]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 + 0.11 * pow(var_chaste_interface__Fast_Na_Current__m, 3) * (-var_Nerst_Potentials__E_Na_junc + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 7) * var_chaste_interface__Fast_Na_Current__h * var_chaste_interface__Fast_Na_Current__j + 0.90000000000000002 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (2.9307318749999998e-11 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_j * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(9.9999999999999995e-8)) + 2.9307318749999998e-11 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_j * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) - 2.9307318749999998e-11 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_j * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) : (1.0971453706510394e-5 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_j * _lt_0_row[6]) * NV_Ith_S(mParameters, 5) * var_chaste_interface__membrane__V / (_lt_0_row[7]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 + 0.90000000000000002 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (9.5939859749999992e-7 * (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_j * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(9.9999999999999995e-8)) + 9.5939859749999992e-7 * (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) - 9.5939859749999992e-7 * (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) : (0.71831868267118426 * (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_j * _lt_0_row[8]) * NV_Ith_S(mParameters, 5) * var_chaste_interface__membrane__V / (_lt_0_row[9]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 + 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 3)) * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 10) * var_chaste_interface__Rapidly_Activating_K_Current__x_Kr / (_lt_0_row[10]) + 0.89000000000000001 * pow(var_chaste_interface__Fast_Na_Current__m, 3) * (-var_Nerst_Potentials__E_Na_sl + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 7) * var_chaste_interface__Fast_Na_Current__h * var_chaste_interface__Fast_Na_Current__j + 1.7616910247448803 * sqrt(NV_Ith_S(mParameters, 3)) * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 9) / ((1.0 + exp(-6.0745197599999994 + 0.12164999999999999 * var_chaste_interface__membrane__V - 0.12164999999999999 * var_Nerst_Potentials__E_K)) * (4.0937999999999999 / (1.0 + exp(-6.0745197599999994 + 0.12164999999999999 * var_chaste_interface__membrane__V - 0.12164999999999999 * var_Nerst_Potentials__E_K)) + (15.7197 * exp(-0.21949596900000001 + 0.067390000000000005 * var_chaste_interface__membrane__V - 0.067390000000000005 * var_Nerst_Potentials__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_Nerst_Potentials__E_K)) / (1.0 + exp(-2.3135610949999998 + 0.16284999999999999 * var_Nerst_Potentials__E_K - 0.16284999999999999 * var_chaste_interface__membrane__V)))); // picoA_per_picoF
        const double var_chaste_interface__i_ionic = HeartConfig::Instance()->GetCapacitance() * var_membrane__I_tot; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellcarro_2011_epiFromCellMLCvodeOpt::EvaluateYDerivatives(double var_chaste_interface__environment__t, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -84.13368
        double var_chaste_interface__Calcium_Concentrations__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 9.658067e-05
        double var_chaste_interface__Fast_Na_Current__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.002163678
        double var_chaste_interface__Fast_Na_Current__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.7126555
        double var_chaste_interface__Fast_Na_Current__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.7128671
        double var_chaste_interface__Rapidly_Activating_K_Current__x_Kr = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.01516232
        double var_chaste_interface__Slowly_Activating_K_Current__x_Ks = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.003549354
        double var_chaste_interface__Transient_Outward_K_Current__x_to_s = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.0003584727
        double var_chaste_interface__Transient_Outward_K_Current__y_to_s = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.8087629
        double var_chaste_interface__Transient_Outward_K_Current__x_to_f = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.0003584625
        double var_chaste_interface__Transient_Outward_K_Current__y_to_f = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.9999976
        double var_chaste_interface__L_Type_Calcium_Current__d = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 1.871177e-06
        double var_chaste_interface__L_Type_Calcium_Current__f = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.9804391
        double var_chaste_interface__L_Type_Calcium_Current__f_2 = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.999401
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.02847118
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.01692189
        double var_chaste_interface__SR_Fluxes__Ry_Rr = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.8886338
        double var_chaste_interface__SR_Fluxes__Ry_Ro = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 1.126209e-06
        double var_chaste_interface__SR_Fluxes__Ry_Ri = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 1.411382e-07
        double var_chaste_interface__Cytosolic_Ca_Buffers__TnC_l = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 0.009757237
        double var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_c = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 0.1225914
        double var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_m = NV_Ith_S(rY, 21);
        // Units: millimolar; Initial value: 0.00812201
        double var_chaste_interface__Cytosolic_Ca_Buffers__CaM = NV_Ith_S(rY, 22);
        // Units: millimolar; Initial value: 0.0003267494
        double var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 0.002520383
        double var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 0.1369529
        double var_chaste_interface__Cytosolic_Ca_Buffers__SRB = NV_Ith_S(rY, 25);
        // Units: millimolar; Initial value: 0.002373753
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j = NV_Ith_S(rY, 26);
        // Units: millimolar; Initial value: 0.008563314
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl = NV_Ith_S(rY, 27);
        // Units: millimolar; Initial value: 0.01097424
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j = NV_Ith_S(rY, 28);
        // Units: millimolar; Initial value: 0.08053908
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl = NV_Ith_S(rY, 29);
        // Units: millimolar; Initial value: 0.1235381
        double var_chaste_interface__Sodium_Concentrations__Na_j = NV_Ith_S(rY, 30);
        // Units: millimolar; Initial value: 10.07931
        double var_chaste_interface__Sodium_Concentrations__Na_sl = NV_Ith_S(rY, 31);
        // Units: millimolar; Initial value: 10.0781
        double var_chaste_interface__Sodium_Concentrations__Na_i = NV_Ith_S(rY, 32);
        // Units: millimolar; Initial value: 10.07825
        double var_chaste_interface__Sodium_Concentrations__Na_B_j = NV_Ith_S(rY, 33);
        // Units: millimolar; Initial value: 3.796195
        double var_chaste_interface__Sodium_Concentrations__Na_B_sl = NV_Ith_S(rY, 34);
        // Units: millimolar; Initial value: 0.8283308
        double var_chaste_interface__Calcium_Concentrations__Ca_j = NV_Ith_S(rY, 35);
        // Units: millimolar; Initial value: 0.0002038197
        double var_chaste_interface__Calcium_Concentrations__Ca_sl = NV_Ith_S(rY, 36);
        // Units: millimolar; Initial value: 0.0001184305
        double var_chaste_interface__Calcium_Concentrations__Ca_SR = NV_Ith_S(rY, 37);
        // Units: millimolar; Initial value: 0.6093596
        double var_chaste_interface__Calcium_Concentrations__Csqn_b = NV_Ith_S(rY, 38);
        // Units: millimolar; Initial value: 1.258048

        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_epiFromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_epiFromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        double d_dt_chaste_interface_var_membrane__V;
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__CaM = -0.23799999999999999 * var_chaste_interface__Cytosolic_Ca_Buffers__CaM + 34.0 * (0.024 - var_chaste_interface__Cytosolic_Ca_Buffers__CaM) * var_chaste_interface__Calcium_Concentrations__Ca_i; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_c = -0.00046000000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c + 13.800000000000001 * (0.14000000000000001 - var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c - var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m) * var_chaste_interface__Calcium_Concentrations__Ca_i; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__SRB = -0.059999999999999998 * var_chaste_interface__Cytosolic_Ca_Buffers__SRB + 100.0 * (0.017100000000000001 - var_chaste_interface__Cytosolic_Ca_Buffers__SRB) * var_chaste_interface__Calcium_Concentrations__Ca_i; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_h_c = -3.1999999999999999e-5 * var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_c + 2.3700000000000001 * (0.14000000000000001 - var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_c - var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_m) * var_chaste_interface__Calcium_Concentrations__Ca_i; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_l = -0.019599999999999999 * var_chaste_interface__Cytosolic_Ca_Buffers__TnC_l + 32.700000000000003 * (0.070000000000000007 - var_chaste_interface__Cytosolic_Ca_Buffers__TnC_l) * var_chaste_interface__Calcium_Concentrations__Ca_i; // millimolar / millisecond
        const double d_dt_chaste_interface_var_L_Type_Calcium_Current__f_Ca_B_j = -0.011900000000000001 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j + 1.7 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * var_chaste_interface__Calcium_Concentrations__Ca_j; // 1 / millisecond
        const double d_dt_chaste_interface_var_L_Type_Calcium_Current__f_Ca_B_sl = -0.011900000000000001 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl + 1.7 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * var_chaste_interface__Calcium_Concentrations__Ca_sl; // 1 / millisecond
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_m = 0.0021979999999999999 - 0.015699999999999999 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c - 0.015757 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_h_m = 0.00042000000000000007 - 0.0030000000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_c - 0.0063300000000000006 * var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_m; // millimolar / millisecond
        const double var_SR_Fluxes__J_SR_leak = 5.3480000000000003e-6 * var_chaste_interface__Calcium_Concentrations__Ca_SR - 5.3480000000000003e-6 * var_chaste_interface__Calcium_Concentrations__Ca_j; // milliM_per_millis
        const double var_SR_Fluxes__RI = 1.0 - var_chaste_interface__SR_Fluxes__Ry_Ri - var_chaste_interface__SR_Fluxes__Ry_Ro - var_chaste_interface__SR_Fluxes__Ry_Rr; // dimensionless
        const double var_SR_Fluxes__J_ser_Ca = (2814485.1633595936 * pow(var_chaste_interface__Calcium_Concentrations__Ca_i, 1.7869999999999999) - 0.38742512113256738 * pow(var_chaste_interface__Calcium_Concentrations__Ca_SR, 1.7869999999999999)) * NV_Ith_S(mParameters, 0) / (1.0 + 0.38742512113256738 * pow(var_chaste_interface__Calcium_Concentrations__Ca_SR, 1.7869999999999999) + 2814485.1633595936 * pow(var_chaste_interface__Calcium_Concentrations__Ca_i, 1.7869999999999999)); // milliM_per_millis
        const double var_SR_Fluxes__k_Ca_SR = 15.0 - 14.0 / (1.0 + 0.13584112963311223 * pow((1 / var_chaste_interface__Calcium_Concentrations__Ca_SR), 2.5)); // dimensionless
        const double var_SR_Fluxes__ki_SR_Ca = 0.5 * var_SR_Fluxes__k_Ca_SR; // per_milliM_per_millis
        const double var_SR_Fluxes__ko_SR_Ca = 10.0 / var_SR_Fluxes__k_Ca_SR; // per_milliM2_per_millis
        const double d_dt_chaste_interface_var_SR_Fluxes__Ry_Ri = -0.065000000000000002 * var_chaste_interface__SR_Fluxes__Ry_Ri + pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2) * var_SR_Fluxes__RI * var_SR_Fluxes__ko_SR_Ca + var_chaste_interface__Calcium_Concentrations__Ca_j * var_chaste_interface__SR_Fluxes__Ry_Ro * var_SR_Fluxes__ki_SR_Ca; // 1 / millisecond
        const double d_dt_chaste_interface_var_SR_Fluxes__Ry_Ro = 0.0050000000000000001 * var_chaste_interface__SR_Fluxes__Ry_Ri - 0.059999999999999998 * var_chaste_interface__SR_Fluxes__Ry_Ro + pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2) * var_chaste_interface__SR_Fluxes__Ry_Rr * var_SR_Fluxes__ko_SR_Ca - var_chaste_interface__Calcium_Concentrations__Ca_j * var_chaste_interface__SR_Fluxes__Ry_Ro * var_SR_Fluxes__ki_SR_Ca; // 1 / millisecond
        const double d_dt_chaste_interface_var_SR_Fluxes__Ry_Rr = 0.059999999999999998 * var_chaste_interface__SR_Fluxes__Ry_Ro + 0.0050000000000000001 * var_SR_Fluxes__RI - pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2) * var_chaste_interface__SR_Fluxes__Ry_Rr * var_SR_Fluxes__ko_SR_Ca - var_chaste_interface__Calcium_Concentrations__Ca_j * var_chaste_interface__SR_Fluxes__Ry_Rr * var_SR_Fluxes__ki_SR_Ca; // 1 / millisecond
        const double var_SR_Fluxes__J_SR_Ca_rel = 25.0 * (-var_chaste_interface__Calcium_Concentrations__Ca_j + var_chaste_interface__Calcium_Concentrations__Ca_SR) * var_chaste_interface__SR_Fluxes__Ry_Ro; // milliM_per_millis
        const double d_dt_chaste_interface_var_Sodium_Concentrations__Na_B_j = -0.001 * var_chaste_interface__Sodium_Concentrations__Na_B_j + 0.0001 * (7.5609999999999999 - var_chaste_interface__Sodium_Concentrations__Na_B_j) * var_chaste_interface__Sodium_Concentrations__Na_j; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Sodium_Concentrations__Na_B_sl = -0.001 * var_chaste_interface__Sodium_Concentrations__Na_B_sl + 0.0001 * (1.6499999999999999 - var_chaste_interface__Sodium_Concentrations__Na_B_sl) * var_chaste_interface__Sodium_Concentrations__Na_sl; // millimolar / millisecond
        const double var_Nerst_Potentials__E_Na_junc = 26.712338705498265 * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__Sodium_Concentrations__Na_j); // millivolt
        const double var_Nerst_Potentials__E_Na_sl = 26.712338705498265 * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__Sodium_Concentrations__Na_sl); // millivolt
        const double d_dt_chaste_interface_var_Fast_Na_Current__h = (-var_chaste_interface__Fast_Na_Current__h + _lt_0_row[11]) * (_lt_0_row[12]); // 1 / millisecond
        const double d_dt_chaste_interface_var_Fast_Na_Current__j = (-var_chaste_interface__Fast_Na_Current__j + _lt_0_row[11]) * (_lt_0_row[13]); // 1 / millisecond
        const double d_dt_chaste_interface_var_Fast_Na_Current__m = (-var_chaste_interface__Fast_Na_Current__m + _lt_0_row[14]) / (_lt_0_row[15]); // 1 / millisecond
        const double d_dt_chaste_interface_var_L_Type_Calcium_Current__d = (-var_chaste_interface__L_Type_Calcium_Current__d + _lt_0_row[16]) / (_lt_0_row[17]); // 1 / millisecond
        const double d_dt_chaste_interface_var_L_Type_Calcium_Current__f = (-var_chaste_interface__L_Type_Calcium_Current__f + _lt_0_row[18]) / (_lt_0_row[19]); // 1 / millisecond
        const double d_dt_chaste_interface_var_L_Type_Calcium_Current__f_2 = (0.33000000000000002 - var_chaste_interface__L_Type_Calcium_Current__f_2 + _lt_0_row[20]) / (_lt_0_row[21]); // 1 / millisecond
        const double var_Na_Ca_Exchanger_Current__I_ncx_junc = 0.11 * (pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) * NV_Ith_S(mParameters, 2) * _lt_0_row[0] - pow(NV_Ith_S(mParameters, 4), 3) * var_chaste_interface__Calcium_Concentrations__Ca_j * _lt_0_row[1]) * NV_Ith_S(mParameters, 13) / ((_lt_0_row[2]) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2)) * (1.3 * pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) + pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3) * NV_Ith_S(mParameters, 2) + pow(NV_Ith_S(mParameters, 4), 3) * var_chaste_interface__Calcium_Concentrations__Ca_j + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Calcium_Concentrations__Ca_j) * var_chaste_interface__Calcium_Concentrations__Ca_j + 0.0035899999999999999 * pow(NV_Ith_S(mParameters, 4), 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3)))); // picoA_per_picoF
        const double var_Calcium_Concentrations__I_Ca_tot_junc = 6.0643000000000002e-5 * var_chaste_interface__membrane__V - 2.0 * var_Na_Ca_Exchanger_Current__I_ncx_junc - 0.00080995817805876559 * log(NV_Ith_S(mParameters, 2) / var_chaste_interface__Calcium_Concentrations__Ca_j) + 0.0074029999999999999 * pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 1.6000000000000001) / (5.2281977629563632e-6 + pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 1.6000000000000001)) + 0.90000000000000002 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (9.5939859749999992e-7 * (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_j * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(9.9999999999999995e-8)) + 9.5939859749999992e-7 * (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) - 9.5939859749999992e-7 * (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) : (0.71831868267118426 * (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_j * _lt_0_row[8]) * NV_Ith_S(mParameters, 5) * var_chaste_interface__membrane__V / (_lt_0_row[9]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2; // picoA_per_picoF
        const double var_Na_Ca_Exchanger_Current__I_ncx_sl = 0.89000000000000001 * (pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) * NV_Ith_S(mParameters, 2) * _lt_0_row[0] - pow(NV_Ith_S(mParameters, 4), 3) * var_chaste_interface__Calcium_Concentrations__Ca_sl * _lt_0_row[1]) * NV_Ith_S(mParameters, 13) / ((_lt_0_row[2]) * (1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 2)) * (1.3 * pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) + pow(NV_Ith_S(mParameters, 4), 3) * var_chaste_interface__Calcium_Concentrations__Ca_sl + pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3) * NV_Ith_S(mParameters, 2) + 669921.875 * (1.0 + 278.55153203342621 * var_chaste_interface__Calcium_Concentrations__Ca_sl) * var_chaste_interface__Calcium_Concentrations__Ca_sl + 0.0035899999999999999 * pow(NV_Ith_S(mParameters, 4), 3) * (1.0 + 0.00053869674493876331 * pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3)))); // picoA_per_picoF
        const double var_Calcium_Concentrations__I_Ca_tot_sl = 0.00049065700000000003 * var_chaste_interface__membrane__V - 2.0 * var_Na_Ca_Exchanger_Current__I_ncx_sl - 0.0065532979861118307 * log(NV_Ith_S(mParameters, 2) / var_chaste_interface__Calcium_Concentrations__Ca_sl) + 0.059896999999999999 * pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 1.6000000000000001) / (5.2281977629563632e-6 + pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 1.6000000000000001)) + 0.099999999999999978 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (9.5939859749999992e-7 * (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_sl * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(9.9999999999999995e-8)) + 9.5939859749999992e-7 * (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) - 9.5939859749999992e-7 * (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) : (0.71831868267118426 * (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_sl * _lt_0_row[8]) * NV_Ith_S(mParameters, 5) * var_chaste_interface__membrane__V / (_lt_0_row[9]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2; // picoA_per_picoF
        const double var_Na_K_Pump_Current__f_NaK = 1 / (1.0 + _lt_0_row[4] + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * NV_Ith_S(mParameters, 4))) * _lt_0_row[3]); // dimensionless
        const double var_Na_K_Pump_Current__I_NaK_junc = 0.11 * NV_Ith_S(mParameters, 14) * var_Na_K_Pump_Current__f_NaK * NV_Ith_S(mParameters, 3) / ((1.0 + 14641.0 / pow(var_chaste_interface__Sodium_Concentrations__Na_j, 4)) * (1.5 + NV_Ith_S(mParameters, 3))); // picoA_per_picoF
        const double var_Na_K_Pump_Current__I_NaK_sl = 0.89000000000000001 * NV_Ith_S(mParameters, 14) * var_Na_K_Pump_Current__f_NaK * NV_Ith_S(mParameters, 3) / ((1.0 + 14641.0 / pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 4)) * (1.5 + NV_Ith_S(mParameters, 3))); // picoA_per_picoF
        const double d_dt_chaste_interface_var_Rapidly_Activating_K_Current__x_Kr = (-var_chaste_interface__Rapidly_Activating_K_Current__x_Kr + _lt_0_row[22]) / (_lt_0_row[23]); // 1 / millisecond
        const double d_dt_chaste_interface_var_Slowly_Activating_K_Current__x_Ks = (_lt_0_row[25]) * (-var_chaste_interface__Slowly_Activating_K_Current__x_Ks + _lt_0_row[24]); // 1 / millisecond
        const double var_Sodium_Concentrations__I_Na_tot_junc = 3.0 * var_Na_Ca_Exchanger_Current__I_ncx_junc + 3.0 * var_Na_K_Pump_Current__I_NaK_junc + 6.567e-5 * var_chaste_interface__membrane__V - 6.567e-5 * var_Nerst_Potentials__E_Na_junc + 0.11 * pow(var_chaste_interface__Fast_Na_Current__m, 3) * (-var_Nerst_Potentials__E_Na_junc + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 7) * var_chaste_interface__Fast_Na_Current__h * var_chaste_interface__Fast_Na_Current__j + 0.90000000000000002 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (2.9307318749999998e-11 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_j * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(9.9999999999999995e-8)) + 2.9307318749999998e-11 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_j * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) - 2.9307318749999998e-11 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_j * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) : (1.0971453706510394e-5 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_j * _lt_0_row[6]) * NV_Ith_S(mParameters, 5) * var_chaste_interface__membrane__V / (_lt_0_row[7]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2; // picoA_per_picoF
        const double var_Sodium_Concentrations__I_Na_tot_sl = 3.0 * var_Na_Ca_Exchanger_Current__I_ncx_sl + 3.0 * var_Na_K_Pump_Current__I_NaK_sl + 0.00053133 * var_chaste_interface__membrane__V - 0.00053133 * var_Nerst_Potentials__E_Na_sl + 0.099999999999999978 * (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (2.9307318749999998e-11 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_sl * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(9.9999999999999995e-8)) + 2.9307318749999998e-11 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_sl * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) - 2.9307318749999998e-11 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_sl * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) : (1.0971453706510394e-5 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_sl * _lt_0_row[6]) * NV_Ith_S(mParameters, 5) * var_chaste_interface__membrane__V / (_lt_0_row[7]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 + 0.89000000000000001 * pow(var_chaste_interface__Fast_Na_Current__m, 3) * (-var_Nerst_Potentials__E_Na_sl + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 7) * var_chaste_interface__Fast_Na_Current__h * var_chaste_interface__Fast_Na_Current__j; // picoA_per_picoF
        const double var_Transient_Outward_K_Current__x_to_ss = _lt_0_row[26]; // dimensionless
        const double d_dt_chaste_interface_var_Transient_Outward_K_Current__x_to_f = (-var_chaste_interface__Transient_Outward_K_Current__x_to_f + var_Transient_Outward_K_Current__x_to_ss) / (_lt_0_row[27]); // 1 / millisecond
        const double d_dt_chaste_interface_var_Transient_Outward_K_Current__x_to_s = (-var_chaste_interface__Transient_Outward_K_Current__x_to_s + var_Transient_Outward_K_Current__x_to_ss) / (_lt_0_row[28]); // 1 / millisecond
        const double var_Transient_Outward_K_Current__y_to_ss = _lt_0_row[29]; // dimensionless
        const double d_dt_chaste_interface_var_Transient_Outward_K_Current__y_to_f = (-var_chaste_interface__Transient_Outward_K_Current__y_to_f + var_Transient_Outward_K_Current__y_to_ss) / (_lt_0_row[30]); // 1 / millisecond
        const double d_dt_chaste_interface_var_Transient_Outward_K_Current__y_to_s = (-var_chaste_interface__Transient_Outward_K_Current__y_to_s + var_Transient_Outward_K_Current__y_to_ss) / (_lt_0_row[31]); // 1 / millisecond
        const double var_membrane__V_cell = 1.050625e-11 * M_PI; // liter
        const double var_membrane__V_junc = 0.00053899999999999998 * var_membrane__V_cell; // liter
        const double d_dt_chaste_interface_var_Sodium_Concentrations__Na_j = -d_dt_chaste_interface_var_Sodium_Concentrations__Na_B_j + 1.8312999999999999e-14 * (-var_chaste_interface__Sodium_Concentrations__Na_j + var_chaste_interface__Sodium_Concentrations__Na_sl) / var_membrane__V_junc - 1.0364305332435094e-5 * var_Sodium_Concentrations__I_Na_tot_junc * NV_Ith_S(mParameters, 6) / var_membrane__V_junc; // millimolar / millisecond
        const double var_membrane__V_myo = 0.65000000000000002 * var_membrane__V_cell; // liter
        const double d_dt_chaste_interface_var_Sodium_Concentrations__Na_i = 1.6385999999999999e-12 * (-var_chaste_interface__Sodium_Concentrations__Na_i + var_chaste_interface__Sodium_Concentrations__Na_sl) / var_membrane__V_myo; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_j = -0.029999999999999999 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j + 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j + 0.000165 * var_membrane__V_myo / var_membrane__V_junc) * var_chaste_interface__Calcium_Concentrations__Ca_j; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_j = -1.3 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j + 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j + 0.00046000000000000001 * var_membrane__V_myo / var_membrane__V_junc) * var_chaste_interface__Calcium_Concentrations__Ca_j; // millimolar / millisecond
        const double var_membrane__V_sl = 0.02 * var_membrane__V_cell; // liter
        const double d_dt_chaste_interface_var_Sodium_Concentrations__Na_sl = -d_dt_chaste_interface_var_Sodium_Concentrations__Na_B_sl + 1.6385999999999999e-12 * (-var_chaste_interface__Sodium_Concentrations__Na_sl + var_chaste_interface__Sodium_Concentrations__Na_i) / var_membrane__V_sl + 1.8312999999999999e-14 * (-var_chaste_interface__Sodium_Concentrations__Na_sl + var_chaste_interface__Sodium_Concentrations__Na_j) / var_membrane__V_sl - 1.0364305332435094e-5 * var_Sodium_Concentrations__I_Na_tot_sl * NV_Ith_S(mParameters, 6) / var_membrane__V_sl; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_sl = -0.029999999999999999 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl + 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl + 0.0134 * var_membrane__V_myo / var_membrane__V_sl) * var_chaste_interface__Calcium_Concentrations__Ca_sl; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_sl = -1.3 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl + 100.0 * (-var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl + 0.037400000000000003 * var_membrane__V_myo / var_membrane__V_sl) * var_chaste_interface__Calcium_Concentrations__Ca_sl; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Calcium_Concentrations__Ca_sl = -d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_sl - d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_sl + 8.2413000000000004e-13 * (-var_chaste_interface__Calcium_Concentrations__Ca_sl + var_chaste_interface__Calcium_Concentrations__Ca_j) / var_membrane__V_sl + 3.7243000000000002e-12 * (-var_chaste_interface__Calcium_Concentrations__Ca_sl + var_chaste_interface__Calcium_Concentrations__Ca_i) / var_membrane__V_sl - 5.182152666217547e-6 * var_Calcium_Concentrations__I_Ca_tot_sl * NV_Ith_S(mParameters, 6) / var_membrane__V_sl; // millimolar / millisecond
        const double var_membrane__V_sr = 0.035000000000000003 * var_membrane__V_cell; // liter
        const double d_dt_chaste_interface_var_Calcium_Concentrations__Ca_i = -d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__CaM - d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_c - d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_m - d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__SRB - d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_h_c - d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_h_m - d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_l + 3.7243000000000002e-12 * (-var_chaste_interface__Calcium_Concentrations__Ca_i + var_chaste_interface__Calcium_Concentrations__Ca_sl) / var_membrane__V_myo - var_SR_Fluxes__J_ser_Ca * var_membrane__V_sr / var_membrane__V_myo; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Calcium_Concentrations__Ca_j = -d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_j - d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_j + 8.2413000000000004e-13 * (-var_chaste_interface__Calcium_Concentrations__Ca_j + var_chaste_interface__Calcium_Concentrations__Ca_sl) / var_membrane__V_junc + var_SR_Fluxes__J_SR_Ca_rel * var_membrane__V_sr / var_membrane__V_junc + var_SR_Fluxes__J_SR_leak * var_membrane__V_myo / var_membrane__V_junc - 5.182152666217547e-6 * var_Calcium_Concentrations__I_Ca_tot_junc * NV_Ith_S(mParameters, 6) / var_membrane__V_junc; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Calcium_Concentrations__Csqn_b = -65.0 * var_chaste_interface__Calcium_Concentrations__Csqn_b + 100.0 * (-var_chaste_interface__Calcium_Concentrations__Csqn_b + 0.14000000000000001 * var_membrane__V_myo / var_membrane__V_sr) * var_chaste_interface__Calcium_Concentrations__Ca_SR; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Calcium_Concentrations__Ca_SR = -d_dt_chaste_interface_var_Calcium_Concentrations__Csqn_b - var_SR_Fluxes__J_SR_Ca_rel - var_SR_Fluxes__J_SR_leak * var_membrane__V_myo / var_membrane__V_sr + var_SR_Fluxes__J_ser_Ca; // millimolar / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_membrane__V = 0.0;
        }
        else
        {
            const double var_Nerst_Potentials__E_K = 26.712338705498265 * log(NV_Ith_S(mParameters, 3) / NV_Ith_S(mParameters, 1)); // millivolt
            const double var_Nerst_Potentials__E_Ks = 26.712338705498265 * log((0.018329999999999999 * NV_Ith_S(mParameters, 4) + NV_Ith_S(mParameters, 3)) / (0.018329999999999999 * var_chaste_interface__Sodium_Concentrations__Na_i + NV_Ith_S(mParameters, 1))); // millivolt
            d_dt_chaste_interface_var_membrane__V = -0.5535668961205934 - var_Calcium_Concentrations__I_Ca_tot_junc - var_Calcium_Concentrations__I_Ca_tot_sl - var_Sodium_Concentrations__I_Na_tot_junc - var_Sodium_Concentrations__I_Na_tot_sl + 2.0 * var_Na_K_Pump_Current__I_NaK_junc + 2.0 * var_Na_K_Pump_Current__I_NaK_sl - 0.0089999999999999993 * var_chaste_interface__membrane__V - GetIntracellularAreaStimulus(var_chaste_interface__environment__t) / HeartConfig::Instance()->GetCapacitance() - 0.002 * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) / (_lt_0_row[5]) - 0.048783569999999998 * (61.507432902288166 + var_chaste_interface__membrane__V) / (1.0 + 0.10000000000000001 / var_chaste_interface__Calcium_Concentrations__Ca_sl) - 0.0060294299999999997 * (61.507432902288166 + var_chaste_interface__membrane__V) / (1.0 + 0.10000000000000001 / var_chaste_interface__Calcium_Concentrations__Ca_j) - pow(var_chaste_interface__Slowly_Activating_K_Current__x_Ks, 2) * (-var_Nerst_Potentials__E_Ks + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 11) - (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 8) * var_chaste_interface__Transient_Outward_K_Current__x_to_f * var_chaste_interface__Transient_Outward_K_Current__y_to_f - (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 12) * var_chaste_interface__Transient_Outward_K_Current__x_to_s * var_chaste_interface__Transient_Outward_K_Current__y_to_s - (1.0 - 0.099999999999999978 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl - 0.90000000000000002 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (5.2753173749999997e-10 * (-NV_Ith_S(mParameters, 3) + NV_Ith_S(mParameters, 1) * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(9.9999999999999995e-8)) + 5.2753173749999997e-10 * (-NV_Ith_S(mParameters, 3) + NV_Ith_S(mParameters, 1) * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) - 5.2753173749999997e-10 * (-NV_Ith_S(mParameters, 3) + NV_Ith_S(mParameters, 1) * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) : (0.00019748616671718709 * (-NV_Ith_S(mParameters, 3) + NV_Ith_S(mParameters, 1) * _lt_0_row[6]) * NV_Ith_S(mParameters, 5) * var_chaste_interface__membrane__V / (_lt_0_row[7]))) * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 - 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 3)) * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 10) * var_chaste_interface__Rapidly_Activating_K_Current__x_Kr / (_lt_0_row[10]) - 1.7616910247448803 * sqrt(NV_Ith_S(mParameters, 3)) * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 9) / ((1.0 + exp(-6.0745197599999994 + 0.12164999999999999 * var_chaste_interface__membrane__V - 0.12164999999999999 * var_Nerst_Potentials__E_K)) * (4.0937999999999999 / (1.0 + exp(-6.0745197599999994 + 0.12164999999999999 * var_chaste_interface__membrane__V - 0.12164999999999999 * var_Nerst_Potentials__E_K)) + (15.7197 * exp(-0.21949596900000001 + 0.067390000000000005 * var_chaste_interface__membrane__V - 0.067390000000000005 * var_Nerst_Potentials__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_Nerst_Potentials__E_K)) / (1.0 + exp(-2.3135610949999998 + 0.16284999999999999 * var_Nerst_Potentials__E_K - 0.16284999999999999 * var_chaste_interface__membrane__V)))); // millivolt / millisecond
        }
        
        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_membrane__V;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_Calcium_Concentrations__Ca_i;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_Fast_Na_Current__m;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_Fast_Na_Current__h;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_Fast_Na_Current__j;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_Rapidly_Activating_K_Current__x_Kr;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_Slowly_Activating_K_Current__x_Ks;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_Transient_Outward_K_Current__x_to_s;
        NV_Ith_S(rDY,8) = d_dt_chaste_interface_var_Transient_Outward_K_Current__y_to_s;
        NV_Ith_S(rDY,9) = d_dt_chaste_interface_var_Transient_Outward_K_Current__x_to_f;
        NV_Ith_S(rDY,10) = d_dt_chaste_interface_var_Transient_Outward_K_Current__y_to_f;
        NV_Ith_S(rDY,11) = d_dt_chaste_interface_var_L_Type_Calcium_Current__d;
        NV_Ith_S(rDY,12) = d_dt_chaste_interface_var_L_Type_Calcium_Current__f;
        NV_Ith_S(rDY,13) = d_dt_chaste_interface_var_L_Type_Calcium_Current__f_2;
        NV_Ith_S(rDY,14) = d_dt_chaste_interface_var_L_Type_Calcium_Current__f_Ca_B_j;
        NV_Ith_S(rDY,15) = d_dt_chaste_interface_var_L_Type_Calcium_Current__f_Ca_B_sl;
        NV_Ith_S(rDY,16) = d_dt_chaste_interface_var_SR_Fluxes__Ry_Rr;
        NV_Ith_S(rDY,17) = d_dt_chaste_interface_var_SR_Fluxes__Ry_Ro;
        NV_Ith_S(rDY,18) = d_dt_chaste_interface_var_SR_Fluxes__Ry_Ri;
        NV_Ith_S(rDY,19) = d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_l;
        NV_Ith_S(rDY,20) = d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_h_c;
        NV_Ith_S(rDY,21) = d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__TnC_h_m;
        NV_Ith_S(rDY,22) = d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__CaM;
        NV_Ith_S(rDY,23) = d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_c;
        NV_Ith_S(rDY,24) = d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__Myo_m;
        NV_Ith_S(rDY,25) = d_dt_chaste_interface_var_Cytosolic_Ca_Buffers__SRB;
        NV_Ith_S(rDY,26) = d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_j;
        NV_Ith_S(rDY,27) = d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLL_sl;
        NV_Ith_S(rDY,28) = d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_j;
        NV_Ith_S(rDY,29) = d_dt_chaste_interface_var_Junctional_and_SL_Ca_Buffers__SLH_sl;
        NV_Ith_S(rDY,30) = d_dt_chaste_interface_var_Sodium_Concentrations__Na_j;
        NV_Ith_S(rDY,31) = d_dt_chaste_interface_var_Sodium_Concentrations__Na_sl;
        NV_Ith_S(rDY,32) = d_dt_chaste_interface_var_Sodium_Concentrations__Na_i;
        NV_Ith_S(rDY,33) = d_dt_chaste_interface_var_Sodium_Concentrations__Na_B_j;
        NV_Ith_S(rDY,34) = d_dt_chaste_interface_var_Sodium_Concentrations__Na_B_sl;
        NV_Ith_S(rDY,35) = d_dt_chaste_interface_var_Calcium_Concentrations__Ca_j;
        NV_Ith_S(rDY,36) = d_dt_chaste_interface_var_Calcium_Concentrations__Ca_sl;
        NV_Ith_S(rDY,37) = d_dt_chaste_interface_var_Calcium_Concentrations__Ca_SR;
        NV_Ith_S(rDY,38) = d_dt_chaste_interface_var_Calcium_Concentrations__Csqn_b;
    }

    void Cellcarro_2011_epiFromCellMLCvodeOpt::EvaluateAnalyticJacobian(double var_chaste_interface__environment__t, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -84.13368
        double var_chaste_interface__Calcium_Concentrations__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 9.658067e-05
        double var_chaste_interface__Fast_Na_Current__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.002163678
        double var_chaste_interface__Fast_Na_Current__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.7126555
        double var_chaste_interface__Fast_Na_Current__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.7128671
        double var_chaste_interface__Rapidly_Activating_K_Current__x_Kr = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.01516232
        double var_chaste_interface__Slowly_Activating_K_Current__x_Ks = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.003549354
        double var_chaste_interface__Transient_Outward_K_Current__x_to_s = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.0003584727
        double var_chaste_interface__Transient_Outward_K_Current__y_to_s = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.8087629
        double var_chaste_interface__Transient_Outward_K_Current__x_to_f = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.0003584625
        double var_chaste_interface__Transient_Outward_K_Current__y_to_f = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.9999976
        double var_chaste_interface__L_Type_Calcium_Current__d = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 1.871177e-06
        double var_chaste_interface__L_Type_Calcium_Current__f = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.9804391
        double var_chaste_interface__L_Type_Calcium_Current__f_2 = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.999401
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.02847118
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.01692189
        double var_chaste_interface__SR_Fluxes__Ry_Rr = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.8886338
        double var_chaste_interface__SR_Fluxes__Ry_Ro = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 1.126209e-06
        double var_chaste_interface__SR_Fluxes__Ry_Ri = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 1.411382e-07
        double var_chaste_interface__Cytosolic_Ca_Buffers__TnC_l = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 0.009757237
        double var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_c = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 0.1225914
        double var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_m = NV_Ith_S(rY, 21);
        // Units: millimolar; Initial value: 0.00812201
        double var_chaste_interface__Cytosolic_Ca_Buffers__CaM = NV_Ith_S(rY, 22);
        // Units: millimolar; Initial value: 0.0003267494
        double var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 0.002520383
        double var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 0.1369529
        double var_chaste_interface__Cytosolic_Ca_Buffers__SRB = NV_Ith_S(rY, 25);
        // Units: millimolar; Initial value: 0.002373753
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j = NV_Ith_S(rY, 26);
        // Units: millimolar; Initial value: 0.008563314
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl = NV_Ith_S(rY, 27);
        // Units: millimolar; Initial value: 0.01097424
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j = NV_Ith_S(rY, 28);
        // Units: millimolar; Initial value: 0.08053908
        double var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl = NV_Ith_S(rY, 29);
        // Units: millimolar; Initial value: 0.1235381
        double var_chaste_interface__Sodium_Concentrations__Na_j = NV_Ith_S(rY, 30);
        // Units: millimolar; Initial value: 10.07931
        double var_chaste_interface__Sodium_Concentrations__Na_sl = NV_Ith_S(rY, 31);
        // Units: millimolar; Initial value: 10.0781
        double var_chaste_interface__Sodium_Concentrations__Na_i = NV_Ith_S(rY, 32);
        // Units: millimolar; Initial value: 10.07825
        double var_chaste_interface__Sodium_Concentrations__Na_B_j = NV_Ith_S(rY, 33);
        // Units: millimolar; Initial value: 3.796195
        double var_chaste_interface__Sodium_Concentrations__Na_B_sl = NV_Ith_S(rY, 34);
        // Units: millimolar; Initial value: 0.8283308
        double var_chaste_interface__Calcium_Concentrations__Ca_j = NV_Ith_S(rY, 35);
        // Units: millimolar; Initial value: 0.0002038197
        double var_chaste_interface__Calcium_Concentrations__Ca_sl = NV_Ith_S(rY, 36);
        // Units: millimolar; Initial value: 0.0001184305
        double var_chaste_interface__Calcium_Concentrations__Ca_SR = NV_Ith_S(rY, 37);
        // Units: millimolar; Initial value: 0.6093596
        double var_chaste_interface__Calcium_Concentrations__Csqn_b = NV_Ith_S(rY, 38);
        // Units: millimolar; Initial value: 1.258048
        
        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_epiFromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_epiFromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);
const double var_x0 = -NV_Ith_S(mParameters, 2);
        const double var_x1 = exp(9.9999999999999995e-8);
        const double var_x2 = var_x0 + var_x1 * var_chaste_interface__Calcium_Concentrations__Ca_sl;
        const double var_x3 = 1 / (-1.0 + var_x1);
        const double var_x4 = 0.35915934133559213 * NV_Ith_S(mParameters, 5);
        const double var_x5 = var_x3 * var_x4;
        const double var_x6 = exp(-9.9999999999999995e-8);
        const double var_x7 = var_x0 + var_x6 * var_chaste_interface__Calcium_Concentrations__Ca_sl;
        const double var_x8 = 1 / (-1.0 + var_x6);
        const double var_x9 = var_x4 * var_x8;
        const double var_x10 = var_x2 * var_x5 + var_x7 * var_x9;
        const double var_x11 = 0.099999999999999978 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl;
        const double var_x12 = -0.099999999999999978 + var_x11;
        const double var_x13 = var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2;
        const double var_x14 = var_x12 * var_x13;
        const double var_x15 = var_x14 * var_chaste_interface__L_Type_Calcium_Current__d;
        const double var_x16 = var_x0 + var_x1 * var_chaste_interface__Calcium_Concentrations__Ca_j;
        const double var_x17 = var_x0 + var_x6 * var_chaste_interface__Calcium_Concentrations__Ca_j;
        const double var_x18 = var_x16 * var_x5 + var_x17 * var_x9;
        const double var_x19 = 0.90000000000000002 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j;
        const double var_x20 = -0.90000000000000002 + var_x19;
        const double var_x21 = var_x13 * var_x20;
        const double var_x22 = var_x21 * var_chaste_interface__L_Type_Calcium_Current__d;
        const double var_x23 = -NV_Ith_S(mParameters, 4);
        const double var_x24 = var_x23 + var_x1 * var_chaste_interface__Sodium_Concentrations__Na_sl;
        const double var_x25 = 5.4857268532551972e-6 * NV_Ith_S(mParameters, 5);
        const double var_x26 = var_x25 * var_x3;
        const double var_x27 = var_x23 + var_x6 * var_chaste_interface__Sodium_Concentrations__Na_sl;
        const double var_x28 = var_x25 * var_x8;
        const double var_x29 = var_x24 * var_x26 + var_x27 * var_x28;
        const double var_x30 = var_x23 + var_x1 * var_chaste_interface__Sodium_Concentrations__Na_j;
        const double var_x31 = var_x23 + var_x6 * var_chaste_interface__Sodium_Concentrations__Na_j;
        const double var_x32 = var_x26 * var_x30 + var_x28 * var_x31;
        const double var_x33 = 9.8743083358593546e-5 * NV_Ith_S(mParameters, 5);
        const double var_x34 = -NV_Ith_S(mParameters, 3);
        const double var_x35 = var_x3 * (var_x34 + var_x1 * NV_Ith_S(mParameters, 1));
        const double var_x36 = var_x8 * (var_x34 + var_x6 * NV_Ith_S(mParameters, 1));
        const double var_x37 = -var_x11;
        const double var_x38 = -var_x19;
        const double var_x39 = 1.0 + var_x37 + var_x38;
        const double var_x40 = var_x13 * var_chaste_interface__L_Type_Calcium_Current__d;
        const double var_x41 = var_x39 * var_x40;
        const double var_x42 = exp(7.4880000000000004 - 0.16722408026755853 * var_chaste_interface__membrane__V);
        const double var_x43 = 1.0 + var_x42;
        const double var_x44 = 1 / var_chaste_interface__Calcium_Concentrations__Ca_sl;
        const double var_x45 = 1.0 + 0.10000000000000001 * var_x44;
        const double var_x46 = 1 / var_chaste_interface__Calcium_Concentrations__Ca_j;
        const double var_x47 = 1.0 + 0.10000000000000001 * var_x46;
        const double var_x48 = pow(var_chaste_interface__Slowly_Activating_K_Current__x_Ks, 2) * NV_Ith_S(mParameters, 11);
        const double var_x49 = NV_Ith_S(mParameters, 8) * var_chaste_interface__Transient_Outward_K_Current__y_to_f;
        const double var_x50 = NV_Ith_S(mParameters, 12) * var_chaste_interface__Transient_Outward_K_Current__y_to_s;
        const double var_x51 = log(NV_Ith_S(mParameters, 3) / NV_Ith_S(mParameters, 1));
        const double var_x52 = 26.712338705498265 * var_x51;
        const double var_x53 = -var_x52 + var_chaste_interface__membrane__V;
        const double var_x54 = pow(var_chaste_interface__Fast_Na_Current__m, 3);
        const double var_x55 = var_x54 * NV_Ith_S(mParameters, 7) * var_chaste_interface__Fast_Na_Current__j;
        const double var_x56 = var_x55 * var_chaste_interface__Fast_Na_Current__h;
        const double var_x57 = sqrt(NV_Ith_S(mParameters, 3));
        const double var_x58 = var_x57 * NV_Ith_S(mParameters, 10) * var_chaste_interface__Rapidly_Activating_K_Current__x_Kr;
        const double var_x59 = exp(3.0833333333333335 + 0.041666666666666664 * var_chaste_interface__membrane__V);
        const double var_x60 = 1.0 + var_x59;
        const double var_x61 = 0.43033148291193518 / var_x60;
        const double var_x62 = exp(-6.0745197599999994 + 0.12164999999999999 * var_chaste_interface__membrane__V - 3.2495560035238635 * var_x51);
        const double var_x63 = 1.0 + var_x62;
        const double var_x64 = 1 / var_x63;
        const double var_x65 = exp(-2.3135610949999998 + 4.350104358190392 * var_x51 - 0.16284999999999999 * var_chaste_interface__membrane__V);
        const double var_x66 = 1.0 + var_x65;
        const double var_x67 = 1 / var_x66;
        const double var_x68 = exp(-0.21949596900000001 + 0.067390000000000005 * var_chaste_interface__membrane__V - 1.8001445053635281 * var_x51);
        const double var_x69 = exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 1.6494869150645177 * var_x51);
        const double var_x70 = var_x69 + 15.7197 * var_x68;
        const double var_x71 = var_x67 * var_x70;
        const double var_x72 = var_x57 * NV_Ith_S(mParameters, 9) / (var_x71 + 4.0937999999999999 * var_x64);
        const double var_x73 = _lt_0_row[0];
        const double var_x74 = pow(var_chaste_interface__Sodium_Concentrations__Na_j, 3);
        const double var_x75 = var_x74 * NV_Ith_S(mParameters, 2);
        const double var_x76 = var_x73 * var_x75;
        const double var_x77 = _lt_0_row[1];
        const double var_x78 = pow(NV_Ith_S(mParameters, 4), 3);
        const double var_x79 = var_x78 * var_chaste_interface__Calcium_Concentrations__Ca_j;
        const double var_x80 = var_x77 * var_x79;
        const double var_x81 = 1.0 + 0.32000000000000001 * var_x77;
        const double var_x82 = NV_Ith_S(mParameters, 13) / var_x81;
        const double var_x83 = pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2);
        const double var_x84 = 1 / var_x83;
        const double var_x85 = 1.0 + 2.2499999999999996e-8 * var_x84;
        const double var_x86 = 1 / var_x85;
        const double var_x87 = (1.0 + 278.55153203342621 * var_chaste_interface__Calcium_Concentrations__Ca_j) * var_chaste_interface__Calcium_Concentrations__Ca_j;
        const double var_x88 = 1.0 + 0.00053869674493876331 * var_x74;
        const double var_x89 = 0.0035899999999999999 * var_x78;
        const double var_x90 = 1 / (var_x75 + var_x79 + 669921.875 * var_x87 + 1.3 * var_x74 + var_x88 * var_x89);
        const double var_x91 = var_x86 * var_x90;
        const double var_x92 = var_x82 * var_x91;
        const double var_x93 = var_x92 * (0.010107688547106707 * var_x76 + 0.027328194960695912 * var_x80);
        const double var_x94 = pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 3);
        const double var_x95 = var_x94 * NV_Ith_S(mParameters, 2);
        const double var_x96 = var_x73 * var_x95;
        const double var_x97 = var_x78 * var_chaste_interface__Calcium_Concentrations__Ca_sl;
        const double var_x98 = var_x77 * var_x97;
        const double var_x99 = pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, (-2));
        const double var_x100 = 1.0 + 2.2499999999999996e-8 * var_x99;
        const double var_x101 = 1 / var_x100;
        const double var_x102 = (1.0 + 278.55153203342621 * var_chaste_interface__Calcium_Concentrations__Ca_sl) * var_chaste_interface__Calcium_Concentrations__Ca_sl;
        const double var_x103 = 1.0 + 0.00053869674493876331 * var_x94;
        const double var_x104 = 1 / (var_x95 + var_x97 + 669921.875 * var_x102 + 1.3 * var_x94 + var_x103 * var_x89);
        const double var_x105 = var_x101 * var_x104;
        const double var_x106 = var_x105 * var_x82;
        const double var_x107 = var_x106 * (0.010107688547106707 * var_x96 + 0.027328194960695912 * var_x98);
        const double var_x108 = var_x62 / pow(var_x63, 2);
        const double var_x109 = pow(var_chaste_interface__Sodium_Concentrations__Na_j, (-4));
        const double var_x110 = exp(-0.003743588350780262 * var_chaste_interface__membrane__V);
        const double var_x111 = exp(0.01485884101040119 * NV_Ith_S(mParameters, 4));
        const double var_x112 = 0.037435883507802616 * var_chaste_interface__membrane__V;
        const double var_x113 = exp(-var_x112);
        const double var_x114 = 1.0 + 0.1245 * var_x110 + 0.036499999999999998 * var_x113 * (-0.14285714285714285 + 0.14285714285714285 * var_x111);
        const double var_x115 = NV_Ith_S(mParameters, 14) * NV_Ith_S(mParameters, 3) / (1.5 + NV_Ith_S(mParameters, 3));
        const double var_x116 = var_x115 * (0.00046607674967214262 * var_x110 + 0.037435883507802616 * var_x113 * (-0.0052142857142857138 + 0.0052142857142857138 * var_x111)) / pow(var_x114, 2);
        const double var_x117 = var_x116 / (1.0 + 14641.0 * var_x109);
        const double var_x118 = pow(var_chaste_interface__Sodium_Concentrations__Na_sl, (-4));
        const double var_x119 = var_x116 / (1.0 + 14641.0 * var_x118);
        const double var_x120 = var_x96 - var_x98;
        const double var_x121 = var_x77 * NV_Ith_S(mParameters, 13) / pow(var_x81, 2);
        const double var_x122 = var_x105 * var_x120 * var_x121;
        const double var_x123 = var_x53 * var_x57;
        const double var_x124 = var_x76 - var_x80;
        const double var_x125 = var_x121 * var_x124 * var_x91;
        const double var_x126 = -0.010148299999999999 - var_x48 - var_x56 - 0.002 / var_x43 - 0.11 * var_x117 - 0.11 * var_x93 - 0.89000000000000001 * var_x107 - 0.89000000000000001 * var_x119 - 0.048783569999999998 / var_x45 - 0.0077830699248061953 * var_x122 - 0.0060294299999999997 / var_x47 - 0.00096195246261649608 * var_x125 - var_x49 * var_chaste_interface__Transient_Outward_K_Current__x_to_f - var_x50 * var_chaste_interface__Transient_Outward_K_Current__x_to_s - var_x58 * var_x61 - 1.7616910247448803 * var_x64 * var_x72 + 0.21430971316021466 * var_x108 * var_x53 * var_x72 - 0.00033444816053511704 * var_x42 * var_x53 / pow(var_x43, 2) + 0.017930478454663966 * var_x53 * var_x58 * var_x59 / pow(var_x60, 2) - 0.1051178569817615 * var_x123 * var_x64 * (0.49801076999999994 * var_x108 - var_x67 * (0.061749999999999999 * var_x69 + 1.0593505830000001 * var_x68) - 0.16284999999999999 * var_x65 * var_x70 / pow(var_x66, 2)) * NV_Ith_S(mParameters, 9) / pow((var_x64 + 0.2442718256876252 * var_x71), 2);
        const double var_x127 = var_x126 + var_x15 * var_x29 + var_x22 * var_x32 + var_x41 * (-var_x33 * var_x35 - var_x33 * var_x36);
        const double var_x128 = fabs(var_chaste_interface__membrane__V);
        const double var_x129 = var_x128 < 1.3356169352749131e-6;
        const double var_x130 = _lt_0_row[8];
        const double var_x131 = -1.0 + var_x130;
        const double var_x132 = 1 / var_x131;
        const double var_x133 = var_x40 * NV_Ith_S(mParameters, 5);
        const double var_x134 = var_x132 * var_x133;
        const double var_x135 = 1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl;
        const double var_x136 = var_x130 * var_chaste_interface__Calcium_Concentrations__Ca_sl;
        const double var_x137 = var_x0 + var_x136;
        const double var_x138 = var_x135 * var_x137;
        const double var_x139 = 0.071831868267118404 * var_x138;
        const double var_x140 = var_x134 * var_x139;
        const double var_x141 = 1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j;
        const double var_x142 = var_x130 * var_chaste_interface__Calcium_Concentrations__Ca_j;
        const double var_x143 = var_x0 + var_x142;
        const double var_x144 = var_x141 * var_x143;
        const double var_x145 = 0.64648681440406586 * var_x144;
        const double var_x146 = var_x134 * var_x145;
        const double var_x147 = var_x133 * var_chaste_interface__membrane__V;
        const double var_x148 = var_x130 * var_x147 / pow(var_x131, 2);
        const double var_x149 = 0.048403610146722037 * var_x144 * var_x148;
        const double var_x150 = 0.0053781789051913368 * var_x138 * var_x148;
        const double var_x151 = var_x134 * var_chaste_interface__membrane__V;
        const double var_x152 = 0.048403610146722037 * var_x141 * var_x142 * var_x151;
        const double var_x153 = 0.0053781789051913368 * var_x135 * var_x136 * var_x151;
        const double var_x154 = var_x149 + var_x150 - var_x140 - var_x146 - var_x152 - var_x153;
        const double var_x155 = var_x128 < 2.6712338705498262e-6;
        const double var_x156 = exp(var_x112);
        const double var_x157 = -1.0 + var_x156;
        const double var_x158 = 1 / var_x157;
        const double var_x159 = var_x133 * var_x158;
        const double var_x160 = var_x156 * var_chaste_interface__Sodium_Concentrations__Na_sl;
        const double var_x161 = var_x160 + var_x23;
        const double var_x162 = var_x135 * var_x161;
        const double var_x163 = 1.0971453706510391e-6 * var_x162;
        const double var_x164 = var_x159 * var_x163;
        const double var_x165 = var_x156 * var_chaste_interface__Sodium_Concentrations__Na_j;
        const double var_x166 = var_x165 + var_x23;
        const double var_x167 = var_x141 * var_x166;
        const double var_x168 = 9.8743083358593546e-6 * var_x167;
        const double var_x169 = var_x159 * var_x168;
        const double var_x170 = var_x156 * NV_Ith_S(mParameters, 1);
        const double var_x171 = var_x170 + var_x34;
        const double var_x172 = var_x171 * var_x41;
        const double var_x173 = var_x158 * NV_Ith_S(mParameters, 5);
        const double var_x174 = 0.00019748616671718709 * var_x173;
        const double var_x175 = var_x156 / pow(var_x157, 2);
        const double var_x176 = var_x147 * var_x175;
        const double var_x177 = 4.1072606286817228e-8 * var_x162 * var_x176;
        const double var_x178 = 3.6965345658135516e-7 * var_x167 * var_x176;
        const double var_x179 = 7.3930691316271029e-6 * var_chaste_interface__membrane__V;
        const double var_x180 = var_x159 * var_chaste_interface__membrane__V;
        const double var_x181 = 4.1072606286817228e-8 * var_x135 * var_x160 * var_x180;
        const double var_x182 = 3.6965345658135516e-7 * var_x141 * var_x165 * var_x180;
        const double var_x183 = 1 / var_chaste_interface__Sodium_Concentrations__Na_j;
        const double var_x184 = -26.712338705498265 * log(var_x183 * NV_Ith_S(mParameters, 4)) + var_chaste_interface__membrane__V;
        const double var_x185 = NV_Ith_S(mParameters, 7) * var_chaste_interface__Fast_Na_Current__h;
        const double var_x186 = var_x185 * pow(var_chaste_interface__Fast_Na_Current__m, 2) * var_chaste_interface__Fast_Na_Current__j;
        const double var_x187 = var_x184 * var_x186;
        const double var_x188 = 1 / var_chaste_interface__Sodium_Concentrations__Na_sl;
        const double var_x189 = -26.712338705498265 * log(var_x188 * NV_Ith_S(mParameters, 4)) + var_chaste_interface__membrane__V;
        const double var_x190 = var_x186 * var_x189;
        const double var_x191 = 0.11 * var_x184;
        const double var_x192 = 0.89000000000000001 * var_x189;
        const double var_x193 = var_x185 * var_x54;
        const double var_x194 = 1 / (0.018329999999999999 * var_chaste_interface__Sodium_Concentrations__Na_i + NV_Ith_S(mParameters, 1));
        const double var_x195 = var_x52 - var_chaste_interface__membrane__V;
        const double var_x196 = 0.5 + 374358.83507802623 * var_chaste_interface__membrane__V;
        const double var_x197 = 9.5939859749999992e-7 * NV_Ith_S(mParameters, 5);
        const double var_x198 = var_x197 * var_x3;
        const double var_x199 = var_x197 * var_x8;
        const double var_x200 = var_x199 * var_x7;
        const double var_x201 = var_x200 + var_x198 * var_x2;
        const double var_x202 = var_x196 * var_x201;
        const double var_x203 = -var_x200;
        const double var_x204 = var_x202 + var_x203;
        const double var_x205 = var_x17 * var_x199;
        const double var_x206 = var_x205 + var_x16 * var_x198;
        const double var_x207 = var_x196 * var_x206;
        const double var_x208 = -var_x205;
        const double var_x209 = var_x207 + var_x208;
        const double var_x210 = 0.5 + 187179.41753901311 * var_chaste_interface__membrane__V;
        const double var_x211 = 2.9307318749999998e-11 * NV_Ith_S(mParameters, 5);
        const double var_x212 = var_x211 * var_x3;
        const double var_x213 = var_x211 * var_x8;
        const double var_x214 = var_x213 * var_x27;
        const double var_x215 = var_x214 + var_x212 * var_x24;
        const double var_x216 = var_x210 * var_x215;
        const double var_x217 = -var_x214;
        const double var_x218 = var_x216 + var_x217;
        const double var_x219 = var_x213 * var_x31;
        const double var_x220 = var_x219 + var_x212 * var_x30;
        const double var_x221 = var_x210 * var_x220;
        const double var_x222 = -var_x219;
        const double var_x223 = var_x221 + var_x222;
        const double var_x224 = 5.2753173749999997e-10 * NV_Ith_S(mParameters, 5);
        const double var_x225 = var_x224 * var_x36;
        const double var_x226 = var_x210 * (var_x225 + var_x224 * var_x35);
        const double var_x227 = var_x39 * (var_x225 - var_x226);
        const double var_x228 = var_x13 * var_x227 + var_x14 * var_x218 + var_x21 * var_x223;
        const double var_x229 = var_x13 * var_chaste_interface__membrane__V;
        const double var_x230 = var_x132 * NV_Ith_S(mParameters, 5);
        const double var_x231 = var_x229 * var_x230;
        const double var_x232 = var_x139 * var_x231;
        const double var_x233 = var_x145 * var_x231;
        const double var_x234 = -var_x232 - var_x233;
        const double var_x235 = var_x173 * var_x229;
        const double var_x236 = var_x163 * var_x235;
        const double var_x237 = var_x168 * var_x235;
        const double var_x238 = var_x171 * var_x174 * var_x39;
        const double var_x239 = var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f_2;
        const double var_x240 = var_x12 * var_x239;
        const double var_x241 = var_x20 * var_x239;
        const double var_x242 = var_x218 * var_x240 + var_x223 * var_x241 + var_x227 * var_x239;
        const double var_x243 = var_x239 * var_chaste_interface__membrane__V;
        const double var_x244 = var_x230 * var_x243;
        const double var_x245 = var_x139 * var_x244;
        const double var_x246 = var_x145 * var_x244;
        const double var_x247 = -var_x245 - var_x246;
        const double var_x248 = var_x173 * var_x243;
        const double var_x249 = var_x163 * var_x248;
        const double var_x250 = var_x168 * var_x248;
        const double var_x251 = var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f;
        const double var_x252 = var_x12 * var_x251;
        const double var_x253 = var_x20 * var_x251;
        const double var_x254 = var_x218 * var_x252 + var_x223 * var_x253 + var_x227 * var_x251;
        const double var_x255 = var_x251 * var_chaste_interface__membrane__V;
        const double var_x256 = var_x230 * var_x255;
        const double var_x257 = var_x139 * var_x256;
        const double var_x258 = var_x145 * var_x256;
        const double var_x259 = -var_x257 - var_x258;
        const double var_x260 = var_x173 * var_x255;
        const double var_x261 = var_x163 * var_x260;
        const double var_x262 = var_x168 * var_x260;
        const double var_x263 = var_x8 * NV_Ith_S(mParameters, 5);
        const double var_x264 = 8.6345873774999993e-7 * var_x17 * var_x263;
        const double var_x265 = var_x36 * NV_Ith_S(mParameters, 5);
        const double var_x266 = 2.6376586874999999e-11 * var_x263 * var_x31;
        const double var_x267 = var_x40 * (-var_x266 + 0.90000000000000002 * var_x221) + var_x40 * (0.90000000000000002 * var_x226 - 4.7477856375000003e-10 * var_x265);
        const double var_x268 = 0.64648681440406586 * var_x151;
        const double var_x269 = var_x143 * var_x268;
        const double var_x270 = 9.8743083358593546e-6 * var_x180;
        const double var_x271 = var_x166 * var_x270;
        const double var_x272 = var_x171 * var_x180;
        const double var_x273 = 9.5939859749999978e-8 * var_x263 * var_x7;
        const double var_x274 = 2.930731874999999e-12 * var_x263 * var_x27;
        const double var_x275 = var_x40 * (-var_x274 + 0.099999999999999978 * var_x216) + var_x40 * (0.099999999999999978 * var_x226 - 5.2753173749999984e-11 * var_x265);
        const double var_x276 = 0.071831868267118404 * var_x151;
        const double var_x277 = var_x137 * var_x276;
        const double var_x278 = 1.0971453706510391e-6 * var_x180;
        const double var_x279 = var_x161 * var_x278;
        const double var_x280 = var_x213 * var_x6;
        const double var_x281 = -var_x280 + var_x210 * (var_x280 + var_x1 * var_x212);
        const double var_x282 = 0.001754199282790071 * var_x183;
        const double var_x283 = 2.9383572576048089 * var_x183 * var_x56;
        const double var_x284 = var_x115 / var_x114;
        const double var_x285 = var_x284 / (pow((6.8301345536507063e-5 + var_x109), 2) * pow(var_chaste_interface__Sodium_Concentrations__Na_j, 5));
        const double var_x286 = pow(var_chaste_interface__Sodium_Concentrations__Na_j, 2);
        const double var_x287 = 3 * NV_Ith_S(mParameters, 2);
        const double var_x288 = 5.8017639429904805e-6 * var_x78;
        const double var_x289 = -3.9000000000000004 * var_x286 - var_x286 * var_x287 - var_x286 * var_x288;
        const double var_x290 = 5.3588338192419823e-9 * var_x78;
        const double var_x291 = var_x124 * var_x82;
        const double var_x292 = var_x291 * var_x86 / pow((var_x87 + 1.9405247813411081e-6 * var_x74 + 1.4927113702623908e-6 * var_x75 + 1.4927113702623908e-6 * var_x79 + var_x290 * var_x88), 2);
        const double var_x293 = 2.4510059584016866e-13 * var_x292;
        const double var_x294 = var_x73 * NV_Ith_S(mParameters, 2);
        const double var_x295 = var_x286 * var_x294 * var_x92;
        const double var_x296 = -var_x282 - var_x283 - 0.33000000000000002 * var_x295 - 3.0052592036063111e-5 * var_x285 - var_x289 * var_x293;
        const double var_x297 = var_x141 * var_x156 * var_x270;
        const double var_x298 = 0.014193066924392391 * var_x188;
        const double var_x299 = 23.773981447893455 * var_x188 * var_x56;
        const double var_x300 = pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 2);
        const double var_x301 = -3.9000000000000004 * var_x300 - var_x287 * var_x300 - var_x288 * var_x300;
        const double var_x302 = var_x120 * var_x82;
        const double var_x303 = var_x101 * var_x302 / pow((var_x102 + 1.9405247813411081e-6 * var_x94 + 1.4927113702623908e-6 * var_x95 + 1.4927113702623908e-6 * var_x97 + var_x103 * var_x290), 2);
        const double var_x304 = 1.9830866390704552e-12 * var_x303;
        const double var_x305 = var_x284 / (pow((6.8301345536507063e-5 + var_x118), 2) * pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 5));
        const double var_x306 = var_x106 * var_x294 * var_x300;
        const double var_x307 = -var_x298 - var_x299 - 2.6699999999999999 * var_x306 - 0.00024315279010996517 * var_x305 - var_x301 * var_x304;
        const double var_x308 = var_x135 * var_x156 * var_x278;
        const double var_x309 = var_x199 * var_x6;
        const double var_x310 = -var_x309 + var_x196 * (var_x309 + var_x1 * var_x198);
        const double var_x311 = 0.00080995817805876559 * var_x46;
        const double var_x312 = 5.2281977629563632e-6 + pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 1.6000000000000001);
        const double var_x313 = 0.011844800000000001 * pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 2.2000000000000002) / pow(var_x312, 2);
        const double var_x314 = 0.011844800000000001 * pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 0.60000000000000009) / var_x312;
        const double var_x315 = 61.507432902288166 + var_chaste_interface__membrane__V;
        const double var_x316 = var_x77 * var_x78;
        const double var_x317 = var_x316 * var_x92;
        const double var_x318 = -669921.875 - var_x78;
        const double var_x319 = var_x318 - 373215529.24791086 * var_chaste_interface__Calcium_Concentrations__Ca_j;
        const double var_x320 = var_x291 * var_x90 / (pow(var_x85, 2) * pow(var_chaste_interface__Calcium_Concentrations__Ca_j, 3));
        const double var_x321 = var_x313 - var_x311 - var_x314 + 0.11 * var_x317 - 4.9499999999999988e-9 * var_x320 - var_x293 * var_x319 - 0.00060294299999999999 * var_x315 * var_x84 / pow(var_x47, 2);
        const double var_x322 = var_x130 * var_x141 * var_x268;
        const double var_x323 = 0.0065532979861118307 * var_x44;
        const double var_x324 = 5.2281977629563632e-6 + pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 1.6000000000000001);
        const double var_x325 = 0.095835200000000009 * pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 2.2000000000000002) / pow(var_x324, 2);
        const double var_x326 = 0.095835200000000009 * pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 0.60000000000000009) / var_x324;
        const double var_x327 = var_x106 * var_x316;
        const double var_x328 = var_x318 - 373215529.24791086 * var_chaste_interface__Calcium_Concentrations__Ca_sl;
        const double var_x329 = var_x104 * var_x302 / (pow(var_x100, 2) * pow(var_chaste_interface__Calcium_Concentrations__Ca_sl, 3));
        const double var_x330 = var_x325 - var_x323 - var_x326 + 0.89000000000000001 * var_x327 - 4.0049999999999991e-8 * var_x329 - var_x304 * var_x328 - 0.0048783570000000007 * var_x315 * var_x99 / pow(var_x45, 2);
        const double var_x331 = var_x130 * var_x135 * var_x276;
        const double var_x332 = 34.0 * var_chaste_interface__Cytosolic_Ca_Buffers__CaM;
        const double var_x333 = 100.0 * var_chaste_interface__Cytosolic_Ca_Buffers__SRB;
        const double var_x334 = 32.700000000000003 * var_chaste_interface__Cytosolic_Ca_Buffers__TnC_l;
        const double var_x335 = 2.3700000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_c;
        const double var_x336 = 2.3700000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__TnC_h_m;
        const double var_x337 = 13.800000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_c;
        const double var_x338 = 13.800000000000001 * var_chaste_interface__Cytosolic_Ca_Buffers__Myo_m;
        const double var_x339 = 1 / M_PI;
        const double var_x340 = 0.54536036242163555 * var_x339;
        const double var_x341 = pow(var_chaste_interface__Calcium_Concentrations__Ca_i, 0.78699999999999992);
        const double var_x342 = pow(var_chaste_interface__Calcium_Concentrations__Ca_SR, 1.7869999999999999);
        const double var_x343 = 0.38742512113256738 * var_x342;
        const double var_x344 = pow(var_chaste_interface__Calcium_Concentrations__Ca_i, 1.7869999999999999);
        const double var_x345 = 2814485.1633595936 * var_x344;
        const double var_x346 = NV_Ith_S(mParameters, 0) / (1.0 + var_x343 + var_x345);
        const double var_x347 = var_x341 * var_x346;
        const double var_x348 = (var_x345 - var_x343) * NV_Ith_S(mParameters, 0) / pow((3.5530476870814998e-7 + var_x344 + 1.3765399305573384e-7 * var_x342), 2);
        const double var_x349 = var_x341 * var_x348;
        const double var_x350 = 32.700000000000003 * var_chaste_interface__Calcium_Concentrations__Ca_i;
        const double var_x351 = 2.3700000000000001 * var_chaste_interface__Calcium_Concentrations__Ca_i;
        const double var_x352 = 34.0 * var_chaste_interface__Calcium_Concentrations__Ca_i;
        const double var_x353 = 13.800000000000001 * var_chaste_interface__Calcium_Concentrations__Ca_i;
        const double var_x354 = 100.0 * var_chaste_interface__Calcium_Concentrations__Ca_i;
        const double var_x355 = pow(var_chaste_interface__Calcium_Concentrations__Ca_SR, 0.78699999999999992);
        const double var_x356 = var_x346 * var_x355;
        const double var_x357 = var_x348 * var_x355;
        const double var_x358 = exp(-0.0089012876052174655 * pow((-1 + 0.2073398299813394 * var_chaste_interface__membrane__V), 2));
        const double var_x359 = exp(-8.682389366752302 * pow((1 + 0.021838829438742085 * var_chaste_interface__membrane__V), 2));
        const double var_x360 = exp(-6.2967884828349945 - 0.11074197120708749 * var_chaste_interface__membrane__V);
        const double var_x361 = 1.0 + var_x360;
        const double var_x362 = 0.12920000000000001 * var_x359;
        const double var_x363 = 0.064869999999999997 * var_x358;
        const double var_x364 = 1 / (var_x362 + var_x363);
        const double var_x365 = exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__membrane__V);
        const double var_x366 = 1.0 + var_x365;
        const double var_x367 = exp(9.6298788694481825 + 0.13458950201884254 * var_chaste_interface__membrane__V);
        const double var_x368 = 1.0 + var_x367;
        const double var_x369 = 1 / pow(var_x368, 2);
        const double var_x370 = var_x369 - var_chaste_interface__Fast_Na_Current__h;
        const double var_x371 = 1 / var_x366;
        const double var_x372 = var_x367 / pow(var_x368, 3);
        const double var_x373 = var_chaste_interface__membrane__V >= -40.0;
        const double var_x374 = exp(0.34849999999999998 * var_chaste_interface__membrane__V);
        const double var_x375 = exp(0.079000000000000001 * var_chaste_interface__membrane__V);
        const double var_x376 = exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__membrane__V);
        const double var_x377 = 310000.0 * var_x374;
        const double var_x378 = 2.7000000000000002 * var_x375;
        const double var_x379 = 0.057000000000000002 * var_x376;
        const double var_x380 = 0.26917900403768508 * var_x372;
        const double var_x381 = var_x369 - var_chaste_interface__Fast_Na_Current__j;
        const double var_x382 = exp(-3.2000000000000002 - 0.10000000000000001 * var_chaste_interface__membrane__V);
        const double var_x383 = 1.0 + var_x382;
        const double var_x384 = exp(0.057000000000000002 * var_chaste_interface__membrane__V);
        const double var_x385 = var_x384 / var_x383;
        const double var_x386 = exp(0.24440000000000001 * var_chaste_interface__membrane__V);
        const double var_x387 = exp(-0.043909999999999998 * var_chaste_interface__membrane__V);
        const double var_x388 = -25428.0 * var_x386 - 6.9480000000000002e-6 * var_x387;
        const double var_x389 = exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V);
        const double var_x390 = 1.0 + var_x389;
        const double var_x391 = 1 / var_x390;
        const double var_x392 = var_x388 * var_x391;
        const double var_x393 = exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__membrane__V);
        const double var_x394 = 1.0 + var_x393;
        const double var_x395 = exp(-0.01052 * var_chaste_interface__membrane__V);
        const double var_x396 = var_x395 / var_x394;
        const double var_x397 = 37.780000000000001 + var_chaste_interface__membrane__V;
        const double var_x398 = 0.024240000000000001 * var_x396;
        const double var_x399 = var_x392 * var_x397;
        const double var_x400 = 0.050000000000000003 * var_chaste_interface__membrane__V;
        const double var_x401 = exp(2.0 + var_x400);
        const double var_x402 = 1.0 + var_x401;
        const double var_x403 = 1 / var_x402;
        const double var_x404 = 0.1111111111111111 * var_chaste_interface__membrane__V;
        const double var_x405 = exp(1.2222222222222223 + var_x404);
        const double var_x406 = 1.0 + var_x405;
        const double var_x407 = 1 / var_x406;
        const double var_x408 = exp(-2.4444444444444446 - var_x404);
        const double var_x409 = 1.0 + var_x408;
        const double var_x410 = 1 / var_x409;
        const double var_x411 = var_x407 * var_x410;
        const double var_x412 = 0.20000000000000001 * var_chaste_interface__membrane__V;
        const double var_x413 = exp(-2.0 - var_x412);
        const double var_x414 = 1.0 + var_x413;
        const double var_x415 = 1 / (230.0 * var_x403 + 3300.0 * var_x411);
        const double var_x416 = exp(-0.26666666666666666 - 0.070175438596491224 * var_chaste_interface__membrane__V);
        const double var_x417 = 1.0 + var_x416;
        const double var_x418 = exp(-0.17252124645892353 - 0.070821529745042494 * var_chaste_interface__membrane__V);
        const double var_x419 = 0.00100999899000101 * var_x418;
        const double var_x420 = exp(0.20000000000000001 + 0.066666666666666666 * var_chaste_interface__membrane__V);
        const double var_x421 = 1.0 + var_x420;
        const double var_x422 = 1 / var_x421;
        const double var_x423 = 1 / (0.5 + 9.0 * var_x422);
        const double var_x424 = -0.076923076923076927 * var_chaste_interface__membrane__V;
        const double var_x425 = exp(1.4615384615384615 + var_x424);
        const double var_x426 = 1.0 + var_x425;
        const double var_x427 = 0.076923076923076927 * var_x425 / pow(var_x426, 2);
        const double var_x428 = 1 / var_x426;
        const double var_x429 = 0.10000000000000001 * var_chaste_interface__membrane__V;
        const double var_x430 = exp(6.0 + var_x429);
        const double var_x431 = 1.0 + var_x430;
        const double var_x432 = 1 / var_x431;
        const double var_x433 = 1 / (30.0 + 800.0 * var_x432);
        const double var_x434 = exp(3.8999999999999999 + var_x412);
        const double var_x435 = 1.0 + var_x434;
        const double var_x436 = 0.20000000000000001 * var_x434 / pow(var_x435, 2);
        const double var_x437 = 1 / var_x435;
        const double var_x438 = exp(-0.81000000000000005 * pow((1 + 0.022222222222222223 * var_chaste_interface__membrane__V), 2));
        const double var_x439 = 1 / (0.5 + 8.5 * var_x438);
        const double var_x440 = exp(-7.2727272727272725 * pow((1 + 0.025000000000000001 * var_chaste_interface__membrane__V), 2));
        const double var_x441 = 1 / (7.0 + 85.0 * var_x440);
        const double var_x442 = exp(2.5 - var_x400);
        const double var_x443 = 1.0 + var_x442;
        const double var_x444 = 1 / var_x443;
        const double var_x445 = exp(1.0 + var_x412);
        const double var_x446 = 1.0 + var_x445;
        const double var_x447 = 1 / var_x446;
        const double var_x448 = exp(-2.6923076923076925 + var_x424);
        const double var_x449 = 1.0 + var_x448;
        const double var_x450 = 0.25 + 1.3999999999999999 / var_x449;
        const double var_x451 = var_x447 * var_x450;
        const double var_x452 = exp(-0.83333333333333337 - 0.16666666666666666 * var_chaste_interface__membrane__V);
        const double var_x453 = 1.0 + var_x452;
        const double var_x454 = 1 / (var_x444 + 1.3999999999999999 * var_x451);
        const double var_x455 = exp(3.0 + var_x429);
        const double var_x456 = 1.0 + var_x455;
        const double var_x457 = 1 / var_x456;
        const double var_x458 = -var_x429;
        const double var_x459 = exp(1.3 + var_x458);
        const double var_x460 = 1.0 + var_x459;
        const double var_x461 = 1 / var_x460;
        const double var_x462 = exp(-3.2400000000000002 * pow((1 + 0.037037037037037035 * var_chaste_interface__membrane__V), 2));
        const double var_x463 = 0.14285714285714285 * var_chaste_interface__membrane__V;
        const double var_x464 = exp(2.8571428571428572 + var_x463);
        const double var_x465 = 1.0 + var_x464;
        const double var_x466 = var_x455 / pow(var_x456, 2);
        const double var_x467 = 1102.5 * var_x462;
        const double var_x468 = 1 / (20.0 + var_x467 + 200.0 * var_x461 + 180.0 * var_x457);
        const double var_x469 = exp(2.5 + var_x458);
        const double var_x470 = 1.0 + var_x469;
        const double var_x471 = 1 / var_x470;
        const double var_x472 = exp(-3.6764705882352939 * pow((1 + 0.040000000000000001 * var_chaste_interface__membrane__V), 2));
        const double var_x473 = exp(5.0 + var_x463);
        const double var_x474 = 1.0 + var_x473;
        const double var_x475 = 300.0 * var_x472;
        const double var_x476 = 1 / (var_x475 + 16.0 * var_x457 + 31.0 * var_x471);
        const double var_x477 = 1 / var_chaste_interface__Calcium_Concentrations__Ca_SR;
        const double var_x478 = pow(var_x477, 2.5);
        const double var_x479 = 1.0 + 0.13584112963311223 * var_x478;
        const double var_x480 = 1 / var_x479;
        const double var_x481 = 7.0 * var_x480;
        const double var_x482 = -7.5 + var_x481;
        const double var_x483 = var_x482 * var_chaste_interface__Calcium_Concentrations__Ca_j;
        const double var_x484 = 1 / (15.0 - 14.0 * var_x480);
        const double var_x485 = 10.0 * var_x484 * var_x83;
        const double var_x486 = -var_x485;
        const double var_x487 = var_chaste_interface__Calcium_Concentrations__Ca_j * var_chaste_interface__SR_Fluxes__Ry_Rr;
        const double var_x488 = 20.0 * var_x484;
        const double var_x489 = var_x487 * var_x488;
        const double var_x490 = var_x477 * var_x478 / pow(var_x479, 2);
        const double var_x491 = 2.3772197685794643 * var_x490;
        const double var_x492 = 0.21130842387373014 * var_x490 * var_x83 / pow((1 - 0.93333333333333335 * var_x480), 2);
        const double var_x493 = var_x492 * var_chaste_interface__SR_Fluxes__Ry_Rr;
        const double var_x494 = var_x491 * var_chaste_interface__Calcium_Concentrations__Ca_j * var_chaste_interface__SR_Fluxes__Ry_Ro;
        const double var_x495 = 7.5 - var_x481;
        const double var_x496 = 1.0 - var_chaste_interface__SR_Fluxes__Ry_Ri - var_chaste_interface__SR_Fluxes__Ry_Ro - var_chaste_interface__SR_Fluxes__Ry_Rr;
        const double var_x497 = -var_x351;
        const double var_x498 = -var_x353;
        const double var_x499 = 100.0 * var_chaste_interface__Calcium_Concentrations__Ca_j;
        const double var_x500 = -var_x499;
        const double var_x501 = 100.0 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_j;
        const double var_x502 = 100.0 * var_chaste_interface__Calcium_Concentrations__Ca_sl;
        const double var_x503 = -var_x502;
        const double var_x504 = 100.0 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLL_sl;
        const double var_x505 = 100.0 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_j;
        const double var_x506 = 100.0 * var_chaste_interface__Junctional_and_SL_Ca_Buffers__SLH_sl;
        const double var_x507 = 0.90000000000000002 + var_x38;
        const double var_x508 = var_x40 * var_x507;
        const double var_x509 = 6.567e-5 + 0.11 * var_x56 + 0.33000000000000002 * var_x117 + 0.33000000000000002 * var_x93 + 0.0028858573878494881 * var_x125;
        const double var_x510 = var_x339 * NV_Ith_S(mParameters, 6);
        const double var_x511 = 1830221710.9367216 * var_x510;
        const double var_x512 = var_x510 * var_x55;
        const double var_x513 = 201324388.20303938 * var_x184;
        const double var_x514 = var_x193 * var_x510;
        const double var_x515 = 2.6712338705498262e-6 + var_chaste_interface__membrane__V;
        const double var_x516 = var_x220 * var_x515;
        const double var_x517 = var_x507 * (var_x222 + 187179.41753901311 * var_x516);
        const double var_x518 = 0.0001 * var_chaste_interface__Sodium_Concentrations__Na_B_j;
        const double var_x519 = 3.2338732908121877 * var_x339;
        const double var_x520 = 7.3530178752050587e-13 * var_x292;
        const double var_x521 = var_x282 + var_x283 + 9.0157776108189337e-5 * var_x285 + 0.98999999999999999 * var_x295 + var_x289 * var_x520;
        const double var_x522 = 0.0001 * var_chaste_interface__Sodium_Concentrations__Na_j;
        const double var_x523 = 0.099999999999999978 + var_x37;
        const double var_x524 = var_x40 * var_x523;
        const double var_x525 = 0.00053133 + 0.89000000000000001 * var_x56 + 2.6699999999999999 * var_x107 + 2.6699999999999999 * var_x119 + 0.023349209774418588 * var_x122;
        const double var_x526 = 49324475.109744646 * var_x510;
        const double var_x527 = 43898782.847672731 * var_x189;
        const double var_x528 = var_x215 * var_x515;
        const double var_x529 = var_x523 * (var_x217 + 187179.41753901311 * var_x528);
        const double var_x530 = 0.0001 * var_chaste_interface__Sodium_Concentrations__Na_B_sl;
        const double var_x531 = 5.9492599172113663e-12 * var_x303;
        const double var_x532 = var_x298 + var_x299 + 8.0099999999999998 * var_x306 + 0.00072945837032989554 * var_x305 + var_x301 * var_x531;
        const double var_x533 = 0.0001 * var_chaste_interface__Sodium_Concentrations__Na_sl;
        const double var_x534 = 0.23994508763098887 * var_x339;
        const double var_x535 = 6.0643000000000002e-5 - 0.22 * var_x93 - 0.0019239049252329922 * var_x125;
        const double var_x536 = 915110855.46836078 * var_x510;
        const double var_x537 = 1.3356169352749131e-6 + var_chaste_interface__membrane__V;
        const double var_x538 = var_x206 * var_x537;
        const double var_x539 = var_x507 * (var_x208 + 374358.83507802623 * var_x538);
        const double var_x540 = 4.9020119168033731e-13 * var_x292;
        const double var_x541 = 1623.3766233766237 * var_chaste_interface__SR_Fluxes__Ry_Ro;
        const double var_x542 = 145.53224458892856 * var_x339;
        const double var_x543 = var_x311 + var_x314 - var_x313 + 0.22 * var_x317 - 9.8999999999999977e-9 * var_x320 - var_x319 * var_x540;
        const double var_x544 = 0.00049065700000000003 - 1.78 * var_x107 - 0.015566139849612391 * var_x122;
        const double var_x545 = 24662237.554872323 * var_x510;
        const double var_x546 = var_x201 * var_x537;
        const double var_x547 = var_x523 * (var_x203 + 374358.83507802623 * var_x546);
        const double var_x548 = 3.9661732781409103e-12 * var_x303;
        const double var_x549 = var_x323 + var_x326 - var_x325 + 1.78 * var_x327 - 8.0099999999999983e-8 * var_x329 - var_x328 * var_x548;
        const double var_x550 = 25.0 * var_chaste_interface__SR_Fluxes__Ry_Ro;
        const double var_x551 = 100.0 * var_chaste_interface__Calcium_Concentrations__Csqn_b;
        const double var_x552 = 100.0 * var_chaste_interface__Calcium_Concentrations__Ca_SR;
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = mSetVoltageDerivativeToZero ? 0.0 : (((var_x129) ? (var_x127 + var_x10 * var_x15 + var_x18 * var_x22) : ((var_x155) ? (var_x127 + var_x154) : (var_x126 + var_x154 + var_x177 + var_x178 - var_x164 - var_x169 - var_x181 - var_x182 - var_x172 * var_x174 + var_x172 * var_x175 * var_x179 * NV_Ith_S(mParameters, 5) - var_x170 * var_x173 * var_x179 * var_x41))));
        IJth(rJacobian, 2, 0) = 59.906641489902128 * (-var_chaste_interface__Fast_Na_Current__m + 1 / pow(var_x361, 2)) * (-var_x362 * (-0.3792264410025028 - 0.0082818615637148471 * var_chaste_interface__membrane__V) - var_x363 * (0.0036911829173615863 - 0.00076532923851577563 * var_chaste_interface__membrane__V)) / pow((var_x359 + 0.5020897832817337 * var_x358), 2) + 0.22148394241417499 * var_x360 * var_x364 / pow(var_x361, 3);
        IJth(rJacobian, 3, 0) = ((var_x373) ? (-1.5943741588156124 * var_x371 * var_x372 + 0.53361261261261261 * var_x365 * var_x370 / pow(var_x366, 2)) : (var_x370 * (108035.0 * var_x374 + 0.21330000000000002 * var_x375 - 0.008382352941176471 * var_x376) - var_x380 * (var_x377 + var_x378 + var_x379)));
        IJth(rJacobian, 4, 0) = ((var_x373) ? (0.034200000000000001 * var_x381 * var_x385 - 0.16150740242261102 * var_x372 * var_x385 + 0.059999999999999998 * var_x381 * var_x382 * var_x384 / pow(var_x383, 2)) : (var_x381 * (var_x392 - 0.00025500480000000003 * var_x396 + var_x391 * var_x397 * (3.0508668000000001e-7 * var_x387 - 6214.6032000000005 * var_x386) + 0.0033402720000000005 * var_x393 * var_x395 / pow(var_x394, 2) - 0.311 * var_x388 * var_x389 * var_x397 / pow(var_x390, 2)) - var_x380 * (var_x398 + var_x399)));
        IJth(rJacobian, 5, 0) = 9.1827364554637282e-8 * (-var_chaste_interface__Rapidly_Activating_K_Current__x_Kr + 1 / var_x414) * (11.5 * var_x401 / pow(var_x402, 2) + 366.66666666666669 * var_x405 * var_x410 / pow(var_x406, 2) - 366.66666666666669 * var_x407 * var_x408 / pow(var_x409, 2)) / pow((var_x411 + 0.069696969696969702 * var_x403), 2) + 0.20000000000000001 * var_x413 * var_x415 / pow(var_x414, 2);
        IJth(rJacobian, 6, 0) = -7.1529673512819408e-5 * var_x418 * (-var_chaste_interface__Slowly_Activating_K_Current__x_Ks + 1 / var_x417) + 0.070175438596491224 * var_x416 * (0.00100999899000101 + var_x419) / pow(var_x417, 2);
        IJth(rJacobian, 7, 0) = var_x423 * var_x427 + 0.0074074074074074077 * var_x420 * (var_x428 - var_chaste_interface__Transient_Outward_K_Current__x_to_s) / (pow(var_x421, 2) * pow((0.055555555555555552 + var_x422), 2));
        IJth(rJacobian, 8, 0) = -var_x433 * var_x436 + 0.000125 * var_x430 * (var_x437 - var_chaste_interface__Transient_Outward_K_Current__y_to_s) / (pow(var_x431, 2) * pow((0.037499999999999999 + var_x432), 2));
        IJth(rJacobian, 9, 0) = var_x427 * var_x439 - 0.11764705882352941 * var_x438 * (-0.035999999999999997 - 0.00080000000000000004 * var_chaste_interface__membrane__V) * (var_x428 - var_chaste_interface__Transient_Outward_K_Current__x_to_f) / pow((0.058823529411764705 + var_x438), 2);
        IJth(rJacobian, 10, 0) = -var_x436 * var_x441 - 0.011764705882352941 * var_x440 * (-0.36363636363636365 - 0.0090909090909090905 * var_chaste_interface__membrane__V) * (var_x437 - var_chaste_interface__Transient_Outward_K_Current__y_to_f) / pow((0.082352941176470587 + var_x440), 2);
        IJth(rJacobian, 11, 0) = 0.51020408163265307 * (-var_chaste_interface__L_Type_Calcium_Current__d + 1 / var_x453) * (-0.050000000000000003 * var_x442 / pow(var_x443, 2) + 0.27999999999999997 * var_x445 * var_x450 / pow(var_x446, 2) - 0.15076923076923074 * var_x447 * var_x448 / pow(var_x449, 2)) / pow((var_x451 + 0.7142857142857143 * var_x444), 2) + 0.16666666666666666 * var_x452 * var_x454 / pow(var_x453, 2);
        IJth(rJacobian, 12, 0) = 8.2270247479188195e-7 * (-var_chaste_interface__L_Type_Calcium_Current__f + 1 / var_x465) * (18.0 * var_x466 - var_x467 * (-0.23999999999999999 - 0.0088888888888888889 * var_chaste_interface__membrane__V) - 20.0 * var_x459 / pow(var_x460, 2)) / pow((0.018140589569160998 + var_x462 + 0.16326530612244897 * var_x457 + 0.18140589569160998 * var_x461), 2) - 0.14285714285714285 * var_x464 * var_x468 / pow(var_x465, 2);
        IJth(rJacobian, 13, 0) = 1.1111111111111112e-5 * (0.33000000000000002 - var_chaste_interface__L_Type_Calcium_Current__f_2 + 0.67000000000000004 / var_x474) * (1.6000000000000001 * var_x466 - var_x475 * (-0.29411764705882354 - 0.011764705882352941 * var_chaste_interface__membrane__V) - 3.1000000000000001 * var_x469 / pow(var_x470, 2)) / pow((var_x472 + 0.10333333333333333 * var_x471 + 0.053333333333333337 * var_x457), 2) - 0.095714285714285724 * var_x473 * var_x476 / pow(var_x474, 2);
        IJth(rJacobian, 30, 0) = -var_x511 * ((var_x155) ? (var_x509 + var_x32 * var_x508) : (var_x169 + var_x182 + var_x509 - var_x178));
        IJth(rJacobian, 31, 0) = -var_x526 * ((var_x155) ? (var_x525 + var_x29 * var_x524) : (var_x164 + var_x181 + var_x525 - var_x177));
        IJth(rJacobian, 35, 0) = -var_x536 * ((var_x129) ? (var_x535 + var_x18 * var_x508) : (var_x146 + var_x152 + var_x535 - var_x149));
        IJth(rJacobian, 36, 0) = -var_x545 * ((var_x129) ? (var_x544 + var_x10 * var_x524) : (var_x140 + var_x153 + var_x544 - var_x150));
        IJth(rJacobian, 1, 1) = -7.0788000000000011 + var_x332 + var_x333 + var_x334 + var_x335 + var_x336 + var_x337 + var_x338 - var_x340 + 3.4188518090540365e-8 * var_x349 - 270818.42237280885 * var_x347;
        IJth(rJacobian, 19, 1) = 2.2890000000000006 - var_x334;
        IJth(rJacobian, 20, 1) = 0.33180000000000004 - var_x335 - var_x336;
        IJth(rJacobian, 22, 1) = 0.81600000000000006 - var_x332;
        IJth(rJacobian, 23, 1) = 1.9320000000000004 - var_x337 - var_x338;
        IJth(rJacobian, 25, 1) = 1.71 - var_x333;
        IJth(rJacobian, 36, 1) = 17.724211778703154 * var_x339;
        IJth(rJacobian, 37, 1) = 5029484.9869235931 * var_x347 - 6.3492962168146398e-7 * var_x349;
        IJth(rJacobian, 0, 2) = mSetVoltageDerivativeToZero ? 0.0 : (-0.33000000000000002 * var_x187 - 2.6699999999999999 * var_x190);
        IJth(rJacobian, 2, 2) = -var_x364;
        IJth(rJacobian, 30, 2) = -603973164.6091181 * var_x187 * var_x510;
        IJth(rJacobian, 31, 2) = -131696348.54301821 * var_x190 * var_x510;
        IJth(rJacobian, 0, 3) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x191 * var_x55 - var_x192 * var_x55);
        IJth(rJacobian, 3, 3) = ((var_x373) ? (-5.9230999999999998 * var_x371) : (-var_x377 - var_x378 - var_x379));
        IJth(rJacobian, 30, 3) = -var_x512 * var_x513;
        IJth(rJacobian, 31, 3) = -var_x512 * var_x527;
        IJth(rJacobian, 0, 4) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x191 * var_x193 - var_x192 * var_x193);
        IJth(rJacobian, 4, 4) = ((var_x373) ? (-0.59999999999999998 * var_x385) : (-var_x398 - var_x399));
        IJth(rJacobian, 30, 4) = -var_x513 * var_x514;
        IJth(rJacobian, 31, 4) = -var_x514 * var_x527;
        IJth(rJacobian, 0, 5) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x123 * var_x61 * NV_Ith_S(mParameters, 10));
        IJth(rJacobian, 5, 5) = -var_x415;
        IJth(rJacobian, 0, 6) = mSetVoltageDerivativeToZero ? 0.0 : (-2.0 * (-26.712338705498265 * log(var_x194 * (0.018329999999999999 * NV_Ith_S(mParameters, 4) + NV_Ith_S(mParameters, 3))) + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 11) * var_chaste_interface__Slowly_Activating_K_Current__x_Ks);
        IJth(rJacobian, 6, 6) = -0.00100999899000101 - var_x419;
        IJth(rJacobian, 0, 7) = mSetVoltageDerivativeToZero ? 0.0 : (var_x195 * var_x50);
        IJth(rJacobian, 7, 7) = -var_x423;
        IJth(rJacobian, 0, 8) = mSetVoltageDerivativeToZero ? 0.0 : (var_x195 * NV_Ith_S(mParameters, 12) * var_chaste_interface__Transient_Outward_K_Current__x_to_s);
        IJth(rJacobian, 8, 8) = -var_x433;
        IJth(rJacobian, 0, 9) = mSetVoltageDerivativeToZero ? 0.0 : (var_x195 * var_x49);
        IJth(rJacobian, 9, 9) = -var_x439;
        IJth(rJacobian, 0, 10) = mSetVoltageDerivativeToZero ? 0.0 : (var_x195 * NV_Ith_S(mParameters, 8) * var_chaste_interface__Transient_Outward_K_Current__x_to_f);
        IJth(rJacobian, 10, 10) = -var_x441;
        IJth(rJacobian, 0, 11) = mSetVoltageDerivativeToZero ? 0.0 : (((var_x129) ? (var_x228 + var_x14 * var_x204 + var_x209 * var_x21) : ((var_x155) ? (var_x228 + var_x234) : (var_x234 - var_x236 - var_x237 - var_x229 * var_x238))));
        IJth(rJacobian, 11, 11) = -var_x454;
        IJth(rJacobian, 30, 11) = -var_x511 * ((var_x155) ? (var_x13 * var_x517) : (var_x237));
        IJth(rJacobian, 31, 11) = -var_x526 * ((var_x155) ? (var_x13 * var_x529) : (var_x236));
        IJth(rJacobian, 35, 11) = -var_x536 * ((var_x129) ? (var_x13 * var_x539) : (var_x233));
        IJth(rJacobian, 36, 11) = -var_x545 * ((var_x129) ? (var_x13 * var_x547) : (var_x232));
        IJth(rJacobian, 0, 12) = mSetVoltageDerivativeToZero ? 0.0 : (((var_x129) ? (var_x242 + var_x204 * var_x240 + var_x209 * var_x241) : ((var_x155) ? (var_x242 + var_x247) : (var_x247 - var_x249 - var_x250 - var_x238 * var_x243))));
        IJth(rJacobian, 12, 12) = -var_x468;
        IJth(rJacobian, 30, 12) = -var_x511 * ((var_x155) ? (var_x239 * var_x517) : (var_x250));
        IJth(rJacobian, 31, 12) = -var_x526 * ((var_x155) ? (var_x239 * var_x529) : (var_x249));
        IJth(rJacobian, 35, 12) = -var_x536 * ((var_x129) ? (var_x239 * var_x539) : (var_x246));
        IJth(rJacobian, 36, 12) = -var_x545 * ((var_x129) ? (var_x239 * var_x547) : (var_x245));
        IJth(rJacobian, 0, 13) = mSetVoltageDerivativeToZero ? 0.0 : (((var_x129) ? (var_x254 + var_x204 * var_x252 + var_x209 * var_x253) : ((var_x155) ? (var_x254 + var_x259) : (var_x259 - var_x261 - var_x262 - var_x238 * var_x255))));
        IJth(rJacobian, 13, 13) = -var_x476;
        IJth(rJacobian, 30, 13) = -var_x511 * ((var_x155) ? (var_x251 * var_x517) : (var_x262));
        IJth(rJacobian, 31, 13) = -var_x526 * ((var_x155) ? (var_x251 * var_x529) : (var_x261));
        IJth(rJacobian, 35, 13) = -var_x536 * ((var_x129) ? (var_x251 * var_x539) : (var_x258));
        IJth(rJacobian, 36, 13) = -var_x545 * ((var_x129) ? (var_x251 * var_x547) : (var_x257));
        IJth(rJacobian, 0, 14) = mSetVoltageDerivativeToZero ? 0.0 : (((var_x129) ? (var_x267 + var_x40 * (-var_x264 + 0.90000000000000002 * var_x207)) : ((var_x155) ? (var_x267 + var_x269) : (var_x269 + var_x271 + 0.0001777375500454684 * var_x272))));
        IJth(rJacobian, 14, 14) = -0.011900000000000001 - 1.7 * var_chaste_interface__Calcium_Concentrations__Ca_j;
        IJth(rJacobian, 30, 14) = -var_x511 * ((var_x155) ? (var_x40 * (var_x266 - 168461.4757851118 * var_x516)) : (-var_x271));
        IJth(rJacobian, 35, 14) = -var_x536 * ((var_x129) ? (var_x40 * (var_x264 - 336922.95157022361 * var_x538)) : (-var_x269));
        IJth(rJacobian, 0, 15) = mSetVoltageDerivativeToZero ? 0.0 : (((var_x129) ? (var_x275 + var_x40 * (-var_x273 + 0.099999999999999978 * var_x202)) : ((var_x155) ? (var_x275 + var_x277) : (var_x277 + var_x279 + 1.9748616671718706e-5 * var_x272))));
        IJth(rJacobian, 15, 15) = -0.011900000000000001 - 1.7 * var_chaste_interface__Calcium_Concentrations__Ca_sl;
        IJth(rJacobian, 31, 15) = -var_x526 * ((var_x155) ? (var_x40 * (var_x274 - 18717.941753901305 * var_x528)) : (-var_x279));
        IJth(rJacobian, 36, 15) = -var_x545 * ((var_x129) ? (var_x40 * (var_x273 - 37435.88350780261 * var_x546)) : (-var_x277));
        IJth(rJacobian, 16, 16) = -0.0050000000000000001 + var_x483 + var_x486;
        IJth(rJacobian, 17, 16) = var_x485;
        IJth(rJacobian, 18, 16) = var_x486;
        IJth(rJacobian, 16, 17) = 0.055;
        IJth(rJacobian, 17, 17) = -0.059999999999999998 + var_x483;
        IJth(rJacobian, 18, 17) = var_x486 + var_x495 * var_chaste_interface__Calcium_Concentrations__Ca_j;
        IJth(rJacobian, 35, 17) = 1623.3766233766237 * var_chaste_interface__Calcium_Concentrations__Ca_SR - 1623.3766233766237 * var_chaste_interface__Calcium_Concentrations__Ca_j;
        IJth(rJacobian, 37, 17) = 25.0 * var_chaste_interface__Calcium_Concentrations__Ca_j - 25.0 * var_chaste_interface__Calcium_Concentrations__Ca_SR;
        IJth(rJacobian, 16, 18) = -0.0050000000000000001;
        IJth(rJacobian, 17, 18) = 0.0050000000000000001;
        IJth(rJacobian, 18, 18) = -0.065000000000000002 + var_x486;
        IJth(rJacobian, 1, 19) = 0.019599999999999999 + var_x350;
        IJth(rJacobian, 19, 19) = -0.019599999999999999 - var_x350;
        IJth(rJacobian, 1, 20) = 0.003032 + var_x351;
        IJth(rJacobian, 20, 20) = -3.1999999999999999e-5 + var_x497;
        IJth(rJacobian, 21, 20) = -0.0030000000000000001;
        IJth(rJacobian, 1, 21) = 0.0063300000000000006 + var_x351;
        IJth(rJacobian, 20, 21) = var_x497;
        IJth(rJacobian, 21, 21) = -0.0063300000000000006;
        IJth(rJacobian, 1, 22) = 0.23799999999999999 + var_x352;
        IJth(rJacobian, 22, 22) = -0.23799999999999999 - var_x352;
        IJth(rJacobian, 1, 23) = 0.016159999999999997 + var_x353;
        IJth(rJacobian, 23, 23) = -0.00046000000000000001 + var_x498;
        IJth(rJacobian, 24, 23) = -0.015699999999999999;
        IJth(rJacobian, 1, 24) = 0.015757 + var_x353;
        IJth(rJacobian, 23, 24) = var_x498;
        IJth(rJacobian, 24, 24) = -0.015757;
        IJth(rJacobian, 1, 25) = 0.059999999999999998 + var_x354;
        IJth(rJacobian, 25, 25) = -0.059999999999999998 - var_x354;
        IJth(rJacobian, 26, 26) = -1.3 + var_x500;
        IJth(rJacobian, 35, 26) = 1.3 + var_x499;
        IJth(rJacobian, 27, 27) = -1.3 + var_x503;
        IJth(rJacobian, 36, 27) = 1.3 + var_x502;
        IJth(rJacobian, 28, 28) = -0.029999999999999999 + var_x500;
        IJth(rJacobian, 35, 28) = 0.029999999999999999 + var_x499;
        IJth(rJacobian, 29, 29) = -0.029999999999999999 + var_x503;
        IJth(rJacobian, 36, 29) = 0.029999999999999999 + var_x502;
        IJth(rJacobian, 0, 30) = mSetVoltageDerivativeToZero ? 0.0 : (((var_x155) ? (var_x296 + var_x22 * var_x281) : (var_x296 - var_x297)));
        IJth(rJacobian, 30, 30) = -0.0007561 + var_x518 - var_x519 - var_x511 * ((var_x155) ? (var_x521 + var_x281 * var_x508) : (var_x297 + var_x521));
        IJth(rJacobian, 31, 30) = 0.087152885187388451 * var_x339;
        IJth(rJacobian, 33, 30) = 0.0007561 - var_x518;
        IJth(rJacobian, 35, 30) = -var_x536 * (-0.66000000000000003 * var_x295 - var_x289 * var_x540);
        IJth(rJacobian, 0, 31) = mSetVoltageDerivativeToZero ? 0.0 : (((var_x155) ? (var_x307 + var_x15 * var_x281) : (var_x307 - var_x308)));
        IJth(rJacobian, 30, 31) = var_x519;
        IJth(rJacobian, 31, 31) = -0.000165 + var_x530 - 7.8853682331945265 * var_x339 - var_x526 * ((var_x155) ? (var_x532 + var_x281 * var_x524) : (var_x308 + var_x532));
        IJth(rJacobian, 32, 31) = var_x534;
        IJth(rJacobian, 34, 31) = 0.000165 - var_x530;
        IJth(rJacobian, 36, 31) = -var_x545 * (-5.3399999999999999 * var_x306 - var_x301 * var_x548);
        IJth(rJacobian, 0, 32) = mSetVoltageDerivativeToZero ? 0.0 : (-0.48963716847178318 * var_x194 * var_x48);
        IJth(rJacobian, 31, 32) = 7.7982153480071386 * var_x339;
        IJth(rJacobian, 32, 32) = -var_x534;
        IJth(rJacobian, 30, 33) = 0.001 + var_x522;
        IJth(rJacobian, 33, 33) = -0.001 - var_x522;
        IJth(rJacobian, 31, 34) = 0.001 + var_x533;
        IJth(rJacobian, 34, 34) = -0.001 - var_x533;
        IJth(rJacobian, 0, 35) = mSetVoltageDerivativeToZero ? 0.0 : (((var_x129) ? (var_x321 + var_x22 * var_x310) : (var_x321 - var_x322)));
        IJth(rJacobian, 14, 35) = 1.7 - 1.7 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j;
        IJth(rJacobian, 16, 35) = -var_x489 + var_x482 * var_chaste_interface__SR_Fluxes__Ry_Rr;
        IJth(rJacobian, 17, 35) = var_x489 + var_x482 * var_chaste_interface__SR_Fluxes__Ry_Ro;
        IJth(rJacobian, 18, 35) = var_x495 * var_chaste_interface__SR_Fluxes__Ry_Ro + var_x488 * var_x496 * var_chaste_interface__Calcium_Concentrations__Ca_j;
        IJth(rJacobian, 26, 35) = 55.473098330241193 - var_x501;
        IJth(rJacobian, 28, 35) = 19.897959183673471 - var_x505;
        IJth(rJacobian, 30, 35) = -var_x511 * (1.4849999999999997e-8 * var_x320 - 0.33000000000000002 * var_x317 + var_x319 * var_x520);
        IJth(rJacobian, 35, 35) = -75.377506864564012 + var_x501 + var_x505 - var_x541 - var_x542 - var_x536 * ((var_x129) ? (var_x543 + var_x310 * var_x508) : (var_x322 + var_x543));
        IJth(rJacobian, 36, 35) = 3.9220939916716242 * var_x339;
        IJth(rJacobian, 37, 35) = 9.9320000000000005e-5 + var_x550;
        IJth(rJacobian, 0, 36) = mSetVoltageDerivativeToZero ? 0.0 : (((var_x129) ? (var_x330 + var_x15 * var_x310) : (var_x330 - var_x331)));
        IJth(rJacobian, 1, 36) = var_x340;
        IJth(rJacobian, 15, 36) = 1.7 - 1.7 * var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl;
        IJth(rJacobian, 27, 36) = 121.55000000000001 - var_x504;
        IJth(rJacobian, 29, 36) = 43.550000000000004 - var_x506;
        IJth(rJacobian, 31, 36) = -var_x526 * (1.2014999999999997e-7 * var_x329 - 2.6699999999999999 * var_x327 + var_x328 * var_x531);
        IJth(rJacobian, 35, 36) = var_x542;
        IJth(rJacobian, 36, 36) = -165.10000000000002 + var_x504 + var_x506 - 21.646305770374777 * var_x339 - var_x545 * ((var_x129) ? (var_x549 + var_x310 * var_x524) : (var_x331 + var_x549));
        IJth(rJacobian, 1, 37) = 0.037279237232671424 * var_x356 + 4.7061860318210743e-15 * var_x357;
        IJth(rJacobian, 16, 37) = -var_x493 + var_x487 * var_x491;
        IJth(rJacobian, 17, 37) = var_x493 + var_x494;
        IJth(rJacobian, 18, 37) = -var_x494 + var_x492 * var_x496;
        IJth(rJacobian, 35, 37) = 0.00644935064935065 + var_x541;
        IJth(rJacobian, 37, 37) = -260.00009932 + var_x551 - var_x550 - 0.69232869146389786 * var_x356 - 8.7400597733819945e-14 * var_x357;
        IJth(rJacobian, 38, 37) = 260.0 - var_x551;
        IJth(rJacobian, 37, 38) = 65.0 + var_x552;
        IJth(rJacobian, 38, 38) = -65.0 - var_x552;
    }

    N_Vector Cellcarro_2011_epiFromCellMLCvodeOpt::ComputeDerivedQuantities(double var_chaste_interface__environment__t, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -84.13368
        double var_chaste_interface__Fast_Na_Current__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.002163678
        double var_chaste_interface__Fast_Na_Current__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.7126555
        double var_chaste_interface__Fast_Na_Current__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.7128671
        double var_chaste_interface__Rapidly_Activating_K_Current__x_Kr = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.01516232
        double var_chaste_interface__Slowly_Activating_K_Current__x_Ks = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.003549354
        double var_chaste_interface__Transient_Outward_K_Current__x_to_s = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.0003584727
        double var_chaste_interface__Transient_Outward_K_Current__y_to_s = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.8087629
        double var_chaste_interface__Transient_Outward_K_Current__x_to_f = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.0003584625
        double var_chaste_interface__Transient_Outward_K_Current__y_to_f = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.9999976
        double var_chaste_interface__L_Type_Calcium_Current__d = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 1.871177e-06
        double var_chaste_interface__L_Type_Calcium_Current__f = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.9804391
        double var_chaste_interface__L_Type_Calcium_Current__f_2 = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.999401
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.02847118
        double var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.01692189
        double var_chaste_interface__Sodium_Concentrations__Na_j = NV_Ith_S(rY, 30);
        // Units: millimolar; Initial value: 10.07931
        double var_chaste_interface__Sodium_Concentrations__Na_sl = NV_Ith_S(rY, 31);
        // Units: millimolar; Initial value: 10.0781
        double var_chaste_interface__Sodium_Concentrations__Na_i = NV_Ith_S(rY, 32);
        // Units: millimolar; Initial value: 10.07825
        double var_chaste_interface__Calcium_Concentrations__Ca_j = NV_Ith_S(rY, 35);
        // Units: millimolar; Initial value: 0.0002038197
        double var_chaste_interface__Calcium_Concentrations__Ca_sl = NV_Ith_S(rY, 36);
        // Units: millimolar; Initial value: 0.0001184305
        
        // Lookup table indexing
        const bool _oob_0 = Cellcarro_2011_epiFromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__t));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcarro_2011_epiFromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_Na_K_Pump_Current__Km_Ko = 1.5; // millimolar
        const double var_Na_K_Pump_Current__Km_Naip = 11.0; // millimolar
        const double var_Nerst_Potentials__p_Na_K = 0.018329999999999999; // dimensionless
        const double var_Na_K_Pump_Current__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * NV_Ith_S(mParameters, 4)); // dimensionless
        const double var_membrane__C_mem_converted = 1000000.0 * NV_Ith_S(mParameters, 6); // uF
        const double var_membrane__F_junc = 0.11; // dimensionless
        const double var_membrane__F_junc_Ca_L = 0.90000000000000002; // dimensionless
        const double var_membrane__F_sl = 1.0 - var_membrane__F_junc; // dimensionless
        const double var_membrane__F_sl_Ca_L = 1.0 - var_membrane__F_junc_Ca_L; // dimensionless
        const double var_membrane__Frdy = 96485.0; // coulomb_per_mole
        const double var_membrane__I_Stim_converted = -GetIntracellularAreaStimulus(var_chaste_interface__environment__t); // uA_per_cm2
        const double var_membrane__R = 8314.0; // joule_per_kmole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_membrane__FoRT = var_membrane__Frdy / (var_membrane__R * var_membrane__T); // per_milliV
        const double var_Nerst_Potentials__E_K = log(NV_Ith_S(mParameters, 3) / NV_Ith_S(mParameters, 1)) / var_membrane__FoRT; // millivolt
        const double var_Nerst_Potentials__E_Ks = log((var_Nerst_Potentials__p_Na_K * NV_Ith_S(mParameters, 4) + NV_Ith_S(mParameters, 3)) / (var_Nerst_Potentials__p_Na_K * var_chaste_interface__Sodium_Concentrations__Na_i + NV_Ith_S(mParameters, 1))) / var_membrane__FoRT; // millivolt
        const double var_Nerst_Potentials__E_Na_junc = log(NV_Ith_S(mParameters, 4) / var_chaste_interface__Sodium_Concentrations__Na_j) / var_membrane__FoRT; // millivolt
        const double var_Nerst_Potentials__E_Na_sl = log(NV_Ith_S(mParameters, 4) / var_chaste_interface__Sodium_Concentrations__Na_sl) / var_membrane__FoRT; // millivolt
        const double var_Fast_Na_Current__I_Na_junc = pow(var_chaste_interface__Fast_Na_Current__m, 3) * (-var_Nerst_Potentials__E_Na_junc + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 7) * var_chaste_interface__Fast_Na_Current__h * var_chaste_interface__Fast_Na_Current__j * var_membrane__F_junc; // picoA_per_picoF
        const double var_Fast_Na_Current__I_Na_sl = pow(var_chaste_interface__Fast_Na_Current__m, 3) * (-var_Nerst_Potentials__E_Na_sl + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 7) * var_chaste_interface__Fast_Na_Current__h * var_chaste_interface__Fast_Na_Current__j * var_membrane__F_sl; // picoA_per_picoF
        const double var_Fast_Na_Current__I_Na = var_Fast_Na_Current__I_Na_junc + var_Fast_Na_Current__I_Na_sl; // picoA_per_picoF
        const double var_Fast_Na_Current__I_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_Fast_Na_Current__I_Na; // uA_per_cm2
        const double var_Inward_Rectifier_K_Current__a_K1 = 4.0937999999999999 / (1.0 + exp(-6.0745197599999994 + 0.12164999999999999 * var_chaste_interface__membrane__V - 0.12164999999999999 * var_Nerst_Potentials__E_K)); // dimensionless
        const double var_Inward_Rectifier_K_Current__b_K1 = (15.7197 * exp(-0.21949596900000001 + 0.067390000000000005 * var_chaste_interface__membrane__V - 0.067390000000000005 * var_Nerst_Potentials__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_Nerst_Potentials__E_K)) / (1.0 + exp(-2.3135610949999998 + 0.16284999999999999 * var_Nerst_Potentials__E_K - 0.16284999999999999 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_Inward_Rectifier_K_Current__K1_ss = var_Inward_Rectifier_K_Current__a_K1 / (var_Inward_Rectifier_K_Current__a_K1 + var_Inward_Rectifier_K_Current__b_K1); // dimensionless
        const double var_Inward_Rectifier_K_Current__I_K1 = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 3)) * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 9) * var_Inward_Rectifier_K_Current__K1_ss; // picoA_per_picoF
        const double var_Inward_Rectifier_K_Current__I_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_Inward_Rectifier_K_Current__I_K1; // uA_per_cm2
        const double var_L_Type_Calcium_Current__Ibar_Ca_j = ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (9.5939859749999992e-7 * (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_j * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(9.9999999999999995e-8)) + 9.5939859749999992e-7 * (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) - 9.5939859749999992e-7 * (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_j * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) : (0.71831868267118426 * (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_j * _lt_0_row[8]) * NV_Ith_S(mParameters, 5) * var_chaste_interface__membrane__V / (_lt_0_row[9]))); // picoA_per_picoF
        const double var_L_Type_Calcium_Current__I_Ca_junc = (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * var_L_Type_Calcium_Current__Ibar_Ca_j * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 * var_membrane__F_junc_Ca_L; // picoA_per_picoF
        const double var_L_Type_Calcium_Current__Ibar_Ca_sl = ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (9.5939859749999992e-7 * (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_sl * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(9.9999999999999995e-8)) + 9.5939859749999992e-7 * (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) - 9.5939859749999992e-7 * (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_sl * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) : (0.71831868267118426 * (-NV_Ith_S(mParameters, 2) + var_chaste_interface__Calcium_Concentrations__Ca_sl * _lt_0_row[8]) * NV_Ith_S(mParameters, 5) * var_chaste_interface__membrane__V / (_lt_0_row[9]))); // picoA_per_picoF
        const double var_L_Type_Calcium_Current__I_Ca_sl = (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * var_L_Type_Calcium_Current__Ibar_Ca_sl * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 * var_membrane__F_sl_Ca_L; // picoA_per_picoF
        const double var_L_Type_Calcium_Current__I_Ca = var_L_Type_Calcium_Current__I_Ca_junc + var_L_Type_Calcium_Current__I_Ca_sl; // picoA_per_picoF
        const double var_L_Type_Calcium_Current__Ibar_K = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (5.2753173749999997e-10 * (-NV_Ith_S(mParameters, 3) + NV_Ith_S(mParameters, 1) * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(9.9999999999999995e-8)) + 5.2753173749999997e-10 * (-NV_Ith_S(mParameters, 3) + NV_Ith_S(mParameters, 1) * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) - 5.2753173749999997e-10 * (-NV_Ith_S(mParameters, 3) + NV_Ith_S(mParameters, 1) * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) : (0.00019748616671718709 * (-NV_Ith_S(mParameters, 3) + NV_Ith_S(mParameters, 1) * _lt_0_row[6]) * NV_Ith_S(mParameters, 5) * var_chaste_interface__membrane__V / (_lt_0_row[7]))); // picoA_per_picoF
        const double var_L_Type_Calcium_Current__I_Ca_K = ((1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * var_membrane__F_junc_Ca_L + (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * var_membrane__F_sl_Ca_L) * var_L_Type_Calcium_Current__Ibar_K * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2; // picoA_per_picoF
        const double var_L_Type_Calcium_Current__Ibar_Na_j = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (2.9307318749999998e-11 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_j * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(9.9999999999999995e-8)) + 2.9307318749999998e-11 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_j * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) - 2.9307318749999998e-11 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_j * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) : (1.0971453706510394e-5 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_j * _lt_0_row[6]) * NV_Ith_S(mParameters, 5) * var_chaste_interface__membrane__V / (_lt_0_row[7]))); // picoA_per_picoF
        const double var_L_Type_Calcium_Current__I_Ca_Na_junc = (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_j) * var_L_Type_Calcium_Current__Ibar_Na_j * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 * var_membrane__F_junc_Ca_L; // picoA_per_picoF
        const double var_L_Type_Calcium_Current__Ibar_Na_sl = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (2.9307318749999998e-11 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_sl * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(9.9999999999999995e-8)) + 2.9307318749999998e-11 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_sl * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) - 2.9307318749999998e-11 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_sl * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 5) / (-1.0 + exp(-9.9999999999999995e-8))) : (1.0971453706510394e-5 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__Sodium_Concentrations__Na_sl * _lt_0_row[6]) * NV_Ith_S(mParameters, 5) * var_chaste_interface__membrane__V / (_lt_0_row[7]))); // picoA_per_picoF
        const double var_L_Type_Calcium_Current__I_Ca_Na_sl = (1.0 - var_chaste_interface__L_Type_Calcium_Current__f_Ca_B_sl) * var_L_Type_Calcium_Current__Ibar_Na_sl * var_chaste_interface__L_Type_Calcium_Current__d * var_chaste_interface__L_Type_Calcium_Current__f * var_chaste_interface__L_Type_Calcium_Current__f_2 * var_membrane__F_sl_Ca_L; // picoA_per_picoF
        const double var_L_Type_Calcium_Current__I_Ca_Na = var_L_Type_Calcium_Current__I_Ca_Na_junc + var_L_Type_Calcium_Current__I_Ca_Na_sl; // picoA_per_picoF
        const double var_L_Type_Calcium_Current__I_Ca_L = var_L_Type_Calcium_Current__I_Ca + var_L_Type_Calcium_Current__I_Ca_K + var_L_Type_Calcium_Current__I_Ca_Na; // picoA_per_picoF
        const double var_L_Type_Calcium_Current__I_Ca_L_converted = HeartConfig::Instance()->GetCapacitance() * var_L_Type_Calcium_Current__I_Ca_L; // uA_per_cm2
        const double var_Na_K_Pump_Current__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_membrane__FoRT * var_chaste_interface__membrane__V) + 0.036499999999999998 * var_Na_K_Pump_Current__sigma * exp(-var_membrane__FoRT * var_chaste_interface__membrane__V)); // dimensionless
        const double var_Na_K_Pump_Current__I_NaK_junc = NV_Ith_S(mParameters, 14) * var_Na_K_Pump_Current__f_NaK * NV_Ith_S(mParameters, 3) * var_membrane__F_junc / ((1.0 + pow(var_Na_K_Pump_Current__Km_Naip, 4) / pow(var_chaste_interface__Sodium_Concentrations__Na_j, 4)) * (var_Na_K_Pump_Current__Km_Ko + NV_Ith_S(mParameters, 3))); // picoA_per_picoF
        const double var_Na_K_Pump_Current__I_NaK_sl = NV_Ith_S(mParameters, 14) * var_Na_K_Pump_Current__f_NaK * NV_Ith_S(mParameters, 3) * var_membrane__F_sl / ((1.0 + pow(var_Na_K_Pump_Current__Km_Naip, 4) / pow(var_chaste_interface__Sodium_Concentrations__Na_sl, 4)) * (var_Na_K_Pump_Current__Km_Ko + NV_Ith_S(mParameters, 3))); // picoA_per_picoF
        const double var_Na_K_Pump_Current__I_NaK = var_Na_K_Pump_Current__I_NaK_junc + var_Na_K_Pump_Current__I_NaK_sl; // picoA_per_picoF
        const double var_Na_K_Pump_Current__I_NaK_converted = HeartConfig::Instance()->GetCapacitance() * var_Na_K_Pump_Current__I_NaK; // uA_per_cm2
        const double var_Rapidly_Activating_K_Current__r_Kr = 1 / (_lt_0_row[10]); // dimensionless
        const double var_Rapidly_Activating_K_Current__I_Kr = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 3)) * (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 10) * var_Rapidly_Activating_K_Current__r_Kr * var_chaste_interface__Rapidly_Activating_K_Current__x_Kr; // picoA_per_picoF
        const double var_Rapidly_Activating_K_Current__I_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_Rapidly_Activating_K_Current__I_Kr; // uA_per_cm2
        const double var_Slowly_Activating_K_Current__I_Ks_junc = pow(var_chaste_interface__Slowly_Activating_K_Current__x_Ks, 2) * (-var_Nerst_Potentials__E_Ks + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 11) * var_membrane__F_junc; // picoA_per_picoF
        const double var_Slowly_Activating_K_Current__I_Ks_sl = pow(var_chaste_interface__Slowly_Activating_K_Current__x_Ks, 2) * (-var_Nerst_Potentials__E_Ks + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 11) * var_membrane__F_sl; // picoA_per_picoF
        const double var_Slowly_Activating_K_Current__I_Ks = var_Slowly_Activating_K_Current__I_Ks_junc + var_Slowly_Activating_K_Current__I_Ks_sl; // picoA_per_picoF
        const double var_Slowly_Activating_K_Current__I_Ks_converted = HeartConfig::Instance()->GetCapacitance() * var_Slowly_Activating_K_Current__I_Ks; // uA_per_cm2
        const double var_Transient_Outward_K_Current__I_to_f = (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 8) * var_chaste_interface__Transient_Outward_K_Current__x_to_f * var_chaste_interface__Transient_Outward_K_Current__y_to_f; // picoA_per_picoF
        const double var_Transient_Outward_K_Current__I_to_s = (-var_Nerst_Potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 12) * var_chaste_interface__Transient_Outward_K_Current__x_to_s * var_chaste_interface__Transient_Outward_K_Current__y_to_s; // picoA_per_picoF
        const double var_Transient_Outward_K_Current__I_to = var_Transient_Outward_K_Current__I_to_f + var_Transient_Outward_K_Current__I_to_s; // picoA_per_picoF
        const double var_Transient_Outward_K_Current__I_to_converted = HeartConfig::Instance()->GetCapacitance() * var_Transient_Outward_K_Current__I_to; // uA_per_cm2

        N_Vector dqs = N_VNew_Serial(10);
        NV_Ith_S(dqs, 0) = var_L_Type_Calcium_Current__I_Ca_L_converted;
        NV_Ith_S(dqs, 1) = var_membrane__C_mem_converted;
        NV_Ith_S(dqs, 2) = var_Fast_Na_Current__I_Na_converted;
        NV_Ith_S(dqs, 3) = var_Inward_Rectifier_K_Current__I_K1_converted;
        NV_Ith_S(dqs, 4) = var_Rapidly_Activating_K_Current__I_Kr_converted;
        NV_Ith_S(dqs, 5) = var_Slowly_Activating_K_Current__I_Ks_converted;
        NV_Ith_S(dqs, 6) = var_Na_K_Pump_Current__I_NaK_converted;
        NV_Ith_S(dqs, 7) = var_membrane__I_Stim_converted;
        NV_Ith_S(dqs, 8) = var_Transient_Outward_K_Current__I_to_converted;
        NV_Ith_S(dqs, 9) = var_chaste_interface__environment__t;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellcarro_2011_epiFromCellMLCvodeOpt>::Initialise(void)
{
    this->mSystemName = "Carro_Rodriguez_Laguna_Pueyo_CinC2010_EPI";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // NV_Ith_S(rY, 0):
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-84.13368);

    // NV_Ith_S(rY, 1):
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(9.658067e-05);

    // NV_Ith_S(rY, 2):
    this->mVariableNames.push_back("Fast_Na_Current__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.002163678);

    // NV_Ith_S(rY, 3):
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7126555);

    // NV_Ith_S(rY, 4):
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7128671);

    // NV_Ith_S(rY, 5):
    this->mVariableNames.push_back("Rapidly_Activating_K_Current__x_Kr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.01516232);

    // NV_Ith_S(rY, 6):
    this->mVariableNames.push_back("Slowly_Activating_K_Current__x_Ks");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.003549354);

    // NV_Ith_S(rY, 7):
    this->mVariableNames.push_back("Transient_Outward_K_Current__x_to_s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0003584727);

    // NV_Ith_S(rY, 8):
    this->mVariableNames.push_back("Transient_Outward_K_Current__y_to_s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.8087629);

    // NV_Ith_S(rY, 9):
    this->mVariableNames.push_back("Transient_Outward_K_Current__x_to_f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0003584625);

    // NV_Ith_S(rY, 10):
    this->mVariableNames.push_back("Transient_Outward_K_Current__y_to_f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9999976);

    // NV_Ith_S(rY, 11):
    this->mVariableNames.push_back("L_Type_Calcium_Current__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.871177e-06);

    // NV_Ith_S(rY, 12):
    this->mVariableNames.push_back("L_Type_Calcium_Current__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9804391);

    // NV_Ith_S(rY, 13):
    this->mVariableNames.push_back("L_Type_Calcium_Current__f_2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999401);

    // NV_Ith_S(rY, 14):
    this->mVariableNames.push_back("L_Type_Calcium_Current__f_Ca_B_j");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.02847118);

    // NV_Ith_S(rY, 15):
    this->mVariableNames.push_back("L_Type_Calcium_Current__f_Ca_B_sl");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.01692189);

    // NV_Ith_S(rY, 16):
    this->mVariableNames.push_back("SR_Fluxes__Ry_Rr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.8886338);

    // NV_Ith_S(rY, 17):
    this->mVariableNames.push_back("SR_Fluxes__Ry_Ro");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.126209e-06);

    // NV_Ith_S(rY, 18):
    this->mVariableNames.push_back("SR_Fluxes__Ry_Ri");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.411382e-07);

    // NV_Ith_S(rY, 19):
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__TnC_l");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.009757237);

    // NV_Ith_S(rY, 20):
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__TnC_h_c");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.1225914);

    // NV_Ith_S(rY, 21):
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__TnC_h_m");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.00812201);

    // NV_Ith_S(rY, 22):
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__CaM");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0003267494);

    // NV_Ith_S(rY, 23):
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__Myo_c");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.002520383);

    // NV_Ith_S(rY, 24):
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__Myo_m");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.1369529);

    // NV_Ith_S(rY, 25):
    this->mVariableNames.push_back("Cytosolic_Ca_Buffers__SRB");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.002373753);

    // NV_Ith_S(rY, 26):
    this->mVariableNames.push_back("Junctional_and_SL_Ca_Buffers__SLL_j");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.008563314);

    // NV_Ith_S(rY, 27):
    this->mVariableNames.push_back("Junctional_and_SL_Ca_Buffers__SLL_sl");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.01097424);

    // NV_Ith_S(rY, 28):
    this->mVariableNames.push_back("Junctional_and_SL_Ca_Buffers__SLH_j");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.08053908);

    // NV_Ith_S(rY, 29):
    this->mVariableNames.push_back("Junctional_and_SL_Ca_Buffers__SLH_sl");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.1235381);

    // NV_Ith_S(rY, 30):
    this->mVariableNames.push_back("Sodium_Concentrations__Na_j");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(10.07931);

    // NV_Ith_S(rY, 31):
    this->mVariableNames.push_back("Sodium_Concentrations__Na_sl");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(10.0781);

    // NV_Ith_S(rY, 32):
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(10.07825);

    // NV_Ith_S(rY, 33):
    this->mVariableNames.push_back("Sodium_Concentrations__Na_B_j");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(3.796195);

    // NV_Ith_S(rY, 34):
    this->mVariableNames.push_back("Sodium_Concentrations__Na_B_sl");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.8283308);

    // NV_Ith_S(rY, 35):
    this->mVariableNames.push_back("Calcium_Concentrations__Ca_j");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0002038197);

    // NV_Ith_S(rY, 36):
    this->mVariableNames.push_back("Calcium_Concentrations__Ca_sl");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0001184305);

    // NV_Ith_S(rY, 37):
    this->mVariableNames.push_back("Calcium_Concentrations__Ca_SR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.6093596);

    // NV_Ith_S(rY, 38):
    this->mVariableNames.push_back("Calcium_Concentrations__Csqn_b");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.258048);

    // mParameters[0]:
    this->mParameterNames.push_back("SR_uptake_current_max");
    this->mParameterUnits.push_back("milliM_per_millis");

    // mParameters[1]:
    this->mParameterNames.push_back("cytosolic_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[2]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[3]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[4]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[5]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[6]:
    this->mParameterNames.push_back("membrane__C_mem");
    this->mParameterUnits.push_back("farad");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_fast_transient_outward_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[12]:
    this->mParameterNames.push_back("membrane_slow_transient_outward_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[13]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("picoA_per_picoF");

    // mParameters[14]:
    this->mParameterNames.push_back("membrane_sodium_potassium_pump_current_permeability");
    this->mParameterUnits.push_back("picoA_per_picoF");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_capacitance");
    this->mDerivedQuantityUnits.push_back("uF");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_potassium_pump_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellcarro_2011_epiFromCellMLCvodeOpt)

#endif // CHASTE_CVODE
