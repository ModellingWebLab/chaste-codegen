#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: paci_hyttinen_aaltosetala_severi_atrialVersion
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: AnalyticCvodeOpt)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "paci_hyttinen_aaltosetala_severi_atrialVersion.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class Cellpaci_hyttinen_aaltosetala_severi_atrialVersionFromCellMLCvodeOpt_LookupTables : public AbstractLookupTableCollection
{
public:
    static Cellpaci_hyttinen_aaltosetala_severi_atrialVersionFromCellMLCvodeOpt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new Cellpaci_hyttinen_aaltosetala_severi_atrialVersionFromCellMLCvodeOpt_LookupTables);
        }
        return mpInstance.get();
    }

    void FreeMemory()
    {

        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }

    // Row lookup methods
    // using linear-interpolation



    ~Cellpaci_hyttinen_aaltosetala_severi_atrialVersionFromCellMLCvodeOpt_LookupTables()
    {

    }

protected:
    Cellpaci_hyttinen_aaltosetala_severi_atrialVersionFromCellMLCvodeOpt_LookupTables(const Cellpaci_hyttinen_aaltosetala_severi_atrialVersionFromCellMLCvodeOpt_LookupTables&);
    Cellpaci_hyttinen_aaltosetala_severi_atrialVersionFromCellMLCvodeOpt_LookupTables& operator= (const Cellpaci_hyttinen_aaltosetala_severi_atrialVersionFromCellMLCvodeOpt_LookupTables&);
    Cellpaci_hyttinen_aaltosetala_severi_atrialVersionFromCellMLCvodeOpt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(0);
        mNumberOfTables.resize(0);
        mTableMins.resize(0);
        mTableSteps.resize(0);
        mTableStepInverses.resize(0);
        mTableMaxs.resize(0);
        mNeedsRegeneration.resize(0);

        Cellpaci_hyttinen_aaltosetala_severi_atrialVersionFromCellMLCvodeOpt_LookupTables::RegenerateTables();
    }

    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);

        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }

private:
    /** The single instance of the class */
    static std::shared_ptr<Cellpaci_hyttinen_aaltosetala_severi_atrialVersionFromCellMLCvodeOpt_LookupTables> mpInstance;

};

std::shared_ptr<Cellpaci_hyttinen_aaltosetala_severi_atrialVersionFromCellMLCvodeOpt_LookupTables> Cellpaci_hyttinen_aaltosetala_severi_atrialVersionFromCellMLCvodeOpt_LookupTables::mpInstance;


    boost::shared_ptr<RegularStimulus> Cellpaci_hyttinen_aaltosetala_severi_atrialVersionFromCellMLCvodeOpt::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__stim_mode__i_stim_Amplitude_converted = 0; // uA_per_cm2
        const double var_chaste_interface__stim_mode__i_stim_Period_converted = 1000.0; // millisecond
        const double var_chaste_interface__stim_mode__i_stim_PulseDuration_converted = 5.0; // millisecond
        const double var_chaste_interface__stim_mode__i_stim_Start_converted = 0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__stim_mode__i_stim_Amplitude_converted),
                var_chaste_interface__stim_mode__i_stim_PulseDuration_converted,
                var_chaste_interface__stim_mode__i_stim_Period_converted,
                var_chaste_interface__stim_mode__i_stim_Start_converted
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }

    double Cellpaci_hyttinen_aaltosetala_severi_atrialVersionFromCellMLCvodeOpt::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Cellpaci_hyttinen_aaltosetala_severi_atrialVersionFromCellMLCvodeOpt::Cellpaci_hyttinen_aaltosetala_severi_atrialVersionFromCellMLCvodeOpt(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                18,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellpaci_hyttinen_aaltosetala_severi_atrialVersionFromCellMLCvodeOpt>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
        
        NV_Ith_S(this->mParameters, 0) = 150.0; // (var_model_parameters__Ki) [millimolar]
        NV_Ith_S(this->mParameters, 1) = 1.8; // (var_model_parameters__Cao) [millimolar]
        NV_Ith_S(this->mParameters, 2) = 5.4000000000000004; // (var_model_parameters__Ko) [millimolar]
        NV_Ith_S(this->mParameters, 3) = 151.0; // (var_model_parameters__Nao) [millimolar]
        NV_Ith_S(this->mParameters, 4) = 8.6357020000000001e-5; // (var_i_CaL__g_CaL) [metre_cube_per_F_per_s]
        NV_Ith_S(this->mParameters, 5) = 0.69264000000000003; // (var_i_b_Ca__g_b_Ca) [S_per_F]
        NV_Ith_S(this->mParameters, 6) = 0.90000000000000002; // (var_i_b_Na__g_b_Na) [S_per_F]
        NV_Ith_S(this->mParameters, 7) = 0.41249999999999998; // (var_i_PCa__g_PCa) [A_per_F]
        NV_Ith_S(this->mParameters, 8) = 6646.1850000000004; // (var_i_Na__g_Na) [S_per_F]
        NV_Ith_S(this->mParameters, 9) = 30.103120000000001; // (var_i_f__g_f) [S_per_F]
        NV_Ith_S(this->mParameters, 10) = 19.192499999999999; // (var_i_K1__g_K1) [S_per_F]
        NV_Ith_S(this->mParameters, 11) = 29.866700000000002; // (var_i_Kr__g_Kr) [S_per_F]
        NV_Ith_S(this->mParameters, 12) = 2.0409999999999999; // (var_i_Ks__g_Ks) [S_per_F]
        NV_Ith_S(this->mParameters, 13) = 2450.0; // (var_i_NaCa__kNaCa) [A_per_F]
        NV_Ith_S(this->mParameters, 14) = 1.4731392000000001; // (var_i_NaK__PNaK) [A_per_F]
        NV_Ith_S(this->mParameters, 15) = 59.807699999999997; // (var_i_to__g_to) [S_per_F]
        NV_Ith_S(this->mParameters, 16) = 7.8667100000000004e-11; // (var_model_parameters__Cm) [farad]
        NV_Ith_S(this->mParameters, 17) = 310.0; // (var_model_parameters__T) [kelvin]
    }

    Cellpaci_hyttinen_aaltosetala_severi_atrialVersionFromCellMLCvodeOpt::~Cellpaci_hyttinen_aaltosetala_severi_atrialVersionFromCellMLCvodeOpt()
    {
    }

    AbstractLookupTableCollection* Cellpaci_hyttinen_aaltosetala_severi_atrialVersionFromCellMLCvodeOpt::GetLookupTableCollection()
    {
        return Cellpaci_hyttinen_aaltosetala_severi_atrialVersionFromCellMLCvodeOpt_LookupTables::Instance();
    }
    
    double Cellpaci_hyttinen_aaltosetala_severi_atrialVersionFromCellMLCvodeOpt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -68.733823452164
        double var_chaste_interface__calcium_dynamics__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 4.49232909234503e-05
        double var_chaste_interface__i_Na_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.141183142078492
        double var_chaste_interface__i_Na_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.642108593994587
        double var_chaste_interface__i_Na_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.173566329483423
        double var_chaste_interface__i_CaL_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.000127632520741878
        double var_chaste_interface__i_CaL_f1_gate__f1 = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.98038400433601
        double var_chaste_interface__i_CaL_f2_gate__f2 = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.999953006710394
        double var_chaste_interface__i_CaL_fCa_gate__fCa = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.997346890768643
        double var_chaste_interface__i_Kr_Xr1_gate__Xr1 = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.0257889110986083
        double var_chaste_interface__i_Kr_Xr2_gate__Xr2 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.405046678739985
        double var_chaste_interface__i_Ks_Xs_gate__Xs = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.0447460799149437
        double var_chaste_interface__i_f_Xf_gate__Xf = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.0607988713874682
        double var_chaste_interface__i_to_q_gate__q = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.776163826643278
        double var_chaste_interface__i_to_r_gate__r = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.000503296941001262
        double var_chaste_interface__sodium_dynamics__Nai = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 14.4424010544424
        
        const double var_Membrane__Vm = 0.001 * var_chaste_interface__Membrane__Vm_converted; // volt
        const double var_i_PCa__i_PCa = var_chaste_interface__calcium_dynamics__Cai * NV_Ith_S(mParameters, 7) / (0.00050000000000000001 + var_chaste_interface__calcium_dynamics__Cai); // A_per_F
        const double var_i_f__i_f_converted = (0.017000000000000001 + var_Membrane__Vm) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 9) * var_chaste_interface__i_f_Xf_gate__Xf; // uA_per_cm2
        const double var_electric_potentials__E_K = 8.6173421482889202e-5 * NV_Ith_S(mParameters, 17) * log(NV_Ith_S(mParameters, 2) / NV_Ith_S(mParameters, 0)); // volt
        const double var_i_CaL__i_CaL_converted = HeartConfig::Instance()->GetCapacitance() * ((fabs(var_chaste_interface__Membrane__Vm_converted) < 4.30867107414446e-9 * fabs(NV_Ith_S(mParameters, 17))) ? (116045061.55051096 * (4.30867107414446e-9 * NV_Ith_S(mParameters, 17) + var_chaste_interface__Membrane__Vm_converted) * (0.019297068299999998 * (-0.34100000000000003 * NV_Ith_S(mParameters, 1) + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(9.9999999999999995e-8)) + 0.019297068299999998 * (-0.34100000000000003 * NV_Ith_S(mParameters, 1) + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(-9.9999999999999995e-8))) / NV_Ith_S(mParameters, 17) - 0.019297068299999998 * (-0.34100000000000003 * NV_Ith_S(mParameters, 1) + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(-9.9999999999999995e-8))) : (4478658.9572358271 * (-0.34100000000000003 * NV_Ith_S(mParameters, 1) + var_chaste_interface__calcium_dynamics__Cai * exp(23.209012310102192 * var_chaste_interface__Membrane__Vm_converted / NV_Ith_S(mParameters, 17))) * var_chaste_interface__Membrane__Vm_converted * NV_Ith_S(mParameters, 4) * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / ((-1.0 + exp(23.209012310102192 * var_chaste_interface__Membrane__Vm_converted / NV_Ith_S(mParameters, 17))) * NV_Ith_S(mParameters, 17)))); // uA_per_cm2
        const double var_i_K1__i_K1_converted = 1.6825960981856667 * sqrt(NV_Ith_S(mParameters, 2)) * (-var_electric_potentials__E_K + var_Membrane__Vm) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 10) / ((1.0 + exp(-118.83999999999999 + 594.19999999999993 * var_Membrane__Vm - 594.19999999999993 * var_electric_potentials__E_K)) * (3.9100000000000001 / (1.0 + exp(-118.83999999999999 + 594.19999999999993 * var_Membrane__Vm - 594.19999999999993 * var_electric_potentials__E_K)) + (-1.5089999999999999 * exp(0.02 + 0.20000000000000001 * var_Membrane__Vm - 0.20000000000000001 * var_electric_potentials__E_K) + exp(-5.8860000000000001 + 588.60000000000002 * var_Membrane__Vm - 588.60000000000002 * var_electric_potentials__E_K)) / (1.0 + exp(454.69999999999999 * var_Membrane__Vm - 454.69999999999999 * var_electric_potentials__E_K)))); // uA_per_cm2
        const double var_i_Kr__i_Kr_converted = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 2)) * (-var_electric_potentials__E_K + var_Membrane__Vm) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 11) * var_chaste_interface__i_Kr_Xr1_gate__Xr1 * var_chaste_interface__i_Kr_Xr2_gate__Xr2; // uA_per_cm2
        const double var_i_b_Ca__i_b_Ca = (-4.3086710741444601e-5 * NV_Ith_S(mParameters, 17) * log(NV_Ith_S(mParameters, 1) / var_chaste_interface__calcium_dynamics__Cai) + var_Membrane__Vm) * NV_Ith_S(mParameters, 5); // A_per_F
        const double var_i_to__i_to_converted = (-var_electric_potentials__E_K + var_Membrane__Vm) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 15) * var_chaste_interface__i_to_q_gate__q * var_chaste_interface__i_to_r_gate__r; // uA_per_cm2
        const double var_electric_potentials__E_Na = 8.6173421482889202e-5 * NV_Ith_S(mParameters, 17) * log(NV_Ith_S(mParameters, 3) / var_chaste_interface__sodium_dynamics__Nai); // volt
        const double var_i_Ks__i_Ks_converted = pow(var_chaste_interface__i_Ks_Xs_gate__Xs, 2) * (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * (-8.6173421482889202e-5 * NV_Ith_S(mParameters, 17) * log((0.029999999999999999 * NV_Ith_S(mParameters, 3) + NV_Ith_S(mParameters, 2)) / (0.029999999999999999 * var_chaste_interface__sodium_dynamics__Nai + NV_Ith_S(mParameters, 0))) + var_Membrane__Vm) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 12); // uA_per_cm2
        const double var_i_Na__i_Na_converted = pow(var_chaste_interface__i_Na_m_gate__m, 3) * (-var_electric_potentials__E_Na + var_Membrane__Vm) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 8) * var_chaste_interface__i_Na_h_gate__h * var_chaste_interface__i_Na_j_gate__j; // uA_per_cm2
        const double var_i_NaCa__i_NaCa_converted = (pow(var_chaste_interface__sodium_dynamics__Nai, 3) * NV_Ith_S(mParameters, 1) * exp(4061.5771542678831 * var_Membrane__Vm / NV_Ith_S(mParameters, 17)) - 2.8571431999999999 * pow(NV_Ith_S(mParameters, 3), 3) * var_chaste_interface__calcium_dynamics__Cai * exp(-7542.9290007832124 * var_Membrane__Vm / NV_Ith_S(mParameters, 17))) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 13) / ((1.0 + 0.10000000000000001 * exp(-7542.9290007832124 * var_Membrane__Vm / NV_Ith_S(mParameters, 17))) * (669921.875 + pow(NV_Ith_S(mParameters, 3), 3)) * (1.3799999999999999 + NV_Ith_S(mParameters, 1))); // uA_per_cm2
        const double var_i_NaK__i_NaK_converted = HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 14) * NV_Ith_S(mParameters, 2) * var_chaste_interface__sodium_dynamics__Nai / ((1.0 + NV_Ith_S(mParameters, 2)) * (40.0 + var_chaste_interface__sodium_dynamics__Nai) * (1.0 + 0.035299999999999998 * exp(-11604.506155051095 * var_Membrane__Vm / NV_Ith_S(mParameters, 17)) + 0.1245 * exp(-1160.4506155051097 * var_Membrane__Vm / NV_Ith_S(mParameters, 17)))); // uA_per_cm2
        const double var_i_b_Na__i_b_Na = (-var_electric_potentials__E_Na + var_Membrane__Vm) * NV_Ith_S(mParameters, 6); // A_per_F
        const double var_chaste_interface__i_ionic = HeartConfig::Instance()->GetCapacitance() * var_i_PCa__i_PCa + HeartConfig::Instance()->GetCapacitance() * var_i_b_Ca__i_b_Ca + HeartConfig::Instance()->GetCapacitance() * var_i_b_Na__i_b_Na + var_i_CaL__i_CaL_converted + var_i_K1__i_K1_converted + var_i_Kr__i_Kr_converted + var_i_Ks__i_Ks_converted + var_i_Na__i_Na_converted + var_i_NaCa__i_NaCa_converted + var_i_NaK__i_NaK_converted + var_i_f__i_f_converted + var_i_to__i_to_converted; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellpaci_hyttinen_aaltosetala_severi_atrialVersionFromCellMLCvodeOpt::EvaluateYDerivatives(double var_chaste_interface__environment__time_converted, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -68.733823452164
        double var_chaste_interface__calcium_dynamics__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 4.49232909234503e-05
        double var_chaste_interface__i_Na_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.141183142078492
        double var_chaste_interface__i_Na_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.642108593994587
        double var_chaste_interface__i_Na_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.173566329483423
        double var_chaste_interface__i_CaL_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.000127632520741878
        double var_chaste_interface__i_CaL_f1_gate__f1 = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.98038400433601
        double var_chaste_interface__i_CaL_f2_gate__f2 = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.999953006710394
        double var_chaste_interface__i_CaL_fCa_gate__fCa = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.997346890768643
        double var_chaste_interface__i_Kr_Xr1_gate__Xr1 = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.0257889110986083
        double var_chaste_interface__i_Kr_Xr2_gate__Xr2 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.405046678739985
        double var_chaste_interface__i_Ks_Xs_gate__Xs = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.0447460799149437
        double var_chaste_interface__i_f_Xf_gate__Xf = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.0607988713874682
        double var_chaste_interface__i_to_q_gate__q = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.776163826643278
        double var_chaste_interface__i_to_r_gate__r = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.000503296941001262
        double var_chaste_interface__sodium_dynamics__Nai = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 14.4424010544424
        double var_chaste_interface__calcium_dynamics__Ca_SR = NV_Ith_S(rY, 16);
        // Units: millimolar; Initial value: 0.149980051221604
        double var_chaste_interface__calcium_dynamics__g = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 1.0

        // Mathematics
        double d_dt_chaste_interface_var_Membrane__Vm_converted;
        const double var_Membrane__Vm = 0.001 * var_chaste_interface__Membrane__Vm_converted; // volt
        const double var_calcium_dynamics__g_inf = ((var_chaste_interface__calcium_dynamics__Cai <= 0.00035) ? (1 / (1.0 + 5.439910241481016e+20 * pow(var_chaste_interface__calcium_dynamics__Cai, 6))) : (1 / (1.0 + 1.9720198874049176e+55 * pow(var_chaste_interface__calcium_dynamics__Cai, 16)))); // dimensionless
        const double var_calcium_dynamics__i_leak = 0.00044443999999999999 * var_chaste_interface__calcium_dynamics__Ca_SR - 0.00044443999999999999 * var_chaste_interface__calcium_dynamics__Cai; // millimolar_per_second
        const double var_calcium_dynamics__i_up = 0.22 / (1.0 + 6.2499999999999997e-8 / pow(var_chaste_interface__calcium_dynamics__Cai, 2)); // millimolar_per_second
        const double d_dt_chaste_interface_var_calcium_dynamics__g = 0.5 * (-var_chaste_interface__calcium_dynamics__g + var_calcium_dynamics__g_inf) * (((var_Membrane__Vm > -0.059999999999999998) && (var_chaste_interface__calcium_dynamics__g < var_calcium_dynamics__g_inf)) ? (0) : (1.0)); // 1 / millisecond
        const double var_calcium_dynamics__i_rel = 0.055599999999999997 * (8.2319999999999993 + 16.463999999999999 * pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2) / (0.0625 + pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2))) * var_chaste_interface__calcium_dynamics__g * var_chaste_interface__i_CaL_d_gate__d; // millimolar_per_second
        const double d_dt_chaste_interface_var_i_CaL_d_gate__d = 0.001 * (-var_chaste_interface__i_CaL_d_gate__d + 1 / (1.0 + exp(-0.85514285714285709 - 142.85714285714286 * var_Membrane__Vm))) / (0.001 / (1.0 + exp(2.5 - 50.0 * var_Membrane__Vm)) + 0.0014 * (0.25 + 1.3999999999999999 / (1.0 + exp(-2.6923076923076925 - 76.92307692307692 * var_Membrane__Vm))) / (1.0 + exp(1.0 + 200.0 * var_Membrane__Vm))); // 1 / millisecond
        const double var_i_CaL_f1_gate__f1_inf = 1 / (1.0 + exp(8.408666666666667 + 333.33333333333331 * var_Membrane__Vm)); // dimensionless
        const double d_dt_chaste_interface_var_i_CaL_f1_gate__f1 = (-var_chaste_interface__i_CaL_f1_gate__f1 + var_i_CaL_f1_gate__f1_inf) * ((-var_i_CaL_f1_gate__f1_inf + var_chaste_interface__i_CaL_f1_gate__f1 < 0) ? (1 / (0.92835000000000001 + 1433.0 * var_chaste_interface__calcium_dynamics__Cai)) : (1.0)) / (20.0 + 200.0 / (1.0 + exp(1.3 - 100.0 * var_Membrane__Vm)) + 180.0 / (1.0 + exp(3.0 + 100.0 * var_Membrane__Vm)) + 1102.5 * exp(-4444444444.4444447 * pow((0.027 + var_Membrane__Vm), 4))); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaL_f2_gate__f2 = 0.001 * (0.33000000000000002 - var_chaste_interface__i_CaL_f2_gate__f2 + 0.67000000000000004 / (1.0 + exp(7.8064999999999998 + 250.0 * var_Membrane__Vm))) / (0.032000000000000001 / (1.0 + exp(3.0 + 100.0 * var_Membrane__Vm)) + 1.2 * exp(-5882.3529411764703 * pow((0.025000000000000001 + var_Membrane__Vm), 2)) + 0.062 / (1.0 + exp(2.5 - 100.0 * var_Membrane__Vm))); // 1 / millisecond
        const double var_i_CaL_fCa_gate__fCa_inf = 0.22803283672848887 / (1.0 + exp(-0.9375 + 1250.0 * var_chaste_interface__calcium_dynamics__Cai)) + 0.076010945576162961 / (1.0 + exp(-9.0 + 10000.0 * var_chaste_interface__calcium_dynamics__Cai)) + 0.76010945576162958 / (1.0 + 5.9537418076512766e+25 * pow(var_chaste_interface__calcium_dynamics__Cai, 8)); // dimensionless
        const double d_dt_chaste_interface_var_i_CaL_fCa_gate__fCa = 0.5 * (-var_chaste_interface__i_CaL_fCa_gate__fCa + var_i_CaL_fCa_gate__fCa_inf) * (((var_Membrane__Vm > -0.059999999999999998) && (var_chaste_interface__i_CaL_fCa_gate__fCa < var_i_CaL_fCa_gate__fCa_inf)) ? (0) : (1.0)); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Kr_Xr2_gate__Xr2 = 0.29761904761904762 * (1.0 + exp(-3.0 + 50.0 * var_Membrane__Vm)) * (1.0 + exp(-3.0 - 50.0 * var_Membrane__Vm)) * (-var_chaste_interface__i_Kr_Xr2_gate__Xr2 + 1 / (1.0 + exp(1.76 + 20.0 * var_Membrane__Vm))); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Ks_Xs_gate__Xs = 0.00090909090909090909 * sqrt(1.0 + exp(-1.6666666666666667 - 166.66666666666666 * var_Membrane__Vm)) * (1.0 + exp(-3.0 + 50.0 * var_Membrane__Vm)) * (-var_chaste_interface__i_Ks_Xs_gate__Xs + 1 / (1.0 + exp(-1.25 - 62.5 * var_Membrane__Vm))); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Na_h_gate__h = 0.001 * (-var_chaste_interface__i_Na_h_gate__h + 1 / sqrt(1.0 + exp(12.649122807017543 + 175.43859649122805 * var_Membrane__Vm))) * ((var_Membrane__Vm < -0.040000000000000001) ? (38.0 * exp(-11.764705882352942 - 147.05882352941177 * var_Membrane__Vm) + 206666666.66666669 * exp(348.5 * var_Membrane__Vm) + 1800.0000000000002 * exp(79.0 * var_Membrane__Vm)) : (393.39103068450044)); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Na_j_gate__j = 0.001 * (-var_chaste_interface__i_Na_j_gate__j + 1 / sqrt(1.0 + exp(12.649122807017543 + 175.43859649122805 * var_Membrane__Vm))) * (142.85714285714286 * ((var_Membrane__Vm < -0.040000000000000001) ? (0.024240000000000001 * exp(-10.52 * var_Membrane__Vm) / (1.0 + exp(-5.5312920000000005 - 137.80000000000001 * var_Membrane__Vm))) : (0.59999999999999998 * exp(57.0 * var_Membrane__Vm) / (1.0 + exp(-3.2000000000000002 - 100.0 * var_Membrane__Vm)))) + 142.85714285714286 * ((var_Membrane__Vm < -0.040000000000000001) ? ((37.780000000000001 + 1000.0 * var_Membrane__Vm) * (-25428.0 * exp(244.40000000000001 * var_Membrane__Vm) - 6.9480000000000002e-6 * exp(-43.909999999999997 * var_Membrane__Vm)) / (1.0 + exp(24.640530000000002 + 311.0 * var_Membrane__Vm))) : (0))); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Na_m_gate__m = (1.0 + exp(-12.0 - 200.0 * var_Membrane__Vm)) * (-var_chaste_interface__i_Na_m_gate__m + pow((1.0 + exp(-5.7796610169491522 - 169.4915254237288 * var_Membrane__Vm)), (-0.33333333333333331))) / (0.10000000000000001 / (1.0 + exp(7.0 + 200.0 * var_Membrane__Vm)) + 0.10000000000000001 / (1.0 + exp(-0.25 + 5.0 * var_Membrane__Vm))); // 1 / millisecond
        const double var_i_PCa__i_PCa = var_chaste_interface__calcium_dynamics__Cai * NV_Ith_S(mParameters, 7) / (0.00050000000000000001 + var_chaste_interface__calcium_dynamics__Cai); // A_per_F
        const double d_dt_chaste_interface_var_i_f_Xf_gate__Xf = 0.001 * (0.52631578947368418 + 0.52631578947368418 * exp(1.5 + 100.0 * var_Membrane__Vm)) * (-var_chaste_interface__i_f_Xf_gate__Xf + 1 / (1.0 + exp(15.569999999999999 + 200.0 * var_Membrane__Vm))); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_to_q_gate__q = 0.001 * (-var_chaste_interface__i_to_q_gate__q + 1 / (1.0 + exp(4.0769230769230766 + 76.92307692307692 * var_Membrane__Vm))) / (0.0060599999999999994 + 0.039101999999999998 / (0.065000000000000002 * exp(4.593 + 100.0 * var_Membrane__Vm) + 0.56999999999999995 * exp(-3.52 - 80.0 * var_Membrane__Vm))); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_to_r_gate__r = 0.001 * (-var_chaste_interface__i_to_r_gate__r + 1 / (1.0 + exp(1.1893333333333334 - 53.333333333333336 * var_Membrane__Vm))) / (0.0027535199999999998 + 0.01440516 / (1.0369999999999999 * exp(2.7548999999999997 + 90.0 * var_Membrane__Vm) + 0.36899999999999999 * exp(-2.8607999999999998 - 120.0 * var_Membrane__Vm))); // 1 / millisecond
        const double var_i_CaL__i_CaL = ((fabs(var_chaste_interface__Membrane__Vm_converted) < 4.30867107414446e-9 * fabs(NV_Ith_S(mParameters, 17))) ? (116045061.55051096 * (4.30867107414446e-9 * NV_Ith_S(mParameters, 17) + var_chaste_interface__Membrane__Vm_converted) * (0.019297068299999998 * (-0.34100000000000003 * NV_Ith_S(mParameters, 1) + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(9.9999999999999995e-8)) + 0.019297068299999998 * (-0.34100000000000003 * NV_Ith_S(mParameters, 1) + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(-9.9999999999999995e-8))) / NV_Ith_S(mParameters, 17) - 0.019297068299999998 * (-0.34100000000000003 * NV_Ith_S(mParameters, 1) + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(-9.9999999999999995e-8))) : (4478658.9572358271 * (-0.34100000000000003 * NV_Ith_S(mParameters, 1) + var_chaste_interface__calcium_dynamics__Cai * exp(23.209012310102192 * var_chaste_interface__Membrane__Vm_converted / NV_Ith_S(mParameters, 17))) * var_chaste_interface__Membrane__Vm_converted * NV_Ith_S(mParameters, 4) * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / ((-1.0 + exp(23.209012310102192 * var_chaste_interface__Membrane__Vm_converted / NV_Ith_S(mParameters, 17))) * NV_Ith_S(mParameters, 17)))); // A_per_F
        const double d_dt_chaste_interface_var_i_Kr_Xr1_gate__Xr1 = 0.00037037037037037035 * (1.0 + exp(2.6086956521739131 + 86.956521739130437 * var_Membrane__Vm)) * (1.0 + exp(-4.5 - 100.0 * var_Membrane__Vm)) * (-var_chaste_interface__i_Kr_Xr1_gate__Xr1 + 1 / (1.0 + exp(-3.8775510204081627 - 204.08163265306121 * var_Membrane__Vm - 0.0076462663250123509 * (-2.1789087017666886 + log(40.0 * pow((1.0 + 0.38461538461538458 * NV_Ith_S(mParameters, 1)), 4) / pow((0.57999999999999996 + NV_Ith_S(mParameters, 1)), 4))) * NV_Ith_S(mParameters, 17)))); // 1 / millisecond
        const double var_i_b_Ca__i_b_Ca = (-4.3086710741444601e-5 * NV_Ith_S(mParameters, 17) * log(NV_Ith_S(mParameters, 1) / var_chaste_interface__calcium_dynamics__Cai) + var_Membrane__Vm) * NV_Ith_S(mParameters, 5); // A_per_F
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_SR = 0.015073086844368014 * (-var_calcium_dynamics__i_leak - var_calcium_dynamics__i_rel + var_calcium_dynamics__i_up) / (1.0 + 3.0 / pow((0.29999999999999999 + var_chaste_interface__calcium_dynamics__Ca_SR), 2)); // millimolar / millisecond
        const double var_electric_potentials__E_Na = 8.6173421482889202e-5 * NV_Ith_S(mParameters, 17) * log(NV_Ith_S(mParameters, 3) / var_chaste_interface__sodium_dynamics__Nai); // volt
        const double var_i_Na__i_Na = pow(var_chaste_interface__i_Na_m_gate__m, 3) * (-var_electric_potentials__E_Na + var_Membrane__Vm) * NV_Ith_S(mParameters, 8) * var_chaste_interface__i_Na_h_gate__h * var_chaste_interface__i_Na_j_gate__j; // A_per_F
        const double var_i_NaCa__i_NaCa = (pow(var_chaste_interface__sodium_dynamics__Nai, 3) * NV_Ith_S(mParameters, 1) * exp(4061.5771542678831 * var_Membrane__Vm / NV_Ith_S(mParameters, 17)) - 2.8571431999999999 * pow(NV_Ith_S(mParameters, 3), 3) * var_chaste_interface__calcium_dynamics__Cai * exp(-7542.9290007832124 * var_Membrane__Vm / NV_Ith_S(mParameters, 17))) * NV_Ith_S(mParameters, 13) / ((1.0 + 0.10000000000000001 * exp(-7542.9290007832124 * var_Membrane__Vm / NV_Ith_S(mParameters, 17))) * (669921.875 + pow(NV_Ith_S(mParameters, 3), 3)) * (1.3799999999999999 + NV_Ith_S(mParameters, 1))); // A_per_F
        const double d_dt_chaste_interface_var_calcium_dynamics__Cai = 0.001 * (-var_calcium_dynamics__i_up - 739037981.24901497 * (-2.0 * var_i_NaCa__i_NaCa + var_i_CaL__i_CaL + var_i_PCa__i_PCa + var_i_b_Ca__i_b_Ca) * NV_Ith_S(mParameters, 16) + var_calcium_dynamics__i_leak + var_calcium_dynamics__i_rel) / (1.0 + 0.00025000000000000001 / pow((0.001 + var_chaste_interface__calcium_dynamics__Cai), 2)); // millimolar / millisecond
        const double var_i_NaK__i_NaK = NV_Ith_S(mParameters, 14) * NV_Ith_S(mParameters, 2) * var_chaste_interface__sodium_dynamics__Nai / ((1.0 + NV_Ith_S(mParameters, 2)) * (40.0 + var_chaste_interface__sodium_dynamics__Nai) * (1.0 + 0.035299999999999998 * exp(-11604.506155051095 * var_Membrane__Vm / NV_Ith_S(mParameters, 17)) + 0.1245 * exp(-1160.4506155051097 * var_Membrane__Vm / NV_Ith_S(mParameters, 17)))); // A_per_F
        const double var_i_b_Na__i_b_Na = (-var_electric_potentials__E_Na + var_Membrane__Vm) * NV_Ith_S(mParameters, 6); // A_per_F
        const double d_dt_chaste_interface_var_sodium_dynamics__Nai = -1478075.9624980299 * (3.0 * var_i_NaCa__i_NaCa + 3.0 * var_i_NaK__i_NaK + var_i_Na__i_Na + var_i_b_Na__i_b_Na) * NV_Ith_S(mParameters, 16); // millimolar / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_Membrane__Vm_converted = 0.0;
        }
        else
        {
            const double var_electric_potentials__E_K = 8.6173421482889202e-5 * NV_Ith_S(mParameters, 17) * log(NV_Ith_S(mParameters, 2) / NV_Ith_S(mParameters, 0)); // volt
            d_dt_chaste_interface_var_Membrane__Vm_converted = -var_i_CaL__i_CaL - var_i_Na__i_Na - var_i_NaCa__i_NaCa - var_i_NaK__i_NaK - var_i_PCa__i_PCa - var_i_b_Ca__i_b_Ca - var_i_b_Na__i_b_Na - GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted) / HeartConfig::Instance()->GetCapacitance() - (0.017000000000000001 + var_Membrane__Vm) * NV_Ith_S(mParameters, 9) * var_chaste_interface__i_f_Xf_gate__Xf - pow(var_chaste_interface__i_Ks_Xs_gate__Xs, 2) * (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * (-8.6173421482889202e-5 * NV_Ith_S(mParameters, 17) * log((0.029999999999999999 * NV_Ith_S(mParameters, 3) + NV_Ith_S(mParameters, 2)) / (0.029999999999999999 * var_chaste_interface__sodium_dynamics__Nai + NV_Ith_S(mParameters, 0))) + var_Membrane__Vm) * NV_Ith_S(mParameters, 12) - (-var_electric_potentials__E_K + var_Membrane__Vm) * NV_Ith_S(mParameters, 15) * var_chaste_interface__i_to_q_gate__q * var_chaste_interface__i_to_r_gate__r - 1.6825960981856667 * sqrt(NV_Ith_S(mParameters, 2)) * (-var_electric_potentials__E_K + var_Membrane__Vm) * NV_Ith_S(mParameters, 10) / ((1.0 + exp(-118.83999999999999 + 594.19999999999993 * var_Membrane__Vm - 594.19999999999993 * var_electric_potentials__E_K)) * (3.9100000000000001 / (1.0 + exp(-118.83999999999999 + 594.19999999999993 * var_Membrane__Vm - 594.19999999999993 * var_electric_potentials__E_K)) + (-1.5089999999999999 * exp(0.02 + 0.20000000000000001 * var_Membrane__Vm - 0.20000000000000001 * var_electric_potentials__E_K) + exp(-5.8860000000000001 + 588.60000000000002 * var_Membrane__Vm - 588.60000000000002 * var_electric_potentials__E_K)) / (1.0 + exp(454.69999999999999 * var_Membrane__Vm - 454.69999999999999 * var_electric_potentials__E_K)))) - 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 2)) * (-var_electric_potentials__E_K + var_Membrane__Vm) * NV_Ith_S(mParameters, 11) * var_chaste_interface__i_Kr_Xr1_gate__Xr1 * var_chaste_interface__i_Kr_Xr2_gate__Xr2; // millivolt / millisecond
        }
        
        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_Membrane__Vm_converted;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_calcium_dynamics__Cai;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_i_Na_m_gate__m;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_i_Na_h_gate__h;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_i_Na_j_gate__j;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_i_CaL_d_gate__d;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_i_CaL_f1_gate__f1;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_i_CaL_f2_gate__f2;
        NV_Ith_S(rDY,8) = d_dt_chaste_interface_var_i_CaL_fCa_gate__fCa;
        NV_Ith_S(rDY,9) = d_dt_chaste_interface_var_i_Kr_Xr1_gate__Xr1;
        NV_Ith_S(rDY,10) = d_dt_chaste_interface_var_i_Kr_Xr2_gate__Xr2;
        NV_Ith_S(rDY,11) = d_dt_chaste_interface_var_i_Ks_Xs_gate__Xs;
        NV_Ith_S(rDY,12) = d_dt_chaste_interface_var_i_f_Xf_gate__Xf;
        NV_Ith_S(rDY,13) = d_dt_chaste_interface_var_i_to_q_gate__q;
        NV_Ith_S(rDY,14) = d_dt_chaste_interface_var_i_to_r_gate__r;
        NV_Ith_S(rDY,15) = d_dt_chaste_interface_var_sodium_dynamics__Nai;
        NV_Ith_S(rDY,16) = d_dt_chaste_interface_var_calcium_dynamics__Ca_SR;
        NV_Ith_S(rDY,17) = d_dt_chaste_interface_var_calcium_dynamics__g;
    }

    void Cellpaci_hyttinen_aaltosetala_severi_atrialVersionFromCellMLCvodeOpt::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time_converted, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -68.733823452164
        double var_chaste_interface__calcium_dynamics__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 4.49232909234503e-05
        double var_chaste_interface__i_Na_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.141183142078492
        double var_chaste_interface__i_Na_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.642108593994587
        double var_chaste_interface__i_Na_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.173566329483423
        double var_chaste_interface__i_CaL_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.000127632520741878
        double var_chaste_interface__i_CaL_f1_gate__f1 = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.98038400433601
        double var_chaste_interface__i_CaL_f2_gate__f2 = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.999953006710394
        double var_chaste_interface__i_CaL_fCa_gate__fCa = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.997346890768643
        double var_chaste_interface__i_Kr_Xr1_gate__Xr1 = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.0257889110986083
        double var_chaste_interface__i_Kr_Xr2_gate__Xr2 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.405046678739985
        double var_chaste_interface__i_Ks_Xs_gate__Xs = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.0447460799149437
        double var_chaste_interface__i_f_Xf_gate__Xf = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.0607988713874682
        double var_chaste_interface__i_to_q_gate__q = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.776163826643278
        double var_chaste_interface__i_to_r_gate__r = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.000503296941001262
        double var_chaste_interface__sodium_dynamics__Nai = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 14.4424010544424
        double var_chaste_interface__calcium_dynamics__Ca_SR = NV_Ith_S(rY, 16);
        // Units: millimolar; Initial value: 0.149980051221604
        double var_chaste_interface__calcium_dynamics__g = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 1.0
        const double var_x0 = NV_Ith_S(mParameters, 4) * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa;
        const double var_x1 = 0.019297068299999998 * var_x0;
        const double var_x2 = var_x1 * var_chaste_interface__i_CaL_f1_gate__f1;
        const double var_x3 = exp(9.9999999999999995e-8);
        const double var_x4 = 1 / (-1.0 + var_x3);
        const double var_x5 = -0.34100000000000003 * NV_Ith_S(mParameters, 1);
        const double var_x6 = var_x4 * (var_x5 + var_x3 * var_chaste_interface__calcium_dynamics__Cai);
        const double var_x7 = var_x2 * var_x6;
        const double var_x8 = exp(-9.9999999999999995e-8);
        const double var_x9 = 1 / (-1.0 + var_x8);
        const double var_x10 = var_x9 * (var_x5 + var_x8 * var_chaste_interface__calcium_dynamics__Cai);
        const double var_x11 = var_x10 * var_x2;
        const double var_x12 = var_x11 * var_chaste_interface__i_CaL_d_gate__d;
        const double var_x13 = 1 / NV_Ith_S(mParameters, 17);
        const double var_x14 = 116045061.55051096 * var_x13;
        const double var_x15 = var_x14 * (var_x12 + var_x7 * var_chaste_interface__i_CaL_d_gate__d);
        const double var_x16 = fabs(var_chaste_interface__Membrane__Vm_converted) < 4.30867107414446e-9 * fabs(NV_Ith_S(mParameters, 17));
        const double var_x17 = var_x13 * var_chaste_interface__Membrane__Vm_converted;
        const double var_x18 = exp(23.209012310102192 * var_x17);
        const double var_x19 = -1.0 + var_x18;
        const double var_x20 = 1 / var_x19;
        const double var_x21 = var_x18 * var_chaste_interface__calcium_dynamics__Cai;
        const double var_x22 = var_x21 + var_x5;
        const double var_x23 = 4478658.9572358271 * var_x20 * var_x22;
        const double var_x24 = var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1;
        const double var_x25 = var_x0 * var_x24;
        const double var_x26 = var_x23 * var_x25;
        const double var_x27 = var_x20 * var_x25;
        const double var_x28 = 103945250.87123576 * var_chaste_interface__Membrane__Vm_converted / pow(NV_Ith_S(mParameters, 17), 2);
        const double var_x29 = ((var_x16) ? (var_x15) : (var_x13 * var_x26 + var_x21 * var_x27 * var_x28 - var_x18 * var_x22 * var_x25 * var_x28 / pow(var_x19, 2)));
        const double var_x30 = pow(var_chaste_interface__i_Ks_Xs_gate__Xs, 2);
        const double var_x31 = 1 / var_chaste_interface__calcium_dynamics__Cai;
        const double var_x32 = pow(var_x31, 1.3999999999999999);
        const double var_x33 = 1.0 + 6.4818210260626455e-7 * var_x32;
        const double var_x34 = (1.0 + 0.59999999999999998 / var_x33) * NV_Ith_S(mParameters, 12);
        const double var_x35 = var_x30 * var_x34;
        const double var_x36 = 0.001 * var_chaste_interface__i_Na_h_gate__h;
        const double var_x37 = pow(var_chaste_interface__i_Na_m_gate__m, 3) * NV_Ith_S(mParameters, 8);
        const double var_x38 = var_x37 * var_chaste_interface__i_Na_j_gate__j;
        const double var_x39 = NV_Ith_S(mParameters, 17) * log(NV_Ith_S(mParameters, 2) / NV_Ith_S(mParameters, 0));
        const double var_x40 = exp(-118.83999999999999 + 0.59419999999999995 * var_chaste_interface__Membrane__Vm_converted - 0.05120424704513276 * var_x39);
        const double var_x41 = 1.0 + var_x40;
        const double var_x42 = 1 / var_x41;
        const double var_x43 = exp(0.45469999999999999 * var_chaste_interface__Membrane__Vm_converted - 0.039183054748269719 * var_x39);
        const double var_x44 = 1.0 + var_x43;
        const double var_x45 = 1 / var_x44;
        const double var_x46 = exp(0.02 + 0.00020000000000000001 * var_chaste_interface__Membrane__Vm_converted - 1.7234684296577842e-5 * var_x39);
        const double var_x47 = exp(-5.8860000000000001 + 0.58860000000000001 * var_chaste_interface__Membrane__Vm_converted - 0.050721675884828586 * var_x39);
        const double var_x48 = var_x47 - 1.5089999999999999 * var_x46;
        const double var_x49 = var_x45 * var_x48;
        const double var_x50 = sqrt(NV_Ith_S(mParameters, 2));
        const double var_x51 = var_x50 * NV_Ith_S(mParameters, 10) / (var_x49 + 3.9100000000000001 * var_x42);
        const double var_x52 = var_x50 * NV_Ith_S(mParameters, 11) * var_chaste_interface__i_Kr_Xr2_gate__Xr2;
        const double var_x53 = NV_Ith_S(mParameters, 1) * exp(4.0615771542678836 * var_x17);
        const double var_x54 = var_x53 * pow(var_chaste_interface__sodium_dynamics__Nai, 3);
        const double var_x55 = exp(-7.5429290007832126 * var_x17);
        const double var_x56 = pow(NV_Ith_S(mParameters, 3), 3);
        const double var_x57 = var_x55 * var_x56;
        const double var_x58 = var_x57 * var_chaste_interface__calcium_dynamics__Cai;
        const double var_x59 = 1.0 + 0.10000000000000001 * var_x55;
        const double var_x60 = NV_Ith_S(mParameters, 13) / ((669921.875 + var_x56) * (1.3799999999999999 + NV_Ith_S(mParameters, 1)));
        const double var_x61 = var_x60 / var_x59;
        const double var_x62 = var_x61 * (4.0615771542678836 * var_x13 * var_x54 + 21.551228302670548 * var_x13 * var_x58);
        const double var_x63 = 0.001 * var_chaste_interface__Membrane__Vm_converted;
        const double var_x64 = 8.6173421482889202e-5 * var_x39;
        const double var_x65 = var_x63 - var_x64;
        const double var_x66 = var_x40 / pow(var_x41, 2);
        const double var_x67 = 1 / (1.0 + NV_Ith_S(mParameters, 2));
        const double var_x68 = 1 / (40.0 + var_chaste_interface__sodium_dynamics__Nai);
        const double var_x69 = exp(-11.604506155051096 * var_x17);
        const double var_x70 = exp(-1.1604506155051095 * var_x17);
        const double var_x71 = 1.0 + 0.035299999999999998 * var_x69 + 0.1245 * var_x70;
        const double var_x72 = var_x67 * var_x68 * (0.14447610163038616 * var_x13 * var_x70 + 0.40963906727330363 * var_x13 * var_x69) * NV_Ith_S(mParameters, 14) * NV_Ith_S(mParameters, 2) * var_chaste_interface__sodium_dynamics__Nai / pow(var_x71, 2);
        const double var_x73 = var_x54 - 2.8571431999999999 * var_x58;
        const double var_x74 = var_x13 * var_x55 * var_x60 * var_x73 / pow(var_x59, 2);
        const double var_x75 = var_x2 * var_chaste_interface__i_CaL_d_gate__d;
        const double var_x76 = var_x75 * var_x8 * var_x9;
        const double var_x77 = 4.30867107414446e-9 * NV_Ith_S(mParameters, 17) + var_chaste_interface__Membrane__Vm_converted;
        const double var_x78 = var_x14 * var_x77;
        const double var_x79 = ((var_x16) ? (-var_x76 + var_x78 * (var_x76 + var_x3 * var_x4 * var_x75)) : (4478658.9572358271 * var_x17 * var_x18 * var_x27));
        const double var_x80 = 0.00050000000000000001 + var_chaste_interface__calcium_dynamics__Cai;
        const double var_x81 = NV_Ith_S(mParameters, 7) / var_x80;
        const double var_x82 = var_chaste_interface__calcium_dynamics__Cai * NV_Ith_S(mParameters, 7) / pow(var_x80, 2);
        const double var_x83 = 4.3086710741444601e-5 * NV_Ith_S(mParameters, 17);
        const double var_x84 = var_x31 * NV_Ith_S(mParameters, 5);
        const double var_x85 = var_x57 * var_x61;
        const double var_x86 = 1 / (0.029999999999999999 * var_chaste_interface__sodium_dynamics__Nai + NV_Ith_S(mParameters, 0));
        const double var_x87 = 8.6173421482889202e-5 * NV_Ith_S(mParameters, 17);
        const double var_x88 = var_x63 - var_x87 * log(var_x86 * (0.029999999999999999 * NV_Ith_S(mParameters, 3) + NV_Ith_S(mParameters, 2)));
        const double var_x89 = 1 / var_chaste_interface__sodium_dynamics__Nai;
        const double var_x90 = var_x63 - var_x87 * log(var_x89 * NV_Ith_S(mParameters, 3));
        const double var_x91 = var_x90 * pow(var_chaste_interface__i_Na_m_gate__m, 2) * NV_Ith_S(mParameters, 8) * var_chaste_interface__i_Na_h_gate__h * var_chaste_interface__i_Na_j_gate__j;
        const double var_x92 = var_x90;
        const double var_x93 = var_x37 * var_chaste_interface__i_Na_h_gate__h;
        const double var_x94 = var_x17 * var_x23;
        const double var_x95 = var_x0 * var_x94;
        const double var_x96 = ((var_x16) ? (-var_x11 + var_x78 * (var_x11 + var_x7)) : (var_x95 * var_chaste_interface__i_CaL_f1_gate__f1));
        const double var_x97 = var_x1 * var_chaste_interface__i_CaL_d_gate__d;
        const double var_x98 = var_x10 * var_x97;
        const double var_x99 = ((var_x16) ? (-var_x98 + var_x78 * (var_x98 + var_x6 * var_x97)) : (var_x95 * var_chaste_interface__i_CaL_d_gate__d));
        const double var_x100 = var_x24 * NV_Ith_S(mParameters, 4);
        const double var_x101 = 0.019297068299999998 * var_x100;
        const double var_x102 = var_x101 * var_chaste_interface__i_CaL_fCa_gate__fCa;
        const double var_x103 = var_x10 * var_x102;
        const double var_x104 = var_x100 * var_x94;
        const double var_x105 = ((var_x16) ? (-var_x103 + var_x78 * (var_x103 + var_x102 * var_x6)) : (var_x104 * var_chaste_interface__i_CaL_fCa_gate__fCa));
        const double var_x106 = var_x101 * var_chaste_interface__i_CaL_f2_gate__f2;
        const double var_x107 = var_x10 * var_x106;
        const double var_x108 = ((var_x16) ? (-var_x107 + var_x78 * (var_x107 + var_x106 * var_x6)) : (var_x104 * var_chaste_interface__i_CaL_f2_gate__f2));
        const double var_x109 = 0.43033148291193518 * var_x65;
        const double var_x110 = -var_x63;
        const double var_x111 = (var_x110 + var_x64) * NV_Ith_S(mParameters, 15);
        const double var_x112 = var_x89 * NV_Ith_S(mParameters, 6);
        const double var_x113 = var_x67 * NV_Ith_S(mParameters, 14) * NV_Ith_S(mParameters, 2) / var_x71;
        const double var_x114 = var_x113 * var_x68;
        const double var_x115 = var_x113 * var_chaste_interface__sodium_dynamics__Nai / pow((1 + 0.025000000000000001 * var_chaste_interface__sodium_dynamics__Nai), 2);
        const double var_x116 = var_x38 * var_chaste_interface__i_Na_h_gate__h;
        const double var_x117 = var_x116 * var_x89;
        const double var_x118 = var_x53 * var_x61 * pow(var_chaste_interface__sodium_dynamics__Nai, 2);
        const double var_x119 = 0.001 + var_chaste_interface__calcium_dynamics__Cai;
        const double var_x120 = 1.0 + 0.00025000000000000001 / pow(var_x119, 2);
        const double var_x121 = 1 / var_x120;
        const double var_x122 = 0.001 * var_x121;
        const double var_x123 = 1.0 + 6.2499999999999997e-8 / pow(var_chaste_interface__calcium_dynamics__Cai, 2);
        const double var_x124 = 2.7500000000000001e-8 / (pow(var_x123, 2) * pow(var_chaste_interface__calcium_dynamics__Cai, 3));
        const double var_x125 = 0.00044443999999999999 * var_chaste_interface__calcium_dynamics__Ca_SR;
        const double var_x126 = 0.22 / var_x123;
        const double var_x127 = 0.00044443999999999999 * var_chaste_interface__calcium_dynamics__Cai;
        const double var_x128 = 739037981.24901497 * NV_Ith_S(mParameters, 16);
        const double var_x129 = pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2);
        const double var_x130 = 0.0625 + var_x129;
        const double var_x131 = 1 / var_x130;
        const double var_x132 = var_x129 * var_x131;
        const double var_x133 = var_chaste_interface__calcium_dynamics__g * var_chaste_interface__i_CaL_d_gate__d;
        const double var_x134 = 0.055599999999999997 * var_x133 * (8.2319999999999993 + 16.463999999999999 * var_x132);
        const double var_x135 = 0.91539839999999983 * var_x132;
        const double var_x136 = 0.45769919999999992 + var_x135;
        const double var_x137 = var_x121 * NV_Ith_S(mParameters, 16);
        const double var_x138 = 739037.98124901496 * var_x137;
        const double var_x139 = 1.8307967999999997 * var_x131 * var_chaste_interface__calcium_dynamics__Ca_SR;
        const double var_x140 = 1.8307967999999997 * pow(var_chaste_interface__calcium_dynamics__Ca_SR, 3) / pow(var_x130, 2);
        const double var_x141 = 0.20000000000000001 * var_chaste_interface__Membrane__Vm_converted;
        const double var_x142 = exp(7.0 + var_x141);
        const double var_x143 = 1.0 + var_x142;
        const double var_x144 = 1 / var_x143;
        const double var_x145 = exp(-0.25 + 0.0050000000000000001 * var_chaste_interface__Membrane__Vm_converted);
        const double var_x146 = 1.0 + var_x145;
        const double var_x147 = 1 / var_x146;
        const double var_x148 = 1 / (0.10000000000000001 * var_x144 + 0.10000000000000001 * var_x147);
        const double var_x149 = exp(-5.7796610169491522 - 0.16949152542372881 * var_chaste_interface__Membrane__Vm_converted);
        const double var_x150 = 1.0 + var_x149;
        const double var_x151 = -var_chaste_interface__i_Na_m_gate__m + pow(var_x150, (-0.33333333333333331));
        const double var_x152 = exp(-12.0 - var_x141);
        const double var_x153 = 1.0 + var_x152;
        const double var_x154 = var_x148 * var_x153;
        const double var_x155 = exp(12.649122807017543 + 0.17543859649122806 * var_chaste_interface__Membrane__Vm_converted);
        const double var_x156 = 1.0 + var_x155;
        const double var_x157 = 1 / sqrt(var_x156);
        const double var_x158 = 0.001 * var_x157;
        const double var_x159 = exp(0.34849999999999998 * var_chaste_interface__Membrane__Vm_converted);
        const double var_x160 = exp(0.079000000000000001 * var_chaste_interface__Membrane__Vm_converted);
        const double var_x161 = exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__Membrane__Vm_converted);
        const double var_x162 = var_x155 / pow(var_x156, (3 / 2));
        const double var_x163 = 8.7719298245614029e-5 * var_x162;
        const double var_x164 = var_x63 < -0.040000000000000001;
        const double var_x165 = exp(0.24440000000000001 * var_chaste_interface__Membrane__Vm_converted);
        const double var_x166 = exp(-0.043909999999999998 * var_chaste_interface__Membrane__Vm_converted);
        const double var_x167 = -25428.0 * var_x165 - 6.9480000000000002e-6 * var_x166;
        const double var_x168 = exp(24.640530000000002 + 0.311 * var_chaste_interface__Membrane__Vm_converted);
        const double var_x169 = 1.0 + var_x168;
        const double var_x170 = 1 / var_x169;
        const double var_x171 = 142.85714285714286 * var_x170;
        const double var_x172 = var_x167 * var_x171;
        const double var_x173 = exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__Membrane__Vm_converted);
        const double var_x174 = 1.0 + var_x173;
        const double var_x175 = exp(-0.01052 * var_chaste_interface__Membrane__Vm_converted);
        const double var_x176 = var_x175 / var_x174;
        const double var_x177 = 37.780000000000001 + var_chaste_interface__Membrane__Vm_converted;
        const double var_x178 = var_x167 * var_x177;
        const double var_x179 = -var_chaste_interface__i_Na_j_gate__j + var_x157;
        const double var_x180 = 0.10000000000000001 * var_chaste_interface__Membrane__Vm_converted;
        const double var_x181 = exp(-3.2000000000000002 - var_x180);
        const double var_x182 = 1.0 + var_x181;
        const double var_x183 = exp(0.057000000000000002 * var_chaste_interface__Membrane__Vm_converted);
        const double var_x184 = var_x183 / var_x182;
        const double var_x185 = exp(-0.85514285714285709 - 0.14285714285714285 * var_chaste_interface__Membrane__Vm_converted);
        const double var_x186 = 1.0 + var_x185;
        const double var_x187 = 0.050000000000000003 * var_chaste_interface__Membrane__Vm_converted;
        const double var_x188 = -var_x187;
        const double var_x189 = exp(2.5 + var_x188);
        const double var_x190 = 1.0 + var_x189;
        const double var_x191 = 1 / var_x190;
        const double var_x192 = exp(1.0 + var_x141);
        const double var_x193 = 1.0 + var_x192;
        const double var_x194 = 1 / var_x193;
        const double var_x195 = 0.076923076923076927 * var_chaste_interface__Membrane__Vm_converted;
        const double var_x196 = exp(-2.6923076923076925 - var_x195);
        const double var_x197 = 1.0 + var_x196;
        const double var_x198 = 0.25 + 1.3999999999999999 / var_x197;
        const double var_x199 = var_x194 * var_x198;
        const double var_x200 = 1 / (0.001 * var_x191 + 0.0014 * var_x199);
        const double var_x201 = 1 / (0.92835000000000001 + 1433.0 * var_chaste_interface__calcium_dynamics__Cai);
        const double var_x202 = 0.10000000000000001 * var_chaste_interface__Membrane__Vm_converted;
        const double var_x203 = exp(3.0 + var_x202);
        const double var_x204 = 1.0 + var_x203;
        const double var_x205 = 1 / var_x204;
        const double var_x206 = -var_x202;
        const double var_x207 = exp(1.3 + var_x206);
        const double var_x208 = 1.0 + var_x207;
        const double var_x209 = 1 / var_x208;
        const double var_x210 = 1 + 0.037037037037037035 * var_chaste_interface__Membrane__Vm_converted;
        const double var_x211 = exp(-2361.96 * pow(var_x210, 4));
        const double var_x212 = exp(8.408666666666667 + 0.33333333333333331 * var_chaste_interface__Membrane__Vm_converted);
        const double var_x213 = 1.0 + var_x212;
        const double var_x214 = 1 / var_x213;
        const double var_x215 = var_x214 - var_chaste_interface__i_CaL_f1_gate__f1;
        const double var_x216 = var_x203 / pow(var_x204, 2);
        const double var_x217 = 8.2270247479188195e-7 * var_x215 * (18.0 * var_x216 + 385786.79999999999 * var_x211 * pow(var_x210, 3) - 20.0 * var_x207 / pow(var_x208, 2)) / pow((0.018140589569160998 + var_x211 + 0.16326530612244897 * var_x205 + 0.18140589569160998 * var_x209), 2);
        const double var_x218 = 1 / (20.0 + 200.0 * var_x209 + 180.0 * var_x205 + 1102.5 * var_x211);
        const double var_x219 = 0.33333333333333331 * var_x212 * var_x218 / pow(var_x213, 2);
        const double var_x220 = -var_x214 + var_chaste_interface__i_CaL_f1_gate__f1 < 0;
        const double var_x221 = var_x218;
        const double var_x222 = exp(2.5 + var_x206);
        const double var_x223 = 1.0 + var_x222;
        const double var_x224 = 1 / var_x223;
        const double var_x225 = exp(-3.6764705882352939 * pow((1 + 0.040000000000000001 * var_chaste_interface__Membrane__Vm_converted), 2));
        const double var_x226 = exp(7.8064999999999998 + 0.25 * var_chaste_interface__Membrane__Vm_converted);
        const double var_x227 = 1.0 + var_x226;
        const double var_x228 = 1.2 * var_x225;
        const double var_x229 = 1 / (var_x228 + 0.032000000000000001 * var_x205 + 0.062 * var_x224);
        const double var_x230 = var_x63 > -0.059999999999999998;
        const double var_x231 = exp(-0.9375 + 1250.0 * var_chaste_interface__calcium_dynamics__Cai);
        const double var_x232 = 1.0 + var_x231;
        const double var_x233 = exp(-9.0 + 10000.0 * var_chaste_interface__calcium_dynamics__Cai);
        const double var_x234 = 1.0 + var_x233;
        const double var_x235 = pow(var_chaste_interface__calcium_dynamics__Cai, 8);
        const double var_x236 = (var_x230) && (var_chaste_interface__i_CaL_fCa_gate__fCa < 0.22803283672848887 / var_x232 + 0.076010945576162961 / var_x234 + 0.76010945576162958 / (1.0 + 5.9537418076512766e+25 * var_x235));
        const double var_x237 = exp(-4.5 + var_x206);
        const double var_x238 = 1.0 + var_x237;
        const double var_x239 = exp(-3.8775510204081627 - 0.2040816326530612 * var_chaste_interface__Membrane__Vm_converted - 0.0076462663250123509 * (-2.1789087017666886 + log(40.0 * pow((1.0 + 0.38461538461538458 * NV_Ith_S(mParameters, 1)), 4) / pow((0.57999999999999996 + NV_Ith_S(mParameters, 1)), 4))) * NV_Ith_S(mParameters, 17));
        const double var_x240 = 1.0 + var_x239;
        const double var_x241 = -var_chaste_interface__i_Kr_Xr1_gate__Xr1 + 1 / var_x240;
        const double var_x242 = exp(2.6086956521739131 + 0.086956521739130432 * var_chaste_interface__Membrane__Vm_converted);
        const double var_x243 = 0.00037037037037037035 + 0.00037037037037037035 * var_x242;
        const double var_x244 = var_x238 * var_x243;
        const double var_x245 = exp(-3.0 + var_x188);
        const double var_x246 = 1.0 + var_x245;
        const double var_x247 = exp(1.76 + 0.02 * var_chaste_interface__Membrane__Vm_converted);
        const double var_x248 = 1.0 + var_x247;
        const double var_x249 = -var_chaste_interface__i_Kr_Xr2_gate__Xr2 + 1 / var_x248;
        const double var_x250 = exp(-3.0 + var_x187);
        const double var_x251 = 0.29761904761904762 + 0.29761904761904762 * var_x250;
        const double var_x252 = var_x246 * var_x251;
        const double var_x253 = exp(-1.6666666666666667 - 0.16666666666666666 * var_chaste_interface__Membrane__Vm_converted);
        const double var_x254 = sqrt(1.0 + var_x253);
        const double var_x255 = exp(-1.25 - 0.0625 * var_chaste_interface__Membrane__Vm_converted);
        const double var_x256 = 1.0 + var_x255;
        const double var_x257 = -var_chaste_interface__i_Ks_Xs_gate__Xs + 1 / var_x256;
        const double var_x258 = 1.0 + var_x250;
        const double var_x259 = var_x254 * var_x258;
        const double var_x260 = exp(15.569999999999999 + var_x141);
        const double var_x261 = 1.0 + var_x260;
        const double var_x262 = exp(1.5 + var_x202);
        const double var_x263 = 0.0005263157894736842 * var_x262;
        const double var_x264 = exp(4.0769230769230766 + var_x195);
        const double var_x265 = 1.0 + var_x264;
        const double var_x266 = exp(4.593 + var_x180);
        const double var_x267 = exp(-3.52 - 0.080000000000000002 * var_chaste_interface__Membrane__Vm_converted);
        const double var_x268 = 1 / (0.065000000000000002 * var_x266 + 0.56999999999999995 * var_x267);
        const double var_x269 = 1 / (0.0060599999999999994 + 0.039101999999999998 * var_x268);
        const double var_x270 = exp(1.1893333333333334 - 0.053333333333333337 * var_chaste_interface__Membrane__Vm_converted);
        const double var_x271 = 1.0 + var_x270;
        const double var_x272 = exp(2.7548999999999997 + 0.089999999999999997 * var_chaste_interface__Membrane__Vm_converted);
        const double var_x273 = exp(-2.8607999999999998 - 0.12 * var_chaste_interface__Membrane__Vm_converted);
        const double var_x274 = 1 / (1.0369999999999999 * var_x272 + 0.36899999999999999 * var_x273);
        const double var_x275 = 1 / (0.0027535199999999998 + 0.01440516 * var_x274);
        const double var_x276 = 1478075.9624980299 * var_x90 * NV_Ith_S(mParameters, 16);
        const double var_x277 = 127.37086290006985 * NV_Ith_S(mParameters, 17);
        const double var_x278 = 0.29999999999999999 + var_chaste_interface__calcium_dynamics__Ca_SR;
        const double var_x279 = pow(var_x278, (-2));
        const double var_x280 = 0.015073086844368014 / (1.0 + 3.0 * var_x279);
        const double var_x281 = var_x280 * (-0.45769919999999992 - var_x135);
        const double var_x282 = var_chaste_interface__calcium_dynamics__Cai <= 0.00035;
        const double var_x283 = pow(var_chaste_interface__calcium_dynamics__Cai, 16);
        const double var_x284 = (var_x282) || (var_chaste_interface__calcium_dynamics__g < 1 / (1.0 + 1.9720198874049176e+55 * var_x283));
        const double var_x285 = pow(var_chaste_interface__calcium_dynamics__Cai, 6);
        const double var_x286 = (var_chaste_interface__calcium_dynamics__Cai > 0.00035) || (var_chaste_interface__calcium_dynamics__g < 1 / (1.0 + 5.439910241481016e+20 * var_x285));
        const double var_x287 = (var_x230) && (var_x282) && (var_x284) && (var_x286);
        const double var_x288 = (var_x230) && (var_x284) && (var_x286);
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x29 - var_x62 - var_x72 - 0.001 * var_x35 - 0.001 * NV_Ith_S(mParameters, 5) - 0.001 * NV_Ith_S(mParameters, 6) - 0.75429290007832128 * var_x74 - var_x36 * var_x38 - 0.001 * NV_Ith_S(mParameters, 9) * var_chaste_interface__i_f_Xf_gate__Xf - 0.0016825960981856666 * var_x42 * var_x51 - 0.00043033148291193521 * var_x52 * var_chaste_interface__i_Kr_Xr1_gate__Xr1 + 0.99979860154192302 * var_x51 * var_x65 * var_x66 - 0.001 * NV_Ith_S(mParameters, 15) * var_chaste_interface__i_to_q_gate__q * var_chaste_interface__i_to_r_gate__r - 0.11005920279077626 * var_x42 * var_x50 * var_x65 * (2.3233220000000001 * var_x66 - var_x45 * (0.58860000000000001 * var_x47 - 0.00030180000000000002 * var_x46) + 0.45469999999999999 * var_x43 * var_x48 / pow(var_x44, 2)) * NV_Ith_S(mParameters, 10) / pow((var_x42 + 0.25575447570332482 * var_x49), 2));
        IJth(rJacobian, 1, 0) = var_x122 * (1478075962.4980299 * var_x62 + 1114902204.2886949 * var_x74 - 739037981.24901497 * var_x29 - 739037.98124901496 * NV_Ith_S(mParameters, 5)) * NV_Ith_S(mParameters, 16);
        IJth(rJacobian, 2, 0) = 0.056497175141242938 * var_x149 * var_x154 * pow(var_x150, (-1.3333333333333333)) - 0.20000000000000001 * var_x148 * var_x151 * var_x152 + 99.999999999999986 * var_x151 * var_x153 * (0.02 * var_x142 / pow(var_x143, 2) + 0.00050000000000000001 * var_x145 / pow(var_x146, 2)) / pow((var_x144 + var_x147), 2);
        IJth(rJacobian, 3, 0) = ((var_x164) ? ((var_x158 - var_x36) * (72023333.333333328 * var_x159 + 142.20000000000002 * var_x160 - 5.5882352941176476 * var_x161) - var_x163 * (38.0 * var_x161 + 206666666.66666669 * var_x159 + 1800.0000000000002 * var_x160)) : (-0.034507985147763195 * var_x162));
        IJth(rJacobian, 4, 0) = ((var_x164) ? ((var_x158 - 0.001 * var_chaste_interface__i_Na_j_gate__j) * (var_x172 - 0.036429257142857142 * var_x176 + var_x171 * var_x177 * (3.0508668000000001e-7 * var_x166 - 6214.6032000000005 * var_x165) + 0.47718171428571432 * var_x173 * var_x175 / pow(var_x174, 2) - 44.428571428571431 * var_x168 * var_x178 / pow(var_x169, 2)) - var_x163 * (3.4628571428571431 * var_x176 + var_x172 * var_x177)) : (0.0048857142857142858 * var_x179 * var_x184 - 0.0075187969924812026 * var_x162 * var_x184 + 0.0085714285714285719 * var_x179 * var_x181 * var_x183 / pow(var_x182, 2)));
        IJth(rJacobian, 5, 0) = 0.00014285714285714287 * var_x185 * var_x200 / pow(var_x186, 2) + 510.20408163265313 * (-var_chaste_interface__i_CaL_d_gate__d + 1 / var_x186) * (-5.0000000000000002e-5 * var_x189 / pow(var_x190, 2) + 0.00027999999999999998 * var_x192 * var_x198 / pow(var_x193, 2) - 0.00015076923076923074 * var_x194 * var_x196 / pow(var_x197, 2)) / pow((var_x199 + 0.7142857142857143 * var_x191), 2);
        IJth(rJacobian, 6, 0) = ((var_x220) ? (var_x201 * var_x217 - var_x201 * var_x219) : (var_x217 - var_x219));
        IJth(rJacobian, 7, 0) = 0.00069444444444444447 * (0.33000000000000002 - var_chaste_interface__i_CaL_f2_gate__f2 + 0.67000000000000004 / var_x227) * (0.0032000000000000002 * var_x216 - var_x228 * (-0.29411764705882354 - 0.011764705882352941 * var_chaste_interface__Membrane__Vm_converted) - 0.0061999999999999998 * var_x222 / pow(var_x223, 2)) / pow((var_x225 + 0.051666666666666666 * var_x224 + 0.026666666666666668 * var_x205), 2) - 0.00016750000000000001 * var_x226 * var_x229 / pow(var_x227, 2);
        IJth(rJacobian, 9, 0) = 3.2206119162640899e-5 * var_x238 * var_x241 * var_x242 + 0.2040816326530612 * var_x239 * var_x244 / pow(var_x240, 2) - 0.10000000000000001 * var_x237 * var_x241 * var_x243;
        IJth(rJacobian, 10, 0) = 0.01488095238095238 * var_x246 * var_x249 * var_x250 - 0.02 * var_x247 * var_x252 / pow(var_x248, 2) - 0.050000000000000003 * var_x245 * var_x249 * var_x251;
        IJth(rJacobian, 11, 0) = 5.6818181818181818e-5 * var_x255 * var_x259 / pow(var_x256, 2) + 4.5454545454545452e-5 * var_x250 * var_x254 * var_x257 - 7.5757575757575758e-5 * var_x253 * var_x257 * var_x258 / var_x254;
        IJth(rJacobian, 12, 0) = 5.2631578947368424e-5 * var_x262 * (-var_chaste_interface__i_f_Xf_gate__Xf + 1 / var_x261) - 0.20000000000000001 * var_x260 * (0.0005263157894736842 + var_x263) / pow(var_x261, 2);
        IJth(rJacobian, 13, 0) = -7.6923076923076926e-5 * var_x264 * var_x269 / pow(var_x265, 2) - 0.078713879440468384 * (-var_chaste_interface__i_to_q_gate__q + 1 / var_x265) * (0.045599999999999995 * var_x267 - 0.0065000000000000006 * var_x266) / (pow((0.15497928494706154 + var_x268), 2) * pow((var_x267 + 0.11403508771929825 * var_x266), 2));
        IJth(rJacobian, 14, 0) = 5.3333333333333333e-5 * var_x270 * var_x275 / pow(var_x271, 2) - 0.064554184748538135 * (-var_chaste_interface__i_to_r_gate__r + 1 / var_x271) * (0.04428 * var_x273 - 0.093329999999999996 * var_x272) / (pow((0.19114817190506733 + var_x274), 2) * pow((var_x272 + 0.35583413693346194 * var_x273), 2));
        IJth(rJacobian, 15, 0) = (-4434227.8874940891 * var_x62 - 4434227.8874940891 * var_x72 - 1478.0759624980299 * var_x116 - 1478.0759624980299 * NV_Ith_S(mParameters, 6) - 3344706.612866085 * var_x74) * NV_Ith_S(mParameters, 16);
        IJth(rJacobian, 0, 1) = mSetVoltageDerivativeToZero ? 0.0 : (var_x82 + 2.8571431999999999 * var_x85 - var_x79 - var_x81 - var_x83 * var_x84 - 5.4447296618926212e-7 * var_x30 * var_x31 * var_x32 * var_x88 * NV_Ith_S(mParameters, 12) / pow(var_x33, 2));
        IJth(rJacobian, 1, 1) = var_x122 * (-0.00044443999999999999 - var_x124 + (739037981.24901497 * var_x82 - 739037981.24901497 * var_x79 - 739037981.24901497 * var_x81 - 4223074685.3347006 * var_x85 - 31842.715725017464 * var_x84 * NV_Ith_S(mParameters, 17)) * NV_Ith_S(mParameters, 16)) + 4.9999999999999998e-7 * (var_x125 + var_x134 - var_x126 - var_x127 - var_x128 * (var_x81 * var_chaste_interface__calcium_dynamics__Cai + (var_x63 - var_x83 * log(var_x31 * NV_Ith_S(mParameters, 1))) * NV_Ith_S(mParameters, 5) - 2.0 * var_x61 * var_x73 + ((var_x16) ? (-var_x12 + var_x15 * var_x77) : (var_x17 * var_x26)))) / (pow(var_x119, 3) * pow(var_x120, 2));
        IJth(rJacobian, 6, 1) = ((var_x220) ? (-0.00069783670621074664 * var_x215 * var_x218 / pow((0.00064783670621074672 + var_chaste_interface__calcium_dynamics__Cai), 2)) : (0));
        IJth(rJacobian, 8, 1) = ((var_x236) ? (0) : (-5.1067680145940974e-26 * pow(var_chaste_interface__calcium_dynamics__Cai, 7) / pow((1.6796159999999989e-26 + var_x235), 2) - 380.05472788081482 * var_x233 / pow(var_x234, 2) - 142.52052295530555 * var_x231 / pow(var_x232, 2)));
        IJth(rJacobian, 15, 1) = 12669224.056004103 * var_x85 * NV_Ith_S(mParameters, 16);
        IJth(rJacobian, 16, 1) = var_x280 * (0.00044443999999999999 + var_x124);
        IJth(rJacobian, 17, 1) = ((var_x287) ? (0) : ((var_x282) ? (-5.5147968749999998e-21 * pow(var_chaste_interface__calcium_dynamics__Cai, 5) / pow((1.8382656249999998e-21 + var_x285), 2)) : ((var_x288) ? (0) : (-4.0567542199219961e-55 * pow(var_chaste_interface__calcium_dynamics__Cai, 15) / pow((5.0709427749024951e-56 + var_x283), 2)))));
        IJth(rJacobian, 0, 2) = mSetVoltageDerivativeToZero ? 0.0 : (-3.0 * var_x91);
        IJth(rJacobian, 2, 2) = -var_x154;
        IJth(rJacobian, 15, 2) = -4434227.8874940891 * var_x91 * NV_Ith_S(mParameters, 16);
        IJth(rJacobian, 0, 3) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x38 * var_x92);
        IJth(rJacobian, 3, 3) = ((var_x164) ? (-0.037999999999999999 * var_x161 - 1.8 * var_x160 - 206666.66666666669 * var_x159) : (-0.39339103068450043));
        IJth(rJacobian, 15, 3) = -var_x276 * var_x38;
        IJth(rJacobian, 0, 4) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x92 * var_x93);
        IJth(rJacobian, 4, 4) = ((var_x164) ? (-0.003462857142857143 * var_x176 - 0.14285714285714285 * var_x170 * var_x178) : (-0.085714285714285715 * var_x184));
        IJth(rJacobian, 15, 4) = -var_x276 * var_x93;
        IJth(rJacobian, 0, 5) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x96);
        IJth(rJacobian, 1, 5) = var_x122 * (var_x136 * var_chaste_interface__calcium_dynamics__g - var_x128 * var_x96);
        IJth(rJacobian, 5, 5) = -0.001 * var_x200;
        IJth(rJacobian, 16, 5) = var_x281 * var_chaste_interface__calcium_dynamics__g;
        IJth(rJacobian, 0, 6) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x99);
        IJth(rJacobian, 1, 6) = -var_x138 * var_x99;
        IJth(rJacobian, 6, 6) = ((var_x220) ? (-var_x201 * var_x221) : (-var_x221));
        IJth(rJacobian, 0, 7) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x105);
        IJth(rJacobian, 1, 7) = -var_x105 * var_x138;
        IJth(rJacobian, 7, 7) = -0.001 * var_x229;
        IJth(rJacobian, 0, 8) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x108);
        IJth(rJacobian, 1, 8) = -var_x108 * var_x138;
        IJth(rJacobian, 8, 8) = ((var_x236) ? (0) : (-0.5));
        IJth(rJacobian, 0, 9) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x109 * var_x52);
        IJth(rJacobian, 9, 9) = -var_x244;
        IJth(rJacobian, 0, 10) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x109 * var_x50 * NV_Ith_S(mParameters, 11) * var_chaste_interface__i_Kr_Xr1_gate__Xr1);
        IJth(rJacobian, 10, 10) = -var_x252;
        IJth(rJacobian, 0, 11) = mSetVoltageDerivativeToZero ? 0.0 : (-2.0 * var_x34 * var_x88 * var_chaste_interface__i_Ks_Xs_gate__Xs);
        IJth(rJacobian, 11, 11) = -0.00090909090909090909 * var_x259;
        IJth(rJacobian, 0, 12) = mSetVoltageDerivativeToZero ? 0.0 : ((-0.017000000000000001 + var_x110) * NV_Ith_S(mParameters, 9));
        IJth(rJacobian, 12, 12) = -0.0005263157894736842 - var_x263;
        IJth(rJacobian, 0, 13) = mSetVoltageDerivativeToZero ? 0.0 : (var_x111 * var_chaste_interface__i_to_r_gate__r);
        IJth(rJacobian, 13, 13) = -0.001 * var_x269;
        IJth(rJacobian, 0, 14) = mSetVoltageDerivativeToZero ? 0.0 : (var_x111 * var_chaste_interface__i_to_q_gate__q);
        IJth(rJacobian, 14, 14) = -0.001 * var_x275;
        IJth(rJacobian, 0, 15) = mSetVoltageDerivativeToZero ? 0.0 : (0.00062500000000000001 * var_x115 - var_x114 - 3.0 * var_x118 - var_x112 * var_x87 - var_x117 * var_x87 - 2.585202644486676e-6 * var_x35 * var_x86 * NV_Ith_S(mParameters, 17));
        IJth(rJacobian, 1, 15) = 4434227.8874940891 * var_x118 * var_x137;
        IJth(rJacobian, 15, 15) = (2771.3924296838059 * var_x115 - 13302683.662482269 * var_x118 - 4434227.8874940891 * var_x114 - var_x112 * var_x277 - var_x117 * var_x277) * NV_Ith_S(mParameters, 16);
        IJth(rJacobian, 1, 16) = var_x122 * (0.00044443999999999999 + var_x133 * (var_x139 - var_x140));
        IJth(rJacobian, 16, 16) = var_x280 * (-0.00044443999999999999 + var_x133 * (var_x140 - var_x139)) + 0.010048724562912011 * (var_x126 + var_x127 - var_x125 - var_x134) / (pow(var_x278, 3) * pow((0.33333333333333337 + var_x279), 2));
        IJth(rJacobian, 1, 17) = var_x122 * var_x136 * var_chaste_interface__i_CaL_d_gate__d;
        IJth(rJacobian, 16, 17) = var_x281 * var_chaste_interface__i_CaL_d_gate__d;
        IJth(rJacobian, 17, 17) = ((var_x287) ? (0) : ((var_x282) ? (-0.5) : ((var_x288) ? (0) : (-0.5))));
    }

    N_Vector Cellpaci_hyttinen_aaltosetala_severi_atrialVersionFromCellMLCvodeOpt::ComputeDerivedQuantities(double var_chaste_interface__environment__time_converted, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -68.733823452164
        double var_chaste_interface__calcium_dynamics__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 4.49232909234503e-05
        double var_chaste_interface__i_Na_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.141183142078492
        double var_chaste_interface__i_Na_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.642108593994587
        double var_chaste_interface__i_Na_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.173566329483423
        double var_chaste_interface__i_CaL_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.000127632520741878
        double var_chaste_interface__i_CaL_f1_gate__f1 = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.98038400433601
        double var_chaste_interface__i_CaL_f2_gate__f2 = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.999953006710394
        double var_chaste_interface__i_CaL_fCa_gate__fCa = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.997346890768643
        double var_chaste_interface__i_Kr_Xr1_gate__Xr1 = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.0257889110986083
        double var_chaste_interface__i_Kr_Xr2_gate__Xr2 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.405046678739985
        double var_chaste_interface__i_Ks_Xs_gate__Xs = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.0447460799149437
        double var_chaste_interface__i_f_Xf_gate__Xf = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.0607988713874682
        double var_chaste_interface__i_to_q_gate__q = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.776163826643278
        double var_chaste_interface__i_to_r_gate__r = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.000503296941001262
        double var_chaste_interface__sodium_dynamics__Nai = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 14.4424010544424
        
        // Mathematics
        const double var_Membrane__Vm = 0.001 * var_chaste_interface__Membrane__Vm_converted; // volt
        const double var_electric_potentials__PkNa = 0.029999999999999999; // dimensionless
        const double var_i_NaCa__KmCa = 1.3799999999999999; // millimolar
        const double var_i_NaCa__KmNai = 87.5; // millimolar
        const double var_i_NaCa__Ksat = 0.10000000000000001; // dimensionless
        const double var_i_NaCa__alpha = 2.8571431999999999; // dimensionless
        const double var_i_NaCa__gamma = 0.34999999999999998; // dimensionless
        const double var_i_NaK__Km_K = 1.0; // millimolar
        const double var_i_NaK__Km_Na = 40.0; // millimolar
        const double var_i_f__E_f = -0.017000000000000001; // volt
        const double var_i_f__i_f = (-var_i_f__E_f + var_Membrane__Vm) * NV_Ith_S(mParameters, 9) * var_chaste_interface__i_f_Xf_gate__Xf; // A_per_F
        const double var_i_f__i_f_converted = HeartConfig::Instance()->GetCapacitance() * var_i_f__i_f; // uA_per_cm2
        const double var_model_parameters__Cm_converted = 1000000.0 * NV_Ith_S(mParameters, 16); // uF
        const double var_model_parameters__F = 96485.341499999995; // coulomb_per_mole
        const double var_model_parameters__R = 8.3144720000000003; // joule_per_mole_kelvin
        const double var_electric_potentials__E_K = var_model_parameters__R * NV_Ith_S(mParameters, 17) * log(NV_Ith_S(mParameters, 2) / NV_Ith_S(mParameters, 0)) / var_model_parameters__F; // volt
        const double var_i_CaL__i_CaL = ((fabs(var_chaste_interface__Membrane__Vm_converted) < 4.30867107414446e-9 * fabs(NV_Ith_S(mParameters, 17))) ? (116045061.55051096 * (4.30867107414446e-9 * NV_Ith_S(mParameters, 17) + var_chaste_interface__Membrane__Vm_converted) * (0.019297068299999998 * (-0.34100000000000003 * NV_Ith_S(mParameters, 1) + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(9.9999999999999995e-8)) + 0.019297068299999998 * (-0.34100000000000003 * NV_Ith_S(mParameters, 1) + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(-9.9999999999999995e-8))) / NV_Ith_S(mParameters, 17) - 0.019297068299999998 * (-0.34100000000000003 * NV_Ith_S(mParameters, 1) + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(-9.9999999999999995e-8))) : (4478658.9572358271 * (-0.34100000000000003 * NV_Ith_S(mParameters, 1) + var_chaste_interface__calcium_dynamics__Cai * exp(23.209012310102192 * var_chaste_interface__Membrane__Vm_converted / NV_Ith_S(mParameters, 17))) * var_chaste_interface__Membrane__Vm_converted * NV_Ith_S(mParameters, 4) * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / ((-1.0 + exp(23.209012310102192 * var_chaste_interface__Membrane__Vm_converted / NV_Ith_S(mParameters, 17))) * NV_Ith_S(mParameters, 17)))); // A_per_F
        const double var_i_CaL__i_CaL_converted = HeartConfig::Instance()->GetCapacitance() * var_i_CaL__i_CaL; // uA_per_cm2
        const double var_i_K1__alpha_K1 = 3.9100000000000001 / (1.0 + exp(-118.83999999999999 + 594.19999999999993 * var_Membrane__Vm - 594.19999999999993 * var_electric_potentials__E_K)); // dimensionless
        const double var_i_K1__beta_K1 = (-1.5089999999999999 * exp(0.02 + 0.20000000000000001 * var_Membrane__Vm - 0.20000000000000001 * var_electric_potentials__E_K) + exp(-5.8860000000000001 + 588.60000000000002 * var_Membrane__Vm - 588.60000000000002 * var_electric_potentials__E_K)) / (1.0 + exp(454.69999999999999 * var_Membrane__Vm - 454.69999999999999 * var_electric_potentials__E_K)); // dimensionless
        const double var_i_K1__XK1_inf = var_i_K1__alpha_K1 / (var_i_K1__alpha_K1 + var_i_K1__beta_K1); // dimensionless
        const double var_i_K1__i_K1 = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 2)) * (-var_electric_potentials__E_K + var_Membrane__Vm) * var_i_K1__XK1_inf * NV_Ith_S(mParameters, 10); // A_per_F
        const double var_i_K1__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_i_K1__i_K1; // uA_per_cm2
        const double var_i_Kr__i_Kr = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 2)) * (-var_electric_potentials__E_K + var_Membrane__Vm) * NV_Ith_S(mParameters, 11) * var_chaste_interface__i_Kr_Xr1_gate__Xr1 * var_chaste_interface__i_Kr_Xr2_gate__Xr2; // A_per_F
        const double var_i_Kr__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_i_Kr__i_Kr; // uA_per_cm2
        const double var_i_to__i_to = (-var_electric_potentials__E_K + var_Membrane__Vm) * NV_Ith_S(mParameters, 15) * var_chaste_interface__i_to_q_gate__q * var_chaste_interface__i_to_r_gate__r; // A_per_F
        const double var_i_to__i_to_converted = HeartConfig::Instance()->GetCapacitance() * var_i_to__i_to; // uA_per_cm2
        const double var_electric_potentials__E_Ks = var_model_parameters__R * NV_Ith_S(mParameters, 17) * log((var_electric_potentials__PkNa * NV_Ith_S(mParameters, 3) + NV_Ith_S(mParameters, 2)) / (var_electric_potentials__PkNa * var_chaste_interface__sodium_dynamics__Nai + NV_Ith_S(mParameters, 0))) / var_model_parameters__F; // volt
        const double var_electric_potentials__E_Na = var_model_parameters__R * NV_Ith_S(mParameters, 17) * log(NV_Ith_S(mParameters, 3) / var_chaste_interface__sodium_dynamics__Nai) / var_model_parameters__F; // volt
        const double var_i_Ks__i_Ks = pow(var_chaste_interface__i_Ks_Xs_gate__Xs, 2) * (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * (-var_electric_potentials__E_Ks + var_Membrane__Vm) * NV_Ith_S(mParameters, 12); // A_per_F
        const double var_i_Ks__i_Ks_converted = HeartConfig::Instance()->GetCapacitance() * var_i_Ks__i_Ks; // uA_per_cm2
        const double var_i_Na__i_Na = pow(var_chaste_interface__i_Na_m_gate__m, 3) * (-var_electric_potentials__E_Na + var_Membrane__Vm) * NV_Ith_S(mParameters, 8) * var_chaste_interface__i_Na_h_gate__h * var_chaste_interface__i_Na_j_gate__j; // A_per_F
        const double var_i_Na__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_i_Na__i_Na; // uA_per_cm2
        const double var_i_NaCa__i_NaCa = (pow(var_chaste_interface__sodium_dynamics__Nai, 3) * NV_Ith_S(mParameters, 1) * exp(var_Membrane__Vm * var_i_NaCa__gamma * var_model_parameters__F / (var_model_parameters__R * NV_Ith_S(mParameters, 17))) - pow(NV_Ith_S(mParameters, 3), 3) * var_chaste_interface__calcium_dynamics__Cai * var_i_NaCa__alpha * exp((-1.0 + var_i_NaCa__gamma) * var_Membrane__Vm * var_model_parameters__F / (var_model_parameters__R * NV_Ith_S(mParameters, 17)))) * NV_Ith_S(mParameters, 13) / ((1.0 + var_i_NaCa__Ksat * exp((-1.0 + var_i_NaCa__gamma) * var_Membrane__Vm * var_model_parameters__F / (var_model_parameters__R * NV_Ith_S(mParameters, 17)))) * (pow(var_i_NaCa__KmNai, 3) + pow(NV_Ith_S(mParameters, 3), 3)) * (var_i_NaCa__KmCa + NV_Ith_S(mParameters, 1))); // A_per_F
        const double var_i_NaCa__i_NaCa_converted = HeartConfig::Instance()->GetCapacitance() * var_i_NaCa__i_NaCa; // uA_per_cm2
        const double var_i_NaK__i_NaK = NV_Ith_S(mParameters, 14) * NV_Ith_S(mParameters, 2) * var_chaste_interface__sodium_dynamics__Nai / ((var_i_NaK__Km_K + NV_Ith_S(mParameters, 2)) * (var_i_NaK__Km_Na + var_chaste_interface__sodium_dynamics__Nai) * (1.0 + 0.035299999999999998 * exp(-var_Membrane__Vm * var_model_parameters__F / (var_model_parameters__R * NV_Ith_S(mParameters, 17))) + 0.1245 * exp(-0.10000000000000001 * var_Membrane__Vm * var_model_parameters__F / (var_model_parameters__R * NV_Ith_S(mParameters, 17))))); // A_per_F
        const double var_i_NaK__i_NaK_converted = HeartConfig::Instance()->GetCapacitance() * var_i_NaK__i_NaK; // uA_per_cm2
        const double var_stim_mode__i_stim_converted = -GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2

        N_Vector dqs = N_VNew_Serial(13);
        NV_Ith_S(dqs, 0) = var_i_CaL__i_CaL_converted;
        NV_Ith_S(dqs, 1) = var_model_parameters__Cm_converted;
        NV_Ith_S(dqs, 2) = var_i_Na__i_Na_converted;
        NV_Ith_S(dqs, 3) = var_i_f__i_f_converted;
        NV_Ith_S(dqs, 4) = var_i_K1__i_K1_converted;
        NV_Ith_S(dqs, 5) = var_i_Kr__i_Kr_converted;
        NV_Ith_S(dqs, 6) = var_i_Ks__i_Ks_converted;
        NV_Ith_S(dqs, 7) = var_i_NaCa__i_NaCa_converted;
        NV_Ith_S(dqs, 8) = var_i_NaK__i_NaK_converted;
        NV_Ith_S(dqs, 9) = var_stim_mode__i_stim_converted;
        NV_Ith_S(dqs, 10) = var_i_to__i_to_converted;
        NV_Ith_S(dqs, 11) = var_chaste_interface__Membrane__Vm_converted;
        NV_Ith_S(dqs, 12) = var_chaste_interface__environment__time_converted;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellpaci_hyttinen_aaltosetala_severi_atrialVersionFromCellMLCvodeOpt>::Initialise(void)
{
    this->mSystemName = "paci_hyttinen_aaltosetala_severi_atrialVersion";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // NV_Ith_S(rY, 0):
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-68.733823452164);

    // NV_Ith_S(rY, 1):
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(4.49232909234503e-05);

    // NV_Ith_S(rY, 2):
    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.141183142078492);

    // NV_Ith_S(rY, 3):
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.642108593994587);

    // NV_Ith_S(rY, 4):
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.173566329483423);

    // NV_Ith_S(rY, 5):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000127632520741878);

    // NV_Ith_S(rY, 6):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.98038400433601);

    // NV_Ith_S(rY, 7):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f2_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999953006710394);

    // NV_Ith_S(rY, 8):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_fCa_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.997346890768643);

    // NV_Ith_S(rY, 9):
    this->mVariableNames.push_back("i_Kr_Xr1_gate__Xr1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0257889110986083);

    // NV_Ith_S(rY, 10):
    this->mVariableNames.push_back("i_Kr_Xr2_gate__Xr2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.405046678739985);

    // NV_Ith_S(rY, 11):
    this->mVariableNames.push_back("i_Ks_Xs_gate__Xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0447460799149437);

    // NV_Ith_S(rY, 12):
    this->mVariableNames.push_back("membrane_hyperpolarisation_activated_funny_current_single_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0607988713874682);

    // NV_Ith_S(rY, 13):
    this->mVariableNames.push_back("i_to_q_gate__q");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.776163826643278);

    // NV_Ith_S(rY, 14):
    this->mVariableNames.push_back("i_to_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000503296941001262);

    // NV_Ith_S(rY, 15):
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(14.4424010544424);

    // NV_Ith_S(rY, 16):
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.149980051221604);

    // NV_Ith_S(rY, 17):
    this->mVariableNames.push_back("calcium_dynamics__g");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // mParameters[0]:
    this->mParameterNames.push_back("cytosolic_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[1]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[2]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[3]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[4]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("metre_cube_per_F_per_s");

    // mParameters[5]:
    this->mParameterNames.push_back("membrane_background_calcium_current_conductance");
    this->mParameterUnits.push_back("S_per_F");

    // mParameters[6]:
    this->mParameterNames.push_back("membrane_background_sodium_current_conductance");
    this->mParameterUnits.push_back("S_per_F");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_calcium_pump_current_conductance");
    this->mParameterUnits.push_back("A_per_F");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("S_per_F");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_hyperpolarisation_activated_funny_current_potassium_component_conductance");
    this->mParameterUnits.push_back("S_per_F");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("S_per_F");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("S_per_F");

    // mParameters[12]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("S_per_F");

    // mParameters[13]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("A_per_F");

    // mParameters[14]:
    this->mParameterNames.push_back("membrane_sodium_potassium_pump_current_permeability");
    this->mParameterUnits.push_back("A_per_F");

    // mParameters[15]:
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
    this->mParameterUnits.push_back("S_per_F");

    // mParameters[16]:
    this->mParameterNames.push_back("model_parameters__Cm");
    this->mParameterUnits.push_back("farad");

    // mParameters[17]:
    this->mParameterNames.push_back("temperature");
    this->mParameterUnits.push_back("kelvin");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_capacitance");
    this->mDerivedQuantityUnits.push_back("uF");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_hyperpolarisation_activated_funny_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_potassium_pump_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [10]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [11]:
    this->mDerivedQuantityNames.push_back("membrane_voltage");
    this->mDerivedQuantityUnits.push_back("millivolt");

    // Derived Quantity index [12]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellpaci_hyttinen_aaltosetala_severi_atrialVersionFromCellMLCvodeOpt)

#endif // CHASTE_CVODE
