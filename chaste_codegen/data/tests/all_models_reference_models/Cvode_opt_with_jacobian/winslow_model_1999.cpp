#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: winslow_model_1999
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: AnalyticCvodeOpt)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "winslow_model_1999.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class Cellwinslow_model_1999FromCellMLCvodeOpt_LookupTables : public AbstractLookupTableCollection
{
public:
    static Cellwinslow_model_1999FromCellMLCvodeOpt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new Cellwinslow_model_1999FromCellMLCvodeOpt_LookupTables);
        }
        return mpInstance.get();
    }

    void FreeMemory()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }

    // Row lookup methods
    // using linear-interpolation

    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<27; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }


    const double * IndexTable0(double var_chaste_interface__membrane__V)
    {
        const double _offset_0 = var_chaste_interface__membrane__V - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = Cellwinslow_model_1999FromCellMLCvodeOpt_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }


// LCOV_EXCL_START
    bool CheckIndex0(double& var_chaste_interface__membrane__V)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__membrane__V>mTableMaxs[0] || var_chaste_interface__membrane__V<mTableMins[0])
        {
// LCOV_EXCL_START
            _oob_0 = true;
// LCOV_EXCL_STOP
        }
        return _oob_0;
    }
// LCOV_EXCL_STOP

    ~Cellwinslow_model_1999FromCellMLCvodeOpt_LookupTables()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

    }

protected:
    Cellwinslow_model_1999FromCellMLCvodeOpt_LookupTables(const Cellwinslow_model_1999FromCellMLCvodeOpt_LookupTables&);
    Cellwinslow_model_1999FromCellMLCvodeOpt_LookupTables& operator= (const Cellwinslow_model_1999FromCellMLCvodeOpt_LookupTables&);
    Cellwinslow_model_1999FromCellMLCvodeOpt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);

        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 27;
        mTableMins[0] = -250.0;
        mTableMaxs[0] = 550.0;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;

        Cellwinslow_model_1999FromCellMLCvodeOpt_LookupTables::RegenerateTables();
    }

    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);


        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][27];

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.001 * exp(0.074867781645490947 * var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[0] < 2){
                    double left = _lookup_table_0[i-1][0];
                    double right = _lookup_table_0[i+1][0];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 0 at ["<<i<<"][0] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[0] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[0] >= 2){
                    EXCEPTION("Lookup table 0 at ["<<i<<"][0] has non-finite value: " << val);
                }
                _lookup_table_0[i][0] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = -1.0 + exp(0.074867781645490947 * var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[1] < 2){
                    double left = _lookup_table_0[i-1][1];
                    double right = _lookup_table_0[i+1][1];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 1 at ["<<i<<"][1] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[1] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[1] >= 2){
                    EXCEPTION("Lookup table 1 at ["<<i<<"][1] has non-finite value: " << val);
                }
                _lookup_table_0[i][1] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(0.037433890822745473 * var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[2] < 2){
                    double left = _lookup_table_0[i-1][2];
                    double right = _lookup_table_0[i+1][2];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 2 at ["<<i<<"][2] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[2] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[2] >= 2){
                    EXCEPTION("Lookup table 2 at ["<<i<<"][2] has non-finite value: " << val);
                }
                _lookup_table_0[i][2] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = -1.0 + exp(0.037433890822745473 * var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[3] < 2){
                    double left = _lookup_table_0[i-1][3];
                    double right = _lookup_table_0[i+1][3];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 3 at ["<<i<<"][3] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[3] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[3] >= 2){
                    EXCEPTION("Lookup table 3 at ["<<i<<"][3] has non-finite value: " << val);
                }
                _lookup_table_0[i][3] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][4] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + 1.4944999999999999 * exp(0.044600000000000001 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][5] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(0.013101861787960915 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][6] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-0.024332029034784559 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][7] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + 0.20000000000000001 * exp(-0.024332029034784559 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][8] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-0.037433890822745473 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][9] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.1245 * exp(-0.0037433890822745476 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][10] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 400.0 * exp(0.20000000000000001 + 0.10000000000000001 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][11] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 50.0 * exp(-0.15384615384615385 - 0.076923076923076927 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][12] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.80000000000000004 / (1.0 + exp(2.5 + 0.20000000000000001 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][13] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.02 + 0.59999999999999998 / (1.0 + exp(2.1052631578947367 + 0.10526315789473684 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][14] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-0.090909090909090912 * var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[15] < 2){
                    double left = _lookup_table_0[i-1][15];
                    double right = _lookup_table_0[i+1][15];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 15 at ["<<i<<"][15] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[15] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[15] >= 2){
                    EXCEPTION("Lookup table 15 at ["<<i<<"][15] has non-finite value: " << val);
                }
                _lookup_table_0[i][15] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 - exp(-4.7130000000000001 - 0.10000000000000001 * var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[16] < 2){
                    double left = _lookup_table_0[i-1][16];
                    double right = _lookup_table_0[i+1][16];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 16 at ["<<i<<"][16] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[16] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[16] >= 2){
                    EXCEPTION("Lookup table 16 at ["<<i<<"][16] has non-finite value: " << val);
                }
                _lookup_table_0[i][16] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-5.4950000000000001 + 0.1691 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][17] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-7.6769999999999996 - 0.012800000000000001 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][18] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(1.8161764705882353 - 0.073529411764705885 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][19] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = ((fabs(-10.0 + var_chaste_interface__membrane__V) < 1.455604075689676e-6) ? (-1.9068413391534758e-7 / (-1.0 + exp(-9.9999999999880736e-8)) - 1.046579330420877e-7 / (1.0 - exp(2.1542940320207204e-7)) + 343500000.00040966 * (-9.9999985443959236 + var_chaste_interface__membrane__V) * (1.0465793304208771e-10 / (1.0 - exp(2.1542940320207204e-7)) + 1.0465793304208771e-10 / (1.0 - exp(-2.1542940320207204e-7)) + 1.9068413391534758e-10 / (-1.0 + exp(9.9999999999880736e-8)) + 1.9068413391534758e-10 / (-1.0 + exp(-9.9999999999880736e-8)))) : (0.13100000000000001 * (-10.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(-0.68699999999999994 + 0.068699999999999997 * var_chaste_interface__membrane__V)) + 0.071899999999999992 * (-10.0 + var_chaste_interface__membrane__V) / (1.0 - exp(1.48 - 0.14799999999999999 * var_chaste_interface__membrane__V))));
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[20] < 2){
                    double left = _lookup_table_0[i-1][20];
                    double right = _lookup_table_0[i+1][20];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 20 at ["<<i<<"][20] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[20] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[20] >= 2){
                    EXCEPTION("Lookup table 20 at ["<<i<<"][20] has non-finite value: " << val);
                }
                _lookup_table_0[i][20] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(0.035770000000000003 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][21] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-0.062370000000000002 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][22] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + 0.051334999999999999 * exp(-6.7000000000000002 - 0.20000000000000001 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][23] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-6.7000000000000002 - 0.20000000000000001 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][24] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + 0.051334999999999999 * exp(6.7000000000000002 + 0.20000000000000001 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][25] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(6.7000000000000002 + 0.20000000000000001 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][26] = val;
            }

            mNeedsRegeneration[0] = false;
        }

        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }

private:
    /** The single instance of the class */
    static std::shared_ptr<Cellwinslow_model_1999FromCellMLCvodeOpt_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[27];

    // Lookup tables
    double (*_lookup_table_0)[27];
    int _lookup_table_0_num_misshit_piecewise[27] = {0};

};

std::shared_ptr<Cellwinslow_model_1999FromCellMLCvodeOpt_LookupTables> Cellwinslow_model_1999FromCellMLCvodeOpt_LookupTables::mpInstance;

    boost::shared_ptr<RegularStimulus> Cellwinslow_model_1999FromCellMLCvodeOpt::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__stim_amplitude_converted = -21.126799999999999 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        const double var_chaste_interface__membrane__stim_duration_converted = 2.0; // millisecond
        const double var_chaste_interface__membrane__stim_period_converted = 1000.0; // millisecond
        const double var_chaste_interface__membrane__stim_start_converted = 100.0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__stim_amplitude_converted),
                var_chaste_interface__membrane__stim_duration_converted,
                var_chaste_interface__membrane__stim_period_converted,
                var_chaste_interface__membrane__stim_start_converted
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }

    double Cellwinslow_model_1999FromCellMLCvodeOpt::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Cellwinslow_model_1999FromCellMLCvodeOpt::Cellwinslow_model_1999FromCellMLCvodeOpt(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                33,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellwinslow_model_1999FromCellMLCvodeOpt>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
        
        NV_Ith_S(this->mParameters, 0) = 1800.0; // (var_RyR_channel__v1) [per_second]
        NV_Ith_S(this->mParameters, 1) = 1.0; // (var_SERCA2a_pump__K_SR) [dimensionless]
        NV_Ith_S(this->mParameters, 2) = 1.0; // (var_intracellular_ion_concentrations__conc_clamp) [dimensionless]
        NV_Ith_S(this->mParameters, 3) = 2.0; // (var_standard_ionic_concentrations__Cao) [millimolar]
        NV_Ith_S(this->mParameters, 4) = 4.0; // (var_standard_ionic_concentrations__Ko) [millimolar]
        NV_Ith_S(this->mParameters, 5) = 138.0; // (var_standard_ionic_concentrations__Nao) [millimolar]
        NV_Ith_S(this->mParameters, 6) = 0.00031250000000000001; // (var_L_type_Ca_current__P_Ca) [cm_per_second]
        NV_Ith_S(this->mParameters, 7) = 0.001; // (var_membrane__C_sc) [microF_per_cm2]
        NV_Ith_S(this->mParameters, 8) = 12.800000000000001; // (var_fast_sodium_current__g_Na) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 9) = 0; // (var_fast_sodium_current__perc_reduced_inact_for_IpNa) [dimensionless]
        NV_Ith_S(this->mParameters, 10) = 0; // (var_fast_sodium_current__shift_INa_inact) [millivolt]
        NV_Ith_S(this->mParameters, 11) = 2.7999999999999998; // (var_time_independent_potassium_current__g_K1) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 12) = 0.0033999999999999998; // (var_rapid_activating_delayed_rectifiyer_K_current__g_Kr) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 13) = 0.0027133999999999999; // (var_slow_activating_delayed_rectifiyer_K_current__g_Ks) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 14) = 0.29999999999999999; // (var_Na_Ca_exchanger__K_NaCa) [microA_per_microF]
        NV_Ith_S(this->mParameters, 15) = 0.23815; // (var_transient_outward_potassium_current__g_to1) [milliS_per_microF]
    }

    Cellwinslow_model_1999FromCellMLCvodeOpt::~Cellwinslow_model_1999FromCellMLCvodeOpt()
    {
    }

    AbstractLookupTableCollection* Cellwinslow_model_1999FromCellMLCvodeOpt::GetLookupTableCollection()
    {
        return Cellwinslow_model_1999FromCellMLCvodeOpt_LookupTables::Instance();
    }
    
    double Cellwinslow_model_1999FromCellMLCvodeOpt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -96.1638
        double var_chaste_interface__intracellular_ion_concentrations__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 8e-05
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.0328302
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.988354
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.99254
        double var_chaste_interface__rapid_activating_delayed_rectifiyer_K_current_X_kr_gate__X_kr = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.51
        double var_chaste_interface__slow_activating_delayed_rectifiyer_K_current_X_ks_gate__X_ks = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.264
        double var_chaste_interface__transient_outward_potassium_current_X_to1_gate__X_to1 = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 2.63
        double var_chaste_interface__transient_outward_potassium_current_Y_to1_gate__Y_to1 = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.99
        double var_chaste_interface__L_type_Ca_current__O = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 9.84546e-21
        double var_chaste_interface__L_type_Ca_current__O_Ca = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__L_type_Ca_current_y_gate__y = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.798
        double var_chaste_interface__intracellular_ion_concentrations__Nai = NV_Ith_S(rY, 28);
        // Units: millimolar; Initial value: 10.0
        double var_chaste_interface__intracellular_ion_concentrations__Ki = NV_Ith_S(rY, 29);
        // Units: millimolar; Initial value: 157.8
        
        // Lookup table indexing
        const bool _oob_0 = Cellwinslow_model_1999FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellwinslow_model_1999FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        const double var_sarcolemmal_calcium_pump__i_p_Ca = 0.050000000000000003 * var_chaste_interface__intracellular_ion_concentrations__Cai / (5.0000000000000002e-5 + var_chaste_interface__intracellular_ion_concentrations__Cai); // microA_per_microF
        const double var_L_type_Ca_current__i_Ca_max = ((fabs(var_chaste_interface__membrane__V) < 1.3356880329847825e-6) ? (374338.90822745475 * (1.3356880329847825e-6 + var_chaste_interface__membrane__V) * (0.019297068300000001 * (0.001 * exp(9.9999999999999995e-8) - 0.34100000000000003 * NV_Ith_S(mParameters, 3)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(9.9999999999999995e-8)) + 0.019297068300000001 * (0.001 * exp(-9.9999999999999995e-8) - 0.34100000000000003 * NV_Ith_S(mParameters, 3)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8))) - 0.019297068300000001 * (0.001 * exp(-9.9999999999999995e-8) - 0.34100000000000003 * NV_Ith_S(mParameters, 3)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8))) : (14447.286958825252 * (_lt_0_row[0] - 0.34100000000000003 * NV_Ith_S(mParameters, 3)) * NV_Ith_S(mParameters, 6) * var_chaste_interface__membrane__V / (_lt_0_row[1]))); // microA_per_microF
        const double var_L_type_Ca_current__i_Ca_converted = (var_chaste_interface__L_type_Ca_current__O + var_chaste_interface__L_type_Ca_current__O_Ca) * HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_current__i_Ca_max * var_chaste_interface__L_type_Ca_current_y_gate__y; // uA_per_cm2
        const double var_calcium_background_current__i_Ca_b = 0.00038420000000000001 * var_chaste_interface__membrane__V - 0.005131713422727534 * log(NV_Ith_S(mParameters, 3) / var_chaste_interface__intracellular_ion_concentrations__Cai); // microA_per_microF
        const double var_L_type_Ca_current__i_Ca_K = ((fabs(var_chaste_interface__membrane__V) < 2.671376065969565e-6) ? (187169.45411372738 * (2.671376065969565e-6 + var_chaste_interface__membrane__V) * (5.5865012728500001e-12 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__intracellular_ion_concentrations__Ki * exp(9.9999999999999995e-8)) * (var_chaste_interface__L_type_Ca_current__O + var_chaste_interface__L_type_Ca_current__O_Ca) * var_chaste_interface__L_type_Ca_current_y_gate__y / ((1.0 - 3.773584905660377 * var_L_type_Ca_current__i_Ca_max) * (-1.0 + exp(9.9999999999999995e-8))) + 5.5865012728500001e-12 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__intracellular_ion_concentrations__Ki * exp(-9.9999999999999995e-8)) * (var_chaste_interface__L_type_Ca_current__O + var_chaste_interface__L_type_Ca_current__O_Ca) * var_chaste_interface__L_type_Ca_current_y_gate__y / ((1.0 - 3.773584905660377 * var_L_type_Ca_current__i_Ca_max) * (-1.0 + exp(-9.9999999999999995e-8)))) - 5.5865012728500001e-12 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__intracellular_ion_concentrations__Ki * exp(-9.9999999999999995e-8)) * (var_chaste_interface__L_type_Ca_current__O + var_chaste_interface__L_type_Ca_current__O_Ca) * var_chaste_interface__L_type_Ca_current_y_gate__y / ((1.0 - 3.773584905660377 * var_L_type_Ca_current__i_Ca_max) * (-1.0 + exp(-9.9999999999999995e-8)))) : (2.0912447872899554e-6 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__intracellular_ion_concentrations__Ki * _lt_0_row[2]) * (var_chaste_interface__L_type_Ca_current__O + var_chaste_interface__L_type_Ca_current__O_Ca) * var_chaste_interface__L_type_Ca_current_y_gate__y * var_chaste_interface__membrane__V / ((1.0 - 3.773584905660377 * var_L_type_Ca_current__i_Ca_max) * (_lt_0_row[3])))); // microA_per_microF
        const double var_rapid_activating_delayed_rectifiyer_K_current__E_K = 26.713760659695648 * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__intracellular_ion_concentrations__Ki); // millivolt
        const double var_plateau_potassium_current__i_Kp = 0.0022160000000000001 * (-var_rapid_activating_delayed_rectifiyer_K_current__E_K + var_chaste_interface__membrane__V) / (_lt_0_row[4]); // microA_per_microF
        const double var_rapid_activating_delayed_rectifiyer_K_current__i_Kr_converted = 0.5 * sqrt(NV_Ith_S(mParameters, 4)) * (-var_rapid_activating_delayed_rectifiyer_K_current__E_K + var_chaste_interface__membrane__V) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 12) * var_chaste_interface__rapid_activating_delayed_rectifiyer_K_current_X_kr_gate__X_kr / (_lt_0_row[5]); // uA_per_cm2
        const double var_Na_Ca_exchanger__i_NaCa_converted = 5000.0 * (pow(var_chaste_interface__intracellular_ion_concentrations__Nai, 3) * NV_Ith_S(mParameters, 3) * _lt_0_row[6] - pow(NV_Ith_S(mParameters, 5), 3) * var_chaste_interface__intracellular_ion_concentrations__Cai * _lt_0_row[7]) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 14) / ((_lt_0_row[8]) * (669921.875 + pow(NV_Ith_S(mParameters, 5), 3)) * (1.3799999999999999 + NV_Ith_S(mParameters, 3))); // uA_per_cm2
        const double var_fast_sodium_current__E_Na = 26.713760659695648 * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__intracellular_ion_concentrations__Nai); // millivolt
        const double var_fast_sodium_current__i_Na_converted = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 8) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // uA_per_cm2
        const double var_slow_activating_delayed_rectifiyer_K_current__i_Ks_converted = pow(var_chaste_interface__slow_activating_delayed_rectifiyer_K_current_X_ks_gate__X_ks, 2) * (-26.713760659695648 * log((NV_Ith_S(mParameters, 4) + 0.018329999999999999 * NV_Ith_S(mParameters, 5)) / (var_chaste_interface__intracellular_ion_concentrations__Ki + 0.018329999999999999 * var_chaste_interface__intracellular_ion_concentrations__Nai)) + var_chaste_interface__membrane__V) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 13); // uA_per_cm2
        const double var_sodium_background_current__i_Na_b = 0.0030999999999999999 * var_chaste_interface__membrane__V - 0.0030999999999999999 * var_fast_sodium_current__E_Na; // microA_per_microF
        const double var_sodium_potassium_pump__i_NaK = 0.69299999999999995 * NV_Ith_S(mParameters, 4) / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__intracellular_ion_concentrations__Nai), 1.5)) * (1.5 + NV_Ith_S(mParameters, 4)) * (1.0 + _lt_0_row[10] + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * NV_Ith_S(mParameters, 5))) * _lt_0_row[9])); // microA_per_microF
        const double var_time_independent_potassium_current__i_K1_converted = (-var_rapid_activating_delayed_rectifiyer_K_current__E_K + var_chaste_interface__membrane__V) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 4) * NV_Ith_S(mParameters, 11) / ((2.0 + exp(0.056150836234118207 * var_chaste_interface__membrane__V - 0.056150836234118207 * var_rapid_activating_delayed_rectifiyer_K_current__E_K)) * (13.0 + NV_Ith_S(mParameters, 4))); // uA_per_cm2
        const double var_transient_outward_potassium_current__i_to1_converted = (-var_rapid_activating_delayed_rectifiyer_K_current__E_K + var_chaste_interface__membrane__V) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 15) * var_chaste_interface__transient_outward_potassium_current_X_to1_gate__X_to1 * var_chaste_interface__transient_outward_potassium_current_Y_to1_gate__Y_to1; // uA_per_cm2
        const double var_chaste_interface__i_ionic = HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_current__i_Ca_K + HeartConfig::Instance()->GetCapacitance() * var_calcium_background_current__i_Ca_b + HeartConfig::Instance()->GetCapacitance() * var_plateau_potassium_current__i_Kp + HeartConfig::Instance()->GetCapacitance() * var_sarcolemmal_calcium_pump__i_p_Ca + HeartConfig::Instance()->GetCapacitance() * var_sodium_background_current__i_Na_b + HeartConfig::Instance()->GetCapacitance() * var_sodium_potassium_pump__i_NaK + var_L_type_Ca_current__i_Ca_converted + var_Na_Ca_exchanger__i_NaCa_converted + var_fast_sodium_current__i_Na_converted + var_rapid_activating_delayed_rectifiyer_K_current__i_Kr_converted + var_slow_activating_delayed_rectifiyer_K_current__i_Ks_converted + var_time_independent_potassium_current__i_K1_converted + var_transient_outward_potassium_current__i_to1_converted; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellwinslow_model_1999FromCellMLCvodeOpt::EvaluateYDerivatives(double var_chaste_interface__environment__time_converted, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -96.1638
        double var_chaste_interface__intracellular_ion_concentrations__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 8e-05
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.0328302
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.988354
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.99254
        double var_chaste_interface__rapid_activating_delayed_rectifiyer_K_current_X_kr_gate__X_kr = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.51
        double var_chaste_interface__slow_activating_delayed_rectifiyer_K_current_X_ks_gate__X_ks = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.264
        double var_chaste_interface__transient_outward_potassium_current_X_to1_gate__X_to1 = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 2.63
        double var_chaste_interface__transient_outward_potassium_current_Y_to1_gate__Y_to1 = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.99
        double var_chaste_interface__L_type_Ca_current__O = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 9.84546e-21
        double var_chaste_interface__L_type_Ca_current__O_Ca = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__L_type_Ca_current__C0 = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.997208
        double var_chaste_interface__L_type_Ca_current__C1 = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 6.38897e-05
        double var_chaste_interface__L_type_Ca_current__C2 = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 1.535e-09
        double var_chaste_interface__L_type_Ca_current__C3 = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 1.63909e-14
        double var_chaste_interface__L_type_Ca_current__C4 = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 6.56337e-20
        double var_chaste_interface__L_type_Ca_current__C_Ca0 = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.00272826
        double var_chaste_interface__L_type_Ca_current__C_Ca1 = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 6.99215e-07
        double var_chaste_interface__L_type_Ca_current__C_Ca2 = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 6.71989e-11
        double var_chaste_interface__L_type_Ca_current__C_Ca3 = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 2.87031e-15
        double var_chaste_interface__L_type_Ca_current__C_Ca4 = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 4.59752e-20
        double var_chaste_interface__L_type_Ca_current_y_gate__y = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.798
        double var_chaste_interface__RyR_channel__P_O1 = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__RyR_channel__P_O2 = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__RyR_channel__P_C1 = NV_Ith_S(rY, 24);
        // Units: dimensionless; Initial value: 0.47
        double var_chaste_interface__RyR_channel__P_C2 = NV_Ith_S(rY, 25);
        // Units: dimensionless; Initial value: 0.53
        double var_chaste_interface__intracellular_Ca_fluxes__HTRPNCa = NV_Ith_S(rY, 26);
        // Units: millimolar; Initial value: 0.98
        double var_chaste_interface__intracellular_Ca_fluxes__LTRPNCa = NV_Ith_S(rY, 27);
        // Units: millimolar; Initial value: 0.078
        double var_chaste_interface__intracellular_ion_concentrations__Nai = NV_Ith_S(rY, 28);
        // Units: millimolar; Initial value: 10.0
        double var_chaste_interface__intracellular_ion_concentrations__Ki = NV_Ith_S(rY, 29);
        // Units: millimolar; Initial value: 157.8
        double var_chaste_interface__intracellular_ion_concentrations__Ca_ss = NV_Ith_S(rY, 30);
        // Units: millimolar; Initial value: 0.00011
        double var_chaste_interface__intracellular_ion_concentrations__Ca_JSR = NV_Ith_S(rY, 31);
        // Units: millimolar; Initial value: 0.257
        double var_chaste_interface__intracellular_ion_concentrations__Ca_NSR = NV_Ith_S(rY, 32);
        // Units: millimolar; Initial value: 0.257

        // Lookup table indexing
        const bool _oob_0 = Cellwinslow_model_1999FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellwinslow_model_1999FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        double d_dt_chaste_interface_var_membrane__V;
        const double d_dt_chaste_interface_var_L_type_Ca_current__O = 0.29999999999999999 * var_chaste_interface__L_type_Ca_current__C4 - 2.0 * var_chaste_interface__L_type_Ca_current__O; // 1 / millisecond
        const double d_dt_chaste_interface_var_L_type_Ca_current__O_Ca = 0.0070000000000000001 * var_chaste_interface__L_type_Ca_current__C_Ca4 - 7.0 * var_chaste_interface__L_type_Ca_current__O_Ca; // 1 / millisecond
        const double d_dt_chaste_interface_var_RyR_channel__P_C2 = 0.10000000000000001 * var_chaste_interface__RyR_channel__P_O1 - 0.00080000000000000004 * var_chaste_interface__RyR_channel__P_C2; // 1 / millisecond
        const double var_intracellular_Ca_fluxes__J_tr = 1740.0382808421784 * var_chaste_interface__intracellular_ion_concentrations__Ca_NSR - 1740.0382808421784 * var_chaste_interface__intracellular_ion_concentrations__Ca_JSR; // millimolar_per_second
        const double var_L_type_Ca_current__gamma = 103.75 * var_chaste_interface__intracellular_ion_concentrations__Ca_ss; // per_second
        const double var_RyR_channel__J_rel = (-var_chaste_interface__intracellular_ion_concentrations__Ca_ss + var_chaste_interface__intracellular_ion_concentrations__Ca_JSR) * (var_chaste_interface__RyR_channel__P_O1 + var_chaste_interface__RyR_channel__P_O2) * NV_Ith_S(mParameters, 0); // millimolar_per_second
        const double d_dt_chaste_interface_var_RyR_channel__P_C1 = 0.57599999999999996 * var_chaste_interface__RyR_channel__P_O1 - 12150000000.0 * pow(var_chaste_interface__intracellular_ion_concentrations__Ca_ss, 4.0) * var_chaste_interface__RyR_channel__P_C1; // 1 / millisecond
        const double d_dt_chaste_interface_var_RyR_channel__P_O1 = 0.00080000000000000004 * var_chaste_interface__RyR_channel__P_C2 + 1.9299999999999999 * var_chaste_interface__RyR_channel__P_O2 - 0.67600000000000005 * var_chaste_interface__RyR_channel__P_O1 + 12150000000.0 * pow(var_chaste_interface__intracellular_ion_concentrations__Ca_ss, 4.0) * var_chaste_interface__RyR_channel__P_C1 - 4050000.0 * pow(var_chaste_interface__intracellular_ion_concentrations__Ca_ss, 3.0) * var_chaste_interface__RyR_channel__P_O1; // 1 / millisecond
        const double d_dt_chaste_interface_var_RyR_channel__P_O2 = -1.9299999999999999 * var_chaste_interface__RyR_channel__P_O2 + 4050000.0 * pow(var_chaste_interface__intracellular_ion_concentrations__Ca_ss, 3.0) * var_chaste_interface__RyR_channel__P_O1; // 1 / millisecond
        const double var_SERCA2a_pump__J_up = (2752.4498037978587 * pow(var_chaste_interface__intracellular_ion_concentrations__Cai, 1.2) - 0.096656534954407292 * pow(var_chaste_interface__intracellular_ion_concentrations__Ca_NSR, 1.0)) * NV_Ith_S(mParameters, 1) / (1.0 + 33855.471141425078 * pow(var_chaste_interface__intracellular_ion_concentrations__Cai, 1.2) + 0.303951367781155 * pow(var_chaste_interface__intracellular_ion_concentrations__Ca_NSR, 1.0)); // millimolar_per_second
        const double var_intracellular_Ca_fluxes__HTRPNCa_orig_deriv = -0.066000000000000003 * var_chaste_interface__intracellular_Ca_fluxes__HTRPNCa + 20000.0 * (1.0 - var_chaste_interface__intracellular_Ca_fluxes__HTRPNCa) * var_chaste_interface__intracellular_ion_concentrations__Cai; // millimolar / second
        const double d_dt_chaste_interface_var_intracellular_Ca_fluxes__HTRPNCa = 0.001 * var_intracellular_Ca_fluxes__HTRPNCa_orig_deriv; // millimolar / millisecond
        const double var_intracellular_Ca_fluxes__J_xfer = 37.453183520599246 * var_chaste_interface__intracellular_ion_concentrations__Ca_ss - 37.453183520599246 * var_chaste_interface__intracellular_ion_concentrations__Cai; // millimolar_per_second
        const double var_intracellular_Ca_fluxes__LTRPNCa_orig_deriv = -40.0 * var_chaste_interface__intracellular_Ca_fluxes__LTRPNCa + 40000.0 * (1.0 - var_chaste_interface__intracellular_Ca_fluxes__LTRPNCa) * var_chaste_interface__intracellular_ion_concentrations__Cai; // millimolar / second
        const double d_dt_chaste_interface_var_intracellular_Ca_fluxes__LTRPNCa = 0.001 * var_intracellular_Ca_fluxes__LTRPNCa_orig_deriv; // millimolar / millisecond
        const double var_intracellular_ion_concentrations__EGTA_tot = 0; // millimolar
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__Ca_NSR = 0.012304761904761905 * var_SERCA2a_pump__J_up - 7.6190476190476198e-5 * var_intracellular_Ca_fluxes__J_tr; // millimolar / millisecond
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__Ca_JSR = 0.001 * (-var_RyR_channel__J_rel + var_intracellular_Ca_fluxes__J_tr) / (1.0 + 12.0 / pow((0.80000000000000004 + var_chaste_interface__intracellular_ion_concentrations__Ca_JSR), 2)); // millimolar / millisecond
        const double var_L_type_Ca_current__alpha = _lt_0_row[11]; // per_second
        const double var_L_type_Ca_current__alpha_a = 2.0 * var_L_type_Ca_current__alpha; // per_second
        const double var_L_type_Ca_current__beta = _lt_0_row[12]; // per_second
        const double d_dt_chaste_interface_var_L_type_Ca_current__C0 = 0.01 * var_chaste_interface__L_type_Ca_current__C_Ca0 + 0.001 * var_chaste_interface__L_type_Ca_current__C1 * var_L_type_Ca_current__beta - 0.001 * (4.0 * var_L_type_Ca_current__alpha + var_L_type_Ca_current__gamma) * var_chaste_interface__L_type_Ca_current__C0; // 1 / millisecond
        const double d_dt_chaste_interface_var_L_type_Ca_current__C1 = 0.0050000000000000001 * var_chaste_interface__L_type_Ca_current__C_Ca1 + 0.002 * var_chaste_interface__L_type_Ca_current__C2 * var_L_type_Ca_current__beta + 0.0040000000000000001 * var_chaste_interface__L_type_Ca_current__C0 * var_L_type_Ca_current__alpha - 0.001 * (2.0 * var_L_type_Ca_current__gamma + 3.0 * var_L_type_Ca_current__alpha + var_L_type_Ca_current__beta) * var_chaste_interface__L_type_Ca_current__C1; // 1 / millisecond
        const double d_dt_chaste_interface_var_L_type_Ca_current__C2 = 0.0025000000000000001 * var_chaste_interface__L_type_Ca_current__C_Ca2 + 0.0030000000000000001 * var_chaste_interface__L_type_Ca_current__C1 * var_L_type_Ca_current__alpha + 0.0030000000000000001 * var_chaste_interface__L_type_Ca_current__C3 * var_L_type_Ca_current__beta - 0.001 * (2.0 * var_L_type_Ca_current__alpha + 2.0 * var_L_type_Ca_current__beta + 4.0 * var_L_type_Ca_current__gamma) * var_chaste_interface__L_type_Ca_current__C2; // 1 / millisecond
        const double d_dt_chaste_interface_var_L_type_Ca_current__C3 = 0.00125 * var_chaste_interface__L_type_Ca_current__C_Ca3 + 0.002 * var_chaste_interface__L_type_Ca_current__C2 * var_L_type_Ca_current__alpha + 0.0040000000000000001 * var_chaste_interface__L_type_Ca_current__C4 * var_L_type_Ca_current__beta - 0.001 * (8.0 * var_L_type_Ca_current__gamma + 3.0 * var_L_type_Ca_current__beta + var_L_type_Ca_current__alpha) * var_chaste_interface__L_type_Ca_current__C3; // 1 / millisecond
        const double d_dt_chaste_interface_var_L_type_Ca_current__C4 = 2.0 * var_chaste_interface__L_type_Ca_current__O + 0.00062500000000000001 * var_chaste_interface__L_type_Ca_current__C_Ca4 + 0.001 * var_chaste_interface__L_type_Ca_current__C3 * var_L_type_Ca_current__alpha - 0.001 * (300.0 + 4.0 * var_L_type_Ca_current__beta + 16.0 * var_L_type_Ca_current__gamma) * var_chaste_interface__L_type_Ca_current__C4; // 1 / millisecond
        const double var_L_type_Ca_current__beta_b = 0.5 * var_L_type_Ca_current__beta; // per_second
        const double d_dt_chaste_interface_var_L_type_Ca_current__C_Ca0 = 0.001 * var_chaste_interface__L_type_Ca_current__C0 * var_L_type_Ca_current__gamma + 0.001 * var_chaste_interface__L_type_Ca_current__C_Ca1 * var_L_type_Ca_current__beta_b - 0.001 * (10.0 + 4.0 * var_L_type_Ca_current__alpha_a) * var_chaste_interface__L_type_Ca_current__C_Ca0; // 1 / millisecond
        const double d_dt_chaste_interface_var_L_type_Ca_current__C_Ca1 = 0.002 * var_chaste_interface__L_type_Ca_current__C1 * var_L_type_Ca_current__gamma + 0.002 * var_chaste_interface__L_type_Ca_current__C_Ca2 * var_L_type_Ca_current__beta_b + 0.0040000000000000001 * var_chaste_interface__L_type_Ca_current__C_Ca0 * var_L_type_Ca_current__alpha_a - 0.001 * (5.0 + 3.0 * var_L_type_Ca_current__alpha_a + var_L_type_Ca_current__beta_b) * var_chaste_interface__L_type_Ca_current__C_Ca1; // 1 / millisecond
        const double d_dt_chaste_interface_var_L_type_Ca_current__C_Ca2 = 0.0040000000000000001 * var_chaste_interface__L_type_Ca_current__C2 * var_L_type_Ca_current__gamma + 0.0030000000000000001 * var_chaste_interface__L_type_Ca_current__C_Ca1 * var_L_type_Ca_current__alpha_a + 0.0030000000000000001 * var_chaste_interface__L_type_Ca_current__C_Ca3 * var_L_type_Ca_current__beta_b - 0.001 * (2.5 + 2.0 * var_L_type_Ca_current__alpha_a + 2.0 * var_L_type_Ca_current__beta_b) * var_chaste_interface__L_type_Ca_current__C_Ca2; // 1 / millisecond
        const double d_dt_chaste_interface_var_L_type_Ca_current__C_Ca3 = 0.002 * var_chaste_interface__L_type_Ca_current__C_Ca2 * var_L_type_Ca_current__alpha_a + 0.0040000000000000001 * var_chaste_interface__L_type_Ca_current__C_Ca4 * var_L_type_Ca_current__beta_b + 0.0080000000000000002 * var_chaste_interface__L_type_Ca_current__C3 * var_L_type_Ca_current__gamma - 0.001 * (1.25 + 3.0 * var_L_type_Ca_current__beta_b + var_L_type_Ca_current__alpha_a) * var_chaste_interface__L_type_Ca_current__C_Ca3; // 1 / millisecond
        const double d_dt_chaste_interface_var_L_type_Ca_current__C_Ca4 = 7.0 * var_chaste_interface__L_type_Ca_current__O_Ca + 0.001 * var_chaste_interface__L_type_Ca_current__C_Ca3 * var_L_type_Ca_current__alpha_a + 0.016 * var_chaste_interface__L_type_Ca_current__C4 * var_L_type_Ca_current__gamma - 0.001 * (7.625 + 4.0 * var_L_type_Ca_current__beta_b) * var_chaste_interface__L_type_Ca_current__C_Ca4; // 1 / millisecond
        const double d_dt_chaste_interface_var_L_type_Ca_current_y_gate__y = 0.001 * (0.20000000000000001 - var_chaste_interface__L_type_Ca_current_y_gate__y + _lt_0_row[13]) / (_lt_0_row[14]); // 1 / millisecond
        const double var_fast_sodium_current_h_gate__alpha_h = ((var_chaste_interface__membrane__V < -40.0) ? (135.0 * exp(-11.764705882352942 + 0.14705882352941177 * NV_Ith_S(mParameters, 10) - 0.14705882352941177 * var_chaste_interface__membrane__V)) : (0)); // per_second
        const double var_fast_sodium_current_h_gate__beta_h = ((var_chaste_interface__membrane__V < -40.0) ? (3560.0 * exp(0.079000000000000001 * var_chaste_interface__membrane__V - 0.079000000000000001 * NV_Ith_S(mParameters, 10)) + 310000.0 * exp(0.34999999999999998 * var_chaste_interface__membrane__V - 0.34999999999999998 * NV_Ith_S(mParameters, 10))) : (7692.3076923076924 / (1.0 + exp(-0.96036036036036043 + 0.0900900900900901 * NV_Ith_S(mParameters, 10) - 0.0900900900900901 * var_chaste_interface__membrane__V)))); // per_second
        const double d_dt_chaste_interface_var_fast_sodium_current_h_gate__h = 0.001 * (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h) * (-var_chaste_interface__fast_sodium_current_h_gate__h + 0.01 * NV_Ith_S(mParameters, 9) + (1.0 - 0.01 * NV_Ith_S(mParameters, 9)) * var_fast_sodium_current_h_gate__alpha_h / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h)); // 1 / millisecond
        const double var_fast_sodium_current_j_gate__alpha_j = ((var_chaste_interface__membrane__V < -40.0) ? (1000.0 * (37.780000000000001 + var_chaste_interface__membrane__V) * (-127140.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__V - 0.24440000000000001 * NV_Ith_S(mParameters, 10)) - 3.4740000000000003e-5 * exp(0.043909999999999998 * NV_Ith_S(mParameters, 10) - 0.043909999999999998 * var_chaste_interface__membrane__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V - 0.311 * NV_Ith_S(mParameters, 10)))) : (0)); // per_second
        const double var_fast_sodium_current_j_gate__beta_j = ((var_chaste_interface__membrane__V < -40.0) ? (121.2 * exp(0.01052 * NV_Ith_S(mParameters, 10) - 0.01052 * var_chaste_interface__membrane__V) / (1.0 + exp(-5.5312920000000005 + 0.13780000000000001 * NV_Ith_S(mParameters, 10) - 0.13780000000000001 * var_chaste_interface__membrane__V))) : (300.0 * exp(2.5349999999999999e-7 * NV_Ith_S(mParameters, 10) - 2.5349999999999999e-7 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.2000000000000002 + 0.10000000000000001 * NV_Ith_S(mParameters, 10) - 0.10000000000000001 * var_chaste_interface__membrane__V)))); // per_second
        const double d_dt_chaste_interface_var_fast_sodium_current_j_gate__j = 0.001 * (var_fast_sodium_current_j_gate__alpha_j + var_fast_sodium_current_j_gate__beta_j) * (-var_chaste_interface__fast_sodium_current_j_gate__j + 0.01 * NV_Ith_S(mParameters, 9) + (1.0 - 0.01 * NV_Ith_S(mParameters, 9)) * var_fast_sodium_current_j_gate__alpha_j / (var_fast_sodium_current_j_gate__alpha_j + var_fast_sodium_current_j_gate__beta_j)); // 1 / millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_m_gate__m = 0.001 * (((var_chaste_interface__membrane__V > -47.130001) && (var_chaste_interface__membrane__V < -47.129999000000005)) ? ((1.0 - var_chaste_interface__fast_sodium_current_m_gate__m) * (0.00032000000000920181 / (1.0 - exp(-1.0000000000287557e-7)) - 499999.99998562218 * (47.129999000000005 + var_chaste_interface__membrane__V) * (-0.00032000000000920181 / (1.0 - exp(1.0000000000287557e-7)) - 0.00032000000000920181 / (1.0 - exp(-1.0000000000287557e-7)))) - 80.0 * var_chaste_interface__fast_sodium_current_m_gate__m * _lt_0_row[15]) : ((var_chaste_interface__membrane__V >= -90.0) ? (-80.0 * var_chaste_interface__fast_sodium_current_m_gate__m * _lt_0_row[15] + 320.0 * (1.0 - var_chaste_interface__fast_sodium_current_m_gate__m) * (47.130000000000003 + var_chaste_interface__membrane__V) / (_lt_0_row[16])) : (0))); // 1 / millisecond
        const double var_rapid_activating_delayed_rectifiyer_K_current_X_kr_gate__K12 = _lt_0_row[17]; // dimensionless
        const double var_rapid_activating_delayed_rectifiyer_K_current_X_kr_gate__K21 = _lt_0_row[18]; // dimensionless
        const double d_dt_chaste_interface_var_rapid_activating_delayed_rectifiyer_K_current_X_kr_gate__X_kr = 0.001 * (-var_chaste_interface__rapid_activating_delayed_rectifiyer_K_current_X_kr_gate__X_kr + var_rapid_activating_delayed_rectifiyer_K_current_X_kr_gate__K12 / (var_rapid_activating_delayed_rectifiyer_K_current_X_kr_gate__K12 + var_rapid_activating_delayed_rectifiyer_K_current_X_kr_gate__K21)) / (0.027 + 0.001 / (var_rapid_activating_delayed_rectifiyer_K_current_X_kr_gate__K12 + var_rapid_activating_delayed_rectifiyer_K_current_X_kr_gate__K21)); // 1 / millisecond
        const double var_sarcolemmal_calcium_pump__i_p_Ca = 0.050000000000000003 * var_chaste_interface__intracellular_ion_concentrations__Cai / (5.0000000000000002e-5 + var_chaste_interface__intracellular_ion_concentrations__Cai); // microA_per_microF
        const double d_dt_chaste_interface_var_slow_activating_delayed_rectifiyer_K_current_X_ks_gate__X_ks = 0.001 * (-var_chaste_interface__slow_activating_delayed_rectifiyer_K_current_X_ks_gate__X_ks + _lt_0_row[19]) * _lt_0_row[20]; // 1 / millisecond
        const double var_L_type_Ca_current__i_Ca_max = ((fabs(var_chaste_interface__membrane__V) < 1.3356880329847825e-6) ? (374338.90822745475 * (1.3356880329847825e-6 + var_chaste_interface__membrane__V) * (0.019297068300000001 * (0.001 * exp(9.9999999999999995e-8) - 0.34100000000000003 * NV_Ith_S(mParameters, 3)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(9.9999999999999995e-8)) + 0.019297068300000001 * (0.001 * exp(-9.9999999999999995e-8) - 0.34100000000000003 * NV_Ith_S(mParameters, 3)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8))) - 0.019297068300000001 * (0.001 * exp(-9.9999999999999995e-8) - 0.34100000000000003 * NV_Ith_S(mParameters, 3)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8))) : (14447.286958825252 * (_lt_0_row[0] - 0.34100000000000003 * NV_Ith_S(mParameters, 3)) * NV_Ith_S(mParameters, 6) * var_chaste_interface__membrane__V / (_lt_0_row[1]))); // microA_per_microF
        const double var_L_type_Ca_current__i_Ca = (var_chaste_interface__L_type_Ca_current__O + var_chaste_interface__L_type_Ca_current__O_Ca) * var_L_type_Ca_current__i_Ca_max * var_chaste_interface__L_type_Ca_current_y_gate__y; // microA_per_microF
        const double var_calcium_background_current__i_Ca_b = 0.00038420000000000001 * var_chaste_interface__membrane__V - 0.005131713422727534 * log(NV_Ith_S(mParameters, 3) / var_chaste_interface__intracellular_ion_concentrations__Cai); // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__Ca_ss = 0.001 * (133.33333333333334 * var_RyR_channel__J_rel - 662.44950448422946 * var_L_type_Ca_current__i_Ca - 21533.333333333332 * var_intracellular_Ca_fluxes__J_xfer) / (1.0 + 0.00011900000000000002 / pow((0.0023800000000000002 + var_chaste_interface__intracellular_ion_concentrations__Ca_ss), 2) + 0.00014999999999999999 * var_intracellular_ion_concentrations__EGTA_tot / pow((0.00014999999999999999 + var_chaste_interface__intracellular_ion_concentrations__Ca_ss), 2)); // millimolar / millisecond
        const double var_L_type_Ca_current__i_Ca_K = ((fabs(var_chaste_interface__membrane__V) < 2.671376065969565e-6) ? (187169.45411372738 * (2.671376065969565e-6 + var_chaste_interface__membrane__V) * (5.5865012728500001e-12 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__intracellular_ion_concentrations__Ki * exp(9.9999999999999995e-8)) * (var_chaste_interface__L_type_Ca_current__O + var_chaste_interface__L_type_Ca_current__O_Ca) * var_chaste_interface__L_type_Ca_current_y_gate__y / ((1.0 - 3.773584905660377 * var_L_type_Ca_current__i_Ca_max) * (-1.0 + exp(9.9999999999999995e-8))) + 5.5865012728500001e-12 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__intracellular_ion_concentrations__Ki * exp(-9.9999999999999995e-8)) * (var_chaste_interface__L_type_Ca_current__O + var_chaste_interface__L_type_Ca_current__O_Ca) * var_chaste_interface__L_type_Ca_current_y_gate__y / ((1.0 - 3.773584905660377 * var_L_type_Ca_current__i_Ca_max) * (-1.0 + exp(-9.9999999999999995e-8)))) - 5.5865012728500001e-12 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__intracellular_ion_concentrations__Ki * exp(-9.9999999999999995e-8)) * (var_chaste_interface__L_type_Ca_current__O + var_chaste_interface__L_type_Ca_current__O_Ca) * var_chaste_interface__L_type_Ca_current_y_gate__y / ((1.0 - 3.773584905660377 * var_L_type_Ca_current__i_Ca_max) * (-1.0 + exp(-9.9999999999999995e-8)))) : (2.0912447872899554e-6 * (-NV_Ith_S(mParameters, 4) + var_chaste_interface__intracellular_ion_concentrations__Ki * _lt_0_row[2]) * (var_chaste_interface__L_type_Ca_current__O + var_chaste_interface__L_type_Ca_current__O_Ca) * var_chaste_interface__L_type_Ca_current_y_gate__y * var_chaste_interface__membrane__V / ((1.0 - 3.773584905660377 * var_L_type_Ca_current__i_Ca_max) * (_lt_0_row[3])))); // microA_per_microF
        const double var_rapid_activating_delayed_rectifiyer_K_current__E_K = 26.713760659695648 * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__intracellular_ion_concentrations__Ki); // millivolt
        const double var_plateau_potassium_current__i_Kp = 0.0022160000000000001 * (-var_rapid_activating_delayed_rectifiyer_K_current__E_K + var_chaste_interface__membrane__V) / (_lt_0_row[4]); // microA_per_microF
        const double var_rapid_activating_delayed_rectifiyer_K_current__i_Kr = 0.5 * sqrt(NV_Ith_S(mParameters, 4)) * (-var_rapid_activating_delayed_rectifiyer_K_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 12) * var_chaste_interface__rapid_activating_delayed_rectifiyer_K_current_X_kr_gate__X_kr / (_lt_0_row[5]); // microA_per_microF
        const double var_Na_Ca_exchanger__i_NaCa = 5000.0 * (pow(var_chaste_interface__intracellular_ion_concentrations__Nai, 3) * NV_Ith_S(mParameters, 3) * _lt_0_row[6] - pow(NV_Ith_S(mParameters, 5), 3) * var_chaste_interface__intracellular_ion_concentrations__Cai * _lt_0_row[7]) * NV_Ith_S(mParameters, 14) / ((_lt_0_row[8]) * (669921.875 + pow(NV_Ith_S(mParameters, 5), 3)) * (1.3799999999999999 + NV_Ith_S(mParameters, 3))); // microA_per_microF
        const double var_fast_sodium_current__E_Na = 26.713760659695648 * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__intracellular_ion_concentrations__Nai); // millivolt
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 8) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__Cai = 0.001 * (-var_SERCA2a_pump__J_up + 0.061527817753953197 * var_Na_Ca_exchanger__i_NaCa - 0.070000000000000007 * var_intracellular_Ca_fluxes__LTRPNCa_orig_deriv - 0.14000000000000001 * var_intracellular_Ca_fluxes__HTRPNCa_orig_deriv - 0.030763908876976599 * var_calcium_background_current__i_Ca_b - 0.030763908876976599 * var_sarcolemmal_calcium_pump__i_p_Ca + var_intracellular_Ca_fluxes__J_xfer) / (1.0 + 0.00011900000000000002 / pow((0.0023800000000000002 + var_chaste_interface__intracellular_ion_concentrations__Cai), 2) + 0.00014999999999999999 * var_intracellular_ion_concentrations__EGTA_tot / pow((0.00014999999999999999 + var_chaste_interface__intracellular_ion_concentrations__Cai), 2)); // millimolar / millisecond
        const double var_slow_activating_delayed_rectifiyer_K_current__i_Ks = pow(var_chaste_interface__slow_activating_delayed_rectifiyer_K_current_X_ks_gate__X_ks, 2) * (-26.713760659695648 * log((NV_Ith_S(mParameters, 4) + 0.018329999999999999 * NV_Ith_S(mParameters, 5)) / (var_chaste_interface__intracellular_ion_concentrations__Ki + 0.018329999999999999 * var_chaste_interface__intracellular_ion_concentrations__Nai)) + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 13); // microA_per_microF
        const double var_sodium_background_current__i_Na_b = 0.0030999999999999999 * var_chaste_interface__membrane__V - 0.0030999999999999999 * var_fast_sodium_current__E_Na; // microA_per_microF
        const double var_sodium_potassium_pump__i_NaK = 0.69299999999999995 * NV_Ith_S(mParameters, 4) / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__intracellular_ion_concentrations__Nai), 1.5)) * (1.5 + NV_Ith_S(mParameters, 4)) * (1.0 + _lt_0_row[10] + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * NV_Ith_S(mParameters, 5))) * _lt_0_row[9])); // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__Nai = -6.1527817753953199e-5 * (3.0 * var_Na_Ca_exchanger__i_NaCa + 3.0 * var_sodium_potassium_pump__i_NaK + var_fast_sodium_current__i_Na + var_sodium_background_current__i_Na_b) * NV_Ith_S(mParameters, 2); // millimolar / millisecond
        const double var_time_independent_potassium_current__i_K1 = (-var_rapid_activating_delayed_rectifiyer_K_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 4) * NV_Ith_S(mParameters, 11) / ((2.0 + exp(0.056150836234118207 * var_chaste_interface__membrane__V - 0.056150836234118207 * var_rapid_activating_delayed_rectifiyer_K_current__E_K)) * (13.0 + NV_Ith_S(mParameters, 4))); // microA_per_microF
        const double d_dt_chaste_interface_var_transient_outward_potassium_current_X_to1_gate__X_to1 = 0.045159999999999999 * (1.0 - var_chaste_interface__transient_outward_potassium_current_X_to1_gate__X_to1) * _lt_0_row[21] - 0.098900000000000002 * var_chaste_interface__transient_outward_potassium_current_X_to1_gate__X_to1 * _lt_0_row[22]; // 1 / millisecond
        const double var_transient_outward_potassium_current__i_to1 = (-var_rapid_activating_delayed_rectifiyer_K_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 15) * var_chaste_interface__transient_outward_potassium_current_X_to1_gate__X_to1 * var_chaste_interface__transient_outward_potassium_current_Y_to1_gate__Y_to1; // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__Ki = -6.1527817753953199e-5 * (-2.0 * var_sodium_potassium_pump__i_NaK + var_L_type_Ca_current__i_Ca_K + var_plateau_potassium_current__i_Kp + var_rapid_activating_delayed_rectifiyer_K_current__i_Kr + var_slow_activating_delayed_rectifiyer_K_current__i_Ks + var_time_independent_potassium_current__i_K1 + var_transient_outward_potassium_current__i_to1) * NV_Ith_S(mParameters, 2); // millimolar / millisecond
        const double d_dt_chaste_interface_var_transient_outward_potassium_current_Y_to1_gate__Y_to1 = 0.0054149999999999997 * (1.0 - var_chaste_interface__transient_outward_potassium_current_Y_to1_gate__Y_to1) * _lt_0_row[24] / (_lt_0_row[23]) - 0.0054149999999999997 * var_chaste_interface__transient_outward_potassium_current_Y_to1_gate__Y_to1 * _lt_0_row[26] / (_lt_0_row[25]); // 1 / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_membrane__V = 0.0;
        }
        else
        {
            d_dt_chaste_interface_var_membrane__V = -0.001 * (GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted) / HeartConfig::Instance()->GetCapacitance() + var_L_type_Ca_current__i_Ca + var_L_type_Ca_current__i_Ca_K + var_Na_Ca_exchanger__i_NaCa + var_calcium_background_current__i_Ca_b + var_fast_sodium_current__i_Na + var_plateau_potassium_current__i_Kp + var_rapid_activating_delayed_rectifiyer_K_current__i_Kr + var_sarcolemmal_calcium_pump__i_p_Ca + var_slow_activating_delayed_rectifiyer_K_current__i_Ks + var_sodium_background_current__i_Na_b + var_sodium_potassium_pump__i_NaK + var_time_independent_potassium_current__i_K1 + var_transient_outward_potassium_current__i_to1) / NV_Ith_S(mParameters, 7); // millivolt / millisecond
        }
        
        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_membrane__V;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_intracellular_ion_concentrations__Cai;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_fast_sodium_current_m_gate__m;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_fast_sodium_current_h_gate__h;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_fast_sodium_current_j_gate__j;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_rapid_activating_delayed_rectifiyer_K_current_X_kr_gate__X_kr;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_slow_activating_delayed_rectifiyer_K_current_X_ks_gate__X_ks;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_transient_outward_potassium_current_X_to1_gate__X_to1;
        NV_Ith_S(rDY,8) = d_dt_chaste_interface_var_transient_outward_potassium_current_Y_to1_gate__Y_to1;
        NV_Ith_S(rDY,9) = d_dt_chaste_interface_var_L_type_Ca_current__O;
        NV_Ith_S(rDY,10) = d_dt_chaste_interface_var_L_type_Ca_current__O_Ca;
        NV_Ith_S(rDY,11) = d_dt_chaste_interface_var_L_type_Ca_current__C0;
        NV_Ith_S(rDY,12) = d_dt_chaste_interface_var_L_type_Ca_current__C1;
        NV_Ith_S(rDY,13) = d_dt_chaste_interface_var_L_type_Ca_current__C2;
        NV_Ith_S(rDY,14) = d_dt_chaste_interface_var_L_type_Ca_current__C3;
        NV_Ith_S(rDY,15) = d_dt_chaste_interface_var_L_type_Ca_current__C4;
        NV_Ith_S(rDY,16) = d_dt_chaste_interface_var_L_type_Ca_current__C_Ca0;
        NV_Ith_S(rDY,17) = d_dt_chaste_interface_var_L_type_Ca_current__C_Ca1;
        NV_Ith_S(rDY,18) = d_dt_chaste_interface_var_L_type_Ca_current__C_Ca2;
        NV_Ith_S(rDY,19) = d_dt_chaste_interface_var_L_type_Ca_current__C_Ca3;
        NV_Ith_S(rDY,20) = d_dt_chaste_interface_var_L_type_Ca_current__C_Ca4;
        NV_Ith_S(rDY,21) = d_dt_chaste_interface_var_L_type_Ca_current_y_gate__y;
        NV_Ith_S(rDY,22) = d_dt_chaste_interface_var_RyR_channel__P_O1;
        NV_Ith_S(rDY,23) = d_dt_chaste_interface_var_RyR_channel__P_O2;
        NV_Ith_S(rDY,24) = d_dt_chaste_interface_var_RyR_channel__P_C1;
        NV_Ith_S(rDY,25) = d_dt_chaste_interface_var_RyR_channel__P_C2;
        NV_Ith_S(rDY,26) = d_dt_chaste_interface_var_intracellular_Ca_fluxes__HTRPNCa;
        NV_Ith_S(rDY,27) = d_dt_chaste_interface_var_intracellular_Ca_fluxes__LTRPNCa;
        NV_Ith_S(rDY,28) = d_dt_chaste_interface_var_intracellular_ion_concentrations__Nai;
        NV_Ith_S(rDY,29) = d_dt_chaste_interface_var_intracellular_ion_concentrations__Ki;
        NV_Ith_S(rDY,30) = d_dt_chaste_interface_var_intracellular_ion_concentrations__Ca_ss;
        NV_Ith_S(rDY,31) = d_dt_chaste_interface_var_intracellular_ion_concentrations__Ca_JSR;
        NV_Ith_S(rDY,32) = d_dt_chaste_interface_var_intracellular_ion_concentrations__Ca_NSR;
    }

    void Cellwinslow_model_1999FromCellMLCvodeOpt::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time_converted, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -96.1638
        double var_chaste_interface__intracellular_ion_concentrations__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 8e-05
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.0328302
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.988354
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.99254
        double var_chaste_interface__rapid_activating_delayed_rectifiyer_K_current_X_kr_gate__X_kr = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.51
        double var_chaste_interface__slow_activating_delayed_rectifiyer_K_current_X_ks_gate__X_ks = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.264
        double var_chaste_interface__transient_outward_potassium_current_X_to1_gate__X_to1 = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 2.63
        double var_chaste_interface__transient_outward_potassium_current_Y_to1_gate__Y_to1 = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.99
        double var_chaste_interface__L_type_Ca_current__O = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 9.84546e-21
        double var_chaste_interface__L_type_Ca_current__O_Ca = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__L_type_Ca_current__C0 = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.997208
        double var_chaste_interface__L_type_Ca_current__C1 = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 6.38897e-05
        double var_chaste_interface__L_type_Ca_current__C2 = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 1.535e-09
        double var_chaste_interface__L_type_Ca_current__C3 = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 1.63909e-14
        double var_chaste_interface__L_type_Ca_current__C4 = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 6.56337e-20
        double var_chaste_interface__L_type_Ca_current__C_Ca0 = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.00272826
        double var_chaste_interface__L_type_Ca_current__C_Ca1 = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 6.99215e-07
        double var_chaste_interface__L_type_Ca_current__C_Ca2 = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 6.71989e-11
        double var_chaste_interface__L_type_Ca_current__C_Ca3 = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 2.87031e-15
        double var_chaste_interface__L_type_Ca_current__C_Ca4 = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 4.59752e-20
        double var_chaste_interface__L_type_Ca_current_y_gate__y = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.798
        double var_chaste_interface__RyR_channel__P_O1 = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__RyR_channel__P_O2 = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__RyR_channel__P_C1 = NV_Ith_S(rY, 24);
        // Units: dimensionless; Initial value: 0.47
        double var_chaste_interface__intracellular_Ca_fluxes__HTRPNCa = NV_Ith_S(rY, 26);
        // Units: millimolar; Initial value: 0.98
        double var_chaste_interface__intracellular_Ca_fluxes__LTRPNCa = NV_Ith_S(rY, 27);
        // Units: millimolar; Initial value: 0.078
        double var_chaste_interface__intracellular_ion_concentrations__Nai = NV_Ith_S(rY, 28);
        // Units: millimolar; Initial value: 10.0
        double var_chaste_interface__intracellular_ion_concentrations__Ki = NV_Ith_S(rY, 29);
        // Units: millimolar; Initial value: 157.8
        double var_chaste_interface__intracellular_ion_concentrations__Ca_ss = NV_Ith_S(rY, 30);
        // Units: millimolar; Initial value: 0.00011
        double var_chaste_interface__intracellular_ion_concentrations__Ca_JSR = NV_Ith_S(rY, 31);
        // Units: millimolar; Initial value: 0.257
        double var_chaste_interface__intracellular_ion_concentrations__Ca_NSR = NV_Ith_S(rY, 32);
        // Units: millimolar; Initial value: 0.257
        
        // Lookup table indexing
        const bool _oob_0 = Cellwinslow_model_1999FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellwinslow_model_1999FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);
const double var_x0 = exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V);
        const double var_x1 = 1.0 + var_x0;
        const double var_x2 = 1 / var_x1;
        const double var_x3 = pow(var_chaste_interface__slow_activating_delayed_rectifiyer_K_current_X_ks_gate__X_ks, 2) * NV_Ith_S(mParameters, 13);
        const double var_x4 = var_chaste_interface__L_type_Ca_current__O + var_chaste_interface__L_type_Ca_current__O_Ca;
        const double var_x5 = 7223.6434794126262 * NV_Ith_S(mParameters, 6);
        const double var_x6 = exp(9.9999999999999995e-8);
        const double var_x7 = 1 / (-1.0 + var_x6);
        const double var_x8 = -0.34100000000000003 * NV_Ith_S(mParameters, 3);
        const double var_x9 = var_x7 * (var_x8 + 0.001 * var_x6);
        const double var_x10 = exp(-9.9999999999999995e-8);
        const double var_x11 = 1 / (-1.0 + var_x10);
        const double var_x12 = var_x11 * (var_x8 + 0.001 * var_x10);
        const double var_x13 = fabs(var_chaste_interface__membrane__V);
        const double var_x14 = var_x13 < 1.3356880329847825e-6;
        const double var_x15 = exp(0.074867781645490947 * var_chaste_interface__membrane__V);
        const double var_x16 = var_x8 + 0.001 * var_x15;
        const double var_x17 = -1.0 + var_x15;
        const double var_x18 = NV_Ith_S(mParameters, 6) / var_x17;
        const double var_x19 = 14447.286958825252 * var_x16 * var_x18;
        const double var_x20 = var_x15 * var_chaste_interface__membrane__V;
        const double var_x21 = ((var_x14) ? (var_x12 * var_x5 + var_x5 * var_x9) : (var_x19 + 1.0816363254030779 * var_x18 * var_x20 - 1081.636325403078 * var_x16 * var_x20 * NV_Ith_S(mParameters, 6) / pow(var_x17, 2))) * var_chaste_interface__L_type_Ca_current_y_gate__y;
        const double var_x22 = var_x21 * var_x4;
        const double var_x23 = NV_Ith_S(mParameters, 15) * var_chaste_interface__transient_outward_potassium_current_Y_to1_gate__Y_to1;
        const double var_x24 = var_x23 * var_chaste_interface__transient_outward_potassium_current_X_to1_gate__X_to1;
        const double var_x25 = 1 / var_chaste_interface__intracellular_ion_concentrations__Ki;
        const double var_x26 = var_x25 * NV_Ith_S(mParameters, 4);
        const double var_x27 = log(var_x26);
        const double var_x28 = -26.713760659695648 * var_x27 + var_chaste_interface__membrane__V;
        const double var_x29 = var_x0 * var_x28 / pow(var_x1, 2);
        const double var_x30 = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3);
        const double var_x31 = var_x30 * NV_Ith_S(mParameters, 8) * var_chaste_interface__fast_sodium_current_j_gate__j;
        const double var_x32 = var_x31 * var_chaste_interface__fast_sodium_current_h_gate__h;
        const double var_x33 = exp(0.044600000000000001 * var_chaste_interface__membrane__V);
        const double var_x34 = sqrt(NV_Ith_S(mParameters, 4));
        const double var_x35 = var_x34 * NV_Ith_S(mParameters, 12) / (1.0 + 1.4944999999999999 * var_x33);
        const double var_x36 = var_x35 * var_chaste_interface__rapid_activating_delayed_rectifiyer_K_current_X_kr_gate__X_kr;
        const double var_x37 = NV_Ith_S(mParameters, 4);
        const double var_x38 = exp(0.056150836234118207 * var_chaste_interface__membrane__V - 1.5 * var_x27);
        const double var_x39 = NV_Ith_S(mParameters, 11) / (13.0 + NV_Ith_S(mParameters, 4));
        const double var_x40 = var_x39 / (2.0 + var_x38);
        const double var_x41 = NV_Ith_S(mParameters, 3) * _lt_0_row[6];
        const double var_x42 = var_x41 * pow(var_chaste_interface__intracellular_ion_concentrations__Nai, 3);
        const double var_x43 = _lt_0_row[7];
        const double var_x44 = pow(NV_Ith_S(mParameters, 5), 3);
        const double var_x45 = var_x43 * var_x44;
        const double var_x46 = var_x45 * var_chaste_interface__intracellular_ion_concentrations__Cai;
        const double var_x47 = 1.0 + 0.20000000000000001 * var_x43;
        const double var_x48 = NV_Ith_S(mParameters, 14) / ((669921.875 + var_x44) * (1.3799999999999999 + NV_Ith_S(mParameters, 3)));
        const double var_x49 = var_x48 / var_x47;
        const double var_x50 = var_x49 * (0.013101861787960915 * var_x42 + 0.024332029034784559 * var_x46);
        const double var_x51 = 1 / var_chaste_interface__intracellular_ion_concentrations__Nai;
        const double var_x52 = pow(var_x51, 1.5);
        const double var_x53 = exp(-0.0037433890822745476 * var_chaste_interface__membrane__V);
        const double var_x54 = exp(0.01485884101040119 * NV_Ith_S(mParameters, 5));
        const double var_x55 = 0.037433890822745473 * var_chaste_interface__membrane__V;
        const double var_x56 = exp(-var_x55);
        const double var_x57 = 1.0 + 0.1245 * var_x53 + 0.036499999999999998 * var_x56 * (-0.14285714285714285 + 0.14285714285714285 * var_x54);
        const double var_x58 = NV_Ith_S(mParameters, 4) / (1.5 + NV_Ith_S(mParameters, 4));
        const double var_x59 = var_x58 * (0.00046605194074318115 * var_x53 + 0.037433890822745473 * var_x56 * (-0.0052142857142857138 + 0.0052142857142857138 * var_x54)) / (pow(var_x57, 2) * (1.0 + 31.622776601683793 * var_x52));
        const double var_x60 = var_x42 - var_x46;
        const double var_x61 = var_x43 * var_x48 * var_x60 / pow(var_x47, 2);
        const double var_x62 = var_x28 * var_x38 * var_x39 / pow((1 + 0.5 * var_x38), 2);
        const double var_x63 = var_x62 * NV_Ith_S(mParameters, 4);
        const double var_x64 = var_x28 * var_x33 * var_x34 * NV_Ith_S(mParameters, 12) * var_chaste_interface__rapid_activating_delayed_rectifiyer_K_current_X_kr_gate__X_kr / pow((0.66912010705921721 + var_x33), 2);
        const double var_x65 = 0.5 + 187169.45411372738 * var_chaste_interface__membrane__V;
        const double var_x66 = -NV_Ith_S(mParameters, 4);
        const double var_x67 = var_x7 * (var_x66 + var_x6 * var_chaste_interface__intracellular_ion_concentrations__Ki);
        const double var_x68 = 0.019297068300000001 * NV_Ith_S(mParameters, 6);
        const double var_x69 = var_x12 * var_x68;
        const double var_x70 = ((var_x14) ? (-var_x69 + 374338.90822745475 * (1.3356880329847825e-6 + var_chaste_interface__membrane__V) * (var_x69 + var_x68 * var_x9)) : (var_x19 * var_chaste_interface__membrane__V));
        const double var_x71 = var_x22 / pow((0.26500000000000001 - var_x70), 2);
        const double var_x72 = 1.4804228373052499e-12 * var_x71;
        const double var_x73 = var_x11 * (var_x66 + var_x10 * var_chaste_interface__intracellular_ion_concentrations__Ki);
        const double var_x74 = var_x72 * var_x73;
        const double var_x75 = 1 / (1.0 - 3.773584905660377 * var_x70);
        const double var_x76 = var_x75 * var_chaste_interface__L_type_Ca_current_y_gate__y;
        const double var_x77 = var_x4 * var_x76;
        const double var_x78 = 1.0456223936449777e-6 * var_x77;
        const double var_x79 = var_x13 < 2.671376065969565e-6;
        const double var_x80 = exp(var_x55);
        const double var_x81 = -1.0 + var_x80;
        const double var_x82 = 1 / var_x81;
        const double var_x83 = var_x80 * var_chaste_interface__intracellular_ion_concentrations__Ki;
        const double var_x84 = var_x66 + var_x83;
        const double var_x85 = var_x82 * var_x84;
        const double var_x86 = 2.0912447872899554e-6 * var_x85;
        const double var_x87 = var_x77 * var_x82 * var_chaste_interface__membrane__V;
        const double var_x88 = ((var_x79) ? (-var_x74 + var_x65 * (var_x74 + var_x67 * var_x72) + var_x67 * var_x78 + var_x73 * var_x78) : (var_x77 * var_x86 + 7.8283429051047759e-8 * var_x83 * var_x87 + 5.5417986863183814e-7 * var_x71 * var_x85 * var_chaste_interface__membrane__V - 7.8283429051047759e-8 * var_x77 * var_x80 * var_x84 * var_chaste_interface__membrane__V / pow(var_x81, 2)));
        const double var_x89 = 1 / NV_Ith_S(mParameters, 7);
        const double var_x90 = 0.001 * var_x89;
        const double var_x91 = 5.0000000000000002e-5 + var_chaste_interface__intracellular_ion_concentrations__Cai;
        const double var_x92 = 1 / var_x91;
        const double var_x93 = 1 / var_chaste_interface__intracellular_ion_concentrations__Cai;
        const double var_x94 = var_chaste_interface__intracellular_ion_concentrations__Cai / pow(var_x91, 2);
        const double var_x95 = var_x45 * var_x49;
        const double var_x96 = -26.713760659695648 * log(var_x51 * NV_Ith_S(mParameters, 5)) + var_chaste_interface__membrane__V;
        const double var_x97 = NV_Ith_S(mParameters, 8) * var_chaste_interface__fast_sodium_current_h_gate__h;
        const double var_x98 = var_x96 * var_x97 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 2) * var_chaste_interface__fast_sodium_current_j_gate__j;
        const double var_x99 = var_x90 * var_x96;
        const double var_x100 = var_x30 * var_x97;
        const double var_x101 = var_x28 * var_x35;
        const double var_x102 = 1 / (var_chaste_interface__intracellular_ion_concentrations__Ki + 0.018329999999999999 * var_chaste_interface__intracellular_ion_concentrations__Nai);
        const double var_x103 = (-26.713760659695648 * log(var_x102 * (var_x37 + 0.018329999999999999 * NV_Ith_S(mParameters, 5))) + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 13) * var_chaste_interface__slow_activating_delayed_rectifiyer_K_current_X_ks_gate__X_ks;
        const double var_x104 = var_x28 * var_x90;
        const double var_x105 = NV_Ith_S(mParameters, 15) * var_chaste_interface__transient_outward_potassium_current_X_to1_gate__X_to1;
        const double var_x106 = var_x70 * var_chaste_interface__L_type_Ca_current_y_gate__y;
        const double var_x107 = 5.5865012728500001e-12 * var_x75;
        const double var_x108 = var_x107 * var_chaste_interface__L_type_Ca_current_y_gate__y;
        const double var_x109 = var_x108 * var_x73;
        const double var_x110 = var_x86 * var_chaste_interface__membrane__V;
        const double var_x111 = ((var_x79) ? (-var_x109 + var_x65 * (var_x109 + var_x108 * var_x67)) : (var_x110 * var_x76));
        const double var_x112 = -var_x90 * (var_x106 + var_x111);
        const double var_x113 = var_x107 * var_x4;
        const double var_x114 = var_x113 * var_x73;
        const double var_x115 = ((var_x79) ? (-var_x114 + var_x65 * (var_x114 + var_x113 * var_x67)) : (var_x110 * var_x4 * var_x75));
        const double var_x116 = var_x102 * var_x3;
        const double var_x117 = var_x32 * var_x51;
        const double var_x118 = var_x51 * var_x52 * var_x58 / (var_x57 * pow((0.031622776601683791 + var_x52), 2));
        const double var_x119 = var_x41 * var_x49 * pow(var_chaste_interface__intracellular_ion_concentrations__Nai, 2);
        const double var_x120 = var_x2 * var_x25;
        const double var_x121 = var_x24 * var_x25;
        const double var_x122 = var_x25 * var_x36;
        const double var_x123 = var_x26 * var_x40;
        const double var_x124 = var_x26 * var_x62;
        const double var_x125 = var_x108 * var_x4;
        const double var_x126 = var_x10 * var_x11 * var_x125;
        const double var_x127 = ((var_x79) ? (-var_x126 + var_x65 * (var_x126 + var_x125 * var_x6 * var_x7)) : (2.0912447872899554e-6 * var_x80 * var_x87));
        const double var_x128 = 0.0023800000000000002 + var_chaste_interface__intracellular_ion_concentrations__Cai;
        const double var_x129 = 1.0 + 0.00011900000000000002 / pow(var_x128, 2);
        const double var_x130 = 1 / var_x129;
        const double var_x131 = 0.001 * var_x130;
        const double var_x132 = 0.0015381954438488301 * var_x92;
        const double var_x133 = pow(var_chaste_interface__intracellular_ion_concentrations__Cai, 0.19999999999999996);
        const double var_x134 = pow(var_chaste_interface__intracellular_ion_concentrations__Cai, 1.2);
        const double var_x135 = pow(var_chaste_interface__intracellular_ion_concentrations__Ca_NSR, 1.0);
        const double var_x136 = NV_Ith_S(mParameters, 1) / (1.0 + 33855.471141425078 * var_x134 + 0.303951367781155 * var_x135);
        const double var_x137 = var_x133 * var_x136;
        const double var_x138 = 2752.4498037978587 * var_x134 - 0.096656534954407292 * var_x135;
        const double var_x139 = var_x138 * NV_Ith_S(mParameters, 1) / pow((2.9537323401073989e-5 + var_x134 + 8.9779098483507565e-6 * var_x135), 2);
        const double var_x140 = var_x133 * var_x139;
        const double var_x141 = 307.63908876976598 * var_x49;
        const double var_x142 = 2800.0000000000005 * var_chaste_interface__intracellular_ion_concentrations__Cai;
        const double var_x143 = 1 / (1.0 - exp(1.0000000000287557e-7));
        const double var_x144 = 1 / (1.0 - exp(-1.0000000000287557e-7));
        const double var_x145 = _lt_0_row[15];
        const double var_x146 = 0.0072727272727272727 * var_x145 * var_chaste_interface__fast_sodium_current_m_gate__m;
        const double var_x147 = (var_chaste_interface__membrane__V > -47.130001) && (var_chaste_interface__membrane__V < -47.129999000000005);
        const double var_x148 = 1.0 - var_chaste_interface__fast_sodium_current_m_gate__m;
        const double var_x149 = -0.10000000000000001 * var_chaste_interface__membrane__V;
        const double var_x150 = exp(-4.7130000000000001 + var_x149);
        const double var_x151 = 1.0 - var_x150;
        const double var_x152 = 0.32000000000000001 / var_x151;
        const double var_x153 = 47.130000000000003 + var_chaste_interface__membrane__V;
        const double var_x154 = var_chaste_interface__membrane__V >= -90.0;
        const double var_x155 = -0.080000000000000002 * var_x145;
        const double var_x156 = exp(-11.764705882352942 + 0.14705882352941177 * NV_Ith_S(mParameters, 10) - 0.14705882352941177 * var_chaste_interface__membrane__V);
        const double var_x157 = var_chaste_interface__membrane__V < -40.0;
        const double var_x158 = ((var_x157) ? (135.0 * var_x156) : (0));
        const double var_x159 = 0.001 * var_x158;
        const double var_x160 = exp(0.079000000000000001 * var_chaste_interface__membrane__V - 0.079000000000000001 * NV_Ith_S(mParameters, 10));
        const double var_x161 = exp(0.34999999999999998 * var_chaste_interface__membrane__V - 0.34999999999999998 * NV_Ith_S(mParameters, 10));
        const double var_x162 = exp(-0.96036036036036043 + 0.0900900900900901 * NV_Ith_S(mParameters, 10) - 0.0900900900900901 * var_chaste_interface__membrane__V);
        const double var_x163 = 1.0 + var_x162;
        const double var_x164 = ((var_x157) ? (3560.0 * var_x160 + 310000.0 * var_x161) : (7692.3076923076924 / var_x163));
        const double var_x165 = 0.001 * var_x164;
        const double var_x166 = ((var_x157) ? (-19.852941176470587 * var_x156) : (0));
        const double var_x167 = var_x158 + var_x164;
        const double var_x168 = 0.01 * NV_Ith_S(mParameters, 9);
        const double var_x169 = 1.0 - var_x168;
        const double var_x170 = var_x169 / var_x167;
        const double var_x171 = ((var_x157) ? (281.24000000000001 * var_x160 + 108500.0 * var_x161) : (693.00069300069299 * var_x162 / pow(var_x163, 2)));
        const double var_x172 = exp(-5.5312920000000005 + 0.13780000000000001 * NV_Ith_S(mParameters, 10) - 0.13780000000000001 * var_chaste_interface__membrane__V);
        const double var_x173 = 1.0 + var_x172;
        const double var_x174 = exp(0.01052 * NV_Ith_S(mParameters, 10) - 0.01052 * var_chaste_interface__membrane__V);
        const double var_x175 = var_x174 / var_x173;
        const double var_x176 = exp(-3.2000000000000002 + var_x149 + 0.10000000000000001 * NV_Ith_S(mParameters, 10));
        const double var_x177 = 1.0 + var_x176;
        const double var_x178 = exp(2.5349999999999999e-7 * NV_Ith_S(mParameters, 10) - 2.5349999999999999e-7 * var_chaste_interface__membrane__V);
        const double var_x179 = var_x178 / var_x177;
        const double var_x180 = ((var_x157) ? (121.2 * var_x175) : (300.0 * var_x179));
        const double var_x181 = 0.001 * var_x180;
        const double var_x182 = 37.780000000000001 + var_chaste_interface__membrane__V;
        const double var_x183 = exp(0.24440000000000001 * var_chaste_interface__membrane__V - 0.24440000000000001 * NV_Ith_S(mParameters, 10));
        const double var_x184 = exp(0.043909999999999998 * NV_Ith_S(mParameters, 10) - 0.043909999999999998 * var_chaste_interface__membrane__V);
        const double var_x185 = -127140.0 * var_x183 - 3.4740000000000003e-5 * var_x184;
        const double var_x186 = exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V - 0.311 * NV_Ith_S(mParameters, 10));
        const double var_x187 = 1.0 + var_x186;
        const double var_x188 = 1000.0 / var_x187;
        const double var_x189 = var_x185 * var_x188;
        const double var_x190 = ((var_x157) ? (var_x182 * var_x189) : (0));
        const double var_x191 = 0.001 * var_x190;
        const double var_x192 = ((var_x157) ? (var_x189 + var_x182 * var_x188 * (1.5254334000000001e-6 * var_x184 - 31073.016 * var_x183) - 311.0 * var_x182 * var_x185 * var_x186 / pow(var_x187, 2)) : (0));
        const double var_x193 = var_x180 + var_x190;
        const double var_x194 = var_x169 / var_x193;
        const double var_x195 = ((var_x157) ? (-1.2750239999999999 * var_x175 + 16.701360000000001 * var_x172 * var_x174 / pow(var_x173, 2)) : (-7.6049999999999992e-5 * var_x179 + 30.0 * var_x176 * var_x178 / pow(var_x177, 2)));
        const double var_x196 = _lt_0_row[18];
        const double var_x197 = _lt_0_row[17];
        const double var_x198 = var_x196 + var_x197;
        const double var_x199 = 1 / var_x198;
        const double var_x200 = 0.1691 * var_x197;
        const double var_x201 = (-var_x200 + 0.012800000000000001 * var_x196) / pow(var_x198, 2);
        const double var_x202 = 0.001 / (0.027 + 0.001 * var_x199);
        const double var_x203 = exp(1.8161764705882353 - 0.073529411764705885 * var_chaste_interface__membrane__V);
        const double var_x204 = 1.0 + var_x203;
        const double var_x205 = 0.001 / var_x204 - 0.001 * var_chaste_interface__slow_activating_delayed_rectifiyer_K_current_X_ks_gate__X_ks;
        const double var_x206 = 1 / (-1.0 + exp(9.9999999999880736e-8));
        const double var_x207 = 1 / (-1.0 + exp(-9.9999999999880736e-8));
        const double var_x208 = 1 / (1.0 - exp(2.1542940320207204e-7));
        const double var_x209 = 1 / (1.0 - exp(-2.1542940320207204e-7));
        const double var_x210 = (-9.9999985443959236 + var_chaste_interface__membrane__V) * (1.0465793304208771e-10 * var_x208 + 1.0465793304208771e-10 * var_x209 + 1.9068413391534758e-10 * var_x206 + 1.9068413391534758e-10 * var_x207);
        const double var_x211 = 7.3529411764705889e-5 * var_x203 / pow(var_x204, 2);
        const double var_x212 = -10.0 + var_chaste_interface__membrane__V;
        const double var_x213 = fabs(var_x212) < 1.455604075689676e-6;
        const double var_x214 = exp(-0.68699999999999994 + 0.068699999999999997 * var_chaste_interface__membrane__V);
        const double var_x215 = -1.0 + var_x214;
        const double var_x216 = 1 / var_x215;
        const double var_x217 = 0.13100000000000001 * var_x216;
        const double var_x218 = exp(1.48 - 0.14799999999999999 * var_chaste_interface__membrane__V);
        const double var_x219 = 1.0 - var_x218;
        const double var_x220 = 1 / var_x219;
        const double var_x221 = 0.071899999999999992 * var_x220;
        const double var_x222 = _lt_0_row[21];
        const double var_x223 = _lt_0_row[22];
        const double var_x224 = 0.20000000000000001 * var_chaste_interface__membrane__V;
        const double var_x225 = exp(6.7000000000000002 + var_x224);
        const double var_x226 = 1.0 + 0.051334999999999999 * var_x225;
        const double var_x227 = exp(-6.7000000000000002 - var_x224);
        const double var_x228 = 1.0 + 0.051334999999999999 * var_x227;
        const double var_x229 = 1.0 - var_chaste_interface__transient_outward_potassium_current_Y_to1_gate__Y_to1;
        const double var_x230 = var_x225 / var_x226;
        const double var_x231 = var_x227 / var_x228;
        const double var_x232 = exp(-0.15384615384615385 - 0.076923076923076927 * var_chaste_interface__membrane__V);
        const double var_x233 = 0.0038461538461538464 * var_x232;
        const double var_x234 = exp(0.20000000000000001 + 0.10000000000000001 * var_chaste_interface__membrane__V);
        const double var_x235 = 0.16 * var_x234;
        const double var_x236 = var_x235 * var_chaste_interface__L_type_Ca_current__C0;
        const double var_x237 = 1.6000000000000001 * var_x234;
        const double var_x238 = -var_x237;
        const double var_x239 = 0.10375 * var_chaste_interface__intracellular_ion_concentrations__Ca_ss;
        const double var_x240 = 0.050000000000000003 * var_x232;
        const double var_x241 = 0.10375 * var_chaste_interface__L_type_Ca_current__C0;
        const double var_x242 = 0.12 * var_x234;
        const double var_x243 = 0.0076923076923076927 * var_x232;
        const double var_x244 = 1.2 * var_x234;
        const double var_x245 = -var_x240;
        const double var_x246 = 0.20749999999999999 * var_chaste_interface__intracellular_ion_concentrations__Ca_ss;
        const double var_x247 = 0.10000000000000001 * var_x232;
        const double var_x248 = 0.20749999999999999 * var_chaste_interface__L_type_Ca_current__C1;
        const double var_x249 = 0.080000000000000002 * var_x234;
        const double var_x250 = -var_x249;
        const double var_x251 = -var_x247;
        const double var_x252 = 0.80000000000000004 * var_x234;
        const double var_x253 = -var_x252;
        const double var_x254 = 0.41499999999999998 * var_chaste_interface__intracellular_ion_concentrations__Ca_ss;
        const double var_x255 = 0.14999999999999999 * var_x232;
        const double var_x256 = 0.41499999999999998 * var_chaste_interface__L_type_Ca_current__C2;
        const double var_x257 = 0.040000000000000001 * var_x234;
        const double var_x258 = 0.015384615384615385 * var_x232 * var_chaste_interface__L_type_Ca_current__C4;
        const double var_x259 = 0.40000000000000002 * var_x234;
        const double var_x260 = 0.82999999999999996 * var_chaste_interface__intracellular_ion_concentrations__Ca_ss;
        const double var_x261 = 0.20000000000000001 * var_x232;
        const double var_x262 = 0.82999999999999996 * var_chaste_interface__L_type_Ca_current__C3;
        const double var_x263 = 1.6599999999999999 * var_chaste_interface__intracellular_ion_concentrations__Ca_ss;
        const double var_x264 = 1.6599999999999999 * var_chaste_interface__L_type_Ca_current__C4;
        const double var_x265 = 0.0019230769230769232 * var_x232;
        const double var_x266 = 0.32000000000000001 * var_x234 * var_chaste_interface__L_type_Ca_current__C_Ca0;
        const double var_x267 = 3.2000000000000002 * var_x234;
        const double var_x268 = 0.025000000000000001 * var_x232;
        const double var_x269 = 0.23999999999999999 * var_x234;
        const double var_x270 = 2.3999999999999999 * var_x234;
        const double var_x271 = 0.074999999999999997 * var_x232;
        const double var_x272 = var_x243 * var_chaste_interface__L_type_Ca_current__C_Ca4;
        const double var_x273 = exp(2.5 + var_x224);
        const double var_x274 = 1.0 + var_x273;
        const double var_x275 = exp(2.1052631578947367 + 0.10526315789473684 * var_chaste_interface__membrane__V);
        const double var_x276 = 1.0 + var_x275;
        const double var_x277 = 1 / var_x276;
        const double var_x278 = 1 / (0.02 + 0.59999999999999998 * var_x277);
        const double var_x279 = pow(var_chaste_interface__intracellular_ion_concentrations__Ca_ss, 3.0);
        const double var_x280 = 4050000.0 * var_x279;
        const double var_x281 = 12150000000.0 * pow(var_chaste_interface__intracellular_ion_concentrations__Ca_ss, 4.0);
        const double var_x282 = 48600000000.0 * var_x279 * var_chaste_interface__RyR_channel__P_C1;
        const double var_x283 = 12150000.0 * pow(var_chaste_interface__intracellular_ion_concentrations__Ca_ss, 2.0) * var_chaste_interface__RyR_channel__P_O1;
        const double var_x284 = 6.1527817753953199e-5 * NV_Ith_S(mParameters, 2);
        const double var_x285 = var_x284 * var_x96;
        const double var_x286 = var_x28 * var_x284;
        const double var_x287 = -var_x111 * var_x284;
        const double var_x288 = 0.0023800000000000002 + var_chaste_interface__intracellular_ion_concentrations__Ca_ss;
        const double var_x289 = 1.0 + 0.00011900000000000002 / pow(var_x288, 2);
        const double var_x290 = 1 / var_x289;
        const double var_x291 = 0.001 * var_x290;
        const double var_x292 = var_x291 * (-662.44950448422946 * var_chaste_interface__L_type_Ca_current__O - 662.44950448422946 * var_chaste_interface__L_type_Ca_current__O_Ca);
        const double var_x293 = -0.66244950448422946 * var_x106 * var_x290;
        const double var_x294 = var_x291 * NV_Ith_S(mParameters, 0);
        const double var_x295 = var_x294 * (133.33333333333334 * var_chaste_interface__intracellular_ion_concentrations__Ca_JSR - 133.33333333333334 * var_chaste_interface__intracellular_ion_concentrations__Ca_ss);
        const double var_x296 = 133.33333333333334 * var_chaste_interface__RyR_channel__P_O1;
        const double var_x297 = 133.33333333333334 * var_chaste_interface__RyR_channel__P_O2;
        const double var_x298 = (var_chaste_interface__RyR_channel__P_O1 + var_chaste_interface__RyR_channel__P_O2) * NV_Ith_S(mParameters, 0);
        const double var_x299 = var_x298 * (-var_chaste_interface__intracellular_ion_concentrations__Ca_ss + var_chaste_interface__intracellular_ion_concentrations__Ca_JSR);
        const double var_x300 = 0.80000000000000004 + var_chaste_interface__intracellular_ion_concentrations__Ca_JSR;
        const double var_x301 = pow(var_x300, (-2));
        const double var_x302 = 1 / (1.0 + 12.0 * var_x301);
        const double var_x303 = 0.001 * var_x302;
        const double var_x304 = var_x303 * (-var_chaste_interface__intracellular_ion_concentrations__Ca_JSR + var_chaste_interface__intracellular_ion_concentrations__Ca_ss) * NV_Ith_S(mParameters, 0);
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x90 * (0.0034841999999999998 + var_x22 + var_x24 + var_x3 + var_x32 + var_x88 + 0.5 * var_x36 + 5000.0 * var_x50 + 0.0022160000000000001 * var_x2 + 0.69299999999999995 * var_x59 + 0.00037056856187290968 * var_x29 + 24.332029034784558 * var_x61 - 0.014037709058529552 * var_x63 - 0.014921378387420543 * var_x64 + var_x37 * var_x40));
        IJth(rJacobian, 1, 0) = var_x131 * (-1.181949379053441e-5 + 1.4970966480361221 * var_x61 + 307.63908876976598 * var_x50);
        IJth(rJacobian, 2, 0) = ((var_x147) ? (var_x146 + (0.001 - 0.001 * var_chaste_interface__fast_sodium_current_m_gate__m) * (160.0 * var_x143 + 160.0 * var_x144)) : ((var_x154) ? (var_x146 + var_x148 * var_x152 - 0.032000000000000001 * var_x148 * var_x150 * var_x153 / pow(var_x151, 2)) : (0)));
        IJth(rJacobian, 3, 0) = (var_x159 + var_x165) * (var_x166 * var_x170 + var_x158 * var_x169 * (-var_x166 - var_x171) / pow(var_x167, 2)) + (0.001 * var_x166 + 0.001 * var_x171) * (var_x168 - var_chaste_interface__fast_sodium_current_h_gate__h + var_x158 * var_x170);
        IJth(rJacobian, 4, 0) = (var_x181 + var_x191) * (var_x192 * var_x194 + var_x169 * var_x190 * (-var_x192 - var_x195) / pow(var_x193, 2)) + (0.001 * var_x192 + 0.001 * var_x195) * (var_x168 - var_chaste_interface__fast_sodium_current_j_gate__j + var_x190 * var_x194);
        IJth(rJacobian, 5, 0) = var_x202 * (var_x197 * var_x201 + var_x199 * var_x200) - 0.0013717421124828533 * var_x201 * (-var_chaste_interface__rapid_activating_delayed_rectifiyer_K_current_X_kr_gate__X_kr + var_x197 * var_x199) / pow((1 + 0.037037037037037035 * var_x199), 2);
        IJth(rJacobian, 6, 0) = ((var_x213) ? (var_x205 * (0.065500000000000003 * var_x206 + 0.065500000000000003 * var_x207 + 0.035949999999999996 * var_x208 + 0.035949999999999996 * var_x209) + var_x211 * (343500000.00040966 * var_x210 - 1.9068413391534758e-7 * var_x207 - 1.046579330420877e-7 * var_x208)) : (var_x205 * (var_x217 + var_x221 - 0.0089997000000000011 * var_x212 * var_x214 / pow(var_x215, 2) - 0.0106412 * var_x212 * var_x218 / pow(var_x219, 2)) + var_x211 * (var_x212 * var_x217 + var_x212 * var_x221)));
        IJth(rJacobian, 7, 0) = 0.035770000000000003 * var_x222 * (0.045159999999999999 - 0.045159999999999999 * var_chaste_interface__transient_outward_potassium_current_X_to1_gate__X_to1) + 0.0061683930000000003 * var_x223 * var_chaste_interface__transient_outward_potassium_current_X_to1_gate__X_to1;
        IJth(rJacobian, 8, 0) = -0.001083 * var_x229 * var_x231 - 0.001083 * var_x230 * var_chaste_interface__transient_outward_potassium_current_Y_to1_gate__Y_to1 + 5.5595805000000001e-5 * var_x229 * pow(var_x227, 2) / pow(var_x228, 2) + 5.5595805000000001e-5 * pow(var_x225, 2) * var_chaste_interface__transient_outward_potassium_current_Y_to1_gate__Y_to1 / pow(var_x226, 2);
        IJth(rJacobian, 11, 0) = -var_x236 - var_x233 * var_chaste_interface__L_type_Ca_current__C1;
        IJth(rJacobian, 12, 0) = var_x236 + (var_x233 - var_x242) * var_chaste_interface__L_type_Ca_current__C1 - var_x243 * var_chaste_interface__L_type_Ca_current__C2;
        IJth(rJacobian, 13, 0) = var_x242 * var_chaste_interface__L_type_Ca_current__C1 + (var_x243 + var_x250) * var_chaste_interface__L_type_Ca_current__C2 - 0.011538461538461539 * var_x232 * var_chaste_interface__L_type_Ca_current__C3;
        IJth(rJacobian, 14, 0) = -var_x258 + var_x249 * var_chaste_interface__L_type_Ca_current__C2 + (-var_x257 + 0.011538461538461539 * var_x232) * var_chaste_interface__L_type_Ca_current__C3;
        IJth(rJacobian, 15, 0) = var_x258 + var_x257 * var_chaste_interface__L_type_Ca_current__C3;
        IJth(rJacobian, 16, 0) = -var_x266 - var_x265 * var_chaste_interface__L_type_Ca_current__C_Ca1;
        IJth(rJacobian, 17, 0) = var_x266 + (var_x265 - var_x269) * var_chaste_interface__L_type_Ca_current__C_Ca1 - var_x233 * var_chaste_interface__L_type_Ca_current__C_Ca2;
        IJth(rJacobian, 18, 0) = var_x269 * var_chaste_interface__L_type_Ca_current__C_Ca1 + (var_x233 - var_x235) * var_chaste_interface__L_type_Ca_current__C_Ca2 - 0.0057692307692307696 * var_x232 * var_chaste_interface__L_type_Ca_current__C_Ca3;
        IJth(rJacobian, 19, 0) = -var_x272 + var_x235 * var_chaste_interface__L_type_Ca_current__C_Ca2 + (var_x250 + 0.0057692307692307696 * var_x232) * var_chaste_interface__L_type_Ca_current__C_Ca3;
        IJth(rJacobian, 20, 0) = var_x272 + var_x249 * var_chaste_interface__L_type_Ca_current__C_Ca3;
        IJth(rJacobian, 21, 0) = -0.00016000000000000001 * var_x273 * var_x278 / pow(var_x274, 2) + 0.00017543859649122806 * var_x275 * (0.20000000000000001 - var_chaste_interface__L_type_Ca_current_y_gate__y + 0.80000000000000004 / var_x274) / (pow(var_x276, 2) * pow((0.033333333333333333 + var_x277), 2));
        IJth(rJacobian, 28, 0) = (-1.9073623503725492e-7 - 6.1527817753953199e-5 * var_x32 - 0.00012791633311046868 * var_x59 - 0.004491289944108366 * var_x61 - 0.92291726630929793 * var_x50) * NV_Ith_S(mParameters, 2);
        IJth(rJacobian, 29, 0) = (9.1807985005898728e-7 * var_x64 + 8.6370960463622422e-7 * var_x63 + 8.5277555406979133e-5 * var_x59 - 2.2800274940260918e-8 * var_x29 - 3.0763908876976599e-5 * var_x36 - 6.1527817753953199e-5 * var_x24 - 6.1527817753953199e-5 * var_x3 - 6.1527817753953199e-5 * var_x88 - 1.3634564414276028e-7 * var_x2 - 6.1527817753953199e-5 * var_x40 * NV_Ith_S(mParameters, 4)) * NV_Ith_S(mParameters, 2);
        IJth(rJacobian, 30, 0) = var_x21 * var_x292;
        IJth(rJacobian, 0, 1) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x90 * (0.050000000000000003 * var_x92 + 0.005131713422727534 * var_x93 - 5000.0 * var_x95 - 0.050000000000000003 * var_x94));
        IJth(rJacobian, 1, 1) = var_x131 * (-5637.4531835205999 - var_x132 + 3.5444788081288787e-5 * var_x140 + 0.0015381954438488301 * var_x94 + 2800.0000000000005 * var_chaste_interface__intracellular_Ca_fluxes__HTRPNCa + 2800.0000000000005 * var_chaste_interface__intracellular_Ca_fluxes__LTRPNCa - 0.00015787156411954756 * var_x93 - 3302.9397645574304 * var_x137 - var_x141 * var_x45) + 2.3800000000000004e-7 * (2.8000000000000003 * var_chaste_interface__intracellular_Ca_fluxes__LTRPNCa + 37.453183520599246 * var_chaste_interface__intracellular_ion_concentrations__Ca_ss + 0.0092400000000000017 * var_chaste_interface__intracellular_Ca_fluxes__HTRPNCa + 0.00015787156411954756 * log(var_x93 * NV_Ith_S(mParameters, 3)) - 37.453183520599246 * var_chaste_interface__intracellular_ion_concentrations__Cai - 1.181949379053441e-5 * var_chaste_interface__membrane__V + var_x141 * var_x60 - var_x132 * var_chaste_interface__intracellular_ion_concentrations__Cai - var_x136 * var_x138 - var_x142 * (1.0 - var_chaste_interface__intracellular_Ca_fluxes__HTRPNCa) - var_x142 * (1.0 - var_chaste_interface__intracellular_Ca_fluxes__LTRPNCa)) / (pow(var_x128, 3) * pow(var_x129, 2));
        IJth(rJacobian, 26, 1) = 20.0 - 20.0 * var_chaste_interface__intracellular_Ca_fluxes__HTRPNCa;
        IJth(rJacobian, 27, 1) = 40.0 - 40.0 * var_chaste_interface__intracellular_Ca_fluxes__LTRPNCa;
        IJth(rJacobian, 28, 1) = 0.92291726630929793 * var_x95 * NV_Ith_S(mParameters, 2);
        IJth(rJacobian, 30, 1) = 806.49188514357047 * var_x290;
        IJth(rJacobian, 32, 1) = 40.641887388649529 * var_x137 - 4.361396781050011e-7 * var_x140;
        IJth(rJacobian, 0, 2) = mSetVoltageDerivativeToZero ? 0.0 : (-0.0030000000000000001 * var_x89 * var_x98);
        IJth(rJacobian, 2, 2) = ((var_x147) ? (var_x155 - 3.200000000092018e-7 * var_x144 + 499.9999999856222 * (47.129999000000005 + var_chaste_interface__membrane__V) * (-0.00032000000000920181 * var_x143 - 0.00032000000000920181 * var_x144)) : ((var_x154) ? (var_x155 - var_x152 * var_x153) : (0)));
        IJth(rJacobian, 28, 2) = -0.0001845834532618596 * var_x98 * NV_Ith_S(mParameters, 2);
        IJth(rJacobian, 0, 3) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x31 * var_x99);
        IJth(rJacobian, 3, 3) = -var_x159 - var_x165;
        IJth(rJacobian, 28, 3) = -var_x285 * var_x31;
        IJth(rJacobian, 0, 4) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x100 * var_x99);
        IJth(rJacobian, 4, 4) = -var_x181 - var_x191;
        IJth(rJacobian, 28, 4) = -var_x100 * var_x285;
        IJth(rJacobian, 0, 5) = mSetVoltageDerivativeToZero ? 0.0 : (-0.00050000000000000001 * var_x101 * var_x89);
        IJth(rJacobian, 5, 5) = -var_x202;
        IJth(rJacobian, 29, 5) = -3.0763908876976599e-5 * var_x101 * NV_Ith_S(mParameters, 2);
        IJth(rJacobian, 0, 6) = mSetVoltageDerivativeToZero ? 0.0 : (-0.002 * var_x103 * var_x89);
        IJth(rJacobian, 6, 6) = ((var_x213) ? (1.9068413391534758e-10 * var_x207 + 1.0465793304208771e-10 * var_x208 - 343500.00000040967 * var_x210) : (-0.00013100000000000001 * var_x212 * var_x216 - 7.1899999999999999e-5 * var_x212 * var_x220));
        IJth(rJacobian, 29, 6) = -0.0001230556355079064 * var_x103 * NV_Ith_S(mParameters, 2);
        IJth(rJacobian, 0, 7) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x104 * var_x23);
        IJth(rJacobian, 7, 7) = -0.045159999999999999 * var_x222 - 0.098900000000000002 * var_x223;
        IJth(rJacobian, 29, 7) = -var_x23 * var_x286;
        IJth(rJacobian, 0, 8) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x104 * var_x105);
        IJth(rJacobian, 8, 8) = -0.0054149999999999997 * var_x230 - 0.0054149999999999997 * var_x231;
        IJth(rJacobian, 29, 8) = -var_x105 * var_x286;
        IJth(rJacobian, 0, 9) = mSetVoltageDerivativeToZero ? 0.0 : (var_x112);
        IJth(rJacobian, 9, 9) = -2.0;
        IJth(rJacobian, 15, 9) = 2.0;
        IJth(rJacobian, 29, 9) = var_x287;
        IJth(rJacobian, 30, 9) = var_x293;
        IJth(rJacobian, 0, 10) = mSetVoltageDerivativeToZero ? 0.0 : (var_x112);
        IJth(rJacobian, 10, 10) = -7.0;
        IJth(rJacobian, 20, 10) = 7.0;
        IJth(rJacobian, 29, 10) = var_x287;
        IJth(rJacobian, 30, 10) = var_x293;
        IJth(rJacobian, 11, 11) = var_x238 - var_x239;
        IJth(rJacobian, 12, 11) = var_x237;
        IJth(rJacobian, 16, 11) = var_x239;
        IJth(rJacobian, 11, 12) = var_x240;
        IJth(rJacobian, 12, 12) = var_x245 - var_x244 - var_x246;
        IJth(rJacobian, 13, 12) = var_x244;
        IJth(rJacobian, 17, 12) = var_x246;
        IJth(rJacobian, 12, 13) = var_x247;
        IJth(rJacobian, 13, 13) = var_x251 + var_x253 - var_x254;
        IJth(rJacobian, 14, 13) = var_x252;
        IJth(rJacobian, 18, 13) = var_x254;
        IJth(rJacobian, 13, 14) = var_x255;
        IJth(rJacobian, 14, 14) = -var_x255 - var_x259 - var_x260;
        IJth(rJacobian, 15, 14) = var_x259;
        IJth(rJacobian, 19, 14) = var_x260;
        IJth(rJacobian, 9, 15) = 0.29999999999999999;
        IJth(rJacobian, 14, 15) = var_x261;
        IJth(rJacobian, 15, 15) = -0.29999999999999999 - var_x261 - var_x263;
        IJth(rJacobian, 20, 15) = var_x263;
        IJth(rJacobian, 11, 16) = 0.01;
        IJth(rJacobian, 16, 16) = -0.01 - var_x267;
        IJth(rJacobian, 17, 16) = var_x267;
        IJth(rJacobian, 12, 17) = 0.0050000000000000001;
        IJth(rJacobian, 16, 17) = var_x268;
        IJth(rJacobian, 17, 17) = -0.0050000000000000001 - var_x268 - var_x270;
        IJth(rJacobian, 18, 17) = var_x270;
        IJth(rJacobian, 13, 18) = 0.0025000000000000001;
        IJth(rJacobian, 17, 18) = var_x240;
        IJth(rJacobian, 18, 18) = -0.0025000000000000001 + var_x238 + var_x245;
        IJth(rJacobian, 19, 18) = var_x237;
        IJth(rJacobian, 14, 19) = 0.00125;
        IJth(rJacobian, 18, 19) = var_x271;
        IJth(rJacobian, 19, 19) = -0.00125 + var_x253 - var_x271;
        IJth(rJacobian, 20, 19) = var_x252;
        IJth(rJacobian, 10, 20) = 0.0070000000000000001;
        IJth(rJacobian, 15, 20) = 0.00062500000000000001;
        IJth(rJacobian, 19, 20) = var_x247;
        IJth(rJacobian, 20, 20) = -0.0076249999999999998 + var_x251;
        IJth(rJacobian, 0, 21) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x90 * (var_x115 + var_x4 * var_x70));
        IJth(rJacobian, 21, 21) = -0.001 * var_x278;
        IJth(rJacobian, 29, 21) = -var_x115 * var_x284;
        IJth(rJacobian, 30, 21) = var_x292 * var_x70;
        IJth(rJacobian, 22, 22) = -0.67600000000000005 - var_x280;
        IJth(rJacobian, 23, 22) = var_x280;
        IJth(rJacobian, 24, 22) = 0.57599999999999996;
        IJth(rJacobian, 25, 22) = 0.10000000000000001;
        IJth(rJacobian, 30, 22) = var_x295;
        IJth(rJacobian, 31, 22) = var_x304;
        IJth(rJacobian, 22, 23) = 1.9299999999999999;
        IJth(rJacobian, 23, 23) = -1.9299999999999999;
        IJth(rJacobian, 30, 23) = var_x295;
        IJth(rJacobian, 31, 23) = var_x304;
        IJth(rJacobian, 22, 24) = var_x281;
        IJth(rJacobian, 24, 24) = -var_x281;
        IJth(rJacobian, 22, 25) = 0.00080000000000000004;
        IJth(rJacobian, 25, 25) = -0.00080000000000000004;
        IJth(rJacobian, 1, 26) = var_x131 * (0.0092400000000000017 + var_x142);
        IJth(rJacobian, 26, 26) = -6.6000000000000005e-5 - 20.0 * var_chaste_interface__intracellular_ion_concentrations__Cai;
        IJth(rJacobian, 1, 27) = var_x131 * (2.8000000000000003 + var_x142);
        IJth(rJacobian, 27, 27) = -0.040000000000000001 - 40.0 * var_chaste_interface__intracellular_ion_concentrations__Cai;
        IJth(rJacobian, 0, 28) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x90 * (15000.0 * var_x119 + 0.0328718762774503 * var_x118 + 26.713760659695648 * var_x117 + 0.48966323289222125 * var_x116 + 0.082812658045056511 * var_x51));
        IJth(rJacobian, 1, 28) = 0.92291726630929793 * var_x119 * var_x130;
        IJth(rJacobian, 28, 28) = (-5.0952821319166834e-6 * var_x51 - 2.768751798927894 * var_x119 - 6.0676044384883792e-6 * var_x118 - 0.0016436393973924784 * var_x117) * NV_Ith_S(mParameters, 2);
        IJth(rJacobian, 29, 28) = (4.0450696256589195e-6 * var_x118 - 3.0127910154204128e-5 * var_x116) * NV_Ith_S(mParameters, 2);
        IJth(rJacobian, 0, 29) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x90 * (var_x127 + 13.356880329847824 * var_x122 + 26.713760659695648 * var_x116 + 26.713760659695648 * var_x121 + 26.713760659695648 * var_x123 + 0.05919769362188556 * var_x120 - 0.375 * var_x124));
        IJth(rJacobian, 29, 29) = (2.3072931657732449e-5 * var_x124 - 3.6423049046217326e-6 * var_x120 - 6.1527817753953199e-5 * var_x127 - 0.00082181969869623921 * var_x122 - 0.0016436393973924784 * var_x116 - 0.0016436393973924784 * var_x121 - 0.0016436393973924784 * var_x123) * NV_Ith_S(mParameters, 2);
        IJth(rJacobian, 1, 30) = 0.037453183520599252 * var_x130;
        IJth(rJacobian, 11, 30) = -var_x241;
        IJth(rJacobian, 12, 30) = -var_x248;
        IJth(rJacobian, 13, 30) = -var_x256;
        IJth(rJacobian, 14, 30) = -var_x262;
        IJth(rJacobian, 15, 30) = -var_x264;
        IJth(rJacobian, 16, 30) = var_x241;
        IJth(rJacobian, 17, 30) = var_x248;
        IJth(rJacobian, 18, 30) = var_x256;
        IJth(rJacobian, 19, 30) = var_x262;
        IJth(rJacobian, 20, 30) = var_x264;
        IJth(rJacobian, 22, 30) = var_x282 - var_x283;
        IJth(rJacobian, 23, 30) = var_x283;
        IJth(rJacobian, 24, 30) = -var_x282;
        IJth(rJacobian, 30, 30) = var_x291 * (-806491.88514357049 + (-var_x296 - var_x297) * NV_Ith_S(mParameters, 0)) + 2.3800000000000004e-7 * (133.33333333333334 * var_x299 + 806491.88514357049 * var_chaste_interface__intracellular_ion_concentrations__Cai - 806491.88514357049 * var_chaste_interface__intracellular_ion_concentrations__Ca_ss - 662.44950448422946 * var_x106 * var_x4) / (pow(var_x288, 3) * pow(var_x289, 2));
        IJth(rJacobian, 31, 30) = var_x298 * var_x303;
        IJth(rJacobian, 30, 31) = var_x294 * (var_x296 + var_x297);
        IJth(rJacobian, 31, 31) = var_x303 * (-1740.0382808421784 + (-var_chaste_interface__RyR_channel__P_O1 - var_chaste_interface__RyR_channel__P_O2) * NV_Ith_S(mParameters, 0)) + 0.00016666666666666666 * (-var_x299 + 1740.0382808421784 * var_chaste_interface__intracellular_ion_concentrations__Ca_NSR - 1740.0382808421784 * var_chaste_interface__intracellular_ion_concentrations__Ca_JSR) / (pow(var_x300, 3) * pow((0.083333333333333329 + var_x301), 2));
        IJth(rJacobian, 32, 31) = 0.13257434520702313;
        IJth(rJacobian, 1, 32) = var_x131 * (0.096656534954407292 * var_x136 + 2.651834266564234e-10 * var_x139);
        IJth(rJacobian, 31, 32) = 1.7400382808421784 * var_x302;
        IJth(rJacobian, 32, 32) = -0.13257434520702313 - 0.0011893356491532784 * var_x136 - 3.2630189260961817e-12 * var_x139;
    }

    N_Vector Cellwinslow_model_1999FromCellMLCvodeOpt::ComputeDerivedQuantities(double var_chaste_interface__environment__time_converted, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -96.1638
        double var_chaste_interface__intracellular_ion_concentrations__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 8e-05
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.0328302
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.988354
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.99254
        double var_chaste_interface__rapid_activating_delayed_rectifiyer_K_current_X_kr_gate__X_kr = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.51
        double var_chaste_interface__slow_activating_delayed_rectifiyer_K_current_X_ks_gate__X_ks = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.264
        double var_chaste_interface__transient_outward_potassium_current_X_to1_gate__X_to1 = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 2.63
        double var_chaste_interface__transient_outward_potassium_current_Y_to1_gate__Y_to1 = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.99
        double var_chaste_interface__L_type_Ca_current__O = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 9.84546e-21
        double var_chaste_interface__L_type_Ca_current__O_Ca = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__L_type_Ca_current_y_gate__y = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.798
        double var_chaste_interface__RyR_channel__P_O1 = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__RyR_channel__P_O2 = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__intracellular_ion_concentrations__Nai = NV_Ith_S(rY, 28);
        // Units: millimolar; Initial value: 10.0
        double var_chaste_interface__intracellular_ion_concentrations__Ki = NV_Ith_S(rY, 29);
        // Units: millimolar; Initial value: 157.8
        double var_chaste_interface__intracellular_ion_concentrations__Ca_ss = NV_Ith_S(rY, 30);
        // Units: millimolar; Initial value: 0.00011
        double var_chaste_interface__intracellular_ion_concentrations__Ca_JSR = NV_Ith_S(rY, 31);
        // Units: millimolar; Initial value: 0.257
        
        // Lookup table indexing
        const bool _oob_0 = Cellwinslow_model_1999FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellwinslow_model_1999FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_Na_Ca_exchanger__K_mCa = 1.3799999999999999; // millimolar
        const double var_Na_Ca_exchanger__K_mNa = 87.5; // millimolar
        const double var_Na_Ca_exchanger__K_sat = 0.20000000000000001; // dimensionless
        const double var_Na_Ca_exchanger__eta = 0.34999999999999998; // dimensionless
        const double var_RyR_channel__J_rel = (-var_chaste_interface__intracellular_ion_concentrations__Ca_ss + var_chaste_interface__intracellular_ion_concentrations__Ca_JSR) * (var_chaste_interface__RyR_channel__P_O1 + var_chaste_interface__RyR_channel__P_O2) * NV_Ith_S(mParameters, 0); // millimolar_per_second
        const double var_membrane__F = 96.485341500000004; // coulomb_per_millimole
        const double var_membrane__R = 8.3144720000000003; // joule_per_mole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_L_type_Ca_current_y_gate__tau_y = _lt_0_row[14]; // second
        const double var_fast_sodium_current_h_gate__alpha_h = ((var_chaste_interface__membrane__V < -40.0) ? (135.0 * exp(-11.764705882352942 + 0.14705882352941177 * NV_Ith_S(mParameters, 10) - 0.14705882352941177 * var_chaste_interface__membrane__V)) : (0)); // per_second
        const double var_fast_sodium_current_h_gate__beta_h = ((var_chaste_interface__membrane__V < -40.0) ? (3560.0 * exp(0.079000000000000001 * var_chaste_interface__membrane__V - 0.079000000000000001 * NV_Ith_S(mParameters, 10)) + 310000.0 * exp(0.34999999999999998 * var_chaste_interface__membrane__V - 0.34999999999999998 * NV_Ith_S(mParameters, 10))) : (7692.3076923076924 / (1.0 + exp(-0.96036036036036043 + 0.0900900900900901 * NV_Ith_S(mParameters, 10) - 0.0900900900900901 * var_chaste_interface__membrane__V)))); // per_second
        const double var_fast_sodium_current_h_gate__tau_h = 1 / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h); // second
        const double var_fast_sodium_current_j_gate__alpha_j = ((var_chaste_interface__membrane__V < -40.0) ? (1000.0 * (37.780000000000001 + var_chaste_interface__membrane__V) * (-127140.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__V - 0.24440000000000001 * NV_Ith_S(mParameters, 10)) - 3.4740000000000003e-5 * exp(0.043909999999999998 * NV_Ith_S(mParameters, 10) - 0.043909999999999998 * var_chaste_interface__membrane__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V - 0.311 * NV_Ith_S(mParameters, 10)))) : (0)); // per_second
        const double var_fast_sodium_current_j_gate__beta_j = ((var_chaste_interface__membrane__V < -40.0) ? (121.2 * exp(0.01052 * NV_Ith_S(mParameters, 10) - 0.01052 * var_chaste_interface__membrane__V) / (1.0 + exp(-5.5312920000000005 + 0.13780000000000001 * NV_Ith_S(mParameters, 10) - 0.13780000000000001 * var_chaste_interface__membrane__V))) : (300.0 * exp(2.5349999999999999e-7 * NV_Ith_S(mParameters, 10) - 2.5349999999999999e-7 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.2000000000000002 + 0.10000000000000001 * NV_Ith_S(mParameters, 10) - 0.10000000000000001 * var_chaste_interface__membrane__V)))); // per_second
        const double var_fast_sodium_current_j_gate__tau_j = 1 / (var_fast_sodium_current_j_gate__alpha_j + var_fast_sodium_current_j_gate__beta_j); // second
        const double var_membrane__i_Stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_rapid_activating_delayed_rectifiyer_K_current__R_V = 1 / (_lt_0_row[5]); // dimensionless
        const double var_L_type_Ca_current__i_Ca_max = ((fabs(var_chaste_interface__membrane__V) < 1.3356880329847825e-6) ? (374338.90822745475 * (1.3356880329847825e-6 + var_chaste_interface__membrane__V) * (0.019297068300000001 * (0.001 * exp(9.9999999999999995e-8) - 0.34100000000000003 * NV_Ith_S(mParameters, 3)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(9.9999999999999995e-8)) + 0.019297068300000001 * (0.001 * exp(-9.9999999999999995e-8) - 0.34100000000000003 * NV_Ith_S(mParameters, 3)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8))) - 0.019297068300000001 * (0.001 * exp(-9.9999999999999995e-8) - 0.34100000000000003 * NV_Ith_S(mParameters, 3)) * NV_Ith_S(mParameters, 6) / (-1.0 + exp(-9.9999999999999995e-8))) : (14447.286958825252 * (_lt_0_row[0] - 0.34100000000000003 * NV_Ith_S(mParameters, 3)) * NV_Ith_S(mParameters, 6) * var_chaste_interface__membrane__V / (_lt_0_row[1]))); // microA_per_microF
        const double var_L_type_Ca_current__i_Ca = (var_chaste_interface__L_type_Ca_current__O + var_chaste_interface__L_type_Ca_current__O_Ca) * var_L_type_Ca_current__i_Ca_max * var_chaste_interface__L_type_Ca_current_y_gate__y; // microA_per_microF
        const double var_L_type_Ca_current__i_Ca_converted = HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_current__i_Ca; // uA_per_cm2
        const double var_rapid_activating_delayed_rectifiyer_K_current__E_K = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__intracellular_ion_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_rapid_activating_delayed_rectifiyer_K_current__f_Ko = 0.5 * sqrt(NV_Ith_S(mParameters, 4)); // dimensionless
        const double var_rapid_activating_delayed_rectifiyer_K_current__i_Kr = (-var_rapid_activating_delayed_rectifiyer_K_current__E_K + var_chaste_interface__membrane__V) * var_rapid_activating_delayed_rectifiyer_K_current__R_V * var_rapid_activating_delayed_rectifiyer_K_current__f_Ko * NV_Ith_S(mParameters, 12) * var_chaste_interface__rapid_activating_delayed_rectifiyer_K_current_X_kr_gate__X_kr; // microA_per_microF
        const double var_rapid_activating_delayed_rectifiyer_K_current__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_rapid_activating_delayed_rectifiyer_K_current__i_Kr; // uA_per_cm2
        const double var_Na_Ca_exchanger__i_NaCa = 5000.0 * (pow(var_chaste_interface__intracellular_ion_concentrations__Nai, 3) * NV_Ith_S(mParameters, 3) * exp(var_Na_Ca_exchanger__eta * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) - pow(NV_Ith_S(mParameters, 5), 3) * var_chaste_interface__intracellular_ion_concentrations__Cai * exp((-1.0 + var_Na_Ca_exchanger__eta) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * NV_Ith_S(mParameters, 14) / ((1.0 + var_Na_Ca_exchanger__K_sat * exp((-1.0 + var_Na_Ca_exchanger__eta) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * (pow(var_Na_Ca_exchanger__K_mNa, 3) + pow(NV_Ith_S(mParameters, 5), 3)) * (var_Na_Ca_exchanger__K_mCa + NV_Ith_S(mParameters, 3))); // microA_per_microF
        const double var_Na_Ca_exchanger__i_NaCa_converted = HeartConfig::Instance()->GetCapacitance() * var_Na_Ca_exchanger__i_NaCa; // uA_per_cm2
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__intracellular_ion_concentrations__Nai) / var_membrane__F; // millivolt
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 8) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // microA_per_microF
        const double var_fast_sodium_current__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na; // uA_per_cm2
        const double var_slow_activating_delayed_rectifiyer_K_current__E_Ks = var_membrane__R * var_membrane__T * log((NV_Ith_S(mParameters, 4) + 0.018329999999999999 * NV_Ith_S(mParameters, 5)) / (var_chaste_interface__intracellular_ion_concentrations__Ki + 0.018329999999999999 * var_chaste_interface__intracellular_ion_concentrations__Nai)) / var_membrane__F; // millivolt
        const double var_slow_activating_delayed_rectifiyer_K_current__i_Ks = pow(var_chaste_interface__slow_activating_delayed_rectifiyer_K_current_X_ks_gate__X_ks, 2) * (-var_slow_activating_delayed_rectifiyer_K_current__E_Ks + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 13); // microA_per_microF
        const double var_slow_activating_delayed_rectifiyer_K_current__i_Ks_converted = HeartConfig::Instance()->GetCapacitance() * var_slow_activating_delayed_rectifiyer_K_current__i_Ks; // uA_per_cm2
        const double var_time_independent_potassium_current__K_mK1 = 13.0; // millimolar
        const double var_time_independent_potassium_current_K1_gate__K1_infinity_V = 1 / (2.0 + exp(1.5 * (-var_rapid_activating_delayed_rectifiyer_K_current__E_K + var_chaste_interface__membrane__V) * var_membrane__F / (var_membrane__R * var_membrane__T))); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_rapid_activating_delayed_rectifiyer_K_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 4) * NV_Ith_S(mParameters, 11) * var_time_independent_potassium_current_K1_gate__K1_infinity_V / (NV_Ith_S(mParameters, 4) + var_time_independent_potassium_current__K_mK1); // microA_per_microF
        const double var_time_independent_potassium_current__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_time_independent_potassium_current__i_K1; // uA_per_cm2
        const double var_transient_outward_potassium_current__i_to1 = (-var_rapid_activating_delayed_rectifiyer_K_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 15) * var_chaste_interface__transient_outward_potassium_current_X_to1_gate__X_to1 * var_chaste_interface__transient_outward_potassium_current_Y_to1_gate__Y_to1; // microA_per_microF
        const double var_transient_outward_potassium_current__i_to1_converted = HeartConfig::Instance()->GetCapacitance() * var_transient_outward_potassium_current__i_to1; // uA_per_cm2

        N_Vector dqs = N_VNew_Serial(13);
        NV_Ith_S(dqs, 0) = var_RyR_channel__J_rel;
        NV_Ith_S(dqs, 1) = var_L_type_Ca_current__i_Ca_converted;
        NV_Ith_S(dqs, 2) = var_L_type_Ca_current_y_gate__tau_y;
        NV_Ith_S(dqs, 3) = var_fast_sodium_current__i_Na_converted;
        NV_Ith_S(dqs, 4) = var_fast_sodium_current_h_gate__tau_h;
        NV_Ith_S(dqs, 5) = var_fast_sodium_current_j_gate__tau_j;
        NV_Ith_S(dqs, 6) = var_time_independent_potassium_current__i_K1_converted;
        NV_Ith_S(dqs, 7) = var_rapid_activating_delayed_rectifiyer_K_current__i_Kr_converted;
        NV_Ith_S(dqs, 8) = var_slow_activating_delayed_rectifiyer_K_current__i_Ks_converted;
        NV_Ith_S(dqs, 9) = var_Na_Ca_exchanger__i_NaCa_converted;
        NV_Ith_S(dqs, 10) = var_membrane__i_Stim_converted;
        NV_Ith_S(dqs, 11) = var_transient_outward_potassium_current__i_to1_converted;
        NV_Ith_S(dqs, 12) = var_chaste_interface__environment__time_converted;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellwinslow_model_1999FromCellMLCvodeOpt>::Initialise(void)
{
    this->mSystemName = "winslow_model_1999";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // NV_Ith_S(rY, 0):
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-96.1638);

    // NV_Ith_S(rY, 1):
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8e-05);

    // NV_Ith_S(rY, 2):
    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0328302);

    // NV_Ith_S(rY, 3):
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.988354);

    // NV_Ith_S(rY, 4):
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99254);

    // NV_Ith_S(rY, 5):
    this->mVariableNames.push_back("rapid_activating_delayed_rectifiyer_K_current_X_kr_gate__X_kr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.51);

    // NV_Ith_S(rY, 6):
    this->mVariableNames.push_back("slow_activating_delayed_rectifiyer_K_current_X_ks_gate__X_ks");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.264);

    // NV_Ith_S(rY, 7):
    this->mVariableNames.push_back("transient_outward_potassium_current_X_to1_gate__X_to1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.63);

    // NV_Ith_S(rY, 8):
    this->mVariableNames.push_back("transient_outward_potassium_current_Y_to1_gate__Y_to1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99);

    // NV_Ith_S(rY, 9):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.84546e-21);

    // NV_Ith_S(rY, 10):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d2_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 11):
    this->mVariableNames.push_back("L_type_Ca_current__C0");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.997208);

    // NV_Ith_S(rY, 12):
    this->mVariableNames.push_back("L_type_Ca_current__C1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(6.38897e-05);

    // NV_Ith_S(rY, 13):
    this->mVariableNames.push_back("L_type_Ca_current__C2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.535e-09);

    // NV_Ith_S(rY, 14):
    this->mVariableNames.push_back("L_type_Ca_current__C3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.63909e-14);

    // NV_Ith_S(rY, 15):
    this->mVariableNames.push_back("L_type_Ca_current__C4");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(6.56337e-20);

    // NV_Ith_S(rY, 16):
    this->mVariableNames.push_back("L_type_Ca_current__C_Ca0");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00272826);

    // NV_Ith_S(rY, 17):
    this->mVariableNames.push_back("L_type_Ca_current__C_Ca1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(6.99215e-07);

    // NV_Ith_S(rY, 18):
    this->mVariableNames.push_back("L_type_Ca_current__C_Ca2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(6.71989e-11);

    // NV_Ith_S(rY, 19):
    this->mVariableNames.push_back("L_type_Ca_current__C_Ca3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.87031e-15);

    // NV_Ith_S(rY, 20):
    this->mVariableNames.push_back("L_type_Ca_current__C_Ca4");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(4.59752e-20);

    // NV_Ith_S(rY, 21):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.798);

    // NV_Ith_S(rY, 22):
    this->mVariableNames.push_back("RyR_channel__P_O1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 23):
    this->mVariableNames.push_back("RyR_channel__P_O2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 24):
    this->mVariableNames.push_back("RyR_channel__P_C1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.47);

    // NV_Ith_S(rY, 25):
    this->mVariableNames.push_back("RyR_channel__P_C2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.53);

    // NV_Ith_S(rY, 26):
    this->mVariableNames.push_back("intracellular_Ca_fluxes__HTRPNCa");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.98);

    // NV_Ith_S(rY, 27):
    this->mVariableNames.push_back("intracellular_Ca_fluxes__LTRPNCa");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.078);

    // NV_Ith_S(rY, 28):
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(10.0);

    // NV_Ith_S(rY, 29):
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(157.8);

    // NV_Ith_S(rY, 30):
    this->mVariableNames.push_back("dyadic_space_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.00011);

    // NV_Ith_S(rY, 31):
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.257);

    // NV_Ith_S(rY, 32):
    this->mVariableNames.push_back("NSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.257);

    // mParameters[0]:
    this->mParameterNames.push_back("SR_release_current_max");
    this->mParameterUnits.push_back("per_second");

    // mParameters[1]:
    this->mParameterNames.push_back("SR_uptake_current_max");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[2]:
    this->mParameterNames.push_back("concentration_clamp_onoff");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[3]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[4]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[5]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[6]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("cm_per_second");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_capacitance");
    this->mParameterUnits.push_back("microF_per_cm2");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_reduced_inactivation");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_shift_inactivation");
    this->mParameterUnits.push_back("millivolt");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[12]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[13]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[14]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("microA_per_microF");

    // mParameters[15]:
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("SR_release_current");
    this->mDerivedQuantityUnits.push_back("millimolar_per_second");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current_f_gate_tau");
    this->mDerivedQuantityUnits.push_back("second");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_h_gate_tau");
    this->mDerivedQuantityUnits.push_back("second");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_j_gate_tau");
    this->mDerivedQuantityUnits.push_back("second");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [10]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [11]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [12]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellwinslow_model_1999FromCellMLCvodeOpt)

#endif // CHASTE_CVODE
