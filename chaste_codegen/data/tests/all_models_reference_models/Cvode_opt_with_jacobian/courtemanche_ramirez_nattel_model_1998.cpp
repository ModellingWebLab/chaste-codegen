#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: courtemanche_ramirez_nattel_model_1998
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: AnalyticCvodeOpt)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "courtemanche_ramirez_nattel_model_1998.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt_LookupTables : public AbstractLookupTableCollection
{
public:
    static Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt_LookupTables);
        }
        return mpInstance.get();
    }

    void FreeMemory()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }

    // Row lookup methods
    // using linear-interpolation

    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<30; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }


    const double * IndexTable0(double var_chaste_interface__membrane__V)
    {
        const double _offset_0 = var_chaste_interface__membrane__V - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }


// LCOV_EXCL_START
    bool CheckIndex0(double& var_chaste_interface__membrane__V)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__membrane__V>mTableMaxs[0] || var_chaste_interface__membrane__V<mTableMins[0])
        {
// LCOV_EXCL_START
            _oob_0 = true;
// LCOV_EXCL_STOP
        }
        return _oob_0;
    }
// LCOV_EXCL_STOP

    ~Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt_LookupTables()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

    }

protected:
    Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt_LookupTables(const Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt_LookupTables&);
    Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt_LookupTables& operator= (const Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt_LookupTables&);
    Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);

        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 30;
        mTableMins[0] = -250.0001;
        mTableMaxs[0] = 549.9999;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;

        Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt_LookupTables::RegenerateTables();
    }

    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);


        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][30];

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][0] = exp(0.013102317305629283 * var_chaste_interface__membrane__V);
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][1] = exp(-0.024332874996168673 * var_chaste_interface__membrane__V);
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][2] = 1 / (1.0 + 0.10000000000000001 * exp(-0.024332874996168673 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][3] = 1 / (1.0 + 0.1245 * exp(-0.0037435192301797956 * var_chaste_interface__membrane__V) + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(2.0802377414561666)) * exp(-0.037435192301797954 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][4] = 1 / (1.0 + exp(0.66964285714285721 + 0.044642857142857144 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][5] = 1 / (1.0 + exp(5.6000000000000005 + 0.070000000000000007 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][6] = 0.0050000000000000001 + 0.050000000000000003 / (1.0 + exp(1.1538461538461537 - 0.076923076923076927 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][7] = -1 / (1.0 + exp(2.3529411764705883 - 0.058823529411764705 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][8] = ((fabs(-7.9000000000000004 + var_chaste_interface__membrane__V) < 1.0e-10) ? (1.0833333333333333) : (0.16666666666666666 * (1.0 + 0.29999999999999999 * exp(1.5800000000000001 - 0.20000000000000001 * var_chaste_interface__membrane__V)) * (-7.9000000000000004 + var_chaste_interface__membrane__V) / (1.0 - exp(1.5800000000000001 - 0.20000000000000001 * var_chaste_interface__membrane__V))));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][9] = 1 / (1.0 + exp(-1.25 - 0.125 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][10] = ((fabs(10.0 + var_chaste_interface__membrane__V) < 1.0e-10) ? (0.21838829438742086 + 0.21838829438742086 * exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V)) : (0.035000000000000003 * (1.0 + exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V)) * (10.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V))));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][11] = exp(-4.057971014492753 - 0.14492753623188406 * var_chaste_interface__membrane__V) / (1.0 + exp(-4.057971014492753 - 0.14492753623188406 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][12] = 0.0022222222222222222 + 0.0021888888888888887 * exp(-0.113569 * pow((1 + 0.10000000000000001 * var_chaste_interface__membrane__V), 2));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][13] = ((var_chaste_interface__membrane__V < -40.0) ? (0.13500000000000001 * exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__membrane__V)) : (0));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][14] = ((var_chaste_interface__membrane__V < -40.0) ? (310000.0 * exp(0.34999999999999998 * var_chaste_interface__membrane__V) + 3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__membrane__V)) : (7.6923076923076916 / (1.0 + exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__membrane__V))));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][15] = ((var_chaste_interface__membrane__V < -40.0) ? ((37.780000000000001 + var_chaste_interface__membrane__V) * (-127140.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__V) - 3.4740000000000003e-5 * exp(-0.043909999999999998 * var_chaste_interface__membrane__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V))) : (0));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][16] = ((var_chaste_interface__membrane__V < -40.0) ? (0.1212 * exp(-0.01052 * var_chaste_interface__membrane__V) / (1.0 + exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__membrane__V))) : (0.29999999999999999 * exp(-2.5349999999999999e-7 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.2000000000000002 - 0.10000000000000001 * var_chaste_interface__membrane__V))));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][17] = ((var_chaste_interface__membrane__V == (-47.130000000000003)) ? (3.2000000000000002) : (0.32000000000000001 * (47.130000000000003 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.7130000000000001 - 0.10000000000000001 * var_chaste_interface__membrane__V))));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][18] = 0.080000000000000002 * exp(-0.090909090909090912 * var_chaste_interface__membrane__V);
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][19] = 1 / (1.0 + exp(-2.1692307692307691 - 0.15384615384615385 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][20] = ((fabs(14.1 + var_chaste_interface__membrane__V) < 1.0e-10) ? (0.0015) : (0.00029999999999999997 * (14.1 + var_chaste_interface__membrane__V) / (1.0 - exp(-2.8199999999999998 - 0.20000000000000001 * var_chaste_interface__membrane__V)))) + ((fabs(-3.3328000000000002 + var_chaste_interface__membrane__V) < 1.0e-10) ? (0.00037836118) : (7.3898000000000003e-5 * (-3.3328000000000002 + var_chaste_interface__membrane__V) / (-1.0 + exp(-0.65046743564221166 + 0.19517145812596365 * var_chaste_interface__membrane__V))));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][21] = pow((1.0 + exp(1.5669291338582676 - 0.07874015748031496 * var_chaste_interface__membrane__V)), (-0.5));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][22] = 2.0 * ((fabs(-19.899999999999999 + var_chaste_interface__membrane__V) < 1.0e-10) ? (0.00068000000000000005) : (4.0000000000000003e-5 * (-19.899999999999999 + var_chaste_interface__membrane__V) / (1.0 - exp(1.1705882352941175 - 0.058823529411764705 * var_chaste_interface__membrane__V)))) + 2.0 * ((fabs(-19.899999999999999 + var_chaste_interface__membrane__V) < 1.0e-10) ? (0.00031500000000000001) : (3.4999999999999997e-5 * (-19.899999999999999 + var_chaste_interface__membrane__V) / (-1.0 + exp(-2.2111111111111108 + 0.1111111111111111 * var_chaste_interface__membrane__V))));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][23] = 1 / (1.0 + exp(-1.1670467502850628 - 0.057012542759407071 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][24] = 1.9500000000000002 / (2.5 + exp(4.8235294117647056 + 0.058823529411764705 * var_chaste_interface__membrane__V)) + 1.9500000000000002 / (exp(0.50847457627118642 - 0.016949152542372881 * var_chaste_interface__membrane__V) + exp(-1.1764705882352942 - 0.11764705882352941 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][25] = 1 / (1.0 + exp(8.1320754716981138 + 0.18867924528301888 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][26] = 3.0 / (35.560000000000002 + exp(-0.16935483870967738 - 0.13440860215053763 * var_chaste_interface__membrane__V)) + 3.0 / (18.530000000000001 + exp(10.383561643835618 + 0.091324200913242018 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][27] = 1 / (1.0 + exp(-3.15625 - 0.10416666666666667 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][28] = 1 / (1.0 + exp(-3.6189956331877728 + 0.036390101892285295 * var_chaste_interface__membrane__V));
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][29] = 3.0 / (21.0 + exp(6.6071428571428568 - 0.035714285714285712 * var_chaste_interface__membrane__V)) + 3.0 / exp(9.875 - 0.0625 * var_chaste_interface__membrane__V);
            }

            mNeedsRegeneration[0] = false;
        }

        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }

private:
    /** The single instance of the class */
    static std::shared_ptr<Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[30];

    // Lookup tables
    double (*_lookup_table_0)[30];

};

std::shared_ptr<Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt_LookupTables> Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt_LookupTables::mpInstance;

    boost::shared_ptr<RegularStimulus> Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__stim_amplitude_converted = -2000.0 * HeartConfig::Instance()->GetCapacitance() / NV_Ith_S(mParameters, 0); // uA_per_cm2
        const double var_chaste_interface__membrane__stim_duration = 2.0; // millisecond
        const double var_chaste_interface__membrane__stim_period = 1000.0; // millisecond
        const double var_chaste_interface__membrane__stim_start = 50.0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__stim_amplitude_converted),
                var_chaste_interface__membrane__stim_duration,
                var_chaste_interface__membrane__stim_period,
                var_chaste_interface__membrane__stim_start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }

    Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt::Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                21,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
        
        NV_Ith_S(this->mParameters, 0) = 100.0; // (var_membrane__Cm) [picoF]
    }

    Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt::~Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt()
    {
    }

    AbstractLookupTableCollection* Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt::GetLookupTableCollection()
    {
        return Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt_LookupTables::Instance();
    }
    
    double Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -81.18
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.002908
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.9649
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.9775
        double var_chaste_interface__transient_outward_K_current_oa_gate__oa = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.03043
        double var_chaste_interface__transient_outward_K_current_oi_gate__oi = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.9992
        double var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.004966
        double var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.9986
        double var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 3.296e-05
        double var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.01869
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.0001367
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.9996
        double var_chaste_interface__L_type_Ca_channel_f_Ca_gate__f_Ca = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.7755
        double var_chaste_interface__intracellular_ion_concentrations__Na_i = NV_Ith_S(rY, 16);
        // Units: millimolar; Initial value: 11.17
        double var_chaste_interface__intracellular_ion_concentrations__Ca_i = NV_Ith_S(rY, 17);
        // Units: millimolar; Initial value: 0.0001013
        double var_chaste_interface__intracellular_ion_concentrations__K_i = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 139.0
        
        // Lookup table indexing
        const bool _oob_0 = Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        const double var_L_type_Ca_channel__i_Ca_L = 0.12375 * (-65.0 + var_chaste_interface__membrane__V) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f * NV_Ith_S(mParameters, 0); // picoA
        const double var_sarcolemmal_calcium_pump_current__i_CaP = 0.27500000000000002 * var_chaste_interface__intracellular_ion_concentrations__Ca_i * NV_Ith_S(mParameters, 0) / (0.00050000000000000001 + var_chaste_interface__intracellular_ion_concentrations__Ca_i); // picoA
        const double var_background_currents__i_B_Ca = 0.0011310000000000001 * (-13.356415961992688 * log(1.8 / var_chaste_interface__intracellular_ion_concentrations__Ca_i) + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 0); // picoA
        const double var_Na_Ca_exchanger_current__i_NaCa = 0.00014738024843876965 * _lt_0_row[2] * (1.8 * pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * _lt_0_row[0] - 2744000.0 * var_chaste_interface__intracellular_ion_concentrations__Ca_i * _lt_0_row[1]) * NV_Ith_S(mParameters, 0); // picoA
        const double var_fast_sodium_current__E_Na = 26.712831923985377 * log(140.0 / var_chaste_interface__intracellular_ion_concentrations__Na_i); // millivolt
        const double var_background_currents__i_B_Na = 0.00067443750000000002 * (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 0); // picoA
        const double var_fast_sodium_current__i_Na = 7.7999999999999998 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j * NV_Ith_S(mParameters, 0); // picoA
        const double var_sodium_potassium_pump__i_NaK = 0.46904770956521741 * _lt_0_row[3] * NV_Ith_S(mParameters, 0) / (1.0 + 31.622776601683793 * pow(1 / var_chaste_interface__intracellular_ion_concentrations__Na_i, 1.5)); // picoA
        const double var_time_independent_potassium_current__E_K = 26.712831923985377 * log(5.4000000000000004 / var_chaste_interface__intracellular_ion_concentrations__K_i); // millivolt
        const double var_rapid_delayed_rectifier_K_current__i_Kr = 0.029411764999999999 * _lt_0_row[4] * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 0) * var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr; // picoA
        const double var_slow_delayed_rectifier_K_current__i_Ks = 0.12941175999999999 * pow(var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs, 2) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 0); // picoA
        const double var_time_independent_potassium_current__i_K1 = 0.089999999999999997 * _lt_0_row[5] * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 0); // picoA
        const double var_transient_outward_K_current__i_to = 0.16520000000000001 * pow(var_chaste_interface__transient_outward_K_current_oa_gate__oa, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 0) * var_chaste_interface__transient_outward_K_current_oi_gate__oi; // picoA
        const double var_ultrarapid_delayed_rectifier_K_current__i_Kur = pow(var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua, 3) * (_lt_0_row[6]) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 0) * var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui; // picoA
        const double var_chaste_interface__i_ionic = (var_L_type_Ca_channel__i_Ca_L + var_Na_Ca_exchanger_current__i_NaCa + var_background_currents__i_B_Ca + var_background_currents__i_B_Na + var_fast_sodium_current__i_Na + var_rapid_delayed_rectifier_K_current__i_Kr + var_sarcolemmal_calcium_pump_current__i_CaP + var_slow_delayed_rectifier_K_current__i_Ks + var_sodium_potassium_pump__i_NaK + var_time_independent_potassium_current__i_K1 + var_transient_outward_K_current__i_to + var_ultrarapid_delayed_rectifier_K_current__i_Kur) * HeartConfig::Instance()->GetCapacitance() / NV_Ith_S(mParameters, 0); // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt::EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -81.18
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.002908
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.9649
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.9775
        double var_chaste_interface__transient_outward_K_current_oa_gate__oa = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.03043
        double var_chaste_interface__transient_outward_K_current_oi_gate__oi = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.9992
        double var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.004966
        double var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.9986
        double var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 3.296e-05
        double var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.01869
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.0001367
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.9996
        double var_chaste_interface__L_type_Ca_channel_f_Ca_gate__f_Ca = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.7755
        double var_chaste_interface__Ca_release_current_from_JSR_u_gate__u = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 2.35e-112
        double var_chaste_interface__Ca_release_current_from_JSR_v_gate__v = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ca_release_current_from_JSR_w_gate__w = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.9992
        double var_chaste_interface__intracellular_ion_concentrations__Na_i = NV_Ith_S(rY, 16);
        // Units: millimolar; Initial value: 11.17
        double var_chaste_interface__intracellular_ion_concentrations__Ca_i = NV_Ith_S(rY, 17);
        // Units: millimolar; Initial value: 0.0001013
        double var_chaste_interface__intracellular_ion_concentrations__K_i = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 139.0
        double var_chaste_interface__intracellular_ion_concentrations__Ca_rel = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 1.488
        double var_chaste_interface__intracellular_ion_concentrations__Ca_up = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 1.488

        // Lookup table indexing
        const bool _oob_0 = Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        double d_dt_chaste_interface_var_membrane__V;
        const double var_Ca_uptake_current_by_the_NSR__i_up = 0.0050000000000000001 / (1.0 + 0.00092000000000000003 / var_chaste_interface__intracellular_ion_concentrations__Ca_i); // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_L_type_Ca_channel_f_Ca_gate__f_Ca = 0.5 / (1.0 + 2857.1428571428573 * var_chaste_interface__intracellular_ion_concentrations__Ca_i) - 0.5 * var_chaste_interface__L_type_Ca_channel_f_Ca_gate__f_Ca; // 1 / millisecond
        const double var_Ca_release_current_from_JSR__i_rel = 30.0 * pow(var_chaste_interface__Ca_release_current_from_JSR_u_gate__u, 2) * (-var_chaste_interface__intracellular_ion_concentrations__Ca_i + var_chaste_interface__intracellular_ion_concentrations__Ca_rel) * var_chaste_interface__Ca_release_current_from_JSR_v_gate__v * var_chaste_interface__Ca_release_current_from_JSR_w_gate__w; // millimolar_per_millisecond
        const double var_Ca_leak_current_by_the_NSR__i_up_leak = 0.00033333333333333332 * var_chaste_interface__intracellular_ion_concentrations__Ca_up; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_Ca_release_current_from_JSR_w_gate__w = (1.0 + _lt_0_row[7] - var_chaste_interface__Ca_release_current_from_JSR_w_gate__w) * _lt_0_row[8]; // 1 / millisecond
        const double var_L_type_Ca_channel__i_Ca_L = 0.12375 * (-65.0 + var_chaste_interface__membrane__V) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f * NV_Ith_S(mParameters, 0); // picoA
        const double d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d = (_lt_0_row[9] - var_chaste_interface__L_type_Ca_channel_d_gate__d) * _lt_0_row[10]; // 1 / millisecond
        const double d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f = (_lt_0_row[12]) * (-var_chaste_interface__L_type_Ca_channel_f_gate__f + _lt_0_row[11]); // 1 / millisecond
        const double var_fast_sodium_current_h_gate__alpha_h = _lt_0_row[13]; // per_millisecond
        const double var_fast_sodium_current_h_gate__beta_h = _lt_0_row[14]; // per_millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_h_gate__h = (-var_chaste_interface__fast_sodium_current_h_gate__h + var_fast_sodium_current_h_gate__alpha_h / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h)) * (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h); // 1 / millisecond
        const double var_fast_sodium_current_j_gate__alpha_j = _lt_0_row[15]; // per_millisecond
        const double var_fast_sodium_current_j_gate__beta_j = _lt_0_row[16]; // per_millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_j_gate__j = (-var_chaste_interface__fast_sodium_current_j_gate__j + var_fast_sodium_current_j_gate__alpha_j / (var_fast_sodium_current_j_gate__alpha_j + var_fast_sodium_current_j_gate__beta_j)) * (var_fast_sodium_current_j_gate__alpha_j + var_fast_sodium_current_j_gate__beta_j); // 1 / millisecond
        const double var_fast_sodium_current_m_gate__alpha_m = _lt_0_row[17]; // per_millisecond
        const double var_fast_sodium_current_m_gate__beta_m = _lt_0_row[18]; // per_millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_m_gate__m = (-var_chaste_interface__fast_sodium_current_m_gate__m + var_fast_sodium_current_m_gate__alpha_m / (var_fast_sodium_current_m_gate__alpha_m + var_fast_sodium_current_m_gate__beta_m)) * (var_fast_sodium_current_m_gate__alpha_m + var_fast_sodium_current_m_gate__beta_m); // 1 / millisecond
        const double d_dt_chaste_interface_var_rapid_delayed_rectifier_K_current_xr_gate__xr = (_lt_0_row[19] - var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr) * (_lt_0_row[20]); // 1 / millisecond
        const double var_sarcolemmal_calcium_pump_current__i_CaP = 0.27500000000000002 * var_chaste_interface__intracellular_ion_concentrations__Ca_i * NV_Ith_S(mParameters, 0) / (0.00050000000000000001 + var_chaste_interface__intracellular_ion_concentrations__Ca_i); // picoA
        const double d_dt_chaste_interface_var_slow_delayed_rectifier_K_current_xs_gate__xs = (_lt_0_row[21] - var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs) * (_lt_0_row[22]); // 1 / millisecond
        const double var_background_currents__i_B_Ca = 0.0011310000000000001 * (-13.356415961992688 * log(1.8 / var_chaste_interface__intracellular_ion_concentrations__Ca_i) + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 0); // picoA
        const double var_Na_Ca_exchanger_current__i_NaCa = 0.00014738024843876965 * _lt_0_row[2] * (1.8 * pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * _lt_0_row[0] - 2744000.0 * var_chaste_interface__intracellular_ion_concentrations__Ca_i * _lt_0_row[1]) * NV_Ith_S(mParameters, 0); // picoA
        const double var_Ca_release_current_from_JSR__Fn = 9.6479999999999999e-11 * var_Ca_release_current_from_JSR__i_rel + 1.0364122723649997e-15 * var_Na_Ca_exchanger_current__i_NaCa - 2.5910306809124992e-15 * var_L_type_Ca_channel__i_Ca_L; // dimensionless
        const double d_dt_chaste_interface_var_Ca_release_current_from_JSR_u_gate__u = 0.125 / (1.0 + exp(250.0 - 731528895391368.0 * var_Ca_release_current_from_JSR__Fn)) - 0.125 * var_chaste_interface__Ca_release_current_from_JSR_u_gate__u; // 1 / millisecond
        const double d_dt_chaste_interface_var_Ca_release_current_from_JSR_v_gate__v = (1.0 - 1 / (1.0 + exp(50.0 - 731528895391368.0 * var_Ca_release_current_from_JSR__Fn)) - var_chaste_interface__Ca_release_current_from_JSR_v_gate__v) / (1.9099999999999999 + 2.0899999999999999 / (1.0 + exp(250.0 - 731528895391368.0 * var_Ca_release_current_from_JSR__Fn))); // 1 / millisecond
        const double var_fast_sodium_current__E_Na = 26.712831923985377 * log(140.0 / var_chaste_interface__intracellular_ion_concentrations__Na_i); // millivolt
        const double var_background_currents__i_B_Na = 0.00067443750000000002 * (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 0); // picoA
        const double var_fast_sodium_current__i_Na = 7.7999999999999998 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j * NV_Ith_S(mParameters, 0); // picoA
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__Ca_i = (0.081176470588235281 * var_Ca_leak_current_by_the_NSR__i_up_leak + 0.0070588235294117632 * var_Ca_release_current_from_JSR__i_rel + 7.5827646500219453e-7 * var_Na_Ca_exchanger_current__i_NaCa - 0.081176470588235281 * var_Ca_uptake_current_by_the_NSR__i_up - 3.7913823250109726e-7 * var_L_type_Ca_channel__i_Ca_L - 3.7913823250109726e-7 * var_background_currents__i_B_Ca - 3.7913823250109726e-7 * var_sarcolemmal_calcium_pump_current__i_CaP) / (1.0 + 0.00011900000000000002 / pow((0.0023800000000000002 + var_chaste_interface__intracellular_ion_concentrations__Ca_i), 2) + 3.5000000000000004e-5 / pow((0.00050000000000000001 + var_chaste_interface__intracellular_ion_concentrations__Ca_i), 2)); // millimolar / millisecond
        const double var_sodium_potassium_pump__i_NaK = 0.46904770956521741 * _lt_0_row[3] * NV_Ith_S(mParameters, 0) / (1.0 + 31.622776601683793 * pow(1 / var_chaste_interface__intracellular_ion_concentrations__Na_i, 1.5)); // picoA
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__Na_i = -2.2748293950065834e-6 * var_Na_Ca_exchanger_current__i_NaCa - 2.2748293950065834e-6 * var_sodium_potassium_pump__i_NaK - 7.5827646500219453e-7 * var_background_currents__i_B_Na - 7.5827646500219453e-7 * var_fast_sodium_current__i_Na; // millimolar / millisecond
        const double var_time_independent_potassium_current__E_K = 26.712831923985377 * log(5.4000000000000004 / var_chaste_interface__intracellular_ion_concentrations__K_i); // millivolt
        const double var_rapid_delayed_rectifier_K_current__i_Kr = 0.029411764999999999 * _lt_0_row[4] * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 0) * var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr; // picoA
        const double var_slow_delayed_rectifier_K_current__i_Ks = 0.12941175999999999 * pow(var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs, 2) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 0); // picoA
        const double var_time_independent_potassium_current__i_K1 = 0.089999999999999997 * _lt_0_row[5] * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 0); // picoA
        const double var_transfer_current_from_NSR_to_JSR__i_tr = 0.0055555555555555558 * var_chaste_interface__intracellular_ion_concentrations__Ca_up - 0.0055555555555555558 * var_chaste_interface__intracellular_ion_concentrations__Ca_rel; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__Ca_rel = (-var_Ca_release_current_from_JSR__i_rel + var_transfer_current_from_NSR_to_JSR__i_tr) / (1.0 + 8.0 / pow((0.80000000000000004 + var_chaste_interface__intracellular_ion_concentrations__Ca_rel), 2)); // millimolar / millisecond
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__Ca_up = -var_Ca_leak_current_by_the_NSR__i_up_leak - 0.086956521739130432 * var_transfer_current_from_NSR_to_JSR__i_tr + var_Ca_uptake_current_by_the_NSR__i_up; // millimolar / millisecond
        const double d_dt_chaste_interface_var_transient_outward_K_current_oa_gate__oa = (_lt_0_row[23] - var_chaste_interface__transient_outward_K_current_oa_gate__oa) * (_lt_0_row[24]); // 1 / millisecond
        const double var_transient_outward_K_current__i_to = 0.16520000000000001 * pow(var_chaste_interface__transient_outward_K_current_oa_gate__oa, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 0) * var_chaste_interface__transient_outward_K_current_oi_gate__oi; // picoA
        const double d_dt_chaste_interface_var_transient_outward_K_current_oi_gate__oi = (_lt_0_row[25] - var_chaste_interface__transient_outward_K_current_oi_gate__oi) * (_lt_0_row[26]); // 1 / millisecond
        const double d_dt_chaste_interface_var_ultrarapid_delayed_rectifier_K_current_ua_gate__ua = (_lt_0_row[27] - var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua) * (_lt_0_row[24]); // 1 / millisecond
        const double var_ultrarapid_delayed_rectifier_K_current__i_Kur = pow(var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua, 3) * (_lt_0_row[6]) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 0) * var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui; // picoA
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__K_i = 1.5165529300043891e-6 * var_sodium_potassium_pump__i_NaK - 7.5827646500219453e-7 * var_rapid_delayed_rectifier_K_current__i_Kr - 7.5827646500219453e-7 * var_slow_delayed_rectifier_K_current__i_Ks - 7.5827646500219453e-7 * var_time_independent_potassium_current__i_K1 - 7.5827646500219453e-7 * var_transient_outward_K_current__i_to - 7.5827646500219453e-7 * var_ultrarapid_delayed_rectifier_K_current__i_Kur; // millimolar / millisecond
        const double d_dt_chaste_interface_var_ultrarapid_delayed_rectifier_K_current_ui_gate__ui = (_lt_0_row[28] - var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui) * (_lt_0_row[29]); // 1 / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_membrane__V = 0.0;
        }
        else
        {
            d_dt_chaste_interface_var_membrane__V = (-var_L_type_Ca_channel__i_Ca_L - var_Na_Ca_exchanger_current__i_NaCa - var_background_currents__i_B_Ca - var_background_currents__i_B_Na - var_fast_sodium_current__i_Na - var_rapid_delayed_rectifier_K_current__i_Kr - var_sarcolemmal_calcium_pump_current__i_CaP - var_slow_delayed_rectifier_K_current__i_Ks - var_sodium_potassium_pump__i_NaK - var_time_independent_potassium_current__i_K1 - var_transient_outward_K_current__i_to - var_ultrarapid_delayed_rectifier_K_current__i_Kur - 1.0 * GetIntracellularAreaStimulus(var_chaste_interface__environment__time) * NV_Ith_S(mParameters, 0) / HeartConfig::Instance()->GetCapacitance()) / NV_Ith_S(mParameters, 0); // millivolt / millisecond
        }
        
        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_membrane__V;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_fast_sodium_current_m_gate__m;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_fast_sodium_current_h_gate__h;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_fast_sodium_current_j_gate__j;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_transient_outward_K_current_oa_gate__oa;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_transient_outward_K_current_oi_gate__oi;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_ultrarapid_delayed_rectifier_K_current_ua_gate__ua;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_ultrarapid_delayed_rectifier_K_current_ui_gate__ui;
        NV_Ith_S(rDY,8) = d_dt_chaste_interface_var_rapid_delayed_rectifier_K_current_xr_gate__xr;
        NV_Ith_S(rDY,9) = d_dt_chaste_interface_var_slow_delayed_rectifier_K_current_xs_gate__xs;
        NV_Ith_S(rDY,10) = d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d;
        NV_Ith_S(rDY,11) = d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f;
        NV_Ith_S(rDY,12) = d_dt_chaste_interface_var_L_type_Ca_channel_f_Ca_gate__f_Ca;
        NV_Ith_S(rDY,13) = d_dt_chaste_interface_var_Ca_release_current_from_JSR_u_gate__u;
        NV_Ith_S(rDY,14) = d_dt_chaste_interface_var_Ca_release_current_from_JSR_v_gate__v;
        NV_Ith_S(rDY,15) = d_dt_chaste_interface_var_Ca_release_current_from_JSR_w_gate__w;
        NV_Ith_S(rDY,16) = d_dt_chaste_interface_var_intracellular_ion_concentrations__Na_i;
        NV_Ith_S(rDY,17) = d_dt_chaste_interface_var_intracellular_ion_concentrations__Ca_i;
        NV_Ith_S(rDY,18) = d_dt_chaste_interface_var_intracellular_ion_concentrations__K_i;
        NV_Ith_S(rDY,19) = d_dt_chaste_interface_var_intracellular_ion_concentrations__Ca_rel;
        NV_Ith_S(rDY,20) = d_dt_chaste_interface_var_intracellular_ion_concentrations__Ca_up;
    }

    void Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -81.18
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.002908
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.9649
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.9775
        double var_chaste_interface__transient_outward_K_current_oa_gate__oa = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.03043
        double var_chaste_interface__transient_outward_K_current_oi_gate__oi = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.9992
        double var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.004966
        double var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.9986
        double var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 3.296e-05
        double var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.01869
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.0001367
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.9996
        double var_chaste_interface__L_type_Ca_channel_f_Ca_gate__f_Ca = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.7755
        double var_chaste_interface__Ca_release_current_from_JSR_u_gate__u = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 2.35e-112
        double var_chaste_interface__Ca_release_current_from_JSR_v_gate__v = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ca_release_current_from_JSR_w_gate__w = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.9992
        double var_chaste_interface__intracellular_ion_concentrations__Na_i = NV_Ith_S(rY, 16);
        // Units: millimolar; Initial value: 11.17
        double var_chaste_interface__intracellular_ion_concentrations__Ca_i = NV_Ith_S(rY, 17);
        // Units: millimolar; Initial value: 0.0001013
        double var_chaste_interface__intracellular_ion_concentrations__K_i = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 139.0
        double var_chaste_interface__intracellular_ion_concentrations__Ca_rel = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 1.488
        double var_chaste_interface__intracellular_ion_concentrations__Ca_up = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 1.488
        
        // Lookup table indexing
        const bool _oob_0 = Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);
const double var_x0 = 1 / NV_Ith_S(mParameters, 0);
        const double var_x1 = pow(var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs, 2) * NV_Ith_S(mParameters, 0);
        const double var_x2 = exp(5.6000000000000005 + 0.070000000000000007 * var_chaste_interface__membrane__V);
        const double var_x3 = 1.0 + var_x2;
        const double var_x4 = NV_Ith_S(mParameters, 0) / var_x3;
        const double var_x5 = pow(var_chaste_interface__transient_outward_K_current_oa_gate__oa, 3);
        const double var_x6 = 0.16520000000000001 * var_x5;
        const double var_x7 = NV_Ith_S(mParameters, 0) * var_chaste_interface__transient_outward_K_current_oi_gate__oi;
        const double var_x8 = exp(0.66964285714285721 + 0.044642857142857144 * var_chaste_interface__membrane__V);
        const double var_x9 = 1.0 + var_x8;
        const double var_x10 = 1 / var_x9;
        const double var_x11 = 0.029411764999999999 * var_x10;
        const double var_x12 = NV_Ith_S(mParameters, 0) * var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr;
        const double var_x13 = _lt_0_row[1];
        const double var_x14 = var_x13 * var_chaste_interface__intracellular_ion_concentrations__Ca_i;
        const double var_x15 = _lt_0_row[0];
        const double var_x16 = var_x15 * pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3);
        const double var_x17 = 1.0 + 0.10000000000000001 * var_x13;
        const double var_x18 = NV_Ith_S(mParameters, 0) / var_x17;
        const double var_x19 = var_x18 * (66769.408989486838 * var_x14 + 0.023584171150132709 * var_x16);
        const double var_x20 = pow(var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua, 3);
        const double var_x21 = exp(1.1538461538461537 - 0.076923076923076927 * var_chaste_interface__membrane__V);
        const double var_x22 = 1.0 + var_x21;
        const double var_x23 = 0.0050000000000000001 + 0.050000000000000003 / var_x22;
        const double var_x24 = var_x20 * var_x23;
        const double var_x25 = NV_Ith_S(mParameters, 0) * var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui;
        const double var_x26 = var_x24 * var_x25;
        const double var_x27 = 1 / var_chaste_interface__intracellular_ion_concentrations__K_i;
        const double var_x28 = -26.712831923985377 * log(5.4000000000000004 * var_x27) + var_chaste_interface__membrane__V;
        const double var_x29 = var_x28 * NV_Ith_S(mParameters, 0);
        const double var_x30 = var_x2 * var_x29 / pow(var_x3, 2);
        const double var_x31 = var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f;
        const double var_x32 = var_chaste_interface__L_type_Ca_channel_f_Ca_gate__f_Ca * NV_Ith_S(mParameters, 0);
        const double var_x33 = var_x31 * var_x32;
        const double var_x34 = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3);
        const double var_x35 = 7.7999999999999998 * var_x34;
        const double var_x36 = var_x35 * var_chaste_interface__fast_sodium_current_h_gate__h;
        const double var_x37 = var_chaste_interface__fast_sodium_current_j_gate__j * NV_Ith_S(mParameters, 0);
        const double var_x38 = 1 / var_chaste_interface__intracellular_ion_concentrations__Na_i;
        const double var_x39 = pow(var_x38, 1.5);
        const double var_x40 = exp(-0.0037435192301797956 * var_chaste_interface__membrane__V);
        const double var_x41 = exp(2.0802377414561666);
        const double var_x42 = exp(-0.037435192301797954 * var_chaste_interface__membrane__V);
        const double var_x43 = 1.0 + 0.1245 * var_x40 + 0.036499999999999998 * var_x42 * (-0.14285714285714285 + 0.14285714285714285 * var_x41);
        const double var_x44 = (0.00046606814415738453 * var_x40 + 0.037435192301797954 * var_x42 * (-0.0052142857142857138 + 0.0052142857142857138 * var_x41)) * NV_Ith_S(mParameters, 0) / (pow(var_x43, 2) * (1.0 + 31.622776601683793 * var_x39));
        const double var_x45 = 1.8 * var_x16 - 2744000.0 * var_x14;
        const double var_x46 = var_x13 * var_x45 * NV_Ith_S(mParameters, 0) / pow(var_x17, 2);
        const double var_x47 = var_x12 * var_x28 * var_x8 / pow(var_x9, 2);
        const double var_x48 = var_x20 * var_x21 * var_x25 * var_x28 / pow(var_x22, 2);
        const double var_x49 = -26.712831923985377 * log(140.0 * var_x38) + var_chaste_interface__membrane__V;
        const double var_x50 = var_x49 * var_chaste_interface__fast_sodium_current_j_gate__j;
        const double var_x51 = var_x50 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 2) * var_chaste_interface__fast_sodium_current_h_gate__h;
        const double var_x52 = var_x28 * pow(var_chaste_interface__transient_outward_K_current_oa_gate__oa, 2);
        const double var_x53 = var_x23 * var_x28 * pow(var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua, 2);
        const double var_x54 = var_x24 * var_x28;
        const double var_x55 = var_x28 * var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs;
        const double var_x56 = 8.0437499999999993 - 0.12375 * var_chaste_interface__membrane__V;
        const double var_x57 = var_x56 * var_chaste_interface__L_type_Ca_channel_f_Ca_gate__f_Ca;
        const double var_x58 = var_x38 * NV_Ith_S(mParameters, 0);
        const double var_x59 = var_x15 * var_x18 * pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 2);
        const double var_x60 = var_x34 * var_x58 * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j;
        const double var_x61 = var_x39 * var_x58 / (var_x43 * pow((0.031622776601683791 + var_x39), 2));
        const double var_x62 = 0.00050000000000000001 + var_chaste_interface__intracellular_ion_concentrations__Ca_i;
        const double var_x63 = NV_Ith_S(mParameters, 0) / var_x62;
        const double var_x64 = 1 / var_chaste_interface__intracellular_ion_concentrations__Ca_i;
        const double var_x65 = var_x64 * NV_Ith_S(mParameters, 0);
        const double var_x66 = pow(var_x62, (-2));
        const double var_x67 = var_x66 * var_chaste_interface__intracellular_ion_concentrations__Ca_i * NV_Ith_S(mParameters, 0);
        const double var_x68 = var_x13 * var_x18;
        const double var_x69 = var_x1 * var_x27;
        const double var_x70 = var_x27 * var_x4;
        const double var_x71 = var_x10 * var_x12 * var_x27;
        const double var_x72 = var_x27 * var_x5 * var_x7;
        const double var_x73 = var_x26 * var_x27;
        const double var_x74 = exp(-0.090909090909090912 * var_chaste_interface__membrane__V);
        const double var_x75 = 0.080000000000000002 * var_x74;
        const double var_x76 = var_chaste_interface__membrane__V == (-47.130000000000003);
        const double var_x77 = 47.130000000000003 + var_chaste_interface__membrane__V;
        const double var_x78 = -0.10000000000000001 * var_chaste_interface__membrane__V;
        const double var_x79 = exp(-4.7130000000000001 + var_x78);
        const double var_x80 = 1.0 - var_x79;
        const double var_x81 = 0.32000000000000001 / var_x80;
        const double var_x82 = ((var_x76) ? (3.2000000000000002) : (var_x77 * var_x81));
        const double var_x83 = var_x75 + var_x82;
        const double var_x84 = 1 / var_x83;
        const double var_x85 = ((var_x76) ? (0) : (var_x81 - 0.032000000000000001 * var_x77 * var_x79 / pow(var_x80, 2)));
        const double var_x86 = 0.0072727272727272727 * var_x74;
        const double var_x87 = var_x82;
        const double var_x88 = exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__membrane__V);
        const double var_x89 = var_chaste_interface__membrane__V < -40.0;
        const double var_x90 = ((var_x89) ? (0.13500000000000001 * var_x88) : (0));
        const double var_x91 = exp(0.34999999999999998 * var_chaste_interface__membrane__V);
        const double var_x92 = exp(0.079000000000000001 * var_chaste_interface__membrane__V);
        const double var_x93 = exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__membrane__V);
        const double var_x94 = 1.0 + var_x93;
        const double var_x95 = ((var_x89) ? (310000.0 * var_x91 + 3.5600000000000001 * var_x92) : (7.6923076923076916 / var_x94));
        const double var_x96 = var_x90 + var_x95;
        const double var_x97 = 1 / var_x96;
        const double var_x98 = ((var_x89) ? (-0.019852941176470591 * var_x88) : (0));
        const double var_x99 = ((var_x89) ? (0.28123999999999999 * var_x92 + 108500.0 * var_x91) : (0.693000693000693 * var_x93 / pow(var_x94, 2)));
        const double var_x100 = var_x90;
        const double var_x101 = var_x95;
        const double var_x102 = exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__membrane__V);
        const double var_x103 = 1.0 + var_x102;
        const double var_x104 = exp(-0.01052 * var_chaste_interface__membrane__V);
        const double var_x105 = var_x104 / var_x103;
        const double var_x106 = exp(-3.2000000000000002 + var_x78);
        const double var_x107 = 1.0 + var_x106;
        const double var_x108 = exp(-2.5349999999999999e-7 * var_chaste_interface__membrane__V);
        const double var_x109 = var_x108 / var_x107;
        const double var_x110 = ((var_x89) ? (0.1212 * var_x105) : (0.29999999999999999 * var_x109));
        const double var_x111 = 37.780000000000001 + var_chaste_interface__membrane__V;
        const double var_x112 = exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V);
        const double var_x113 = 1.0 + var_x112;
        const double var_x114 = 1 / var_x113;
        const double var_x115 = exp(0.24440000000000001 * var_chaste_interface__membrane__V);
        const double var_x116 = exp(-0.043909999999999998 * var_chaste_interface__membrane__V);
        const double var_x117 = -127140.0 * var_x115 - 3.4740000000000003e-5 * var_x116;
        const double var_x118 = var_x114 * var_x117;
        const double var_x119 = ((var_x89) ? (var_x111 * var_x118) : (0));
        const double var_x120 = var_x110 + var_x119;
        const double var_x121 = 1 / var_x120;
        const double var_x122 = ((var_x89) ? (-0.001275024 * var_x105 + 0.016701360000000002 * var_x102 * var_x104 / pow(var_x103, 2)) : (-7.6049999999999996e-8 * var_x109 + 0.029999999999999999 * var_x106 * var_x108 / pow(var_x107, 2)));
        const double var_x123 = ((var_x89) ? (var_x118 + var_x111 * var_x114 * (1.5254334000000001e-6 * var_x116 - 31073.016 * var_x115) - 0.311 * var_x111 * var_x112 * var_x117 / pow(var_x113, 2)) : (0));
        const double var_x124 = var_x110;
        const double var_x125 = var_x119;
        const double var_x126 = exp(-1.1670467502850628 - 0.057012542759407071 * var_chaste_interface__membrane__V);
        const double var_x127 = 1.0 + var_x126;
        const double var_x128 = exp(0.50847457627118642 - 0.016949152542372881 * var_chaste_interface__membrane__V);
        const double var_x129 = exp(-1.1764705882352942 - 0.11764705882352941 * var_chaste_interface__membrane__V);
        const double var_x130 = var_x128 + var_x129;
        const double var_x131 = 0.058823529411764705 * var_chaste_interface__membrane__V;
        const double var_x132 = exp(4.8235294117647056 + var_x131);
        const double var_x133 = 1.9500000000000002 * (0.016949152542372881 * var_x128 + 0.11764705882352941 * var_x129) / pow(var_x130, 2) - 0.018352941176470589 * var_x132 / pow((1 + 0.40000000000000002 * var_x132), 2);
        const double var_x134 = 1.9500000000000002 / (2.5 + var_x132);
        const double var_x135 = 1.9500000000000002 / var_x130;
        const double var_x136 = var_x134 + var_x135;
        const double var_x137 = -var_x134 - var_x135;
        const double var_x138 = exp(8.1320754716981138 + 0.18867924528301888 * var_chaste_interface__membrane__V);
        const double var_x139 = 1.0 + var_x138;
        const double var_x140 = exp(-0.16935483870967738 - 0.13440860215053763 * var_chaste_interface__membrane__V);
        const double var_x141 = exp(10.383561643835618 + 0.091324200913242018 * var_chaste_interface__membrane__V);
        const double var_x142 = 3.0 / (35.560000000000002 + var_x140);
        const double var_x143 = 3.0 / (18.530000000000001 + var_x141);
        const double var_x144 = exp(-3.15625 - 0.10416666666666667 * var_chaste_interface__membrane__V);
        const double var_x145 = 1.0 + var_x144;
        const double var_x146 = exp(-3.6189956331877728 + 0.036390101892285295 * var_chaste_interface__membrane__V);
        const double var_x147 = 1.0 + var_x146;
        const double var_x148 = 1 / exp(9.875 - 0.0625 * var_chaste_interface__membrane__V);
        const double var_x149 = exp(6.6071428571428568 - 0.035714285714285712 * var_chaste_interface__membrane__V);
        const double var_x150 = 3.0 / (21.0 + var_x149);
        const double var_x151 = 3.0 * var_x148;
        const double var_x152 = exp(-2.1692307692307691 - 0.15384615384615385 * var_chaste_interface__membrane__V);
        const double var_x153 = 1.0 + var_x152;
        const double var_x154 = var_x152 / pow(var_x153, 2);
        const double var_x155 = -3.3328000000000002 + var_chaste_interface__membrane__V;
        const double var_x156 = fabs(var_x155) < 1.0e-10;
        const double var_x157 = 14.1 + var_chaste_interface__membrane__V;
        const double var_x158 = fabs(var_x157) < 1.0e-10;
        const double var_x159 = (var_x156) && (var_x158);
        const double var_x160 = 1 / var_x153 - var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr;
        const double var_x161 = -0.20000000000000001 * var_chaste_interface__membrane__V;
        const double var_x162 = exp(-2.8199999999999998 + var_x161);
        const double var_x163 = 1.0 - var_x162;
        const double var_x164 = 0.00029999999999999997 / var_x163;
        const double var_x165 = var_x164 - 5.9999999999999995e-5 * var_x157 * var_x162 / pow(var_x163, 2);
        const double var_x166 = var_x157 * var_x164;
        const double var_x167 = 0.15384615384615385 * var_x154;
        const double var_x168 = exp(-0.65046743564221166 + 0.19517145812596365 * var_chaste_interface__membrane__V);
        const double var_x169 = -1.0 + var_x168;
        const double var_x170 = 7.3898000000000003e-5 / var_x169;
        const double var_x171 = var_x170 - 1.4422780412592461e-5 * var_x155 * var_x168 / pow(var_x169, 2);
        const double var_x172 = var_x155 * var_x170;
        const double var_x173 = -var_x166;
        const double var_x174 = -var_x172;
        const double var_x175 = exp(1.5669291338582676 - 0.07874015748031496 * var_chaste_interface__membrane__V);
        const double var_x176 = 1.0 + var_x175;
        const double var_x177 = var_x175 * pow(var_x176, (-1.5));
        const double var_x178 = -19.899999999999999 + var_chaste_interface__membrane__V;
        const double var_x179 = fabs(var_x178) < 1.0e-10;
        const double var_x180 = exp(-2.2111111111111108 + 0.1111111111111111 * var_chaste_interface__membrane__V);
        const double var_x181 = -1.0 + var_x180;
        const double var_x182 = 6.9999999999999994e-5 / var_x181;
        const double var_x183 = -var_x131;
        const double var_x184 = exp(1.1705882352941175 + var_x183);
        const double var_x185 = 1.0 - var_x184;
        const double var_x186 = 8.0000000000000007e-5 / var_x185;
        const double var_x187 = var_x178 * var_x182;
        const double var_x188 = var_x178 * var_x186;
        const double var_x189 = exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V);
        const double var_x190 = exp(-1.25 - 0.125 * var_chaste_interface__membrane__V);
        const double var_x191 = 1.0 + var_x190;
        const double var_x192 = 1 / var_x191 - var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x193 = var_x189 * var_x192;
        const double var_x194 = 0.21838829438742086 * var_x189;
        const double var_x195 = var_x190 / pow(var_x191, 2);
        const double var_x196 = 10.0 + var_chaste_interface__membrane__V;
        const double var_x197 = fabs(var_x196) < 1.0e-10;
        const double var_x198 = 1.0 - var_x189;
        const double var_x199 = 1 / var_x198;
        const double var_x200 = 1.0 + var_x189;
        const double var_x201 = var_x199 * var_x200;
        const double var_x202 = 0.035000000000000003 * var_x201;
        const double var_x203 = 0.005608974358974359 * var_x193 * var_x196;
        const double var_x204 = 0.0021888888888888887 * exp(-0.113569 * pow((1 + 0.10000000000000001 * var_chaste_interface__membrane__V), 2));
        const double var_x205 = exp(-4.057971014492753 - 0.14492753623188406 * var_chaste_interface__membrane__V);
        const double var_x206 = 1.0 + var_x205;
        const double var_x207 = var_x205 / var_x206;
        const double var_x208 = 0.23455745922671672 * var_x33;
        const double var_x209 = var_x208 - 2.7189219554066812e-7 * var_x46 - 0.00011173862339878819 * var_x19;
        const double var_x210 = var_x18 * var_x45;
        const double var_x211 = -var_chaste_interface__intracellular_ion_concentrations__Ca_i + var_chaste_interface__intracellular_ion_concentrations__Ca_rel;
        const double var_x212 = pow(var_chaste_interface__Ca_release_current_from_JSR_u_gate__u, 2);
        const double var_x213 = var_x212 * var_chaste_interface__Ca_release_current_from_JSR_w_gate__w;
        const double var_x214 = var_x213 * var_chaste_interface__Ca_release_current_from_JSR_v_gate__v;
        const double var_x215 = 2117337.2348207757 * var_x214;
        const double var_x216 = -65.0 + var_chaste_interface__membrane__V;
        const double var_x217 = -0.00011173862339878819 * var_x210 + var_x208 * var_x216 - var_x211 * var_x215;
        const double var_x218 = exp(250.0 + var_x217);
        const double var_x219 = 1.0 + var_x218;
        const double var_x220 = var_x218 / pow(var_x219, 2);
        const double var_x221 = 0.125 * var_x220;
        const double var_x222 = var_x32 * var_chaste_interface__L_type_Ca_channel_f_gate__f;
        const double var_x223 = -15.246234849736588 + 0.23455745922671672 * var_chaste_interface__membrane__V;
        const double var_x224 = var_x221 * var_x223;
        const double var_x225 = var_x32 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x226 = var_x31 * NV_Ith_S(mParameters, 0);
        const double var_x227 = var_x211 * var_chaste_interface__Ca_release_current_from_JSR_v_gate__v;
        const double var_x228 = var_x227 * var_chaste_interface__Ca_release_current_from_JSR_u_gate__u * var_chaste_interface__Ca_release_current_from_JSR_w_gate__w;
        const double var_x229 = var_x211 * var_x213;
        const double var_x230 = 264667.15435259696 * var_x220;
        const double var_x231 = var_x212 * var_x227;
        const double var_x232 = var_x215 + 306.61078260627482 * var_x68;
        const double var_x233 = 1 / var_x219;
        const double var_x234 = 1 / (1.9099999999999999 + 2.0899999999999999 * var_x233);
        const double var_x235 = exp(50.0 + var_x217);
        const double var_x236 = 1.0 + var_x235;
        const double var_x237 = var_x235 / pow(var_x236, 2);
        const double var_x238 = var_x234 * var_x237;
        const double var_x239 = var_x220 * (1.0 - 1 / var_x236 - var_chaste_interface__Ca_release_current_from_JSR_v_gate__v) / pow((0.9138755980861244 + var_x233), 2);
        const double var_x240 = 0.47846889952153115 * var_x239;
        const double var_x241 = var_x223 * var_x238;
        const double var_x242 = var_x223 * var_x240;
        const double var_x243 = 1013080.0166606582 * var_x239;
        const double var_x244 = exp(2.3529411764705883 + var_x183);
        const double var_x245 = 1.0 + var_x244;
        const double var_x246 = var_x244 / pow(var_x245, 2);
        const double var_x247 = -7.9000000000000004 + var_chaste_interface__membrane__V;
        const double var_x248 = fabs(var_x247) < 1.0e-10;
        const double var_x249 = exp(1.5800000000000001 + var_x161);
        const double var_x250 = 1.0 - var_x249;
        const double var_x251 = 1 / var_x250;
        const double var_x252 = 1.0 - 1 / var_x245 - var_chaste_interface__Ca_release_current_from_JSR_w_gate__w;
        const double var_x253 = var_x251 * var_x252;
        const double var_x254 = 1.0 + 0.29999999999999999 * var_x249;
        const double var_x255 = 0.16666666666666666 * var_x254;
        const double var_x256 = var_x247 * var_x249;
        const double var_x257 = var_x247 * var_x251;
        const double var_x258 = 5.9145564270171174e-6 * var_x34;
        const double var_x259 = var_x258 * var_chaste_interface__fast_sodium_current_h_gate__h;
        const double var_x260 = 0.0023800000000000002 + var_chaste_interface__intracellular_ion_concentrations__Ca_i;
        const double var_x261 = 1.0 + 0.00011900000000000002 / pow(var_x260, 2) + 3.5000000000000004e-5 * var_x66;
        const double var_x262 = 1 / var_x261;
        const double var_x263 = 4.2880534095874102e-10 * NV_Ith_S(mParameters, 0);
        const double var_x264 = 4.6918356272010785e-8 * var_x33;
        const double var_x265 = var_x262 * (3.0496931576807009e-6 - 4.6918356272010785e-8 * var_chaste_interface__membrane__V);
        const double var_x266 = 0.21176470588235291 * var_x262;
        const double var_x267 = 1.0 + 0.00092000000000000003 * var_x64;
        const double var_x268 = 1 / (pow(var_x267, 2) * pow(var_chaste_interface__intracellular_ion_concentrations__Ca_i, 2));
        const double var_x269 = 1.0426301393780176e-7 * var_x63;
        const double var_x270 = 0.21176470588235291 * var_x214;
        const double var_x271 = 1.2526727201836255e-7 * var_x5;
        const double var_x272 = 2.2302249193675268e-8 * var_x10;
        const double var_x273 = 0.80000000000000004 + var_chaste_interface__intracellular_ion_concentrations__Ca_rel;
        const double var_x274 = pow(var_x273, (-2));
        const double var_x275 = 1 / (1.0 + 8.0 * var_x274);
        const double var_x276 = 30.0 * var_x275;
        const double var_x277 = 30.0 * var_x214;
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = mSetVoltageDerivativeToZero ? 0.0 : (var_x0 * (-var_x26 + 0.0063 * var_x30 + 0.0013130252232142858 * var_x47 - 0.12941175999999999 * var_x1 - 0.089999999999999997 * var_x4 - 0.12375 * var_x33 - 0.0018054375000000002 * NV_Ith_S(mParameters, 0) - 0.46904770956521741 * var_x44 - 0.00014738024843876965 * var_x19 - 3.5861851621648651e-7 * var_x46 - 0.0038461538461538464 * var_x48 - var_x11 * var_x12 - var_x36 * var_x37 - var_x6 * var_x7));
        IJth(rJacobian, 1, 0) = (var_x75 + var_x87) * (var_x84 * var_x85 + var_x82 * (var_x86 - var_x85) / pow(var_x83, 2)) + (-var_x86 + var_x85) * (-var_chaste_interface__fast_sodium_current_m_gate__m + var_x82 * var_x84);
        IJth(rJacobian, 2, 0) = (var_x100 + var_x101) * (var_x97 * var_x98 + var_x90 * (-var_x98 - var_x99) / pow(var_x96, 2)) + (-var_chaste_interface__fast_sodium_current_h_gate__h + var_x90 * var_x97) * (var_x98 + var_x99);
        IJth(rJacobian, 3, 0) = (var_x124 + var_x125) * (var_x121 * var_x123 + var_x119 * (-var_x122 - var_x123) / pow(var_x120, 2)) + (-var_chaste_interface__fast_sodium_current_j_gate__j + var_x119 * var_x121) * (var_x122 + var_x123);
        IJth(rJacobian, 4, 0) = var_x133 * (1 / var_x127 - var_chaste_interface__transient_outward_K_current_oa_gate__oa) + 0.057012542759407071 * var_x126 * var_x136 / pow(var_x127, 2);
        IJth(rJacobian, 5, 0) = (1 / var_x139 - var_chaste_interface__transient_outward_K_current_oi_gate__oi) * (0.00031887818877678569 * var_x140 / pow((1 + 0.028121484814398197 * var_x140), 2) - 0.00079791438902835471 * var_x141 / pow((1 + 0.053966540744738258 * var_x141), 2)) - 0.18867924528301888 * var_x138 * (var_x142 + var_x143) / pow(var_x139, 2);
        IJth(rJacobian, 6, 0) = var_x133 * (1 / var_x145 - var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua) + 0.10416666666666667 * var_x136 * var_x144 / pow(var_x145, 2);
        IJth(rJacobian, 7, 0) = (1 / var_x147 - var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui) * (0.1875 * var_x148 + 0.00024295432458697764 * var_x149 / pow((1 + 0.047619047619047616 * var_x149), 2)) - 0.036390101892285295 * var_x146 * (var_x150 + var_x151) / pow(var_x147, 2);
        IJth(rJacobian, 8, 0) = ((var_x159) ? (0.0002889786430769231 * var_x154) : ((var_x156) ? (var_x160 * var_x165 + var_x167 * (0.00037836118 + var_x166)) : ((var_x158) ? (var_x160 * var_x171 + var_x167 * (0.0015 + var_x172)) : (var_x160 * (var_x165 + var_x171) + var_x167 * (var_x166 + var_x172)))));
        IJth(rJacobian, 9, 0) = ((var_x179) ? (7.8346456692913397e-5 * var_x177) : ((pow(var_x176, (-0.5)) - var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs) * (var_x182 + var_x186 - 4.7058823529411769e-6 * var_x178 * var_x184 / pow(var_x185, 2) - 7.7777777777777775e-6 * var_x178 * var_x180 / pow(var_x181, 2)) + 0.03937007874015748 * var_x177 * (var_x187 + var_x188)));
        IJth(rJacobian, 10, 0) = ((var_x197) ? (-0.034998124100548214 * var_x193 + 0.125 * var_x195 * (0.21838829438742086 + var_x194)) : (var_x192 * var_x202 - var_x199 * var_x203 - var_x200 * var_x203 / pow(var_x198, 2) + 0.0043750000000000004 * var_x195 * var_x196 * var_x201));
        IJth(rJacobian, 11, 0) = (0.0022222222222222222 + var_x204) * (-0.14492753623188406 * var_x207 + 0.14492753623188406 * pow(var_x205, 2) / pow(var_x206, 2)) + var_x204 * (-0.022713800000000003 - 0.0022713799999999999 * var_chaste_interface__membrane__V) * (var_x207 - var_chaste_interface__L_type_Ca_channel_f_gate__f);
        IJth(rJacobian, 13, 0) = -var_x209 * var_x221;
        IJth(rJacobian, 14, 0) = var_x209 * var_x238 + var_x209 * var_x240;
        IJth(rJacobian, 15, 0) = ((var_x248) ? (-0.063725490196078427 * var_x246) : (var_x253 * var_x255 - 0.01 * var_x253 * var_x256 - 0.0098039215686274508 * var_x246 * var_x254 * var_x257 - 0.033333333333333333 * var_x252 * var_x254 * var_x256 / pow(var_x250, 2)));
        IJth(rJacobian, 16, 0) = -1.0670035173794672e-6 * var_x44 - 3.3526492139188636e-10 * var_x19 - 8.1579594228290865e-13 * var_x46 - 5.1141008336491763e-10 * NV_Ith_S(mParameters, 0) - var_x259 * var_x37;
        IJth(rJacobian, 17, 0) = var_x262 * (-var_x263 - var_x264 + 2.7193198076096957e-13 * var_x46 + 1.1175497379729545e-10 * var_x19);
        IJth(rJacobian, 18, 0) = 7.1133567825297815e-7 * var_x44 + 9.9563612471764592e-10 * var_x47 + 4.7771417295138258e-9 * var_x30 - 6.8244881850197507e-8 * var_x4 - 2.9164479423161327e-9 * var_x48 - 9.8129891902512382e-8 * var_x1 - 7.5827646500219453e-7 * var_x26 - var_x12 * var_x272 - var_x271 * var_x7;
        IJth(rJacobian, 0, 1) = mSetVoltageDerivativeToZero ? 0.0 : (-23.399999999999999 * var_x51);
        IJth(rJacobian, 1, 1) = -var_x75 - var_x87;
        IJth(rJacobian, 16, 1) = -1.7743669281051352e-5 * var_x51 * NV_Ith_S(mParameters, 0);
        IJth(rJacobian, 0, 2) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x35 * var_x50);
        IJth(rJacobian, 2, 2) = -var_x100 - var_x101;
        IJth(rJacobian, 16, 2) = -var_x258 * var_x50 * NV_Ith_S(mParameters, 0);
        IJth(rJacobian, 0, 3) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x36 * var_x49);
        IJth(rJacobian, 3, 3) = -var_x124 - var_x125;
        IJth(rJacobian, 16, 3) = -var_x259 * var_x49 * NV_Ith_S(mParameters, 0);
        IJth(rJacobian, 0, 4) = mSetVoltageDerivativeToZero ? 0.0 : (-0.49560000000000004 * var_x52 * var_chaste_interface__transient_outward_K_current_oi_gate__oi);
        IJth(rJacobian, 4, 4) = var_x137;
        IJth(rJacobian, 18, 4) = -3.7580181605508762e-7 * var_x52 * var_x7;
        IJth(rJacobian, 0, 5) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x28 * var_x6);
        IJth(rJacobian, 5, 5) = -var_x142 - var_x143;
        IJth(rJacobian, 18, 5) = -var_x271 * var_x29;
        IJth(rJacobian, 0, 6) = mSetVoltageDerivativeToZero ? 0.0 : (-3 * var_x53 * var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui);
        IJth(rJacobian, 6, 6) = var_x137;
        IJth(rJacobian, 18, 6) = -2.2748293950065834e-6 * var_x25 * var_x53;
        IJth(rJacobian, 0, 7) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x54);
        IJth(rJacobian, 7, 7) = -var_x150 - var_x151;
        IJth(rJacobian, 18, 7) = -7.5827646500219453e-7 * var_x54 * NV_Ith_S(mParameters, 0);
        IJth(rJacobian, 0, 8) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x11 * var_x28);
        IJth(rJacobian, 8, 8) = ((var_x159) ? (-0.00187836118) : ((var_x156) ? (-0.00037836118 + var_x173) : ((var_x158) ? (-0.0015 + var_x174) : (var_x173 + var_x174))));
        IJth(rJacobian, 18, 8) = -var_x272 * var_x29;
        IJth(rJacobian, 0, 9) = mSetVoltageDerivativeToZero ? 0.0 : (-0.25882351999999997 * var_x55);
        IJth(rJacobian, 9, 9) = ((var_x179) ? (-0.00199) : (-var_x187 - var_x188));
        IJth(rJacobian, 18, 9) = -1.9625978380502476e-7 * var_x55 * NV_Ith_S(mParameters, 0);
        IJth(rJacobian, 0, 10) = mSetVoltageDerivativeToZero ? 0.0 : (var_x57 * var_chaste_interface__L_type_Ca_channel_f_gate__f);
        IJth(rJacobian, 10, 10) = ((var_x197) ? (-0.21838829438742086 - var_x194) : (-var_x196 * var_x202));
        IJth(rJacobian, 13, 10) = -var_x222 * var_x224;
        IJth(rJacobian, 14, 10) = var_x222 * var_x241 + var_x222 * var_x242;
        IJth(rJacobian, 17, 10) = var_x222 * var_x265;
        IJth(rJacobian, 0, 11) = mSetVoltageDerivativeToZero ? 0.0 : (var_x57 * var_chaste_interface__L_type_Ca_channel_d_gate__d);
        IJth(rJacobian, 11, 11) = -0.0022222222222222222 - var_x204;
        IJth(rJacobian, 13, 11) = -var_x224 * var_x225;
        IJth(rJacobian, 14, 11) = var_x225 * var_x241 + var_x225 * var_x242;
        IJth(rJacobian, 17, 11) = var_x225 * var_x265;
        IJth(rJacobian, 0, 12) = mSetVoltageDerivativeToZero ? 0.0 : (var_x31 * var_x56);
        IJth(rJacobian, 12, 12) = -0.5;
        IJth(rJacobian, 13, 12) = -var_x224 * var_x226;
        IJth(rJacobian, 14, 12) = var_x226 * var_x241 + var_x226 * var_x242;
        IJth(rJacobian, 17, 12) = var_x226 * var_x265;
        IJth(rJacobian, 13, 13) = -0.125 + 529334.30870519392 * var_x220 * var_x228;
        IJth(rJacobian, 14, 13) = -4234674.4696415514 * var_x228 * var_x238 - 2026160.0333213164 * var_x228 * var_x239;
        IJth(rJacobian, 17, 13) = 0.42352941176470582 * var_x228 * var_x262;
        IJth(rJacobian, 19, 13) = -60.0 * var_x228 * var_x275;
        IJth(rJacobian, 13, 14) = var_x229 * var_x230;
        IJth(rJacobian, 14, 14) = var_x234 * (-1 - 2117337.2348207757 * var_x229 * var_x237) - var_x229 * var_x243;
        IJth(rJacobian, 17, 14) = var_x229 * var_x266;
        IJth(rJacobian, 19, 14) = -var_x229 * var_x276;
        IJth(rJacobian, 13, 15) = var_x230 * var_x231;
        IJth(rJacobian, 14, 15) = -var_x231 * var_x243 - 2117337.2348207757 * var_x231 * var_x238;
        IJth(rJacobian, 15, 15) = ((var_x248) ? (-1.0833333333333333) : (-var_x255 * var_x257));
        IJth(rJacobian, 17, 15) = var_x231 * var_x266;
        IJth(rJacobian, 19, 15) = -var_x231 * var_x276;
        IJth(rJacobian, 0, 16) = mSetVoltageDerivativeToZero ? 0.0 : (var_x0 * (-208.36008900708595 * var_x60 - 0.00079585334156935614 * var_x59 - 0.018016135580732888 * var_x58 - 0.022248886402668498 * var_x61));
        IJth(rJacobian, 13, 16) = 7.5423570794182034e-5 * var_x220 * var_x59;
        IJth(rJacobian, 14, 16) = -0.00028870266332701257 * var_x239 * var_x59 - 0.00060338856635345627 * var_x238 * var_x59;
        IJth(rJacobian, 16, 16) = -1.3661211601158392e-8 * var_x58 - 1.8104305755161864e-9 * var_x59 - 0.00015799455173983574 * var_x60 - 5.0612420794952582e-8 * var_x61;
        IJth(rJacobian, 17, 16) = 6.0347685850539541e-10 * var_x262 * var_x59;
        IJth(rJacobian, 18, 16) = 3.3741613863301722e-8 * var_x61;
        IJth(rJacobian, 0, 17) = mSetVoltageDerivativeToZero ? 0.0 : (var_x0 * (0.27500000000000002 * var_x67 + 404.41140171598391 * var_x68 - 0.27500000000000002 * var_x63 - 0.015106106453013732 * var_x65));
        IJth(rJacobian, 12, 17) = -0.000175 / pow((0.00035 + var_chaste_interface__intracellular_ion_concentrations__Ca_i), 2);
        IJth(rJacobian, 13, 17) = -var_x221 * var_x232;
        IJth(rJacobian, 14, 17) = var_x232 * var_x238 + var_x232 * var_x240;
        IJth(rJacobian, 16, 17) = 0.00091996694429933613 * var_x68;
        IJth(rJacobian, 17, 17) = var_x262 * (-var_x269 - var_x270 + 1.0426301393780176e-7 * var_x67 - 0.00030665564809977873 * var_x68 - 3.7341176470588232e-7 * var_x268 - 5.7273025005690459e-9 * var_x65) + (0.00023800000000000004 / pow(var_x260, 3) + 7.0000000000000007e-5 / pow(var_x62, 3)) * (2.7058823529411762e-5 * var_chaste_interface__intracellular_ion_concentrations__Ca_up + 1.1175497379729545e-10 * var_x210 - 0.00040588235294117644 / var_x267 + var_x211 * var_x270 - var_x216 * var_x264 - var_x263 * (-13.356415961992688 * log(1.8 * var_x64) + var_chaste_interface__membrane__V) - var_x269 * var_chaste_interface__intracellular_ion_concentrations__Ca_i) / pow(var_x261, 2);
        IJth(rJacobian, 19, 17) = var_x275 * var_x277;
        IJth(rJacobian, 20, 17) = 4.6e-6 * var_x268;
        IJth(rJacobian, 0, 18) = mSetVoltageDerivativeToZero ? 0.0 : (var_x0 * (-3.4569545938671333 * var_x69 - 2.4041548731586837 * var_x70 - 0.78567153503275577 * var_x71 - 26.712831923985377 * var_x73 - 4.4129598338423843 * var_x72));
        IJth(rJacobian, 18, 18) = -2.0255711761517402e-5 * var_x73 - 3.346243583002675e-6 * var_x72 - 5.9575623423748584e-7 * var_x71 - 2.621327309110667e-6 * var_x69 - 1.8230140585365661e-6 * var_x70;
        IJth(rJacobian, 13, 19) = var_x214 * var_x230;
        IJth(rJacobian, 14, 19) = -var_x214 * var_x243 - var_x215 * var_x238;
        IJth(rJacobian, 17, 19) = var_x262 * var_x270;
        IJth(rJacobian, 19, 19) = var_x275 * (-0.0055555555555555558 - var_x277) + 0.25 * (0.0055555555555555558 * var_chaste_interface__intracellular_ion_concentrations__Ca_up - 0.0055555555555555558 * var_chaste_interface__intracellular_ion_concentrations__Ca_rel - var_x211 * var_x277) / (pow(var_x273, 3) * pow((0.125 + var_x274), 2));
        IJth(rJacobian, 20, 19) = 0.00048309178743961351;
        IJth(rJacobian, 17, 20) = 2.7058823529411762e-5 * var_x262;
        IJth(rJacobian, 19, 20) = 0.0055555555555555558 * var_x275;
        IJth(rJacobian, 20, 20) = -0.00081642512077294684;
    }

    N_Vector Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        

        // Mathematics
        const double var_membrane__Cm_converted = 9.9999999999999995e-7 * NV_Ith_S(mParameters, 0); // uF
        const double var_membrane__i_st_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2

        N_Vector dqs = N_VNew_Serial(3);
        NV_Ith_S(dqs, 0) = var_chaste_interface__environment__time;
        NV_Ith_S(dqs, 1) = var_membrane__Cm_converted;
        NV_Ith_S(dqs, 2) = var_membrane__i_st_converted;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt>::Initialise(void)
{
    this->mSystemName = "courtemanche_ramirez_nattel_model_1998";
    this->mFreeVariableName = "environment__time";
    this->mFreeVariableUnits = "millisecond";

    // NV_Ith_S(rY, 0):
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-81.18);

    // NV_Ith_S(rY, 1):
    this->mVariableNames.push_back("fast_sodium_current_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.002908);

    // NV_Ith_S(rY, 2):
    this->mVariableNames.push_back("fast_sodium_current_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9649);

    // NV_Ith_S(rY, 3):
    this->mVariableNames.push_back("fast_sodium_current_j_gate__j");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9775);

    // NV_Ith_S(rY, 4):
    this->mVariableNames.push_back("transient_outward_K_current_oa_gate__oa");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.03043);

    // NV_Ith_S(rY, 5):
    this->mVariableNames.push_back("transient_outward_K_current_oi_gate__oi");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9992);

    // NV_Ith_S(rY, 6):
    this->mVariableNames.push_back("ultrarapid_delayed_rectifier_K_current_ua_gate__ua");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.004966);

    // NV_Ith_S(rY, 7):
    this->mVariableNames.push_back("ultrarapid_delayed_rectifier_K_current_ui_gate__ui");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9986);

    // NV_Ith_S(rY, 8):
    this->mVariableNames.push_back("rapid_delayed_rectifier_K_current_xr_gate__xr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.296e-05);

    // NV_Ith_S(rY, 9):
    this->mVariableNames.push_back("slow_delayed_rectifier_K_current_xs_gate__xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.01869);

    // NV_Ith_S(rY, 10):
    this->mVariableNames.push_back("L_type_Ca_channel_d_gate__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0001367);

    // NV_Ith_S(rY, 11):
    this->mVariableNames.push_back("L_type_Ca_channel_f_gate__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9996);

    // NV_Ith_S(rY, 12):
    this->mVariableNames.push_back("L_type_Ca_channel_f_Ca_gate__f_Ca");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7755);

    // NV_Ith_S(rY, 13):
    this->mVariableNames.push_back("Ca_release_current_from_JSR_u_gate__u");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.35e-112);

    // NV_Ith_S(rY, 14):
    this->mVariableNames.push_back("Ca_release_current_from_JSR_v_gate__v");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // NV_Ith_S(rY, 15):
    this->mVariableNames.push_back("Ca_release_current_from_JSR_w_gate__w");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9992);

    // NV_Ith_S(rY, 16):
    this->mVariableNames.push_back("intracellular_ion_concentrations__Na_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(11.17);

    // NV_Ith_S(rY, 17):
    this->mVariableNames.push_back("intracellular_ion_concentrations__Ca_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0001013);

    // NV_Ith_S(rY, 18):
    this->mVariableNames.push_back("intracellular_ion_concentrations__K_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(139.0);

    // NV_Ith_S(rY, 19):
    this->mVariableNames.push_back("intracellular_ion_concentrations__Ca_rel");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.488);

    // NV_Ith_S(rY, 20):
    this->mVariableNames.push_back("intracellular_ion_concentrations__Ca_up");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.488);

    // mParameters[0]:
    this->mParameterNames.push_back("membrane__Cm");
    this->mParameterUnits.push_back("picoF");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("environment__time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_capacitance");
    this->mDerivedQuantityUnits.push_back("uF");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellcourtemanche_ramirez_nattel_model_1998FromCellMLCvodeOpt)

#endif // CHASTE_CVODE
