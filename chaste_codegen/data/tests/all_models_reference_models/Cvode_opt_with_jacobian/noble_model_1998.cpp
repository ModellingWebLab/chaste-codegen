#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: noble_model_1998
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: AnalyticCvodeOpt)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "noble_model_1998.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class Cellnoble_model_1998FromCellMLCvodeOpt_LookupTables : public AbstractLookupTableCollection
{
public:
    static Cellnoble_model_1998FromCellMLCvodeOpt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new Cellnoble_model_1998FromCellMLCvodeOpt_LookupTables);
        }
        return mpInstance.get();
    }

    void FreeMemory()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }

    // Row lookup methods
    // using linear-interpolation

    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<22; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }


    const double * IndexTable0(double var_chaste_interface__membrane__V)
    {
        const double _offset_0 = var_chaste_interface__membrane__V - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = Cellnoble_model_1998FromCellMLCvodeOpt_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }


// LCOV_EXCL_START
    bool CheckIndex0(double& var_chaste_interface__membrane__V)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__membrane__V>mTableMaxs[0] || var_chaste_interface__membrane__V<mTableMins[0])
        {
// LCOV_EXCL_START
            _oob_0 = true;
// LCOV_EXCL_STOP
        }
        return _oob_0;
    }
// LCOV_EXCL_STOP

    ~Cellnoble_model_1998FromCellMLCvodeOpt_LookupTables()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

    }

protected:
    Cellnoble_model_1998FromCellMLCvodeOpt_LookupTables(const Cellnoble_model_1998FromCellMLCvodeOpt_LookupTables&);
    Cellnoble_model_1998FromCellMLCvodeOpt_LookupTables& operator= (const Cellnoble_model_1998FromCellMLCvodeOpt_LookupTables&);
    Cellnoble_model_1998FromCellMLCvodeOpt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);

        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 22;
        mTableMins[0] = -250.0;
        mTableMaxs[0] = 550.0;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;

        Cellnoble_model_1998FromCellMLCvodeOpt_LookupTables::RegenerateTables();
    }

    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);


        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][22];

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(3.7433890822745473 - 0.074867781645490947 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[0] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[0] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[0] >= 2){
                    EXCEPTION("Lookup table 0 at ["<<i<<"][0] has non-finite value: " << val);
                }
                _lookup_table_0[i][0] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return 1.0 - exp(3.7433890822745473 - 0.074867781645490947 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[1] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[1] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[1] >= 2){
                    EXCEPTION("Lookup table 1 at ["<<i<<"][1] has non-finite value: " << val);
                }
                _lookup_table_0[i][1] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(1.8716945411372736 - 0.037433890822745473 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[2] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[2] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[2] >= 2){
                    EXCEPTION("Lookup table 2 at ["<<i<<"][2] has non-finite value: " << val);
                }
                _lookup_table_0[i][2] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return 1.0 - exp(1.8716945411372736 - 0.037433890822745473 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[3] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[3] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[3] >= 2){
                    EXCEPTION("Lookup table 3 at ["<<i<<"][3] has non-finite value: " << val);
                }
                _lookup_table_0[i][3] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return 1.0 + exp(0.4017857142857143 + 0.044642857142857144 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][4] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return 1.0 + exp(-6.5 - 0.125 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][5] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(0.018716945411372737 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][6] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(-0.018716945411372737 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][7] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return ((fabs(19.0 + var_chaste_interface__membrane__V) < 4.0000000001150227e-7) ? (1.2000000000345068e-5 / (1.0 - exp(-1.0000000000287557e-7)) - 1249999.9999640554 * (18.999999599999999 + var_chaste_interface__membrane__V) * (-1.2000000000345068e-5 / (1.0 - exp(1.0000000000287557e-7)) - 1.2000000000345068e-5 / (1.0 - exp(-1.0000000000287557e-7)))) : (30.0 * (19.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.75 - 0.25 * var_chaste_interface__membrane__V))));
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[8] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[8] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[8] >= 2){
                    EXCEPTION("Lookup table 8 at ["<<i<<"][8] has non-finite value: " << val);
                }
                _lookup_table_0[i][8] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return ((fabs(19.0 + var_chaste_interface__membrane__V) < 9.999999999871223e-7) ? (-1.1999999999678934e-5 / (-1.0 + exp(-9.9999999997324457e-8)) + 500000.00000643887 * (19.000001000000001 + var_chaste_interface__membrane__V) * (1.1999999999678934e-5 / (-1.0 + exp(-9.9999999997324457e-8)) + 1.2000000000012001e-5 / (-1.0 + exp(1.0000000000010001e-7)))) : (12.0 * (19.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(1.8999999999999999 + 0.10000000000000001 * var_chaste_interface__membrane__V))));
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[9] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[9] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[9] >= 2){
                    EXCEPTION("Lookup table 9 at ["<<i<<"][9] has non-finite value: " << val);
                }
                _lookup_table_0[i][9] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return ((fabs(34.0 + var_chaste_interface__membrane__V) < 4.0000000001150227e-7) ? (-2.5000000000718892e-6 / (-1.0 + exp(-1.0000000000287557e-7)) + 1249999.9999640554 * (34.000000399999998 + var_chaste_interface__membrane__V) * (2.5000000000718892e-6 / (-1.0 + exp(1.0000000000287557e-7)) + 2.5000000000718892e-6 / (-1.0 + exp(-1.0000000000287557e-7)))) : (6.25 * (34.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(8.5 + 0.25 * var_chaste_interface__membrane__V))));
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[10] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[10] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[10] >= 2){
                    EXCEPTION("Lookup table 10 at ["<<i<<"][10] has non-finite value: " << val);
                }
                _lookup_table_0[i][10] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return 1.0 + exp(-8.5 - 0.25 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][11] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return ((fabs(41.0 + var_chaste_interface__membrane__V) < 1.0000000000287557e-6) ? (0.00020000000000575113 / (1.0 - exp(-1.0000000000287557e-7)) - 499999.99998562218 * (40.999999000000003 + var_chaste_interface__membrane__V) * (-0.00020000000000575113 / (1.0 - exp(1.0000000000287557e-7)) - 0.00020000000000575113 / (1.0 - exp(-1.0000000000287557e-7)))) : (200.0 * (41.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.1000000000000005 - 0.10000000000000001 * var_chaste_interface__membrane__V))));
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[12] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[12] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[12] >= 2){
                    EXCEPTION("Lookup table 12 at ["<<i<<"][12] has non-finite value: " << val);
                }
                _lookup_table_0[i][12] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(-3.6960000000000002 - 0.056000000000000001 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][13] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return 1.0 + exp(0.55555555555555558 - 0.1111111111111111 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][14] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(1.3333333333333333 - 0.066666666666666666 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][15] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(-pow((1.0 + 0.033333333333333333 * var_chaste_interface__membrane__V), 3));
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][16] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return 1.0 + exp(4.4444444444444446 - 0.1111111111111111 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][17] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(-0.022222222222222223 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][18] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return 0.33300000000000002 / (1.0 + exp(-0.80000000000000004 - 0.20000000000000001 * var_chaste_interface__membrane__V));
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][19] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(-0.058823529411764705 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][20] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return 1.0 + exp(-1.25 - 0.125 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][21] = val;
            }

            mNeedsRegeneration[0] = false;
        }

        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }

private:
    /** The single instance of the class */
    static std::shared_ptr<Cellnoble_model_1998FromCellMLCvodeOpt_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[22];

    // Lookup tables
    double (*_lookup_table_0)[22];
    int _lookup_table_0_num_misshit_piecewise[22] = {0};

};

std::shared_ptr<Cellnoble_model_1998FromCellMLCvodeOpt_LookupTables> Cellnoble_model_1998FromCellMLCvodeOpt_LookupTables::mpInstance;


    boost::shared_ptr<RegularStimulus> Cellnoble_model_1998FromCellMLCvodeOpt::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__stim_amplitude_converted = -0.0030000000000000001 * HeartConfig::Instance()->GetCapacitance() / NV_Ith_S(mParameters, 10); // uA_per_cm2
        const double var_chaste_interface__membrane__stim_duration_converted = 3.0; // millisecond
        const double var_chaste_interface__membrane__stim_period_converted = 1000.0; // millisecond
        const double var_chaste_interface__membrane__stim_start_converted = 100.0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__stim_amplitude_converted),
                var_chaste_interface__membrane__stim_duration_converted,
                var_chaste_interface__membrane__stim_period_converted,
                var_chaste_interface__membrane__stim_start_converted
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }

    double Cellnoble_model_1998FromCellMLCvodeOpt::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Cellnoble_model_1998FromCellMLCvodeOpt::Cellnoble_model_1998FromCellMLCvodeOpt(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                22,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellnoble_model_1998FromCellMLCvodeOpt>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
        
        NV_Ith_S(this->mParameters, 0) = 0.050000000000000003; // (var_calcium_release__K_leak_rate) [per_second]
        NV_Ith_S(this->mParameters, 1) = 250.0; // (var_calcium_release__K_m_rel) [per_second]
        NV_Ith_S(this->mParameters, 2) = 0.00050000000000000001; // (var_calcium_release__K_m_Ca_cyt) [millimolar]
        NV_Ith_S(this->mParameters, 3) = 0.01; // (var_calcium_release__K_m_Ca_ds) [millimolar]
        NV_Ith_S(this->mParameters, 4) = 1.0; // (var_sarcoplasmic_reticulum_calcium_pump__uptake_factor) [dimensionless]
        NV_Ith_S(this->mParameters, 5) = 1.0; // (var_intracellular_sodium_concentration__conc_clamp) [dimensionless]
        NV_Ith_S(this->mParameters, 6) = 2.0; // (var_extracellular_calcium_concentration__Ca_o) [millimolar]
        NV_Ith_S(this->mParameters, 7) = 4.0; // (var_extracellular_potassium_concentration__K_o) [millimolar]
        NV_Ith_S(this->mParameters, 8) = 140.0; // (var_extracellular_sodium_concentration__Na_o) [millimolar]
        NV_Ith_S(this->mParameters, 9) = 0.10000000000000001; // (var_L_type_Ca_channel__P_Ca_L) [nanoA_per_millimolar]
        NV_Ith_S(this->mParameters, 10) = 9.5000000000000005e-5; // (var_membrane__Cm) [microF]
        NV_Ith_S(this->mParameters, 11) = 2.5; // (var_fast_sodium_current__g_Na) [microS]
        NV_Ith_S(this->mParameters, 12) = 0; // (var_fast_sodium_current__perc_reduced_inact_for_IpNa) [dimensionless]
        NV_Ith_S(this->mParameters, 13) = 0; // (var_fast_sodium_current__shift_INa_inact) [millivolt]
        NV_Ith_S(this->mParameters, 14) = 0.5; // (var_time_independent_potassium_current__g_K1) [microS]
        NV_Ith_S(this->mParameters, 15) = 0.0020999999999999999; // (var_rapid_delayed_rectifier_potassium_current__g_Kr1) [microS]
        NV_Ith_S(this->mParameters, 16) = 0.0012999999999999999; // (var_rapid_delayed_rectifier_potassium_current__g_Kr2) [microS]
        NV_Ith_S(this->mParameters, 17) = 0.0025999999999999999; // (var_slow_delayed_rectifier_potassium_current__g_Ks) [microS]
        NV_Ith_S(this->mParameters, 18) = 0.00050000000000000001; // (var_sodium_calcium_exchanger__k_NaCa) [nanoA]
        NV_Ith_S(this->mParameters, 19) = 0.0050000000000000001; // (var_transient_outward_current__g_to) [microS]
    }

    Cellnoble_model_1998FromCellMLCvodeOpt::~Cellnoble_model_1998FromCellMLCvodeOpt()
    {
    }

    AbstractLookupTableCollection* Cellnoble_model_1998FromCellMLCvodeOpt::GetLookupTableCollection()
    {
        return Cellnoble_model_1998FromCellMLCvodeOpt_LookupTables::Instance();
    }
    

    void Cellnoble_model_1998FromCellMLCvodeOpt::VerifyStateVariables()
    {
        /* We only expect CVODE to keep state variables to within its tolerances,
         * not exactly the bounds prescribed to each variable that are checked here.
         *
         * For 99.99% of paces this->mAbsTol works,
         * For 99.999% of paces 10*this->mAbsTol is fine,
         * but unfortunately 100x seems to be required on rare occasions for upstrokes.
         * This sounds bad, but is probably typically only 1e-5 or 1e-6.
         */
        const double tol = 100*this->mAbsTol;
        N_Vector rY = rGetStateVariables();
        double var_chaste_interface__intracellular_calcium_concentration__Ca_ds = NV_Ith_S(rY, 17);
        // Units: millimolar; Initial value: 1.88e-05
        
        if (var_chaste_interface__intracellular_calcium_concentration__Ca_ds < 0.0 - tol)
        {
            EXCEPTION(DumpState("State variable dyadic_space_calcium_concentration has gone out of range. Check numerical parameters, for example time and space stepsizes, and/or solver tolerances"));
        }
        
    }

    
    double Cellnoble_model_1998FromCellMLCvodeOpt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 1.4e-05
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 1.03e-05
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 2e-07
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.001302
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.0016203
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.9944036
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.9651958
        double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.9948645
        double var_chaste_interface__transient_outward_current_r_gate__r = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 7.3321223
        double var_chaste_interface__intracellular_potassium_concentration__K_i = NV_Ith_S(rY, 16);
        // Units: millimolar; Initial value: 136.5644281
        double var_chaste_interface__intracellular_calcium_concentration__Ca_ds = NV_Ith_S(rY, 17);
        // Units: millimolar; Initial value: 1.88e-05
        
        // Lookup table indexing
        const bool _oob_0 = Cellnoble_model_1998FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellnoble_model_1998FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        const double var_L_type_Ca_channel__i_Ca_L_Ca_cyt = 0; // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Ca_ds = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 1.3356880329551402e-6) ? (-374338.90823576227 * (-50.000001335688033 + var_chaste_interface__membrane__V) * (-1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - NV_Ith_S(mParameters, 6) * exp(9.9999999997780743e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999997780743e-8)) - 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - NV_Ith_S(mParameters, 6) * exp(-9.9999999997780743e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) + 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - NV_Ith_S(mParameters, 6) * exp(-9.9999999997780743e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) : (0.14973556329098189 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - NV_Ith_S(mParameters, 6) * _lt_0_row[0]) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[1]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K_cyt = 0; // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K_ds = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 7) * exp(9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 7) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 7) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (7.4867781645490941e-5 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 7) * _lt_0_row[2]) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na_cyt = 0; // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na_ds = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 8) * exp(9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 8) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 8) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (0.00037433890822745472 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 8) * _lt_0_row[2]) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_calcium_background_current__i_b_Ca = 0.00025000000000000001 * var_chaste_interface__membrane__V - 0.0033392200824619565 * log(NV_Ith_S(mParameters, 6) / var_chaste_interface__intracellular_calcium_concentration__Ca_i); // nanoA
        const double var_reversal_potentials__E_K = 26.713760659695652 * log(NV_Ith_S(mParameters, 7) / var_chaste_interface__intracellular_potassium_concentration__K_i); // millivolt
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr_converted = 0.001 * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * (NV_Ith_S(mParameters, 15) * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1 + NV_Ith_S(mParameters, 16) * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2) * HeartConfig::Instance()->GetCapacitance() / ((_lt_0_row[4]) * NV_Ith_S(mParameters, 10)); // uA_per_cm2
        const double var_reversal_potentials__E_Na = 26.713760659695652 * log(NV_Ith_S(mParameters, 8) / var_chaste_interface__intracellular_sodium_concentration__Na_i); // millivolt
        const double var_persistent_sodium_current__i_p_Na = 0.0040000000000000001 * (-var_reversal_potentials__E_Na + var_chaste_interface__membrane__V) / (_lt_0_row[5]); // nanoA
        const double var_fast_sodium_current__i_Na_converted = 0.001 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-26.713760659695652 * log((NV_Ith_S(mParameters, 8) + 0.12 * NV_Ith_S(mParameters, 7)) / (var_chaste_interface__intracellular_sodium_concentration__Na_i + 0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i)) + var_chaste_interface__membrane__V) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 11) * var_chaste_interface__fast_sodium_current_h_gate__h / NV_Ith_S(mParameters, 10); // uA_per_cm2
        const double var_slow_delayed_rectifier_potassium_current__i_Ks_converted = 0.001 * pow(var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs, 2) * (-26.713760659695652 * log((0.029999999999999999 * NV_Ith_S(mParameters, 8) + NV_Ith_S(mParameters, 7)) / (0.029999999999999999 * var_chaste_interface__intracellular_sodium_concentration__Na_i + var_chaste_interface__intracellular_potassium_concentration__K_i)) + var_chaste_interface__membrane__V) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 17) / NV_Ith_S(mParameters, 10); // uA_per_cm2
        const double var_sodium_background_current__i_b_Na = 0.00059999999999999995 * var_chaste_interface__membrane__V - 0.00059999999999999995 * var_reversal_potentials__E_Na; // nanoA
        const double var_sodium_calcium_exchanger__d_NaCa = 0; // dimensionless
        const double var_sodium_calcium_exchanger__i_NaCa_cyt = 0.999 * (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * NV_Ith_S(mParameters, 6) * _lt_0_row[6] - pow(NV_Ith_S(mParameters, 8), 3.0) * var_chaste_interface__intracellular_calcium_concentration__Ca_i * _lt_0_row[7]) * NV_Ith_S(mParameters, 18) / ((1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i) * (1.0 + (pow(NV_Ith_S(mParameters, 8), 3.0) * var_chaste_interface__intracellular_calcium_concentration__Ca_i + pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * NV_Ith_S(mParameters, 6)) * var_sodium_calcium_exchanger__d_NaCa)); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa_ds = 0.001 * (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * NV_Ith_S(mParameters, 6) * _lt_0_row[6] - pow(NV_Ith_S(mParameters, 8), 3.0) * var_chaste_interface__intracellular_calcium_concentration__Ca_ds * _lt_0_row[7]) * NV_Ith_S(mParameters, 18) / ((1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds) * (1.0 + (pow(NV_Ith_S(mParameters, 8), 3.0) * var_chaste_interface__intracellular_calcium_concentration__Ca_ds + pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * NV_Ith_S(mParameters, 6)) * var_sodium_calcium_exchanger__d_NaCa)); // nanoA
        const double var_sodium_potassium_pump__i_NaK = 0.69999999999999996 * NV_Ith_S(mParameters, 7) * var_chaste_interface__intracellular_sodium_concentration__Na_i / ((1.0 + NV_Ith_S(mParameters, 7)) * (40.0 + var_chaste_interface__intracellular_sodium_concentration__Na_i)); // nanoA
        const double var_time_independent_potassium_current__i_K1_converted = 0.001 * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 14) / ((1.0 + exp(-0.46792363528431841 + 0.046792363528431836 * var_chaste_interface__membrane__V - 0.046792363528431836 * var_reversal_potentials__E_K)) * (10.0 + NV_Ith_S(mParameters, 7)) * NV_Ith_S(mParameters, 10)); // uA_per_cm2
        const double var_transient_outward_current__i_to_converted = 0.001 * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * HeartConfig::Instance()->GetCapacitance() * NV_Ith_S(mParameters, 19) * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s / NV_Ith_S(mParameters, 10); // uA_per_cm2
        const double var_chaste_interface__i_ionic = ((var_fast_sodium_current__i_Na_converted + var_rapid_delayed_rectifier_potassium_current__i_Kr_converted + var_slow_delayed_rectifier_potassium_current__i_Ks_converted + var_time_independent_potassium_current__i_K1_converted + var_transient_outward_current__i_to_converted) * NV_Ith_S(mParameters, 10) + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L_Ca_cyt + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L_Ca_ds + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L_K_cyt + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L_K_ds + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L_Na_cyt + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L_Na_ds + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_calcium_background_current__i_b_Ca + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_persistent_sodium_current__i_p_Na + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_sodium_background_current__i_b_Na + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_sodium_calcium_exchanger__i_NaCa_cyt + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_sodium_calcium_exchanger__i_NaCa_ds + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_sodium_potassium_pump__i_NaK) / NV_Ith_S(mParameters, 10); // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellnoble_model_1998FromCellMLCvodeOpt::EvaluateYDerivatives(double var_chaste_interface__environment__time_converted, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 1.4e-05
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 1.03e-05
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 2e-07
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.001302
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.0016203
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.9944036
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__L_type_Ca_channel_f2_gate__f2 = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.9349197
        double var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.9651958
        double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.9948645
        double var_chaste_interface__transient_outward_current_r_gate__r = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_release__ActFrac = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.0042614
        double var_chaste_interface__calcium_release__ProdFrac = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.4068154
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 7.3321223
        double var_chaste_interface__intracellular_potassium_concentration__K_i = NV_Ith_S(rY, 16);
        // Units: millimolar; Initial value: 136.5644281
        double var_chaste_interface__intracellular_calcium_concentration__Ca_ds = NV_Ith_S(rY, 17);
        // Units: millimolar; Initial value: 1.88e-05
        double var_chaste_interface__intracellular_calcium_concentration__Ca_up = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 0.4531889
        double var_chaste_interface__intracellular_calcium_concentration__Ca_rel = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 0.4481927
        double var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 0.0005555
        double var_chaste_interface__intracellular_calcium_concentration__Ca_Trop = NV_Ith_S(rY, 21);
        // Units: millimolar; Initial value: 0.0003542

        // Lookup table indexing
        const bool _oob_0 = Cellnoble_model_1998FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellnoble_model_1998FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        double d_dt_chaste_interface_var_membrane__V;
        const double d_dt_chaste_interface_var_L_type_Ca_channel_f2ds_gate__f2ds = 0.02 - 0.02 * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds - 0.02 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds / (0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_ds); // 1 / millisecond
        const double d_dt_chaste_interface_var_L_type_Ca_channel_f2_gate__f2 = 0.001 - 0.001 * var_chaste_interface__L_type_Ca_channel_f2_gate__f2 - 0.001 * var_chaste_interface__intracellular_calcium_concentration__Ca_i / (100000.0 + var_chaste_interface__intracellular_calcium_concentration__Ca_i); // 1 / millisecond
        const double var_calcium_release__RegBindSite = var_chaste_interface__intracellular_calcium_concentration__Ca_i / (NV_Ith_S(mParameters, 2) + var_chaste_interface__intracellular_calcium_concentration__Ca_i) + (1.0 - var_chaste_interface__intracellular_calcium_concentration__Ca_i / (NV_Ith_S(mParameters, 2) + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * var_chaste_interface__intracellular_calcium_concentration__Ca_ds / (NV_Ith_S(mParameters, 3) + var_chaste_interface__intracellular_calcium_concentration__Ca_ds); // dimensionless
        const double var_calcium_release__InactRate = 60.0 + 500.0 * pow(var_calcium_release__RegBindSite, 2); // per_second
        const double var_calcium_release__i_rel = (pow(var_chaste_interface__calcium_release__ActFrac, 2) * NV_Ith_S(mParameters, 1) / pow((0.25 + var_chaste_interface__calcium_release__ActFrac), 2) + NV_Ith_S(mParameters, 0)) * var_chaste_interface__intracellular_calcium_concentration__Ca_rel; // millimolar_per_second
        const double var_calcium_translocation__i_trans = 50.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_up - 50.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_rel; // millimolar_per_second
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_rel = 9.9999999999999991e-5 * var_calcium_translocation__i_trans - 0.001 * var_calcium_release__i_rel; // millimolar / millisecond
        const double var_intracellular_calcium_concentration__Ca_Calmod_orig_deriv = -50.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod + 100000.0 * (0.02 - var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod) * var_chaste_interface__intracellular_calcium_concentration__Ca_i; // millimolar / second
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_Calmod = 0.001 * var_intracellular_calcium_concentration__Ca_Calmod_orig_deriv; // millimolar / millisecond
        const double var_intracellular_calcium_concentration__Ca_Trop_orig_deriv = -200.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_Trop + 100000.0 * (0.050000000000000003 - var_chaste_interface__intracellular_calcium_concentration__Ca_Trop) * var_chaste_interface__intracellular_calcium_concentration__Ca_i; // millimolar / second
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_Trop = 0.001 * var_intracellular_calcium_concentration__Ca_Trop_orig_deriv; // millimolar / millisecond
        const double var_L_type_Ca_channel__i_Ca_L_Ca_cyt = 0; // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Ca_ds = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 1.3356880329551402e-6) ? (-374338.90823576227 * (-50.000001335688033 + var_chaste_interface__membrane__V) * (-1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - NV_Ith_S(mParameters, 6) * exp(9.9999999997780743e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999997780743e-8)) - 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - NV_Ith_S(mParameters, 6) * exp(-9.9999999997780743e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) + 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - NV_Ith_S(mParameters, 6) * exp(-9.9999999997780743e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) : (0.14973556329098189 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - NV_Ith_S(mParameters, 6) * _lt_0_row[0]) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[1]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K_cyt = 0; // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K_ds = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 7) * exp(9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 7) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 7) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (7.4867781645490941e-5 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 7) * _lt_0_row[2]) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na_cyt = 0; // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na_ds = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 8) * exp(9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 8) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 8) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (0.00037433890822745472 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 8) * _lt_0_row[2]) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d = 0.0030000000000000001 * (1.0 - var_chaste_interface__L_type_Ca_channel_d_gate__d) * _lt_0_row[8] - 0.0030000000000000001 * _lt_0_row[9] * var_chaste_interface__L_type_Ca_channel_d_gate__d; // 1 / millisecond
        const double d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f = 0.00029999999999999997 * (1.0 - var_chaste_interface__L_type_Ca_channel_f_gate__f) * _lt_0_row[10] - 0.0035999999999999999 * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[11]); // 1 / millisecond
        const double var_calcium_release__SpeedRel = ((var_chaste_interface__membrane__V < -50.0) ? (5.0) : (1.0)); // dimensionless
        const double d_dt_chaste_interface_var_calcium_release__ActFrac = 0.5 * pow(var_calcium_release__RegBindSite, 2) * (1.0 - var_chaste_interface__calcium_release__ActFrac - var_chaste_interface__calcium_release__ProdFrac) * var_calcium_release__SpeedRel - 0.001 * var_chaste_interface__calcium_release__ActFrac * var_calcium_release__InactRate * var_calcium_release__SpeedRel; // 1 / millisecond
        const double d_dt_chaste_interface_var_calcium_release__ProdFrac = -0.001 * var_chaste_interface__calcium_release__ProdFrac * var_calcium_release__SpeedRel + 0.001 * var_chaste_interface__calcium_release__ActFrac * var_calcium_release__InactRate * var_calcium_release__SpeedRel; // 1 / millisecond
        const double var_fast_sodium_current_h_gate__alpha_h = 20.0 * exp(-9.375 + 0.125 * NV_Ith_S(mParameters, 13) - 0.125 * var_chaste_interface__membrane__V); // per_second
        const double var_fast_sodium_current_h_gate__beta_h = 2000.0 / (1.0 + 320.0 * exp(-7.5 + 0.10000000000000001 * NV_Ith_S(mParameters, 13) - 0.10000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double d_dt_chaste_interface_var_fast_sodium_current_h_gate__h = 0.001 * (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h) * (-var_chaste_interface__fast_sodium_current_h_gate__h + 0.01 * NV_Ith_S(mParameters, 12) + (1.0 - 0.01 * NV_Ith_S(mParameters, 12)) * var_fast_sodium_current_h_gate__alpha_h / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h)); // 1 / millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_m_gate__m = 0.001 * (1.0 - var_chaste_interface__fast_sodium_current_m_gate__m) * _lt_0_row[12] - 8.0 * var_chaste_interface__fast_sodium_current_m_gate__m * _lt_0_row[13]; // 1 / millisecond
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_ds = -0.01 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds - 0.003159137300842461 * var_L_type_Ca_channel__i_Ca_L_Ca_ds; // millimolar / millisecond
        const double d_dt_chaste_interface_var_rapid_delayed_rectifier_potassium_current_xr1_gate__xr1 = 0.050000000000000003 * (1.0 - var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1) / (_lt_0_row[14]) - 5.0000000000000002e-5 * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1 * _lt_0_row[15]; // 1 / millisecond
        const double d_dt_chaste_interface_var_rapid_delayed_rectifier_potassium_current_xr2_gate__xr2 = 0.050000000000000003 * (1.0 - var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2) / (_lt_0_row[14]) - 0.00040000000000000002 * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2 * _lt_0_row[16]; // 1 / millisecond
        const double var_calcium_background_current__i_b_Ca = 0.00025000000000000001 * var_chaste_interface__membrane__V - 0.0033392200824619565 * log(NV_Ith_S(mParameters, 6) / var_chaste_interface__intracellular_calcium_concentration__Ca_i); // nanoA
        const double var_reversal_potentials__E_K = 26.713760659695652 * log(NV_Ith_S(mParameters, 7) / var_chaste_interface__intracellular_potassium_concentration__K_i); // millivolt
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * (NV_Ith_S(mParameters, 15) * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1 + NV_Ith_S(mParameters, 16) * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2) / (_lt_0_row[4]); // nanoA
        const double var_reversal_potentials__E_Na = 26.713760659695652 * log(NV_Ith_S(mParameters, 8) / var_chaste_interface__intracellular_sodium_concentration__Na_i); // millivolt
        const double var_persistent_sodium_current__i_p_Na = 0.0040000000000000001 * (-var_reversal_potentials__E_Na + var_chaste_interface__membrane__V) / (_lt_0_row[5]); // nanoA
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-26.713760659695652 * log((NV_Ith_S(mParameters, 8) + 0.12 * NV_Ith_S(mParameters, 7)) / (var_chaste_interface__intracellular_sodium_concentration__Na_i + 0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i)) + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 11) * var_chaste_interface__fast_sodium_current_h_gate__h; // nanoA
        const double var_sarcoplasmic_reticulum_calcium_pump__i_up = (0.40000000000000002 * var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.00041999999999999996 + 0.00023999999999999998 * var_chaste_interface__intracellular_calcium_concentration__Ca_up + var_chaste_interface__intracellular_calcium_concentration__Ca_i) - 7.1999999999999997e-6 * var_chaste_interface__intracellular_calcium_concentration__Ca_up / (0.00041999999999999996 + 0.00023999999999999998 * var_chaste_interface__intracellular_calcium_concentration__Ca_up + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * NV_Ith_S(mParameters, 4); // millimolar_per_second
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_up = 0.048999999999999995 * var_sarcoplasmic_reticulum_calcium_pump__i_up - 0.001 * var_calcium_translocation__i_trans; // millimolar / millisecond
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = pow(var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs, 2) * (-26.713760659695652 * log((0.029999999999999999 * NV_Ith_S(mParameters, 8) + NV_Ith_S(mParameters, 7)) / (0.029999999999999999 * var_chaste_interface__intracellular_sodium_concentration__Na_i + var_chaste_interface__intracellular_potassium_concentration__K_i)) + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 17); // nanoA
        const double d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs_gate__xs = 0.014 * (1.0 - var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs) / (_lt_0_row[17]) - 0.001 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs * _lt_0_row[18]; // 1 / millisecond
        const double var_sodium_background_current__i_b_Na = 0.00059999999999999995 * var_chaste_interface__membrane__V - 0.00059999999999999995 * var_reversal_potentials__E_Na; // nanoA
        const double var_sodium_calcium_exchanger__d_NaCa = 0; // dimensionless
        const double var_sodium_calcium_exchanger__i_NaCa_cyt = 0.999 * (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * NV_Ith_S(mParameters, 6) * _lt_0_row[6] - pow(NV_Ith_S(mParameters, 8), 3.0) * var_chaste_interface__intracellular_calcium_concentration__Ca_i * _lt_0_row[7]) * NV_Ith_S(mParameters, 18) / ((1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i) * (1.0 + (pow(NV_Ith_S(mParameters, 8), 3.0) * var_chaste_interface__intracellular_calcium_concentration__Ca_i + pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * NV_Ith_S(mParameters, 6)) * var_sodium_calcium_exchanger__d_NaCa)); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa_ds = 0.001 * (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * NV_Ith_S(mParameters, 6) * _lt_0_row[6] - pow(NV_Ith_S(mParameters, 8), 3.0) * var_chaste_interface__intracellular_calcium_concentration__Ca_ds * _lt_0_row[7]) * NV_Ith_S(mParameters, 18) / ((1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds) * (1.0 + (pow(NV_Ith_S(mParameters, 8), 3.0) * var_chaste_interface__intracellular_calcium_concentration__Ca_ds + pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * NV_Ith_S(mParameters, 6)) * var_sodium_calcium_exchanger__d_NaCa)); // nanoA
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_i = 0.00063182746016849224 * var_sodium_calcium_exchanger__i_NaCa_cyt + 0.00063182746016849224 * var_sodium_calcium_exchanger__i_NaCa_ds + 0.00020408163265306126 * var_calcium_release__i_rel + 0.001 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds - 0.001 * var_intracellular_calcium_concentration__Ca_Calmod_orig_deriv - 0.001 * var_intracellular_calcium_concentration__Ca_Trop_orig_deriv - 0.001 * var_sarcoplasmic_reticulum_calcium_pump__i_up - 0.00031591373008424612 * var_L_type_Ca_channel__i_Ca_L_Ca_cyt - 0.00031591373008424612 * var_calcium_background_current__i_b_Ca; // millimolar / millisecond
        const double var_sodium_potassium_pump__i_NaK = 0.69999999999999996 * NV_Ith_S(mParameters, 7) * var_chaste_interface__intracellular_sodium_concentration__Na_i / ((1.0 + NV_Ith_S(mParameters, 7)) * (40.0 + var_chaste_interface__intracellular_sodium_concentration__Na_i)); // nanoA
        const double d_dt_chaste_interface_var_intracellular_sodium_concentration__Na_i = -0.00063182746016849224 * (3.0 * var_sodium_calcium_exchanger__i_NaCa_cyt + 3.0 * var_sodium_potassium_pump__i_NaK + var_L_type_Ca_channel__i_Ca_L_Na_cyt + var_L_type_Ca_channel__i_Ca_L_Na_ds + var_fast_sodium_current__i_Na + var_persistent_sodium_current__i_p_Na + var_sodium_background_current__i_b_Na) * NV_Ith_S(mParameters, 5); // millimolar / millisecond
        const double var_time_independent_potassium_current__i_K1 = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 14) / ((1.0 + exp(-0.46792363528431841 + 0.046792363528431836 * var_chaste_interface__membrane__V - 0.046792363528431836 * var_reversal_potentials__E_K)) * (10.0 + NV_Ith_S(mParameters, 7))); // nanoA
        const double d_dt_chaste_interface_var_transient_outward_current_r_gate__r = _lt_0_row[19] - 0.33300000000000002 * var_chaste_interface__transient_outward_current_r_gate__r; // 1 / millisecond
        const double var_transient_outward_current__i_to = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 19) * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s; // nanoA
        const double d_dt_chaste_interface_var_intracellular_potassium_concentration__K_i = -0.00063182746016849224 * (-2.0 * var_sodium_potassium_pump__i_NaK + var_L_type_Ca_channel__i_Ca_L_K_cyt + var_L_type_Ca_channel__i_Ca_L_K_ds + var_rapid_delayed_rectifier_potassium_current__i_Kr + var_slow_delayed_rectifier_potassium_current__i_Ks + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) * NV_Ith_S(mParameters, 5); // millimolar / millisecond
        const double d_dt_chaste_interface_var_transient_outward_current_s_gate__s = 3.3000000000000003e-5 * (1.0 - var_chaste_interface__transient_outward_current_s_gate__s) * _lt_0_row[20] - 0.033000000000000002 * var_chaste_interface__transient_outward_current_s_gate__s / (_lt_0_row[21]); // 1 / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_membrane__V = 0.0;
        }
        else
        {
            d_dt_chaste_interface_var_membrane__V = -0.001 * (1000.0 * GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted) * NV_Ith_S(mParameters, 10) / HeartConfig::Instance()->GetCapacitance() + var_L_type_Ca_channel__i_Ca_L_Ca_cyt + var_L_type_Ca_channel__i_Ca_L_Ca_ds + var_L_type_Ca_channel__i_Ca_L_K_cyt + var_L_type_Ca_channel__i_Ca_L_K_ds + var_L_type_Ca_channel__i_Ca_L_Na_cyt + var_L_type_Ca_channel__i_Ca_L_Na_ds + var_calcium_background_current__i_b_Ca + var_fast_sodium_current__i_Na + var_persistent_sodium_current__i_p_Na + var_rapid_delayed_rectifier_potassium_current__i_Kr + var_slow_delayed_rectifier_potassium_current__i_Ks + var_sodium_background_current__i_b_Na + var_sodium_calcium_exchanger__i_NaCa_cyt + var_sodium_calcium_exchanger__i_NaCa_ds + var_sodium_potassium_pump__i_NaK + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) / NV_Ith_S(mParameters, 10); // millivolt / millisecond
        }
        
        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_membrane__V;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_i;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_rapid_delayed_rectifier_potassium_current_xr1_gate__xr1;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_rapid_delayed_rectifier_potassium_current_xr2_gate__xr2;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs_gate__xs;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_fast_sodium_current_m_gate__m;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_fast_sodium_current_h_gate__h;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d;
        NV_Ith_S(rDY,8) = d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f;
        NV_Ith_S(rDY,9) = d_dt_chaste_interface_var_L_type_Ca_channel_f2_gate__f2;
        NV_Ith_S(rDY,10) = d_dt_chaste_interface_var_L_type_Ca_channel_f2ds_gate__f2ds;
        NV_Ith_S(rDY,11) = d_dt_chaste_interface_var_transient_outward_current_s_gate__s;
        NV_Ith_S(rDY,12) = d_dt_chaste_interface_var_transient_outward_current_r_gate__r;
        NV_Ith_S(rDY,13) = d_dt_chaste_interface_var_calcium_release__ActFrac;
        NV_Ith_S(rDY,14) = d_dt_chaste_interface_var_calcium_release__ProdFrac;
        NV_Ith_S(rDY,15) = d_dt_chaste_interface_var_intracellular_sodium_concentration__Na_i;
        NV_Ith_S(rDY,16) = d_dt_chaste_interface_var_intracellular_potassium_concentration__K_i;
        NV_Ith_S(rDY,17) = d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_ds;
        NV_Ith_S(rDY,18) = d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_up;
        NV_Ith_S(rDY,19) = d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_rel;
        NV_Ith_S(rDY,20) = d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_Calmod;
        NV_Ith_S(rDY,21) = d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_Trop;
    }

    void Cellnoble_model_1998FromCellMLCvodeOpt::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time_converted, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 1.4e-05
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 1.03e-05
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 2e-07
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.001302
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.0016203
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.9944036
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.9651958
        double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.9948645
        double var_chaste_interface__transient_outward_current_r_gate__r = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_release__ActFrac = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.0042614
        double var_chaste_interface__calcium_release__ProdFrac = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.4068154
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 7.3321223
        double var_chaste_interface__intracellular_potassium_concentration__K_i = NV_Ith_S(rY, 16);
        // Units: millimolar; Initial value: 136.5644281
        double var_chaste_interface__intracellular_calcium_concentration__Ca_ds = NV_Ith_S(rY, 17);
        // Units: millimolar; Initial value: 1.88e-05
        double var_chaste_interface__intracellular_calcium_concentration__Ca_up = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 0.4531889
        double var_chaste_interface__intracellular_calcium_concentration__Ca_rel = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 0.4481927
        double var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 0.0005555
        double var_chaste_interface__intracellular_calcium_concentration__Ca_Trop = NV_Ith_S(rY, 21);
        // Units: millimolar; Initial value: 0.0003542
        
        // Lookup table indexing
        const bool _oob_0 = Cellnoble_model_1998FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellnoble_model_1998FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);
const double var_x0 = -0.125 * var_chaste_interface__membrane__V;
        const double var_x1 = exp(-6.5 + var_x0);
        const double var_x2 = 1.0 + var_x1;
        const double var_x3 = 1 / var_x2;
        const double var_x4 = pow(var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs, 2) * NV_Ith_S(mParameters, 17);
        const double var_x5 = exp(0.4017857142857143 + 0.044642857142857144 * var_chaste_interface__membrane__V);
        const double var_x6 = 1.0 + var_x5;
        const double var_x7 = 1 / var_x6;
        const double var_x8 = NV_Ith_S(mParameters, 15) * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1 + NV_Ith_S(mParameters, 16) * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2;
        const double var_x9 = var_x7 * var_x8;
        const double var_x10 = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * NV_Ith_S(mParameters, 11);
        const double var_x11 = var_x10 * var_chaste_interface__fast_sodium_current_h_gate__h;
        const double var_x12 = NV_Ith_S(mParameters, 19) * var_chaste_interface__transient_outward_current_r_gate__r;
        const double var_x13 = var_x12 * var_chaste_interface__transient_outward_current_s_gate__s;
        const double var_x14 = 1 / var_chaste_interface__intracellular_sodium_concentration__Na_i;
        const double var_x15 = var_x1 * (-26.713760659695652 * log(var_x14 * NV_Ith_S(mParameters, 8)) + var_chaste_interface__membrane__V) / pow(var_x2, 2);
        const double var_x16 = 0.018716945411372737 * var_chaste_interface__membrane__V;
        const double var_x17 = pow(NV_Ith_S(mParameters, 8), 3.0) * exp(-var_x16);
        const double var_x18 = var_x17 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds;
        const double var_x19 = NV_Ith_S(mParameters, 6) * exp(var_x16);
        const double var_x20 = var_x19 * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0);
        const double var_x21 = 0.018716945411372737 * var_x20;
        const double var_x22 = NV_Ith_S(mParameters, 18) / (1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds);
        const double var_x23 = var_x22 * (var_x21 + 0.018716945411372737 * var_x18);
        const double var_x24 = var_x17 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
        const double var_x25 = NV_Ith_S(mParameters, 18) / (1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i);
        const double var_x26 = var_x25 * (var_x21 + 0.018716945411372737 * var_x24);
        const double var_x27 = 1 / var_chaste_interface__intracellular_potassium_concentration__K_i;
        const double var_x28 = var_x27 * NV_Ith_S(mParameters, 7);
        const double var_x29 = log(var_x28);
        const double var_x30 = exp(-0.46792363528431841 + 0.046792363528431836 * var_chaste_interface__membrane__V - 1.25 * var_x29);
        const double var_x31 = 1.0 + var_x30;
        const double var_x32 = NV_Ith_S(mParameters, 14) / (10.0 + NV_Ith_S(mParameters, 7));
        const double var_x33 = var_x32 / var_x31;
        const double var_x34 = var_x33 * NV_Ith_S(mParameters, 7);
        const double var_x35 = -26.713760659695652 * var_x29;
        const double var_x36 = var_x35 + var_chaste_interface__membrane__V;
        const double var_x37 = var_x36 * var_x5 * var_x8 / pow(var_x6, 2);
        const double var_x38 = var_x30 * var_x32 * var_x36 / pow(var_x31, 2);
        const double var_x39 = var_x38 * NV_Ith_S(mParameters, 7);
        const double var_x40 = exp(9.9999999999858739e-8);
        const double var_x41 = 1 / (1.0 - var_x40);
        const double var_x42 = exp(1.8716945411372736);
        const double var_x43 = var_x42 * var_chaste_interface__intracellular_potassium_concentration__K_i;
        const double var_x44 = var_x41 * (var_x43 - var_x40 * NV_Ith_S(mParameters, 7));
        const double var_x45 = NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds;
        const double var_x46 = var_x45 * var_chaste_interface__L_type_Ca_channel_f_gate__f;
        const double var_x47 = var_x46 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x48 = 3.743389082274547e-5 * var_x47;
        const double var_x49 = exp(-9.9999999999858739e-8);
        const double var_x50 = 1 / (1.0 - var_x49);
        const double var_x51 = var_x50 * (var_x43 - var_x49 * NV_Ith_S(mParameters, 7));
        const double var_x52 = -50.0 + var_chaste_interface__membrane__V;
        const double var_x53 = fabs(var_x52);
        const double var_x54 = var_x53 < 2.6713760659657915e-6;
        const double var_x55 = _lt_0_row[2];
        const double var_x56 = 1.0 - var_x55;
        const double var_x57 = 1 / var_x56;
        const double var_x58 = var_x47 * var_x57;
        const double var_x59 = var_x55 * NV_Ith_S(mParameters, 7);
        const double var_x60 = var_x43 - var_x59;
        const double var_x61 = 7.4867781645490941e-5 * var_x60;
        const double var_x62 = var_x52 * var_x58;
        const double var_x63 = var_x47 * var_x52;
        const double var_x64 = var_x55 * var_x63 / pow(var_x56, 2);
        const double var_x65 = ((var_x54) ? (var_x44 * var_x48 + var_x48 * var_x51) : (var_x58 * var_x61 + 2.8025923642584555e-6 * var_x59 * var_x62 - 2.8025923642584555e-6 * var_x60 * var_x64));
        const double var_x66 = var_x42 * var_chaste_interface__intracellular_sodium_concentration__Na_i;
        const double var_x67 = var_x41 * (var_x66 - var_x40 * NV_Ith_S(mParameters, 8));
        const double var_x68 = var_x67 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x69 = 0.00018716945411372736 * var_x46;
        const double var_x70 = var_x50 * (var_x66 - var_x49 * NV_Ith_S(mParameters, 8));
        const double var_x71 = var_x70 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x72 = var_x55 * NV_Ith_S(mParameters, 8);
        const double var_x73 = var_x66 - var_x72;
        const double var_x74 = 0.00037433890822745472 * var_x73;
        const double var_x75 = ((var_x54) ? (var_x68 * var_x69 + var_x69 * var_x71) : (var_x58 * var_x74 + 1.4012961821292276e-5 * var_x62 * var_x72 - 1.4012961821292276e-5 * var_x64 * var_x73));
        const double var_x76 = exp(9.9999999997780743e-8);
        const double var_x77 = 1 / (1.0 - var_x76);
        const double var_x78 = exp(3.7433890822745473);
        const double var_x79 = var_x78 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
        const double var_x80 = var_x77 * (var_x79 - var_x76 * NV_Ith_S(mParameters, 6));
        const double var_x81 = 0.074867781645490947 * var_x47;
        const double var_x82 = exp(-9.9999999997780743e-8);
        const double var_x83 = 1 / (1.0 - var_x82);
        const double var_x84 = var_x83 * (var_x79 - var_x82 * NV_Ith_S(mParameters, 6));
        const double var_x85 = var_x53 < 1.3356880329551402e-6;
        const double var_x86 = _lt_0_row[0];
        const double var_x87 = 1.0 - var_x86;
        const double var_x88 = 1 / var_x87;
        const double var_x89 = var_x47 * var_x88;
        const double var_x90 = var_x86 * NV_Ith_S(mParameters, 6);
        const double var_x91 = var_x79 - var_x90;
        const double var_x92 = 0.14973556329098189 * var_x91;
        const double var_x93 = var_x52 * var_x89;
        const double var_x94 = ((var_x85) ? (var_x80 * var_x81 + var_x81 * var_x84) : (var_x89 * var_x92 + 0.011210369457033822 * var_x90 * var_x93 - 0.011210369457033822 * var_x63 * var_x86 * var_x91 / pow(var_x87, 2)));
        const double var_x95 = 1 / NV_Ith_S(mParameters, 10);
        const double var_x96 = 0.001 * var_x95;
        const double var_x97 = 1 / var_chaste_interface__intracellular_calcium_concentration__Ca_i;
        const double var_x98 = (var_x20 - var_x24) * NV_Ith_S(mParameters, 18) / pow((0.0068999999999999999 + var_chaste_interface__intracellular_calcium_concentration__Ca_i), 2);
        const double var_x99 = var_x17 * var_x25;
        const double var_x100 = 18716945.911788113 - 374338.90823576227 * var_chaste_interface__membrane__V;
        const double var_x101 = 1.9999999999556149e-7 * var_x46;
        const double var_x102 = var_x101 * var_x78 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x103 = var_x102 * var_x83;
        const double var_x104 = ((var_x85) ? (var_x103 + var_x100 * (-var_x103 - var_x102 * var_x77)) : (0.14973556329098189 * var_x78 * var_x93));
        const double var_x105 = var_x36 * var_x7;
        const double var_x106 = var_x105 * var_x96;
        const double var_x107 = 1 / (0.029999999999999999 * var_chaste_interface__intracellular_sodium_concentration__Na_i + var_chaste_interface__intracellular_potassium_concentration__K_i);
        const double var_x108 = (-26.713760659695652 * log(var_x107 * (0.029999999999999999 * NV_Ith_S(mParameters, 8) + NV_Ith_S(mParameters, 7))) + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 17) * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs;
        const double var_x109 = 1 / (var_chaste_interface__intracellular_sodium_concentration__Na_i + 0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i);
        const double var_x110 = -26.713760659695652 * log(var_x109 * (NV_Ith_S(mParameters, 8) + 0.12 * NV_Ith_S(mParameters, 7))) + var_chaste_interface__membrane__V;
        const double var_x111 = var_x110 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 2) * NV_Ith_S(mParameters, 11) * var_chaste_interface__fast_sodium_current_h_gate__h;
        const double var_x112 = var_x10 * var_x110;
        const double var_x113 = 9358473.2056995872 - 187169.45411399176 * var_chaste_interface__membrane__V;
        const double var_x114 = 9.9999999999858744e-10 * var_x46;
        const double var_x115 = var_x114 * var_x70;
        const double var_x116 = var_x46 * var_x52;
        const double var_x117 = var_x116 * var_x57;
        const double var_x118 = ((var_x54) ? (var_x115 + var_x113 * (-var_x115 - var_x114 * var_x67)) : (var_x117 * var_x74));
        const double var_x119 = 1.999999999997175e-10 * var_x46;
        const double var_x120 = var_x119 * var_x51;
        const double var_x121 = ((var_x54) ? (var_x120 + var_x113 * (-var_x120 - var_x119 * var_x44)) : (var_x117 * var_x61));
        const double var_x122 = var_x101 * var_x84;
        const double var_x123 = var_x88 * var_x92;
        const double var_x124 = ((var_x85) ? (var_x122 + var_x100 * (-var_x122 - var_x101 * var_x80)) : (var_x116 * var_x123));
        const double var_x125 = var_x45 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x126 = 9.9999999999858744e-10 * var_x125;
        const double var_x127 = var_x126 * var_x70;
        const double var_x128 = var_x125 * var_x52;
        const double var_x129 = var_x128 * var_x57;
        const double var_x130 = ((var_x54) ? (var_x127 + var_x113 * (-var_x127 - var_x126 * var_x67)) : (var_x129 * var_x74));
        const double var_x131 = 1.999999999997175e-10 * var_x125;
        const double var_x132 = var_x131 * var_x51;
        const double var_x133 = ((var_x54) ? (var_x132 + var_x113 * (-var_x132 - var_x131 * var_x44)) : (var_x129 * var_x61));
        const double var_x134 = 1.9999999999556149e-7 * var_x125;
        const double var_x135 = var_x134 * var_x84;
        const double var_x136 = ((var_x85) ? (var_x135 + var_x100 * (-var_x135 - var_x134 * var_x80)) : (var_x123 * var_x128));
        const double var_x137 = NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_f_gate__f;
        const double var_x138 = 9.9999999999858744e-10 * var_x137;
        const double var_x139 = var_x138 * var_x71;
        const double var_x140 = var_x137 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x141 = var_x140 * var_x52;
        const double var_x142 = var_x141 * var_x57;
        const double var_x143 = ((var_x54) ? (var_x139 + var_x113 * (-var_x139 - var_x138 * var_x68)) : (var_x142 * var_x74));
        const double var_x144 = 1.999999999997175e-10 * var_x140;
        const double var_x145 = var_x144 * var_x51;
        const double var_x146 = ((var_x54) ? (var_x145 + var_x113 * (-var_x145 - var_x144 * var_x44)) : (var_x142 * var_x61));
        const double var_x147 = 1.9999999999556149e-7 * var_x140;
        const double var_x148 = var_x147 * var_x84;
        const double var_x149 = ((var_x85) ? (var_x148 + var_x100 * (-var_x148 - var_x147 * var_x80)) : (var_x123 * var_x141));
        const double var_x150 = var_x35 + var_chaste_interface__membrane__V;
        const double var_x151 = var_x150 * var_x96;
        const double var_x152 = NV_Ith_S(mParameters, 19) * var_chaste_interface__transient_outward_current_s_gate__s;
        const double var_x153 = var_x14 * var_x3;
        const double var_x154 = NV_Ith_S(mParameters, 7) / (1.0 + NV_Ith_S(mParameters, 7));
        const double var_x155 = var_x154 / (40.0 + var_chaste_interface__intracellular_sodium_concentration__Na_i);
        const double var_x156 = var_x107 * var_x4;
        const double var_x157 = var_x109 * var_x11;
        const double var_x158 = var_x154 * var_chaste_interface__intracellular_sodium_concentration__Na_i / pow((1 + 0.025000000000000001 * var_chaste_interface__intracellular_sodium_concentration__Na_i), 2);
        const double var_x159 = var_x19 * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 2.0);
        const double var_x160 = var_x159 * var_x22;
        const double var_x161 = var_x159 * var_x25;
        const double var_x162 = var_x42 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x163 = var_x114 * var_x162;
        const double var_x164 = var_x163 * var_x50;
        const double var_x165 = var_x42 * var_x62;
        const double var_x166 = ((var_x54) ? (var_x164 + var_x113 * (-var_x164 - var_x163 * var_x41)) : (0.00037433890822745472 * var_x165));
        const double var_x167 = var_x27 * var_x9;
        const double var_x168 = var_x13 * var_x27;
        const double var_x169 = var_x28 * var_x33;
        const double var_x170 = var_x28 * var_x38;
        const double var_x171 = var_x119 * var_x162;
        const double var_x172 = var_x171 * var_x50;
        const double var_x173 = ((var_x54) ? (var_x172 + var_x113 * (-var_x172 - var_x171 * var_x41)) : (7.4867781645490941e-5 * var_x165));
        const double var_x174 = (var_x20 - var_x18) * NV_Ith_S(mParameters, 18) / pow((0.0068999999999999999 + var_chaste_interface__intracellular_calcium_concentration__Ca_ds), 2);
        const double var_x175 = var_x17 * var_x22;
        const double var_x176 = 100.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod;
        const double var_x177 = 100.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_Trop;
        const double var_x178 = 0.00041999999999999996 + 0.00023999999999999998 * var_chaste_interface__intracellular_calcium_concentration__Ca_up + var_chaste_interface__intracellular_calcium_concentration__Ca_i;
        const double var_x179 = 1 / var_x178;
        const double var_x180 = pow(var_x178, (-2));
        const double var_x181 = var_x180 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
        const double var_x182 = var_x180 * var_chaste_interface__intracellular_calcium_concentration__Ca_up;
        const double var_x183 = 0.00040816326530612252 * NV_Ith_S(mParameters, 1);
        const double var_x184 = 0.25 + var_chaste_interface__calcium_release__ActFrac;
        const double var_x185 = pow(var_x184, (-2));
        const double var_x186 = var_x185 * var_chaste_interface__calcium_release__ActFrac;
        const double var_x187 = pow(var_chaste_interface__calcium_release__ActFrac, 2);
        const double var_x188 = var_x187 / pow(var_x184, 3);
        const double var_x189 = var_x185 * var_x187 * NV_Ith_S(mParameters, 1);
        const double var_x190 = 100.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
        const double var_x191 = _lt_0_row[15];
        const double var_x192 = -0.1111111111111111 * var_chaste_interface__membrane__V;
        const double var_x193 = exp(0.55555555555555558 + var_x192);
        const double var_x194 = 1.0 + var_x193;
        const double var_x195 = 0.0055555555555555558 * var_x193 / pow(var_x194, 2);
        const double var_x196 = -0.050000000000000003 / var_x194;
        const double var_x197 = 1.0 + 0.033333333333333333 * var_chaste_interface__membrane__V;
        const double var_x198 = exp(-pow(var_x197, 3));
        const double var_x199 = _lt_0_row[18];
        const double var_x200 = exp(4.4444444444444446 + var_x192);
        const double var_x201 = 1.0 + var_x200;
        const double var_x202 = 1 / (1.0 - exp(1.0000000000287557e-7));
        const double var_x203 = 1 / (1.0 - exp(-1.0000000000287557e-7));
        const double var_x204 = _lt_0_row[13];
        const double var_x205 = 0.44800000000000001 * var_x204 * var_chaste_interface__fast_sodium_current_m_gate__m;
        const double var_x206 = 41.0 + var_chaste_interface__membrane__V;
        const double var_x207 = fabs(var_x206) < 1.0000000000287557e-6;
        const double var_x208 = 1.0 - var_chaste_interface__fast_sodium_current_m_gate__m;
        const double var_x209 = -0.10000000000000001 * var_chaste_interface__membrane__V;
        const double var_x210 = exp(-4.1000000000000005 + var_x209);
        const double var_x211 = 1.0 - var_x210;
        const double var_x212 = 0.20000000000000001 / var_x211;
        const double var_x213 = -8.0 * var_x204;
        const double var_x214 = exp(-7.5 + var_x209 + 0.10000000000000001 * NV_Ith_S(mParameters, 13));
        const double var_x215 = 1 / (1.0 + 320.0 * var_x214);
        const double var_x216 = 2.0 * var_x215;
        const double var_x217 = exp(-9.375 + var_x0 + 0.125 * NV_Ith_S(mParameters, 13));
        const double var_x218 = 0.02 * var_x217;
        const double var_x219 = 2.5 * var_x217;
        const double var_x220 = 20.0 * var_x217;
        const double var_x221 = 0.01 * NV_Ith_S(mParameters, 12);
        const double var_x222 = 1.0 - var_x221;
        const double var_x223 = var_x222 / (var_x220 + 2000.0 * var_x215);
        const double var_x224 = var_x214 / pow((0.0031250000000000002 + var_x214), 2);
        const double var_x225 = exp(1.0000000000287557e-7);
        const double var_x226 = 1 / (1.0 - var_x225);
        const double var_x227 = exp(-1.0000000000287557e-7);
        const double var_x228 = 1 / (1.0 - var_x227);
        const double var_x229 = 1 / (-1.0 + exp(-9.9999999997324457e-8));
        const double var_x230 = 1 / (-1.0 + exp(1.0000000000010001e-7));
        const double var_x231 = (-0.017999999999750198 * var_x229 - 0.018000000000249799 * var_x230) * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x232 = 19.0 + var_chaste_interface__membrane__V;
        const double var_x233 = fabs(var_x232);
        const double var_x234 = var_x233 < 4.0000000001150227e-7;
        const double var_x235 = 1.0 - var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x236 = 0.25 * var_chaste_interface__membrane__V;
        const double var_x237 = -var_x236;
        const double var_x238 = exp(-4.75 + var_x237);
        const double var_x239 = 1.0 - var_x238;
        const double var_x240 = 0.089999999999999997 / var_x239;
        const double var_x241 = var_x235 * var_x240 - 0.022499999999999999 * var_x232 * var_x235 * var_x238 / pow(var_x239, 2);
        const double var_x242 = var_x233 < 9.999999999871223e-7;
        const double var_x243 = exp(1.8999999999999999 + 0.10000000000000001 * var_chaste_interface__membrane__V);
        const double var_x244 = -1.0 + var_x243;
        const double var_x245 = 0.035999999999999997 / var_x244;
        const double var_x246 = 3.5999999999036803e-8 * var_x229 - 1500.0000000193165 * (19.000001000000001 + var_chaste_interface__membrane__V) * (1.1999999999678934e-5 * var_x229 + 1.2000000000012001e-5 * var_x230);
        const double var_x247 = -var_x232 * var_x240;
        const double var_x248 = 1 / (-1.0 + var_x225);
        const double var_x249 = 1 / (-1.0 + var_x227);
        const double var_x250 = exp(-8.5 + var_x237);
        const double var_x251 = 1.0 + var_x250;
        const double var_x252 = -0.00089999999999999998 * var_x250 * var_chaste_interface__L_type_Ca_channel_f_gate__f / pow(var_x251, 2);
        const double var_x253 = 34.0 + var_chaste_interface__membrane__V;
        const double var_x254 = fabs(var_x253) < 4.0000000001150227e-7;
        const double var_x255 = 1.0 - var_chaste_interface__L_type_Ca_channel_f_gate__f;
        const double var_x256 = exp(8.5 + var_x236);
        const double var_x257 = -1.0 + var_x256;
        const double var_x258 = 0.0018749999999999999 / var_x257;
        const double var_x259 = -0.0035999999999999999 / var_x251;
        const double var_x260 = 0.001 + var_chaste_interface__intracellular_calcium_concentration__Ca_ds;
        const double var_x261 = _lt_0_row[20];
        const double var_x262 = exp(-1.25 + var_x0);
        const double var_x263 = 1.0 + var_x262;
        const double var_x264 = exp(-0.80000000000000004 - 0.20000000000000001 * var_chaste_interface__membrane__V);
        const double var_x265 = 1.0 - var_chaste_interface__calcium_release__ActFrac - var_chaste_interface__calcium_release__ProdFrac;
        const double var_x266 = NV_Ith_S(mParameters, 2) + var_chaste_interface__intracellular_calcium_concentration__Ca_i;
        const double var_x267 = 1 / var_x266;
        const double var_x268 = var_chaste_interface__intracellular_calcium_concentration__Ca_i / pow(var_x266, 2);
        const double var_x269 = NV_Ith_S(mParameters, 3) + var_chaste_interface__intracellular_calcium_concentration__Ca_ds;
        const double var_x270 = 1 / var_x269;
        const double var_x271 = 2 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds;
        const double var_x272 = ((var_chaste_interface__membrane__V < -50.0) ? (5.0) : (1.0));
        const double var_x273 = var_x267 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
        const double var_x274 = 1.0 - var_x273;
        const double var_x275 = var_x270 * var_x274;
        const double var_x276 = var_x273 + var_x275 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds;
        const double var_x277 = 0.5 * var_x272 * var_x276;
        const double var_x278 = var_x277 * (-2 * var_x268 + 2 * var_x267 + var_x270 * var_x271 * (var_x268 - var_x267));
        const double var_x279 = var_x278 * var_chaste_interface__calcium_release__ActFrac;
        const double var_x280 = 0.5 * pow(var_x276, 2);
        const double var_x281 = -var_x272 * var_x280;
        const double var_x282 = var_x277 * (2 * var_x275 - var_x271 * var_x274 / pow(var_x269, 2));
        const double var_x283 = var_x282 * var_chaste_interface__calcium_release__ActFrac;
        const double var_x284 = 0.00063182746016849224 * NV_Ith_S(mParameters, 5);
        const double var_x285 = var_x105 * var_x284;
        const double var_x286 = var_x150 * var_x284;
        const double var_x287 = 0.002 * NV_Ith_S(mParameters, 1);
        const double var_x288 = -var_x190;
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x96 * (0.00084999999999999995 + var_x11 + var_x34 + var_x4 + var_x65 + var_x75 + var_x94 + var_x13 + var_x9 + 0.00050000000000000001 * var_x15 + 0.001 * var_x23 + 0.0040000000000000001 * var_x3 + 0.999 * var_x26 - 0.046792363528431836 * var_x39 - 0.044642857142857144 * var_x37));
        IJth(rJacobian, 1, 0) = -7.8978432521061529e-8 + 0.00063119563270832375 * var_x26 + 6.3182746016849223e-7 * var_x23;
        IJth(rJacobian, 2, 0) = var_x195 * (1.0 - var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1) + 3.3333333333333333e-6 * var_x191 * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1;
        IJth(rJacobian, 3, 0) = var_x195 * (1.0 - var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2) + 4.0000000000000003e-5 * var_x198 * pow(var_x197, 2) * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2;
        IJth(rJacobian, 4, 0) = 2.2222222222222223e-5 * var_x199 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs + 0.0015555555555555555 * var_x200 * (1.0 - var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs) / pow(var_x201, 2);
        IJth(rJacobian, 5, 0) = ((var_x207) ? (var_x205 + (0.001 - 0.001 * var_chaste_interface__fast_sodium_current_m_gate__m) * (100.0 * var_x202 + 100.0 * var_x203)) : (var_x205 + var_x208 * var_x212 - 0.02 * var_x206 * var_x208 * var_x210 / pow(var_x211, 2)));
        IJth(rJacobian, 6, 0) = (var_x216 + var_x218) * (-var_x219 * var_x223 + 5.0000000000000004e-6 * var_x217 * var_x222 * (var_x219 - 0.625 * var_x224) / pow((var_x215 + 0.01 * var_x217), 2)) + (0.00062500000000000001 * var_x224 - 0.0025000000000000001 * var_x217) * (var_x221 - var_chaste_interface__fast_sodium_current_h_gate__h + var_x220 * var_x223);
        IJth(rJacobian, 7, 0) = ((var_x234) ? (var_x231 + (0.0030000000000000001 - 0.0030000000000000001 * var_chaste_interface__L_type_Ca_channel_d_gate__d) * (15.0 * var_x226 + 15.0 * var_x228)) : ((var_x242) ? (var_x231 + var_x241) : (var_x241 - var_x245 * var_chaste_interface__L_type_Ca_channel_d_gate__d + 0.0035999999999999999 * var_x232 * var_x243 * var_chaste_interface__L_type_Ca_channel_d_gate__d / pow(var_x244, 2))));
        IJth(rJacobian, 8, 0) = ((var_x254) ? (var_x252 + (0.00029999999999999997 - 0.00029999999999999997 * var_chaste_interface__L_type_Ca_channel_f_gate__f) * (3.125 * var_x248 + 3.125 * var_x249)) : (var_x252 + var_x255 * var_x258 - 0.00046874999999999998 * var_x253 * var_x255 * var_x256 / pow(var_x257, 2)));
        IJth(rJacobian, 11, 0) = -0.058823529411764705 * var_x261 * (3.3000000000000003e-5 - 3.3000000000000003e-5 * var_chaste_interface__transient_outward_current_s_gate__s) - 0.0041250000000000002 * var_x262 * var_chaste_interface__transient_outward_current_s_gate__s / pow(var_x263, 2);
        IJth(rJacobian, 12, 0) = 0.066600000000000006 * var_x264 / pow((1.0 + var_x264), 2);
        IJth(rJacobian, 15, 0) = (-3.7909647610109532e-7 - 0.0018935868981249711 * var_x26 - 0.00063182746016849224 * var_x11 - 0.00063182746016849224 * var_x75 - 3.1591373008424611e-7 * var_x15 - 2.5273098406739689e-6 * var_x3) * NV_Ith_S(mParameters, 5);
        IJth(rJacobian, 16, 0) = (2.8206583043236264e-5 * var_x37 + 2.9564700203449875e-5 * var_x39 - 0.00063182746016849224 * var_x13 - 0.00063182746016849224 * var_x34 - 0.00063182746016849224 * var_x4 - 0.00063182746016849224 * var_x65 - 0.00063182746016849224 * var_x9) * NV_Ith_S(mParameters, 5);
        IJth(rJacobian, 17, 0) = -0.003159137300842461 * var_x94;
        IJth(rJacobian, 0, 1) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x96 * (var_x104 + 0.0033392200824619565 * var_x97 - 0.0068931000000000001 * var_x98 - 0.999 * var_x99));
        IJth(rJacobian, 1, 1) = -7.0 + var_x176 + var_x177 - 0.00063119563270832375 * var_x99 - 4.3552498656874335e-6 * var_x98 - 1.0549054718227806e-6 * var_x97 + (0.00040000000000000002 * var_x181 - 0.00040000000000000002 * var_x179 - 7.1999999999999991e-9 * var_x182) * NV_Ith_S(mParameters, 4);
        IJth(rJacobian, 9, 1) = -0.001 / (100000.0 + var_chaste_interface__intracellular_calcium_concentration__Ca_i) + 1.0e-13 * var_chaste_interface__intracellular_calcium_concentration__Ca_i / pow((1 + 1.0000000000000001e-5 * var_chaste_interface__intracellular_calcium_concentration__Ca_i), 2);
        IJth(rJacobian, 13, 1) = -var_x279 + var_x265 * var_x278;
        IJth(rJacobian, 14, 1) = var_x279;
        IJth(rJacobian, 15, 1) = (0.0018935868981249711 * var_x99 + 1.3065749597062301e-5 * var_x98) * NV_Ith_S(mParameters, 5);
        IJth(rJacobian, 17, 1) = -0.003159137300842461 * var_x104;
        IJth(rJacobian, 18, 1) = (3.5279999999999993e-7 * var_x182 + 0.019599999999999999 * var_x179 - 0.019599999999999999 * var_x181) * NV_Ith_S(mParameters, 4);
        IJth(rJacobian, 20, 1) = 2.0 - var_x176;
        IJth(rJacobian, 21, 1) = 5.0 - var_x177;
        IJth(rJacobian, 0, 2) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x106 * NV_Ith_S(mParameters, 15));
        IJth(rJacobian, 2, 2) = var_x196 - 5.0000000000000002e-5 * var_x191;
        IJth(rJacobian, 16, 2) = -var_x285 * NV_Ith_S(mParameters, 15);
        IJth(rJacobian, 0, 3) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x106 * NV_Ith_S(mParameters, 16));
        IJth(rJacobian, 3, 3) = var_x196 - 0.00040000000000000002 * var_x198;
        IJth(rJacobian, 16, 3) = -var_x285 * NV_Ith_S(mParameters, 16);
        IJth(rJacobian, 0, 4) = mSetVoltageDerivativeToZero ? 0.0 : (-0.002 * var_x108 * var_x95);
        IJth(rJacobian, 4, 4) = -0.001 * var_x199 - 0.014 / var_x201;
        IJth(rJacobian, 16, 4) = -0.0012636549203369845 * var_x108 * NV_Ith_S(mParameters, 5);
        IJth(rJacobian, 0, 5) = mSetVoltageDerivativeToZero ? 0.0 : (-0.0030000000000000001 * var_x111 * var_x95);
        IJth(rJacobian, 5, 5) = ((var_x207) ? (var_x213 - 2.0000000000575113e-7 * var_x203 + 499.9999999856222 * (40.999999000000003 + var_chaste_interface__membrane__V) * (-0.00020000000000575113 * var_x202 - 0.00020000000000575113 * var_x203)) : (var_x213 - var_x206 * var_x212));
        IJth(rJacobian, 15, 5) = -0.0018954823805054767 * var_x111 * NV_Ith_S(mParameters, 5);
        IJth(rJacobian, 0, 6) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x112 * var_x96);
        IJth(rJacobian, 6, 6) = -var_x216 - var_x218;
        IJth(rJacobian, 15, 6) = -var_x112 * var_x284;
        IJth(rJacobian, 0, 7) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x96 * (var_x118 + var_x121 + var_x124));
        IJth(rJacobian, 7, 7) = ((var_x234) ? (var_x246 - 3.6000000001035205e-8 * var_x228 + 3749.9999998921662 * (18.999999599999999 + var_chaste_interface__membrane__V) * (-1.2000000000345068e-5 * var_x226 - 1.2000000000345068e-5 * var_x228)) : ((var_x242) ? (var_x246 + var_x247) : (var_x247 - var_x232 * var_x245)));
        IJth(rJacobian, 15, 7) = -var_x118 * var_x284;
        IJth(rJacobian, 16, 7) = -var_x121 * var_x284;
        IJth(rJacobian, 17, 7) = -0.003159137300842461 * var_x124;
        IJth(rJacobian, 0, 8) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x96 * (var_x130 + var_x133 + var_x136));
        IJth(rJacobian, 8, 8) = ((var_x254) ? (var_x259 + 7.5000000002156676e-10 * var_x249 - 374.99999998921663 * (34.000000399999998 + var_chaste_interface__membrane__V) * (2.5000000000718892e-6 * var_x248 + 2.5000000000718892e-6 * var_x249)) : (var_x259 - var_x253 * var_x258));
        IJth(rJacobian, 15, 8) = -var_x130 * var_x284;
        IJth(rJacobian, 16, 8) = -var_x133 * var_x284;
        IJth(rJacobian, 17, 8) = -0.003159137300842461 * var_x136;
        IJth(rJacobian, 9, 9) = -0.001;
        IJth(rJacobian, 0, 10) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x96 * (var_x143 + var_x146 + var_x149));
        IJth(rJacobian, 10, 10) = -0.02;
        IJth(rJacobian, 15, 10) = -var_x143 * var_x284;
        IJth(rJacobian, 16, 10) = -var_x146 * var_x284;
        IJth(rJacobian, 17, 10) = -0.003159137300842461 * var_x149;
        IJth(rJacobian, 0, 11) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x12 * var_x151);
        IJth(rJacobian, 11, 11) = -0.033000000000000002 / var_x263 - 3.3000000000000003e-5 * var_x261;
        IJth(rJacobian, 16, 11) = -var_x12 * var_x286;
        IJth(rJacobian, 0, 12) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x151 * var_x152);
        IJth(rJacobian, 12, 12) = -0.33300000000000002;
        IJth(rJacobian, 16, 12) = -var_x152 * var_x286;
        IJth(rJacobian, 1, 13) = (var_x183 * var_x186 - var_x183 * var_x188) * var_chaste_interface__intracellular_calcium_concentration__Ca_rel;
        IJth(rJacobian, 13, 13) = var_x281 + var_x272 * (-0.059999999999999998 - var_x280);
        IJth(rJacobian, 14, 13) = var_x272 * (0.059999999999999998 + var_x280);
        IJth(rJacobian, 19, 13) = (var_x188 * var_x287 - var_x186 * var_x287) * var_chaste_interface__intracellular_calcium_concentration__Ca_rel;
        IJth(rJacobian, 13, 14) = var_x281;
        IJth(rJacobian, 14, 14) = -0.001 * var_x272;
        IJth(rJacobian, 0, 15) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x96 * (var_x166 + 0.69999999999999996 * var_x155 + 0.0030000000000000001 * var_x160 + 26.713760659695652 * var_x157 + 0.80141281979086942 * var_x156 + 0.10685504263878261 * var_x153 + 0.016028256395817387 * var_x14 + 2.9969999999999999 * var_x161 - 0.00043749999999999995 * var_x158));
        IJth(rJacobian, 1, 15) = 0.0018935868981249711 * var_x161 + 1.8954823805054768e-6 * var_x160;
        IJth(rJacobian, 15, 15) = (8.2927354147114598e-7 * var_x158 - 0.00063182746016849224 * var_x166 - 1.0127092529498693e-5 * var_x14 - 0.0013268376663538336 * var_x155 - 0.016878487549164489 * var_x157 - 6.7513950196657958e-5 * var_x153 - 0.0056807606943749134 * var_x161) * NV_Ith_S(mParameters, 5);
        IJth(rJacobian, 16, 15) = (0.00088455844423588909 * var_x155 - 5.5284902764743069e-7 * var_x158 - 0.00050635462647493463 * var_x156) * NV_Ith_S(mParameters, 5);
        IJth(rJacobian, 0, 16) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x96 * (var_x173 + 26.713760659695652 * var_x156 + 26.713760659695652 * var_x167 + 26.713760659695652 * var_x168 + 26.713760659695652 * var_x169 + 3.2056512791634777 * var_x157 - 1.25 * var_x170));
        IJth(rJacobian, 15, 16) = -0.0020254185058997385 * var_x157 * NV_Ith_S(mParameters, 5);
        IJth(rJacobian, 16, 16) = (0.00078978432521061525 * var_x170 - 0.00063182746016849224 * var_x173 - 0.016878487549164489 * var_x156 - 0.016878487549164489 * var_x167 - 0.016878487549164489 * var_x168 - 0.016878487549164489 * var_x169) * NV_Ith_S(mParameters, 5);
        IJth(rJacobian, 0, 17) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x96 * (-0.001 * var_x175 - 6.9e-6 * var_x174));
        IJth(rJacobian, 1, 17) = 0.001 - 4.3596094751625962e-9 * var_x174 - 6.3182746016849223e-7 * var_x175;
        IJth(rJacobian, 10, 17) = -0.02 / var_x260 + 0.02 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds / pow(var_x260, 2);
        IJth(rJacobian, 13, 17) = -var_x283 + var_x265 * var_x282;
        IJth(rJacobian, 14, 17) = var_x283;
        IJth(rJacobian, 17, 17) = -0.01;
        IJth(rJacobian, 1, 18) = (9.5999999999999999e-8 * var_x181 + 7.1999999999999991e-9 * var_x179 - 1.7279999999999999e-12 * var_x182) * NV_Ith_S(mParameters, 4);
        IJth(rJacobian, 18, 18) = -0.050000000000000003 + (8.4671999999999982e-11 * var_x182 - 4.7039999999999993e-6 * var_x181 - 3.5279999999999993e-7 * var_x179) * NV_Ith_S(mParameters, 4);
        IJth(rJacobian, 19, 18) = 0.0050000000000000001;
        IJth(rJacobian, 1, 19) = 0.00020408163265306126 * var_x189 + 0.00020408163265306126 * NV_Ith_S(mParameters, 0);
        IJth(rJacobian, 18, 19) = 0.050000000000000003;
        IJth(rJacobian, 19, 19) = -0.0050000000000000001 - 0.001 * var_x189 - 0.001 * NV_Ith_S(mParameters, 0);
        IJth(rJacobian, 1, 20) = 0.050000000000000003 + var_x190;
        IJth(rJacobian, 20, 20) = -0.050000000000000003 + var_x288;
        IJth(rJacobian, 1, 21) = 0.20000000000000001 + var_x190;
        IJth(rJacobian, 21, 21) = -0.20000000000000001 + var_x288;
    }

    N_Vector Cellnoble_model_1998FromCellMLCvodeOpt::ComputeDerivedQuantities(double var_chaste_interface__environment__time_converted, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 1.4e-05
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 1.03e-05
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 2e-07
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.001302
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.0016203
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.9944036
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__L_type_Ca_channel_f2_gate__f2 = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.9349197
        double var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.9651958
        double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.9948645
        double var_chaste_interface__transient_outward_current_r_gate__r = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_release__ActFrac = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.0042614
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 7.3321223
        double var_chaste_interface__intracellular_potassium_concentration__K_i = NV_Ith_S(rY, 16);
        // Units: millimolar; Initial value: 136.5644281
        double var_chaste_interface__intracellular_calcium_concentration__Ca_ds = NV_Ith_S(rY, 17);
        // Units: millimolar; Initial value: 1.88e-05
        double var_chaste_interface__intracellular_calcium_concentration__Ca_rel = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 0.4481927
        
        // Lookup table indexing
        const bool _oob_0 = Cellnoble_model_1998FromCellMLCvodeOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellnoble_model_1998FromCellMLCvodeOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_L_type_Ca_channel__FrICa = 1.0; // dimensionless
        const double var_L_type_Ca_channel__P_CaK = 0.002; // dimensionless
        const double var_L_type_Ca_channel__P_CaNa = 0.01; // dimensionless
        const double var_calcium_release__i_rel = (pow(var_chaste_interface__calcium_release__ActFrac, 2) * NV_Ith_S(mParameters, 1) / pow((0.25 + var_chaste_interface__calcium_release__ActFrac), 2) + NV_Ith_S(mParameters, 0)) * var_chaste_interface__intracellular_calcium_concentration__Ca_rel; // millimolar_per_second
        const double var_membrane__F = 96485.341499999995; // coulomb_per_mole
        const double var_membrane__R = 8314.4719999999998; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_L_type_Ca_channel__i_Ca_L_Ca_cyt = 4.0 * (1.0 - var_L_type_Ca_channel__FrICa) * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(100.0 * var_membrane__F / (var_membrane__R * var_membrane__T)) - NV_Ith_S(mParameters, 6) * exp(2.0 * (50.0 - var_chaste_interface__membrane__V) * var_membrane__F / (var_membrane__R * var_membrane__T))) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2_gate__f2 * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_membrane__F / ((1.0 - exp(2.0 * (50.0 - var_chaste_interface__membrane__V) * var_membrane__F / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Ca_ds = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 1.3356880329551402e-6) ? (-374338.90823576227 * (-50.000001335688033 + var_chaste_interface__membrane__V) * (-1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - NV_Ith_S(mParameters, 6) * exp(9.9999999997780743e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999997780743e-8)) - 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - NV_Ith_S(mParameters, 6) * exp(-9.9999999997780743e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) + 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - NV_Ith_S(mParameters, 6) * exp(-9.9999999997780743e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) : (0.14973556329098189 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - NV_Ith_S(mParameters, 6) * _lt_0_row[0]) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[1]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K_cyt = (1.0 - var_L_type_Ca_channel__FrICa) * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(50.0 * var_membrane__F / (var_membrane__R * var_membrane__T)) - NV_Ith_S(mParameters, 7) * exp((50.0 - var_chaste_interface__membrane__V) * var_membrane__F / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_CaK * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2_gate__f2 * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_membrane__F / ((1.0 - exp((50.0 - var_chaste_interface__membrane__V) * var_membrane__F / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K_ds = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 7) * exp(9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 7) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 7) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (7.4867781645490941e-5 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 7) * _lt_0_row[2]) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na_cyt = (1.0 - var_L_type_Ca_channel__FrICa) * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(50.0 * var_membrane__F / (var_membrane__R * var_membrane__T)) - NV_Ith_S(mParameters, 8) * exp((50.0 - var_chaste_interface__membrane__V) * var_membrane__F / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_CaNa * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2_gate__f2 * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_membrane__F / ((1.0 - exp((50.0 - var_chaste_interface__membrane__V) * var_membrane__F / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na_ds = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 8) * exp(9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 8) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 8) * exp(-9.9999999999858739e-8)) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (0.00037433890822745472 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - NV_Ith_S(mParameters, 8) * _lt_0_row[2]) * NV_Ith_S(mParameters, 9) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f2ds_gate__f2ds * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_Ca_L_Ca_cyt + var_L_type_Ca_channel__i_Ca_L_Ca_ds + var_L_type_Ca_channel__i_Ca_L_K_cyt + var_L_type_Ca_channel__i_Ca_L_K_ds + var_L_type_Ca_channel__i_Ca_L_Na_cyt + var_L_type_Ca_channel__i_Ca_L_Na_ds; // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L / NV_Ith_S(mParameters, 10); // uA_per_cm2
        const double var_L_type_Ca_channel_f_gate__alpha_f = _lt_0_row[10]; // per_second
        const double var_L_type_Ca_channel_f_gate__beta_f = 12.0 / (_lt_0_row[11]); // per_second
        const double var_L_type_Ca_channel_f_gate__tau_f = 1 / (var_L_type_Ca_channel_f_gate__alpha_f + var_L_type_Ca_channel_f_gate__beta_f); // second
        const double var_fast_sodium_current_h_gate__alpha_h = 20.0 * exp(-9.375 + 0.125 * NV_Ith_S(mParameters, 13) - 0.125 * var_chaste_interface__membrane__V); // per_second
        const double var_fast_sodium_current_h_gate__beta_h = 2000.0 / (1.0 + 320.0 * exp(-7.5 + 0.10000000000000001 * NV_Ith_S(mParameters, 13) - 0.10000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_fast_sodium_current_h_gate__tau_h = 1 / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h); // second
        const double var_membrane__i_Stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_reversal_potentials__E_K = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 7) / var_chaste_interface__intracellular_potassium_concentration__K_i) / var_membrane__F; // millivolt
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * (NV_Ith_S(mParameters, 15) * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr1_gate__xr1 + NV_Ith_S(mParameters, 16) * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr2_gate__xr2) / (_lt_0_row[4]); // nanoA
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_rapid_delayed_rectifier_potassium_current__i_Kr / NV_Ith_S(mParameters, 10); // uA_per_cm2
        const double var_reversal_potentials__E_mh = var_membrane__R * var_membrane__T * log((NV_Ith_S(mParameters, 8) + 0.12 * NV_Ith_S(mParameters, 7)) / (var_chaste_interface__intracellular_sodium_concentration__Na_i + 0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i)) / var_membrane__F; // millivolt
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_reversal_potentials__E_mh + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 11) * var_chaste_interface__fast_sodium_current_h_gate__h; // nanoA
        const double var_fast_sodium_current__i_Na_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na / NV_Ith_S(mParameters, 10); // uA_per_cm2
        const double var_reversal_potentials__P_kna = 0.029999999999999999; // dimensionless
        const double var_reversal_potentials__E_Ks = var_membrane__R * var_membrane__T * log((NV_Ith_S(mParameters, 8) * var_reversal_potentials__P_kna + NV_Ith_S(mParameters, 7)) / (var_chaste_interface__intracellular_sodium_concentration__Na_i * var_reversal_potentials__P_kna + var_chaste_interface__intracellular_potassium_concentration__K_i)) / var_membrane__F; // millivolt
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = pow(var_chaste_interface__slow_delayed_rectifier_potassium_current_xs_gate__xs, 2) * (-var_reversal_potentials__E_Ks + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 17); // nanoA
        const double var_slow_delayed_rectifier_potassium_current__i_Ks_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_slow_delayed_rectifier_potassium_current__i_Ks / NV_Ith_S(mParameters, 10); // uA_per_cm2
        const double var_sodium_calcium_exchanger__FRiNaCa = 0.001; // dimensionless
        const double var_sodium_calcium_exchanger__d_NaCa = 0; // dimensionless
        const double var_sodium_calcium_exchanger__gamma = 0.5; // dimensionless
        const double var_sodium_calcium_exchanger__n_NaCa = 3.0; // dimensionless
        const double var_sodium_calcium_exchanger__i_NaCa_cyt = (1.0 - var_sodium_calcium_exchanger__FRiNaCa) * (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, var_sodium_calcium_exchanger__n_NaCa) * NV_Ith_S(mParameters, 6) * exp((-2.0 + var_sodium_calcium_exchanger__n_NaCa) * var_membrane__F * var_chaste_interface__membrane__V * var_sodium_calcium_exchanger__gamma / (var_membrane__R * var_membrane__T)) - pow(NV_Ith_S(mParameters, 8), var_sodium_calcium_exchanger__n_NaCa) * var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp((-1.0 + var_sodium_calcium_exchanger__gamma) * (-2.0 + var_sodium_calcium_exchanger__n_NaCa) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * NV_Ith_S(mParameters, 18) / ((1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i) * (1.0 + (pow(NV_Ith_S(mParameters, 8), var_sodium_calcium_exchanger__n_NaCa) * var_chaste_interface__intracellular_calcium_concentration__Ca_i + pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, var_sodium_calcium_exchanger__n_NaCa) * NV_Ith_S(mParameters, 6)) * var_sodium_calcium_exchanger__d_NaCa)); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa_ds = (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, var_sodium_calcium_exchanger__n_NaCa) * NV_Ith_S(mParameters, 6) * exp((-2.0 + var_sodium_calcium_exchanger__n_NaCa) * var_membrane__F * var_chaste_interface__membrane__V * var_sodium_calcium_exchanger__gamma / (var_membrane__R * var_membrane__T)) - pow(NV_Ith_S(mParameters, 8), var_sodium_calcium_exchanger__n_NaCa) * var_chaste_interface__intracellular_calcium_concentration__Ca_ds * exp((-1.0 + var_sodium_calcium_exchanger__gamma) * (-2.0 + var_sodium_calcium_exchanger__n_NaCa) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_sodium_calcium_exchanger__FRiNaCa * NV_Ith_S(mParameters, 18) / ((1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_ds) * (1.0 + (pow(NV_Ith_S(mParameters, 8), var_sodium_calcium_exchanger__n_NaCa) * var_chaste_interface__intracellular_calcium_concentration__Ca_ds + pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, var_sodium_calcium_exchanger__n_NaCa) * NV_Ith_S(mParameters, 6)) * var_sodium_calcium_exchanger__d_NaCa)); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa = var_sodium_calcium_exchanger__i_NaCa_cyt + var_sodium_calcium_exchanger__i_NaCa_ds; // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_sodium_calcium_exchanger__i_NaCa / NV_Ith_S(mParameters, 10); // uA_per_cm2
        const double var_time_independent_potassium_current__K_mk1 = 10.0; // millimolar
        const double var_time_independent_potassium_current__i_K1 = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 7) * NV_Ith_S(mParameters, 14) / ((1.0 + exp(1.25 * (-10.0 - var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * var_membrane__F / (var_membrane__R * var_membrane__T))) * (NV_Ith_S(mParameters, 7) + var_time_independent_potassium_current__K_mk1)); // nanoA
        const double var_time_independent_potassium_current__i_K1_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_time_independent_potassium_current__i_K1 / NV_Ith_S(mParameters, 10); // uA_per_cm2
        const double var_transient_outward_current__g_tos = 0; // dimensionless
        const double var_transient_outward_current__i_to = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * ((1.0 - var_transient_outward_current__g_tos) * var_chaste_interface__transient_outward_current_s_gate__s + var_transient_outward_current__g_tos) * NV_Ith_S(mParameters, 19) * var_chaste_interface__transient_outward_current_r_gate__r; // nanoA
        const double var_transient_outward_current__i_to_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_transient_outward_current__i_to / NV_Ith_S(mParameters, 10); // uA_per_cm2

        N_Vector dqs = N_VNew_Serial(12);
        NV_Ith_S(dqs, 0) = var_calcium_release__i_rel;
        NV_Ith_S(dqs, 1) = var_L_type_Ca_channel__i_Ca_L_converted;
        NV_Ith_S(dqs, 2) = var_L_type_Ca_channel_f_gate__tau_f;
        NV_Ith_S(dqs, 3) = var_fast_sodium_current__i_Na_converted;
        NV_Ith_S(dqs, 4) = var_fast_sodium_current_h_gate__tau_h;
        NV_Ith_S(dqs, 5) = var_time_independent_potassium_current__i_K1_converted;
        NV_Ith_S(dqs, 6) = var_rapid_delayed_rectifier_potassium_current__i_Kr_converted;
        NV_Ith_S(dqs, 7) = var_slow_delayed_rectifier_potassium_current__i_Ks_converted;
        NV_Ith_S(dqs, 8) = var_sodium_calcium_exchanger__i_NaCa_converted;
        NV_Ith_S(dqs, 9) = var_membrane__i_Stim_converted;
        NV_Ith_S(dqs, 10) = var_transient_outward_current__i_to_converted;
        NV_Ith_S(dqs, 11) = var_chaste_interface__environment__time_converted;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellnoble_model_1998FromCellMLCvodeOpt>::Initialise(void)
{
    this->mSystemName = "noble_model_1998";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // NV_Ith_S(rY, 0):
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-92.849333);

    // NV_Ith_S(rY, 1):
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.4e-05);

    // NV_Ith_S(rY, 2):
    this->mVariableNames.push_back("rapid_delayed_rectifier_potassium_current_xr1_gate__xr1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.03e-05);

    // NV_Ith_S(rY, 3):
    this->mVariableNames.push_back("rapid_delayed_rectifier_potassium_current_xr2_gate__xr2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2e-07);

    // NV_Ith_S(rY, 4):
    this->mVariableNames.push_back("slow_delayed_rectifier_potassium_current_xs_gate__xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.001302);

    // NV_Ith_S(rY, 5):
    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0016203);

    // NV_Ith_S(rY, 6):
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9944036);

    // NV_Ith_S(rY, 7):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 8):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // NV_Ith_S(rY, 9):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_fCa_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9349197);

    // NV_Ith_S(rY, 10):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_fCa2_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9651958);

    // NV_Ith_S(rY, 11):
    this->mVariableNames.push_back("transient_outward_current_s_gate__s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9948645);

    // NV_Ith_S(rY, 12):
    this->mVariableNames.push_back("transient_outward_current_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 13):
    this->mVariableNames.push_back("calcium_release__ActFrac");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0042614);

    // NV_Ith_S(rY, 14):
    this->mVariableNames.push_back("calcium_release__ProdFrac");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.4068154);

    // NV_Ith_S(rY, 15):
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.3321223);

    // NV_Ith_S(rY, 16):
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(136.5644281);

    // NV_Ith_S(rY, 17):
    this->mVariableNames.push_back("dyadic_space_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.88e-05);

    // NV_Ith_S(rY, 18):
    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_up");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.4531889);

    // NV_Ith_S(rY, 19):
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.4481927);

    // NV_Ith_S(rY, 20):
    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_Calmod");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0005555);

    // NV_Ith_S(rY, 21):
    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_Trop");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0003542);

    // mParameters[0]:
    this->mParameterNames.push_back("SR_leak_current_max");
    this->mParameterUnits.push_back("per_second");

    // mParameters[1]:
    this->mParameterNames.push_back("SR_release_current_max");
    this->mParameterUnits.push_back("per_second");

    // mParameters[2]:
    this->mParameterNames.push_back("SR_release_kmcacyt");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[3]:
    this->mParameterNames.push_back("SR_release_kmcads");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[4]:
    this->mParameterNames.push_back("SR_uptake_current_max");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[5]:
    this->mParameterNames.push_back("concentration_clamp_onoff");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[6]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[7]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[8]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("nanoA_per_millimolar");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_capacitance");
    this->mParameterUnits.push_back("microF");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("microS");

    // mParameters[12]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_reduced_inactivation");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[13]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_shift_inactivation");
    this->mParameterUnits.push_back("millivolt");

    // mParameters[14]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("microS");

    // mParameters[15]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance1");
    this->mParameterUnits.push_back("microS");

    // mParameters[16]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance2");
    this->mParameterUnits.push_back("microS");

    // mParameters[17]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("microS");

    // mParameters[18]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("nanoA");

    // mParameters[19]:
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
    this->mParameterUnits.push_back("microS");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("SR_release_current");
    this->mDerivedQuantityUnits.push_back("millimolar_per_second");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current_f_gate_tau");
    this->mDerivedQuantityUnits.push_back("second");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_h_gate_tau");
    this->mDerivedQuantityUnits.push_back("second");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [10]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [11]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellnoble_model_1998FromCellMLCvodeOpt)

#endif // CHASTE_CVODE
