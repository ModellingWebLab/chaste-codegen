//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: maltsev_2009
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: NormalOpt)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "maltsev_2009.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class Cellmaltsev_2009FromCellMLOpt_LookupTables : public AbstractLookupTableCollection
{
public:
    static Cellmaltsev_2009FromCellMLOpt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new Cellmaltsev_2009FromCellMLOpt_LookupTables);
        }
        return mpInstance.get();
    }

    void FreeMemory()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }

    // Row lookup methods
    // using linear-interpolation

    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<28; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }


    const double * IndexTable0(double var_chaste_interface__Vm__Vm)
    {
        const double _offset_0 = var_chaste_interface__Vm__Vm - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = Cellmaltsev_2009FromCellMLOpt_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }


// LCOV_EXCL_START
    bool CheckIndex0(double& var_chaste_interface__Vm__Vm)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__Vm__Vm>mTableMaxs[0] || var_chaste_interface__Vm__Vm<mTableMins[0])
        {
// LCOV_EXCL_START
            _oob_0 = true;
// LCOV_EXCL_STOP
        }
        return _oob_0;
    }
// LCOV_EXCL_STOP

    ~Cellmaltsev_2009FromCellMLOpt_LookupTables()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

    }

protected:
    Cellmaltsev_2009FromCellMLOpt_LookupTables(const Cellmaltsev_2009FromCellMLOpt_LookupTables&);
    Cellmaltsev_2009FromCellMLOpt_LookupTables& operator= (const Cellmaltsev_2009FromCellMLOpt_LookupTables&);
    Cellmaltsev_2009FromCellMLOpt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);

        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 28;
        mTableMins[0] = -250.0;
        mTableMaxs[0] = 550.0;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;

        Cellmaltsev_2009FromCellMLOpt_LookupTables::RegenerateTables();
    }

    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);


        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][28];

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-0.0051222473865587962 * var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][0] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = exp(0.0080724972509135153 * var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][1] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-0.0080724972509135153 * var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][2] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(3.7692307692307692 + 0.076923076923076927 * var_chaste_interface__Vm__Vm));

                _lookup_table_0[i][3] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = 6.0599999999999996 + 39.101999999999997 / (0.065000000000000002 * exp(4.593 + 0.10000000000000001 * var_chaste_interface__Vm__Vm) + 0.56999999999999995 * exp(-3.52 - 0.080000000000000002 * var_chaste_interface__Vm__Vm));

                _lookup_table_0[i][4] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(1.2866666666666666 - 0.066666666666666666 * var_chaste_interface__Vm__Vm));

                _lookup_table_0[i][5] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = 2.75352 + 14.40516 / (1.0369999999999999 * exp(2.7548999999999997 + 0.089999999999999997 * var_chaste_interface__Vm__Vm) + 0.36899999999999999 * exp(-2.8607999999999998 - 0.12 * var_chaste_interface__Vm__Vm));

                _lookup_table_0[i][6] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-2.25 - 0.16666666666666666 * var_chaste_interface__Vm__Vm));

                _lookup_table_0[i][7] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = ((fabs(-5.0 + var_chaste_interface__Vm__Vm) < 2.5000000000025002e-7) ? (-2.8575000000028576e-9 / (-1.0 + exp(-1.0000000000010001e-7)) + 1999999.9999979998 * (-4.9999997499999997 + var_chaste_interface__Vm__Vm) * (2.8575000000028576e-9 / (-1.0 + exp(1.0000000000010001e-7)) + 2.8575000000028576e-9 / (-1.0 + exp(-1.0000000000010001e-7)))) : (0.011429999999999999 * (-5.0 + var_chaste_interface__Vm__Vm) / (-1.0 + exp(-2.0 + 0.40000000000000002 * var_chaste_interface__Vm__Vm)))) + ((fabs(35.0 + var_chaste_interface__Vm__Vm) < 2.5000000000718892e-7) ? (-7.0975000009920736e-9 / (-1.0 + exp(-1.000000000139778e-7)) - 0.084900000000000003 * var_chaste_interface__Vm__Vm / (-1.0 + exp(-0.20833333333333334 * var_chaste_interface__Vm__Vm)) - 1999999.9999424887 * (34.999999750000001 + var_chaste_interface__Vm__Vm) * (7.0975000009920736e-9 / (-1.0 + exp(-1.000000000139778e-7)) + 7.0974999994161126e-9 / (-1.0 + exp(9.9999999991773334e-8)))) : ((fabs(var_chaste_interface__Vm__Vm) < 4.7999999999999996e-7) ? (-4.0752e-8 / (-1.0 + exp(-9.9999999999999995e-8)) - 0.028389999999999999 * (35.0 + var_chaste_interface__Vm__Vm) / (-1.0 + exp(-14.0 - 0.40000000000000002 * var_chaste_interface__Vm__Vm)) - 1041666.6666666667 * (-4.7999999999999996e-7 + var_chaste_interface__Vm__Vm) * (4.0752e-8 / (-1.0 + exp(9.9999999999999995e-8)) + 4.0752e-8 / (-1.0 + exp(-9.9999999999999995e-8)))) : (-0.028389999999999999 * (35.0 + var_chaste_interface__Vm__Vm) / (-1.0 + exp(-14.0 - 0.40000000000000002 * var_chaste_interface__Vm__Vm)) - 0.084900000000000003 * var_chaste_interface__Vm__Vm / (-1.0 + exp(-0.20833333333333334 * var_chaste_interface__Vm__Vm)))));

                _lookup_table_0[i][8] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(4.794520547945206 + 0.13698630136986301 * var_chaste_interface__Vm__Vm));

                _lookup_table_0[i][9] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = 44.299999999999997 + 257.10000000000002 * exp(-5.4668495419491743 * pow((1 + 0.030769230769230771 * var_chaste_interface__Vm__Vm), 2));

                _lookup_table_0[i][10] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-4.3833333333333337 - 0.16666666666666666 * var_chaste_interface__Vm__Vm));

                _lookup_table_0[i][11] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0680000000000001 * exp(0.87666666666666671 + 0.033333333333333333 * var_chaste_interface__Vm__Vm) + 1.0680000000000001 * exp(-0.87666666666666671 - 0.033333333333333333 * var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][12] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(11.017857142857144 + 0.17857142857142858 * var_chaste_interface__Vm__Vm));

                _lookup_table_0[i][13] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = 0.014999999999999999 * exp(4.0117035110533159 + 0.065019505851755519 * var_chaste_interface__Vm__Vm) + 0.015299999999999999 * exp(-0.74069627851140463 - 0.012004801920768308 * var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][14] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-2.1886792452830188 - 0.094339622641509441 * var_chaste_interface__Vm__Vm));

                _lookup_table_0[i][15] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = 0.043942879265498072 * exp(0.062893081761006289 * var_chaste_interface__Vm__Vm) + 0.0011340097874967246 * exp(-0.044444444444444446 * var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][16] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = 0.0049612928202981696 * exp(0.058823529411764705 * var_chaste_interface__Vm__Vm) + 0.0001771890292963632 * exp(-0.046296296296296294 * var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][17] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(1.672514619883041 + 0.058479532163742687 * var_chaste_interface__Vm__Vm));

                _lookup_table_0[i][18] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = 0.10000000000000001 * exp(-0.018299935950224173 * var_chaste_interface__Vm__Vm) + 0.65600000000000003 * exp(0.009420009985210585 * var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][19] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = 0.014 / (1.0 + exp(4.4444444444444446 - 0.1111111111111111 * var_chaste_interface__Vm__Vm));

                _lookup_table_0[i][20] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = 0.001 * exp(-0.022222222222222223 * var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][21] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(4.7407407407407405 + 0.07407407407407407 * var_chaste_interface__Vm__Vm));

                _lookup_table_0[i][22] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = 1.3953756414018557 * exp(-8.5404617897664554 - 0.022074080614542406 * var_chaste_interface__Vm__Vm) + 1.3953756414018557 * exp(-3.8001143986272159 + 0.051999376007487906 * var_chaste_interface__Vm__Vm);

                _lookup_table_0[i][23] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-11.4 - 0.20000000000000001 * var_chaste_interface__Vm__Vm));

                _lookup_table_0[i][24] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (16.0 * exp(0.125 * var_chaste_interface__Vm__Vm) + 15.0 * exp(0.02 * var_chaste_interface__Vm__Vm)) + 1 / (0.20000000000000001 * exp(-0.0014285714285714286 * var_chaste_interface__Vm__Vm) + 0.14999999999999999 * exp(-0.090909090909090912 * var_chaste_interface__Vm__Vm));

                _lookup_table_0[i][25] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (700.0 * exp(0.014285714285714285 * var_chaste_interface__Vm__Vm) + 3100.0 * exp(0.076923076923076927 * var_chaste_interface__Vm__Vm));

                _lookup_table_0[i][26] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm__Vm = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (50.0 * exp(-0.0014285714285714286 * var_chaste_interface__Vm__Vm) + 95.0 * exp(-0.10000000000000001 * var_chaste_interface__Vm__Vm)) + 0.00022900000000000001 / (1.0 + exp(-0.20000000000000001 * var_chaste_interface__Vm__Vm));

                _lookup_table_0[i][27] = val;
            }

            mNeedsRegeneration[0] = false;
        }

        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }

private:
    /** The single instance of the class */
    static std::shared_ptr<Cellmaltsev_2009FromCellMLOpt_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[28];

    // Lookup tables
    double (*_lookup_table_0)[28];
    int _lookup_table_0_num_misshit_piecewise[28] = {0};

};

std::shared_ptr<Cellmaltsev_2009FromCellMLOpt_LookupTables> Cellmaltsev_2009FromCellMLOpt_LookupTables::mpInstance;

    double Cellmaltsev_2009FromCellMLOpt::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    Cellmaltsev_2009FromCellMLOpt::Cellmaltsev_2009FromCellMLOpt(boost::shared_ptr<AbstractIvpOdeSolver> pSolver, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCardiacCell(
                pSolver,
                29,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellmaltsev_2009FromCellMLOpt>::Instance();
        Init();
        
        this->mParameters[0] = 140.0; // (var_model_parameters__Ki) [millimolar]
        this->mParameters[1] = 10.0; // (var_model_parameters__Nai) [millimolar]
        this->mParameters[2] = 2.0; // (var_model_parameters__Cao) [millimolar]
        this->mParameters[3] = 5.4000000000000004; // (var_model_parameters__Ko) [millimolar]
        this->mParameters[4] = 140.0; // (var_model_parameters__Nao) [millimolar]
        this->mParameters[5] = 0.46400000000000002; // (var_i_CaL__g_CaL) [nanoS_per_picoF]
        this->mParameters[6] = 0.61670000000000003; // (var_i_f__g_if_K) [dimensionless]
        this->mParameters[7] = 0.38329999999999997; // (var_i_f__g_if_Na) [dimensionless]
        this->mParameters[8] = 0.081139729999999993; // (var_i_Kr__g_Kr) [nanoS_per_picoF]
        this->mParameters[9] = 32.0; // (var_model_parameters__Cm) [picoF]
    }

    Cellmaltsev_2009FromCellMLOpt::~Cellmaltsev_2009FromCellMLOpt()
    {
    }

    AbstractLookupTableCollection* Cellmaltsev_2009FromCellMLOpt::GetLookupTableCollection()
    {
        return Cellmaltsev_2009FromCellMLOpt_LookupTables::Instance();
    }
    
    double Cellmaltsev_2009FromCellMLOpt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__i_CaL_dL_gate__dL = rY[2];
        // Units: dimensionless; Initial value: 0.000584545564405
        double var_chaste_interface__i_CaL_fL_gate__fL = rY[3];
        // Units: dimensionless; Initial value: 0.862381249774
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[4];
        // Units: dimensionless; Initial value: 0.711395919653
        double var_chaste_interface__i_CaT_dT_gate__dT = rY[5];
        // Units: dimensionless; Initial value: 0.00504393374639
        double var_chaste_interface__i_CaT_fT_gate__fT = rY[6];
        // Units: dimensionless; Initial value: 0.420757825415
        double var_chaste_interface__i_Kr_pa_gate__paS = rY[7];
        // Units: dimensionless; Initial value: 0.453100576739
        double var_chaste_interface__i_Kr_pa_gate__paF = rY[8];
        // Units: dimensionless; Initial value: 0.144755091176
        double var_chaste_interface__i_Kr_pi_gate__pi_ = rY[9];
        // Units: dimensionless; Initial value: 0.849409822329
        double var_chaste_interface__i_Ks_n_gate__n = rY[10];
        // Units: dimensionless; Initial value: 0.0264600410928
        double var_chaste_interface__AP_sensitive_currents_q_gate__q = rY[11];
        // Units: dimensionless; Initial value: 0.694241313965
        double var_chaste_interface__AP_sensitive_currents_r_gate__r = rY[12];
        // Units: dimensionless; Initial value: 0.00558131733359
        double var_chaste_interface__i_f_y_gate__y = rY[13];
        // Units: dimensionless; Initial value: 0.113643187247
        double var_chaste_interface__i_st_qa_gate__qa = rY[14];
        // Units: dimensionless; Initial value: 0.42380243163
        double var_chaste_interface__i_st_qi_gate__qi = rY[15];
        // Units: dimensionless; Initial value: 0.447294008304
        double var_chaste_interface__calcium_dynamics__Ca_sub = rY[28];
        // Units: millimolar; Initial value: 0.000138112560112
        
        // Lookup table indexing
        const bool _oob_0 = Cellmaltsev_2009FromCellMLOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm__Vm);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellmaltsev_2009FromCellMLOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm__Vm);

        const double var_i_NaCa__Qco = 0; // dimensionless
        const double var_i_CaT__i_CaT = 0.1832 * (-45.0 + var_chaste_interface__Vm__Vm) * var_chaste_interface__i_CaT_dT_gate__dT * var_chaste_interface__i_CaT_fT_gate__fT * mParameters[9]; // picoA
        const double var_i_b_Ca__i_b_Ca = 0.00059999999999999995 * (-45.0 + var_chaste_interface__Vm__Vm) * mParameters[9]; // picoA
        const double var_i_st__i_st = 0.0030000000000000001 * (-37.399999999999999 + var_chaste_interface__Vm__Vm) * var_chaste_interface__i_st_qa_gate__qa * var_chaste_interface__i_st_qi_gate__qi * mParameters[9]; // picoA
        const double var_model_parameters__Cm_converted = 9.9999999999999995e-7 * mParameters[9]; // uF
        const double var_i_CaL__i_CaL_converted = 9.9999999999999995e-7 * (-45.0 + var_chaste_interface__Vm__Vm) * HeartConfig::Instance()->GetCapacitance() * mParameters[5] * var_chaste_interface__i_CaL_dL_gate__dL * var_chaste_interface__i_CaL_fCa_gate__fCa * var_chaste_interface__i_CaL_fL_gate__fL * mParameters[9] / var_model_parameters__Cm_converted; // uA_per_cm2
        const double var_i_NaCa__k43 = mParameters[1] / (26.440000000000001 + mParameters[1]); // dimensionless
        const double var_i_NaCa__k34 = mParameters[4] / (4.6630000000000003 + mParameters[4]); // dimensionless
        const double var_electric_potentials__E_K = 26.726549826397882 * log(mParameters[3] / mParameters[0]); // millivolt
        const double var_AP_sensitive_currents__i_sus = 0.02 * (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * var_chaste_interface__AP_sensitive_currents_r_gate__r * mParameters[9]; // picoA
        const double var_AP_sensitive_currents__i_to = 0.252 * (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * var_chaste_interface__AP_sensitive_currents_q_gate__q * var_chaste_interface__AP_sensitive_currents_r_gate__r * mParameters[9]; // picoA
        const double var_electric_potentials__E_Na = 26.726549826397882 * log(mParameters[4] / mParameters[1]); // millivolt
        const double var_i_Kr__i_Kr_converted = 9.9999999999999995e-7 * (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * (0.40000000000000002 * var_chaste_interface__i_Kr_pa_gate__paS + 0.59999999999999998 * var_chaste_interface__i_Kr_pa_gate__paF) * HeartConfig::Instance()->GetCapacitance() * mParameters[8] * var_chaste_interface__i_Kr_pi_gate__pi_ * mParameters[9] / var_model_parameters__Cm_converted; // uA_per_cm2
        const double var_i_Ks__i_Ks = 0.025899999999999999 * pow(var_chaste_interface__i_Ks_n_gate__n, 2) * (-26.726549826397882 * log((mParameters[3] + 0.12 * mParameters[4]) / (mParameters[0] + 0.12 * mParameters[1])) + var_chaste_interface__Vm__Vm) * mParameters[9]; // picoA
        const double var_i_NaCa__di = 1.0 + 48.309178743961354 * (1.0 + 0.037821482602117998 * mParameters[1] + _lt_0_row[0]) * var_chaste_interface__calcium_dynamics__Ca_sub + 0.0025297242600556538 * (1.0 + 0.43687199650502401 * (1.0 + 0.037821482602117998 * mParameters[1]) * mParameters[1]) * mParameters[1]; // dimensionless
        const double var_i_NaCa__do = 1.0 + 0.27300027300027302 * (1.0 + exp(0.037415977988011662 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qco)) * mParameters[2] + 0.00061425061425061424 * (1.0 + 0.0017812611328820807 * (1.0 + 0.2144542140253056 * mParameters[4]) * mParameters[4]) * mParameters[4]; // dimensionless
        const double var_i_NaCa__k12 = 48.309178743961354 * var_chaste_interface__calcium_dynamics__Ca_sub * _lt_0_row[0] / var_i_NaCa__di; // dimensionless
        const double var_i_NaCa__k14 = 0.0011051656880977081 * pow(mParameters[1], 2) * (1.0 + 0.037821482602117998 * mParameters[1]) * _lt_0_row[1] / var_i_NaCa__di; // dimensionless
        const double var_i_NaCa__k21 = 0.27300027300027302 * mParameters[2] * exp(0.037415977988011662 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qco) / var_i_NaCa__do; // dimensionless
        const double var_i_NaCa__k23 = 1.094140745013563e-6 * pow(mParameters[4], 2) * (1.0 + 0.2144542140253056 * mParameters[4]) * _lt_0_row[2] / var_i_NaCa__do; // dimensionless
        const double var_i_NaCa__k32 = _lt_0_row[1]; // dimensionless
        const double var_i_NaCa__k41 = _lt_0_row[2]; // dimensionless
        const double var_i_NaCa__i_NaCa = 187.5 * (((var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k32 * var_i_NaCa__k43 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k12 * var_i_NaCa__k41) * var_i_NaCa__k21 - ((var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k34 * var_i_NaCa__k41 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k21 * var_i_NaCa__k32) * var_i_NaCa__k12) * mParameters[9] / ((var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k23 * var_i_NaCa__k34 + (var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k32 * var_i_NaCa__k43 + (var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k14 * var_i_NaCa__k43 + (var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k34 * var_i_NaCa__k41 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k12 * var_i_NaCa__k41 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k14 * var_i_NaCa__k21 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k12 * var_i_NaCa__k23 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k21 * var_i_NaCa__k32); // picoA
        const double var_i_NaK__i_NaK = 2.8799999999999999 * mParameters[9] / ((1.0 + 1.4974545260150962 * pow((1 / mParameters[3]), 1.2)) * (1.0 + 30.900566853219949 * pow((1 / mParameters[1]), 1.3)) * (1.0 + exp(-4.0 + 0.033333333333333333 * var_electric_potentials__E_Na - 0.033333333333333333 * var_chaste_interface__Vm__Vm))); // picoA
        const double var_i_b_Na__i_b_Na = 0.0048599999999999997 * (-var_electric_potentials__E_Na + var_chaste_interface__Vm__Vm) * mParameters[9]; // picoA
        const double var_i_f__i_f_converted = 9.9999999999999995e-7 * (0.14999999999999999 * pow(var_chaste_interface__i_f_y_gate__y, 2) * (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * mParameters[6] * mParameters[9] + 0.14999999999999999 * pow(var_chaste_interface__i_f_y_gate__y, 2) * (-var_electric_potentials__E_Na + var_chaste_interface__Vm__Vm) * mParameters[7] * mParameters[9]) * HeartConfig::Instance()->GetCapacitance() / var_model_parameters__Cm_converted; // uA_per_cm2
        const double var_chaste_interface__i_ionic = ((var_i_CaL__i_CaL_converted + var_i_Kr__i_Kr_converted + var_i_f__i_f_converted) * var_model_parameters__Cm_converted + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_AP_sensitive_currents__i_sus + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_AP_sensitive_currents__i_to + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_CaT__i_CaT + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_Ks__i_Ks + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_NaCa__i_NaCa + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_NaK__i_NaK + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_b_Ca__i_b_Ca + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_b_Na__i_b_Na + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_st__i_st) / var_model_parameters__Cm_converted; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellmaltsev_2009FromCellMLOpt::EvaluateYDerivatives(double var_chaste_interface__environment__time, const std::vector<double>& rY, std::vector<double>& rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000150018670943
        double var_chaste_interface__i_CaL_dL_gate__dL = rY[2];
        // Units: dimensionless; Initial value: 0.000584545564405
        double var_chaste_interface__i_CaL_fL_gate__fL = rY[3];
        // Units: dimensionless; Initial value: 0.862381249774
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[4];
        // Units: dimensionless; Initial value: 0.711395919653
        double var_chaste_interface__i_CaT_dT_gate__dT = rY[5];
        // Units: dimensionless; Initial value: 0.00504393374639
        double var_chaste_interface__i_CaT_fT_gate__fT = rY[6];
        // Units: dimensionless; Initial value: 0.420757825415
        double var_chaste_interface__i_Kr_pa_gate__paS = rY[7];
        // Units: dimensionless; Initial value: 0.453100576739
        double var_chaste_interface__i_Kr_pa_gate__paF = rY[8];
        // Units: dimensionless; Initial value: 0.144755091176
        double var_chaste_interface__i_Kr_pi_gate__pi_ = rY[9];
        // Units: dimensionless; Initial value: 0.849409822329
        double var_chaste_interface__i_Ks_n_gate__n = rY[10];
        // Units: dimensionless; Initial value: 0.0264600410928
        double var_chaste_interface__AP_sensitive_currents_q_gate__q = rY[11];
        // Units: dimensionless; Initial value: 0.694241313965
        double var_chaste_interface__AP_sensitive_currents_r_gate__r = rY[12];
        // Units: dimensionless; Initial value: 0.00558131733359
        double var_chaste_interface__i_f_y_gate__y = rY[13];
        // Units: dimensionless; Initial value: 0.113643187247
        double var_chaste_interface__i_st_qa_gate__qa = rY[14];
        // Units: dimensionless; Initial value: 0.42380243163
        double var_chaste_interface__i_st_qi_gate__qi = rY[15];
        // Units: dimensionless; Initial value: 0.447294008304
        double var_chaste_interface__j_SRCarel__R = rY[16];
        // Units: dimensionless; Initial value: 0.688047760973
        double var_chaste_interface__j_SRCarel__O = rY[17];
        // Units: dimensionless; Initial value: 1.7340201253e-07
        double var_chaste_interface__j_SRCarel__I = rY[18];
        // Units: dimensionless; Initial value: 7.86181717518e-08
        double var_chaste_interface__j_SRCarel__RI = rY[19];
        // Units: dimensionless; Initial value: 0.311951987007
        double var_chaste_interface__calcium_buffering__fTMM = rY[20];
        // Units: dimensionless; Initial value: 0.501049376634
        double var_chaste_interface__calcium_buffering__fCMi = rY[21];
        // Units: dimensionless; Initial value: 0.0594880901438
        double var_chaste_interface__calcium_buffering__fCMs = rY[22];
        // Units: dimensionless; Initial value: 0.054381370046
        double var_chaste_interface__calcium_buffering__fTC = rY[23];
        // Units: dimensionless; Initial value: 0.0291316176172
        double var_chaste_interface__calcium_buffering__fTMC = rY[24];
        // Units: dimensionless; Initial value: 0.432694959597
        double var_chaste_interface__calcium_buffering__fCQ = rY[25];
        // Units: dimensionless; Initial value: 0.273207128393
        double var_chaste_interface__calcium_dynamics__Ca_nsr = rY[26];
        // Units: millimolar; Initial value: 1.49348117734
        double var_chaste_interface__calcium_dynamics__Ca_jsr = rY[27];
        // Units: millimolar; Initial value: 0.316762674605
        double var_chaste_interface__calcium_dynamics__Ca_sub = rY[28];
        // Units: millimolar; Initial value: 0.000138112560112

        // Lookup table indexing
        const bool _oob_0 = Cellmaltsev_2009FromCellMLOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm__Vm);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellmaltsev_2009FromCellMLOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm__Vm);

        // Mathematics
        double d_dt_chaste_interface_var_Vm__Vm;
        const double d_dt_chaste_interface_var_AP_sensitive_currents_q_gate__q = (-var_chaste_interface__AP_sensitive_currents_q_gate__q + _lt_0_row[3]) / (_lt_0_row[4]); // 1 / millisecond
        const double d_dt_chaste_interface_var_AP_sensitive_currents_r_gate__r = (-var_chaste_interface__AP_sensitive_currents_r_gate__r + _lt_0_row[5]) / (_lt_0_row[6]); // 1 / millisecond
        const double var_calcium_buffering__delta_fCQ = -0.44500000000000001 * var_chaste_interface__calcium_buffering__fCQ + 0.53400000000000003 * (1.0 - var_chaste_interface__calcium_buffering__fCQ) * var_chaste_interface__calcium_dynamics__Ca_jsr; // per_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__fCQ = var_calcium_buffering__delta_fCQ; // 1 / millisecond
        const double var_calcium_buffering__delta_fCMs = -0.54200000000000004 * var_chaste_interface__calcium_buffering__fCMs + 227.69999999999999 * (1.0 - var_chaste_interface__calcium_buffering__fCMs) * var_chaste_interface__calcium_dynamics__Ca_sub; // per_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__fCMs = var_calcium_buffering__delta_fCMs; // 1 / millisecond
        const double var_calcium_buffering__delta_fCMi = -0.54200000000000004 * var_chaste_interface__calcium_buffering__fCMi + 227.69999999999999 * (1.0 - var_chaste_interface__calcium_buffering__fCMi) * var_chaste_interface__calcium_dynamics__Cai; // per_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__fCMi = var_calcium_buffering__delta_fCMi; // 1 / millisecond
        const double var_calcium_buffering__delta_fTC = -0.44600000000000001 * var_chaste_interface__calcium_buffering__fTC + 88.799999999999997 * (1.0 - var_chaste_interface__calcium_buffering__fTC) * var_chaste_interface__calcium_dynamics__Cai; // per_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__fTC = var_calcium_buffering__delta_fTC; // 1 / millisecond
        const double var_calcium_buffering__delta_fTMC = -0.0075100000000000002 * var_chaste_interface__calcium_buffering__fTMC + 227.69999999999999 * (1.0 - var_chaste_interface__calcium_buffering__fTMC - var_chaste_interface__calcium_buffering__fTMM) * var_chaste_interface__calcium_dynamics__Cai; // per_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__fTMC = var_calcium_buffering__delta_fTMC; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaL_dL_gate__dL = (-var_chaste_interface__i_CaL_dL_gate__dL + _lt_0_row[7]) * (_lt_0_row[8]); // 1 / millisecond
        const double var_i_CaL_fCa_gate__fCa_infinity = 0.00035 / (0.00035 + var_chaste_interface__calcium_dynamics__Ca_sub); // dimensionless
        const double d_dt_chaste_interface_var_i_CaL_fCa_gate__fCa = 0.021000000000000001 * (-var_chaste_interface__i_CaL_fCa_gate__fCa + var_i_CaL_fCa_gate__fCa_infinity) / var_i_CaL_fCa_gate__fCa_infinity; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaL_fL_gate__fL = (-var_chaste_interface__i_CaL_fL_gate__fL + _lt_0_row[9]) / (_lt_0_row[10]); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaT_dT_gate__dT = (-var_chaste_interface__i_CaT_dT_gate__dT + _lt_0_row[11]) * (_lt_0_row[12]); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaT_fT_gate__fT = (-var_chaste_interface__i_CaT_fT_gate__fT + _lt_0_row[13]) * (_lt_0_row[14]); // 1 / millisecond
        const double var_i_Kr_pa_gate__pa_infinity = _lt_0_row[15]; // dimensionless
        const double d_dt_chaste_interface_var_i_Kr_pa_gate__paF = (-var_chaste_interface__i_Kr_pa_gate__paF + var_i_Kr_pa_gate__pa_infinity) * (_lt_0_row[16]); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Kr_pa_gate__paS = (-var_chaste_interface__i_Kr_pa_gate__paS + var_i_Kr_pa_gate__pa_infinity) * (_lt_0_row[17]); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Kr_pi_gate__pi_ = (-var_chaste_interface__i_Kr_pi_gate__pi_ + _lt_0_row[18]) * (_lt_0_row[19]); // 1 / millisecond
        const double var_i_Ks_n_gate__alpha_n = _lt_0_row[20]; // per_millisecond
        const double var_i_Ks_n_gate__beta_n = _lt_0_row[21]; // per_millisecond
        const double d_dt_chaste_interface_var_i_Ks_n_gate__n = (-var_chaste_interface__i_Ks_n_gate__n + var_i_Ks_n_gate__alpha_n / (var_i_Ks_n_gate__alpha_n + var_i_Ks_n_gate__beta_n)) * (var_i_Ks_n_gate__alpha_n + var_i_Ks_n_gate__beta_n); // 1 / millisecond
        const double var_i_NaCa__Qco = 0; // dimensionless
        const double d_dt_chaste_interface_var_i_f_y_gate__y = (-var_chaste_interface__i_f_y_gate__y + _lt_0_row[22]) * (_lt_0_row[23]); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_st_qa_gate__qa = (-var_chaste_interface__i_st_qa_gate__qa + _lt_0_row[24]) * (_lt_0_row[25]); // 1 / millisecond
        const double var_i_st_qi_gate__alpha_qi = _lt_0_row[26]; // per_millisecond
        const double var_i_st_qi_gate__beta_qi = _lt_0_row[27]; // per_millisecond
        const double d_dt_chaste_interface_var_i_st_qi_gate__qi = (-var_chaste_interface__i_st_qi_gate__qi + var_i_st_qi_gate__alpha_qi / (var_i_st_qi_gate__alpha_qi + var_i_st_qi_gate__beta_qi)) * (0.15037593984962405 * var_i_st_qi_gate__alpha_qi + 0.15037593984962405 * var_i_st_qi_gate__beta_qi); // 1 / millisecond
        const double var_intracellular_calcium_fluxes__j_up = 0.012 / (1.0 + 0.00059999999999999995 / var_chaste_interface__calcium_dynamics__Cai); // millimolar_per_millisecond
        const double var_intracellular_calcium_fluxes__j_Ca_dif = 25.0 * var_chaste_interface__calcium_dynamics__Ca_sub - 25.0 * var_chaste_interface__calcium_dynamics__Cai; // millimolar_per_millisecond
        const double var_intracellular_calcium_fluxes__j_tr = 0.025000000000000001 * var_chaste_interface__calcium_dynamics__Ca_nsr - 0.025000000000000001 * var_chaste_interface__calcium_dynamics__Ca_jsr; // millimolar_per_millisecond
        const double var_j_SRCarel__kCaSR = 15.0 - 14.0 / (1.0 + 0.13584112963311223 * pow((1 / var_chaste_interface__calcium_dynamics__Ca_jsr), 2.5)); // dimensionless
        const double var_j_SRCarel__kiSRCa = 0.5 * var_j_SRCarel__kCaSR; // per_millimolar_millisecond
        const double var_j_SRCarel__koSRCa = 10.0 / var_j_SRCarel__kCaSR; // per_millimolar2_millisecond
        const double d_dt_chaste_interface_var_j_SRCarel__I = -0.065000000000000002 * var_chaste_interface__j_SRCarel__I + pow(var_chaste_interface__calcium_dynamics__Ca_sub, 2) * var_chaste_interface__j_SRCarel__RI * var_j_SRCarel__koSRCa + var_chaste_interface__calcium_dynamics__Ca_sub * var_chaste_interface__j_SRCarel__O * var_j_SRCarel__kiSRCa; // 1 / millisecond
        const double d_dt_chaste_interface_var_j_SRCarel__O = 0.0050000000000000001 * var_chaste_interface__j_SRCarel__I - 0.059999999999999998 * var_chaste_interface__j_SRCarel__O + pow(var_chaste_interface__calcium_dynamics__Ca_sub, 2) * var_chaste_interface__j_SRCarel__R * var_j_SRCarel__koSRCa - var_chaste_interface__calcium_dynamics__Ca_sub * var_chaste_interface__j_SRCarel__O * var_j_SRCarel__kiSRCa; // 1 / millisecond
        const double d_dt_chaste_interface_var_j_SRCarel__R = 0.059999999999999998 * var_chaste_interface__j_SRCarel__O + 0.0050000000000000001 * var_chaste_interface__j_SRCarel__RI - pow(var_chaste_interface__calcium_dynamics__Ca_sub, 2) * var_chaste_interface__j_SRCarel__R * var_j_SRCarel__koSRCa - var_chaste_interface__calcium_dynamics__Ca_sub * var_chaste_interface__j_SRCarel__R * var_j_SRCarel__kiSRCa; // 1 / millisecond
        const double d_dt_chaste_interface_var_j_SRCarel__RI = 0.059999999999999998 * var_chaste_interface__j_SRCarel__I - 0.0050000000000000001 * var_chaste_interface__j_SRCarel__RI + var_chaste_interface__calcium_dynamics__Ca_sub * var_chaste_interface__j_SRCarel__R * var_j_SRCarel__kiSRCa - pow(var_chaste_interface__calcium_dynamics__Ca_sub, 2) * var_chaste_interface__j_SRCarel__RI * var_j_SRCarel__koSRCa; // 1 / millisecond
        const double var_j_SRCarel__j_SRCarel = 250000.0 * (-var_chaste_interface__calcium_dynamics__Ca_sub + var_chaste_interface__calcium_dynamics__Ca_jsr) * var_chaste_interface__j_SRCarel__O; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_jsr = -var_j_SRCarel__j_SRCarel - 10.0 * var_calcium_buffering__delta_fCQ + var_intracellular_calcium_fluxes__j_tr; // millimolar / millisecond
        const double var_i_CaL__i_CaL = (-45.0 + var_chaste_interface__Vm__Vm) * mParameters[5] * var_chaste_interface__i_CaL_dL_gate__dL * var_chaste_interface__i_CaL_fCa_gate__fCa * var_chaste_interface__i_CaL_fL_gate__fL * mParameters[9]; // picoA
        const double var_i_CaT__i_CaT = 0.1832 * (-45.0 + var_chaste_interface__Vm__Vm) * var_chaste_interface__i_CaT_dT_gate__dT * var_chaste_interface__i_CaT_fT_gate__fT * mParameters[9]; // picoA
        const double var_i_b_Ca__i_b_Ca = 0.00059999999999999995 * (-45.0 + var_chaste_interface__Vm__Vm) * mParameters[9]; // picoA
        const double d_dt_chaste_interface_var_calcium_buffering__fTMM = 5.6925000000000008 - 5.6925000000000008 * var_chaste_interface__calcium_buffering__fTMC - 6.4435000000000002 * var_chaste_interface__calcium_buffering__fTMM; // 1 / millisecond
        const double var_i_NaCa__k43 = mParameters[1] / (26.440000000000001 + mParameters[1]); // dimensionless
        const double var_i_NaCa__k34 = mParameters[4] / (4.6630000000000003 + mParameters[4]); // dimensionless
        const double var_i_NaCa__di = 1.0 + 48.309178743961354 * (1.0 + 0.037821482602117998 * mParameters[1] + _lt_0_row[0]) * var_chaste_interface__calcium_dynamics__Ca_sub + 0.0025297242600556538 * (1.0 + 0.43687199650502401 * (1.0 + 0.037821482602117998 * mParameters[1]) * mParameters[1]) * mParameters[1]; // dimensionless
        const double var_i_NaCa__do = 1.0 + 0.27300027300027302 * (1.0 + exp(0.037415977988011662 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qco)) * mParameters[2] + 0.00061425061425061424 * (1.0 + 0.0017812611328820807 * (1.0 + 0.2144542140253056 * mParameters[4]) * mParameters[4]) * mParameters[4]; // dimensionless
        const double var_i_NaCa__k12 = 48.309178743961354 * var_chaste_interface__calcium_dynamics__Ca_sub * _lt_0_row[0] / var_i_NaCa__di; // dimensionless
        const double var_i_NaCa__k14 = 0.0011051656880977081 * pow(mParameters[1], 2) * (1.0 + 0.037821482602117998 * mParameters[1]) * _lt_0_row[1] / var_i_NaCa__di; // dimensionless
        const double var_i_NaCa__k21 = 0.27300027300027302 * mParameters[2] * exp(0.037415977988011662 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qco) / var_i_NaCa__do; // dimensionless
        const double var_i_NaCa__k23 = 1.094140745013563e-6 * pow(mParameters[4], 2) * (1.0 + 0.2144542140253056 * mParameters[4]) * _lt_0_row[2] / var_i_NaCa__do; // dimensionless
        const double var_i_NaCa__k32 = _lt_0_row[1]; // dimensionless
        const double var_i_NaCa__k41 = _lt_0_row[2]; // dimensionless
        const double var_i_NaCa__i_NaCa = 187.5 * (((var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k32 * var_i_NaCa__k43 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k12 * var_i_NaCa__k41) * var_i_NaCa__k21 - ((var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k34 * var_i_NaCa__k41 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k21 * var_i_NaCa__k32) * var_i_NaCa__k12) * mParameters[9] / ((var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k23 * var_i_NaCa__k34 + (var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k32 * var_i_NaCa__k43 + (var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k14 * var_i_NaCa__k43 + (var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k34 * var_i_NaCa__k41 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k12 * var_i_NaCa__k41 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k14 * var_i_NaCa__k21 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k12 * var_i_NaCa__k23 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k21 * var_i_NaCa__k32); // picoA
        const double var_model_parameters__V_cell = 1.1200000000000001 * M_PI; // picolitre
        const double var_model_parameters__V_jsr = 0.0011999999999999999 * var_model_parameters__V_cell; // picolitre
        const double var_model_parameters__V_nsr = 0.011599999999999999 * var_model_parameters__V_cell; // picolitre
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_nsr = -var_intracellular_calcium_fluxes__j_tr * var_model_parameters__V_jsr / var_model_parameters__V_nsr + var_intracellular_calcium_fluxes__j_up; // millimolar / millisecond
        const double var_model_parameters__V_sub = 0.011172 * M_PI; // picolitre
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_sub = -var_intracellular_calcium_fluxes__j_Ca_dif - 0.044999999999999998 * var_calcium_buffering__delta_fCMs - 5.182152666217547e-6 * (-2.0 * var_i_NaCa__i_NaCa + var_i_CaL__i_CaL + var_i_CaT__i_CaT + var_i_b_Ca__i_b_Ca) / var_model_parameters__V_sub + var_j_SRCarel__j_SRCarel * var_model_parameters__V_jsr / var_model_parameters__V_sub; // millimolar / millisecond
        const double d_dt_chaste_interface_var_calcium_dynamics__Cai = -0.031 * var_calcium_buffering__delta_fTC - 0.062 * var_calcium_buffering__delta_fTMC - 0.044999999999999998 * var_calcium_buffering__delta_fCMi + (var_intracellular_calcium_fluxes__j_Ca_dif * var_model_parameters__V_sub - var_intracellular_calcium_fluxes__j_up * var_model_parameters__V_nsr) / (-var_model_parameters__V_sub + 0.46000000000000002 * var_model_parameters__V_cell); // millimolar / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_Vm__Vm = 0.0;
        }
        else
        {
            const double var_electric_potentials__E_K = 26.726549826397882 * log(mParameters[3] / mParameters[0]); // millivolt
            const double var_electric_potentials__E_Na = 26.726549826397882 * log(mParameters[4] / mParameters[1]); // millivolt
            d_dt_chaste_interface_var_Vm__Vm = (-var_i_CaL__i_CaL - var_i_CaT__i_CaT - var_i_NaCa__i_NaCa - var_i_b_Ca__i_b_Ca - 0.0048599999999999997 * (-var_electric_potentials__E_Na + var_chaste_interface__Vm__Vm) * mParameters[9] - 0.025899999999999999 * pow(var_chaste_interface__i_Ks_n_gate__n, 2) * (-26.726549826397882 * log((mParameters[3] + 0.12 * mParameters[4]) / (mParameters[0] + 0.12 * mParameters[1])) + var_chaste_interface__Vm__Vm) * mParameters[9] - 0.02 * (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * var_chaste_interface__AP_sensitive_currents_r_gate__r * mParameters[9] - 0.252 * (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * var_chaste_interface__AP_sensitive_currents_q_gate__q * var_chaste_interface__AP_sensitive_currents_r_gate__r * mParameters[9] - 2.8799999999999999 * mParameters[9] / ((1.0 + 1.4974545260150962 * pow((1 / mParameters[3]), 1.2)) * (1.0 + 30.900566853219949 * pow((1 / mParameters[1]), 1.3)) * (1.0 + exp(-4.0 + 0.033333333333333333 * var_electric_potentials__E_Na - 0.033333333333333333 * var_chaste_interface__Vm__Vm))) - 0.0030000000000000001 * (-37.399999999999999 + var_chaste_interface__Vm__Vm) * var_chaste_interface__i_st_qa_gate__qa * var_chaste_interface__i_st_qi_gate__qi * mParameters[9] - 0.14999999999999999 * pow(var_chaste_interface__i_f_y_gate__y, 2) * (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * mParameters[6] * mParameters[9] - 0.14999999999999999 * pow(var_chaste_interface__i_f_y_gate__y, 2) * (-var_electric_potentials__E_Na + var_chaste_interface__Vm__Vm) * mParameters[7] * mParameters[9] - (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * (0.40000000000000002 * var_chaste_interface__i_Kr_pa_gate__paS + 0.59999999999999998 * var_chaste_interface__i_Kr_pa_gate__paF) * mParameters[8] * var_chaste_interface__i_Kr_pi_gate__pi_ * mParameters[9]) / mParameters[9]; // millivolt / millisecond
        }
        
        rDY[0] = d_dt_chaste_interface_var_Vm__Vm;
        rDY[1] = d_dt_chaste_interface_var_calcium_dynamics__Cai;
        rDY[2] = d_dt_chaste_interface_var_i_CaL_dL_gate__dL;
        rDY[3] = d_dt_chaste_interface_var_i_CaL_fL_gate__fL;
        rDY[4] = d_dt_chaste_interface_var_i_CaL_fCa_gate__fCa;
        rDY[5] = d_dt_chaste_interface_var_i_CaT_dT_gate__dT;
        rDY[6] = d_dt_chaste_interface_var_i_CaT_fT_gate__fT;
        rDY[7] = d_dt_chaste_interface_var_i_Kr_pa_gate__paS;
        rDY[8] = d_dt_chaste_interface_var_i_Kr_pa_gate__paF;
        rDY[9] = d_dt_chaste_interface_var_i_Kr_pi_gate__pi_;
        rDY[10] = d_dt_chaste_interface_var_i_Ks_n_gate__n;
        rDY[11] = d_dt_chaste_interface_var_AP_sensitive_currents_q_gate__q;
        rDY[12] = d_dt_chaste_interface_var_AP_sensitive_currents_r_gate__r;
        rDY[13] = d_dt_chaste_interface_var_i_f_y_gate__y;
        rDY[14] = d_dt_chaste_interface_var_i_st_qa_gate__qa;
        rDY[15] = d_dt_chaste_interface_var_i_st_qi_gate__qi;
        rDY[16] = d_dt_chaste_interface_var_j_SRCarel__R;
        rDY[17] = d_dt_chaste_interface_var_j_SRCarel__O;
        rDY[18] = d_dt_chaste_interface_var_j_SRCarel__I;
        rDY[19] = d_dt_chaste_interface_var_j_SRCarel__RI;
        rDY[20] = d_dt_chaste_interface_var_calcium_buffering__fTMM;
        rDY[21] = d_dt_chaste_interface_var_calcium_buffering__fCMi;
        rDY[22] = d_dt_chaste_interface_var_calcium_buffering__fCMs;
        rDY[23] = d_dt_chaste_interface_var_calcium_buffering__fTC;
        rDY[24] = d_dt_chaste_interface_var_calcium_buffering__fTMC;
        rDY[25] = d_dt_chaste_interface_var_calcium_buffering__fCQ;
        rDY[26] = d_dt_chaste_interface_var_calcium_dynamics__Ca_nsr;
        rDY[27] = d_dt_chaste_interface_var_calcium_dynamics__Ca_jsr;
        rDY[28] = d_dt_chaste_interface_var_calcium_dynamics__Ca_sub;
    }

    std::vector<double> Cellmaltsev_2009FromCellMLOpt::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const std::vector<double> & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__i_CaL_dL_gate__dL = rY[2];
        // Units: dimensionless; Initial value: 0.000584545564405
        double var_chaste_interface__i_CaL_fL_gate__fL = rY[3];
        // Units: dimensionless; Initial value: 0.862381249774
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[4];
        // Units: dimensionless; Initial value: 0.711395919653
        double var_chaste_interface__i_Kr_pa_gate__paS = rY[7];
        // Units: dimensionless; Initial value: 0.453100576739
        double var_chaste_interface__i_Kr_pa_gate__paF = rY[8];
        // Units: dimensionless; Initial value: 0.144755091176
        double var_chaste_interface__i_Kr_pi_gate__pi_ = rY[9];
        // Units: dimensionless; Initial value: 0.849409822329
        double var_chaste_interface__i_f_y_gate__y = rY[13];
        // Units: dimensionless; Initial value: 0.113643187247
        

        // Mathematics
        const double var_i_CaL__E_CaL = 45.0; // millivolt
        const double var_i_f__g_if = 0.14999999999999999; // nanoS_per_picoF
        const double var_i_CaL__i_CaL = (-var_i_CaL__E_CaL + var_chaste_interface__Vm__Vm) * mParameters[5] * var_chaste_interface__i_CaL_dL_gate__dL * var_chaste_interface__i_CaL_fCa_gate__fCa * var_chaste_interface__i_CaL_fL_gate__fL * mParameters[9]; // picoA
        const double var_model_parameters__Cm_converted = 9.9999999999999995e-7 * mParameters[9]; // uF
        const double var_i_CaL__i_CaL_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_CaL__i_CaL / var_model_parameters__Cm_converted; // uA_per_cm2
        const double var_model_parameters__F = 96485.0; // coulomb_per_mole
        const double var_model_parameters__R = 8314.3999999999996; // joule_per_kilomole_kelvin
        const double var_model_parameters__T = 310.14999999999998; // kelvin
        const double var_electric_potentials__E_K = var_model_parameters__R * var_model_parameters__T * log(mParameters[3] / mParameters[0]) / var_model_parameters__F; // millivolt
        const double var_electric_potentials__E_Na = var_model_parameters__R * var_model_parameters__T * log(mParameters[4] / mParameters[1]) / var_model_parameters__F; // millivolt
        const double var_i_Kr__i_Kr = (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * (0.40000000000000002 * var_chaste_interface__i_Kr_pa_gate__paS + 0.59999999999999998 * var_chaste_interface__i_Kr_pa_gate__paF) * mParameters[8] * var_chaste_interface__i_Kr_pi_gate__pi_ * mParameters[9]; // picoA
        const double var_i_Kr__i_Kr_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_Kr__i_Kr / var_model_parameters__Cm_converted; // uA_per_cm2
        const double var_i_f__i_f_K = pow(var_chaste_interface__i_f_y_gate__y, 2) * (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * var_i_f__g_if * mParameters[6] * mParameters[9]; // picoA
        const double var_i_f__i_f_Na = pow(var_chaste_interface__i_f_y_gate__y, 2) * (-var_electric_potentials__E_Na + var_chaste_interface__Vm__Vm) * var_i_f__g_if * mParameters[7] * mParameters[9]; // picoA
        const double var_i_f__i_f = var_i_f__i_f_K + var_i_f__i_f_Na; // picoA
        const double var_i_f__i_f_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_f__i_f / var_model_parameters__Cm_converted; // uA_per_cm2

        std::vector<double> dqs(7);
        dqs[0] = var_i_CaL__i_CaL_converted;
        dqs[1] = var_model_parameters__Cm_converted;
        dqs[2] = var_i_f__i_f_converted;
        dqs[3] = var_i_f__i_f_K;
        dqs[4] = var_i_f__i_f_Na;
        dqs[5] = var_i_Kr__i_Kr_converted;
        dqs[6] = var_chaste_interface__environment__time;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellmaltsev_2009FromCellMLOpt>::Initialise(void)
{
    this->mSystemName = "maltsev_2009";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-57.9639346865);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.000150018670943);

    // rY[2]:
    this->mVariableNames.push_back("i_CaL_dL_gate__dL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000584545564405);

    // rY[3]:
    this->mVariableNames.push_back("i_CaL_fL_gate__fL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.862381249774);

    // rY[4]:
    this->mVariableNames.push_back("i_CaL_fCa_gate__fCa");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.711395919653);

    // rY[5]:
    this->mVariableNames.push_back("i_CaT_dT_gate__dT");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00504393374639);

    // rY[6]:
    this->mVariableNames.push_back("i_CaT_fT_gate__fT");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.420757825415);

    // rY[7]:
    this->mVariableNames.push_back("i_Kr_pa_gate__paS");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.453100576739);

    // rY[8]:
    this->mVariableNames.push_back("i_Kr_pa_gate__paF");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.144755091176);

    // rY[9]:
    this->mVariableNames.push_back("i_Kr_pi_gate__pi_");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.849409822329);

    // rY[10]:
    this->mVariableNames.push_back("i_Ks_n_gate__n");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0264600410928);

    // rY[11]:
    this->mVariableNames.push_back("AP_sensitive_currents_q_gate__q");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.694241313965);

    // rY[12]:
    this->mVariableNames.push_back("AP_sensitive_currents_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00558131733359);

    // rY[13]:
    this->mVariableNames.push_back("i_f_y_gate__y");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.113643187247);

    // rY[14]:
    this->mVariableNames.push_back("i_st_qa_gate__qa");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.42380243163);

    // rY[15]:
    this->mVariableNames.push_back("i_st_qi_gate__qi");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.447294008304);

    // rY[16]:
    this->mVariableNames.push_back("j_SRCarel__R");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.688047760973);

    // rY[17]:
    this->mVariableNames.push_back("j_SRCarel__O");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.7340201253e-07);

    // rY[18]:
    this->mVariableNames.push_back("j_SRCarel__I");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(7.86181717518e-08);

    // rY[19]:
    this->mVariableNames.push_back("j_SRCarel__RI");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.311951987007);

    // rY[20]:
    this->mVariableNames.push_back("calcium_buffering__fTMM");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.501049376634);

    // rY[21]:
    this->mVariableNames.push_back("calcium_buffering__fCMi");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0594880901438);

    // rY[22]:
    this->mVariableNames.push_back("calcium_buffering__fCMs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.054381370046);

    // rY[23]:
    this->mVariableNames.push_back("calcium_buffering__fTC");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0291316176172);

    // rY[24]:
    this->mVariableNames.push_back("calcium_buffering__fTMC");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.432694959597);

    // rY[25]:
    this->mVariableNames.push_back("calcium_buffering__fCQ");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.273207128393);

    // rY[26]:
    this->mVariableNames.push_back("NSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.49348117734);

    // rY[27]:
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.316762674605);

    // rY[28]:
    this->mVariableNames.push_back("dyadic_space_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.000138112560112);

    // mParameters[0]:
    this->mParameterNames.push_back("cytosolic_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[1]:
    this->mParameterNames.push_back("cytosolic_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[2]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[3]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[4]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[5]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("nanoS_per_picoF");

    // mParameters[6]:
    this->mParameterNames.push_back("membrane_hyperpolarisation_activated_funny_current_potassium_component_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_hyperpolarisation_activated_funny_current_sodium_component_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("nanoS_per_picoF");

    // mParameters[9]:
    this->mParameterNames.push_back("model_parameters__Cm");
    this->mParameterUnits.push_back("picoF");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_capacitance");
    this->mDerivedQuantityUnits.push_back("uF");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_hyperpolarisation_activated_funny_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_hyperpolarisation_activated_funny_current_potassium_component");
    this->mDerivedQuantityUnits.push_back("picoA");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_hyperpolarisation_activated_funny_current_sodium_component");
    this->mDerivedQuantityUnits.push_back("picoA");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellmaltsev_2009FromCellMLOpt)

