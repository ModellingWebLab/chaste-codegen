//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: noble_model_1991
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on (date omitted as unimportant)
//! 
//! <autogenerated>

#include "noble_model_1991.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    boost::shared_ptr<RegularStimulus> Dynamicnoble_model_1991FromCellMLRushLarsen::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_membrane__Cm = 9.5000000000000005e-05; // microF
        const double var_chaste_interface__membrane__stim_start = 100.0; // millisecond
        const double var_chaste_interface__membrane__stim_period = 1000.0; // millisecond
        const double var_chaste_interface__membrane__stim_duration = 2.0; // millisecond
        const double var_chaste_interface__membrane__stim_amplitude = 0.001 * (( -6.0 / var_membrane__Cm) * HeartConfig::Instance()->GetCapacitance()); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__stim_amplitude),
                var_chaste_interface__membrane__stim_duration,
                var_chaste_interface__membrane__stim_period,
                var_chaste_interface__membrane__stim_start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    Dynamicnoble_model_1991FromCellMLRushLarsen::Dynamicnoble_model_1991FromCellMLRushLarsen(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractRushLarsenCardiacCell(
                17,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Dynamicnoble_model_1991FromCellMLRushLarsen>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
    }
    
    Dynamicnoble_model_1991FromCellMLRushLarsen::~Dynamicnoble_model_1991FromCellMLRushLarsen()
    {
    }
    
    double Dynamicnoble_model_1991FromCellMLRushLarsen::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -93
        double var_chaste_interface__time_dependent_potassium_current_x_gate__x = rY[1];
        // Units: dimensionless; Initial value: 0.001
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.000105
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.99816539
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[4];
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[5];
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[6];
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[7];
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[10];
        // Units: millimolar; Initial value: 5
        double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[11];
        // Units: millimolar; Initial value: 140
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[12];
        // Units: millimolar; Initial value: 7.63e-6
        
        const double var_membrane__Cm = 9.5000000000000005e-05; // microF
        const double var_reversal_potentials__E_K = 26.713760659695648 * log(4.0 / var_chaste_interface__intracellular_potassium_concentration__K_i); // millivolt
        const double var_time_independent_potassium_current__i_K1 = (0.2857142857142857 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K)) / (1.0 + exp((((var_chaste_interface__membrane__V - var_reversal_potentials__E_K) - 10.0) * 192970.68299999999) * 3.8797490106562429e-07)); // nanoA
        const double var_transient_outward_current__i_to = 0.0050000000000000001 * (0.0 + (var_chaste_interface__transient_outward_current_s_gate__s * 1.0)) * var_chaste_interface__transient_outward_current_r_gate__r * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // nanoA
        const double var_time_dependent_potassium_current__i_K = var_chaste_interface__time_dependent_potassium_current_x_gate__x * ((1.0 * (var_chaste_interface__intracellular_potassium_concentration__K_i - (4.0 * exp(((-var_chaste_interface__membrane__V) * 96485.341499999995) * 3.8797490106562429e-07)))) * 0.0071428571428571426); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * (var_chaste_interface__membrane__V - 50.0) * 48.242670750000002) * 3.8797490106562429e-07) / (1.0 - exp(((-(var_chaste_interface__membrane__V - 50.0)) * 96485.341499999995) * 3.8797490106562429e-07))) * ((var_chaste_interface__intracellular_potassium_concentration__K_i * 6.4993004051833223) - (4.0 * exp(((-(var_chaste_interface__membrane__V - 50.0)) * 96485.341499999995) * 3.8797490106562429e-07))); // nanoA
        const double var_potassium_background_current__i_b_K = 0.00059999999999999995 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // nanoA
        const double var_sodium_potassium_pump__i_NaK = (0.55999999999999994 * var_chaste_interface__intracellular_sodium_concentration__Na_i) / (40.0 + var_chaste_interface__intracellular_sodium_concentration__Na_i); // nanoA
        const double var_fast_sodium_current__i_Na = 2.5 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3.0) * var_chaste_interface__fast_sodium_current_h_gate__h * (var_chaste_interface__membrane__V - (26.713760659695648 * log(140.47999999999999 / (var_chaste_interface__intracellular_sodium_concentration__Na_i + (0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i))))); // nanoA
        const double var_sodium_background_current__i_b_Na = 0.00059999999999999995 * (var_chaste_interface__membrane__V - (26.713760659695648 * log(140.0 / var_chaste_interface__intracellular_sodium_concentration__Na_i))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * (var_chaste_interface__membrane__V - 50.0) * 241.21335374999998) * 3.8797490106562429e-07) / (1.0 - exp(((-(var_chaste_interface__membrane__V - 50.0)) * 96485.341499999995) * 3.8797490106562429e-07))) * ((var_chaste_interface__intracellular_sodium_concentration__Na_i * 6.4993004051833223) - (140.0 * exp(((-(var_chaste_interface__membrane__V - 50.0)) * 96485.341499999995) * 3.8797490106562429e-07))); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa = (0.00050000000000000001 * ((exp((var_chaste_interface__membrane__V * 48242.670749999997) * 3.8797490106562429e-07) * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * 2.0) - (exp((var_chaste_interface__membrane__V *  -48242.670749999997) * 3.8797490106562429e-07) * 2744000.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_i))) / ((1.0 + (0.0 * ((var_chaste_interface__intracellular_calcium_concentration__Ca_i * 2744000.0) + (2.0 * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0))))) * (1.0 + (var_chaste_interface__intracellular_calcium_concentration__Ca_i * 144.92753623188406))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Ca = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * (var_chaste_interface__membrane__V - 50.0) * 96485.341499999995) * 3.8797490106562429e-07) / (1.0 - exp(((-(var_chaste_interface__membrane__V - 50.0)) * 192970.68299999999) * 3.8797490106562429e-07))) * ((var_chaste_interface__intracellular_calcium_concentration__Ca_i * 42.240905756816097) - (2.0 * exp(((-(var_chaste_interface__membrane__V - 50.0)) * 192970.68299999999) * 3.8797490106562429e-07))); // nanoA
        const double var_calcium_background_current__i_b_Ca = 0.00025000000000000001 * (var_chaste_interface__membrane__V - (13.356880329847824 * log(2.0 / var_chaste_interface__intracellular_calcium_concentration__Ca_i))); // nanoA
        const double var_chaste_interface__i_ionic = 0.001 * (((var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to + var_time_dependent_potassium_current__i_K + var_potassium_background_current__i_b_K + var_sodium_potassium_pump__i_NaK + var_fast_sodium_current__i_Na + var_sodium_background_current__i_b_Na + var_L_type_Ca_channel__i_Ca_L_Na + var_sodium_calcium_exchanger__i_NaCa + var_L_type_Ca_channel__i_Ca_L_Ca + var_L_type_Ca_channel__i_Ca_L_K + var_calcium_background_current__i_b_Ca) / var_membrane__Cm) * HeartConfig::Instance()->GetCapacitance()); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Dynamicnoble_model_1991FromCellMLRushLarsen::EvaluateEquations(double var_chaste_interface__environment__time, std::vector<double> &rDY, std::vector<double> &rAlphaOrTau, std::vector<double> &rBetaOrInf)
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -93
        double var_chaste_interface__time_dependent_potassium_current_x_gate__x = rY[1];
        // Units: dimensionless; Initial value: 0.001
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.000105
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.99816539
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[4];
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[5];
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[6];
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[7];
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__calcium_release__ActFrac = rY[8];
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__calcium_release__ProdFrac = rY[9];
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[10];
        // Units: millimolar; Initial value: 5
        double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[11];
        // Units: millimolar; Initial value: 140
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[12];
        // Units: millimolar; Initial value: 7.63e-6
        double var_chaste_interface__intracellular_calcium_concentration__Ca_up = rY[13];
        // Units: millimolar; Initial value: 0.3013
        double var_chaste_interface__intracellular_calcium_concentration__Ca_rel = rY[14];
        // Units: millimolar; Initial value: 0.2989
        double var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod = rY[15];
        // Units: millimolar; Initial value: 0.0003
        double var_chaste_interface__intracellular_calcium_concentration__Ca_Trop = rY[16];
        // Units: millimolar; Initial value: 0.0002
        
        
        // Mathematics
        double d_dt_chaste_interface__membrane__V;
        const double var_reversal_potentials__E_K = 26.713760659695648 * log(4.0 / var_chaste_interface__intracellular_potassium_concentration__K_i); // millivolt
        const double var_time_independent_potassium_current__i_K1 = (0.2857142857142857 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K)) / (1.0 + exp((((var_chaste_interface__membrane__V - var_reversal_potentials__E_K) - 10.0) * 192970.68299999999) * 3.8797490106562429e-07)); // nanoA
        const double var_transient_outward_current__i_to = 0.0050000000000000001 * (0.0 + (var_chaste_interface__transient_outward_current_s_gate__s * 1.0)) * var_chaste_interface__transient_outward_current_r_gate__r * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // nanoA
        const double var_time_dependent_potassium_current__i_K = var_chaste_interface__time_dependent_potassium_current_x_gate__x * ((1.0 * (var_chaste_interface__intracellular_potassium_concentration__K_i - (4.0 * exp(((-var_chaste_interface__membrane__V) * 96485.341499999995) * 3.8797490106562429e-07)))) * 0.0071428571428571426); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * (var_chaste_interface__membrane__V - 50.0) * 48.242670750000002) * 3.8797490106562429e-07) / (1.0 - exp(((-(var_chaste_interface__membrane__V - 50.0)) * 96485.341499999995) * 3.8797490106562429e-07))) * ((var_chaste_interface__intracellular_potassium_concentration__K_i * 6.4993004051833223) - (4.0 * exp(((-(var_chaste_interface__membrane__V - 50.0)) * 96485.341499999995) * 3.8797490106562429e-07))); // nanoA
        const double var_potassium_background_current__i_b_K = 0.00059999999999999995 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // nanoA
        const double var_sodium_potassium_pump__i_NaK = (0.55999999999999994 * var_chaste_interface__intracellular_sodium_concentration__Na_i) / (40.0 + var_chaste_interface__intracellular_sodium_concentration__Na_i); // nanoA
        const double var_fast_sodium_current__i_Na = 2.5 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3.0) * var_chaste_interface__fast_sodium_current_h_gate__h * (var_chaste_interface__membrane__V - (26.713760659695648 * log(140.47999999999999 / (var_chaste_interface__intracellular_sodium_concentration__Na_i + (0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i))))); // nanoA
        const double var_sodium_background_current__i_b_Na = 0.00059999999999999995 * (var_chaste_interface__membrane__V - (26.713760659695648 * log(140.0 / var_chaste_interface__intracellular_sodium_concentration__Na_i))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * (var_chaste_interface__membrane__V - 50.0) * 241.21335374999998) * 3.8797490106562429e-07) / (1.0 - exp(((-(var_chaste_interface__membrane__V - 50.0)) * 96485.341499999995) * 3.8797490106562429e-07))) * ((var_chaste_interface__intracellular_sodium_concentration__Na_i * 6.4993004051833223) - (140.0 * exp(((-(var_chaste_interface__membrane__V - 50.0)) * 96485.341499999995) * 3.8797490106562429e-07))); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa = (0.00050000000000000001 * ((exp((var_chaste_interface__membrane__V * 48242.670749999997) * 3.8797490106562429e-07) * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * 2.0) - (exp((var_chaste_interface__membrane__V *  -48242.670749999997) * 3.8797490106562429e-07) * 2744000.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_i))) / ((1.0 + (0.0 * ((var_chaste_interface__intracellular_calcium_concentration__Ca_i * 2744000.0) + (2.0 * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0))))) * (1.0 + (var_chaste_interface__intracellular_calcium_concentration__Ca_i * 144.92753623188406))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Ca = (((var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * (var_chaste_interface__membrane__V - 50.0) * 96485.341499999995) * 3.8797490106562429e-07) / (1.0 - exp(((-(var_chaste_interface__membrane__V - 50.0)) * 192970.68299999999) * 3.8797490106562429e-07))) * ((var_chaste_interface__intracellular_calcium_concentration__Ca_i * 42.240905756816097) - (2.0 * exp(((-(var_chaste_interface__membrane__V - 50.0)) * 192970.68299999999) * 3.8797490106562429e-07))); // nanoA
        const double var_calcium_background_current__i_b_Ca = 0.00025000000000000001 * (var_chaste_interface__membrane__V - (13.356880329847824 * log(2.0 / var_chaste_interface__intracellular_calcium_concentration__Ca_i))); // nanoA
        const double var_time_dependent_potassium_current_x_gate__E0xb = var_chaste_interface__membrane__V + 20.0; // millivolt
        const double var_time_dependent_potassium_current_x_gate__E0xa = var_chaste_interface__membrane__V + 50.0; // millivolt
        const double var_fast_sodium_current_m_gate__E0_m = var_chaste_interface__membrane__V + 41.0; // millivolt
        const double var_L_type_Ca_channel_d_gate__E0_d = (var_chaste_interface__membrane__V + 24.0) - 5.0; // millivolt
        const double var_L_type_Ca_channel_f_gate__E0_f = var_chaste_interface__membrane__V + 34.0; // millivolt
        const double var_sarcoplasmic_reticulum_calcium_pump__K_2 = var_chaste_interface__intracellular_calcium_concentration__Ca_i + (var_chaste_interface__intracellular_calcium_concentration__Ca_up * 0.00023999999999999998) + 0.00041999999999999996; // millimolar
        const double var_sarcoplasmic_reticulum_calcium_pump__i_up = ((var_chaste_interface__intracellular_calcium_concentration__Ca_i / var_sarcoplasmic_reticulum_calcium_pump__K_2) * 0.40000000000000002) - (((var_chaste_interface__intracellular_calcium_concentration__Ca_up * 0.00023999999999999998) / var_sarcoplasmic_reticulum_calcium_pump__K_2) * 0.029999999999999999); // millimolar_per_second
        const double var_calcium_translocation__i_trans = 50.0 * (var_chaste_interface__intracellular_calcium_concentration__Ca_up - var_chaste_interface__intracellular_calcium_concentration__Ca_rel); // millimolar_per_second
        const double var_calcium_release__i_rel = ((pow(var_chaste_interface__calcium_release__ActFrac / (var_chaste_interface__calcium_release__ActFrac + 0.25), 2.0) * 250.0) + 0.0) * var_chaste_interface__intracellular_calcium_concentration__Ca_rel; // millimolar_per_second
        const double var_calcium_release__RegBindSite = pow(var_chaste_interface__intracellular_calcium_concentration__Ca_i / (var_chaste_interface__intracellular_calcium_concentration__Ca_i + 0.00050000000000000001), 2.0); // dimensionless
        const double var_calcium_release__InactRate = 60.0 + (500.0 * var_calcium_release__RegBindSite); // per_second
        const double var_intracellular_calcium_concentration__d_Ca_Trop_d_environment__time = (100000.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_i * (0.050000000000000003 - var_chaste_interface__intracellular_calcium_concentration__Ca_Trop)) - (200.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_Trop); // 'millimole per litre per second'
        const double var_intracellular_calcium_concentration__d_Ca_Calmod_d_environment__time = (100000.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_i * (0.02 - var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod)) - (50.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod); // 'millimole per litre per second'
        const double d_dt_chaste_interface__L_type_Ca_channel_d_gate__d = 0.001 * (3.0 * ((((fabs(var_L_type_Ca_channel_d_gate__E0_d) < 0.0001) ? 120.0 : ((30.0 * var_L_type_Ca_channel_d_gate__E0_d) / (1.0 - exp((-var_L_type_Ca_channel_d_gate__E0_d) * 0.25)))) * (1.0 - var_chaste_interface__L_type_Ca_channel_d_gate__d)) - (((fabs(var_L_type_Ca_channel_d_gate__E0_d) < 0.0001) ? 120.0 : ((12.0 * var_L_type_Ca_channel_d_gate__E0_d) / (exp(var_L_type_Ca_channel_d_gate__E0_d * 0.10000000000000001) - 1.0))) * var_chaste_interface__L_type_Ca_channel_d_gate__d))); // 'per millisecond'
        const double d_dt_chaste_interface__L_type_Ca_channel_f_gate__f = 0.001 * (0.5 * ((((fabs(var_L_type_Ca_channel_f_gate__E0_f) < 0.0001) ? 25.0 : ((6.25 * var_L_type_Ca_channel_f_gate__E0_f) / (exp(var_L_type_Ca_channel_f_gate__E0_f * 0.25) - 1.0))) * (1.0 - var_chaste_interface__L_type_Ca_channel_f_gate__f)) - ((50.0 / (1.0 + exp(( -1.0 * (var_chaste_interface__membrane__V + 34.0)) * 0.25))) * var_chaste_interface__L_type_Ca_channel_f_gate__f))); // 'per millisecond'
        const double d_dt_chaste_interface__transient_outward_current_r_gate__r = 0.001 * (333.0 * ((1.0 / (1.0 + exp((-(var_chaste_interface__membrane__V + 4.0)) * 0.20000000000000001))) - var_chaste_interface__transient_outward_current_r_gate__r)); // 'per millisecond'
        const double d_dt_chaste_interface__calcium_release__ActFrac = 0.001 * ((((1.0 - var_chaste_interface__calcium_release__ActFrac) - var_chaste_interface__calcium_release__ProdFrac) * (500.0 * var_calcium_release__RegBindSite)) - (var_chaste_interface__calcium_release__ActFrac * var_calcium_release__InactRate)); // 'per millisecond'
        const double d_dt_chaste_interface__calcium_release__ProdFrac = 0.001 * ((var_chaste_interface__calcium_release__ActFrac * var_calcium_release__InactRate) - (1.0 * var_chaste_interface__calcium_release__ProdFrac)); // 'per millisecond'
        const double d_dt_chaste_interface__intracellular_sodium_concentration__Na_i = 0.001 * ( -0.63182746016849234 * (var_fast_sodium_current__i_Na + var_sodium_background_current__i_b_Na + (3.0 * var_sodium_potassium_pump__i_NaK) + (3.0 * var_sodium_calcium_exchanger__i_NaCa) + var_L_type_Ca_channel__i_Ca_L_Na)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_potassium_concentration__K_i = 0.001 * ( -0.63182746016849234 * ((var_time_independent_potassium_current__i_K1 + var_time_dependent_potassium_current__i_K + var_L_type_Ca_channel__i_Ca_L_K + var_transient_outward_current__i_to + var_potassium_background_current__i_b_K) - (2.0 * var_sodium_potassium_pump__i_NaK))); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_calcium_concentration__Ca_i = 0.001 * ((((( -0.31591373008424617 * ((var_L_type_Ca_channel__i_Ca_L_Ca + var_calcium_background_current__i_b_Ca) - (2.0 * var_sodium_calcium_exchanger__i_NaCa))) + ((var_calcium_release__i_rel * 0.10000000000000001) * 2.0408163265306123)) - var_intracellular_calcium_concentration__d_Ca_Calmod_d_environment__time) - var_intracellular_calcium_concentration__d_Ca_Trop_d_environment__time) - var_sarcoplasmic_reticulum_calcium_pump__i_up); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_calcium_concentration__Ca_up = 0.001 * ((49.0 * var_sarcoplasmic_reticulum_calcium_pump__i_up) - var_calcium_translocation__i_trans); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_calcium_concentration__Ca_rel = 0.001 * ((0.099999999999999992 * var_calcium_translocation__i_trans) - var_calcium_release__i_rel); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_calcium_concentration__Ca_Calmod = 0.001 * var_intracellular_calcium_concentration__d_Ca_Calmod_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_calcium_concentration__Ca_Trop = 0.001 * var_intracellular_calcium_concentration__d_Ca_Trop_d_environment__time; // 'millimole per litre per millisecond'
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__membrane__V = 0.0;
        }
        else
        {
            const double var_membrane__Cm = 9.5000000000000005e-05; // microF
            const double var_chaste_interface__membrane__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
            d_dt_chaste_interface__membrane__V = 0.001 * (( -1.0 / var_membrane__Cm) * ((1000.0 * ((var_chaste_interface__membrane__i_Stim * var_membrane__Cm) / HeartConfig::Instance()->GetCapacitance())) + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to + var_time_dependent_potassium_current__i_K + var_potassium_background_current__i_b_K + var_sodium_potassium_pump__i_NaK + var_fast_sodium_current__i_Na + var_sodium_background_current__i_b_Na + var_L_type_Ca_channel__i_Ca_L_Na + var_sodium_calcium_exchanger__i_NaCa + var_L_type_Ca_channel__i_Ca_L_Ca + var_L_type_Ca_channel__i_Ca_L_K + var_calcium_background_current__i_b_Ca)); // 'millivolt per millisecond'
        }
        
        rDY[0] = d_dt_chaste_interface__membrane__V;
        rAlphaOrTau[1] = (0.5 * exp(0.082600000000000007 * var_time_dependent_potassium_current_x_gate__E0xa)) / (1.0 + exp(0.057000000000000002 * var_time_dependent_potassium_current_x_gate__E0xa));
        rBetaOrInf[1] = (1.3 * exp( -0.059999999999999998 * var_time_dependent_potassium_current_x_gate__E0xb)) / (1.0 + exp( -0.040000000000000001 * var_time_dependent_potassium_current_x_gate__E0xb));
        rAlphaOrTau[2] = (fabs(var_fast_sodium_current_m_gate__E0_m) < 1.0000000000000001e-05) ? 2000.0 : ((200.0 * var_fast_sodium_current_m_gate__E0_m) / (1.0 - exp( -0.10000000000000001 * var_fast_sodium_current_m_gate__E0_m)));
        rBetaOrInf[2] = 8000.0 * exp( -0.056000000000000001 * (var_chaste_interface__membrane__V + 66.0));
        rAlphaOrTau[3] = 20.0 * exp( -0.125 * ((var_chaste_interface__membrane__V + 75.0) - 0.0));
        rBetaOrInf[3] = 2000.0 / (1.0 + (320.0 * exp( -0.10000000000000001 * ((var_chaste_interface__membrane__V + 75.0) - 0.0))));
        rDY[4] = d_dt_chaste_interface__L_type_Ca_channel_d_gate__d;
        rDY[5] = d_dt_chaste_interface__L_type_Ca_channel_f_gate__f;
        rAlphaOrTau[6] = 0.033000000000000002 * exp((-var_chaste_interface__membrane__V) * 0.058823529411764705);
        rBetaOrInf[6] = 33.0 / (1.0 + exp( -0.125 * (var_chaste_interface__membrane__V + 10.0)));
        rDY[7] = d_dt_chaste_interface__transient_outward_current_r_gate__r;
        rDY[8] = d_dt_chaste_interface__calcium_release__ActFrac;
        rDY[9] = d_dt_chaste_interface__calcium_release__ProdFrac;
        rDY[10] = d_dt_chaste_interface__intracellular_sodium_concentration__Na_i;
        rDY[11] = d_dt_chaste_interface__intracellular_potassium_concentration__K_i;
        rDY[12] = d_dt_chaste_interface__intracellular_calcium_concentration__Ca_i;
        rDY[13] = d_dt_chaste_interface__intracellular_calcium_concentration__Ca_up;
        rDY[14] = d_dt_chaste_interface__intracellular_calcium_concentration__Ca_rel;
        rDY[15] = d_dt_chaste_interface__intracellular_calcium_concentration__Ca_Calmod;
        rDY[16] = d_dt_chaste_interface__intracellular_calcium_concentration__Ca_Trop;
    }
    
    void Dynamicnoble_model_1991FromCellMLRushLarsen::ComputeOneStepExceptVoltage(const std::vector<double> &rDY, const std::vector<double> &rAlphaOrTau, const std::vector<double> &rBetaOrInf)
    {
        std::vector<double>& rY = rGetStateVariables();
        {
            const double tau_inv = rAlphaOrTau[1] + rBetaOrInf[1];
            const double y_inf = rAlphaOrTau[1] / tau_inv;
            rY[1] = y_inf + (rY[1] - y_inf)*exp(-mDt*0.001*tau_inv);
        }
        {
            const double tau_inv = rAlphaOrTau[2] + rBetaOrInf[2];
            const double y_inf = rAlphaOrTau[2] / tau_inv;
            rY[2] = y_inf + (rY[2] - y_inf)*exp(-mDt*0.001*tau_inv);
        }
        {
            const double tau_inv = rAlphaOrTau[3] + rBetaOrInf[3];
            const double y_inf = rAlphaOrTau[3] / tau_inv;
            rY[3] = y_inf + (rY[3] - y_inf)*exp(-mDt*0.001*tau_inv);
        }
        rY[4] += mDt * rDY[4];
        rY[5] += mDt * rDY[5];
        {
            const double tau_inv = rAlphaOrTau[6] + rBetaOrInf[6];
            const double y_inf = rAlphaOrTau[6] / tau_inv;
            rY[6] = y_inf + (rY[6] - y_inf)*exp(-mDt*0.001*tau_inv);
        }
        rY[7] += mDt * rDY[7];
        rY[8] += mDt * rDY[8];
        rY[9] += mDt * rDY[9];
        rY[10] += mDt * rDY[10];
        rY[11] += mDt * rDY[11];
        rY[12] += mDt * rDY[12];
        rY[13] += mDt * rDY[13];
        rY[14] += mDt * rDY[14];
        rY[15] += mDt * rDY[15];
        rY[16] += mDt * rDY[16];
    }
    
template<>
void OdeSystemInformation<Dynamicnoble_model_1991FromCellMLRushLarsen>::Initialise(void)
{
    this->mSystemName = "noble_model_1991";
    this->mFreeVariableName = "environment__time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-93);

    // rY[1]:
    this->mVariableNames.push_back("time_dependent_potassium_current_x_gate__x");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.001);

    // rY[2]:
    this->mVariableNames.push_back("fast_sodium_current_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000105);

    // rY[3]:
    this->mVariableNames.push_back("fast_sodium_current_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99816539);

    // rY[4]:
    this->mVariableNames.push_back("L_type_Ca_channel_d_gate__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0);

    // rY[5]:
    this->mVariableNames.push_back("L_type_Ca_channel_f_gate__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1);

    // rY[6]:
    this->mVariableNames.push_back("transient_outward_current_s_gate__s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1);

    // rY[7]:
    this->mVariableNames.push_back("transient_outward_current_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0);

    // rY[8]:
    this->mVariableNames.push_back("calcium_release__ActFrac");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0);

    // rY[9]:
    this->mVariableNames.push_back("calcium_release__ProdFrac");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0);

    // rY[10]:
    this->mVariableNames.push_back("intracellular_sodium_concentration__Na_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(5);

    // rY[11]:
    this->mVariableNames.push_back("intracellular_potassium_concentration__K_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(140);

    // rY[12]:
    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.63e-6);

    // rY[13]:
    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_up");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.3013);

    // rY[14]:
    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_rel");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.2989);

    // rY[15]:
    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_Calmod");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0003);

    // rY[16]:
    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_Trop");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0002);

    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Dynamicnoble_model_1991FromCellMLRushLarsen)
extern "C"
{
    AbstractCardiacCellInterface* MakeCardiacCell(
            boost::shared_ptr<AbstractIvpOdeSolver> pSolver,
            boost::shared_ptr<AbstractStimulusFunction> pStimulus)
    {
        return new Dynamicnoble_model_1991FromCellMLRushLarsen(pSolver, pStimulus);
    }
    
}

