//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: shannon_2004
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on (date omitted as unimportant)
//! 
//! <autogenerated>

#include "Shannon2004.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    boost::shared_ptr<RegularStimulus> DynamicShannon2004FromCellMLRushLarsen::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__cell__stim_start = 100.0; // millisecond
        const double var_chaste_interface__cell__stim_period = 1000.0; // millisecond
        const double var_chaste_interface__cell__stim_duration = 5.0; // millisecond
        const double var_chaste_interface__cell__stim_amplitude = 9.5 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__cell__stim_amplitude),
                var_chaste_interface__cell__stim_duration,
                var_chaste_interface__cell__stim_period,
                var_chaste_interface__cell__stim_start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    double DynamicShannon2004FromCellMLRushLarsen::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    
    DynamicShannon2004FromCellMLRushLarsen::DynamicShannon2004FromCellMLRushLarsen(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractRushLarsenCardiacCell(
                39,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<DynamicShannon2004FromCellMLRushLarsen>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
    }
    
    DynamicShannon2004FromCellMLRushLarsen::~DynamicShannon2004FromCellMLRushLarsen()
    {
    }
    
    double DynamicShannon2004FromCellMLRushLarsen::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -8.556885e1
        double var_chaste_interface__INa_h_gate__h = rY[2];
        // Units: dimensionless; Initial value: 9.867005e-1
        double var_chaste_interface__INa_j_gate__j = rY[3];
        // Units: dimensionless; Initial value: 9.91562e-1
        double var_chaste_interface__INa_m_gate__m = rY[4];
        // Units: dimensionless; Initial value: 1.405627e-3
        double var_chaste_interface__IKr_Xr_gate__Xr = rY[5];
        // Units: dimensionless; Initial value: 8.641386e-3
        double var_chaste_interface__IKs_Xs_gate__Xs = rY[6];
        // Units: dimensionless; Initial value: 5.412034e-3
        double var_chaste_interface__Itos_X_gate__X_tos = rY[7];
        // Units: dimensionless; Initial value: 4.051574e-3
        double var_chaste_interface__Itos_Y_gate__Y_tos = rY[8];
        // Units: dimensionless; Initial value: 9.945511e-1
        double var_chaste_interface__Itos_R_gate__R_tos = rY[9];
        // Units: dimensionless; Initial value: 0.9946
        double var_chaste_interface__Itof_X_gate__X_tof = rY[10];
        // Units: dimensionless; Initial value: 4.051574e-3
        double var_chaste_interface__Itof_Y_gate__Y_tof = rY[11];
        // Units: dimensionless; Initial value: 9.945511e-1
        double var_chaste_interface__ICaL_d_gate__d = rY[12];
        // Units: dimensionless; Initial value: 7.175662e-6
        double var_chaste_interface__ICaL_f_gate__f = rY[13];
        // Units: dimensionless; Initial value: 1.000681
        double var_chaste_interface__ICaL_fCa_gate__fCaB_SL = rY[14];
        // Units: dimensionless; Initial value: 1.452605e-2
        double var_chaste_interface__ICaL_fCa_gate__fCaB_jct = rY[15];
        // Units: dimensionless; Initial value: 2.421991e-2
        double var_chaste_interface__Na_buffer__Na_SL = rY[19];
        // Units: millimolar; Initial value: 8.80733
        double var_chaste_interface__Na_buffer__Na_jct = rY[20];
        // Units: millimolar; Initial value: 8.80329
        double var_chaste_interface__Na_buffer__Nai = rY[23];
        // Units: millimolar; Initial value: 8.80853
        double var_chaste_interface__Ca_buffer__Ca_SL = rY[25];
        // Units: millimolar; Initial value: 1.031812e-4
        double var_chaste_interface__Ca_buffer__Ca_jct = rY[26];
        // Units: millimolar; Initial value: 1.737475e-4
        
        const double var_model_parameters__Nao = 140.0; // millimolar
        const double var_reversal_potentials__E_Na_jct = 26.71330258589418 * log(var_model_parameters__Nao / var_chaste_interface__Na_buffer__Na_jct); // millivolt
        const double var_INa__G_INa = 16.0; // milliS_per_microF
        const double var_INa__openProb = pow(var_chaste_interface__INa_m_gate__m, 3.0) * var_chaste_interface__INa_h_gate__h * var_chaste_interface__INa_j_gate__j; // dimensionless
        const double var_INa__i_Na_jct = 0.11 * var_INa__G_INa * var_INa__openProb * (var_chaste_interface__cell__V - var_reversal_potentials__E_Na_jct); // microA_per_microF
        const double var_reversal_potentials__E_Na_SL = 26.71330258589418 * log(var_model_parameters__Nao / var_chaste_interface__Na_buffer__Na_SL); // millivolt
        const double var_INa__i_Na_SL = 0.89000000000000001 * var_INa__G_INa * var_INa__openProb * (var_chaste_interface__cell__V - var_reversal_potentials__E_Na_SL); // microA_per_microF
        const double var_INa__i_Na = var_INa__i_Na_jct + var_INa__i_Na_SL; // microA_per_microF
        const double var_INab__i_Nab_jct = (var_chaste_interface__cell__V - var_reversal_potentials__E_Na_jct) * 3.2670000000000004e-05; // microA_per_microF
        const double var_INab__i_Nab_SL = (var_chaste_interface__cell__V - var_reversal_potentials__E_Na_SL) * 0.00026433000000000001; // microA_per_microF
        const double var_INab__i_Nab = var_INab__i_Nab_jct + var_INab__i_Nab_SL; // microA_per_microF
        const double var_INaK__f_NaK = 1.0 / (1.0 + (0.1245 * exp((var_chaste_interface__cell__V *  -9648.5) * 3.8798292719927153e-07)) + (0.036499999999999998 * ((exp(var_model_parameters__Nao * 0.01485884101040119) - 1.0) * 0.14285714285714285) * exp(((-var_chaste_interface__cell__V) * 96485.0) * 3.8798292719927153e-07))); // dimensionless
        const double var_model_parameters__Ko = 5.4000000000000004; // millimolar
        const double var_INaK__i_NaK_SL = (((var_INaK__f_NaK * 1.6973990999999999) / (1.0 + pow(11.0 / var_chaste_interface__Na_buffer__Na_SL, 4.0))) * var_model_parameters__Ko) / (var_model_parameters__Ko + 1.5); // microA_per_microF
        const double var_INaK__i_NaK_jct = (((var_INaK__f_NaK * 0.2097909) / (1.0 + pow(11.0 / var_chaste_interface__Na_buffer__Na_jct, 4.0))) * var_model_parameters__Ko) / (var_model_parameters__Ko + 1.5); // microA_per_microF
        const double var_INaK__i_NaK = var_INaK__i_NaK_jct + var_INaK__i_NaK_SL; // microA_per_microF
        const double var_IKr__G_IKr_const = 0.029999999999999999; // milliS_per_microF
        const double var_model_parameters__Ki = 135.0; // millimolar
        const double var_reversal_potentials__E_K = 26.71330258589418 * log(var_model_parameters__Ko / var_model_parameters__Ki); // millivolt
        const double var_IKr__i_Kr = (var_IKr__G_IKr_const * sqrt(var_model_parameters__Ko * 0.18518518518518517)) * var_chaste_interface__IKr_Xr_gate__Xr * (1.0 / (1.0 + exp((33.0 + var_chaste_interface__cell__V) * 0.044642857142857144))) * (var_chaste_interface__cell__V - var_reversal_potentials__E_K); // microA_per_microF
        const double var_IKs__G_Ks_Max = 0.070000000000000007; // milliS_per_microF
        const double var_IKs__E_Ks = 26.71330258589418 * log((var_model_parameters__Ko + (0.018329999999999999 * var_model_parameters__Nao)) / (var_model_parameters__Ki + (0.018329999999999999 * var_chaste_interface__Na_buffer__Nai))); // millivolt
        const double var_IKs__i_Ks = (0.11 * (var_IKs__G_Ks_Max * (0.057000000000000002 + (0.19 / (1.0 + exp(( -7.2000000000000002 + ((-log10(var_chaste_interface__Ca_buffer__Ca_jct * 1.0)) + 3.0)) * 1.6666666666666667))))) * pow(var_chaste_interface__IKs_Xs_gate__Xs, 2.0) * (var_chaste_interface__cell__V - var_IKs__E_Ks)) + (0.89000000000000001 * (var_IKs__G_Ks_Max * (0.057000000000000002 + (0.19 / (1.0 + exp(( -7.2000000000000002 + ((-log10(var_chaste_interface__Ca_buffer__Ca_SL * 1.0)) + 3.0)) * 1.6666666666666667))))) * pow(var_chaste_interface__IKs_Xs_gate__Xs, 2.0) * (var_chaste_interface__cell__V - var_IKs__E_Ks)); // microA_per_microF
        const double var_IKp__i_Kp = (0.001 * (var_chaste_interface__cell__V - var_reversal_potentials__E_K)) / (1.0 + exp(7.4880000000000004 - (var_chaste_interface__cell__V * 0.16722408026755853))); // microA_per_microF
        const double var_Itos__G_tos = 0.059999999999999998; // milliS_per_microF
        const double var_Itos__i_tos = var_Itos__G_tos * var_chaste_interface__Itos_X_gate__X_tos * (var_chaste_interface__Itos_Y_gate__Y_tos + (0.5 * var_chaste_interface__Itos_R_gate__R_tos)) * (var_chaste_interface__cell__V - var_reversal_potentials__E_K); // microA_per_microF
        const double var_Itof__i_tof = 0.02 * var_chaste_interface__Itof_X_gate__X_tof * var_chaste_interface__Itof_Y_gate__Y_tof * (var_chaste_interface__cell__V - var_reversal_potentials__E_K); // microA_per_microF
        const double var_IK1_K1_gate__alpha_K1 = 1.02 / (1.0 + exp(0.23849999999999999 * (var_chaste_interface__cell__V - (var_reversal_potentials__E_K + 59.215000000000003)))); // per_millisecond
        const double var_IK1__i_K1 = (0.90000000000000002 * sqrt(var_model_parameters__Ko * 0.18518518518518517)) * (var_IK1_K1_gate__alpha_K1 / (var_IK1_K1_gate__alpha_K1 + (((0.49124000000000001 * exp(0.080320000000000003 * ((var_chaste_interface__cell__V - var_reversal_potentials__E_K) + 5.476))) + (1.0 * exp(0.061749999999999999 * (var_chaste_interface__cell__V - (var_reversal_potentials__E_K + 594.30999999999995))))) / (1.0 + exp( -0.51429999999999998 * ((var_chaste_interface__cell__V - var_reversal_potentials__E_K) + 4.7530000000000001)))))) * (var_chaste_interface__cell__V - var_reversal_potentials__E_K); // microA_per_microF
        const double var_model_parameters__Cao = 1.8; // millimolar
        const double var_INaCa__V_max = 9.0; // microA_per_microF
        const double var_INaCa__i_NaCa_jct = (var_INaCa__V_max * (1.0 / (1.0 + pow(0.00025599999999999999 / var_chaste_interface__Ca_buffer__Ca_jct, 3.0))) * (((exp((var_chaste_interface__cell__V * 33769.75) * 3.8798292719927153e-07) * pow(var_chaste_interface__Na_buffer__Na_jct, 3.0) * var_model_parameters__Cao) - (exp((var_chaste_interface__cell__V *  -62715.25) * 3.8798292719927153e-07) * pow(var_model_parameters__Nao, 3.0) * var_chaste_interface__Ca_buffer__Ca_jct)) / (1.0 + (0.27000000000000002 * exp((var_chaste_interface__cell__V *  -62715.25) * 3.8798292719927153e-07)))) * 0.11) / ((0.0035899999999999999 * pow(var_model_parameters__Nao, 3.0) * (1.0 + pow(var_chaste_interface__Na_buffer__Na_jct * 0.081366965012205056, 3.0))) + (669921.875 * var_chaste_interface__Ca_buffer__Ca_jct * (1.0 + (var_chaste_interface__Ca_buffer__Ca_jct * 278.55153203342621))) + (1.3 * pow(var_chaste_interface__Na_buffer__Na_jct, 3.0)) + (pow(var_chaste_interface__Na_buffer__Na_jct, 3.0) * var_model_parameters__Cao) + (pow(var_model_parameters__Nao, 3.0) * var_chaste_interface__Ca_buffer__Ca_jct)); // microA_per_microF
        const double var_INaCa__i_NaCa_SL = (var_INaCa__V_max * (1.0 / (1.0 + pow(0.00025599999999999999 / var_chaste_interface__Ca_buffer__Ca_SL, 3.0))) * (((exp((var_chaste_interface__cell__V * 33769.75) * 3.8798292719927153e-07) * pow(var_chaste_interface__Na_buffer__Na_SL, 3.0) * var_model_parameters__Cao) - (exp((var_chaste_interface__cell__V *  -62715.25) * 3.8798292719927153e-07) * pow(var_model_parameters__Nao, 3.0) * var_chaste_interface__Ca_buffer__Ca_SL)) / (1.0 + (0.27000000000000002 * exp((var_chaste_interface__cell__V *  -62715.25) * 3.8798292719927153e-07)))) * 0.89000000000000001) / ((0.0035899999999999999 * pow(var_model_parameters__Nao, 3.0) * (1.0 + pow(var_chaste_interface__Na_buffer__Na_SL * 0.081366965012205056, 3.0))) + (669921.875 * var_chaste_interface__Ca_buffer__Ca_SL * (1.0 + (var_chaste_interface__Ca_buffer__Ca_SL * 278.55153203342621))) + (1.3 * pow(var_chaste_interface__Na_buffer__Na_SL, 3.0)) + (pow(var_chaste_interface__Na_buffer__Na_SL, 3.0) * var_model_parameters__Cao) + (pow(var_model_parameters__Nao, 3.0) * var_chaste_interface__Ca_buffer__Ca_SL)); // microA_per_microF
        const double var_INaCa__i_NaCa = var_INaCa__i_NaCa_jct + var_INaCa__i_NaCa_SL; // microA_per_microF
        const double var_ICl_Ca__i_Cl_Ca = 0.109625 * (var_chaste_interface__cell__V -  -61.509652318919223) * ((0.11 / (1.0 + (0.10000000000000001 / var_chaste_interface__Ca_buffer__Ca_jct))) + (0.89000000000000001 / (1.0 + (0.10000000000000001 / var_chaste_interface__Ca_buffer__Ca_SL)))); // microA_per_microF
        const double var_IClb__i_Clb = 0.0089999999999999993 * (var_chaste_interface__cell__V -  -61.509652318919223); // microA_per_microF
        const double var_ICaL__temp = (var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f * var_chaste_interface__cell__V * 4189209851.25) * 3.8798292719927153e-07; // coulomb_per_mole
        const double var_ICaL_fCa_gate__fCa_SL = 1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL; // dimensionless
        const double var_ICaL__i_CaL_Na_SL = (var_ICaL__temp * var_ICaL_fCa_gate__fCa_SL * ((0.75 * var_chaste_interface__Na_buffer__Na_SL * exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07)) - (0.75 * var_model_parameters__Nao)) * 1.5e-09) / (exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07) - 1.0); // microA_per_microF
        const double var_ICaL__PCa = 0.00054000000000000001; // litre_per_farad_millisecond
        const double var_ICaL__i_CaL_Ca_SL = (var_ICaL__temp * var_ICaL_fCa_gate__fCa_SL * var_ICaL__PCa * ((0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_SL * exp((var_chaste_interface__cell__V * 192970.0) * 3.8798292719927153e-07)) - (0.34100000000000003 * var_model_parameters__Cao)) * 0.40000000000000002) / (exp((var_chaste_interface__cell__V * 192970.0) * 3.8798292719927153e-07) - 1.0); // microA_per_microF
        const double var_ICaL_fCa_gate__fCa_jct = 1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct; // dimensionless
        const double var_ICaL__i_CaL_Ca_jct = (var_ICaL__temp * var_ICaL_fCa_gate__fCa_jct * var_ICaL__PCa * ((0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_jct * exp((var_chaste_interface__cell__V * 192970.0) * 3.8798292719927153e-07)) - (0.34100000000000003 * var_model_parameters__Cao)) * 3.6000000000000001) / (exp((var_chaste_interface__cell__V * 192970.0) * 3.8798292719927153e-07) - 1.0); // microA_per_microF
        const double var_ICaL__i_CaL_Na_jct = (var_ICaL__temp * var_ICaL_fCa_gate__fCa_jct * ((0.75 * var_chaste_interface__Na_buffer__Na_jct * exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07)) - (0.75 * var_model_parameters__Nao)) * 1.3499999999999998e-08) / (exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07) - 1.0); // microA_per_microF
        const double var_ICaL__i_CaL = var_ICaL__i_CaL_Ca_SL + var_ICaL__i_CaL_Ca_jct + var_ICaL__i_CaL_Na_SL + var_ICaL__i_CaL_Na_jct + ((var_ICaL__temp * ((var_ICaL_fCa_gate__fCa_SL * 0.10000000000000001) + (var_ICaL_fCa_gate__fCa_jct * 0.90000000000000002)) * 2.7000000000000001e-07 * ((0.75 * var_model_parameters__Ki * exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07)) - (0.75 * var_model_parameters__Ko))) / (exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07) - 1.0)); // microA_per_microF
        const double var_ICab__i_Cab_SL = (var_chaste_interface__cell__V - (13.35665129294709 * log(var_model_parameters__Cao / var_chaste_interface__Ca_buffer__Ca_SL))) * 0.00022365699999999999; // microA_per_microF
        const double var_ICab__i_Cab_jct = (var_chaste_interface__cell__V - (13.35665129294709 * log(var_model_parameters__Cao / var_chaste_interface__Ca_buffer__Ca_jct))) * 2.7642999999999999e-05; // microA_per_microF
        const double var_ICab__i_Cab = var_ICab__i_Cab_SL + var_ICab__i_Cab_jct; // microA_per_microF
        const double var_ICap__i_Cap_SL = 0.059896999999999999 / (1.0 + pow(0.00050000000000000001 / var_chaste_interface__Ca_buffer__Ca_SL, 1.6000000000000001)); // microA_per_microF
        const double var_ICap__i_Cap_jct = 0.0074029999999999999 / (1.0 + pow(0.00050000000000000001 / var_chaste_interface__Ca_buffer__Ca_jct, 1.6000000000000001)); // microA_per_microF
        const double var_ICap__i_Cap = var_ICap__i_Cap_jct + var_ICap__i_Cap_SL; // microA_per_microF
        const double var_chaste_interface__Itos__i_tos = var_Itos__i_tos; // microA_per_microF
        const double var_chaste_interface__INa__i_Na = var_INa__i_Na; // microA_per_microF
        const double var_chaste_interface__ICaL__i_CaL = var_ICaL__i_CaL; // microA_per_microF
        const double var_chaste_interface__IKr__i_Kr = var_IKr__i_Kr; // microA_per_microF
        const double var_chaste_interface__IK1__i_K1 = var_IK1__i_K1; // microA_per_microF
        const double var_chaste_interface__IKs__i_Ks = var_IKs__i_Ks; // microA_per_microF
        const double var_chaste_interface__INaCa__i_NaCa = var_INaCa__i_NaCa; // microA_per_microF
        const double var_chaste_interface__i_ionic = (var_chaste_interface__INa__i_Na + var_INab__i_Nab + var_INaK__i_NaK + var_chaste_interface__IKr__i_Kr + var_chaste_interface__IKs__i_Ks + var_chaste_interface__Itos__i_tos + var_Itof__i_tof + var_chaste_interface__IK1__i_K1 + var_chaste_interface__INaCa__i_NaCa + var_ICl_Ca__i_Cl_Ca + var_IClb__i_Clb + var_chaste_interface__ICaL__i_CaL + var_ICab__i_Cab + var_ICap__i_Cap + var_IKp__i_Kp) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void DynamicShannon2004FromCellMLRushLarsen::EvaluateEquations(double var_chaste_interface__environment__time, std::vector<double> &rDY, std::vector<double> &rAlphaOrTau, std::vector<double> &rBetaOrInf)
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -8.556885e1
        double var_chaste_interface__Ca_buffer__Cai = rY[1];
        // Units: millimolar; Initial value: 8.597401e-5
        double var_chaste_interface__INa_h_gate__h = rY[2];
        // Units: dimensionless; Initial value: 9.867005e-1
        double var_chaste_interface__INa_j_gate__j = rY[3];
        // Units: dimensionless; Initial value: 9.91562e-1
        double var_chaste_interface__INa_m_gate__m = rY[4];
        // Units: dimensionless; Initial value: 1.405627e-3
        double var_chaste_interface__IKr_Xr_gate__Xr = rY[5];
        // Units: dimensionless; Initial value: 8.641386e-3
        double var_chaste_interface__IKs_Xs_gate__Xs = rY[6];
        // Units: dimensionless; Initial value: 5.412034e-3
        double var_chaste_interface__Itos_X_gate__X_tos = rY[7];
        // Units: dimensionless; Initial value: 4.051574e-3
        double var_chaste_interface__Itos_Y_gate__Y_tos = rY[8];
        // Units: dimensionless; Initial value: 9.945511e-1
        double var_chaste_interface__Itos_R_gate__R_tos = rY[9];
        // Units: dimensionless; Initial value: 0.9946
        double var_chaste_interface__Itof_X_gate__X_tof = rY[10];
        // Units: dimensionless; Initial value: 4.051574e-3
        double var_chaste_interface__Itof_Y_gate__Y_tof = rY[11];
        // Units: dimensionless; Initial value: 9.945511e-1
        double var_chaste_interface__ICaL_d_gate__d = rY[12];
        // Units: dimensionless; Initial value: 7.175662e-6
        double var_chaste_interface__ICaL_f_gate__f = rY[13];
        // Units: dimensionless; Initial value: 1.000681
        double var_chaste_interface__ICaL_fCa_gate__fCaB_SL = rY[14];
        // Units: dimensionless; Initial value: 1.452605e-2
        double var_chaste_interface__ICaL_fCa_gate__fCaB_jct = rY[15];
        // Units: dimensionless; Initial value: 2.421991e-2
        double var_chaste_interface__Jrel_SR__R = rY[16];
        // Units: dimensionless; Initial value: 8.884332e-1
        double var_chaste_interface__Jrel_SR__I = rY[17];
        // Units: dimensionless; Initial value: 1.024274e-7
        double var_chaste_interface__Jrel_SR__O = rY[18];
        // Units: dimensionless; Initial value: 8.156628e-7
        double var_chaste_interface__Na_buffer__Na_SL = rY[19];
        // Units: millimolar; Initial value: 8.80733
        double var_chaste_interface__Na_buffer__Na_jct = rY[20];
        // Units: millimolar; Initial value: 8.80329
        double var_chaste_interface__Na_buffer__Na_SL_buf = rY[21];
        // Units: millimolar; Initial value: 7.720854e-1
        double var_chaste_interface__Na_buffer__Na_jct_buf = rY[22];
        // Units: millimolar; Initial value: 3.539892
        double var_chaste_interface__Na_buffer__Nai = rY[23];
        // Units: millimolar; Initial value: 8.80853
        double var_chaste_interface__Ca_buffer__Ca_SR = rY[24];
        // Units: millimolar; Initial value: 5.545201e-1
        double var_chaste_interface__Ca_buffer__Ca_SL = rY[25];
        // Units: millimolar; Initial value: 1.031812e-4
        double var_chaste_interface__Ca_buffer__Ca_jct = rY[26];
        // Units: millimolar; Initial value: 1.737475e-4
        double var_chaste_interface__Ca_buffer__Ca_SLB_SL = rY[27];
        // Units: millimolar; Initial value: 1.110363e-1
        double var_chaste_interface__Ca_buffer__Ca_SLB_jct = rY[28];
        // Units: millimolar; Initial value: 9.566355e-3
        double var_chaste_interface__Ca_buffer__Ca_SLHigh_SL = rY[29];
        // Units: millimolar; Initial value: 7.297378e-2
        double var_chaste_interface__Ca_buffer__Ca_SLHigh_jct = rY[30];
        // Units: millimolar; Initial value: 7.347888e-3
        double var_chaste_interface__Ca_buffer__Ca_Calsequestrin = rY[31];
        // Units: millimolar; Initial value: 1.242988
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC = rY[32];
        // Units: millimolar; Initial value: 8.773191e-3
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg = rY[33];
        // Units: millimolar; Initial value: 1.078283e-1
        double var_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg = rY[34];
        // Units: millimolar; Initial value: 1.524002e-2
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_Calmodulin = rY[35];
        // Units: millimolar; Initial value: 2.911916e-4
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin = rY[36];
        // Units: millimolar; Initial value: 1.298754e-3
        double var_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin = rY[37];
        // Units: millimolar; Initial value: 1.381982e-1
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_SRB = rY[38];
        // Units: millimolar; Initial value: 2.143165e-3
        
        
        // Mathematics
        double d_dt_chaste_interface__cell__V;
        const double var_model_parameters__Nao = 140.0; // millimolar
        const double var_reversal_potentials__E_Na_jct = 26.71330258589418 * log(var_model_parameters__Nao / var_chaste_interface__Na_buffer__Na_jct); // millivolt
        const double var_INa__G_INa = 16.0; // milliS_per_microF
        const double var_INa__openProb = pow(var_chaste_interface__INa_m_gate__m, 3.0) * var_chaste_interface__INa_h_gate__h * var_chaste_interface__INa_j_gate__j; // dimensionless
        const double var_INa__i_Na_jct = 0.11 * var_INa__G_INa * var_INa__openProb * (var_chaste_interface__cell__V - var_reversal_potentials__E_Na_jct); // microA_per_microF
        const double var_reversal_potentials__E_Na_SL = 26.71330258589418 * log(var_model_parameters__Nao / var_chaste_interface__Na_buffer__Na_SL); // millivolt
        const double var_INa__i_Na_SL = 0.89000000000000001 * var_INa__G_INa * var_INa__openProb * (var_chaste_interface__cell__V - var_reversal_potentials__E_Na_SL); // microA_per_microF
        const double var_INab__i_Nab_jct = (var_chaste_interface__cell__V - var_reversal_potentials__E_Na_jct) * 3.2670000000000004e-05; // microA_per_microF
        const double var_INab__i_Nab_SL = (var_chaste_interface__cell__V - var_reversal_potentials__E_Na_SL) * 0.00026433000000000001; // microA_per_microF
        const double var_INaK__f_NaK = 1.0 / (1.0 + (0.1245 * exp((var_chaste_interface__cell__V *  -9648.5) * 3.8798292719927153e-07)) + (0.036499999999999998 * ((exp(var_model_parameters__Nao * 0.01485884101040119) - 1.0) * 0.14285714285714285) * exp(((-var_chaste_interface__cell__V) * 96485.0) * 3.8798292719927153e-07))); // dimensionless
        const double var_model_parameters__Ko = 5.4000000000000004; // millimolar
        const double var_INaK__i_NaK_SL = (((var_INaK__f_NaK * 1.6973990999999999) / (1.0 + pow(11.0 / var_chaste_interface__Na_buffer__Na_SL, 4.0))) * var_model_parameters__Ko) / (var_model_parameters__Ko + 1.5); // microA_per_microF
        const double var_INaK__i_NaK_jct = (((var_INaK__f_NaK * 0.2097909) / (1.0 + pow(11.0 / var_chaste_interface__Na_buffer__Na_jct, 4.0))) * var_model_parameters__Ko) / (var_model_parameters__Ko + 1.5); // microA_per_microF
        const double var_model_parameters__Cao = 1.8; // millimolar
        const double var_INaCa__V_max = 9.0; // microA_per_microF
        const double var_INaCa__i_NaCa_jct = (var_INaCa__V_max * (1.0 / (1.0 + pow(0.00025599999999999999 / var_chaste_interface__Ca_buffer__Ca_jct, 3.0))) * (((exp((var_chaste_interface__cell__V * 33769.75) * 3.8798292719927153e-07) * pow(var_chaste_interface__Na_buffer__Na_jct, 3.0) * var_model_parameters__Cao) - (exp((var_chaste_interface__cell__V *  -62715.25) * 3.8798292719927153e-07) * pow(var_model_parameters__Nao, 3.0) * var_chaste_interface__Ca_buffer__Ca_jct)) / (1.0 + (0.27000000000000002 * exp((var_chaste_interface__cell__V *  -62715.25) * 3.8798292719927153e-07)))) * 0.11) / ((0.0035899999999999999 * pow(var_model_parameters__Nao, 3.0) * (1.0 + pow(var_chaste_interface__Na_buffer__Na_jct * 0.081366965012205056, 3.0))) + (669921.875 * var_chaste_interface__Ca_buffer__Ca_jct * (1.0 + (var_chaste_interface__Ca_buffer__Ca_jct * 278.55153203342621))) + (1.3 * pow(var_chaste_interface__Na_buffer__Na_jct, 3.0)) + (pow(var_chaste_interface__Na_buffer__Na_jct, 3.0) * var_model_parameters__Cao) + (pow(var_model_parameters__Nao, 3.0) * var_chaste_interface__Ca_buffer__Ca_jct)); // microA_per_microF
        const double var_INaCa__i_NaCa_SL = (var_INaCa__V_max * (1.0 / (1.0 + pow(0.00025599999999999999 / var_chaste_interface__Ca_buffer__Ca_SL, 3.0))) * (((exp((var_chaste_interface__cell__V * 33769.75) * 3.8798292719927153e-07) * pow(var_chaste_interface__Na_buffer__Na_SL, 3.0) * var_model_parameters__Cao) - (exp((var_chaste_interface__cell__V *  -62715.25) * 3.8798292719927153e-07) * pow(var_model_parameters__Nao, 3.0) * var_chaste_interface__Ca_buffer__Ca_SL)) / (1.0 + (0.27000000000000002 * exp((var_chaste_interface__cell__V *  -62715.25) * 3.8798292719927153e-07)))) * 0.89000000000000001) / ((0.0035899999999999999 * pow(var_model_parameters__Nao, 3.0) * (1.0 + pow(var_chaste_interface__Na_buffer__Na_SL * 0.081366965012205056, 3.0))) + (669921.875 * var_chaste_interface__Ca_buffer__Ca_SL * (1.0 + (var_chaste_interface__Ca_buffer__Ca_SL * 278.55153203342621))) + (1.3 * pow(var_chaste_interface__Na_buffer__Na_SL, 3.0)) + (pow(var_chaste_interface__Na_buffer__Na_SL, 3.0) * var_model_parameters__Cao) + (pow(var_model_parameters__Nao, 3.0) * var_chaste_interface__Ca_buffer__Ca_SL)); // microA_per_microF
        const double var_ICaL__temp = (var_chaste_interface__ICaL_d_gate__d * var_chaste_interface__ICaL_f_gate__f * var_chaste_interface__cell__V * 4189209851.25) * 3.8798292719927153e-07; // coulomb_per_mole
        const double var_ICaL_fCa_gate__fCa_SL = 1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL; // dimensionless
        const double var_ICaL__i_CaL_Na_SL = (var_ICaL__temp * var_ICaL_fCa_gate__fCa_SL * ((0.75 * var_chaste_interface__Na_buffer__Na_SL * exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07)) - (0.75 * var_model_parameters__Nao)) * 1.5e-09) / (exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07) - 1.0); // microA_per_microF
        const double var_ICaL__PCa = 0.00054000000000000001; // litre_per_farad_millisecond
        const double var_ICaL__i_CaL_Ca_SL = (var_ICaL__temp * var_ICaL_fCa_gate__fCa_SL * var_ICaL__PCa * ((0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_SL * exp((var_chaste_interface__cell__V * 192970.0) * 3.8798292719927153e-07)) - (0.34100000000000003 * var_model_parameters__Cao)) * 0.40000000000000002) / (exp((var_chaste_interface__cell__V * 192970.0) * 3.8798292719927153e-07) - 1.0); // microA_per_microF
        const double var_ICaL_fCa_gate__fCa_jct = 1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct; // dimensionless
        const double var_ICaL__i_CaL_Ca_jct = (var_ICaL__temp * var_ICaL_fCa_gate__fCa_jct * var_ICaL__PCa * ((0.34100000000000003 * var_chaste_interface__Ca_buffer__Ca_jct * exp((var_chaste_interface__cell__V * 192970.0) * 3.8798292719927153e-07)) - (0.34100000000000003 * var_model_parameters__Cao)) * 3.6000000000000001) / (exp((var_chaste_interface__cell__V * 192970.0) * 3.8798292719927153e-07) - 1.0); // microA_per_microF
        const double var_ICaL__i_CaL_Na_jct = (var_ICaL__temp * var_ICaL_fCa_gate__fCa_jct * ((0.75 * var_chaste_interface__Na_buffer__Na_jct * exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07)) - (0.75 * var_model_parameters__Nao)) * 1.3499999999999998e-08) / (exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07) - 1.0); // microA_per_microF
        const double var_ICab__i_Cab_SL = (var_chaste_interface__cell__V - (13.35665129294709 * log(var_model_parameters__Cao / var_chaste_interface__Ca_buffer__Ca_SL))) * 0.00022365699999999999; // microA_per_microF
        const double var_ICab__i_Cab_jct = (var_chaste_interface__cell__V - (13.35665129294709 * log(var_model_parameters__Cao / var_chaste_interface__Ca_buffer__Ca_jct))) * 2.7642999999999999e-05; // microA_per_microF
        const double var_ICap__i_Cap_SL = 0.059896999999999999 / (1.0 + pow(0.00050000000000000001 / var_chaste_interface__Ca_buffer__Ca_SL, 1.6000000000000001)); // microA_per_microF
        const double var_ICap__i_Cap_jct = 0.0074029999999999999 / (1.0 + pow(0.00050000000000000001 / var_chaste_interface__Ca_buffer__Ca_jct, 1.6000000000000001)); // microA_per_microF
        const double var_ICaL_d_gate__d_infinity = 1.0 / (1.0 + exp((-(var_chaste_interface__cell__V + 14.5)) * 0.16666666666666666)); // dimensionless
        const double var_ICaL_f_gate__tau_f = 1.0 / ((0.019699999999999999 * exp(-pow(0.033700000000000001 * (var_chaste_interface__cell__V + 14.5), 2.0))) + 0.02); // millisecond
        const double var_Jrel_SR__ks = 25.0; // per_millisecond
        const double var_Jrel_SR__j_rel_SR = var_Jrel_SR__ks * var_chaste_interface__Jrel_SR__O * (var_chaste_interface__Ca_buffer__Ca_SR - var_chaste_interface__Ca_buffer__Ca_jct); // millimolar_per_millisecond
        const double var_Jrel_SR__RI = ((1.0 - var_chaste_interface__Jrel_SR__R) - var_chaste_interface__Jrel_SR__O) - var_chaste_interface__Jrel_SR__I; // dimensionless
        const double var_Jrel_SR__kCaSR = 15.0 - (14.0 / (1.0 + pow(0.45000000000000001 / var_chaste_interface__Ca_buffer__Ca_SR, 2.5))); // dimensionless
        const double var_Jrel_SR__koSRCa = 10.0 / var_Jrel_SR__kCaSR; // per_millimolar2_per_millisecond
        const double var_Jrel_SR__kiSRCa = 0.5 * var_Jrel_SR__kCaSR; // per_millimolar_per_millisecond
        const double var_Jleak_SR__KSRleak = 5.3480000000000003e-06; // per_millisecond
        const double var_Jleak_SR__j_leak_SR = var_Jleak_SR__KSRleak * (var_chaste_interface__Ca_buffer__Ca_SR - var_chaste_interface__Ca_buffer__Ca_jct); // millimolar_per_millisecond
        const double var_Jpump_SR__V_max = 0.0053114; // millimolar_per_millisecond
        const double var_Jpump_SR__j_pump_SR = (1.0 * var_Jpump_SR__V_max * (pow(var_chaste_interface__Ca_buffer__Cai * 4065.0406504065036, 1.7869999999999999) - pow(var_chaste_interface__Ca_buffer__Ca_SR * 0.58823529411764708, 1.7869999999999999))) / (1.0 + pow(var_chaste_interface__Ca_buffer__Cai * 4065.0406504065036, 1.7869999999999999) + pow(var_chaste_interface__Ca_buffer__Ca_SR * 0.58823529411764708, 1.7869999999999999)); // millimolar_per_millisecond
        const double var_ion_diffusion__J_Na_jct_SL = (var_chaste_interface__Na_buffer__Na_jct - var_chaste_interface__Na_buffer__Na_SL) * 1.8312999999999999e-14; // millimole_per_millisecond
        const double var_ion_diffusion__Nai = var_chaste_interface__Na_buffer__Nai; // millimolar
        const double var_ion_diffusion__J_Na_SL_myo = (var_chaste_interface__Na_buffer__Na_SL - var_ion_diffusion__Nai) * 1.6385999999999999e-12; // millimole_per_millisecond
        const double var_ion_diffusion__J_Ca_jct_SL = (var_chaste_interface__Ca_buffer__Ca_jct - var_chaste_interface__Ca_buffer__Ca_SL) * 8.2413000000000004e-13; // millimole_per_millisecond
        const double var_ion_diffusion__J_Ca_SL_myo = (var_chaste_interface__Ca_buffer__Ca_SL - var_chaste_interface__Ca_buffer__Cai) * 3.7243000000000002e-12; // millimole_per_millisecond
        const double var_Na_buffer__dNa_jct_buf = (0.0001 * var_chaste_interface__Na_buffer__Na_jct * (7.5609999999999999 - var_chaste_interface__Na_buffer__Na_jct_buf)) - (0.001 * var_chaste_interface__Na_buffer__Na_jct_buf); // millimolar_per_millisecond
        const double var_Na_buffer__dNa_SL_buf = (0.0001 * var_chaste_interface__Na_buffer__Na_SL * (1.6499999999999999 - var_chaste_interface__Na_buffer__Na_SL_buf)) - (0.001 * var_chaste_interface__Na_buffer__Na_SL_buf); // millimolar_per_millisecond
        const double var_Ca_buffer__dCalsequestrin = (100.0 * var_chaste_interface__Ca_buffer__Ca_SR * (2.6000000000000001 - var_chaste_interface__Ca_buffer__Ca_Calsequestrin)) - (65.0 * var_chaste_interface__Ca_buffer__Ca_Calsequestrin); // millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__dMg_Myosin = ((0.14000000000000001 - (var_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin + var_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin)) * 0.015699999999999999) - (5.7000000000000003e-05 * var_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin); // millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__dMg_TroponinC_Ca_Mg = ((0.14000000000000001 - (var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg + var_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg)) * 0.0030000000000000001) - (0.0033300000000000001 * var_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg); // millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__dCa_TroponinC_Ca_Mg = (2.3700000000000001 * var_chaste_interface__Ca_buffer__Cai * (0.14000000000000001 - (var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg + var_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg))) - (3.1999999999999999e-05 * var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg); // millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__dCa_Myosin = (13.800000000000001 * var_chaste_interface__Ca_buffer__Cai * (0.14000000000000001 - (var_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin + var_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin))) - (0.00046000000000000001 * var_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin); // millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__dCa_Calmodulin = (34.0 * var_chaste_interface__Ca_buffer__Cai * (0.024 - var_chaste_interface__cytosolic_Ca_buffer__Ca_Calmodulin)) - (0.23799999999999999 * var_chaste_interface__cytosolic_Ca_buffer__Ca_Calmodulin); // millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__dCa_TroponinC = (32.700000000000003 * var_chaste_interface__Ca_buffer__Cai * (0.070000000000000007 - var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC)) - (0.019599999999999999 * var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC); // millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__dCa_SRB = (100.0 * var_chaste_interface__Ca_buffer__Cai * (0.017100000000000001 - var_chaste_interface__cytosolic_Ca_buffer__Ca_SRB)) - (0.059999999999999998 * var_chaste_interface__cytosolic_Ca_buffer__Ca_SRB); // millimolar_per_millisecond
        const double var_Ca_buffer__dCa_SLB_SL = (100.0 * var_chaste_interface__Ca_buffer__Ca_SL * (1.2155 - var_chaste_interface__Ca_buffer__Ca_SLB_SL)) - (1.3 * var_chaste_interface__Ca_buffer__Ca_SLB_SL); // millimolar_per_millisecond
        const double var_Ca_buffer__dCa_SLB_jct = (100.0 * var_chaste_interface__Ca_buffer__Ca_jct * (0.55473098330241177 - var_chaste_interface__Ca_buffer__Ca_SLB_jct)) - (1.3 * var_chaste_interface__Ca_buffer__Ca_SLB_jct); // millimolar_per_millisecond
        const double var_Ca_buffer__dCa_SLHigh_SL = (100.0 * var_chaste_interface__Ca_buffer__Ca_SL * (0.43550000000000005 - var_chaste_interface__Ca_buffer__Ca_SLHigh_SL)) - (0.029999999999999999 * var_chaste_interface__Ca_buffer__Ca_SLHigh_SL); // millimolar_per_millisecond
        const double var_Ca_buffer__dCa_SLHigh_jct = (100.0 * var_chaste_interface__Ca_buffer__Ca_jct * (0.19897959183673466 - var_chaste_interface__Ca_buffer__Ca_SLHigh_jct)) - (0.029999999999999999 * var_chaste_interface__Ca_buffer__Ca_SLHigh_jct); // millimolar_per_millisecond
        const double d_dt_chaste_interface__Ca_buffer__Cai = ((((-var_Jpump_SR__j_pump_SR) * 1.1552225237380627e-12) * 46611066473.945427) + (var_ion_diffusion__J_Ca_SL_myo * 46611066473.945427)) - (1.0 * (var_cytosolic_Ca_buffer__dCa_TroponinC + var_cytosolic_Ca_buffer__dCa_TroponinC_Ca_Mg + var_cytosolic_Ca_buffer__dMg_TroponinC_Ca_Mg + var_cytosolic_Ca_buffer__dCa_Calmodulin + var_cytosolic_Ca_buffer__dCa_Myosin + var_cytosolic_Ca_buffer__dMg_Myosin + var_cytosolic_Ca_buffer__dCa_SRB)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__ICaL_fCa_gate__fCaB_SL = (1.7 * var_chaste_interface__Ca_buffer__Ca_SL * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_SL)) - (0.011900000000000001 * var_chaste_interface__ICaL_fCa_gate__fCaB_SL); // per_millisecond
        const double d_dt_chaste_interface__ICaL_fCa_gate__fCaB_jct = (1.7 * var_chaste_interface__Ca_buffer__Ca_jct * (1.0 - var_chaste_interface__ICaL_fCa_gate__fCaB_jct)) - (0.011900000000000001 * var_chaste_interface__ICaL_fCa_gate__fCaB_jct); // per_millisecond
        const double d_dt_chaste_interface__Jrel_SR__R = ((0.0050000000000000001 * var_Jrel_SR__RI) - (var_Jrel_SR__kiSRCa * var_chaste_interface__Ca_buffer__Ca_jct * var_chaste_interface__Jrel_SR__R)) - ((var_Jrel_SR__koSRCa * pow(var_chaste_interface__Ca_buffer__Ca_jct, 2.0) * var_chaste_interface__Jrel_SR__R) - (0.059999999999999998 * var_chaste_interface__Jrel_SR__O)); // per_millisecond
        const double d_dt_chaste_interface__Jrel_SR__I = ((var_Jrel_SR__kiSRCa * var_chaste_interface__Ca_buffer__Ca_jct * var_chaste_interface__Jrel_SR__O) - (0.0050000000000000001 * var_chaste_interface__Jrel_SR__I)) - ((0.059999999999999998 * var_chaste_interface__Jrel_SR__I) - (var_Jrel_SR__koSRCa * pow(var_chaste_interface__Ca_buffer__Ca_jct, 2.0) * var_Jrel_SR__RI)); // per_millisecond
        const double d_dt_chaste_interface__Jrel_SR__O = ((var_Jrel_SR__koSRCa * pow(var_chaste_interface__Ca_buffer__Ca_jct, 2.0) * var_chaste_interface__Jrel_SR__R) - (0.059999999999999998 * var_chaste_interface__Jrel_SR__O)) - ((var_Jrel_SR__kiSRCa * var_chaste_interface__Ca_buffer__Ca_jct * var_chaste_interface__Jrel_SR__O) - (0.0050000000000000001 * var_chaste_interface__Jrel_SR__I)); // per_millisecond
        const double d_dt_chaste_interface__Na_buffer__Na_SL = ((( -1.3809999999999999e-10 * (var_INa__i_Na_SL + (3.0 * var_INaCa__i_NaCa_SL) + var_INab__i_Nab_SL + (3.0 * var_INaK__i_NaK_SL) + var_ICaL__i_CaL_Na_SL)) * 15700468.056207974) + ((var_ion_diffusion__J_Na_jct_SL - var_ion_diffusion__J_Na_SL_myo) * 1514859660403.2266)) - var_Na_buffer__dNa_SL_buf; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Na_buffer__Na_jct = ((( -1.3809999999999999e-10 * (var_INa__i_Na_jct + (3.0 * var_INaCa__i_NaCa_jct) + var_INab__i_Nab_jct + (3.0 * var_INaK__i_NaK_jct) + var_ICaL__i_CaL_Na_jct)) * 582577664.42330146) - (var_ion_diffusion__J_Na_jct_SL * 56210005951882.234)) - var_Na_buffer__dNa_jct_buf; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Na_buffer__Na_SL_buf = var_Na_buffer__dNa_SL_buf; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Na_buffer__Na_jct_buf = var_Na_buffer__dNa_jct_buf; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Na_buffer__Nai = var_ion_diffusion__J_Na_SL_myo * 46611066473.945427; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_SR = (var_Jpump_SR__j_pump_SR - (((var_Jleak_SR__j_leak_SR * 2.145413258370688e-11) * 865634091658.98657) + var_Jrel_SR__j_rel_SR)) - var_Ca_buffer__dCalsequestrin; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_SL = ((((-((var_ICaL__i_CaL_Ca_SL - (2.0 * var_INaCa__i_NaCa_SL)) + var_ICab__i_Cab_SL + var_ICap__i_Cap_SL)) * 1.3809999999999999e-10) * 7850234.0281039868) + ((var_ion_diffusion__J_Ca_jct_SL - var_ion_diffusion__J_Ca_SL_myo) * 1514859660403.2266)) - (1.0 * (var_Ca_buffer__dCa_SLB_SL + var_Ca_buffer__dCa_SLHigh_SL)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_jct = (((((-((var_ICaL__i_CaL_Ca_jct - (2.0 * var_INaCa__i_NaCa_jct)) + var_ICab__i_Cab_jct + var_ICap__i_Cap_jct)) * 1.3809999999999999e-10) * 291288832.21165073) - (var_ion_diffusion__J_Ca_jct_SL * 56210005951882.234)) + ((var_Jrel_SR__j_rel_SR * 1.1552225237380627e-12) * 56210005951882.234) + ((var_Jleak_SR__j_leak_SR * 2.145413258370688e-11) * 56210005951882.234)) - (1.0 * (var_Ca_buffer__dCa_SLB_jct + var_Ca_buffer__dCa_SLHigh_jct)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_SLB_SL = var_Ca_buffer__dCa_SLB_SL; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_SLB_jct = var_Ca_buffer__dCa_SLB_jct; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_SLHigh_SL = var_Ca_buffer__dCa_SLHigh_SL; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_SLHigh_jct = var_Ca_buffer__dCa_SLHigh_jct; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_Calsequestrin = var_Ca_buffer__dCalsequestrin; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC = var_cytosolic_Ca_buffer__dCa_TroponinC; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg = var_cytosolic_Ca_buffer__dCa_TroponinC_Ca_Mg; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg = var_cytosolic_Ca_buffer__dMg_TroponinC_Ca_Mg; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_Calmodulin = var_cytosolic_Ca_buffer__dCa_Calmodulin; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin = var_cytosolic_Ca_buffer__dCa_Myosin; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin = var_cytosolic_Ca_buffer__dMg_Myosin; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_SRB = var_cytosolic_Ca_buffer__dCa_SRB; // 'millimole per litre per millisecond'
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__cell__V = 0.0;
        }
        else
        {
            const double var_INa__i_Na = var_INa__i_Na_jct + var_INa__i_Na_SL; // microA_per_microF
            const double var_INab__i_Nab = var_INab__i_Nab_jct + var_INab__i_Nab_SL; // microA_per_microF
            const double var_INaK__i_NaK = var_INaK__i_NaK_jct + var_INaK__i_NaK_SL; // microA_per_microF
            const double var_IKr__G_IKr_const = 0.029999999999999999; // milliS_per_microF
            const double var_model_parameters__Ki = 135.0; // millimolar
            const double var_reversal_potentials__E_K = 26.71330258589418 * log(var_model_parameters__Ko / var_model_parameters__Ki); // millivolt
            const double var_IKr__i_Kr = (var_IKr__G_IKr_const * sqrt(var_model_parameters__Ko * 0.18518518518518517)) * var_chaste_interface__IKr_Xr_gate__Xr * (1.0 / (1.0 + exp((33.0 + var_chaste_interface__cell__V) * 0.044642857142857144))) * (var_chaste_interface__cell__V - var_reversal_potentials__E_K); // microA_per_microF
            const double var_IKs__G_Ks_Max = 0.070000000000000007; // milliS_per_microF
            const double var_IKs__E_Ks = 26.71330258589418 * log((var_model_parameters__Ko + (0.018329999999999999 * var_model_parameters__Nao)) / (var_model_parameters__Ki + (0.018329999999999999 * var_chaste_interface__Na_buffer__Nai))); // millivolt
            const double var_IKs__i_Ks = (0.11 * (var_IKs__G_Ks_Max * (0.057000000000000002 + (0.19 / (1.0 + exp(( -7.2000000000000002 + ((-log10(var_chaste_interface__Ca_buffer__Ca_jct * 1.0)) + 3.0)) * 1.6666666666666667))))) * pow(var_chaste_interface__IKs_Xs_gate__Xs, 2.0) * (var_chaste_interface__cell__V - var_IKs__E_Ks)) + (0.89000000000000001 * (var_IKs__G_Ks_Max * (0.057000000000000002 + (0.19 / (1.0 + exp(( -7.2000000000000002 + ((-log10(var_chaste_interface__Ca_buffer__Ca_SL * 1.0)) + 3.0)) * 1.6666666666666667))))) * pow(var_chaste_interface__IKs_Xs_gate__Xs, 2.0) * (var_chaste_interface__cell__V - var_IKs__E_Ks)); // microA_per_microF
            const double var_IKp__i_Kp = (0.001 * (var_chaste_interface__cell__V - var_reversal_potentials__E_K)) / (1.0 + exp(7.4880000000000004 - (var_chaste_interface__cell__V * 0.16722408026755853))); // microA_per_microF
            const double var_Itos__G_tos = 0.059999999999999998; // milliS_per_microF
            const double var_Itos__i_tos = var_Itos__G_tos * var_chaste_interface__Itos_X_gate__X_tos * (var_chaste_interface__Itos_Y_gate__Y_tos + (0.5 * var_chaste_interface__Itos_R_gate__R_tos)) * (var_chaste_interface__cell__V - var_reversal_potentials__E_K); // microA_per_microF
            const double var_Itof__i_tof = 0.02 * var_chaste_interface__Itof_X_gate__X_tof * var_chaste_interface__Itof_Y_gate__Y_tof * (var_chaste_interface__cell__V - var_reversal_potentials__E_K); // microA_per_microF
            const double var_IK1_K1_gate__alpha_K1 = 1.02 / (1.0 + exp(0.23849999999999999 * (var_chaste_interface__cell__V - (var_reversal_potentials__E_K + 59.215000000000003)))); // per_millisecond
            const double var_IK1__i_K1 = (0.90000000000000002 * sqrt(var_model_parameters__Ko * 0.18518518518518517)) * (var_IK1_K1_gate__alpha_K1 / (var_IK1_K1_gate__alpha_K1 + (((0.49124000000000001 * exp(0.080320000000000003 * ((var_chaste_interface__cell__V - var_reversal_potentials__E_K) + 5.476))) + (1.0 * exp(0.061749999999999999 * (var_chaste_interface__cell__V - (var_reversal_potentials__E_K + 594.30999999999995))))) / (1.0 + exp( -0.51429999999999998 * ((var_chaste_interface__cell__V - var_reversal_potentials__E_K) + 4.7530000000000001)))))) * (var_chaste_interface__cell__V - var_reversal_potentials__E_K); // microA_per_microF
            const double var_INaCa__i_NaCa = var_INaCa__i_NaCa_jct + var_INaCa__i_NaCa_SL; // microA_per_microF
            const double var_ICl_Ca__i_Cl_Ca = 0.109625 * (var_chaste_interface__cell__V -  -61.509652318919223) * ((0.11 / (1.0 + (0.10000000000000001 / var_chaste_interface__Ca_buffer__Ca_jct))) + (0.89000000000000001 / (1.0 + (0.10000000000000001 / var_chaste_interface__Ca_buffer__Ca_SL)))); // microA_per_microF
            const double var_IClb__i_Clb = 0.0089999999999999993 * (var_chaste_interface__cell__V -  -61.509652318919223); // microA_per_microF
            const double var_ICaL__i_CaL = var_ICaL__i_CaL_Ca_SL + var_ICaL__i_CaL_Ca_jct + var_ICaL__i_CaL_Na_SL + var_ICaL__i_CaL_Na_jct + ((var_ICaL__temp * ((var_ICaL_fCa_gate__fCa_SL * 0.10000000000000001) + (var_ICaL_fCa_gate__fCa_jct * 0.90000000000000002)) * 2.7000000000000001e-07 * ((0.75 * var_model_parameters__Ki * exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07)) - (0.75 * var_model_parameters__Ko))) / (exp((var_chaste_interface__cell__V * 96485.0) * 3.8798292719927153e-07) - 1.0)); // microA_per_microF
            const double var_ICab__i_Cab = var_ICab__i_Cab_SL + var_ICab__i_Cab_jct; // microA_per_microF
            const double var_ICap__i_Cap = var_ICap__i_Cap_jct + var_ICap__i_Cap_SL; // microA_per_microF
            const double var_chaste_interface__cell__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
            d_dt_chaste_interface__cell__V = -(var_INa__i_Na + var_INab__i_Nab + var_INaK__i_NaK + var_IKr__i_Kr + var_IKs__i_Ks + var_Itos__i_tos + var_Itof__i_tof + var_IK1__i_K1 + var_INaCa__i_NaCa + var_ICl_Ca__i_Cl_Ca + var_IClb__i_Clb + var_ICaL__i_CaL + var_ICab__i_Cab + var_ICap__i_Cap + var_IKp__i_Kp + (var_chaste_interface__cell__i_Stim / HeartConfig::Instance()->GetCapacitance())); // 'millivolt per millisecond'
        }
        
        rDY[0] = d_dt_chaste_interface__cell__V;
        rDY[1] = d_dt_chaste_interface__Ca_buffer__Cai;
        rAlphaOrTau[2] = (var_chaste_interface__cell__V <  -40.0) ? (0.13500000000000001 * exp((80.0 + var_chaste_interface__cell__V) *  -0.14705882352941177)) : 0.0;
        rBetaOrInf[2] = (var_chaste_interface__cell__V <  -40.0) ? ((3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__cell__V)) + (310000.0 * exp(0.34999999999999998 * var_chaste_interface__cell__V))) : (1.0 / (0.13 * (1.0 + exp((var_chaste_interface__cell__V + 10.66) *  -0.0900900900900901))));
        rAlphaOrTau[3] = (var_chaste_interface__cell__V <  -40.0) ? ((((( -127140.0 * exp(0.24440000000000001 * var_chaste_interface__cell__V)) - (3.4740000000000003e-05 * exp( -0.043909999999999998 * var_chaste_interface__cell__V))) * (var_chaste_interface__cell__V + 37.780000000000001)) * 1.0) / (1.0 + exp(0.311 * (var_chaste_interface__cell__V + 79.230000000000004)))) : 0.0;
        rBetaOrInf[3] = (var_chaste_interface__cell__V <  -40.0) ? ((0.1212 * exp( -0.01052 * var_chaste_interface__cell__V)) / (1.0 + exp( -0.13780000000000001 * (var_chaste_interface__cell__V + 40.140000000000001)))) : ((0.29999999999999999 * exp( -2.5349999999999999e-07 * var_chaste_interface__cell__V)) / (1.0 + exp( -0.10000000000000001 * (var_chaste_interface__cell__V + 32.0))));
        rAlphaOrTau[4] = ((0.32000000000000001 * (var_chaste_interface__cell__V + 47.130000000000003)) * 1.0) / (1.0 - exp( -0.10000000000000001 * (var_chaste_interface__cell__V + 47.130000000000003)));
        rBetaOrInf[4] = 0.080000000000000002 * exp((-var_chaste_interface__cell__V) * 0.090909090909090912);
        rAlphaOrTau[5] = 1.0 / (((0.0013799999999999999 * (var_chaste_interface__cell__V + 7.0)) / (1.0 - exp( -0.123 * (var_chaste_interface__cell__V + 7.0)))) + ((0.00060999999999999997 * (var_chaste_interface__cell__V + 10.0)) / (exp(0.14499999999999999 * (var_chaste_interface__cell__V + 10.0)) - 1.0)));
        rBetaOrInf[5] = 1.0 / (1.0 + exp((-(50.0 + var_chaste_interface__cell__V)) * 0.13333333333333333));
        rAlphaOrTau[6] = 1.0 / (((7.1899999999999999e-05 * (var_chaste_interface__cell__V + 30.0)) / (1.0 - exp( -0.14799999999999999 * (var_chaste_interface__cell__V + 30.0)))) + ((0.00013100000000000001 * (var_chaste_interface__cell__V + 30.0)) / ( -1.0 + exp(0.068699999999999997 * (var_chaste_interface__cell__V + 30.0)))));
        rBetaOrInf[6] = 1.0 / (1.0 + exp((-(var_chaste_interface__cell__V - 1.5)) * 0.059880239520958084));
        rAlphaOrTau[7] = (9.0 / (1.0 + exp((var_chaste_interface__cell__V + 3.0) * 0.066666666666666666))) + 0.5;
        rBetaOrInf[7] = 1.0 / (1.0 + exp((-(var_chaste_interface__cell__V + 3.0)) * 0.066666666666666666));
        rAlphaOrTau[8] = (3000.0 / (1.0 + exp((var_chaste_interface__cell__V + 60.0) * 0.10000000000000001))) + 30.0;
        rBetaOrInf[8] = 1.0 / (1.0 + exp((var_chaste_interface__cell__V + 33.5) * 0.10000000000000001));
        rAlphaOrTau[9] = (2800.0 / (1.0 + exp((var_chaste_interface__cell__V + 60.0) * 0.10000000000000001))) + 220.0;
        rBetaOrInf[9] = 1.0 / (1.0 + exp((var_chaste_interface__cell__V + 33.5) * 0.10000000000000001));
        rAlphaOrTau[10] = (3.5 * exp(-pow(var_chaste_interface__cell__V * 0.033333333333333333, 2.0))) + 1.5;
        rBetaOrInf[10] = 1.0 / (1.0 + exp((-(var_chaste_interface__cell__V + 3.0)) * 0.066666666666666666));
        rAlphaOrTau[11] = (20.0 / (1.0 + exp((var_chaste_interface__cell__V + 33.5) * 0.10000000000000001))) + 20.0;
        rBetaOrInf[11] = 1.0 / (1.0 + exp((var_chaste_interface__cell__V + 33.5) * 0.10000000000000001));
        rAlphaOrTau[12] = (1.0 * var_ICaL_d_gate__d_infinity * (1.0 - exp((-(var_chaste_interface__cell__V + 14.5)) * 0.16666666666666666))) / (0.035000000000000003 * (var_chaste_interface__cell__V + 14.5));
        rBetaOrInf[12] = var_ICaL_d_gate__d_infinity;
        rAlphaOrTau[13] = var_ICaL_f_gate__tau_f;
        rBetaOrInf[13] = (1.0 / (1.0 + exp((var_chaste_interface__cell__V + 35.060000000000002) * 0.27777777777777779))) + (0.59999999999999998 / (1.0 + exp((50.0 - var_chaste_interface__cell__V) * 0.050000000000000003)));
        rDY[14] = d_dt_chaste_interface__ICaL_fCa_gate__fCaB_SL;
        rDY[15] = d_dt_chaste_interface__ICaL_fCa_gate__fCaB_jct;
        rDY[16] = d_dt_chaste_interface__Jrel_SR__R;
        rDY[17] = d_dt_chaste_interface__Jrel_SR__I;
        rDY[18] = d_dt_chaste_interface__Jrel_SR__O;
        rDY[19] = d_dt_chaste_interface__Na_buffer__Na_SL;
        rDY[20] = d_dt_chaste_interface__Na_buffer__Na_jct;
        rDY[21] = d_dt_chaste_interface__Na_buffer__Na_SL_buf;
        rDY[22] = d_dt_chaste_interface__Na_buffer__Na_jct_buf;
        rDY[23] = d_dt_chaste_interface__Na_buffer__Nai;
        rDY[24] = d_dt_chaste_interface__Ca_buffer__Ca_SR;
        rDY[25] = d_dt_chaste_interface__Ca_buffer__Ca_SL;
        rDY[26] = d_dt_chaste_interface__Ca_buffer__Ca_jct;
        rDY[27] = d_dt_chaste_interface__Ca_buffer__Ca_SLB_SL;
        rDY[28] = d_dt_chaste_interface__Ca_buffer__Ca_SLB_jct;
        rDY[29] = d_dt_chaste_interface__Ca_buffer__Ca_SLHigh_SL;
        rDY[30] = d_dt_chaste_interface__Ca_buffer__Ca_SLHigh_jct;
        rDY[31] = d_dt_chaste_interface__Ca_buffer__Ca_Calsequestrin;
        rDY[32] = d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC;
        rDY[33] = d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg;
        rDY[34] = d_dt_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg;
        rDY[35] = d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_Calmodulin;
        rDY[36] = d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin;
        rDY[37] = d_dt_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin;
        rDY[38] = d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_SRB;
    }
    
    void DynamicShannon2004FromCellMLRushLarsen::ComputeOneStepExceptVoltage(const std::vector<double> &rDY, const std::vector<double> &rAlphaOrTau, const std::vector<double> &rBetaOrInf)
    {
        std::vector<double>& rY = rGetStateVariables();
        rY[1] += mDt * rDY[1];
        {
            const double tau_inv = rAlphaOrTau[2] + rBetaOrInf[2];
            const double y_inf = rAlphaOrTau[2] / tau_inv;
            rY[2] = y_inf + (rY[2] - y_inf)*exp(-mDt*tau_inv);
        }
        {
            const double tau_inv = rAlphaOrTau[3] + rBetaOrInf[3];
            const double y_inf = rAlphaOrTau[3] / tau_inv;
            rY[3] = y_inf + (rY[3] - y_inf)*exp(-mDt*tau_inv);
        }
        {
            const double tau_inv = rAlphaOrTau[4] + rBetaOrInf[4];
            const double y_inf = rAlphaOrTau[4] / tau_inv;
            rY[4] = y_inf + (rY[4] - y_inf)*exp(-mDt*tau_inv);
        }
        rY[5] = rBetaOrInf[5] + (rY[5] - rBetaOrInf[5])*exp(-mDt/rAlphaOrTau[5]);
        rY[6] = rBetaOrInf[6] + (rY[6] - rBetaOrInf[6])*exp(-mDt/rAlphaOrTau[6]);
        rY[7] = rBetaOrInf[7] + (rY[7] - rBetaOrInf[7])*exp(-mDt/rAlphaOrTau[7]);
        rY[8] = rBetaOrInf[8] + (rY[8] - rBetaOrInf[8])*exp(-mDt/rAlphaOrTau[8]);
        rY[9] = rBetaOrInf[9] + (rY[9] - rBetaOrInf[9])*exp(-mDt/rAlphaOrTau[9]);
        rY[10] = rBetaOrInf[10] + (rY[10] - rBetaOrInf[10])*exp(-mDt/rAlphaOrTau[10]);
        rY[11] = rBetaOrInf[11] + (rY[11] - rBetaOrInf[11])*exp(-mDt/rAlphaOrTau[11]);
        rY[12] = rBetaOrInf[12] + (rY[12] - rBetaOrInf[12])*exp(-mDt/rAlphaOrTau[12]);
        rY[13] = rBetaOrInf[13] + (rY[13] - rBetaOrInf[13])*exp(-mDt/rAlphaOrTau[13]);
        rY[14] += mDt * rDY[14];
        rY[15] += mDt * rDY[15];
        rY[16] += mDt * rDY[16];
        rY[17] += mDt * rDY[17];
        rY[18] += mDt * rDY[18];
        rY[19] += mDt * rDY[19];
        rY[20] += mDt * rDY[20];
        rY[21] += mDt * rDY[21];
        rY[22] += mDt * rDY[22];
        rY[23] += mDt * rDY[23];
        rY[24] += mDt * rDY[24];
        rY[25] += mDt * rDY[25];
        rY[26] += mDt * rDY[26];
        rY[27] += mDt * rDY[27];
        rY[28] += mDt * rDY[28];
        rY[29] += mDt * rDY[29];
        rY[30] += mDt * rDY[30];
        rY[31] += mDt * rDY[31];
        rY[32] += mDt * rDY[32];
        rY[33] += mDt * rDY[33];
        rY[34] += mDt * rDY[34];
        rY[35] += mDt * rDY[35];
        rY[36] += mDt * rDY[36];
        rY[37] += mDt * rDY[37];
        rY[38] += mDt * rDY[38];
    }
    
template<>
void OdeSystemInformation<DynamicShannon2004FromCellMLRushLarsen>::Initialise(void)
{
    this->mSystemName = "shannon_2004";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-8.556885e1);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.597401e-5);

    // rY[2]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.867005e-1);

    // rY[3]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.91562e-1);

    // rY[4]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.405627e-3);

    // rY[5]:
    this->mVariableNames.push_back("IKr_Xr_gate__Xr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.641386e-3);

    // rY[6]:
    this->mVariableNames.push_back("IKs_Xs_gate__Xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(5.412034e-3);

    // rY[7]:
    this->mVariableNames.push_back("Itos_X_gate__X_tos");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(4.051574e-3);

    // rY[8]:
    this->mVariableNames.push_back("Itos_Y_gate__Y_tos");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.945511e-1);

    // rY[9]:
    this->mVariableNames.push_back("Itos_R_gate__R_tos");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9946);

    // rY[10]:
    this->mVariableNames.push_back("Itof_X_gate__X_tof");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(4.051574e-3);

    // rY[11]:
    this->mVariableNames.push_back("Itof_Y_gate__Y_tof");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.945511e-1);

    // rY[12]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(7.175662e-6);

    // rY[13]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.000681);

    // rY[14]:
    this->mVariableNames.push_back("ICaL_fCa_gate__fCaB_SL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.452605e-2);

    // rY[15]:
    this->mVariableNames.push_back("ICaL_fCa_gate__fCaB_jct");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.421991e-2);

    // rY[16]:
    this->mVariableNames.push_back("Jrel_SR__R");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.884332e-1);

    // rY[17]:
    this->mVariableNames.push_back("Jrel_SR__I");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.024274e-7);

    // rY[18]:
    this->mVariableNames.push_back("Jrel_SR__O");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.156628e-7);

    // rY[19]:
    this->mVariableNames.push_back("Na_buffer__Na_SL");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.80733);

    // rY[20]:
    this->mVariableNames.push_back("Na_buffer__Na_jct");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.80329);

    // rY[21]:
    this->mVariableNames.push_back("Na_buffer__Na_SL_buf");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.720854e-1);

    // rY[22]:
    this->mVariableNames.push_back("Na_buffer__Na_jct_buf");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(3.539892);

    // rY[23]:
    this->mVariableNames.push_back("Na_buffer__Nai");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.80853);

    // rY[24]:
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(5.545201e-1);

    // rY[25]:
    this->mVariableNames.push_back("Ca_buffer__Ca_SL");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.031812e-4);

    // rY[26]:
    this->mVariableNames.push_back("Ca_buffer__Ca_jct");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.737475e-4);

    // rY[27]:
    this->mVariableNames.push_back("Ca_buffer__Ca_SLB_SL");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.110363e-1);

    // rY[28]:
    this->mVariableNames.push_back("Ca_buffer__Ca_SLB_jct");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(9.566355e-3);

    // rY[29]:
    this->mVariableNames.push_back("Ca_buffer__Ca_SLHigh_SL");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.297378e-2);

    // rY[30]:
    this->mVariableNames.push_back("Ca_buffer__Ca_SLHigh_jct");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.347888e-3);

    // rY[31]:
    this->mVariableNames.push_back("Ca_buffer__Ca_Calsequestrin");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.242988);

    // rY[32]:
    this->mVariableNames.push_back("cytosolic_Ca_buffer__Ca_TroponinC");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.773191e-3);

    // rY[33]:
    this->mVariableNames.push_back("cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.078283e-1);

    // rY[34]:
    this->mVariableNames.push_back("cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.524002e-2);

    // rY[35]:
    this->mVariableNames.push_back("cytosolic_Ca_buffer__Ca_Calmodulin");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(2.911916e-4);

    // rY[36]:
    this->mVariableNames.push_back("cytosolic_Ca_buffer__Ca_Myosin");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.298754e-3);

    // rY[37]:
    this->mVariableNames.push_back("cytosolic_Ca_buffer__Mg_Myosin");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.381982e-1);

    // rY[38]:
    this->mVariableNames.push_back("cytosolic_Ca_buffer__Ca_SRB");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(2.143165e-3);

    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(DynamicShannon2004FromCellMLRushLarsen)
extern "C"
{
    AbstractCardiacCellInterface* MakeCardiacCell(
            boost::shared_ptr<AbstractIvpOdeSolver> pSolver,
            boost::shared_ptr<AbstractStimulusFunction> pStimulus)
    {
        return new DynamicShannon2004FromCellMLRushLarsen(pSolver, pStimulus);
    }
    
}

