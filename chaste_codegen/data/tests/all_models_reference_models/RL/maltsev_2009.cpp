//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: maltsev_2009
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: RushLarsen)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "maltsev_2009.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"



    double Cellmaltsev_2009FromCellMLRushLarsen::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    Cellmaltsev_2009FromCellMLRushLarsen::Cellmaltsev_2009FromCellMLRushLarsen(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractRushLarsenCardiacCell(
                29,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellmaltsev_2009FromCellMLRushLarsen>::Instance();
        Init();
        
        this->mParameters[0] = 140.0; // (var_model_parameters__Ki) [millimolar]
        this->mParameters[1] = 10.0; // (var_model_parameters__Nai) [millimolar]
        this->mParameters[2] = 2.0; // (var_model_parameters__Cao) [millimolar]
        this->mParameters[3] = 5.4000000000000004; // (var_model_parameters__Ko) [millimolar]
        this->mParameters[4] = 140.0; // (var_model_parameters__Nao) [millimolar]
        this->mParameters[5] = 0.46400000000000002; // (var_i_CaL__g_CaL) [nanoS_per_picoF]
        this->mParameters[6] = 0.61670000000000003; // (var_i_f__g_if_K) [dimensionless]
        this->mParameters[7] = 0.38329999999999997; // (var_i_f__g_if_Na) [dimensionless]
        this->mParameters[8] = 0.081139729999999993; // (var_i_Kr__g_Kr) [nanoS_per_picoF]
        this->mParameters[9] = 32.0; // (var_model_parameters__Cm) [picoF]
    }

    Cellmaltsev_2009FromCellMLRushLarsen::~Cellmaltsev_2009FromCellMLRushLarsen()
    {
    }

    
    double Cellmaltsev_2009FromCellMLRushLarsen::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__i_CaL_dL_gate__dL = rY[2];
        // Units: dimensionless; Initial value: 0.000584545564405
        double var_chaste_interface__i_CaL_fL_gate__fL = rY[3];
        // Units: dimensionless; Initial value: 0.862381249774
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[4];
        // Units: dimensionless; Initial value: 0.711395919653
        double var_chaste_interface__i_CaT_dT_gate__dT = rY[5];
        // Units: dimensionless; Initial value: 0.00504393374639
        double var_chaste_interface__i_CaT_fT_gate__fT = rY[6];
        // Units: dimensionless; Initial value: 0.420757825415
        double var_chaste_interface__i_Kr_pa_gate__paS = rY[7];
        // Units: dimensionless; Initial value: 0.453100576739
        double var_chaste_interface__i_Kr_pa_gate__paF = rY[8];
        // Units: dimensionless; Initial value: 0.144755091176
        double var_chaste_interface__i_Kr_pi_gate__pi_ = rY[9];
        // Units: dimensionless; Initial value: 0.849409822329
        double var_chaste_interface__i_Ks_n_gate__n = rY[10];
        // Units: dimensionless; Initial value: 0.0264600410928
        double var_chaste_interface__AP_sensitive_currents_q_gate__q = rY[11];
        // Units: dimensionless; Initial value: 0.694241313965
        double var_chaste_interface__AP_sensitive_currents_r_gate__r = rY[12];
        // Units: dimensionless; Initial value: 0.00558131733359
        double var_chaste_interface__i_f_y_gate__y = rY[13];
        // Units: dimensionless; Initial value: 0.113643187247
        double var_chaste_interface__i_st_qa_gate__qa = rY[14];
        // Units: dimensionless; Initial value: 0.42380243163
        double var_chaste_interface__i_st_qi_gate__qi = rY[15];
        // Units: dimensionless; Initial value: 0.447294008304
        double var_chaste_interface__calcium_dynamics__Ca_sub = rY[28];
        // Units: millimolar; Initial value: 0.000138112560112
        
        const double var_AP_sensitive_currents__g_sus = 0.02; // nanoS_per_picoF
        const double var_AP_sensitive_currents__g_to = 0.252; // nanoS_per_picoF
        const double var_i_CaL__E_CaL = 45.0; // millivolt
        const double var_i_CaT__E_CaT = 45.0; // millivolt
        const double var_i_CaT__g_CaT = 0.1832; // nanoS_per_picoF
        const double var_i_Ks__g_Ks = 0.025899999999999999; // nanoS_per_picoF
        const double var_i_NaCa__K1ni = 395.30000000000001; // millimolar
        const double var_i_NaCa__K1no = 1628.0; // millimolar
        const double var_i_NaCa__K2ni = 2.2890000000000001; // millimolar
        const double var_i_NaCa__K2no = 561.39999999999998; // millimolar
        const double var_i_NaCa__K3ni = 26.440000000000001; // millimolar
        const double var_i_NaCa__K3no = 4.6630000000000003; // millimolar
        const double var_i_NaCa__Kci = 0.0207; // millimolar
        const double var_i_NaCa__Kcni = 26.440000000000001; // millimolar
        const double var_i_NaCa__Kco = 3.6629999999999998; // millimolar
        const double var_i_NaCa__Qci = 0.13689999999999999; // dimensionless
        const double var_i_NaCa__Qco = 0; // dimensionless
        const double var_i_NaCa__Qn = 0.43149999999999999; // dimensionless
        const double var_i_NaCa__kNaCa = 187.5; // picoA_per_picoF
        const double var_i_NaK__Km_Kp = 1.3999999999999999; // millimolar
        const double var_i_NaK__Km_Nap = 14.0; // millimolar
        const double var_i_NaK__i_NaK_max = 2.8799999999999999; // picoA_per_picoF
        const double var_i_b_Ca__g_b_Ca = 0.00059999999999999995; // nanoS_per_picoF
        const double var_i_b_Na__g_b_Na = 0.0048599999999999997; // nanoS_per_picoF
        const double var_i_f__g_if = 0.14999999999999999; // nanoS_per_picoF
        const double var_i_st__E_st = 37.399999999999999; // millivolt
        const double var_i_st__g_st = 0.0030000000000000001; // nanoS_per_picoF
        const double var_i_CaL__i_CaL = (-var_i_CaL__E_CaL + var_chaste_interface__Vm__Vm) * mParameters[5] * var_chaste_interface__i_CaL_dL_gate__dL * var_chaste_interface__i_CaL_fCa_gate__fCa * var_chaste_interface__i_CaL_fL_gate__fL * mParameters[9]; // picoA
        const double var_i_CaT__i_CaT = (-var_i_CaT__E_CaT + var_chaste_interface__Vm__Vm) * var_i_CaT__g_CaT * var_chaste_interface__i_CaT_dT_gate__dT * var_chaste_interface__i_CaT_fT_gate__fT * mParameters[9]; // picoA
        const double var_i_b_Ca__i_b_Ca = (-var_i_CaL__E_CaL + var_chaste_interface__Vm__Vm) * var_i_b_Ca__g_b_Ca * mParameters[9]; // picoA
        const double var_i_st__i_st = (-var_i_st__E_st + var_chaste_interface__Vm__Vm) * var_i_st__g_st * var_chaste_interface__i_st_qa_gate__qa * var_chaste_interface__i_st_qi_gate__qi * mParameters[9]; // picoA
        const double var_model_parameters__Cm_converted = 9.9999999999999995e-7 * mParameters[9]; // uF
        const double var_i_CaL__i_CaL_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_CaL__i_CaL / var_model_parameters__Cm_converted; // uA_per_cm2
        const double var_model_parameters__F = 96485.0; // coulomb_per_mole
        const double var_i_NaCa__k43 = mParameters[1] / (var_i_NaCa__K3ni + mParameters[1]); // dimensionless
        const double var_i_NaCa__k34 = mParameters[4] / (var_i_NaCa__K3no + mParameters[4]); // dimensionless
        const double var_model_parameters__R = 8314.3999999999996; // joule_per_kilomole_kelvin
        const double var_model_parameters__T = 310.14999999999998; // kelvin
        const double var_electric_potentials__E_K = var_model_parameters__R * var_model_parameters__T * log(mParameters[3] / mParameters[0]) / var_model_parameters__F; // millivolt
        const double var_AP_sensitive_currents__i_sus = (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * var_AP_sensitive_currents__g_sus * var_chaste_interface__AP_sensitive_currents_r_gate__r * mParameters[9]; // picoA
        const double var_AP_sensitive_currents__i_to = (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * var_AP_sensitive_currents__g_to * var_chaste_interface__AP_sensitive_currents_q_gate__q * var_chaste_interface__AP_sensitive_currents_r_gate__r * mParameters[9]; // picoA
        const double var_electric_potentials__E_Ks = var_model_parameters__R * var_model_parameters__T * log((mParameters[3] + 0.12 * mParameters[4]) / (mParameters[0] + 0.12 * mParameters[1])) / var_model_parameters__F; // millivolt
        const double var_electric_potentials__E_Na = var_model_parameters__R * var_model_parameters__T * log(mParameters[4] / mParameters[1]) / var_model_parameters__F; // millivolt
        const double var_i_Kr__i_Kr = (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * (0.40000000000000002 * var_chaste_interface__i_Kr_pa_gate__paS + 0.59999999999999998 * var_chaste_interface__i_Kr_pa_gate__paF) * mParameters[8] * var_chaste_interface__i_Kr_pi_gate__pi_ * mParameters[9]; // picoA
        const double var_i_Kr__i_Kr_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_Kr__i_Kr / var_model_parameters__Cm_converted; // uA_per_cm2
        const double var_i_Ks__i_Ks = pow(var_chaste_interface__i_Ks_n_gate__n, 2) * (-var_electric_potentials__E_Ks + var_chaste_interface__Vm__Vm) * var_i_Ks__g_Ks * mParameters[9]; // picoA
        const double var_i_NaCa__RTOnF = var_model_parameters__R * var_model_parameters__T / var_model_parameters__F; // millivolt
        const double var_i_NaCa__di = 1.0 + (1.0 + (1.0 + mParameters[1] / var_i_NaCa__K3ni) * mParameters[1] / var_i_NaCa__K2ni) * mParameters[1] / var_i_NaCa__K1ni + (1.0 + mParameters[1] / var_i_NaCa__Kcni + exp(-var_chaste_interface__Vm__Vm * var_i_NaCa__Qci / var_i_NaCa__RTOnF)) * var_chaste_interface__calcium_dynamics__Ca_sub / var_i_NaCa__Kci; // dimensionless
        const double var_i_NaCa__do = 1.0 + (1.0 + (1.0 + mParameters[4] / var_i_NaCa__K3no) * mParameters[4] / var_i_NaCa__K2no) * mParameters[4] / var_i_NaCa__K1no + (1.0 + exp(var_chaste_interface__Vm__Vm * var_i_NaCa__Qco / var_i_NaCa__RTOnF)) * mParameters[2] / var_i_NaCa__Kco; // dimensionless
        const double var_i_NaCa__k12 = var_chaste_interface__calcium_dynamics__Ca_sub * exp(-var_chaste_interface__Vm__Vm * var_i_NaCa__Qci / var_i_NaCa__RTOnF) / (var_i_NaCa__Kci * var_i_NaCa__di); // dimensionless
        const double var_i_NaCa__k14 = pow(mParameters[1], 2) * (1.0 + mParameters[1] / var_i_NaCa__K3ni) * exp(0.5 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qn / var_i_NaCa__RTOnF) / (var_i_NaCa__K1ni * var_i_NaCa__K2ni * var_i_NaCa__di); // dimensionless
        const double var_i_NaCa__k21 = mParameters[2] * exp(var_chaste_interface__Vm__Vm * var_i_NaCa__Qco / var_i_NaCa__RTOnF) / (var_i_NaCa__Kco * var_i_NaCa__do); // dimensionless
        const double var_i_NaCa__k23 = pow(mParameters[4], 2) * (1.0 + mParameters[4] / var_i_NaCa__K3no) * exp(-0.5 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qn / var_i_NaCa__RTOnF) / (var_i_NaCa__K1no * var_i_NaCa__K2no * var_i_NaCa__do); // dimensionless
        const double var_i_NaCa__k32 = exp(0.5 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qn / var_i_NaCa__RTOnF); // dimensionless
        const double var_i_NaCa__k41 = exp(-0.5 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qn / var_i_NaCa__RTOnF); // dimensionless
        const double var_i_NaCa__x1 = (var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k34 * var_i_NaCa__k41 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k21 * var_i_NaCa__k32; // dimensionless
        const double var_i_NaCa__x2 = (var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k32 * var_i_NaCa__k43 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k12 * var_i_NaCa__k41; // dimensionless
        const double var_i_NaCa__x3 = (var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k14 * var_i_NaCa__k43 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k12 * var_i_NaCa__k23; // dimensionless
        const double var_i_NaCa__x4 = (var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k23 * var_i_NaCa__k34 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k14 * var_i_NaCa__k21; // dimensionless
        const double var_i_NaCa__i_NaCa = (var_i_NaCa__k21 * var_i_NaCa__x2 - var_i_NaCa__k12 * var_i_NaCa__x1) * var_i_NaCa__kNaCa * mParameters[9] / (var_i_NaCa__x1 + var_i_NaCa__x2 + var_i_NaCa__x3 + var_i_NaCa__x4); // picoA
        const double var_i_NaK__i_NaK = var_i_NaK__i_NaK_max * mParameters[9] / ((1.0 + pow((var_i_NaK__Km_Kp / mParameters[3]), 1.2)) * (1.0 + pow((var_i_NaK__Km_Nap / mParameters[1]), 1.3)) * (1.0 + exp(-4.0 + 0.033333333333333333 * var_electric_potentials__E_Na - 0.033333333333333333 * var_chaste_interface__Vm__Vm))); // picoA
        const double var_i_b_Na__i_b_Na = (-var_electric_potentials__E_Na + var_chaste_interface__Vm__Vm) * var_i_b_Na__g_b_Na * mParameters[9]; // picoA
        const double var_i_f__i_f_K = pow(var_chaste_interface__i_f_y_gate__y, 2) * (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * var_i_f__g_if * mParameters[6] * mParameters[9]; // picoA
        const double var_i_f__i_f_Na = pow(var_chaste_interface__i_f_y_gate__y, 2) * (-var_electric_potentials__E_Na + var_chaste_interface__Vm__Vm) * var_i_f__g_if * mParameters[7] * mParameters[9]; // picoA
        const double var_i_f__i_f = var_i_f__i_f_K + var_i_f__i_f_Na; // picoA
        const double var_i_f__i_f_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_f__i_f / var_model_parameters__Cm_converted; // uA_per_cm2
        const double var_chaste_interface__i_ionic = ((var_i_CaL__i_CaL_converted + var_i_Kr__i_Kr_converted + var_i_f__i_f_converted) * var_model_parameters__Cm_converted + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_AP_sensitive_currents__i_sus + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_AP_sensitive_currents__i_to + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_CaT__i_CaT + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_Ks__i_Ks + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_NaCa__i_NaCa + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_NaK__i_NaK + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_b_Ca__i_b_Ca + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_b_Na__i_b_Na + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_st__i_st) / var_model_parameters__Cm_converted; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellmaltsev_2009FromCellMLRushLarsen::EvaluateEquations(double var_chaste_interface__environment__time, std::vector<double> &rDY, std::vector<double> &rAlphaOrTau, std::vector<double> &rBetaOrInf)
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000150018670943
        double var_chaste_interface__i_CaL_dL_gate__dL = rY[2];
        // Units: dimensionless; Initial value: 0.000584545564405
        double var_chaste_interface__i_CaL_fL_gate__fL = rY[3];
        // Units: dimensionless; Initial value: 0.862381249774
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[4];
        // Units: dimensionless; Initial value: 0.711395919653
        double var_chaste_interface__i_CaT_dT_gate__dT = rY[5];
        // Units: dimensionless; Initial value: 0.00504393374639
        double var_chaste_interface__i_CaT_fT_gate__fT = rY[6];
        // Units: dimensionless; Initial value: 0.420757825415
        double var_chaste_interface__i_Kr_pa_gate__paS = rY[7];
        // Units: dimensionless; Initial value: 0.453100576739
        double var_chaste_interface__i_Kr_pa_gate__paF = rY[8];
        // Units: dimensionless; Initial value: 0.144755091176
        double var_chaste_interface__i_Kr_pi_gate__pi_ = rY[9];
        // Units: dimensionless; Initial value: 0.849409822329
        double var_chaste_interface__i_Ks_n_gate__n = rY[10];
        // Units: dimensionless; Initial value: 0.0264600410928
        double var_chaste_interface__AP_sensitive_currents_q_gate__q = rY[11];
        // Units: dimensionless; Initial value: 0.694241313965
        double var_chaste_interface__AP_sensitive_currents_r_gate__r = rY[12];
        // Units: dimensionless; Initial value: 0.00558131733359
        double var_chaste_interface__i_f_y_gate__y = rY[13];
        // Units: dimensionless; Initial value: 0.113643187247
        double var_chaste_interface__i_st_qa_gate__qa = rY[14];
        // Units: dimensionless; Initial value: 0.42380243163
        double var_chaste_interface__i_st_qi_gate__qi = rY[15];
        // Units: dimensionless; Initial value: 0.447294008304
        double var_chaste_interface__j_SRCarel__R = rY[16];
        // Units: dimensionless; Initial value: 0.688047760973
        double var_chaste_interface__j_SRCarel__O = rY[17];
        // Units: dimensionless; Initial value: 1.7340201253e-07
        double var_chaste_interface__j_SRCarel__I = rY[18];
        // Units: dimensionless; Initial value: 7.86181717518e-08
        double var_chaste_interface__j_SRCarel__RI = rY[19];
        // Units: dimensionless; Initial value: 0.311951987007
        double var_chaste_interface__calcium_buffering__fTMM = rY[20];
        // Units: dimensionless; Initial value: 0.501049376634
        double var_chaste_interface__calcium_buffering__fCMi = rY[21];
        // Units: dimensionless; Initial value: 0.0594880901438
        double var_chaste_interface__calcium_buffering__fCMs = rY[22];
        // Units: dimensionless; Initial value: 0.054381370046
        double var_chaste_interface__calcium_buffering__fTC = rY[23];
        // Units: dimensionless; Initial value: 0.0291316176172
        double var_chaste_interface__calcium_buffering__fTMC = rY[24];
        // Units: dimensionless; Initial value: 0.432694959597
        double var_chaste_interface__calcium_buffering__fCQ = rY[25];
        // Units: dimensionless; Initial value: 0.273207128393
        double var_chaste_interface__calcium_dynamics__Ca_nsr = rY[26];
        // Units: millimolar; Initial value: 1.49348117734
        double var_chaste_interface__calcium_dynamics__Ca_jsr = rY[27];
        // Units: millimolar; Initial value: 0.316762674605
        double var_chaste_interface__calcium_dynamics__Ca_sub = rY[28];
        // Units: millimolar; Initial value: 0.000138112560112

        // Mathematics
        double d_dt_chaste_interface_var_Vm__Vm;
        const double var_AP_sensitive_currents_q_gate__q_infinity = 1 / (1.0 + exp(3.7692307692307692 + 0.076923076923076927 * var_chaste_interface__Vm__Vm)); // dimensionless
        const double var_AP_sensitive_currents_q_gate__tau_q = 6.0599999999999996 + 39.101999999999997 / (0.065000000000000002 * exp(4.593 + 0.10000000000000001 * var_chaste_interface__Vm__Vm) + 0.56999999999999995 * exp(-3.52 - 0.080000000000000002 * var_chaste_interface__Vm__Vm)); // millisecond
        const double var_AP_sensitive_currents_r_gate__r_infinity = 1 / (1.0 + exp(1.2866666666666666 - 0.066666666666666666 * var_chaste_interface__Vm__Vm)); // dimensionless
        const double var_AP_sensitive_currents_r_gate__tau_r = 2.75352 + 14.40516 / (1.0369999999999999 * exp(2.7548999999999997 + 0.089999999999999997 * var_chaste_interface__Vm__Vm) + 0.36899999999999999 * exp(-2.8607999999999998 - 0.12 * var_chaste_interface__Vm__Vm)); // millisecond
        const double var_calcium_buffering__CM_tot = 0.044999999999999998; // millimolar
        const double var_calcium_buffering__CQ_tot = 10.0; // millimolar
        const double var_calcium_buffering__TC_tot = 0.031; // millimolar
        const double var_calcium_buffering__TMC_tot = 0.062; // millimolar
        const double var_calcium_buffering__kb_CM = 0.54200000000000004; // per_millisecond
        const double var_calcium_buffering__kb_CQ = 0.44500000000000001; // per_millisecond
        const double var_calcium_buffering__kb_TC = 0.44600000000000001; // per_millisecond
        const double var_calcium_buffering__kb_TMC = 0.0075100000000000002; // per_millisecond
        const double var_calcium_buffering__kb_TMM = 0.751; // per_millisecond
        const double var_calcium_buffering__kf_CM = 227.69999999999999; // per_millimolar_millisecond
        const double var_calcium_buffering__kf_CQ = 0.53400000000000003; // per_millimolar_millisecond
        const double var_calcium_buffering__kf_TC = 88.799999999999997; // per_millimolar_millisecond
        const double var_calcium_buffering__kf_TMC = 227.69999999999999; // per_millimolar_millisecond
        const double var_calcium_buffering__kf_TMM = 2.2770000000000001; // per_millimolar_millisecond
        const double var_calcium_buffering__delta_fCQ = -var_chaste_interface__calcium_buffering__fCQ * var_calcium_buffering__kb_CQ + (1.0 - var_chaste_interface__calcium_buffering__fCQ) * var_calcium_buffering__kf_CQ * var_chaste_interface__calcium_dynamics__Ca_jsr; // per_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__fCQ = var_calcium_buffering__delta_fCQ; // 1 / millisecond
        const double var_calcium_buffering__delta_fCMs = -var_chaste_interface__calcium_buffering__fCMs * var_calcium_buffering__kb_CM + (1.0 - var_chaste_interface__calcium_buffering__fCMs) * var_calcium_buffering__kf_CM * var_chaste_interface__calcium_dynamics__Ca_sub; // per_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__fCMs = var_calcium_buffering__delta_fCMs; // 1 / millisecond
        const double var_calcium_buffering__delta_fCMi = -var_chaste_interface__calcium_buffering__fCMi * var_calcium_buffering__kb_CM + (1.0 - var_chaste_interface__calcium_buffering__fCMi) * var_calcium_buffering__kf_CM * var_chaste_interface__calcium_dynamics__Cai; // per_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__fCMi = var_calcium_buffering__delta_fCMi; // 1 / millisecond
        const double var_calcium_buffering__delta_fTC = -var_chaste_interface__calcium_buffering__fTC * var_calcium_buffering__kb_TC + (1.0 - var_chaste_interface__calcium_buffering__fTC) * var_calcium_buffering__kf_TC * var_chaste_interface__calcium_dynamics__Cai; // per_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__fTC = var_calcium_buffering__delta_fTC; // 1 / millisecond
        const double var_calcium_buffering__delta_fTMC = -var_chaste_interface__calcium_buffering__fTMC * var_calcium_buffering__kb_TMC + (1.0 - var_chaste_interface__calcium_buffering__fTMC - var_chaste_interface__calcium_buffering__fTMM) * var_calcium_buffering__kf_TMC * var_chaste_interface__calcium_dynamics__Cai; // per_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__fTMC = var_calcium_buffering__delta_fTMC; // 1 / millisecond
        const double var_i_CaL__E_CaL = 45.0; // millivolt
        const double var_i_CaL_dL_gate__alpha_dL = ((fabs(35.0 + var_chaste_interface__Vm__Vm) < 2.5000000000718892e-7) ? (-7.0975000009920736e-9 / (-1.0 + exp(-1.000000000139778e-7)) - 1999999.9999424887 * (34.999999750000001 + var_chaste_interface__Vm__Vm) * (7.0975000009920736e-9 / (-1.0 + exp(-1.000000000139778e-7)) + 7.0974999994161126e-9 / (-1.0 + exp(9.9999999991773334e-8)))) : (-0.028389999999999999 * (35.0 + var_chaste_interface__Vm__Vm) / (-1.0 + exp(-14.0 - 0.40000000000000002 * var_chaste_interface__Vm__Vm)))) + ((fabs(var_chaste_interface__Vm__Vm) < 4.7999999999999996e-7) ? (-4.0752e-8 / (-1.0 + exp(-9.9999999999999995e-8)) - 1041666.6666666667 * (-4.7999999999999996e-7 + var_chaste_interface__Vm__Vm) * (4.0752e-8 / (-1.0 + exp(9.9999999999999995e-8)) + 4.0752e-8 / (-1.0 + exp(-9.9999999999999995e-8)))) : (-0.084900000000000003 * var_chaste_interface__Vm__Vm / (-1.0 + exp(-0.20833333333333334 * var_chaste_interface__Vm__Vm)))); // per_millisecond
        const double var_i_CaL_dL_gate__beta_dL = ((fabs(-5.0 + var_chaste_interface__Vm__Vm) < 2.5000000000025002e-7) ? (-2.8575000000028576e-9 / (-1.0 + exp(-1.0000000000010001e-7)) + 1999999.9999979998 * (-4.9999997499999997 + var_chaste_interface__Vm__Vm) * (2.8575000000028576e-9 / (-1.0 + exp(1.0000000000010001e-7)) + 2.8575000000028576e-9 / (-1.0 + exp(-1.0000000000010001e-7)))) : (0.011429999999999999 * (-5.0 + var_chaste_interface__Vm__Vm) / (-1.0 + exp(-2.0 + 0.40000000000000002 * var_chaste_interface__Vm__Vm)))); // per_millisecond
        const double var_i_CaL_dL_gate__dL_infinity = 1 / (1.0 + exp(-2.25 - 0.16666666666666666 * var_chaste_interface__Vm__Vm)); // dimensionless
        const double var_i_CaL_dL_gate__tau_dL = 1 / (var_i_CaL_dL_gate__alpha_dL + var_i_CaL_dL_gate__beta_dL); // millisecond
        const double var_i_CaL_fCa_gate__Km_fCa = 0.00035; // millimolar
        const double var_i_CaL_fCa_gate__alpha_fCa = 0.021000000000000001; // per_millisecond
        const double var_i_CaL_fCa_gate__fCa_infinity = var_i_CaL_fCa_gate__Km_fCa / (var_chaste_interface__calcium_dynamics__Ca_sub + var_i_CaL_fCa_gate__Km_fCa); // dimensionless
        const double var_i_CaL_fCa_gate__tau_fCa = var_i_CaL_fCa_gate__fCa_infinity / var_i_CaL_fCa_gate__alpha_fCa; // millisecond
        const double d_dt_chaste_interface_var_i_CaL_fCa_gate__fCa = (-var_chaste_interface__i_CaL_fCa_gate__fCa + var_i_CaL_fCa_gate__fCa_infinity) / var_i_CaL_fCa_gate__tau_fCa; // 1 / millisecond
        const double var_i_CaL_fL_gate__fL_infinity = 1 / (1.0 + exp(4.794520547945206 + 0.13698630136986301 * var_chaste_interface__Vm__Vm)); // dimensionless
        const double var_i_CaL_fL_gate__tau_fL = 44.299999999999997 + 257.10000000000002 * exp(-5.4668495419491743 * pow((1 + 0.030769230769230771 * var_chaste_interface__Vm__Vm), 2)); // millisecond
        const double var_i_CaT__E_CaT = 45.0; // millivolt
        const double var_i_CaT__g_CaT = 0.1832; // nanoS_per_picoF
        const double var_i_CaT_dT_gate__dT_infinity = 1 / (1.0 + exp(-4.3833333333333337 - 0.16666666666666666 * var_chaste_interface__Vm__Vm)); // dimensionless
        const double var_i_CaT_dT_gate__tau_dT = 1 / (1.0680000000000001 * exp(0.87666666666666671 + 0.033333333333333333 * var_chaste_interface__Vm__Vm) + 1.0680000000000001 * exp(-0.87666666666666671 - 0.033333333333333333 * var_chaste_interface__Vm__Vm)); // millisecond
        const double var_i_CaT_fT_gate__fT_infinity = 1 / (1.0 + exp(11.017857142857144 + 0.17857142857142858 * var_chaste_interface__Vm__Vm)); // dimensionless
        const double var_i_CaT_fT_gate__tau_fT = 1 / (0.014999999999999999 * exp(4.0117035110533159 + 0.065019505851755519 * var_chaste_interface__Vm__Vm) + 0.015299999999999999 * exp(-0.74069627851140463 - 0.012004801920768308 * var_chaste_interface__Vm__Vm)); // millisecond
        const double var_i_Kr_pa_gate__pa_infinity = 1 / (1.0 + exp(-2.1886792452830188 - 0.094339622641509441 * var_chaste_interface__Vm__Vm)); // dimensionless
        const double var_i_Kr_pa_gate__tau_paF = 0.84655354000000005 / (0.037199999999999997 * exp(0.062893081761006289 * var_chaste_interface__Vm__Vm) + 0.00096000000000000002 * exp(-0.044444444444444446 * var_chaste_interface__Vm__Vm)); // millisecond
        const double var_i_Kr_pa_gate__tau_paS = 0.84655354000000005 / (0.0041999999999999997 * exp(0.058823529411764705 * var_chaste_interface__Vm__Vm) + 0.00014999999999999999 * exp(-0.046296296296296294 * var_chaste_interface__Vm__Vm)); // millisecond
        const double var_i_Kr_pi_gate__pi_infinity = 1 / (1.0 + exp(1.672514619883041 + 0.058479532163742687 * var_chaste_interface__Vm__Vm)); // dimensionless
        const double var_i_Kr_pi_gate__tau_pi = 1 / (0.10000000000000001 * exp(-0.018299935950224173 * var_chaste_interface__Vm__Vm) + 0.65600000000000003 * exp(0.009420009985210585 * var_chaste_interface__Vm__Vm)); // millisecond
        const double var_i_Ks_n_gate__alpha_n = 0.014 / (1.0 + exp(4.4444444444444446 - 0.1111111111111111 * var_chaste_interface__Vm__Vm)); // per_millisecond
        const double var_i_Ks_n_gate__beta_n = 0.001 * exp(-0.022222222222222223 * var_chaste_interface__Vm__Vm); // per_millisecond
        const double var_i_Ks_n_gate__n_infinity = var_i_Ks_n_gate__alpha_n / (var_i_Ks_n_gate__alpha_n + var_i_Ks_n_gate__beta_n); // dimensionless
        const double var_i_Ks_n_gate__tau_n = 1 / (var_i_Ks_n_gate__alpha_n + var_i_Ks_n_gate__beta_n); // millisecond
        const double var_i_NaCa__K1ni = 395.30000000000001; // millimolar
        const double var_i_NaCa__K1no = 1628.0; // millimolar
        const double var_i_NaCa__K2ni = 2.2890000000000001; // millimolar
        const double var_i_NaCa__K2no = 561.39999999999998; // millimolar
        const double var_i_NaCa__K3ni = 26.440000000000001; // millimolar
        const double var_i_NaCa__K3no = 4.6630000000000003; // millimolar
        const double var_i_NaCa__Kci = 0.0207; // millimolar
        const double var_i_NaCa__Kcni = 26.440000000000001; // millimolar
        const double var_i_NaCa__Kco = 3.6629999999999998; // millimolar
        const double var_i_NaCa__Qci = 0.13689999999999999; // dimensionless
        const double var_i_NaCa__Qco = 0; // dimensionless
        const double var_i_NaCa__Qn = 0.43149999999999999; // dimensionless
        const double var_i_NaCa__kNaCa = 187.5; // picoA_per_picoF
        const double var_i_b_Ca__g_b_Ca = 0.00059999999999999995; // nanoS_per_picoF
        const double var_i_f_y_gate__VIf_half = -64.0; // millivolt
        const double var_i_f_y_gate__tau_y = 0.71665290000000004 / (exp(-8.5404617897664554 - 0.022074080614542406 * var_chaste_interface__Vm__Vm) + exp(-3.8001143986272159 + 0.051999376007487906 * var_chaste_interface__Vm__Vm)); // millisecond
        const double var_i_f_y_gate__y_infinity = 1 / (1.0 + exp(0.07407407407407407 * var_chaste_interface__Vm__Vm - 0.07407407407407407 * var_i_f_y_gate__VIf_half)); // dimensionless
        const double var_i_st_qa_gate__alpha_qa = 1 / (0.20000000000000001 * exp(-0.0014285714285714286 * var_chaste_interface__Vm__Vm) + 0.14999999999999999 * exp(-0.090909090909090912 * var_chaste_interface__Vm__Vm)); // per_millisecond
        const double var_i_st_qa_gate__beta_qa = 1 / (16.0 * exp(0.125 * var_chaste_interface__Vm__Vm) + 15.0 * exp(0.02 * var_chaste_interface__Vm__Vm)); // per_millisecond
        const double var_i_st_qa_gate__qa_infinity = 1 / (1.0 + exp(-11.4 - 0.20000000000000001 * var_chaste_interface__Vm__Vm)); // dimensionless
        const double var_i_st_qa_gate__tau_qa = 1 / (var_i_st_qa_gate__alpha_qa + var_i_st_qa_gate__beta_qa); // millisecond
        const double var_i_st_qi_gate__alpha_qi = 1 / (700.0 * exp(0.014285714285714285 * var_chaste_interface__Vm__Vm) + 3100.0 * exp(0.076923076923076927 * var_chaste_interface__Vm__Vm)); // per_millisecond
        const double var_i_st_qi_gate__beta_qi = 1 / (50.0 * exp(-0.0014285714285714286 * var_chaste_interface__Vm__Vm) + 95.0 * exp(-0.10000000000000001 * var_chaste_interface__Vm__Vm)) + 0.00022900000000000001 / (1.0 + exp(-0.20000000000000001 * var_chaste_interface__Vm__Vm)); // per_millisecond
        const double var_i_st_qi_gate__qi_infinity = var_i_st_qi_gate__alpha_qi / (var_i_st_qi_gate__alpha_qi + var_i_st_qi_gate__beta_qi); // dimensionless
        const double var_i_st_qi_gate__tau_qi = 6.6500000000000004 / (var_i_st_qi_gate__alpha_qi + var_i_st_qi_gate__beta_qi); // millisecond
        const double var_intracellular_calcium_fluxes__K_up = 0.00059999999999999995; // millimolar
        const double var_intracellular_calcium_fluxes__P_up = 0.012; // millimolar_per_millisecond
        const double var_intracellular_calcium_fluxes__j_up = var_intracellular_calcium_fluxes__P_up / (1.0 + var_intracellular_calcium_fluxes__K_up / var_chaste_interface__calcium_dynamics__Cai); // millimolar_per_millisecond
        const double var_intracellular_calcium_fluxes__tau_dif_Ca = 0.040000000000000001; // millisecond
        const double var_intracellular_calcium_fluxes__j_Ca_dif = (-var_chaste_interface__calcium_dynamics__Cai + var_chaste_interface__calcium_dynamics__Ca_sub) / var_intracellular_calcium_fluxes__tau_dif_Ca; // millimolar_per_millisecond
        const double var_intracellular_calcium_fluxes__tau_tr = 40.0; // millisecond
        const double var_intracellular_calcium_fluxes__j_tr = (-var_chaste_interface__calcium_dynamics__Ca_jsr + var_chaste_interface__calcium_dynamics__Ca_nsr) / var_intracellular_calcium_fluxes__tau_tr; // millimolar_per_millisecond
        const double var_j_SRCarel__EC50_SR = 0.45000000000000001; // millimolar
        const double var_j_SRCarel__HSR = 2.5; // dimensionless
        const double var_j_SRCarel__MaxSR = 15.0; // dimensionless
        const double var_j_SRCarel__MinSR = 1.0; // dimensionless
        const double var_j_SRCarel__kCaSR = -(-var_j_SRCarel__MinSR + var_j_SRCarel__MaxSR) / (1.0 + pow((var_j_SRCarel__EC50_SR / var_chaste_interface__calcium_dynamics__Ca_jsr), var_j_SRCarel__HSR)) + var_j_SRCarel__MaxSR; // dimensionless
        const double var_j_SRCarel__kiCa = 0.5; // per_millimolar_millisecond
        const double var_j_SRCarel__kiSRCa = var_j_SRCarel__kCaSR * var_j_SRCarel__kiCa; // per_millimolar_millisecond
        const double var_j_SRCarel__kim = 0.0050000000000000001; // per_millisecond
        const double var_j_SRCarel__koCa = 10.0; // per_millimolar2_millisecond
        const double var_j_SRCarel__koSRCa = var_j_SRCarel__koCa / var_j_SRCarel__kCaSR; // per_millimolar2_millisecond
        const double var_j_SRCarel__kom = 0.059999999999999998; // per_millisecond
        const double d_dt_chaste_interface_var_j_SRCarel__I = -var_chaste_interface__j_SRCarel__I * var_j_SRCarel__kim - var_chaste_interface__j_SRCarel__I * var_j_SRCarel__kom + pow(var_chaste_interface__calcium_dynamics__Ca_sub, 2) * var_chaste_interface__j_SRCarel__RI * var_j_SRCarel__koSRCa + var_chaste_interface__calcium_dynamics__Ca_sub * var_chaste_interface__j_SRCarel__O * var_j_SRCarel__kiSRCa; // 1 / millisecond
        const double d_dt_chaste_interface_var_j_SRCarel__O = var_chaste_interface__j_SRCarel__I * var_j_SRCarel__kim - var_chaste_interface__j_SRCarel__O * var_j_SRCarel__kom + pow(var_chaste_interface__calcium_dynamics__Ca_sub, 2) * var_chaste_interface__j_SRCarel__R * var_j_SRCarel__koSRCa - var_chaste_interface__calcium_dynamics__Ca_sub * var_chaste_interface__j_SRCarel__O * var_j_SRCarel__kiSRCa; // 1 / millisecond
        const double d_dt_chaste_interface_var_j_SRCarel__R = var_chaste_interface__j_SRCarel__O * var_j_SRCarel__kom + var_chaste_interface__j_SRCarel__RI * var_j_SRCarel__kim - pow(var_chaste_interface__calcium_dynamics__Ca_sub, 2) * var_chaste_interface__j_SRCarel__R * var_j_SRCarel__koSRCa - var_chaste_interface__calcium_dynamics__Ca_sub * var_chaste_interface__j_SRCarel__R * var_j_SRCarel__kiSRCa; // 1 / millisecond
        const double d_dt_chaste_interface_var_j_SRCarel__RI = var_chaste_interface__j_SRCarel__I * var_j_SRCarel__kom - var_chaste_interface__j_SRCarel__RI * var_j_SRCarel__kim + var_chaste_interface__calcium_dynamics__Ca_sub * var_chaste_interface__j_SRCarel__R * var_j_SRCarel__kiSRCa - pow(var_chaste_interface__calcium_dynamics__Ca_sub, 2) * var_chaste_interface__j_SRCarel__RI * var_j_SRCarel__koSRCa; // 1 / millisecond
        const double var_j_SRCarel__ks = 250000.0; // per_millisecond
        const double var_j_SRCarel__j_SRCarel = (-var_chaste_interface__calcium_dynamics__Ca_sub + var_chaste_interface__calcium_dynamics__Ca_jsr) * var_chaste_interface__j_SRCarel__O * var_j_SRCarel__ks; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_jsr = -var_j_SRCarel__j_SRCarel - var_calcium_buffering__CQ_tot * var_calcium_buffering__delta_fCQ + var_intracellular_calcium_fluxes__j_tr; // millimolar / millisecond
        const double var_i_CaL__i_CaL = (-var_i_CaL__E_CaL + var_chaste_interface__Vm__Vm) * mParameters[5] * var_chaste_interface__i_CaL_dL_gate__dL * var_chaste_interface__i_CaL_fCa_gate__fCa * var_chaste_interface__i_CaL_fL_gate__fL * mParameters[9]; // picoA
        const double var_i_CaT__i_CaT = (-var_i_CaT__E_CaT + var_chaste_interface__Vm__Vm) * var_i_CaT__g_CaT * var_chaste_interface__i_CaT_dT_gate__dT * var_chaste_interface__i_CaT_fT_gate__fT * mParameters[9]; // picoA
        const double var_i_b_Ca__i_b_Ca = (-var_i_CaL__E_CaL + var_chaste_interface__Vm__Vm) * var_i_b_Ca__g_b_Ca * mParameters[9]; // picoA
        const double var_model_parameters__F = 96485.0; // coulomb_per_mole
        const double var_model_parameters__L_cell = 70.0; // micrometre
        const double var_model_parameters__L_sub = 0.02; // micrometre
        const double var_model_parameters__Mgi = 2.5; // millimolar
        const double var_calcium_buffering__delta_fTMM = -var_chaste_interface__calcium_buffering__fTMM * var_calcium_buffering__kb_TMM + (1.0 - var_chaste_interface__calcium_buffering__fTMC - var_chaste_interface__calcium_buffering__fTMM) * var_calcium_buffering__kf_TMM * var_model_parameters__Mgi; // per_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__fTMM = var_calcium_buffering__delta_fTMM; // 1 / millisecond
        const double var_i_NaCa__k43 = mParameters[1] / (var_i_NaCa__K3ni + mParameters[1]); // dimensionless
        const double var_i_NaCa__k34 = mParameters[4] / (var_i_NaCa__K3no + mParameters[4]); // dimensionless
        const double var_model_parameters__R = 8314.3999999999996; // joule_per_kilomole_kelvin
        const double var_model_parameters__R_cell = 4.0; // micrometre
        const double var_model_parameters__T = 310.14999999999998; // kelvin
        const double var_i_NaCa__RTOnF = var_model_parameters__R * var_model_parameters__T / var_model_parameters__F; // millivolt
        const double var_i_NaCa__di = 1.0 + (1.0 + (1.0 + mParameters[1] / var_i_NaCa__K3ni) * mParameters[1] / var_i_NaCa__K2ni) * mParameters[1] / var_i_NaCa__K1ni + (1.0 + mParameters[1] / var_i_NaCa__Kcni + exp(-var_chaste_interface__Vm__Vm * var_i_NaCa__Qci / var_i_NaCa__RTOnF)) * var_chaste_interface__calcium_dynamics__Ca_sub / var_i_NaCa__Kci; // dimensionless
        const double var_i_NaCa__do = 1.0 + (1.0 + (1.0 + mParameters[4] / var_i_NaCa__K3no) * mParameters[4] / var_i_NaCa__K2no) * mParameters[4] / var_i_NaCa__K1no + (1.0 + exp(var_chaste_interface__Vm__Vm * var_i_NaCa__Qco / var_i_NaCa__RTOnF)) * mParameters[2] / var_i_NaCa__Kco; // dimensionless
        const double var_i_NaCa__k12 = var_chaste_interface__calcium_dynamics__Ca_sub * exp(-var_chaste_interface__Vm__Vm * var_i_NaCa__Qci / var_i_NaCa__RTOnF) / (var_i_NaCa__Kci * var_i_NaCa__di); // dimensionless
        const double var_i_NaCa__k14 = pow(mParameters[1], 2) * (1.0 + mParameters[1] / var_i_NaCa__K3ni) * exp(0.5 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qn / var_i_NaCa__RTOnF) / (var_i_NaCa__K1ni * var_i_NaCa__K2ni * var_i_NaCa__di); // dimensionless
        const double var_i_NaCa__k21 = mParameters[2] * exp(var_chaste_interface__Vm__Vm * var_i_NaCa__Qco / var_i_NaCa__RTOnF) / (var_i_NaCa__Kco * var_i_NaCa__do); // dimensionless
        const double var_i_NaCa__k23 = pow(mParameters[4], 2) * (1.0 + mParameters[4] / var_i_NaCa__K3no) * exp(-0.5 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qn / var_i_NaCa__RTOnF) / (var_i_NaCa__K1no * var_i_NaCa__K2no * var_i_NaCa__do); // dimensionless
        const double var_i_NaCa__k32 = exp(0.5 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qn / var_i_NaCa__RTOnF); // dimensionless
        const double var_i_NaCa__k41 = exp(-0.5 * var_chaste_interface__Vm__Vm * var_i_NaCa__Qn / var_i_NaCa__RTOnF); // dimensionless
        const double var_i_NaCa__x1 = (var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k34 * var_i_NaCa__k41 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k21 * var_i_NaCa__k32; // dimensionless
        const double var_i_NaCa__x2 = (var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k32 * var_i_NaCa__k43 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k12 * var_i_NaCa__k41; // dimensionless
        const double var_i_NaCa__x3 = (var_i_NaCa__k21 + var_i_NaCa__k23) * var_i_NaCa__k14 * var_i_NaCa__k43 + (var_i_NaCa__k41 + var_i_NaCa__k43) * var_i_NaCa__k12 * var_i_NaCa__k23; // dimensionless
        const double var_i_NaCa__x4 = (var_i_NaCa__k12 + var_i_NaCa__k14) * var_i_NaCa__k23 * var_i_NaCa__k34 + (var_i_NaCa__k32 + var_i_NaCa__k34) * var_i_NaCa__k14 * var_i_NaCa__k21; // dimensionless
        const double var_i_NaCa__i_NaCa = (var_i_NaCa__k21 * var_i_NaCa__x2 - var_i_NaCa__k12 * var_i_NaCa__x1) * var_i_NaCa__kNaCa * mParameters[9] / (var_i_NaCa__x1 + var_i_NaCa__x2 + var_i_NaCa__x3 + var_i_NaCa__x4); // picoA
        const double var_model_parameters__V_cell = 0.001 * M_PI * pow(var_model_parameters__R_cell, 2) * var_model_parameters__L_cell; // picolitre
        const double var_model_parameters__V_i_part = 0.46000000000000002; // dimensionless
        const double var_model_parameters__V_jsr_part = 0.0011999999999999999; // dimensionless
        const double var_model_parameters__V_jsr = var_model_parameters__V_cell * var_model_parameters__V_jsr_part; // picolitre
        const double var_model_parameters__V_nsr_part = 0.011599999999999999; // dimensionless
        const double var_model_parameters__V_nsr = var_model_parameters__V_cell * var_model_parameters__V_nsr_part; // picolitre
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_nsr = -var_intracellular_calcium_fluxes__j_tr * var_model_parameters__V_jsr / var_model_parameters__V_nsr + var_intracellular_calcium_fluxes__j_up; // millimolar / millisecond
        const double var_model_parameters__V_sub = 0.002 * M_PI * (-0.5 * var_model_parameters__L_sub + var_model_parameters__R_cell) * var_model_parameters__L_cell * var_model_parameters__L_sub; // picolitre
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_sub = -var_intracellular_calcium_fluxes__j_Ca_dif - var_calcium_buffering__CM_tot * var_calcium_buffering__delta_fCMs + var_j_SRCarel__j_SRCarel * var_model_parameters__V_jsr / var_model_parameters__V_sub - 0.5 * (-2.0 * var_i_NaCa__i_NaCa + var_i_CaL__i_CaL + var_i_CaT__i_CaT + var_i_b_Ca__i_b_Ca) / (var_model_parameters__F * var_model_parameters__V_sub); // millimolar / millisecond
        const double var_model_parameters__V_i = -var_model_parameters__V_sub + var_model_parameters__V_cell * var_model_parameters__V_i_part; // picolitre
        const double d_dt_chaste_interface_var_calcium_dynamics__Cai = (var_intracellular_calcium_fluxes__j_Ca_dif * var_model_parameters__V_sub - var_intracellular_calcium_fluxes__j_up * var_model_parameters__V_nsr) / var_model_parameters__V_i - var_calcium_buffering__CM_tot * var_calcium_buffering__delta_fCMi - var_calcium_buffering__TC_tot * var_calcium_buffering__delta_fTC - var_calcium_buffering__TMC_tot * var_calcium_buffering__delta_fTMC; // millimolar / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_Vm__Vm = 0.0;
        }
        else
        {
            const double var_AP_sensitive_currents__g_sus = 0.02; // nanoS_per_picoF
            const double var_AP_sensitive_currents__g_to = 0.252; // nanoS_per_picoF
            const double var_i_Ks__g_Ks = 0.025899999999999999; // nanoS_per_picoF
            const double var_i_NaK__Km_Kp = 1.3999999999999999; // millimolar
            const double var_i_NaK__Km_Nap = 14.0; // millimolar
            const double var_i_NaK__i_NaK_max = 2.8799999999999999; // picoA_per_picoF
            const double var_i_b_Na__g_b_Na = 0.0048599999999999997; // nanoS_per_picoF
            const double var_i_f__g_if = 0.14999999999999999; // nanoS_per_picoF
            const double var_i_st__E_st = 37.399999999999999; // millivolt
            const double var_i_st__g_st = 0.0030000000000000001; // nanoS_per_picoF
            const double var_i_st__i_st = (-var_i_st__E_st + var_chaste_interface__Vm__Vm) * var_i_st__g_st * var_chaste_interface__i_st_qa_gate__qa * var_chaste_interface__i_st_qi_gate__qi * mParameters[9]; // picoA
            const double var_electric_potentials__E_K = var_model_parameters__R * var_model_parameters__T * log(mParameters[3] / mParameters[0]) / var_model_parameters__F; // millivolt
            const double var_AP_sensitive_currents__i_sus = (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * var_AP_sensitive_currents__g_sus * var_chaste_interface__AP_sensitive_currents_r_gate__r * mParameters[9]; // picoA
            const double var_AP_sensitive_currents__i_to = (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * var_AP_sensitive_currents__g_to * var_chaste_interface__AP_sensitive_currents_q_gate__q * var_chaste_interface__AP_sensitive_currents_r_gate__r * mParameters[9]; // picoA
            const double var_electric_potentials__E_Ks = var_model_parameters__R * var_model_parameters__T * log((mParameters[3] + 0.12 * mParameters[4]) / (mParameters[0] + 0.12 * mParameters[1])) / var_model_parameters__F; // millivolt
            const double var_electric_potentials__E_Na = var_model_parameters__R * var_model_parameters__T * log(mParameters[4] / mParameters[1]) / var_model_parameters__F; // millivolt
            const double var_i_Kr__i_Kr = (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * (0.40000000000000002 * var_chaste_interface__i_Kr_pa_gate__paS + 0.59999999999999998 * var_chaste_interface__i_Kr_pa_gate__paF) * mParameters[8] * var_chaste_interface__i_Kr_pi_gate__pi_ * mParameters[9]; // picoA
            const double var_i_Ks__i_Ks = pow(var_chaste_interface__i_Ks_n_gate__n, 2) * (-var_electric_potentials__E_Ks + var_chaste_interface__Vm__Vm) * var_i_Ks__g_Ks * mParameters[9]; // picoA
            const double var_i_NaK__i_NaK = var_i_NaK__i_NaK_max * mParameters[9] / ((1.0 + pow((var_i_NaK__Km_Kp / mParameters[3]), 1.2)) * (1.0 + pow((var_i_NaK__Km_Nap / mParameters[1]), 1.3)) * (1.0 + exp(-4.0 + 0.033333333333333333 * var_electric_potentials__E_Na - 0.033333333333333333 * var_chaste_interface__Vm__Vm))); // picoA
            const double var_i_b_Na__i_b_Na = (-var_electric_potentials__E_Na + var_chaste_interface__Vm__Vm) * var_i_b_Na__g_b_Na * mParameters[9]; // picoA
            const double var_i_f__i_f_K = pow(var_chaste_interface__i_f_y_gate__y, 2) * (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * var_i_f__g_if * mParameters[6] * mParameters[9]; // picoA
            const double var_i_f__i_f_Na = pow(var_chaste_interface__i_f_y_gate__y, 2) * (-var_electric_potentials__E_Na + var_chaste_interface__Vm__Vm) * var_i_f__g_if * mParameters[7] * mParameters[9]; // picoA
            const double var_i_f__i_f = var_i_f__i_f_K + var_i_f__i_f_Na; // picoA
            d_dt_chaste_interface_var_Vm__Vm = (-var_AP_sensitive_currents__i_sus - var_AP_sensitive_currents__i_to - var_i_CaL__i_CaL - var_i_CaT__i_CaT - var_i_Kr__i_Kr - var_i_Ks__i_Ks - var_i_NaCa__i_NaCa - var_i_NaK__i_NaK - var_i_b_Ca__i_b_Ca - var_i_b_Na__i_b_Na - var_i_f__i_f - var_i_st__i_st) / mParameters[9]; // millivolt / millisecond
        }
        
        rDY[0] = d_dt_chaste_interface_var_Vm__Vm;
        rDY[1] = d_dt_chaste_interface_var_calcium_dynamics__Cai;
        rAlphaOrTau[2] = var_i_CaL_dL_gate__tau_dL;
        rBetaOrInf[2] = var_i_CaL_dL_gate__dL_infinity;
        rAlphaOrTau[3] = var_i_CaL_fL_gate__tau_fL;
        rBetaOrInf[3] = var_i_CaL_fL_gate__fL_infinity;
        rDY[4] = d_dt_chaste_interface_var_i_CaL_fCa_gate__fCa;
        rAlphaOrTau[5] = var_i_CaT_dT_gate__tau_dT;
        rBetaOrInf[5] = var_i_CaT_dT_gate__dT_infinity;
        rAlphaOrTau[6] = var_i_CaT_fT_gate__tau_fT;
        rBetaOrInf[6] = var_i_CaT_fT_gate__fT_infinity;
        rAlphaOrTau[7] = var_i_Kr_pa_gate__tau_paS;
        rBetaOrInf[7] = var_i_Kr_pa_gate__pa_infinity;
        rAlphaOrTau[8] = var_i_Kr_pa_gate__tau_paF;
        rBetaOrInf[8] = var_i_Kr_pa_gate__pa_infinity;
        rAlphaOrTau[9] = var_i_Kr_pi_gate__tau_pi;
        rBetaOrInf[9] = var_i_Kr_pi_gate__pi_infinity;
        rAlphaOrTau[10] = var_i_Ks_n_gate__tau_n;
        rBetaOrInf[10] = var_i_Ks_n_gate__n_infinity;
        rAlphaOrTau[11] = var_AP_sensitive_currents_q_gate__tau_q;
        rBetaOrInf[11] = var_AP_sensitive_currents_q_gate__q_infinity;
        rAlphaOrTau[12] = var_AP_sensitive_currents_r_gate__tau_r;
        rBetaOrInf[12] = var_AP_sensitive_currents_r_gate__r_infinity;
        rAlphaOrTau[13] = var_i_f_y_gate__tau_y;
        rBetaOrInf[13] = var_i_f_y_gate__y_infinity;
        rAlphaOrTau[14] = var_i_st_qa_gate__tau_qa;
        rBetaOrInf[14] = var_i_st_qa_gate__qa_infinity;
        rAlphaOrTau[15] = var_i_st_qi_gate__tau_qi;
        rBetaOrInf[15] = var_i_st_qi_gate__qi_infinity;
        rDY[16] = d_dt_chaste_interface_var_j_SRCarel__R;
        rDY[17] = d_dt_chaste_interface_var_j_SRCarel__O;
        rDY[18] = d_dt_chaste_interface_var_j_SRCarel__I;
        rDY[19] = d_dt_chaste_interface_var_j_SRCarel__RI;
        rDY[20] = d_dt_chaste_interface_var_calcium_buffering__fTMM;
        rDY[21] = d_dt_chaste_interface_var_calcium_buffering__fCMi;
        rDY[22] = d_dt_chaste_interface_var_calcium_buffering__fCMs;
        rDY[23] = d_dt_chaste_interface_var_calcium_buffering__fTC;
        rDY[24] = d_dt_chaste_interface_var_calcium_buffering__fTMC;
        rDY[25] = d_dt_chaste_interface_var_calcium_buffering__fCQ;
        rDY[26] = d_dt_chaste_interface_var_calcium_dynamics__Ca_nsr;
        rDY[27] = d_dt_chaste_interface_var_calcium_dynamics__Ca_jsr;
        rDY[28] = d_dt_chaste_interface_var_calcium_dynamics__Ca_sub;
    }
    void Cellmaltsev_2009FromCellMLRushLarsen::ComputeOneStepExceptVoltage(const std::vector<double> &rDY, const std::vector<double> &rAlphaOrTau, const std::vector<double> &rBetaOrInf)
    {
        std::vector<double>& rY = rGetStateVariables();
        
        rY[1] += mDt * rDY[1];
        rY[2] = rBetaOrInf[2] + (rY[2] - rBetaOrInf[2])*exp(-mDt/rAlphaOrTau[2]);
        rY[3] = rBetaOrInf[3] + (rY[3] - rBetaOrInf[3])*exp(-mDt/rAlphaOrTau[3]);
        rY[4] += mDt * rDY[4];
        rY[5] = rBetaOrInf[5] + (rY[5] - rBetaOrInf[5])*exp(-mDt/rAlphaOrTau[5]);
        rY[6] = rBetaOrInf[6] + (rY[6] - rBetaOrInf[6])*exp(-mDt/rAlphaOrTau[6]);
        rY[7] = rBetaOrInf[7] + (rY[7] - rBetaOrInf[7])*exp(-mDt/rAlphaOrTau[7]);
        rY[8] = rBetaOrInf[8] + (rY[8] - rBetaOrInf[8])*exp(-mDt/rAlphaOrTau[8]);
        rY[9] = rBetaOrInf[9] + (rY[9] - rBetaOrInf[9])*exp(-mDt/rAlphaOrTau[9]);
        rY[10] = rBetaOrInf[10] + (rY[10] - rBetaOrInf[10])*exp(-mDt/rAlphaOrTau[10]);
        rY[11] = rBetaOrInf[11] + (rY[11] - rBetaOrInf[11])*exp(-mDt/rAlphaOrTau[11]);
        rY[12] = rBetaOrInf[12] + (rY[12] - rBetaOrInf[12])*exp(-mDt/rAlphaOrTau[12]);
        rY[13] = rBetaOrInf[13] + (rY[13] - rBetaOrInf[13])*exp(-mDt/rAlphaOrTau[13]);
        rY[14] = rBetaOrInf[14] + (rY[14] - rBetaOrInf[14])*exp(-mDt/rAlphaOrTau[14]);
        rY[15] = rBetaOrInf[15] + (rY[15] - rBetaOrInf[15])*exp(-mDt/rAlphaOrTau[15]);
        rY[16] += mDt * rDY[16];
        rY[17] += mDt * rDY[17];
        rY[18] += mDt * rDY[18];
        rY[19] += mDt * rDY[19];
        rY[20] += mDt * rDY[20];
        rY[21] += mDt * rDY[21];
        rY[22] += mDt * rDY[22];
        rY[23] += mDt * rDY[23];
        rY[24] += mDt * rDY[24];
        rY[25] += mDt * rDY[25];
        rY[26] += mDt * rDY[26];
        rY[27] += mDt * rDY[27];
        rY[28] += mDt * rDY[28];
    }

    std::vector<double> Cellmaltsev_2009FromCellMLRushLarsen::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const std::vector<double> & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__Vm__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -57.9639346865
        double var_chaste_interface__i_CaL_dL_gate__dL = rY[2];
        // Units: dimensionless; Initial value: 0.000584545564405
        double var_chaste_interface__i_CaL_fL_gate__fL = rY[3];
        // Units: dimensionless; Initial value: 0.862381249774
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[4];
        // Units: dimensionless; Initial value: 0.711395919653
        double var_chaste_interface__i_Kr_pa_gate__paS = rY[7];
        // Units: dimensionless; Initial value: 0.453100576739
        double var_chaste_interface__i_Kr_pa_gate__paF = rY[8];
        // Units: dimensionless; Initial value: 0.144755091176
        double var_chaste_interface__i_Kr_pi_gate__pi_ = rY[9];
        // Units: dimensionless; Initial value: 0.849409822329
        double var_chaste_interface__i_f_y_gate__y = rY[13];
        // Units: dimensionless; Initial value: 0.113643187247
        
        // Mathematics
        const double var_i_CaL__E_CaL = 45.0; // millivolt
        const double var_i_f__g_if = 0.14999999999999999; // nanoS_per_picoF
        const double var_i_CaL__i_CaL = (-var_i_CaL__E_CaL + var_chaste_interface__Vm__Vm) * mParameters[5] * var_chaste_interface__i_CaL_dL_gate__dL * var_chaste_interface__i_CaL_fCa_gate__fCa * var_chaste_interface__i_CaL_fL_gate__fL * mParameters[9]; // picoA
        const double var_model_parameters__Cm_converted = 9.9999999999999995e-7 * mParameters[9]; // uF
        const double var_i_CaL__i_CaL_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_CaL__i_CaL / var_model_parameters__Cm_converted; // uA_per_cm2
        const double var_model_parameters__F = 96485.0; // coulomb_per_mole
        const double var_model_parameters__R = 8314.3999999999996; // joule_per_kilomole_kelvin
        const double var_model_parameters__T = 310.14999999999998; // kelvin
        const double var_electric_potentials__E_K = var_model_parameters__R * var_model_parameters__T * log(mParameters[3] / mParameters[0]) / var_model_parameters__F; // millivolt
        const double var_electric_potentials__E_Na = var_model_parameters__R * var_model_parameters__T * log(mParameters[4] / mParameters[1]) / var_model_parameters__F; // millivolt
        const double var_i_Kr__i_Kr = (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * (0.40000000000000002 * var_chaste_interface__i_Kr_pa_gate__paS + 0.59999999999999998 * var_chaste_interface__i_Kr_pa_gate__paF) * mParameters[8] * var_chaste_interface__i_Kr_pi_gate__pi_ * mParameters[9]; // picoA
        const double var_i_Kr__i_Kr_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_Kr__i_Kr / var_model_parameters__Cm_converted; // uA_per_cm2
        const double var_i_f__i_f_K = pow(var_chaste_interface__i_f_y_gate__y, 2) * (-var_electric_potentials__E_K + var_chaste_interface__Vm__Vm) * var_i_f__g_if * mParameters[6] * mParameters[9]; // picoA
        const double var_i_f__i_f_Na = pow(var_chaste_interface__i_f_y_gate__y, 2) * (-var_electric_potentials__E_Na + var_chaste_interface__Vm__Vm) * var_i_f__g_if * mParameters[7] * mParameters[9]; // picoA
        const double var_i_f__i_f = var_i_f__i_f_K + var_i_f__i_f_Na; // picoA
        const double var_i_f__i_f_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_f__i_f / var_model_parameters__Cm_converted; // uA_per_cm2

        std::vector<double> dqs(7);
        dqs[0] = var_i_CaL__i_CaL_converted;
        dqs[1] = var_model_parameters__Cm_converted;
        dqs[2] = var_i_f__i_f_converted;
        dqs[3] = var_i_f__i_f_K;
        dqs[4] = var_i_f__i_f_Na;
        dqs[5] = var_i_Kr__i_Kr_converted;
        dqs[6] = var_chaste_interface__environment__time;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellmaltsev_2009FromCellMLRushLarsen>::Initialise(void)
{
    this->mSystemName = "maltsev_2009";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-57.9639346865);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.000150018670943);

    // rY[2]:
    this->mVariableNames.push_back("i_CaL_dL_gate__dL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000584545564405);

    // rY[3]:
    this->mVariableNames.push_back("i_CaL_fL_gate__fL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.862381249774);

    // rY[4]:
    this->mVariableNames.push_back("i_CaL_fCa_gate__fCa");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.711395919653);

    // rY[5]:
    this->mVariableNames.push_back("i_CaT_dT_gate__dT");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00504393374639);

    // rY[6]:
    this->mVariableNames.push_back("i_CaT_fT_gate__fT");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.420757825415);

    // rY[7]:
    this->mVariableNames.push_back("i_Kr_pa_gate__paS");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.453100576739);

    // rY[8]:
    this->mVariableNames.push_back("i_Kr_pa_gate__paF");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.144755091176);

    // rY[9]:
    this->mVariableNames.push_back("i_Kr_pi_gate__pi_");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.849409822329);

    // rY[10]:
    this->mVariableNames.push_back("i_Ks_n_gate__n");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0264600410928);

    // rY[11]:
    this->mVariableNames.push_back("AP_sensitive_currents_q_gate__q");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.694241313965);

    // rY[12]:
    this->mVariableNames.push_back("AP_sensitive_currents_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00558131733359);

    // rY[13]:
    this->mVariableNames.push_back("i_f_y_gate__y");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.113643187247);

    // rY[14]:
    this->mVariableNames.push_back("i_st_qa_gate__qa");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.42380243163);

    // rY[15]:
    this->mVariableNames.push_back("i_st_qi_gate__qi");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.447294008304);

    // rY[16]:
    this->mVariableNames.push_back("j_SRCarel__R");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.688047760973);

    // rY[17]:
    this->mVariableNames.push_back("j_SRCarel__O");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.7340201253e-07);

    // rY[18]:
    this->mVariableNames.push_back("j_SRCarel__I");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(7.86181717518e-08);

    // rY[19]:
    this->mVariableNames.push_back("j_SRCarel__RI");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.311951987007);

    // rY[20]:
    this->mVariableNames.push_back("calcium_buffering__fTMM");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.501049376634);

    // rY[21]:
    this->mVariableNames.push_back("calcium_buffering__fCMi");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0594880901438);

    // rY[22]:
    this->mVariableNames.push_back("calcium_buffering__fCMs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.054381370046);

    // rY[23]:
    this->mVariableNames.push_back("calcium_buffering__fTC");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0291316176172);

    // rY[24]:
    this->mVariableNames.push_back("calcium_buffering__fTMC");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.432694959597);

    // rY[25]:
    this->mVariableNames.push_back("calcium_buffering__fCQ");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.273207128393);

    // rY[26]:
    this->mVariableNames.push_back("NSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.49348117734);

    // rY[27]:
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.316762674605);

    // rY[28]:
    this->mVariableNames.push_back("dyadic_space_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.000138112560112);

    // mParameters[0]:
    this->mParameterNames.push_back("cytosolic_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[1]:
    this->mParameterNames.push_back("cytosolic_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[2]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[3]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[4]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[5]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("nanoS_per_picoF");

    // mParameters[6]:
    this->mParameterNames.push_back("membrane_hyperpolarisation_activated_funny_current_potassium_component_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_hyperpolarisation_activated_funny_current_sodium_component_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("nanoS_per_picoF");

    // mParameters[9]:
    this->mParameterNames.push_back("model_parameters__Cm");
    this->mParameterUnits.push_back("picoF");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_capacitance");
    this->mDerivedQuantityUnits.push_back("uF");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_hyperpolarisation_activated_funny_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_hyperpolarisation_activated_funny_current_potassium_component");
    this->mDerivedQuantityUnits.push_back("picoA");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_hyperpolarisation_activated_funny_current_sodium_component");
    this->mDerivedQuantityUnits.push_back("picoA");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellmaltsev_2009FromCellMLRushLarsen)

