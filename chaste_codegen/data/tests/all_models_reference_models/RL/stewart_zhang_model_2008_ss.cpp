//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: stewart_zhang_model_2008
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on (date omitted as unimportant)
//! 
//! <autogenerated>

#include "stewart_zhang_model_2008_ss.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    double Dynamicstewart_zhang_model_2008_ssFromCellMLRushLarsen::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    
    Dynamicstewart_zhang_model_2008_ssFromCellMLRushLarsen::Dynamicstewart_zhang_model_2008_ssFromCellMLRushLarsen(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractRushLarsenCardiacCell(
                20,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Dynamicstewart_zhang_model_2008_ssFromCellMLRushLarsen>::Instance();
        Init();

    }
    
    Dynamicstewart_zhang_model_2008_ssFromCellMLRushLarsen::~Dynamicstewart_zhang_model_2008_ssFromCellMLRushLarsen()
    {
    }
    
    double Dynamicstewart_zhang_model_2008_ssFromCellMLRushLarsen::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -69.1370441635924
        double var_chaste_interface__calcium_dynamics__Ca_i = rY[1];
        // Units: millimolar; Initial value: 0.000101878186157052
        double var_chaste_interface__hyperpolarization_activated_current_y_gate__y = rY[2];
        // Units: dimensionless; Initial value: 0.0457562667986602
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = rY[3];
        // Units: dimensionless; Initial value: 0.00550281999719088
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = rY[4];
        // Units: dimensionless; Initial value: 0.313213286437995
        double var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs = rY[5];
        // Units: dimensionless; Initial value: 0.00953708522974789
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[6];
        // Units: dimensionless; Initial value: 0.0417391656294997
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[7];
        // Units: dimensionless; Initial value: 0.190678733735145
        double var_chaste_interface__fast_sodium_current_j_gate__j = rY[8];
        // Units: dimensionless; Initial value: 0.238219836154029
        double var_chaste_interface__L_type_Ca_current_d_gate__d = rY[9];
        // Units: dimensionless; Initial value: 0.000287906256206415
        double var_chaste_interface__L_type_Ca_current_f_gate__f = rY[10];
        // Units: dimensionless; Initial value: 0.989328560287987
        double var_chaste_interface__L_type_Ca_current_f2_gate__f2 = rY[11];
        // Units: dimensionless; Initial value: 0.995474890442185
        double var_chaste_interface__L_type_Ca_current_fCass_gate__fCass = rY[12];
        // Units: dimensionless; Initial value: 0.999955429598213
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[13];
        // Units: dimensionless; Initial value: 0.96386101799501
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[14];
        // Units: dimensionless; Initial value: 0.00103618091196912
        double var_chaste_interface__calcium_dynamics__Ca_ss = rY[16];
        // Units: millimolar; Initial value: 0.000446818714055411
        double var_chaste_interface__sodium_dynamics__Na_i = rY[18];
        // Units: millimolar; Initial value: 8.80420286531673
        double var_chaste_interface__potassium_dynamics__K_i = rY[19];
        // Units: millimolar; Initial value: 136.781894160227
        
        const double var_reversal_potentials__E_K = 26.713760659695648 * log(5.4000000000000004 / var_chaste_interface__potassium_dynamics__K_i); // millivolt
        const double var_inward_rectifier_potassium_current__i_K1 = 0.065000000000000002 * (1.0 / (1.0 + exp(0.10000000000000001 * (var_chaste_interface__membrane__V + 75.439999999999998)))) * ((var_chaste_interface__membrane__V - 8.0) - var_reversal_potentials__E_K); // picoA_per_picoF
        const double var_transient_outward_current__i_to = 0.081839999999999996 * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // picoA_per_picoF
        const double var_sustained_outward_current__i_sus = 0.022700000000000001 * (1.0 / (1.0 + exp((5.0 - var_chaste_interface__membrane__V) * 0.058823529411764705))) * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // picoA_per_picoF
        const double var_rapid_time_dependent_potassium_current__g_Kr = 0.091800000000000007; // nanoS_per_picoF
        const double var_rapid_time_dependent_potassium_current__i_Kr = var_rapid_time_dependent_potassium_current__g_Kr * 1.0 * var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 * var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // picoA_per_picoF
        const double var_slow_time_dependent_potassium_current__i_Ks = 0.23519999999999999 * pow(var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs, 2.0) * (var_chaste_interface__membrane__V - (26.713760659695648 * log(9.6000000000000014 / (var_chaste_interface__potassium_dynamics__K_i + (0.029999999999999999 * var_chaste_interface__sodium_dynamics__Na_i))))); // picoA_per_picoF
        const double var_L_type_Ca_current__g_CaL = 3.9799999999999998e-05; // litre_per_farad_second
        const double var_L_type_Ca_current__i_CaL = (((var_L_type_Ca_current__g_CaL * var_chaste_interface__L_type_Ca_current_d_gate__d * var_chaste_interface__L_type_Ca_current_f_gate__f * var_chaste_interface__L_type_Ca_current_f2_gate__f2 * var_chaste_interface__L_type_Ca_current_fCass_gate__fCass * (var_chaste_interface__membrane__V - 15.0) * 37237684497.486488) * 3.8797490106562429e-07) * ((0.25 * var_chaste_interface__calcium_dynamics__Ca_ss * exp(((var_chaste_interface__membrane__V - 15.0) * 192970.68299999999) * 3.8797490106562429e-07)) - 2.0)) / (exp(((var_chaste_interface__membrane__V - 15.0) * 192970.68299999999) * 3.8797490106562429e-07) - 1.0); // picoA_per_picoF
        const double var_sodium_potassium_pump_current__i_NaK = ((2.2983750000000001 * var_chaste_interface__sodium_dynamics__Na_i) / (var_chaste_interface__sodium_dynamics__Na_i + 40.0)) / (1.0 + (0.1245 * exp((var_chaste_interface__membrane__V *  -9648.5341499999995) * 3.8797490106562429e-07)) + (0.035299999999999998 * exp(((-var_chaste_interface__membrane__V) * 96485.341499999995) * 3.8797490106562429e-07))); // picoA_per_picoF
        const double var_fast_sodium_current__g_Na = 130.5744; // nanoS_per_picoF
        const double var_reversal_potentials__E_Na = 26.713760659695648 * log(140.0 / var_chaste_interface__sodium_dynamics__Na_i); // millivolt
        const double var_fast_sodium_current__i_Na = var_fast_sodium_current__g_Na * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3.0) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j * (var_chaste_interface__membrane__V - var_reversal_potentials__E_Na); // picoA_per_picoF
        const double var_sodium_background_current__i_b_Na = 0.00029 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_Na); // picoA_per_picoF
        const double var_sodium_calcium_exchanger_current__K_NaCa = 1000.0; // picoA_per_picoF
        const double var_sodium_calcium_exchanger_current__i_NaCa = (var_sodium_calcium_exchanger_current__K_NaCa * ((exp((var_chaste_interface__membrane__V * 33769.869524999995) * 3.8797490106562429e-07) * pow(var_chaste_interface__sodium_dynamics__Na_i, 3.0) * 2.0) - (exp((var_chaste_interface__membrane__V *  -62715.471975) * 3.8797490106562429e-07) * var_chaste_interface__calcium_dynamics__Ca_i * 6860000.0))) / ((1.0 + (0.10000000000000001 * exp((var_chaste_interface__membrane__V *  -62715.471975) * 3.8797490106562429e-07))) * 11539055.9375); // picoA_per_picoF
        const double var_calcium_background_current__i_b_Ca = 0.00059199999999999997 * (var_chaste_interface__membrane__V - (13.356880329847824 * log(2.0 / var_chaste_interface__calcium_dynamics__Ca_i))); // picoA_per_picoF
        const double var_potassium_pump_current__i_p_K = (0.0146 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K)) / (1.0 + exp((25.0 - var_chaste_interface__membrane__V) * 0.16722408026755853)); // picoA_per_picoF
        const double var_calcium_pump_current__i_p_Ca = (0.12379999999999999 * var_chaste_interface__calcium_dynamics__Ca_i) / (var_chaste_interface__calcium_dynamics__Ca_i + 0.00050000000000000001); // picoA_per_picoF
        const double var_hyperpolarization_activated_current__i_f_Na = var_chaste_interface__hyperpolarization_activated_current_y_gate__y * 0.014565399999999999 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_Na); // picoA_per_picoF
        const double var_hyperpolarization_activated_current__i_f_K = var_chaste_interface__hyperpolarization_activated_current_y_gate__y * 0.0234346 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // picoA_per_picoF
        const double var_hyperpolarization_activated_current__i_f = var_hyperpolarization_activated_current__i_f_Na + var_hyperpolarization_activated_current__i_f_K; // picoA_per_picoF
        const double var_chaste_interface__L_type_Ca_current__i_CaL = var_L_type_Ca_current__i_CaL; // picoA_per_picoF
        const double var_chaste_interface__fast_sodium_current__i_Na = var_fast_sodium_current__i_Na; // picoA_per_picoF
        const double var_chaste_interface__rapid_time_dependent_potassium_current__i_Kr = var_rapid_time_dependent_potassium_current__i_Kr; // picoA_per_picoF
        const double var_chaste_interface__sodium_calcium_exchanger_current__i_NaCa = var_sodium_calcium_exchanger_current__i_NaCa; // picoA_per_picoF
        const double var_chaste_interface__i_ionic = (var_inward_rectifier_potassium_current__i_K1 + var_transient_outward_current__i_to + var_sustained_outward_current__i_sus + var_chaste_interface__rapid_time_dependent_potassium_current__i_Kr + var_slow_time_dependent_potassium_current__i_Ks + var_chaste_interface__L_type_Ca_current__i_CaL + var_sodium_potassium_pump_current__i_NaK + var_chaste_interface__fast_sodium_current__i_Na + var_sodium_background_current__i_b_Na + var_chaste_interface__sodium_calcium_exchanger_current__i_NaCa + var_calcium_background_current__i_b_Ca + var_potassium_pump_current__i_p_K + var_calcium_pump_current__i_p_Ca + var_hyperpolarization_activated_current__i_f) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Dynamicstewart_zhang_model_2008_ssFromCellMLRushLarsen::EvaluateEquations(double var_chaste_interface__environment__time, std::vector<double> &rDY, std::vector<double> &rAlphaOrTau, std::vector<double> &rBetaOrInf)
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -69.1370441635924
        double var_chaste_interface__calcium_dynamics__Ca_i = rY[1];
        // Units: millimolar; Initial value: 0.000101878186157052
        double var_chaste_interface__hyperpolarization_activated_current_y_gate__y = rY[2];
        // Units: dimensionless; Initial value: 0.0457562667986602
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = rY[3];
        // Units: dimensionless; Initial value: 0.00550281999719088
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = rY[4];
        // Units: dimensionless; Initial value: 0.313213286437995
        double var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs = rY[5];
        // Units: dimensionless; Initial value: 0.00953708522974789
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[6];
        // Units: dimensionless; Initial value: 0.0417391656294997
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[7];
        // Units: dimensionless; Initial value: 0.190678733735145
        double var_chaste_interface__fast_sodium_current_j_gate__j = rY[8];
        // Units: dimensionless; Initial value: 0.238219836154029
        double var_chaste_interface__L_type_Ca_current_d_gate__d = rY[9];
        // Units: dimensionless; Initial value: 0.000287906256206415
        double var_chaste_interface__L_type_Ca_current_f_gate__f = rY[10];
        // Units: dimensionless; Initial value: 0.989328560287987
        double var_chaste_interface__L_type_Ca_current_f2_gate__f2 = rY[11];
        // Units: dimensionless; Initial value: 0.995474890442185
        double var_chaste_interface__L_type_Ca_current_fCass_gate__fCass = rY[12];
        // Units: dimensionless; Initial value: 0.999955429598213
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[13];
        // Units: dimensionless; Initial value: 0.96386101799501
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[14];
        // Units: dimensionless; Initial value: 0.00103618091196912
        double var_chaste_interface__calcium_dynamics__Ca_SR = rY[15];
        // Units: millimolar; Initial value: 3.10836886659417
        double var_chaste_interface__calcium_dynamics__Ca_ss = rY[16];
        // Units: millimolar; Initial value: 0.000446818714055411
        double var_chaste_interface__calcium_dynamics__R_prime = rY[17];
        // Units: dimensionless; Initial value: 0.991580051907845
        double var_chaste_interface__sodium_dynamics__Na_i = rY[18];
        // Units: millimolar; Initial value: 8.80420286531673
        double var_chaste_interface__potassium_dynamics__K_i = rY[19];
        // Units: millimolar; Initial value: 136.781894160227
        
        
        // Mathematics
        double d_dt_chaste_interface__membrane__V;
        const double var_membrane__Cm = 0.185; // microF
        const double var_reversal_potentials__E_K = 26.713760659695648 * log(5.4000000000000004 / var_chaste_interface__potassium_dynamics__K_i); // millivolt
        const double var_inward_rectifier_potassium_current__i_K1 = 0.065000000000000002 * (1.0 / (1.0 + exp(0.10000000000000001 * (var_chaste_interface__membrane__V + 75.439999999999998)))) * ((var_chaste_interface__membrane__V - 8.0) - var_reversal_potentials__E_K); // picoA_per_picoF
        const double var_transient_outward_current__i_to = 0.081839999999999996 * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // picoA_per_picoF
        const double var_sustained_outward_current__i_sus = 0.022700000000000001 * (1.0 / (1.0 + exp((5.0 - var_chaste_interface__membrane__V) * 0.058823529411764705))) * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // picoA_per_picoF
        const double var_rapid_time_dependent_potassium_current__g_Kr = 0.091800000000000007; // nanoS_per_picoF
        const double var_rapid_time_dependent_potassium_current__i_Kr = var_rapid_time_dependent_potassium_current__g_Kr * 1.0 * var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 * var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // picoA_per_picoF
        const double var_slow_time_dependent_potassium_current__i_Ks = 0.23519999999999999 * pow(var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs, 2.0) * (var_chaste_interface__membrane__V - (26.713760659695648 * log(9.6000000000000014 / (var_chaste_interface__potassium_dynamics__K_i + (0.029999999999999999 * var_chaste_interface__sodium_dynamics__Na_i))))); // picoA_per_picoF
        const double var_L_type_Ca_current__g_CaL = 3.9799999999999998e-05; // litre_per_farad_second
        const double var_L_type_Ca_current__i_CaL = (((var_L_type_Ca_current__g_CaL * var_chaste_interface__L_type_Ca_current_d_gate__d * var_chaste_interface__L_type_Ca_current_f_gate__f * var_chaste_interface__L_type_Ca_current_f2_gate__f2 * var_chaste_interface__L_type_Ca_current_fCass_gate__fCass * (var_chaste_interface__membrane__V - 15.0) * 37237684497.486488) * 3.8797490106562429e-07) * ((0.25 * var_chaste_interface__calcium_dynamics__Ca_ss * exp(((var_chaste_interface__membrane__V - 15.0) * 192970.68299999999) * 3.8797490106562429e-07)) - 2.0)) / (exp(((var_chaste_interface__membrane__V - 15.0) * 192970.68299999999) * 3.8797490106562429e-07) - 1.0); // picoA_per_picoF
        const double var_sodium_potassium_pump_current__i_NaK = ((2.2983750000000001 * var_chaste_interface__sodium_dynamics__Na_i) / (var_chaste_interface__sodium_dynamics__Na_i + 40.0)) / (1.0 + (0.1245 * exp((var_chaste_interface__membrane__V *  -9648.5341499999995) * 3.8797490106562429e-07)) + (0.035299999999999998 * exp(((-var_chaste_interface__membrane__V) * 96485.341499999995) * 3.8797490106562429e-07))); // picoA_per_picoF
        const double var_fast_sodium_current__g_Na = 130.5744; // nanoS_per_picoF
        const double var_reversal_potentials__E_Na = 26.713760659695648 * log(140.0 / var_chaste_interface__sodium_dynamics__Na_i); // millivolt
        const double var_fast_sodium_current__i_Na = var_fast_sodium_current__g_Na * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3.0) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j * (var_chaste_interface__membrane__V - var_reversal_potentials__E_Na); // picoA_per_picoF
        const double var_sodium_background_current__i_b_Na = 0.00029 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_Na); // picoA_per_picoF
        const double var_sodium_calcium_exchanger_current__K_NaCa = 1000.0; // picoA_per_picoF
        const double var_sodium_calcium_exchanger_current__i_NaCa = (var_sodium_calcium_exchanger_current__K_NaCa * ((exp((var_chaste_interface__membrane__V * 33769.869524999995) * 3.8797490106562429e-07) * pow(var_chaste_interface__sodium_dynamics__Na_i, 3.0) * 2.0) - (exp((var_chaste_interface__membrane__V *  -62715.471975) * 3.8797490106562429e-07) * var_chaste_interface__calcium_dynamics__Ca_i * 6860000.0))) / ((1.0 + (0.10000000000000001 * exp((var_chaste_interface__membrane__V *  -62715.471975) * 3.8797490106562429e-07))) * 11539055.9375); // picoA_per_picoF
        const double var_calcium_background_current__i_b_Ca = 0.00059199999999999997 * (var_chaste_interface__membrane__V - (13.356880329847824 * log(2.0 / var_chaste_interface__calcium_dynamics__Ca_i))); // picoA_per_picoF
        const double var_potassium_pump_current__i_p_K = (0.0146 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K)) / (1.0 + exp((25.0 - var_chaste_interface__membrane__V) * 0.16722408026755853)); // picoA_per_picoF
        const double var_calcium_pump_current__i_p_Ca = (0.12379999999999999 * var_chaste_interface__calcium_dynamics__Ca_i) / (var_chaste_interface__calcium_dynamics__Ca_i + 0.00050000000000000001); // picoA_per_picoF
        const double var_hyperpolarization_activated_current__i_f_Na = var_chaste_interface__hyperpolarization_activated_current_y_gate__y * 0.014565399999999999 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_Na); // picoA_per_picoF
        const double var_hyperpolarization_activated_current__i_f_K = var_chaste_interface__hyperpolarization_activated_current_y_gate__y * 0.0234346 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // picoA_per_picoF
        const double var_fast_sodium_current__shift_INa_inact = 0.0; // millivolt
        const double var_fast_sodium_current__perc_reduced_inact_for_IpNa = 0.0; // dimensionless
        const double var_calcium_dynamics__kcasr = 2.5 - (1.5 / (1.0 + pow(1.5 / var_chaste_interface__calcium_dynamics__Ca_SR, 2.0))); // dimensionless
        const double var_calcium_dynamics__k1 = 0.14999999999999999 / var_calcium_dynamics__kcasr; // per_millimolar2_per_millisecond
        const double var_calcium_dynamics__i_rel = 0.10199999999999999 * ((var_calcium_dynamics__k1 * pow(var_chaste_interface__calcium_dynamics__Ca_ss, 2.0) * var_chaste_interface__calcium_dynamics__R_prime) / (0.059999999999999998 + (var_calcium_dynamics__k1 * pow(var_chaste_interface__calcium_dynamics__Ca_ss, 2.0)))) * (var_chaste_interface__calcium_dynamics__Ca_SR - var_chaste_interface__calcium_dynamics__Ca_ss); // millimolar_per_millisecond
        const double var_calcium_dynamics__i_up = 0.0063749999999999996 / (1.0 + (6.2499999999999997e-08 / pow(var_chaste_interface__calcium_dynamics__Ca_i, 2.0))); // millimolar_per_millisecond
        const double var_calcium_dynamics__i_leak = 0.00036000000000000002 * (var_chaste_interface__calcium_dynamics__Ca_SR - var_chaste_interface__calcium_dynamics__Ca_i); // millimolar_per_millisecond
        const double var_calcium_dynamics__i_xfer = 0.0038 * (var_chaste_interface__calcium_dynamics__Ca_ss - var_chaste_interface__calcium_dynamics__Ca_i); // millimolar_per_millisecond
        const double d_dt_chaste_interface__calcium_dynamics__Ca_i = (1.0 / (1.0 + (0.00020000000000000001 / pow(var_chaste_interface__calcium_dynamics__Ca_i + 0.001, 2.0)))) * (((((var_calcium_dynamics__i_leak - var_calcium_dynamics__i_up) * 0.0010939999999999999) * 60.960741282614002) + var_calcium_dynamics__i_xfer) - ((1.0 * ((var_calcium_background_current__i_b_Ca + var_calcium_pump_current__i_p_Ca) - (2.0 * var_sodium_calcium_exchanger_current__i_NaCa)) * var_membrane__Cm) * 0.00031590674984870111)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__L_type_Ca_current_fCass_gate__fCass = (((0.59999999999999998 / (1.0 + pow(var_chaste_interface__calcium_dynamics__Ca_ss * 20.0, 2.0))) + 0.40000000000000002) - var_chaste_interface__L_type_Ca_current_fCass_gate__fCass) / ((80.0 / (1.0 + pow(var_chaste_interface__calcium_dynamics__Ca_ss * 20.0, 2.0))) + 2.0); // per_millisecond
        const double d_dt_chaste_interface__calcium_dynamics__Ca_SR = (1.0 / (1.0 + (3.0 / pow(var_chaste_interface__calcium_dynamics__Ca_SR + 0.29999999999999999, 2.0)))) * (var_calcium_dynamics__i_up - (var_calcium_dynamics__i_rel + var_calcium_dynamics__i_leak)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__calcium_dynamics__Ca_ss = (1.0 / (1.0 + (0.0001 / pow(var_chaste_interface__calcium_dynamics__Ca_ss + 0.00025000000000000001, 2.0)))) * (((( -1.0 * var_L_type_Ca_current__i_CaL * var_membrane__Cm) * 0.094772024954610345) + ((var_calcium_dynamics__i_rel * 0.0010939999999999999) * 18288.2223847842)) - ((var_calcium_dynamics__i_xfer * 0.016403999999999998) * 18288.2223847842)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__calcium_dynamics__R_prime = ((-(0.044999999999999998 * var_calcium_dynamics__kcasr)) * var_chaste_interface__calcium_dynamics__Ca_ss * var_chaste_interface__calcium_dynamics__R_prime) + (0.0050000000000000001 * (1.0 - var_chaste_interface__calcium_dynamics__R_prime)); // per_millisecond
        const double d_dt_chaste_interface__sodium_dynamics__Na_i = (( -1.0 * (var_fast_sodium_current__i_Na + var_sodium_background_current__i_b_Na + var_hyperpolarization_activated_current__i_f_Na + (3.0 * var_sodium_potassium_pump_current__i_NaK) + (3.0 * var_sodium_calcium_exchanger_current__i_NaCa))) * 0.00063181349969740222) * var_membrane__Cm; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__potassium_dynamics__K_i = (( -1.0 * ((var_inward_rectifier_potassium_current__i_K1 + var_transient_outward_current__i_to + var_hyperpolarization_activated_current__i_f_K + var_sustained_outward_current__i_sus + var_rapid_time_dependent_potassium_current__i_Kr + var_slow_time_dependent_potassium_current__i_Ks + var_potassium_pump_current__i_p_K) - (2.0 * var_sodium_potassium_pump_current__i_NaK))) * 0.00063181349969740222) * var_membrane__Cm; // 'millimole per litre per millisecond'
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__membrane__V = 0.0;
        }
        else
        {
            const double var_hyperpolarization_activated_current__i_f = var_hyperpolarization_activated_current__i_f_Na + var_hyperpolarization_activated_current__i_f_K; // picoA_per_picoF
            d_dt_chaste_interface__membrane__V =  -1.0 * (var_inward_rectifier_potassium_current__i_K1 + var_transient_outward_current__i_to + var_sustained_outward_current__i_sus + var_rapid_time_dependent_potassium_current__i_Kr + var_slow_time_dependent_potassium_current__i_Ks + var_L_type_Ca_current__i_CaL + var_sodium_potassium_pump_current__i_NaK + var_fast_sodium_current__i_Na + var_sodium_background_current__i_b_Na + var_sodium_calcium_exchanger_current__i_NaCa + var_calcium_background_current__i_b_Ca + var_potassium_pump_current__i_p_K + var_calcium_pump_current__i_p_Ca + var_hyperpolarization_activated_current__i_f); // 'millivolt per millisecond'
        }
        
        rDY[0] = d_dt_chaste_interface__membrane__V;
        rDY[1] = d_dt_chaste_interface__calcium_dynamics__Ca_i;
        rAlphaOrTau[2] = 4000.0 / ((1.0 * exp( -2.8999999999999999 - (0.040000000000000001 * var_chaste_interface__membrane__V))) + (1.0 * exp(3.6000000000000001 + (0.11 * var_chaste_interface__membrane__V))));
        rBetaOrInf[2] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__V + 80.599999999999994) * 0.14705882352941177));
        rAlphaOrTau[3] = 1.0 * (450.0 / (1.0 + exp(( -45.0 - var_chaste_interface__membrane__V) * 0.10000000000000001))) * (6.0 / (1.0 + exp((var_chaste_interface__membrane__V + 30.0) * 0.086956521739130432)));
        rBetaOrInf[3] = 1.0 / (1.0 + exp(( -26.0 - var_chaste_interface__membrane__V) * 0.14285714285714285));
        rAlphaOrTau[4] = 1.0 * (3.0 / (1.0 + exp(( -60.0 - var_chaste_interface__membrane__V) * 0.050000000000000003))) * (1.1200000000000001 / (1.0 + exp((var_chaste_interface__membrane__V - 60.0) * 0.050000000000000003)));
        rBetaOrInf[4] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__V + 88.0) * 0.041666666666666664));
        rAlphaOrTau[5] = (1.0 * (1400.0 / sqrt(1.0 + exp((5.0 - var_chaste_interface__membrane__V) * 0.16666666666666666))) * (1.0 / (1.0 + exp((var_chaste_interface__membrane__V - 35.0) * 0.066666666666666666)))) + 80.0;
        rBetaOrInf[5] = 1.0 / (1.0 + exp(( -5.0 - var_chaste_interface__membrane__V) * 0.071428571428571425));
        rAlphaOrTau[6] = 1.0 * (1.0 / (1.0 + exp(( -60.0 - var_chaste_interface__membrane__V) * 0.20000000000000001))) * ((0.10000000000000001 / (1.0 + exp((var_chaste_interface__membrane__V + 35.0) * 0.20000000000000001))) + (0.10000000000000001 / (1.0 + exp((var_chaste_interface__membrane__V - 50.0) * 0.0050000000000000001))));
        rBetaOrInf[6] = 1.0 / pow(1.0 + exp(( -56.859999999999999 - var_chaste_interface__membrane__V) * 0.11074197120708749), 2.0);
        rAlphaOrTau[7] = 1.0 / (((var_chaste_interface__membrane__V <  -40.0) ? (0.057000000000000002 * exp((-((var_chaste_interface__membrane__V + 80.0) - var_fast_sodium_current__shift_INa_inact)) * 0.14705882352941177)) : 0.0) + ((var_chaste_interface__membrane__V <  -40.0) ? ((2.7000000000000002 * exp(0.079000000000000001 * (var_chaste_interface__membrane__V - var_fast_sodium_current__shift_INa_inact))) + (310000.0 * exp(0.34849999999999998 * (var_chaste_interface__membrane__V - var_fast_sodium_current__shift_INa_inact)))) : (0.77000000000000002 / (0.13 * (1.0 + exp(((var_chaste_interface__membrane__V + 10.66) - var_fast_sodium_current__shift_INa_inact) *  -0.0900900900900901))))));
        rBetaOrInf[7] = ((1.0 * (1.0 - (var_fast_sodium_current__perc_reduced_inact_for_IpNa * 0.01))) / pow(1.0 + exp(((var_chaste_interface__membrane__V + 71.549999999999997) - var_fast_sodium_current__shift_INa_inact) * 0.13458950201884254), 2.0)) + (var_fast_sodium_current__perc_reduced_inact_for_IpNa * 0.01);
        rAlphaOrTau[8] = 1.0 / (((var_chaste_interface__membrane__V <  -40.0) ? ((((( -25428.0 * exp(0.24440000000000001 * (var_chaste_interface__membrane__V - var_fast_sodium_current__shift_INa_inact))) - (6.9480000000000002e-06 * exp( -0.043909999999999998 * (var_chaste_interface__membrane__V - var_fast_sodium_current__shift_INa_inact)))) * (var_chaste_interface__membrane__V + 37.780000000000001)) * 1.0) / (1.0 + exp(0.311 * ((var_chaste_interface__membrane__V + 79.230000000000004) - var_fast_sodium_current__shift_INa_inact)))) : 0.0) + ((var_chaste_interface__membrane__V <  -40.0) ? ((0.024240000000000001 * exp( -0.01052 * (var_chaste_interface__membrane__V - var_fast_sodium_current__shift_INa_inact))) / (1.0 + exp( -0.13780000000000001 * ((var_chaste_interface__membrane__V + 40.140000000000001) - var_fast_sodium_current__shift_INa_inact)))) : ((0.59999999999999998 * exp(0.057000000000000002 * (var_chaste_interface__membrane__V - var_fast_sodium_current__shift_INa_inact))) / (1.0 + exp( -0.10000000000000001 * ((var_chaste_interface__membrane__V + 32.0) - var_fast_sodium_current__shift_INa_inact))))));
        rBetaOrInf[8] = ((1.0 * (1.0 - (var_fast_sodium_current__perc_reduced_inact_for_IpNa * 0.01))) / pow(1.0 + exp(((var_chaste_interface__membrane__V + 71.549999999999997) - var_fast_sodium_current__shift_INa_inact) * 0.13458950201884254), 2.0)) + (var_fast_sodium_current__perc_reduced_inact_for_IpNa * 0.01);
        rAlphaOrTau[9] = (1.0 * ((1.3999999999999999 / (1.0 + exp(( -35.0 - var_chaste_interface__membrane__V) * 0.076923076923076927))) + 0.25) * (1.3999999999999999 / (1.0 + exp((var_chaste_interface__membrane__V + 5.0) * 0.20000000000000001)))) + (1.0 / (1.0 + exp((50.0 - var_chaste_interface__membrane__V) * 0.050000000000000003)));
        rBetaOrInf[9] = 1.0 / (1.0 + exp(( -8.0 - var_chaste_interface__membrane__V) * 0.13333333333333333));
        rAlphaOrTau[10] = (1102.5 * exp((-pow(var_chaste_interface__membrane__V + 27.0, 2.0)) * 0.0044444444444444444)) + (200.0 / (1.0 + exp((13.0 - var_chaste_interface__membrane__V) * 0.10000000000000001))) + (180.0 / (1.0 + exp((var_chaste_interface__membrane__V + 30.0) * 0.10000000000000001))) + 20.0;
        rBetaOrInf[10] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__V + 20.0) * 0.14285714285714285));
        rAlphaOrTau[11] = (562.0 * exp((-pow(var_chaste_interface__membrane__V + 27.0, 2.0)) * 0.0041666666666666666)) + (31.0 / (1.0 + exp((25.0 - var_chaste_interface__membrane__V) * 0.10000000000000001))) + (80.0 / (1.0 + exp((var_chaste_interface__membrane__V + 30.0) * 0.10000000000000001)));
        rBetaOrInf[11] = (0.67000000000000004 / (1.0 + exp((var_chaste_interface__membrane__V + 35.0) * 0.14285714285714285))) + 0.33000000000000002;
        rDY[12] = d_dt_chaste_interface__L_type_Ca_current_fCass_gate__fCass;
        rAlphaOrTau[13] = (85.0 * exp((-pow(var_chaste_interface__membrane__V + 25.0, 2.0)) * 0.0031250000000000002)) + (5.0 / (1.0 + exp((var_chaste_interface__membrane__V - 40.0) * 0.20000000000000001))) + 42.0;
        rBetaOrInf[13] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__V + 27.0) * 0.076923076923076927));
        rAlphaOrTau[14] = (10.449999999999999 * exp((-pow(var_chaste_interface__membrane__V + 40.0, 2.0)) * 0.00055555555555555556)) + 7.2999999999999998;
        rBetaOrInf[14] = 1.0 / (1.0 + exp((20.0 - var_chaste_interface__membrane__V) * 0.076923076923076927));
        rDY[15] = d_dt_chaste_interface__calcium_dynamics__Ca_SR;
        rDY[16] = d_dt_chaste_interface__calcium_dynamics__Ca_ss;
        rDY[17] = d_dt_chaste_interface__calcium_dynamics__R_prime;
        rDY[18] = d_dt_chaste_interface__sodium_dynamics__Na_i;
        rDY[19] = d_dt_chaste_interface__potassium_dynamics__K_i;
    }
    
    void Dynamicstewart_zhang_model_2008_ssFromCellMLRushLarsen::ComputeOneStepExceptVoltage(const std::vector<double> &rDY, const std::vector<double> &rAlphaOrTau, const std::vector<double> &rBetaOrInf)
    {
        std::vector<double>& rY = rGetStateVariables();
        rY[1] += mDt * rDY[1];
        rY[2] = rBetaOrInf[2] + (rY[2] - rBetaOrInf[2])*exp(-mDt/rAlphaOrTau[2]);
        rY[3] = rBetaOrInf[3] + (rY[3] - rBetaOrInf[3])*exp(-mDt/rAlphaOrTau[3]);
        rY[4] = rBetaOrInf[4] + (rY[4] - rBetaOrInf[4])*exp(-mDt/rAlphaOrTau[4]);
        rY[5] = rBetaOrInf[5] + (rY[5] - rBetaOrInf[5])*exp(-mDt/rAlphaOrTau[5]);
        rY[6] = rBetaOrInf[6] + (rY[6] - rBetaOrInf[6])*exp(-mDt/rAlphaOrTau[6]);
        rY[7] = rBetaOrInf[7] + (rY[7] - rBetaOrInf[7])*exp(-mDt/rAlphaOrTau[7]);
        rY[8] = rBetaOrInf[8] + (rY[8] - rBetaOrInf[8])*exp(-mDt/rAlphaOrTau[8]);
        rY[9] = rBetaOrInf[9] + (rY[9] - rBetaOrInf[9])*exp(-mDt/rAlphaOrTau[9]);
        rY[10] = rBetaOrInf[10] + (rY[10] - rBetaOrInf[10])*exp(-mDt/rAlphaOrTau[10]);
        rY[11] = rBetaOrInf[11] + (rY[11] - rBetaOrInf[11])*exp(-mDt/rAlphaOrTau[11]);
        rY[12] += mDt * rDY[12];
        rY[13] = rBetaOrInf[13] + (rY[13] - rBetaOrInf[13])*exp(-mDt/rAlphaOrTau[13]);
        rY[14] = rBetaOrInf[14] + (rY[14] - rBetaOrInf[14])*exp(-mDt/rAlphaOrTau[14]);
        rY[15] += mDt * rDY[15];
        rY[16] += mDt * rDY[16];
        rY[17] += mDt * rDY[17];
        rY[18] += mDt * rDY[18];
        rY[19] += mDt * rDY[19];
    }
    
template<>
void OdeSystemInformation<Dynamicstewart_zhang_model_2008_ssFromCellMLRushLarsen>::Initialise(void)
{
    this->mSystemName = "stewart_zhang_model_2008";
    this->mFreeVariableName = "environment__time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-69.1370441635924);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.000101878186157052);

    // rY[2]:
    this->mVariableNames.push_back("hyperpolarization_activated_current_y_gate__y");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0457562667986602);

    // rY[3]:
    this->mVariableNames.push_back("rapid_time_dependent_potassium_current_Xr1_gate__Xr1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00550281999719088);

    // rY[4]:
    this->mVariableNames.push_back("rapid_time_dependent_potassium_current_Xr2_gate__Xr2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.313213286437995);

    // rY[5]:
    this->mVariableNames.push_back("slow_time_dependent_potassium_current_Xs_gate__Xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00953708522974789);

    // rY[6]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0417391656294997);

    // rY[7]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.190678733735145);

    // rY[8]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.238219836154029);

    // rY[9]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000287906256206415);

    // rY[10]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.989328560287987);

    // rY[11]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f2_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.995474890442185);

    // rY[12]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_fCa2_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999955429598213);

    // rY[13]:
    this->mVariableNames.push_back("transient_outward_current_s_gate__s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.96386101799501);

    // rY[14]:
    this->mVariableNames.push_back("transient_outward_current_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00103618091196912);

    // rY[15]:
    this->mVariableNames.push_back("calcium_dynamics__Ca_SR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(3.10836886659417);

    // rY[16]:
    this->mVariableNames.push_back("dyadic_space_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.000446818714055411);

    // rY[17]:
    this->mVariableNames.push_back("calcium_dynamics__R_prime");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.991580051907845);

    // rY[18]:
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.80420286531673);

    // rY[19]:
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(136.781894160227);

    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Dynamicstewart_zhang_model_2008_ssFromCellMLRushLarsen)
extern "C"
{
    AbstractCardiacCellInterface* MakeCardiacCell(
            boost::shared_ptr<AbstractIvpOdeSolver> pSolver,
            boost::shared_ptr<AbstractStimulusFunction> pStimulus)
    {
        return new Dynamicstewart_zhang_model_2008_ssFromCellMLRushLarsen(pSolver, pStimulus);
    }
    
}

