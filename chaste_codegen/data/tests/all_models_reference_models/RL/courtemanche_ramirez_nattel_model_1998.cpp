//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: courtemanche_ramirez_nattel_model_1998
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on (date omitted as unimportant)
//! 
//! <autogenerated>

#include "courtemanche_ramirez_nattel_model_1998.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    boost::shared_ptr<RegularStimulus> Dynamiccourtemanche_ramirez_nattel_model_1998FromCellMLRushLarsen::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_membrane__Cm = 100.0; // picoF
        const double var_chaste_interface__membrane__stim_start = 50.0; // millisecond
        const double var_chaste_interface__membrane__stim_period = 1000.0; // millisecond
        const double var_chaste_interface__membrane__stim_duration = 2.0; // millisecond
        const double var_chaste_interface__membrane__stim_amplitude = ( -2000.0 / var_membrane__Cm) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__stim_amplitude),
                var_chaste_interface__membrane__stim_duration,
                var_chaste_interface__membrane__stim_period,
                var_chaste_interface__membrane__stim_start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    Dynamiccourtemanche_ramirez_nattel_model_1998FromCellMLRushLarsen::Dynamiccourtemanche_ramirez_nattel_model_1998FromCellMLRushLarsen(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractRushLarsenCardiacCell(
                21,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Dynamiccourtemanche_ramirez_nattel_model_1998FromCellMLRushLarsen>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
    }
    
    Dynamiccourtemanche_ramirez_nattel_model_1998FromCellMLRushLarsen::~Dynamiccourtemanche_ramirez_nattel_model_1998FromCellMLRushLarsen()
    {
    }
    
    double Dynamiccourtemanche_ramirez_nattel_model_1998FromCellMLRushLarsen::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -81.18
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[1];
        // Units: dimensionless; Initial value: 2.908e-3
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[2];
        // Units: dimensionless; Initial value: 9.649e-1
        double var_chaste_interface__fast_sodium_current_j_gate__j = rY[3];
        // Units: dimensionless; Initial value: 9.775e-1
        double var_chaste_interface__transient_outward_K_current_oa_gate__oa = rY[4];
        // Units: dimensionless; Initial value: 3.043e-2
        double var_chaste_interface__transient_outward_K_current_oi_gate__oi = rY[5];
        // Units: dimensionless; Initial value: 9.992e-1
        double var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua = rY[6];
        // Units: dimensionless; Initial value: 4.966e-3
        double var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui = rY[7];
        // Units: dimensionless; Initial value: 9.986e-1
        double var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr = rY[8];
        // Units: dimensionless; Initial value: 3.296e-5
        double var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs = rY[9];
        // Units: dimensionless; Initial value: 1.869e-2
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[10];
        // Units: dimensionless; Initial value: 1.367e-4
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[11];
        // Units: dimensionless; Initial value: 9.996e-1
        double var_chaste_interface__L_type_Ca_channel_f_Ca_gate__f_Ca = rY[12];
        // Units: dimensionless; Initial value: 7.755e-1
        double var_chaste_interface__intracellular_ion_concentrations__Na_i = rY[16];
        // Units: millimolar; Initial value: 1.117e+01
        double var_chaste_interface__intracellular_ion_concentrations__Ca_i = rY[17];
        // Units: millimolar; Initial value: 1.013e-4
        double var_chaste_interface__intracellular_ion_concentrations__K_i = rY[18];
        // Units: millimolar; Initial value: 1.39e+02
        
        const double var_membrane__Cm = 100.0; // picoF
        const double var_fast_sodium_current__E_Na = 26.71283192398538 * log(140.0 / var_chaste_interface__intracellular_ion_concentrations__Na_i); // millivolt
        const double var_fast_sodium_current__i_Na = var_membrane__Cm * 7.7999999999999998 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3.0) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j * (var_chaste_interface__membrane__V - var_fast_sodium_current__E_Na); // picoA
        const double var_time_independent_potassium_current__E_K = 26.71283192398538 * log(5.4000000000000004 / var_chaste_interface__intracellular_ion_concentrations__K_i); // millivolt
        const double var_time_independent_potassium_current__i_K1 = (var_membrane__Cm * 0.089999999999999997 * (var_chaste_interface__membrane__V - var_time_independent_potassium_current__E_K)) / (1.0 + exp(0.070000000000000007 * (var_chaste_interface__membrane__V + 80.0))); // picoA
        const double var_transient_outward_K_current__i_to = var_membrane__Cm * 0.16520000000000001 * pow(var_chaste_interface__transient_outward_K_current_oa_gate__oa, 3.0) * var_chaste_interface__transient_outward_K_current_oi_gate__oi * (var_chaste_interface__membrane__V - var_time_independent_potassium_current__E_K); // picoA
        const double var_ultrarapid_delayed_rectifier_K_current__i_Kur = var_membrane__Cm * (0.0050000000000000001 + (0.050000000000000003 / (1.0 + exp((var_chaste_interface__membrane__V - 15.0) *  -0.076923076923076927)))) * pow(var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua, 3.0) * var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui * (var_chaste_interface__membrane__V - var_time_independent_potassium_current__E_K); // picoA
        const double var_rapid_delayed_rectifier_K_current__i_Kr = (var_membrane__Cm * 0.029411764999999999 * var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr * (var_chaste_interface__membrane__V - var_time_independent_potassium_current__E_K)) / (1.0 + exp((var_chaste_interface__membrane__V + 15.0) * 0.044642857142857144)); // picoA
        const double var_slow_delayed_rectifier_K_current__i_Ks = var_membrane__Cm * 0.12941175999999999 * pow(var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs, 2.0) * (var_chaste_interface__membrane__V - var_time_independent_potassium_current__E_K); // picoA
        const double var_L_type_Ca_channel__i_Ca_L = var_membrane__Cm * 0.12375 * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f_Ca_gate__f_Ca * (var_chaste_interface__membrane__V - 65.0); // picoA
        const double var_sarcolemmal_calcium_pump_current__i_CaP = (var_membrane__Cm * 0.27500000000000002 * var_chaste_interface__intracellular_ion_concentrations__Ca_i) / (0.00050000000000000001 + var_chaste_interface__intracellular_ion_concentrations__Ca_i); // picoA
        const double var_sodium_potassium_pump__i_NaK = (((var_membrane__Cm * pow(1.0 + (0.1245 * exp((var_chaste_interface__membrane__V *  -9.648670000000001) * 0.0003879829271992715)) + (exp(( -96.486699999999999 * var_chaste_interface__membrane__V) * 0.0003879829271992715) * 0.036533226130519084),  -1.0) * 0.59933873999999998) / (1.0 + pow(10.0 / var_chaste_interface__intracellular_ion_concentrations__Na_i, 1.5))) * 5.4000000000000004) * 0.14492753623188406; // picoA
        const double var_Na_Ca_exchanger_current__i_NaCa = (var_membrane__Cm * 1600.0 * ((exp((var_chaste_interface__membrane__V * 33.770344999999999) * 0.0003879829271992715) * pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3.0) * 1.8) - (exp((var_chaste_interface__membrane__V *  -62.716355) * 0.0003879829271992715) * 2744000.0 * var_chaste_interface__intracellular_ion_concentrations__Ca_i))) / ((1.0 + (0.10000000000000001 * exp((var_chaste_interface__membrane__V *  -62.716355) * 0.0003879829271992715))) * 10856271.562499998); // picoA
        const double var_background_currents__i_B_Na = var_membrane__Cm * 0.00067443750000000002 * (var_chaste_interface__membrane__V - var_fast_sodium_current__E_Na); // picoA
        const double var_background_currents__i_B_Ca = var_membrane__Cm * 0.0011310000000000001 * (var_chaste_interface__membrane__V - (13.35641596199269 * log(1.8 / var_chaste_interface__intracellular_ion_concentrations__Ca_i))); // picoA
        const double var_chaste_interface__i_ionic = ((var_fast_sodium_current__i_Na + var_time_independent_potassium_current__i_K1 + var_transient_outward_K_current__i_to + var_ultrarapid_delayed_rectifier_K_current__i_Kur + var_rapid_delayed_rectifier_K_current__i_Kr + var_slow_delayed_rectifier_K_current__i_Ks + var_background_currents__i_B_Na + var_background_currents__i_B_Ca + var_sodium_potassium_pump__i_NaK + var_sarcolemmal_calcium_pump_current__i_CaP + var_Na_Ca_exchanger_current__i_NaCa + var_L_type_Ca_channel__i_Ca_L) / var_membrane__Cm) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Dynamiccourtemanche_ramirez_nattel_model_1998FromCellMLRushLarsen::EvaluateEquations(double var_chaste_interface__environment__time, std::vector<double> &rDY, std::vector<double> &rAlphaOrTau, std::vector<double> &rBetaOrInf)
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -81.18
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[1];
        // Units: dimensionless; Initial value: 2.908e-3
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[2];
        // Units: dimensionless; Initial value: 9.649e-1
        double var_chaste_interface__fast_sodium_current_j_gate__j = rY[3];
        // Units: dimensionless; Initial value: 9.775e-1
        double var_chaste_interface__transient_outward_K_current_oa_gate__oa = rY[4];
        // Units: dimensionless; Initial value: 3.043e-2
        double var_chaste_interface__transient_outward_K_current_oi_gate__oi = rY[5];
        // Units: dimensionless; Initial value: 9.992e-1
        double var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua = rY[6];
        // Units: dimensionless; Initial value: 4.966e-3
        double var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui = rY[7];
        // Units: dimensionless; Initial value: 9.986e-1
        double var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr = rY[8];
        // Units: dimensionless; Initial value: 3.296e-5
        double var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs = rY[9];
        // Units: dimensionless; Initial value: 1.869e-2
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[10];
        // Units: dimensionless; Initial value: 1.367e-4
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[11];
        // Units: dimensionless; Initial value: 9.996e-1
        double var_chaste_interface__L_type_Ca_channel_f_Ca_gate__f_Ca = rY[12];
        // Units: dimensionless; Initial value: 7.755e-1
        double var_chaste_interface__Ca_release_current_from_JSR_u_gate__u = rY[13];
        // Units: dimensionless; Initial value: 2.35e-112
        double var_chaste_interface__Ca_release_current_from_JSR_v_gate__v = rY[14];
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__Ca_release_current_from_JSR_w_gate__w = rY[15];
        // Units: dimensionless; Initial value: 0.9992
        double var_chaste_interface__intracellular_ion_concentrations__Na_i = rY[16];
        // Units: millimolar; Initial value: 1.117e+01
        double var_chaste_interface__intracellular_ion_concentrations__Ca_i = rY[17];
        // Units: millimolar; Initial value: 1.013e-4
        double var_chaste_interface__intracellular_ion_concentrations__K_i = rY[18];
        // Units: millimolar; Initial value: 1.39e+02
        double var_chaste_interface__intracellular_ion_concentrations__Ca_rel = rY[19];
        // Units: millimolar; Initial value: 1.488
        double var_chaste_interface__intracellular_ion_concentrations__Ca_up = rY[20];
        // Units: millimolar; Initial value: 1.488
        
        
        // Mathematics
        double d_dt_chaste_interface__membrane__V;
        const double var_membrane__Cm = 100.0; // picoF
        const double var_fast_sodium_current__E_Na = 26.71283192398538 * log(140.0 / var_chaste_interface__intracellular_ion_concentrations__Na_i); // millivolt
        const double var_fast_sodium_current__i_Na = var_membrane__Cm * 7.7999999999999998 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3.0) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j * (var_chaste_interface__membrane__V - var_fast_sodium_current__E_Na); // picoA
        const double var_time_independent_potassium_current__E_K = 26.71283192398538 * log(5.4000000000000004 / var_chaste_interface__intracellular_ion_concentrations__K_i); // millivolt
        const double var_time_independent_potassium_current__i_K1 = (var_membrane__Cm * 0.089999999999999997 * (var_chaste_interface__membrane__V - var_time_independent_potassium_current__E_K)) / (1.0 + exp(0.070000000000000007 * (var_chaste_interface__membrane__V + 80.0))); // picoA
        const double var_transient_outward_K_current__i_to = var_membrane__Cm * 0.16520000000000001 * pow(var_chaste_interface__transient_outward_K_current_oa_gate__oa, 3.0) * var_chaste_interface__transient_outward_K_current_oi_gate__oi * (var_chaste_interface__membrane__V - var_time_independent_potassium_current__E_K); // picoA
        const double var_ultrarapid_delayed_rectifier_K_current__i_Kur = var_membrane__Cm * (0.0050000000000000001 + (0.050000000000000003 / (1.0 + exp((var_chaste_interface__membrane__V - 15.0) *  -0.076923076923076927)))) * pow(var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua, 3.0) * var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui * (var_chaste_interface__membrane__V - var_time_independent_potassium_current__E_K); // picoA
        const double var_rapid_delayed_rectifier_K_current__i_Kr = (var_membrane__Cm * 0.029411764999999999 * var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr * (var_chaste_interface__membrane__V - var_time_independent_potassium_current__E_K)) / (1.0 + exp((var_chaste_interface__membrane__V + 15.0) * 0.044642857142857144)); // picoA
        const double var_slow_delayed_rectifier_K_current__i_Ks = var_membrane__Cm * 0.12941175999999999 * pow(var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs, 2.0) * (var_chaste_interface__membrane__V - var_time_independent_potassium_current__E_K); // picoA
        const double var_L_type_Ca_channel__i_Ca_L = var_membrane__Cm * 0.12375 * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_chaste_interface__L_type_Ca_channel_f_Ca_gate__f_Ca * (var_chaste_interface__membrane__V - 65.0); // picoA
        const double var_sarcolemmal_calcium_pump_current__i_CaP = (var_membrane__Cm * 0.27500000000000002 * var_chaste_interface__intracellular_ion_concentrations__Ca_i) / (0.00050000000000000001 + var_chaste_interface__intracellular_ion_concentrations__Ca_i); // picoA
        const double var_sodium_potassium_pump__i_NaK = (((var_membrane__Cm * pow(1.0 + (0.1245 * exp((var_chaste_interface__membrane__V *  -9.648670000000001) * 0.0003879829271992715)) + (exp(( -96.486699999999999 * var_chaste_interface__membrane__V) * 0.0003879829271992715) * 0.036533226130519084),  -1.0) * 0.59933873999999998) / (1.0 + pow(10.0 / var_chaste_interface__intracellular_ion_concentrations__Na_i, 1.5))) * 5.4000000000000004) * 0.14492753623188406; // picoA
        const double var_Na_Ca_exchanger_current__i_NaCa = (var_membrane__Cm * 1600.0 * ((exp((var_chaste_interface__membrane__V * 33.770344999999999) * 0.0003879829271992715) * pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3.0) * 1.8) - (exp((var_chaste_interface__membrane__V *  -62.716355) * 0.0003879829271992715) * 2744000.0 * var_chaste_interface__intracellular_ion_concentrations__Ca_i))) / ((1.0 + (0.10000000000000001 * exp((var_chaste_interface__membrane__V *  -62.716355) * 0.0003879829271992715))) * 10856271.562499998); // picoA
        const double var_background_currents__i_B_Na = var_membrane__Cm * 0.00067443750000000002 * (var_chaste_interface__membrane__V - var_fast_sodium_current__E_Na); // picoA
        const double var_background_currents__i_B_Ca = var_membrane__Cm * 0.0011310000000000001 * (var_chaste_interface__membrane__V - (13.35641596199269 * log(1.8 / var_chaste_interface__intracellular_ion_concentrations__Ca_i))); // picoA
        const double var_fast_sodium_current_m_gate__alpha_m = (var_chaste_interface__membrane__V ==  -47.130000000000003) ? 3.2000000000000002 : ((0.32000000000000001 * (var_chaste_interface__membrane__V + 47.130000000000003)) / (1.0 - exp( -0.10000000000000001 * (var_chaste_interface__membrane__V + 47.130000000000003)))); // per_millisecond
        const double var_fast_sodium_current_m_gate__beta_m = 0.080000000000000002 * exp((-var_chaste_interface__membrane__V) * 0.090909090909090912); // per_millisecond
        const double var_fast_sodium_current_h_gate__beta_h = (var_chaste_interface__membrane__V <  -40.0) ? ((3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__membrane__V)) + (310000.0 * exp(0.34999999999999998 * var_chaste_interface__membrane__V))) : (1.0 / (0.13 * (1.0 + exp((var_chaste_interface__membrane__V + 10.66) *  -0.0900900900900901)))); // per_millisecond
        const double var_fast_sodium_current_h_gate__alpha_h = (var_chaste_interface__membrane__V <  -40.0) ? (0.13500000000000001 * exp((var_chaste_interface__membrane__V + 80.0) *  -0.14705882352941177)) : 0.0; // per_millisecond
        const double var_fast_sodium_current_j_gate__alpha_j = (var_chaste_interface__membrane__V <  -40.0) ? (((( -127140.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__V)) - (3.4740000000000003e-05 * exp( -0.043909999999999998 * var_chaste_interface__membrane__V))) * (var_chaste_interface__membrane__V + 37.780000000000001)) / (1.0 + exp(0.311 * (var_chaste_interface__membrane__V + 79.230000000000004)))) : 0.0; // per_millisecond
        const double var_fast_sodium_current_j_gate__beta_j = (var_chaste_interface__membrane__V <  -40.0) ? ((0.1212 * exp( -0.01052 * var_chaste_interface__membrane__V)) / (1.0 + exp( -0.13780000000000001 * (var_chaste_interface__membrane__V + 40.140000000000001)))) : ((0.29999999999999999 * exp( -2.5349999999999999e-07 * var_chaste_interface__membrane__V)) / (1.0 + exp( -0.10000000000000001 * (var_chaste_interface__membrane__V + 32.0)))); // per_millisecond
        const double var_Ca_release_current_from_JSR__i_rel = 30.0 * pow(var_chaste_interface__Ca_release_current_from_JSR_u_gate__u, 2.0) * var_chaste_interface__Ca_release_current_from_JSR_v_gate__v * var_chaste_interface__Ca_release_current_from_JSR_w_gate__w * (var_chaste_interface__intracellular_ion_concentrations__Ca_rel - var_chaste_interface__intracellular_ion_concentrations__Ca_i); // millimolar_per_millisecond
        const double var_Ca_release_current_from_JSR__Fn = 1000.0 * ((var_Ca_release_current_from_JSR__i_rel * 9.6479999999999996e-14) - (5.182061361824998e-18 * ((0.5 * var_L_type_Ca_channel__i_Ca_L) - (0.20000000000000001 * var_Na_Ca_exchanger_current__i_NaCa)))); // dimensionless
        const double var_transfer_current_from_NSR_to_JSR__i_tr = (var_chaste_interface__intracellular_ion_concentrations__Ca_up - var_chaste_interface__intracellular_ion_concentrations__Ca_rel) * 0.0055555555555555558; // millimolar_per_millisecond
        const double var_Ca_uptake_current_by_the_NSR__i_up = 0.0050000000000000001 / (1.0 + (0.00092000000000000003 / var_chaste_interface__intracellular_ion_concentrations__Ca_i)); // millimolar_per_millisecond
        const double var_Ca_leak_current_by_the_NSR__i_up_leak = (0.0050000000000000001 * var_chaste_interface__intracellular_ion_concentrations__Ca_up) * 0.066666666666666666; // millimolar_per_millisecond
        const double d_dt_chaste_interface__L_type_Ca_channel_f_Ca_gate__f_Ca = (pow(1.0 + (var_chaste_interface__intracellular_ion_concentrations__Ca_i * 2857.1428571428573),  -1.0) - var_chaste_interface__L_type_Ca_channel_f_Ca_gate__f_Ca) * 0.5; // per_millisecond
        const double d_dt_chaste_interface__Ca_release_current_from_JSR_u_gate__u = (pow(1.0 + exp((-(var_Ca_release_current_from_JSR__Fn - 3.4174999999999998e-13)) * 731528895391368.0),  -1.0) - var_chaste_interface__Ca_release_current_from_JSR_u_gate__u) * 0.125; // per_millisecond
        const double d_dt_chaste_interface__Ca_release_current_from_JSR_v_gate__v = ((1.0 - pow(1.0 + exp((-(var_Ca_release_current_from_JSR__Fn - 6.8349999999999994e-14)) * 731528895391368.0),  -1.0)) - var_chaste_interface__Ca_release_current_from_JSR_v_gate__v) / (1.9099999999999999 + (2.0899999999999999 * pow(1.0 + exp((-(var_Ca_release_current_from_JSR__Fn - 3.4174999999999998e-13)) * 731528895391368.0),  -1.0))); // per_millisecond
        const double d_dt_chaste_interface__intracellular_ion_concentrations__Na_i = (( -3.0 * var_sodium_potassium_pump__i_NaK) - ((3.0 * var_Na_Ca_exchanger_current__i_NaCa) + var_background_currents__i_B_Na + var_fast_sodium_current__i_Na)) * 7.5827646500219442e-07; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ion_concentrations__Ca_i = ((((2.0 * var_Na_Ca_exchanger_current__i_NaCa) - (var_sarcolemmal_calcium_pump_current__i_CaP + var_L_type_Ca_channel__i_Ca_L + var_background_currents__i_B_Ca)) * 3.7913823250109721e-07) + (((1109.52 * (var_Ca_leak_current_by_the_NSR__i_up_leak - var_Ca_uptake_current_by_the_NSR__i_up)) + (var_Ca_release_current_from_JSR__i_rel * 96.47999999999999)) * 7.3163593795727233e-05)) / (1.0 + (3.5000000000000004e-05 / pow(var_chaste_interface__intracellular_ion_concentrations__Ca_i + 0.00050000000000000001, 2.0)) + (0.00011900000000000002 / pow(var_chaste_interface__intracellular_ion_concentrations__Ca_i + 0.0023800000000000002, 2.0))); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ion_concentrations__K_i = ((2.0 * var_sodium_potassium_pump__i_NaK) - (var_time_independent_potassium_current__i_K1 + var_transient_outward_K_current__i_to + var_ultrarapid_delayed_rectifier_K_current__i_Kur + var_rapid_delayed_rectifier_K_current__i_Kr + var_slow_delayed_rectifier_K_current__i_Ks + (var_membrane__Cm * 0.0 * (var_chaste_interface__membrane__V - var_time_independent_potassium_current__E_K)))) * 7.5827646500219442e-07; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ion_concentrations__Ca_rel = (var_transfer_current_from_NSR_to_JSR__i_tr - var_Ca_release_current_from_JSR__i_rel) * pow(1.0 + (8.0 / pow(var_chaste_interface__intracellular_ion_concentrations__Ca_rel + 0.80000000000000004, 2.0)),  -1.0); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ion_concentrations__Ca_up = var_Ca_uptake_current_by_the_NSR__i_up - (var_Ca_leak_current_by_the_NSR__i_up_leak + ((var_transfer_current_from_NSR_to_JSR__i_tr * 96.47999999999999) * 0.00090129064820823417)); // 'millimole per litre per millisecond'
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__membrane__V = 0.0;
        }
        else
        {
            const double var_chaste_interface__membrane__i_st = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
            d_dt_chaste_interface__membrane__V = (-(var_fast_sodium_current__i_Na + var_time_independent_potassium_current__i_K1 + var_transient_outward_K_current__i_to + var_ultrarapid_delayed_rectifier_K_current__i_Kur + var_rapid_delayed_rectifier_K_current__i_Kr + var_slow_delayed_rectifier_K_current__i_Ks + var_background_currents__i_B_Na + var_background_currents__i_B_Ca + var_sodium_potassium_pump__i_NaK + var_sarcolemmal_calcium_pump_current__i_CaP + var_Na_Ca_exchanger_current__i_NaCa + var_L_type_Ca_channel__i_Ca_L + ((var_chaste_interface__membrane__i_st * var_membrane__Cm) / HeartConfig::Instance()->GetCapacitance()))) / var_membrane__Cm; // 'millivolt per millisecond'
        }
        
        rDY[0] = d_dt_chaste_interface__membrane__V;
        rAlphaOrTau[1] = 1.0 / (var_fast_sodium_current_m_gate__alpha_m + var_fast_sodium_current_m_gate__beta_m);
        rBetaOrInf[1] = var_fast_sodium_current_m_gate__alpha_m / (var_fast_sodium_current_m_gate__alpha_m + var_fast_sodium_current_m_gate__beta_m);
        rAlphaOrTau[2] = 1.0 / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h);
        rBetaOrInf[2] = var_fast_sodium_current_h_gate__alpha_h / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h);
        rAlphaOrTau[3] = 1.0 / (var_fast_sodium_current_j_gate__alpha_j + var_fast_sodium_current_j_gate__beta_j);
        rBetaOrInf[3] = var_fast_sodium_current_j_gate__alpha_j / (var_fast_sodium_current_j_gate__alpha_j + var_fast_sodium_current_j_gate__beta_j);
        rAlphaOrTau[4] = pow((0.65000000000000002 * pow(exp((var_chaste_interface__membrane__V -  -10.0) *  -0.11764705882352941) + exp(((var_chaste_interface__membrane__V -  -10.0) - 40.0) *  -0.016949152542372881),  -1.0)) + (0.65000000000000002 * pow(2.5 + exp(((var_chaste_interface__membrane__V -  -10.0) + 72.0) * 0.058823529411764705),  -1.0)),  -1.0) * 0.33333333333333331;
        rBetaOrInf[4] = pow(1.0 + exp(((var_chaste_interface__membrane__V -  -10.0) + 10.470000000000001) *  -0.057012542759407071),  -1.0);
        rAlphaOrTau[5] = pow(pow(18.530000000000001 + (1.0 * exp(((var_chaste_interface__membrane__V -  -10.0) + 103.7) * 0.091324200913242018)),  -1.0) + pow(35.560000000000002 + (1.0 * exp(((var_chaste_interface__membrane__V -  -10.0) - 8.7400000000000002) *  -0.13440860215053763)),  -1.0),  -1.0) * 0.33333333333333331;
        rBetaOrInf[5] = pow(1.0 + exp(((var_chaste_interface__membrane__V -  -10.0) + 33.100000000000001) * 0.18867924528301888),  -1.0);
        rAlphaOrTau[6] = pow((0.65000000000000002 * pow(exp((var_chaste_interface__membrane__V -  -10.0) *  -0.11764705882352941) + exp(((var_chaste_interface__membrane__V -  -10.0) - 40.0) *  -0.016949152542372881),  -1.0)) + (0.65000000000000002 * pow(2.5 + exp(((var_chaste_interface__membrane__V -  -10.0) + 72.0) * 0.058823529411764705),  -1.0)),  -1.0) * 0.33333333333333331;
        rBetaOrInf[6] = pow(1.0 + exp(((var_chaste_interface__membrane__V -  -10.0) + 20.300000000000001) *  -0.10416666666666667),  -1.0);
        rAlphaOrTau[7] = pow(pow(21.0 + (1.0 * exp(((var_chaste_interface__membrane__V -  -10.0) - 195.0) *  -0.035714285714285712)),  -1.0) + (1.0 / exp(((var_chaste_interface__membrane__V -  -10.0) - 168.0) *  -0.0625)),  -1.0) * 0.33333333333333331;
        rBetaOrInf[7] = pow(1.0 + exp(((var_chaste_interface__membrane__V -  -10.0) - 109.45) * 0.036390101892285295),  -1.0);
        rAlphaOrTau[8] = pow(((fabs(var_chaste_interface__membrane__V + 14.1) < 1e-10) ? 0.0015 : ((0.00029999999999999997 * (var_chaste_interface__membrane__V + 14.1)) / (1.0 - exp((var_chaste_interface__membrane__V + 14.1) *  -0.20000000000000001)))) + ((fabs(var_chaste_interface__membrane__V - 3.3328000000000002) < 1e-10) ? 0.00037836118 : ((7.3898000000000003e-05 * (var_chaste_interface__membrane__V - 3.3328000000000002)) / (exp((var_chaste_interface__membrane__V - 3.3328000000000002) * 0.19517145812596365) - 1.0))),  -1.0);
        rBetaOrInf[8] = pow(1.0 + exp((var_chaste_interface__membrane__V + 14.1) *  -0.15384615384615385),  -1.0);
        rAlphaOrTau[9] = 0.5 * pow(((fabs(var_chaste_interface__membrane__V - 19.899999999999999) < 1e-10) ? 0.00068000000000000005 : ((4.0000000000000003e-05 * (var_chaste_interface__membrane__V - 19.899999999999999)) / (1.0 - exp((var_chaste_interface__membrane__V - 19.899999999999999) *  -0.058823529411764705)))) + ((fabs(var_chaste_interface__membrane__V - 19.899999999999999) < 1e-10) ? 0.00031500000000000001 : ((3.4999999999999997e-05 * (var_chaste_interface__membrane__V - 19.899999999999999)) / (exp((var_chaste_interface__membrane__V - 19.899999999999999) * 0.1111111111111111) - 1.0))),  -1.0);
        rBetaOrInf[9] = pow(1.0 + exp((var_chaste_interface__membrane__V - 19.899999999999999) *  -0.07874015748031496),  -0.5);
        rAlphaOrTau[10] = (fabs(var_chaste_interface__membrane__V + 10.0) < 1e-10) ? (4.5789999999999997 / (1.0 + exp((var_chaste_interface__membrane__V + 10.0) *  -0.16025641025641024))) : ((1.0 - exp((var_chaste_interface__membrane__V + 10.0) *  -0.16025641025641024)) / (0.035000000000000003 * (var_chaste_interface__membrane__V + 10.0) * (1.0 + exp((var_chaste_interface__membrane__V + 10.0) *  -0.16025641025641024))));
        rBetaOrInf[10] = pow(1.0 + exp((var_chaste_interface__membrane__V + 10.0) *  -0.125),  -1.0);
        rAlphaOrTau[11] = 9.0 * pow((0.019699999999999999 * exp( -0.00113569 * pow(var_chaste_interface__membrane__V + 10.0, 2.0))) + 0.02,  -1.0);
        rBetaOrInf[11] = exp((-(var_chaste_interface__membrane__V + 28.0)) * 0.14492753623188406) / (1.0 + exp((-(var_chaste_interface__membrane__V + 28.0)) * 0.14492753623188406));
        rDY[12] = d_dt_chaste_interface__L_type_Ca_channel_f_Ca_gate__f_Ca;
        rDY[13] = d_dt_chaste_interface__Ca_release_current_from_JSR_u_gate__u;
        rDY[14] = d_dt_chaste_interface__Ca_release_current_from_JSR_v_gate__v;
        rAlphaOrTau[15] = (fabs(var_chaste_interface__membrane__V - 7.9000000000000004) < 1e-10) ? 0.92307692307692313 : ((6.0 * (1.0 - exp((-(var_chaste_interface__membrane__V - 7.9000000000000004)) * 0.20000000000000001))) / ((1.0 + (0.29999999999999999 * exp((-(var_chaste_interface__membrane__V - 7.9000000000000004)) * 0.20000000000000001))) * 1.0 * (var_chaste_interface__membrane__V - 7.9000000000000004)));
        rBetaOrInf[15] = 1.0 - pow(1.0 + exp((-(var_chaste_interface__membrane__V - 40.0)) * 0.058823529411764705),  -1.0);
        rDY[16] = d_dt_chaste_interface__intracellular_ion_concentrations__Na_i;
        rDY[17] = d_dt_chaste_interface__intracellular_ion_concentrations__Ca_i;
        rDY[18] = d_dt_chaste_interface__intracellular_ion_concentrations__K_i;
        rDY[19] = d_dt_chaste_interface__intracellular_ion_concentrations__Ca_rel;
        rDY[20] = d_dt_chaste_interface__intracellular_ion_concentrations__Ca_up;
    }
    
    void Dynamiccourtemanche_ramirez_nattel_model_1998FromCellMLRushLarsen::ComputeOneStepExceptVoltage(const std::vector<double> &rDY, const std::vector<double> &rAlphaOrTau, const std::vector<double> &rBetaOrInf)
    {
        std::vector<double>& rY = rGetStateVariables();
        rY[1] = rBetaOrInf[1] + (rY[1] - rBetaOrInf[1])*exp(-mDt/rAlphaOrTau[1]);
        rY[2] = rBetaOrInf[2] + (rY[2] - rBetaOrInf[2])*exp(-mDt/rAlphaOrTau[2]);
        rY[3] = rBetaOrInf[3] + (rY[3] - rBetaOrInf[3])*exp(-mDt/rAlphaOrTau[3]);
        rY[4] = rBetaOrInf[4] + (rY[4] - rBetaOrInf[4])*exp(-mDt/rAlphaOrTau[4]);
        rY[5] = rBetaOrInf[5] + (rY[5] - rBetaOrInf[5])*exp(-mDt/rAlphaOrTau[5]);
        rY[6] = rBetaOrInf[6] + (rY[6] - rBetaOrInf[6])*exp(-mDt/rAlphaOrTau[6]);
        rY[7] = rBetaOrInf[7] + (rY[7] - rBetaOrInf[7])*exp(-mDt/rAlphaOrTau[7]);
        rY[8] = rBetaOrInf[8] + (rY[8] - rBetaOrInf[8])*exp(-mDt/rAlphaOrTau[8]);
        rY[9] = rBetaOrInf[9] + (rY[9] - rBetaOrInf[9])*exp(-mDt/rAlphaOrTau[9]);
        rY[10] = rBetaOrInf[10] + (rY[10] - rBetaOrInf[10])*exp(-mDt/rAlphaOrTau[10]);
        rY[11] = rBetaOrInf[11] + (rY[11] - rBetaOrInf[11])*exp(-mDt/rAlphaOrTau[11]);
        rY[12] += mDt * rDY[12];
        rY[13] += mDt * rDY[13];
        rY[14] += mDt * rDY[14];
        rY[15] = rBetaOrInf[15] + (rY[15] - rBetaOrInf[15])*exp(-mDt/rAlphaOrTau[15]);
        rY[16] += mDt * rDY[16];
        rY[17] += mDt * rDY[17];
        rY[18] += mDt * rDY[18];
        rY[19] += mDt * rDY[19];
        rY[20] += mDt * rDY[20];
    }
    
template<>
void OdeSystemInformation<Dynamiccourtemanche_ramirez_nattel_model_1998FromCellMLRushLarsen>::Initialise(void)
{
    this->mSystemName = "courtemanche_ramirez_nattel_model_1998";
    this->mFreeVariableName = "environment__time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-81.18);

    // rY[1]:
    this->mVariableNames.push_back("fast_sodium_current_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.908e-3);

    // rY[2]:
    this->mVariableNames.push_back("fast_sodium_current_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.649e-1);

    // rY[3]:
    this->mVariableNames.push_back("fast_sodium_current_j_gate__j");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.775e-1);

    // rY[4]:
    this->mVariableNames.push_back("transient_outward_K_current_oa_gate__oa");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.043e-2);

    // rY[5]:
    this->mVariableNames.push_back("transient_outward_K_current_oi_gate__oi");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.992e-1);

    // rY[6]:
    this->mVariableNames.push_back("ultrarapid_delayed_rectifier_K_current_ua_gate__ua");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(4.966e-3);

    // rY[7]:
    this->mVariableNames.push_back("ultrarapid_delayed_rectifier_K_current_ui_gate__ui");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.986e-1);

    // rY[8]:
    this->mVariableNames.push_back("rapid_delayed_rectifier_K_current_xr_gate__xr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.296e-5);

    // rY[9]:
    this->mVariableNames.push_back("slow_delayed_rectifier_K_current_xs_gate__xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.869e-2);

    // rY[10]:
    this->mVariableNames.push_back("L_type_Ca_channel_d_gate__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.367e-4);

    // rY[11]:
    this->mVariableNames.push_back("L_type_Ca_channel_f_gate__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.996e-1);

    // rY[12]:
    this->mVariableNames.push_back("L_type_Ca_channel_f_Ca_gate__f_Ca");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(7.755e-1);

    // rY[13]:
    this->mVariableNames.push_back("Ca_release_current_from_JSR_u_gate__u");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.35e-112);

    // rY[14]:
    this->mVariableNames.push_back("Ca_release_current_from_JSR_v_gate__v");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1);

    // rY[15]:
    this->mVariableNames.push_back("Ca_release_current_from_JSR_w_gate__w");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9992);

    // rY[16]:
    this->mVariableNames.push_back("intracellular_ion_concentrations__Na_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.117e+01);

    // rY[17]:
    this->mVariableNames.push_back("intracellular_ion_concentrations__Ca_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.013e-4);

    // rY[18]:
    this->mVariableNames.push_back("intracellular_ion_concentrations__K_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.39e+02);

    // rY[19]:
    this->mVariableNames.push_back("intracellular_ion_concentrations__Ca_rel");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.488);

    // rY[20]:
    this->mVariableNames.push_back("intracellular_ion_concentrations__Ca_up");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.488);

    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Dynamiccourtemanche_ramirez_nattel_model_1998FromCellMLRushLarsen)
extern "C"
{
    AbstractCardiacCellInterface* MakeCardiacCell(
            boost::shared_ptr<AbstractIvpOdeSolver> pSolver,
            boost::shared_ptr<AbstractStimulusFunction> pStimulus)
    {
        return new Dynamiccourtemanche_ramirez_nattel_model_1998FromCellMLRushLarsen(pSolver, pStimulus);
    }
    
}

