#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: wang_model_2008
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: AnalyticCvode)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "wang_sobie_2008.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"


    boost::shared_ptr<RegularStimulus> Cellwang_sobie_2008FromCellMLCvode::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__stim_amplitude_converted = -80.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        const double var_chaste_interface__membrane__stim_duration = 0.5; // millisecond
        const double var_chaste_interface__membrane__stim_period = 2000.0; // millisecond
        const double var_chaste_interface__membrane__stim_start = 20.0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__stim_amplitude_converted),
                var_chaste_interface__membrane__stim_duration,
                var_chaste_interface__membrane__stim_period,
                var_chaste_interface__membrane__stim_start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }

    double Cellwang_sobie_2008FromCellMLCvode::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Cellwang_sobie_2008FromCellMLCvode::Cellwang_sobie_2008FromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                35,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellwang_sobie_2008FromCellMLCvode>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
        
        NV_Ith_S(this->mParameters, 0) = 30000.0; // (var_membrane__Cli) [micromolar]
        NV_Ith_S(this->mParameters, 1) = 1000.0; // (var_membrane__Cao) [micromolar]
        NV_Ith_S(this->mParameters, 2) = 132000.0; // (var_membrane__Clo) [micromolar]
        NV_Ith_S(this->mParameters, 3) = 5400.0; // (var_membrane__Ko) [micromolar]
        NV_Ith_S(this->mParameters, 4) = 140000.0; // (var_membrane__Nao) [micromolar]
        NV_Ith_S(this->mParameters, 5) = 7.0; // (var_L_type_calcium_current__i_CaL_max) [picoA_per_picoF]
        NV_Ith_S(this->mParameters, 6) = 1.0; // (var_membrane__Cm) [microF_per_cm2]
        NV_Ith_S(this->mParameters, 7) = 10.0; // (var_fast_sodium_current__g_Na) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 8) = 0.1017; // (var_fast_transient_outward_potassium_current__g_Kto_f) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 9) = 0.23499999999999999; // (var_time_independent_potassium_current__g_K1) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 10) = 0.014999999999999999; // (var_non_inactivating_steady_state_potassium_current__g_Kss) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 11) = 1.1699999999999999; // (var_rapid_delayed_rectifier_potassium_current__g_Kr) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 12) = 0.045999999999999999; // (var_slow_delayed_rectifier_potassium_current__g_Ks) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 13) = 0.0047999999999999996; // (var_ultra_rapidly_activating_delayed_rectifier_potassium_current__g_Kur) [milliS_per_microF]
    }

    Cellwang_sobie_2008FromCellMLCvode::~Cellwang_sobie_2008FromCellMLCvode()
    {
    }

    
    double Cellwang_sobie_2008FromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -80.6475
        double var_chaste_interface__calcium_concentration__Cai_converted = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0002049
        double var_chaste_interface__calcium_concentration__Cass = NV_Ith_S(rY, 2);
        // Units: micromolar; Initial value: 0.1867
        double var_chaste_interface__L_type_calcium_current__O = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 4.4776e-12
        double var_chaste_interface__T_type_calcium_current_b_gate__b = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 0.0047
        double var_chaste_interface__T_type_calcium_current_g_gate__g = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 0.902
        double var_chaste_interface__sodium_concentration__Nai = NV_Ith_S(rY, 20);
        // Units: micromolar; Initial value: 21747.0
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.0032
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.9606
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 0.9744
        double var_chaste_interface__potassium_concentration__Ki = NV_Ith_S(rY, 24);
        // Units: micromolar; Initial value: 136450.0
        double var_chaste_interface__fast_transient_outward_potassium_current__ato_f = NV_Ith_S(rY, 25);
        // Units: dimensionless; Initial value: 0.0032
        double var_chaste_interface__fast_transient_outward_potassium_current__ito_f = NV_Ith_S(rY, 26);
        // Units: dimensionless; Initial value: 0.753
        double var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_potassium_current__aur = NV_Ith_S(rY, 27);
        // Units: dimensionless; Initial value: 0.00052471
        double var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_potassium_current__iur = NV_Ith_S(rY, 28);
        // Units: dimensionless; Initial value: 0.9866
        double var_chaste_interface__non_inactivating_steady_state_potassium_current__aKss = NV_Ith_S(rY, 29);
        // Units: dimensionless; Initial value: 0.85
        double var_chaste_interface__slow_delayed_rectifier_potassium_current__nKs = NV_Ith_S(rY, 30);
        // Units: dimensionless; Initial value: 0.0026
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current__O_K = NV_Ith_S(rY, 31);
        // Units: dimensionless; Initial value: 0.0021
        
        const double var_L_type_calcium_current__E_CaL = 63.0; // millivolt
        const double var_L_type_calcium_current__g_CaL = 0.19019; // milliS_per_microF
        const double var_T_type_calcium_current__E_CaT = 50.0; // millivolt
        const double var_T_type_calcium_current__g_CaT = 0.055; // milliS_per_microF
        const double var_calcium_background_current__g_Cab = 0.00025000000000000001; // milliS_per_microF
        const double var_calcium_concentration__Cai = 1000.0 * var_chaste_interface__calcium_concentration__Cai_converted; // micromolar
        const double var_calcium_pump_current__Km_pCa = 0.5; // micromolar
        const double var_calcium_pump_current__i_pCa_max = 0.20000000000000001; // picoA_per_picoF
        const double var_calcium_pump_current__i_pCa = pow(var_calcium_concentration__Cai, 2) * var_calcium_pump_current__i_pCa_max / (pow(var_calcium_concentration__Cai, 2) + pow(var_calcium_pump_current__Km_pCa, 2)); // picoA_per_picoF
        const double var_membrane__F = 96.5; // coulomb_per_millimole
        const double var_membrane__R = 8.3140000000000001; // joule_per_mole_kelvin
        const double var_membrane__T = 298.0; // kelvin
        const double var_calcium_background_current__E_CaN = 0.5 * var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 1) / var_calcium_concentration__Cai) / var_membrane__F; // millivolt
        const double var_L_type_calcium_current__i_CaL = (-var_L_type_calcium_current__E_CaL + var_chaste_interface__membrane__V) * var_chaste_interface__L_type_calcium_current__O * var_L_type_calcium_current__g_CaL; // picoA_per_picoF
        const double var_L_type_calcium_current__i_CaL_converted = HeartConfig::Instance()->GetCapacitance() * var_L_type_calcium_current__i_CaL; // uA_per_cm2
        const double var_T_type_calcium_current__i_CaT = (-var_T_type_calcium_current__E_CaT + var_chaste_interface__membrane__V) * var_T_type_calcium_current__g_CaT * var_chaste_interface__T_type_calcium_current_b_gate__b * var_chaste_interface__T_type_calcium_current_g_gate__g; // picoA_per_picoF
        const double var_calcium_activated_chloride_current__i_ClCa = ((fabs(var_chaste_interface__membrane__V) < 2.5674321243523316e-6) ? (194747.11532096748 * (2.5674321243523316e-6 + var_chaste_interface__membrane__V) * (4.1314062499999994e-14 * pow(var_chaste_interface__calcium_concentration__Cass, 3) * (-NV_Ith_S(mParameters, 0) + NV_Ith_S(mParameters, 2) * exp(9.9999999999999995e-8)) / (pow((1 + 0.25 * var_chaste_interface__calcium_concentration__Cass), 3) * (-1.0 + exp(9.9999999999999995e-8))) + 4.1314062499999994e-14 * pow(var_chaste_interface__calcium_concentration__Cass, 3) * (-NV_Ith_S(mParameters, 0) + NV_Ith_S(mParameters, 2) * exp(-9.9999999999999995e-8)) / (pow((1 + 0.25 * var_chaste_interface__calcium_concentration__Cass), 3) * (-1.0 + exp(-9.9999999999999995e-8)))) - 4.1314062499999994e-14 * pow(var_chaste_interface__calcium_concentration__Cass, 3) * (-NV_Ith_S(mParameters, 0) + NV_Ith_S(mParameters, 2) * exp(-9.9999999999999995e-8)) / (pow((1 + 0.25 * var_chaste_interface__calcium_concentration__Cass), 3) * (-1.0 + exp(-9.9999999999999995e-8)))) : (1.6091588988130313e-8 * pow(var_chaste_interface__calcium_concentration__Cass, 3) * (-NV_Ith_S(mParameters, 0) + NV_Ith_S(mParameters, 2) * exp(0.038949423064193495 * var_chaste_interface__membrane__V)) * var_chaste_interface__membrane__V / (pow((1 + 0.25 * var_chaste_interface__calcium_concentration__Cass), 3) * (-1.0 + exp(0.038949423064193495 * var_chaste_interface__membrane__V))))); // picoA_per_picoF
        const double var_calcium_background_current__i_Cab = (-var_calcium_background_current__E_CaN + var_chaste_interface__membrane__V) * var_calcium_background_current__g_Cab; // picoA_per_picoF
        const double var_fast_transient_outward_potassium_current__E_K = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 3) / var_chaste_interface__potassium_concentration__Ki) / var_membrane__F; // millivolt
        const double var_fast_transient_outward_potassium_current__i_Kto_f = pow(var_chaste_interface__fast_transient_outward_potassium_current__ato_f, 6.5) * (-var_fast_transient_outward_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 8) * var_chaste_interface__fast_transient_outward_potassium_current__ito_f; // picoA_per_picoF
        const double var_fast_transient_outward_potassium_current__i_Kto_f_converted = HeartConfig::Instance()->GetCapacitance() * var_fast_transient_outward_potassium_current__i_Kto_f; // uA_per_cm2
        const double var_non_inactivating_steady_state_potassium_current__i_Kss = (-var_fast_transient_outward_potassium_current__E_K + var_chaste_interface__membrane__V) * var_chaste_interface__non_inactivating_steady_state_potassium_current__aKss * NV_Ith_S(mParameters, 10); // picoA_per_picoF
        const double var_non_inactivating_steady_state_potassium_current__i_Kss_converted = HeartConfig::Instance()->GetCapacitance() * var_non_inactivating_steady_state_potassium_current__i_Kss; // uA_per_cm2
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_fast_transient_outward_potassium_current__E_K + var_chaste_interface__membrane__V) * var_chaste_interface__rapid_delayed_rectifier_potassium_current__O_K * NV_Ith_S(mParameters, 11); // picoA_per_picoF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_rapid_delayed_rectifier_potassium_current__i_Kr; // uA_per_cm2
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = pow(var_chaste_interface__slow_delayed_rectifier_potassium_current__nKs, 2) * (-var_fast_transient_outward_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 12); // picoA_per_picoF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks_converted = HeartConfig::Instance()->GetCapacitance() * var_slow_delayed_rectifier_potassium_current__i_Ks; // uA_per_cm2
        const double var_sodium_background_current__g_Nab = 0.0025999999999999999; // milliS_per_microF
        const double var_sodium_calcium_exchange_current__K_mCa = 1380.0; // micromolar
        const double var_sodium_calcium_exchange_current__K_mNa = 87500.0; // micromolar
        const double var_sodium_calcium_exchange_current__eta = 0.34999999999999998; // dimensionless
        const double var_sodium_calcium_exchange_current__k_NaCa = 907.67999999999995; // picoA_per_picoF
        const double var_sodium_calcium_exchange_current__k_sat = 0.10000000000000001; // dimensionless
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__sodium_concentration__Nai) / var_membrane__F; // millivolt
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 7) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // picoA_per_picoF
        const double var_fast_sodium_current__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na; // uA_per_cm2
        const double var_sodium_background_current__i_Nab = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_sodium_background_current__g_Nab; // picoA_per_picoF
        const double var_sodium_calcium_exchange_current__i_NaCa = (pow(var_chaste_interface__sodium_concentration__Nai, 3) * NV_Ith_S(mParameters, 1) * exp(var_membrane__F * var_chaste_interface__membrane__V * var_sodium_calcium_exchange_current__eta / (var_membrane__R * var_membrane__T)) - pow(NV_Ith_S(mParameters, 4), 3) * var_calcium_concentration__Cai * exp((-1.0 + var_sodium_calcium_exchange_current__eta) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_sodium_calcium_exchange_current__k_NaCa / ((1.0 + var_sodium_calcium_exchange_current__k_sat * exp((-1.0 + var_sodium_calcium_exchange_current__eta) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * (pow(NV_Ith_S(mParameters, 4), 3) + pow(var_sodium_calcium_exchange_current__K_mNa, 3)) * (NV_Ith_S(mParameters, 1) + var_sodium_calcium_exchange_current__K_mCa)); // picoA_per_picoF
        const double var_sodium_potassium_pump_current__Km_Ko = 1500.0; // micromolar
        const double var_sodium_potassium_pump_current__Km_Nai = 21000.0; // micromolar
        const double var_sodium_potassium_pump_current__i_NaK_max = 0.88; // picoA_per_picoF
        const double var_sodium_potassium_pump_current__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(1.4858841010401188e-5 * NV_Ith_S(mParameters, 4)); // dimensionless
        const double var_sodium_potassium_pump_current__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + 0.036499999999999998 * var_sodium_potassium_pump_current__sigma * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // dimensionless
        const double var_sodium_potassium_pump_current__i_NaK = NV_Ith_S(mParameters, 3) * var_sodium_potassium_pump_current__f_NaK * var_sodium_potassium_pump_current__i_NaK_max / ((1.0 + pow((var_sodium_potassium_pump_current__Km_Nai / var_chaste_interface__sodium_concentration__Nai), 1.5)) * (NV_Ith_S(mParameters, 3) + var_sodium_potassium_pump_current__Km_Ko)); // picoA_per_picoF
        const double var_time_independent_potassium_current__i_K1 = (-var_fast_transient_outward_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 3) * NV_Ith_S(mParameters, 9) / ((1.0 + exp(0.089599999999999999 * var_chaste_interface__membrane__V - 0.089599999999999999 * var_fast_transient_outward_potassium_current__E_K)) * (210.0 + NV_Ith_S(mParameters, 3))); // picoA_per_picoF
        const double var_time_independent_potassium_current__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_time_independent_potassium_current__i_K1; // uA_per_cm2
        const double var_ultra_rapidly_activating_delayed_rectifier_potassium_current__i_Kur = (-var_fast_transient_outward_potassium_current__E_K + var_chaste_interface__membrane__V) * var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_potassium_current__aur * NV_Ith_S(mParameters, 13) * var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_potassium_current__iur; // picoA_per_picoF
        const double var_ultra_rapidly_activating_delayed_rectifier_potassium_current__i_Kur_converted = HeartConfig::Instance()->GetCapacitance() * var_ultra_rapidly_activating_delayed_rectifier_potassium_current__i_Kur; // uA_per_cm2
        const double var_chaste_interface__i_ionic = HeartConfig::Instance()->GetCapacitance() * var_T_type_calcium_current__i_CaT + HeartConfig::Instance()->GetCapacitance() * var_calcium_activated_chloride_current__i_ClCa + HeartConfig::Instance()->GetCapacitance() * var_calcium_background_current__i_Cab + HeartConfig::Instance()->GetCapacitance() * var_calcium_pump_current__i_pCa + HeartConfig::Instance()->GetCapacitance() * var_sodium_background_current__i_Nab + HeartConfig::Instance()->GetCapacitance() * var_sodium_calcium_exchange_current__i_NaCa + HeartConfig::Instance()->GetCapacitance() * var_sodium_potassium_pump_current__i_NaK + var_L_type_calcium_current__i_CaL_converted + var_fast_sodium_current__i_Na_converted + var_fast_transient_outward_potassium_current__i_Kto_f_converted + var_non_inactivating_steady_state_potassium_current__i_Kss_converted + var_rapid_delayed_rectifier_potassium_current__i_Kr_converted + var_slow_delayed_rectifier_potassium_current__i_Ks_converted + var_time_independent_potassium_current__i_K1_converted + var_ultra_rapidly_activating_delayed_rectifier_potassium_current__i_Kur_converted; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellwang_sobie_2008FromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -80.6475
        double var_chaste_interface__calcium_concentration__Cai_converted = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0002049
        double var_chaste_interface__calcium_concentration__Cass = NV_Ith_S(rY, 2);
        // Units: micromolar; Initial value: 0.1867
        double var_chaste_interface__calcium_concentration__CaJSR = NV_Ith_S(rY, 3);
        // Units: micromolar; Initial value: 705.5417
        double var_chaste_interface__calcium_concentration__CaNSR = NV_Ith_S(rY, 4);
        // Units: micromolar; Initial value: 703.3063
        double var_chaste_interface__calcium_fluxes__P_RyR = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 2.8603e-14
        double var_chaste_interface__calcium_buffering__LTRPN_Ca = NV_Ith_S(rY, 6);
        // Units: micromolar; Initial value: 8.922
        double var_chaste_interface__calcium_buffering__HTRPN_Ca = NV_Ith_S(rY, 7);
        // Units: micromolar; Initial value: 66.0407
        double var_chaste_interface__ryanodine_receptors__P_O1 = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.0011
        double var_chaste_interface__ryanodine_receptors__P_O2 = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 2.9799e-08
        double var_chaste_interface__ryanodine_receptors__P_C2 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.1003
        double var_chaste_interface__L_type_calcium_current__O = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 4.4776e-12
        double var_chaste_interface__L_type_calcium_current__C2 = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.00016996
        double var_chaste_interface__L_type_calcium_current__C3 = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 1.1754e-08
        double var_chaste_interface__L_type_calcium_current__C4 = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 6.1239e-10
        double var_chaste_interface__L_type_calcium_current__I1 = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 1.545e-09
        double var_chaste_interface__L_type_calcium_current__I2 = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 6.4226e-08
        double var_chaste_interface__L_type_calcium_current__I3 = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 6.5201e-07
        double var_chaste_interface__T_type_calcium_current_b_gate__b = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 0.0047
        double var_chaste_interface__T_type_calcium_current_g_gate__g = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 0.902
        double var_chaste_interface__sodium_concentration__Nai = NV_Ith_S(rY, 20);
        // Units: micromolar; Initial value: 21747.0
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.0032
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.9606
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 0.9744
        double var_chaste_interface__potassium_concentration__Ki = NV_Ith_S(rY, 24);
        // Units: micromolar; Initial value: 136450.0
        double var_chaste_interface__fast_transient_outward_potassium_current__ato_f = NV_Ith_S(rY, 25);
        // Units: dimensionless; Initial value: 0.0032
        double var_chaste_interface__fast_transient_outward_potassium_current__ito_f = NV_Ith_S(rY, 26);
        // Units: dimensionless; Initial value: 0.753
        double var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_potassium_current__aur = NV_Ith_S(rY, 27);
        // Units: dimensionless; Initial value: 0.00052471
        double var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_potassium_current__iur = NV_Ith_S(rY, 28);
        // Units: dimensionless; Initial value: 0.9866
        double var_chaste_interface__non_inactivating_steady_state_potassium_current__aKss = NV_Ith_S(rY, 29);
        // Units: dimensionless; Initial value: 0.85
        double var_chaste_interface__slow_delayed_rectifier_potassium_current__nKs = NV_Ith_S(rY, 30);
        // Units: dimensionless; Initial value: 0.0026
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current__O_K = NV_Ith_S(rY, 31);
        // Units: dimensionless; Initial value: 0.0021
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current__C_K1 = NV_Ith_S(rY, 32);
        // Units: dimensionless; Initial value: 0.0011
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current__C_K2 = NV_Ith_S(rY, 33);
        // Units: dimensionless; Initial value: 0.00083641
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current__I_K = NV_Ith_S(rY, 34);
        // Units: dimensionless; Initial value: 0.00043522

        // Mathematics
        double d_dt_chaste_interface_var_membrane__V;
        const double var_L_type_calcium_current__E_CaL = 63.0; // millivolt
        const double var_L_type_calcium_current__Kpc_half = 20.0; // micromolar
        const double var_L_type_calcium_current__Kpc_max = 0.23324; // per_millisecond
        const double var_L_type_calcium_current__Kpcb = 0.00050000000000000001; // per_millisecond
        const double var_L_type_calcium_current__C1 = 1.0 - var_chaste_interface__L_type_calcium_current__C3 - var_chaste_interface__L_type_calcium_current__C4 - var_chaste_interface__L_type_calcium_current__I1 - var_chaste_interface__L_type_calcium_current__I2 - var_chaste_interface__L_type_calcium_current__I3 - var_chaste_interface__L_type_calcium_current__O - 2 * var_chaste_interface__L_type_calcium_current__C2; // dimensionless
        const double var_L_type_calcium_current__g_CaL = 0.19019; // milliS_per_microF
        const double var_T_type_calcium_current__E_CaT = 50.0; // millivolt
        const double var_T_type_calcium_current__g_CaT = 0.055; // milliS_per_microF
        const double var_calcium_background_current__g_Cab = 0.00025000000000000001; // milliS_per_microF
        const double var_calcium_buffering__HTRPN_tot = 70.0; // micromolar
        const double var_calcium_buffering__LTRPN_tot = 35.0; // micromolar
        const double var_calcium_concentration__CMDN_tot = 25.0; // micromolar
        const double var_calcium_concentration__CSQN_tot = 15000.0; // micromolar
        const double var_calcium_concentration__Cai = 1000.0 * var_chaste_interface__calcium_concentration__Cai_converted; // micromolar
        const double var_L_type_calcium_current__gamma = var_L_type_calcium_current__Kpc_max * var_chaste_interface__calcium_concentration__Cass / (var_L_type_calcium_current__Kpc_half + var_chaste_interface__calcium_concentration__Cass); // per_millisecond
        const double var_calcium_concentration__Km_CMDN = 0.23799999999999999; // micromolar
        const double var_calcium_concentration__Bi = 1 / (1.0 + var_calcium_concentration__CMDN_tot * var_calcium_concentration__Km_CMDN / pow((var_calcium_concentration__Cai + var_calcium_concentration__Km_CMDN), 2)); // dimensionless
        const double var_calcium_concentration__Bss = 1 / (1.0 + var_calcium_concentration__CMDN_tot * var_calcium_concentration__Km_CMDN / pow((var_chaste_interface__calcium_concentration__Cass + var_calcium_concentration__Km_CMDN), 2)); // dimensionless
        const double var_calcium_concentration__Km_CSQN = 800.0; // micromolar
        const double var_calcium_concentration__BJSR = 1 / (1.0 + var_calcium_concentration__CSQN_tot * var_calcium_concentration__Km_CSQN / pow((var_chaste_interface__calcium_concentration__CaJSR + var_calcium_concentration__Km_CSQN), 2)); // dimensionless
        const double var_calcium_fluxes__Km_up = 0.5; // micromolar
        const double var_calcium_fluxes__k_minus_htrpn = 3.1999999999999999e-5; // per_millisecond
        const double var_calcium_fluxes__k_minus_ltrpn = 0.019599999999999999; // per_millisecond
        const double var_calcium_fluxes__k_plus_htrpn = 0.0023700000000000001; // per_micromolar_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__HTRPN_Ca = -var_chaste_interface__calcium_buffering__HTRPN_Ca * var_calcium_fluxes__k_minus_htrpn + (-var_chaste_interface__calcium_buffering__HTRPN_Ca + var_calcium_buffering__HTRPN_tot) * var_calcium_concentration__Cai * var_calcium_fluxes__k_plus_htrpn; // micromolar / millisecond
        const double var_calcium_fluxes__k_plus_ltrpn = 0.0327; // per_micromolar_millisecond
        const double d_dt_chaste_interface_var_calcium_buffering__LTRPN_Ca = -var_chaste_interface__calcium_buffering__LTRPN_Ca * var_calcium_fluxes__k_minus_ltrpn + (-var_chaste_interface__calcium_buffering__LTRPN_Ca + var_calcium_buffering__LTRPN_tot) * var_calcium_concentration__Cai * var_calcium_fluxes__k_plus_ltrpn; // micromolar / millisecond
        const double var_calcium_fluxes__J_trpn = -var_chaste_interface__calcium_buffering__HTRPN_Ca * var_calcium_fluxes__k_minus_htrpn - var_chaste_interface__calcium_buffering__LTRPN_Ca * var_calcium_fluxes__k_minus_ltrpn + (-var_chaste_interface__calcium_buffering__HTRPN_Ca + var_calcium_buffering__HTRPN_tot) * var_calcium_concentration__Cai * var_calcium_fluxes__k_plus_htrpn + (-var_chaste_interface__calcium_buffering__LTRPN_Ca + var_calcium_buffering__LTRPN_tot) * var_calcium_concentration__Cai * var_calcium_fluxes__k_plus_ltrpn; // micromolar_per_millisecond
        const double var_calcium_fluxes__tau_tr = 20.0; // millisecond
        const double var_calcium_fluxes__J_tr = (-var_chaste_interface__calcium_concentration__CaJSR + var_chaste_interface__calcium_concentration__CaNSR) / var_calcium_fluxes__tau_tr; // micromolar_per_millisecond
        const double var_calcium_fluxes__tau_xfer = 8.0; // millisecond
        const double var_calcium_fluxes__J_xfer = (-var_calcium_concentration__Cai + var_chaste_interface__calcium_concentration__Cass) / var_calcium_fluxes__tau_xfer; // micromolar_per_millisecond
        const double var_calcium_fluxes__v1 = 0.45000000000000001; // per_millisecond
        const double var_calcium_fluxes__v2 = 2.088e-5; // per_millisecond
        const double var_calcium_fluxes__J_leak = (-var_calcium_concentration__Cai + var_chaste_interface__calcium_concentration__CaNSR) * var_calcium_fluxes__v2; // micromolar_per_millisecond
        const double var_calcium_fluxes__v3 = 0.089999999999999997; // micromolar_per_millisecond
        const double var_calcium_fluxes__J_up = pow(var_calcium_concentration__Cai, 2) * var_calcium_fluxes__v3 / (pow(var_calcium_concentration__Cai, 2) + pow(var_calcium_fluxes__Km_up, 2)); // micromolar_per_millisecond
        const double var_calcium_concentration__Cai_orig_deriv = (-var_calcium_fluxes__J_trpn - var_calcium_fluxes__J_up + var_calcium_fluxes__J_leak + var_calcium_fluxes__J_xfer) * var_calcium_concentration__Bi; // micromolar / millisecond
        const double d_dt_chaste_interface_var_calcium_concentration__Cai_converted = 0.001 * var_calcium_concentration__Cai_orig_deriv; // millimolar / millisecond
        const double var_calcium_pump_current__Km_pCa = 0.5; // micromolar
        const double var_calcium_pump_current__i_pCa_max = 0.20000000000000001; // picoA_per_picoF
        const double var_calcium_pump_current__i_pCa = pow(var_calcium_concentration__Cai, 2) * var_calcium_pump_current__i_pCa_max / (pow(var_calcium_concentration__Cai, 2) + pow(var_calcium_pump_current__Km_pCa, 2)); // picoA_per_picoF
        const double var_membrane__Acap = 1.541e-5; // cm2
        const double var_membrane__F = 96.5; // coulomb_per_millimole
        const double var_membrane__R = 8.3140000000000001; // joule_per_mole_kelvin
        const double var_membrane__T = 298.0; // kelvin
        const double var_calcium_background_current__E_CaN = 0.5 * var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 1) / var_calcium_concentration__Cai) / var_membrane__F; // millivolt
        const double var_L_type_calcium_current__Kpcf = 13.0 - 13.0 * exp(-2.1025 * pow((1 + 0.068965517241379309 * var_chaste_interface__membrane__V), 2)); // per_millisecond
        const double var_L_type_calcium_current__alpha = 0.40000000000000002 * (1.0 + 0.69999999999999996 * exp(-160.0 * pow((1 + 0.025000000000000001 * var_chaste_interface__membrane__V), 2)) - 0.75 * exp(-pow((1 + 0.050000000000000003 * var_chaste_interface__membrane__V), 2))) * exp(1.2 + 0.10000000000000001 * var_chaste_interface__membrane__V) / (1.0 + 0.12 * exp(1.2 + 0.10000000000000001 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_L_type_calcium_current__beta = 0.050000000000000003 * exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__membrane__V); // per_millisecond
        const double d_dt_chaste_interface_var_L_type_calcium_current__C2 = -var_chaste_interface__L_type_calcium_current__C2 * var_L_type_calcium_current__beta + 2.0 * var_chaste_interface__L_type_calcium_current__C3 * var_L_type_calcium_current__beta + 4.0 * var_L_type_calcium_current__C1 * var_L_type_calcium_current__alpha - 3.0 * var_chaste_interface__L_type_calcium_current__C2 * var_L_type_calcium_current__alpha; // 1 / millisecond
        const double d_dt_chaste_interface_var_L_type_calcium_current__C3 = 3.0 * var_chaste_interface__L_type_calcium_current__C2 * var_L_type_calcium_current__alpha + 3.0 * var_chaste_interface__L_type_calcium_current__C4 * var_L_type_calcium_current__beta - 2.0 * var_chaste_interface__L_type_calcium_current__C3 * var_L_type_calcium_current__alpha - 2.0 * var_chaste_interface__L_type_calcium_current__C3 * var_L_type_calcium_current__beta; // 1 / millisecond
        const double d_dt_chaste_interface_var_L_type_calcium_current__C4 = -var_chaste_interface__L_type_calcium_current__C4 * var_L_type_calcium_current__alpha + 2.0 * var_chaste_interface__L_type_calcium_current__C3 * var_L_type_calcium_current__alpha + 4.0 * var_chaste_interface__L_type_calcium_current__O * var_L_type_calcium_current__beta + 0.0080000000000000002 * var_chaste_interface__L_type_calcium_current__I2 * var_L_type_calcium_current__beta - 3.0 * var_chaste_interface__L_type_calcium_current__C4 * var_L_type_calcium_current__beta - 0.002 * var_chaste_interface__L_type_calcium_current__C4 * var_L_type_calcium_current__Kpcf + 4.0 * var_chaste_interface__L_type_calcium_current__I3 * var_L_type_calcium_current__Kpcb * var_L_type_calcium_current__beta + 0.040000000000000001 * var_chaste_interface__L_type_calcium_current__I1 * var_L_type_calcium_current__Kpcb * var_L_type_calcium_current__beta - var_chaste_interface__L_type_calcium_current__C4 * var_L_type_calcium_current__Kpcf * var_L_type_calcium_current__gamma - 0.01 * var_chaste_interface__L_type_calcium_current__C4 * var_L_type_calcium_current__alpha * var_L_type_calcium_current__gamma; // 1 / millisecond
        const double d_dt_chaste_interface_var_L_type_calcium_current__I1 = var_chaste_interface__L_type_calcium_current__O * var_L_type_calcium_current__gamma - var_chaste_interface__L_type_calcium_current__I1 * var_L_type_calcium_current__Kpcb + 0.001 * var_chaste_interface__L_type_calcium_current__I3 * var_L_type_calcium_current__alpha - 0.001 * var_chaste_interface__L_type_calcium_current__I1 * var_L_type_calcium_current__Kpcf + 0.01 * var_chaste_interface__L_type_calcium_current__C4 * var_L_type_calcium_current__alpha * var_L_type_calcium_current__gamma - 0.040000000000000001 * var_chaste_interface__L_type_calcium_current__I1 * var_L_type_calcium_current__Kpcf * var_L_type_calcium_current__beta; // 1 / millisecond
        const double d_dt_chaste_interface_var_L_type_calcium_current__I2 = var_chaste_interface__L_type_calcium_current__I3 * var_L_type_calcium_current__Kpcb - var_chaste_interface__L_type_calcium_current__I2 * var_L_type_calcium_current__gamma + 0.001 * var_L_type_calcium_current__Kpcf * var_chaste_interface__L_type_calcium_current__O + 0.002 * var_chaste_interface__L_type_calcium_current__C4 * var_L_type_calcium_current__Kpcf - 0.001 * var_chaste_interface__L_type_calcium_current__I2 * var_L_type_calcium_current__alpha - 0.0080000000000000002 * var_chaste_interface__L_type_calcium_current__I2 * var_L_type_calcium_current__beta; // 1 / millisecond
        const double d_dt_chaste_interface_var_L_type_calcium_current__I3 = var_chaste_interface__L_type_calcium_current__I2 * var_L_type_calcium_current__gamma - var_chaste_interface__L_type_calcium_current__I3 * var_L_type_calcium_current__Kpcb + 0.001 * var_chaste_interface__L_type_calcium_current__I1 * var_L_type_calcium_current__Kpcf - 0.001 * var_chaste_interface__L_type_calcium_current__I3 * var_L_type_calcium_current__alpha + var_chaste_interface__L_type_calcium_current__C4 * var_L_type_calcium_current__Kpcf * var_L_type_calcium_current__gamma - 4.0 * var_chaste_interface__L_type_calcium_current__I3 * var_L_type_calcium_current__Kpcb * var_L_type_calcium_current__beta; // 1 / millisecond
        const double d_dt_chaste_interface_var_L_type_calcium_current__O = var_chaste_interface__L_type_calcium_current__C4 * var_L_type_calcium_current__alpha + var_chaste_interface__L_type_calcium_current__I1 * var_L_type_calcium_current__Kpcb - var_chaste_interface__L_type_calcium_current__O * var_L_type_calcium_current__gamma + 0.001 * var_chaste_interface__L_type_calcium_current__I2 * var_L_type_calcium_current__alpha - 4.0 * var_chaste_interface__L_type_calcium_current__O * var_L_type_calcium_current__beta - 0.001 * var_L_type_calcium_current__Kpcf * var_chaste_interface__L_type_calcium_current__O; // 1 / millisecond
        const double var_L_type_calcium_current__i_CaL = (-var_L_type_calcium_current__E_CaL + var_chaste_interface__membrane__V) * var_chaste_interface__L_type_calcium_current__O * var_L_type_calcium_current__g_CaL; // picoA_per_picoF
        const double d_dt_chaste_interface_var_calcium_fluxes__P_RyR = -0.040000000000000001 * var_chaste_interface__calcium_fluxes__P_RyR - 0.10000000000000001 * var_L_type_calcium_current__i_CaL * exp(-0.038580246913580245 * pow((-1 + 0.20000000000000001 * var_chaste_interface__membrane__V), 2)) / NV_Ith_S(mParameters, 5); // 1 / millisecond
        const double var_T_type_calcium_current__i_CaT = (-var_T_type_calcium_current__E_CaT + var_chaste_interface__membrane__V) * var_T_type_calcium_current__g_CaT * var_chaste_interface__T_type_calcium_current_b_gate__b * var_chaste_interface__T_type_calcium_current_g_gate__g; // picoA_per_picoF
        const double var_T_type_calcium_current_b_gate__b_infinity = 1 / (1.0 + exp(-7.8688524590163942 - 0.16393442622950821 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_T_type_calcium_current_b_gate__tau_b = 0.10000000000000001 + 5.4000000000000004 / (1.0 + exp(15.151515151515152 + 0.15151515151515152 * var_chaste_interface__membrane__V)); // millisecond
        const double d_dt_chaste_interface_var_T_type_calcium_current_b_gate__b = (-var_chaste_interface__T_type_calcium_current_b_gate__b + var_T_type_calcium_current_b_gate__b_infinity) / var_T_type_calcium_current_b_gate__tau_b; // 1 / millisecond
        const double var_T_type_calcium_current_g_gate__g_infinity = 1 / (1.0 + exp(10.0 + 0.15151515151515152 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_T_type_calcium_current_g_gate__tau_g = 8.0 + 32.0 / (1.0 + exp(13.0 + 0.20000000000000001 * var_chaste_interface__membrane__V)); // millisecond
        const double d_dt_chaste_interface_var_T_type_calcium_current_g_gate__g = (-var_chaste_interface__T_type_calcium_current_g_gate__g + var_T_type_calcium_current_g_gate__g_infinity) / var_T_type_calcium_current_g_gate__tau_g; // 1 / millisecond
        const double var_calcium_background_current__i_Cab = (-var_calcium_background_current__E_CaN + var_chaste_interface__membrane__V) * var_calcium_background_current__g_Cab; // picoA_per_picoF
        const double var_fast_sodium_current_h_gate__alpha_h = ((var_chaste_interface__membrane__V < -40.0) ? (0.13500000000000001 * exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__membrane__V)) : (0)); // per_millisecond
        const double var_fast_sodium_current_h_gate__beta_h = ((var_chaste_interface__membrane__V < -40.0) ? (310000.0 * exp(0.34999999999999998 * var_chaste_interface__membrane__V) + 3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__membrane__V)) : (7.6923076923076916 / (1.0 + exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_h_gate__h = -(var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h) * var_chaste_interface__fast_sodium_current_h_gate__h + var_fast_sodium_current_h_gate__alpha_h; // 1 / millisecond
        const double var_fast_sodium_current_j_gate__alpha_j = ((var_chaste_interface__membrane__V < -40.0) ? ((37.780000000000001 + var_chaste_interface__membrane__V) * (-127140.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__V) - 3.4740000000000003e-5 * exp(-0.043909999999999998 * var_chaste_interface__membrane__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V))) : (0)); // per_millisecond
        const double var_fast_sodium_current_j_gate__beta_j = ((var_chaste_interface__membrane__V < -40.0) ? (0.1212 * exp(-0.01052 * var_chaste_interface__membrane__V) / (1.0 + exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__membrane__V))) : (0.29999999999999999 * exp(-2.5349999999999999e-7 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.2000000000000002 - 0.10000000000000001 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_j_gate__j = -(var_fast_sodium_current_j_gate__alpha_j + var_fast_sodium_current_j_gate__beta_j) * var_chaste_interface__fast_sodium_current_j_gate__j + var_fast_sodium_current_j_gate__alpha_j; // 1 / millisecond
        const double var_fast_sodium_current_m_gate__alpha_m = ((fabs(47.130000000000003 + var_chaste_interface__membrane__V) < 1.0000000000287557e-6) ? (3.200000000092018e-7 / (1.0 - exp(-1.0000000000287557e-7)) - 499999.99998562218 * (47.129999000000005 + var_chaste_interface__membrane__V) * (-3.200000000092018e-7 / (1.0 - exp(1.0000000000287557e-7)) - 3.200000000092018e-7 / (1.0 - exp(-1.0000000000287557e-7)))) : (0.32000000000000001 * (47.130000000000003 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.7130000000000001 - 0.10000000000000001 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_fast_sodium_current_m_gate__beta_m = 0.080000000000000002 * exp(-0.090909090909090912 * var_chaste_interface__membrane__V); // per_millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_m_gate__m = -(var_fast_sodium_current_m_gate__alpha_m + var_fast_sodium_current_m_gate__beta_m) * var_chaste_interface__fast_sodium_current_m_gate__m + var_fast_sodium_current_m_gate__alpha_m; // 1 / millisecond
        const double var_fast_transient_outward_potassium_current__alpha_a = 0.18064 * exp(1.0731000000000002 + 0.035770000000000003 * var_chaste_interface__membrane__V); // per_millisecond
        const double var_fast_transient_outward_potassium_current__alpha_i = 0.00015200000000000001 * exp(0.2419047619047619 - 0.063492063492063489 * var_chaste_interface__membrane__V) / (1.0 + 0.0067083000000000004 * exp(-8.3841269841269845 - 0.063492063492063489 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_fast_transient_outward_potassium_current__beta_a = 0.39560000000000001 * exp(-1.8711 - 0.062370000000000002 * var_chaste_interface__membrane__V); // per_millisecond
        const double d_dt_chaste_interface_var_fast_transient_outward_potassium_current__ato_f = (1.0 - var_chaste_interface__fast_transient_outward_potassium_current__ato_f) * var_fast_transient_outward_potassium_current__alpha_a - var_chaste_interface__fast_transient_outward_potassium_current__ato_f * var_fast_transient_outward_potassium_current__beta_a; // 1 / millisecond
        const double var_fast_transient_outward_potassium_current__beta_i = 0.00095 * exp(8.3841269841269845 + 0.063492063492063489 * var_chaste_interface__membrane__V) / (1.0 + 0.051334999999999999 * exp(8.3841269841269845 + 0.063492063492063489 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_fast_transient_outward_potassium_current__ito_f_infinity = var_fast_transient_outward_potassium_current__alpha_i / (var_fast_transient_outward_potassium_current__alpha_i + var_fast_transient_outward_potassium_current__beta_i); // dimensionless
        const double var_fast_transient_outward_potassium_current__tau_ito_f = 1 / (0.00015200000000000001 * exp(-1.9285714285714286 - 0.14285714285714285 * var_chaste_interface__membrane__V) / (1.0 + 0.067083000000000004 * exp(-4.7857142857142856 - 0.14285714285714285 * var_chaste_interface__membrane__V)) + 0.00095 * exp(4.7857142857142856 + 0.14285714285714285 * var_chaste_interface__membrane__V) / (1.0 + 0.051334999999999999 * exp(4.7857142857142856 + 0.14285714285714285 * var_chaste_interface__membrane__V))); // millisecond
        const double d_dt_chaste_interface_var_fast_transient_outward_potassium_current__ito_f = (-var_chaste_interface__fast_transient_outward_potassium_current__ito_f + var_fast_transient_outward_potassium_current__ito_f_infinity) / var_fast_transient_outward_potassium_current__tau_ito_f; // 1 / millisecond
        const double var_membrane__VJSR = 1.2e-9; // microlitre
        const double var_membrane__VNSR = 2.0980000000000001e-7; // microlitre
        const double var_membrane__Vmyo = 2.2826e-6; // microlitre
        const double d_dt_chaste_interface_var_calcium_concentration__CaNSR = (-var_calcium_fluxes__J_leak + var_calcium_fluxes__J_up) * var_membrane__Vmyo / var_membrane__VNSR - var_calcium_fluxes__J_tr * var_membrane__VJSR / var_membrane__VNSR; // micromolar / millisecond
        const double var_membrane__Vss = 3.0734000000000002e-8; // microlitre
        const double var_non_inactivating_steady_state_potassium_current__tau_Kss = 13.17 + 39.299999999999997 * exp(-0.086199999999999999 * var_chaste_interface__membrane__V); // millisecond
        const double var_fast_transient_outward_potassium_current__E_K = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 3) / var_chaste_interface__potassium_concentration__Ki) / var_membrane__F; // millivolt
        const double var_fast_transient_outward_potassium_current__i_Kto_f = pow(var_chaste_interface__fast_transient_outward_potassium_current__ato_f, 6.5) * (-var_fast_transient_outward_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 8) * var_chaste_interface__fast_transient_outward_potassium_current__ito_f; // picoA_per_picoF
        const double var_non_inactivating_steady_state_potassium_current__i_Kss = (-var_fast_transient_outward_potassium_current__E_K + var_chaste_interface__membrane__V) * var_chaste_interface__non_inactivating_steady_state_potassium_current__aKss * NV_Ith_S(mParameters, 10); // picoA_per_picoF
        const double var_rapid_delayed_rectifier_potassium_current__C_K0 = 1.0 - var_chaste_interface__rapid_delayed_rectifier_potassium_current__C_K1 - var_chaste_interface__rapid_delayed_rectifier_potassium_current__C_K2 - var_chaste_interface__rapid_delayed_rectifier_potassium_current__I_K - var_chaste_interface__rapid_delayed_rectifier_potassium_current__O_K; // dimensionless
        const double var_rapid_delayed_rectifier_potassium_current__alpha_a0 = 0.022348 * exp(0.01176 * var_chaste_interface__membrane__V); // per_millisecond
        const double var_rapid_delayed_rectifier_potassium_current__alpha_a1 = 0.013733 * exp(0.038198000000000003 * var_chaste_interface__membrane__V); // per_millisecond
        const double var_rapid_delayed_rectifier_potassium_current__alpha_i = 0.090820999999999999 * exp(0.11695499999999999 + 0.023390999999999999 * var_chaste_interface__membrane__V); // per_millisecond
        const double var_rapid_delayed_rectifier_potassium_current__beta_a0 = 0.047002000000000002 * exp(-0.063100000000000003 * var_chaste_interface__membrane__V); // per_millisecond
        const double var_rapid_delayed_rectifier_potassium_current__beta_a1 = 6.8899999999999994e-5 * exp(-0.041779999999999998 * var_chaste_interface__membrane__V); // per_millisecond
        const double var_rapid_delayed_rectifier_potassium_current__beta_i = 0.0064970000000000002 * exp(-0.16339999999999999 - 0.032680000000000001 * var_chaste_interface__membrane__V); // per_millisecond
        const double d_dt_chaste_interface_var_rapid_delayed_rectifier_potassium_current__I_K = var_chaste_interface__rapid_delayed_rectifier_potassium_current__O_K * var_rapid_delayed_rectifier_potassium_current__alpha_i - var_chaste_interface__rapid_delayed_rectifier_potassium_current__I_K * var_rapid_delayed_rectifier_potassium_current__beta_i; // 1 / millisecond
        const double d_dt_chaste_interface_var_rapid_delayed_rectifier_potassium_current__O_K = var_chaste_interface__rapid_delayed_rectifier_potassium_current__C_K2 * var_rapid_delayed_rectifier_potassium_current__alpha_a1 + var_chaste_interface__rapid_delayed_rectifier_potassium_current__I_K * var_rapid_delayed_rectifier_potassium_current__beta_i - var_chaste_interface__rapid_delayed_rectifier_potassium_current__O_K * var_rapid_delayed_rectifier_potassium_current__alpha_i - var_chaste_interface__rapid_delayed_rectifier_potassium_current__O_K * var_rapid_delayed_rectifier_potassium_current__beta_a1; // 1 / millisecond
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_fast_transient_outward_potassium_current__E_K + var_chaste_interface__membrane__V) * var_chaste_interface__rapid_delayed_rectifier_potassium_current__O_K * NV_Ith_S(mParameters, 11); // picoA_per_picoF
        const double var_rapid_delayed_rectifier_potassium_current__kb = 0.036777999999999998; // per_millisecond
        const double var_rapid_delayed_rectifier_potassium_current__kf = 0.023761000000000001; // per_millisecond
        const double d_dt_chaste_interface_var_rapid_delayed_rectifier_potassium_current__C_K1 = var_rapid_delayed_rectifier_potassium_current__C_K0 * var_rapid_delayed_rectifier_potassium_current__alpha_a0 + var_chaste_interface__rapid_delayed_rectifier_potassium_current__C_K2 * var_rapid_delayed_rectifier_potassium_current__kb - var_chaste_interface__rapid_delayed_rectifier_potassium_current__C_K1 * var_rapid_delayed_rectifier_potassium_current__beta_a0 - var_chaste_interface__rapid_delayed_rectifier_potassium_current__C_K1 * var_rapid_delayed_rectifier_potassium_current__kf; // 1 / millisecond
        const double d_dt_chaste_interface_var_rapid_delayed_rectifier_potassium_current__C_K2 = var_chaste_interface__rapid_delayed_rectifier_potassium_current__C_K1 * var_rapid_delayed_rectifier_potassium_current__kf + var_chaste_interface__rapid_delayed_rectifier_potassium_current__O_K * var_rapid_delayed_rectifier_potassium_current__beta_a1 - var_chaste_interface__rapid_delayed_rectifier_potassium_current__C_K2 * var_rapid_delayed_rectifier_potassium_current__alpha_a1 - var_chaste_interface__rapid_delayed_rectifier_potassium_current__C_K2 * var_rapid_delayed_rectifier_potassium_current__kb; // 1 / millisecond
        const double var_calcium_fluxes__J_rel = (-var_chaste_interface__calcium_concentration__Cass + var_chaste_interface__calcium_concentration__CaJSR) * (var_chaste_interface__ryanodine_receptors__P_O1 + var_chaste_interface__ryanodine_receptors__P_O2) * var_chaste_interface__calcium_fluxes__P_RyR * var_calcium_fluxes__v1; // micromolar_per_millisecond
        const double d_dt_chaste_interface_var_calcium_concentration__CaJSR = (-var_calcium_fluxes__J_rel + var_calcium_fluxes__J_xfer) * var_calcium_concentration__BJSR; // micromolar / millisecond
        const double d_dt_chaste_interface_var_calcium_concentration__Cass = (var_calcium_fluxes__J_rel * var_membrane__VJSR / var_membrane__Vss - var_calcium_fluxes__J_xfer * var_membrane__Vmyo / var_membrane__Vss - 0.5 * (-var_T_type_calcium_current__i_CaT + var_L_type_calcium_current__i_CaL + var_calcium_background_current__i_Cab + var_calcium_pump_current__i_pCa) * var_membrane__Acap * NV_Ith_S(mParameters, 6) / (var_membrane__F * var_membrane__Vss)) * var_calcium_concentration__Bss; // micromolar / millisecond
        const double var_ryanodine_receptors__P_C1 = 1.0 - var_chaste_interface__ryanodine_receptors__P_C2 - var_chaste_interface__ryanodine_receptors__P_O1 - var_chaste_interface__ryanodine_receptors__P_O2; // dimensionless
        const double var_ryanodine_receptors__k_minus_a = 0.071249999999999994; // per_millisecond
        const double var_ryanodine_receptors__k_minus_b = 0.96499999999999997; // per_millisecond
        const double var_ryanodine_receptors__k_minus_c = 0.00080000000000000004; // per_millisecond
        const double var_ryanodine_receptors__k_plus_a = 0.0060800000000000003; // micromolar4_per_millisecond
        const double var_ryanodine_receptors__k_plus_b = 0.0040499999999999998; // micromolar3_per_millisecond
        const double var_ryanodine_receptors__k_plus_c = 0.0089999999999999993; // per_millisecond
        const double d_dt_chaste_interface_var_ryanodine_receptors__P_C2 = var_chaste_interface__ryanodine_receptors__P_O1 * var_ryanodine_receptors__k_plus_c - var_chaste_interface__ryanodine_receptors__P_C2 * var_ryanodine_receptors__k_minus_c; // 1 / millisecond
        const double var_ryanodine_receptors__m = 3.0; // dimensionless
        const double d_dt_chaste_interface_var_ryanodine_receptors__P_O2 = -var_chaste_interface__ryanodine_receptors__P_O2 * var_ryanodine_receptors__k_minus_b + pow(var_chaste_interface__calcium_concentration__Cass, var_ryanodine_receptors__m) * var_chaste_interface__ryanodine_receptors__P_O1 * var_ryanodine_receptors__k_plus_b; // 1 / millisecond
        const double var_ryanodine_receptors__n = 4.0; // dimensionless
        const double d_dt_chaste_interface_var_ryanodine_receptors__P_O1 = var_chaste_interface__ryanodine_receptors__P_C2 * var_ryanodine_receptors__k_minus_c + var_chaste_interface__ryanodine_receptors__P_O2 * var_ryanodine_receptors__k_minus_b - var_chaste_interface__ryanodine_receptors__P_O1 * var_ryanodine_receptors__k_minus_a - var_chaste_interface__ryanodine_receptors__P_O1 * var_ryanodine_receptors__k_plus_c + pow(var_chaste_interface__calcium_concentration__Cass, var_ryanodine_receptors__n) * var_ryanodine_receptors__P_C1 * var_ryanodine_receptors__k_plus_a - pow(var_chaste_interface__calcium_concentration__Cass, var_ryanodine_receptors__m) * var_chaste_interface__ryanodine_receptors__P_O1 * var_ryanodine_receptors__k_plus_b; // 1 / millisecond
        const double var_slow_delayed_rectifier_potassium_current__alpha_n = ((fabs(26.5 + var_chaste_interface__membrane__V) < 7.8124999999817923e-7) ? (3.7604140624912359e-12 / (1.0 - exp(-9.9999999999766942e-8)) - 640000.00000149151 * (26.499999218749998 + var_chaste_interface__membrane__V) * (-3.7604140624912359e-12 / (1.0 - exp(9.9999999999766942e-8)) - 3.7604140624912359e-12 / (1.0 - exp(-9.9999999999766942e-8)))) : (4.8133299999999997e-6 * (26.5 + var_chaste_interface__membrane__V) / (1.0 - exp(-3.3919999999999999 - 0.128 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_slow_delayed_rectifier_potassium_current__beta_n = 9.5333299999999997e-5 * exp(-1.0069999999999999 - 0.037999999999999999 * var_chaste_interface__membrane__V); // per_millisecond
        const double d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current__nKs = (1.0 - var_chaste_interface__slow_delayed_rectifier_potassium_current__nKs) * var_slow_delayed_rectifier_potassium_current__alpha_n - var_slow_delayed_rectifier_potassium_current__beta_n * var_chaste_interface__slow_delayed_rectifier_potassium_current__nKs; // 1 / millisecond
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = pow(var_chaste_interface__slow_delayed_rectifier_potassium_current__nKs, 2) * (-var_fast_transient_outward_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 12); // picoA_per_picoF
        const double var_sodium_background_current__g_Nab = 0.0025999999999999999; // milliS_per_microF
        const double var_sodium_calcium_exchange_current__K_mCa = 1380.0; // micromolar
        const double var_sodium_calcium_exchange_current__K_mNa = 87500.0; // micromolar
        const double var_sodium_calcium_exchange_current__eta = 0.34999999999999998; // dimensionless
        const double var_sodium_calcium_exchange_current__k_NaCa = 907.67999999999995; // picoA_per_picoF
        const double var_sodium_calcium_exchange_current__k_sat = 0.10000000000000001; // dimensionless
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__sodium_concentration__Nai) / var_membrane__F; // millivolt
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 7) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // picoA_per_picoF
        const double var_sodium_background_current__i_Nab = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_sodium_background_current__g_Nab; // picoA_per_picoF
        const double var_sodium_calcium_exchange_current__i_NaCa = (pow(var_chaste_interface__sodium_concentration__Nai, 3) * NV_Ith_S(mParameters, 1) * exp(var_membrane__F * var_chaste_interface__membrane__V * var_sodium_calcium_exchange_current__eta / (var_membrane__R * var_membrane__T)) - pow(NV_Ith_S(mParameters, 4), 3) * var_calcium_concentration__Cai * exp((-1.0 + var_sodium_calcium_exchange_current__eta) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_sodium_calcium_exchange_current__k_NaCa / ((1.0 + var_sodium_calcium_exchange_current__k_sat * exp((-1.0 + var_sodium_calcium_exchange_current__eta) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * (pow(NV_Ith_S(mParameters, 4), 3) + pow(var_sodium_calcium_exchange_current__K_mNa, 3)) * (NV_Ith_S(mParameters, 1) + var_sodium_calcium_exchange_current__K_mCa)); // picoA_per_picoF
        const double var_sodium_potassium_pump_current__Km_Ko = 1500.0; // micromolar
        const double var_sodium_potassium_pump_current__Km_Nai = 21000.0; // micromolar
        const double var_sodium_potassium_pump_current__i_NaK_max = 0.88; // picoA_per_picoF
        const double var_sodium_potassium_pump_current__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(1.4858841010401188e-5 * NV_Ith_S(mParameters, 4)); // dimensionless
        const double var_sodium_potassium_pump_current__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + 0.036499999999999998 * var_sodium_potassium_pump_current__sigma * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // dimensionless
        const double var_sodium_potassium_pump_current__i_NaK = NV_Ith_S(mParameters, 3) * var_sodium_potassium_pump_current__f_NaK * var_sodium_potassium_pump_current__i_NaK_max / ((1.0 + pow((var_sodium_potassium_pump_current__Km_Nai / var_chaste_interface__sodium_concentration__Nai), 1.5)) * (NV_Ith_S(mParameters, 3) + var_sodium_potassium_pump_current__Km_Ko)); // picoA_per_picoF
        const double d_dt_chaste_interface_var_sodium_concentration__Nai = (-var_fast_sodium_current__i_Na - var_sodium_background_current__i_Nab - 3.0 * var_sodium_calcium_exchange_current__i_NaCa - 3.0 * var_sodium_potassium_pump_current__i_NaK) * var_membrane__Acap * NV_Ith_S(mParameters, 6) / (var_membrane__F * var_membrane__Vmyo); // micromolar / millisecond
        const double var_time_independent_potassium_current__i_K1 = (-var_fast_transient_outward_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 3) * NV_Ith_S(mParameters, 9) / ((1.0 + exp(0.089599999999999999 * var_chaste_interface__membrane__V - 0.089599999999999999 * var_fast_transient_outward_potassium_current__E_K)) * (210.0 + NV_Ith_S(mParameters, 3))); // picoA_per_picoF
        const double var_ultra_rapidly_activating_delayed_rectifier_potassium_current__ass = 1 / (1.0 + exp(-2.9220779220779218 - 0.12987012987012986 * var_chaste_interface__membrane__V)); // dimensionless
        const double d_dt_chaste_interface_var_non_inactivating_steady_state_potassium_current__aKss = (-var_chaste_interface__non_inactivating_steady_state_potassium_current__aKss + var_ultra_rapidly_activating_delayed_rectifier_potassium_current__ass) / var_non_inactivating_steady_state_potassium_current__tau_Kss; // 1 / millisecond
        const double var_ultra_rapidly_activating_delayed_rectifier_potassium_current__iss = 1 / (1.0 + exp(7.9298245614035094 + 0.17543859649122806 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_ultra_rapidly_activating_delayed_rectifier_potassium_current__i_Kur = (-var_fast_transient_outward_potassium_current__E_K + var_chaste_interface__membrane__V) * var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_potassium_current__aur * NV_Ith_S(mParameters, 13) * var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_potassium_current__iur; // picoA_per_picoF
        const double d_dt_chaste_interface_var_potassium_concentration__Ki = (-var_fast_transient_outward_potassium_current__i_Kto_f - var_non_inactivating_steady_state_potassium_current__i_Kss - var_rapid_delayed_rectifier_potassium_current__i_Kr - var_slow_delayed_rectifier_potassium_current__i_Ks - var_time_independent_potassium_current__i_K1 - var_ultra_rapidly_activating_delayed_rectifier_potassium_current__i_Kur + 2.0 * var_sodium_potassium_pump_current__i_NaK) * var_membrane__Acap * NV_Ith_S(mParameters, 6) / (var_membrane__F * var_membrane__Vmyo); // micromolar / millisecond
        const double var_ultra_rapidly_activating_delayed_rectifier_potassium_current__tau_aur = 2.0579999999999998 + 0.49299999999999999 * exp(-0.062899999999999998 * var_chaste_interface__membrane__V); // millisecond
        const double d_dt_chaste_interface_var_ultra_rapidly_activating_delayed_rectifier_potassium_current__aur = (-var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_potassium_current__aur + var_ultra_rapidly_activating_delayed_rectifier_potassium_current__ass) / var_ultra_rapidly_activating_delayed_rectifier_potassium_current__tau_aur; // 1 / millisecond
        const double var_ultra_rapidly_activating_delayed_rectifier_potassium_current__tau_iur = 1200.0 - 170.0 / (1.0 + exp(7.9298245614035094 + 0.17543859649122806 * var_chaste_interface__membrane__V)); // millisecond
        const double d_dt_chaste_interface_var_ultra_rapidly_activating_delayed_rectifier_potassium_current__iur = (-var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_potassium_current__iur + var_ultra_rapidly_activating_delayed_rectifier_potassium_current__iss) / var_ultra_rapidly_activating_delayed_rectifier_potassium_current__tau_iur; // 1 / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_membrane__V = 0.0;
        }
        else
        {
            const double var_calcium_activated_chloride_current__i_ClCa = ((fabs(var_chaste_interface__membrane__V) < 2.5674321243523316e-6) ? (194747.11532096748 * (2.5674321243523316e-6 + var_chaste_interface__membrane__V) * (4.1314062499999994e-14 * pow(var_chaste_interface__calcium_concentration__Cass, 3) * (-NV_Ith_S(mParameters, 0) + NV_Ith_S(mParameters, 2) * exp(9.9999999999999995e-8)) / (pow((1 + 0.25 * var_chaste_interface__calcium_concentration__Cass), 3) * (-1.0 + exp(9.9999999999999995e-8))) + 4.1314062499999994e-14 * pow(var_chaste_interface__calcium_concentration__Cass, 3) * (-NV_Ith_S(mParameters, 0) + NV_Ith_S(mParameters, 2) * exp(-9.9999999999999995e-8)) / (pow((1 + 0.25 * var_chaste_interface__calcium_concentration__Cass), 3) * (-1.0 + exp(-9.9999999999999995e-8)))) - 4.1314062499999994e-14 * pow(var_chaste_interface__calcium_concentration__Cass, 3) * (-NV_Ith_S(mParameters, 0) + NV_Ith_S(mParameters, 2) * exp(-9.9999999999999995e-8)) / (pow((1 + 0.25 * var_chaste_interface__calcium_concentration__Cass), 3) * (-1.0 + exp(-9.9999999999999995e-8)))) : (1.6091588988130313e-8 * pow(var_chaste_interface__calcium_concentration__Cass, 3) * (-NV_Ith_S(mParameters, 0) + NV_Ith_S(mParameters, 2) * exp(0.038949423064193495 * var_chaste_interface__membrane__V)) * var_chaste_interface__membrane__V / (pow((1 + 0.25 * var_chaste_interface__calcium_concentration__Cass), 3) * (-1.0 + exp(0.038949423064193495 * var_chaste_interface__membrane__V))))); // picoA_per_picoF
            const double var_membrane__i_stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
            const double var_membrane__i_stim = var_membrane__i_stim_converted / HeartConfig::Instance()->GetCapacitance(); // picoA_per_picoF
            d_dt_chaste_interface_var_membrane__V = -var_L_type_calcium_current__i_CaL - var_T_type_calcium_current__i_CaT - var_calcium_activated_chloride_current__i_ClCa - var_calcium_background_current__i_Cab - var_calcium_pump_current__i_pCa - var_fast_sodium_current__i_Na - var_fast_transient_outward_potassium_current__i_Kto_f - var_membrane__i_stim - var_non_inactivating_steady_state_potassium_current__i_Kss - var_rapid_delayed_rectifier_potassium_current__i_Kr - var_slow_delayed_rectifier_potassium_current__i_Ks - var_sodium_background_current__i_Nab - var_sodium_calcium_exchange_current__i_NaCa - var_sodium_potassium_pump_current__i_NaK - var_time_independent_potassium_current__i_K1 - var_ultra_rapidly_activating_delayed_rectifier_potassium_current__i_Kur; // millivolt / millisecond
        }
        
        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_membrane__V;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_calcium_concentration__Cai_converted;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_calcium_concentration__Cass;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_calcium_concentration__CaJSR;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_calcium_concentration__CaNSR;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_calcium_fluxes__P_RyR;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_calcium_buffering__LTRPN_Ca;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_calcium_buffering__HTRPN_Ca;
        NV_Ith_S(rDY,8) = d_dt_chaste_interface_var_ryanodine_receptors__P_O1;
        NV_Ith_S(rDY,9) = d_dt_chaste_interface_var_ryanodine_receptors__P_O2;
        NV_Ith_S(rDY,10) = d_dt_chaste_interface_var_ryanodine_receptors__P_C2;
        NV_Ith_S(rDY,11) = d_dt_chaste_interface_var_L_type_calcium_current__O;
        NV_Ith_S(rDY,12) = d_dt_chaste_interface_var_L_type_calcium_current__C2;
        NV_Ith_S(rDY,13) = d_dt_chaste_interface_var_L_type_calcium_current__C3;
        NV_Ith_S(rDY,14) = d_dt_chaste_interface_var_L_type_calcium_current__C4;
        NV_Ith_S(rDY,15) = d_dt_chaste_interface_var_L_type_calcium_current__I1;
        NV_Ith_S(rDY,16) = d_dt_chaste_interface_var_L_type_calcium_current__I2;
        NV_Ith_S(rDY,17) = d_dt_chaste_interface_var_L_type_calcium_current__I3;
        NV_Ith_S(rDY,18) = d_dt_chaste_interface_var_T_type_calcium_current_b_gate__b;
        NV_Ith_S(rDY,19) = d_dt_chaste_interface_var_T_type_calcium_current_g_gate__g;
        NV_Ith_S(rDY,20) = d_dt_chaste_interface_var_sodium_concentration__Nai;
        NV_Ith_S(rDY,21) = d_dt_chaste_interface_var_fast_sodium_current_m_gate__m;
        NV_Ith_S(rDY,22) = d_dt_chaste_interface_var_fast_sodium_current_h_gate__h;
        NV_Ith_S(rDY,23) = d_dt_chaste_interface_var_fast_sodium_current_j_gate__j;
        NV_Ith_S(rDY,24) = d_dt_chaste_interface_var_potassium_concentration__Ki;
        NV_Ith_S(rDY,25) = d_dt_chaste_interface_var_fast_transient_outward_potassium_current__ato_f;
        NV_Ith_S(rDY,26) = d_dt_chaste_interface_var_fast_transient_outward_potassium_current__ito_f;
        NV_Ith_S(rDY,27) = d_dt_chaste_interface_var_ultra_rapidly_activating_delayed_rectifier_potassium_current__aur;
        NV_Ith_S(rDY,28) = d_dt_chaste_interface_var_ultra_rapidly_activating_delayed_rectifier_potassium_current__iur;
        NV_Ith_S(rDY,29) = d_dt_chaste_interface_var_non_inactivating_steady_state_potassium_current__aKss;
        NV_Ith_S(rDY,30) = d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current__nKs;
        NV_Ith_S(rDY,31) = d_dt_chaste_interface_var_rapid_delayed_rectifier_potassium_current__O_K;
        NV_Ith_S(rDY,32) = d_dt_chaste_interface_var_rapid_delayed_rectifier_potassium_current__C_K1;
        NV_Ith_S(rDY,33) = d_dt_chaste_interface_var_rapid_delayed_rectifier_potassium_current__C_K2;
        NV_Ith_S(rDY,34) = d_dt_chaste_interface_var_rapid_delayed_rectifier_potassium_current__I_K;
    }

    void Cellwang_sobie_2008FromCellMLCvode::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -80.6475
        double var_chaste_interface__calcium_concentration__Cai_converted = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0002049
        double var_chaste_interface__calcium_concentration__Cass = NV_Ith_S(rY, 2);
        // Units: micromolar; Initial value: 0.1867
        double var_chaste_interface__calcium_concentration__CaJSR = NV_Ith_S(rY, 3);
        // Units: micromolar; Initial value: 705.5417
        double var_chaste_interface__calcium_concentration__CaNSR = NV_Ith_S(rY, 4);
        // Units: micromolar; Initial value: 703.3063
        double var_chaste_interface__calcium_fluxes__P_RyR = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 2.8603e-14
        double var_chaste_interface__calcium_buffering__LTRPN_Ca = NV_Ith_S(rY, 6);
        // Units: micromolar; Initial value: 8.922
        double var_chaste_interface__calcium_buffering__HTRPN_Ca = NV_Ith_S(rY, 7);
        // Units: micromolar; Initial value: 66.0407
        double var_chaste_interface__ryanodine_receptors__P_O1 = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.0011
        double var_chaste_interface__ryanodine_receptors__P_O2 = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 2.9799e-08
        double var_chaste_interface__ryanodine_receptors__P_C2 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.1003
        double var_chaste_interface__L_type_calcium_current__O = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 4.4776e-12
        double var_chaste_interface__L_type_calcium_current__C2 = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.00016996
        double var_chaste_interface__L_type_calcium_current__C3 = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 1.1754e-08
        double var_chaste_interface__L_type_calcium_current__C4 = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 6.1239e-10
        double var_chaste_interface__L_type_calcium_current__I1 = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 1.545e-09
        double var_chaste_interface__L_type_calcium_current__I2 = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 6.4226e-08
        double var_chaste_interface__L_type_calcium_current__I3 = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 6.5201e-07
        double var_chaste_interface__T_type_calcium_current_b_gate__b = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 0.0047
        double var_chaste_interface__T_type_calcium_current_g_gate__g = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 0.902
        double var_chaste_interface__sodium_concentration__Nai = NV_Ith_S(rY, 20);
        // Units: micromolar; Initial value: 21747.0
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.0032
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.9606
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 0.9744
        double var_chaste_interface__potassium_concentration__Ki = NV_Ith_S(rY, 24);
        // Units: micromolar; Initial value: 136450.0
        double var_chaste_interface__fast_transient_outward_potassium_current__ato_f = NV_Ith_S(rY, 25);
        // Units: dimensionless; Initial value: 0.0032
        double var_chaste_interface__fast_transient_outward_potassium_current__ito_f = NV_Ith_S(rY, 26);
        // Units: dimensionless; Initial value: 0.753
        double var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_potassium_current__aur = NV_Ith_S(rY, 27);
        // Units: dimensionless; Initial value: 0.00052471
        double var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_potassium_current__iur = NV_Ith_S(rY, 28);
        // Units: dimensionless; Initial value: 0.9866
        double var_chaste_interface__non_inactivating_steady_state_potassium_current__aKss = NV_Ith_S(rY, 29);
        // Units: dimensionless; Initial value: 0.85
        double var_chaste_interface__slow_delayed_rectifier_potassium_current__nKs = NV_Ith_S(rY, 30);
        // Units: dimensionless; Initial value: 0.0026
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current__O_K = NV_Ith_S(rY, 31);
        // Units: dimensionless; Initial value: 0.0021
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current__C_K1 = NV_Ith_S(rY, 32);
        // Units: dimensionless; Initial value: 0.0011
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current__C_K2 = NV_Ith_S(rY, 33);
        // Units: dimensionless; Initial value: 0.00083641
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current__I_K = NV_Ith_S(rY, 34);
        // Units: dimensionless; Initial value: 0.00043522
        const double var_x0 = 1 + 0.25 * var_chaste_interface__calcium_concentration__Cass;
        const double var_x1 = pow(var_x0, (-3));
        const double var_x2 = pow(var_chaste_interface__calcium_concentration__Cass, 3);
        const double var_x3 = var_x1 * var_x2;
        const double var_x4 = 8.0457944940651565e-9 * var_x3;
        const double var_x5 = exp(9.9999999999999995e-8);
        const double var_x6 = -NV_Ith_S(mParameters, 0);
        const double var_x7 = (var_x6 + var_x5 * NV_Ith_S(mParameters, 2)) / (-1.0 + var_x5);
        const double var_x8 = exp(-9.9999999999999995e-8);
        const double var_x9 = (var_x6 + var_x8 * NV_Ith_S(mParameters, 2)) / (-1.0 + var_x8);
        const double var_x10 = fabs(var_chaste_interface__membrane__V) < 2.5674321243523316e-6;
        const double var_x11 = 0.038949423064193495 * var_chaste_interface__membrane__V;
        const double var_x12 = exp(var_x11);
        const double var_x13 = -1.0 + var_x12;
        const double var_x14 = 1 / var_x13;
        const double var_x15 = var_x12 * NV_Ith_S(mParameters, 2);
        const double var_x16 = var_x15 + var_x6;
        const double var_x17 = var_x14 * var_x16;
        const double var_x18 = 6.2675810727380489e-10 * var_x3 * var_chaste_interface__membrane__V;
        const double var_x19 = 0.19019 * var_chaste_interface__L_type_calcium_current__O;
        const double var_x20 = pow(var_chaste_interface__slow_delayed_rectifier_potassium_current__nKs, 2) * NV_Ith_S(mParameters, 12);
        const double var_x21 = var_chaste_interface__non_inactivating_steady_state_potassium_current__aKss * NV_Ith_S(mParameters, 10);
        const double var_x22 = var_chaste_interface__rapid_delayed_rectifier_potassium_current__O_K * NV_Ith_S(mParameters, 11);
        const double var_x23 = var_chaste_interface__T_type_calcium_current_b_gate__b * var_chaste_interface__T_type_calcium_current_g_gate__g;
        const double var_x24 = 0.055 * var_x23;
        const double var_x25 = pow(var_chaste_interface__fast_transient_outward_potassium_current__ato_f, 6.5) * NV_Ith_S(mParameters, 8);
        const double var_x26 = var_x25 * var_chaste_interface__fast_transient_outward_potassium_current__ito_f;
        const double var_x27 = NV_Ith_S(mParameters, 13) * var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_potassium_current__iur;
        const double var_x28 = var_x27 * var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_potassium_current__aur;
        const double var_x29 = 1 / var_chaste_interface__potassium_concentration__Ki;
        const double var_x30 = var_x29 * NV_Ith_S(mParameters, 3);
        const double var_x31 = log(var_x30);
        const double var_x32 = exp(0.089599999999999999 * var_chaste_interface__membrane__V - 2.300419183419689 * var_x31);
        const double var_x33 = 1.0 + var_x32;
        const double var_x34 = NV_Ith_S(mParameters, 9) / (210.0 + NV_Ith_S(mParameters, 3));
        const double var_x35 = var_x34 / var_x33;
        const double var_x36 = var_x35 * NV_Ith_S(mParameters, 3);
        const double var_x37 = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3);
        const double var_x38 = var_x37 * NV_Ith_S(mParameters, 7) * var_chaste_interface__fast_sodium_current_j_gate__j;
        const double var_x39 = var_x38 * var_chaste_interface__fast_sodium_current_h_gate__h;
        const double var_x40 = exp(-0.025317124991725771 * var_chaste_interface__membrane__V);
        const double var_x41 = pow(NV_Ith_S(mParameters, 4), 3);
        const double var_x42 = var_x40 * var_x41;
        const double var_x43 = var_x42 * var_chaste_interface__calcium_concentration__Cai_converted;
        const double var_x44 = NV_Ith_S(mParameters, 1) * exp(0.013632298072467722 * var_chaste_interface__membrane__V);
        const double var_x45 = var_x44 * pow(var_chaste_interface__sodium_concentration__Nai, 3);
        const double var_x46 = 1.0 + 0.10000000000000001 * var_x40;
        const double var_x47 = 1 / ((1380.0 + NV_Ith_S(mParameters, 1)) * (669921875000000.0 + var_x41));
        const double var_x48 = var_x47 / var_x46;
        const double var_x49 = var_x48 * (25.31712499172577 * var_x43 + 0.013632298072467722 * var_x45);
        const double var_x50 = 1 / var_chaste_interface__sodium_concentration__Nai;
        const double var_x51 = pow(var_x50, 1.5);
        const double var_x52 = exp(-0.0038949423064193493 * var_chaste_interface__membrane__V);
        const double var_x53 = exp(1.4858841010401188e-5 * NV_Ith_S(mParameters, 4));
        const double var_x54 = exp(-var_x11);
        const double var_x55 = 1.0 + 0.1245 * var_x52 + 0.036499999999999998 * var_x54 * (-0.14285714285714285 + 0.14285714285714285 * var_x53);
        const double var_x56 = NV_Ith_S(mParameters, 3) / (1500.0 + NV_Ith_S(mParameters, 3));
        const double var_x57 = var_x56 * (0.00048492031714920898 * var_x52 + 0.038949423064193495 * var_x54 * (-0.0052142857142857138 + 0.0052142857142857138 * var_x53)) / (pow(var_x55, 2) * (1.0 + 3043189.1166997822 * var_x51));
        const double var_x58 = var_x40 * var_x47 * (var_x45 - 1000.0 * var_x43) / pow(var_x46, 2);
        const double var_x59 = 25.674321243523316 * var_x31;
        const double var_x60 = -var_x59 + var_chaste_interface__membrane__V;
        const double var_x61 = var_x32 * var_x34 * var_x60 / pow(var_x33, 2);
        const double var_x62 = var_x61 * NV_Ith_S(mParameters, 3);
        const double var_x63 = 1 / var_chaste_interface__calcium_concentration__Cai_converted;
        const double var_x64 = pow(var_chaste_interface__calcium_concentration__Cai_converted, 2);
        const double var_x65 = pow(var_chaste_interface__calcium_concentration__Cai_converted, 3) / pow((2.4999999999999999e-7 + var_x64), 2);
        const double var_x66 = 1 / (0.25 + 1000000.0 * var_x64);
        const double var_x67 = var_x66 * var_chaste_interface__calcium_concentration__Cai_converted;
        const double var_x68 = var_x42 * var_x48;
        const double var_x69 = var_x1 * pow(var_chaste_interface__calcium_concentration__Cass, 2);
        const double var_x70 = 1.239421875e-13 * var_x69;
        const double var_x71 = var_x70 * var_x9;
        const double var_x72 = var_x2 / pow(var_x0, 4);
        const double var_x73 = 3.0985546875e-14 * var_x72;
        const double var_x74 = var_x73 * var_x9;
        const double var_x75 = var_x17 * var_chaste_interface__membrane__V;
        const double var_x76 = 2.75 - 0.055 * var_chaste_interface__membrane__V;
        const double var_x77 = var_x76 * var_chaste_interface__T_type_calcium_current_g_gate__g;
        const double var_x78 = var_x76 * var_chaste_interface__T_type_calcium_current_b_gate__b;
        const double var_x79 = var_x39 * var_x50;
        const double var_x80 = var_x44 * var_x48 * pow(var_chaste_interface__sodium_concentration__Nai, 2);
        const double var_x81 = var_x50 * var_x51 * var_x56 / (var_x55 * pow((3.2860264730588296e-7 + var_x51), 2));
        const double var_x82 = -25.674321243523316 * log(var_x50 * NV_Ith_S(mParameters, 4)) + var_chaste_interface__membrane__V;
        const double var_x83 = var_x82 * NV_Ith_S(mParameters, 7) * var_chaste_interface__fast_sodium_current_h_gate__h;
        const double var_x84 = var_x83 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 2) * var_chaste_interface__fast_sodium_current_j_gate__j;
        const double var_x85 = var_x38 * var_x82;
        const double var_x86 = var_x37 * var_x83;
        const double var_x87 = 25.674321243523316 * var_x29;
        const double var_x88 = var_x30 * var_x35;
        const double var_x89 = var_x30 * var_x61;
        const double var_x90 = var_x60 * pow(var_chaste_interface__fast_transient_outward_potassium_current__ato_f, 5.5) * NV_Ith_S(mParameters, 8) * var_chaste_interface__fast_transient_outward_potassium_current__ito_f;
        const double var_x91 = var_x25 * var_x60;
        const double var_x92 = var_x59 - var_chaste_interface__membrane__V;
        const double var_x93 = var_x27 * var_x92;
        const double var_x94 = var_x92 * var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_potassium_current__aur * NV_Ith_S(mParameters, 13);
        const double var_x95 = var_x92 * NV_Ith_S(mParameters, 10);
        const double var_x96 = var_x60 * NV_Ith_S(mParameters, 12) * var_chaste_interface__slow_delayed_rectifier_potassium_current__nKs;
        const double var_x97 = var_x92 * NV_Ith_S(mParameters, 11);
        const double var_x98 = 32.699999999999996 * var_chaste_interface__calcium_buffering__LTRPN_Ca;
        const double var_x99 = 2.3700000000000001 * var_chaste_interface__calcium_buffering__HTRPN_Ca;
        const double var_x100 = 0.00023799999999999998 + var_chaste_interface__calcium_concentration__Cai_converted;
        const double var_x101 = 1.0 + 5.9499999999999998e-6 / pow(var_x100, 2);
        const double var_x102 = 1 / var_x101;
        const double var_x103 = 0.001 * var_x102;
        const double var_x104 = 0.125 * var_chaste_interface__calcium_concentration__Cass;
        const double var_x105 = var_x64 * var_x66;
        const double var_x106 = 32.699999999999996 * var_chaste_interface__calcium_concentration__Cai_converted;
        const double var_x107 = 2.3700000000000001 * var_chaste_interface__calcium_concentration__Cai_converted;
        const double var_x108 = 0.23799999999999999 + var_chaste_interface__calcium_concentration__Cass;
        const double var_x109 = pow(var_x108, (-2));
        const double var_x110 = 1 / (1.0 + 5.9499999999999993 * var_x109);
        const double var_x111 = var_x110 * NV_Ith_S(mParameters, 6);
        const double var_x112 = 0.017570117784863667 * var_chaste_interface__ryanodine_receptors__P_O1;
        const double var_x113 = 0.017570117784863667 * var_chaste_interface__ryanodine_receptors__P_O2;
        const double var_x114 = -63.0 + var_chaste_interface__membrane__V;
        const double var_x115 = var_chaste_interface__ryanodine_receptors__P_O1 + var_chaste_interface__ryanodine_receptors__P_O2;
        const double var_x116 = var_x115 * (-var_chaste_interface__calcium_concentration__Cass + var_chaste_interface__calcium_concentration__CaJSR) * var_chaste_interface__calcium_fluxes__P_RyR;
        const double var_x117 = var_x110 * var_chaste_interface__calcium_fluxes__P_RyR;
        const double var_x118 = 0.017570117784863667 * var_chaste_interface__calcium_concentration__CaJSR - 0.017570117784863667 * var_chaste_interface__calcium_concentration__Cass;
        const double var_x119 = var_x117 * var_x118;
        const double var_x120 = 2.5979228081438217 * var_x111;
        const double var_x121 = 1 + 0.00125 * var_chaste_interface__calcium_concentration__CaJSR;
        const double var_x122 = pow(var_x121, (-2));
        const double var_x123 = 1 / (1.0 + 18.75 * var_x122);
        const double var_x124 = 0.45000000000000001 * var_chaste_interface__ryanodine_receptors__P_O1;
        const double var_x125 = 0.45000000000000001 * var_chaste_interface__ryanodine_receptors__P_O2;
        const double var_x126 = var_x123 * var_chaste_interface__calcium_fluxes__P_RyR;
        const double var_x127 = 0.45000000000000001 * var_chaste_interface__calcium_concentration__Cass - 0.45000000000000001 * var_chaste_interface__calcium_concentration__CaJSR;
        const double var_x128 = var_x126 * var_x127;
        const double var_x129 = 0.20000000000000001 * var_chaste_interface__membrane__V;
        const double var_x130 = 0.019019000000000001 * exp(-0.038580246913580245 * pow((-1 + var_x129), 2)) / NV_Ith_S(mParameters, 5);
        const double var_x131 = var_x130 * var_chaste_interface__L_type_calcium_current__O;
        const double var_x132 = pow(var_chaste_interface__calcium_concentration__Cass, 3.0);
        const double var_x133 = 0.012149999999999999 * pow(var_chaste_interface__calcium_concentration__Cass, 2.0) * var_chaste_interface__ryanodine_receptors__P_O1;
        const double var_x134 = 0.0040499999999999998 * var_x132;
        const double var_x135 = -0.0060800000000000003 * pow(var_chaste_interface__calcium_concentration__Cass, 4.0);
        const double var_x136 = exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__membrane__V);
        const double var_x137 = 0.015384615384615385 * var_x136 * var_chaste_interface__L_type_calcium_current__O;
        const double var_x138 = -0.28999999999999998 - 0.02 * var_chaste_interface__membrane__V;
        const double var_x139 = exp(-2.1025 * pow((1 + 0.068965517241379309 * var_chaste_interface__membrane__V), 2));
        const double var_x140 = 0.013000000000000001 * var_x139;
        const double var_x141 = var_x138 * var_x140;
        const double var_x142 = var_x141 * var_chaste_interface__L_type_calcium_current__O;
        const double var_x143 = 0.69999999999999996 * exp(-160.0 * pow((1 + 0.025000000000000001 * var_chaste_interface__membrane__V), 2));
        const double var_x144 = 0.75 * exp(-pow((1 + 0.050000000000000003 * var_chaste_interface__membrane__V), 2));
        const double var_x145 = exp(1.2 + 0.10000000000000001 * var_chaste_interface__membrane__V);
        const double var_x146 = 1.0 + 0.12 * var_x145;
        const double var_x147 = var_x145 / var_x146;
        const double var_x148 = var_x147 * (var_x143 * (-8.0 - var_x129) - var_x144 * (-0.10000000000000001 - 0.0050000000000000001 * var_chaste_interface__membrane__V));
        const double var_x149 = var_x148 * var_chaste_interface__L_type_calcium_current__C4;
        const double var_x150 = 0.40000000000000002 * var_x149;
        const double var_x151 = 1.0 + var_x143 - var_x144;
        const double var_x152 = var_x147 * var_x151;
        const double var_x153 = 4.0000000000000003e-5 * var_x152;
        const double var_x154 = var_x153 * var_chaste_interface__L_type_calcium_current__I2;
        const double var_x155 = var_x152 * var_chaste_interface__L_type_calcium_current__C4;
        const double var_x156 = 0.040000000000000001 * var_x155;
        const double var_x157 = 0.00040000000000000002 * var_x148;
        const double var_x158 = var_x157 * var_chaste_interface__L_type_calcium_current__I2;
        const double var_x159 = var_x151 * pow(var_x145, 2) / pow(var_x146, 2);
        const double var_x160 = 4.7999999999999998e-6 * var_x159;
        const double var_x161 = var_x160 * var_chaste_interface__L_type_calcium_current__I2;
        const double var_x162 = var_x159 * var_chaste_interface__L_type_calcium_current__C4;
        const double var_x163 = 0.0048000000000000004 * var_x162;
        const double var_x164 = 1 / (20.0 + var_chaste_interface__calcium_concentration__Cass);
        const double var_x165 = 0.23324 * var_x164;
        const double var_x166 = var_x165 * var_chaste_interface__L_type_calcium_current__O;
        const double var_x167 = var_chaste_interface__calcium_concentration__Cass / pow((1 + 0.050000000000000003 * var_chaste_interface__calcium_concentration__Cass), 2);
        const double var_x168 = 0.00058310000000000002 * var_x167;
        const double var_x169 = var_x168 * var_chaste_interface__L_type_calcium_current__O;
        const double var_x170 = 0.20000000000000001 * var_x136;
        const double var_x171 = var_x165 * var_chaste_interface__calcium_concentration__Cass;
        const double var_x172 = -var_x171;
        const double var_x173 = 0.40000000000000002 * var_x152;
        const double var_x174 = 0.00040000000000000002 * var_x152;
        const double var_x175 = 0.0076923076923076927 * var_x136 * var_chaste_interface__L_type_calcium_current__C3;
        const double var_x176 = 1.0 - var_chaste_interface__L_type_calcium_current__C3 - var_chaste_interface__L_type_calcium_current__C4 - var_chaste_interface__L_type_calcium_current__I1 - var_chaste_interface__L_type_calcium_current__I2 - var_chaste_interface__L_type_calcium_current__I3 - var_chaste_interface__L_type_calcium_current__O - 2 * var_chaste_interface__L_type_calcium_current__C2;
        const double var_x177 = 0.0144 * var_x159 * var_chaste_interface__L_type_calcium_current__C2;
        const double var_x178 = 1.2000000000000002 * var_x148 * var_chaste_interface__L_type_calcium_current__C2;
        const double var_x179 = 0.12000000000000001 * var_x152 * var_chaste_interface__L_type_calcium_current__C2;
        const double var_x180 = -1.6000000000000001 * var_x152;
        const double var_x181 = 0.10000000000000001 * var_x136;
        const double var_x182 = 0.011538461538461539 * var_x136 * var_chaste_interface__L_type_calcium_current__C4;
        const double var_x183 = 0.0096000000000000009 * var_x159 * var_chaste_interface__L_type_calcium_current__C3;
        const double var_x184 = 0.80000000000000004 * var_x148 * var_chaste_interface__L_type_calcium_current__C3;
        const double var_x185 = 0.080000000000000002 * var_x152 * var_chaste_interface__L_type_calcium_current__C3;
        const double var_x186 = 0.80000000000000004 * var_x152;
        const double var_x187 = 0.15000000000000002 * var_x136;
        const double var_x188 = 7.6923076923076936e-6 * var_x136 * var_chaste_interface__L_type_calcium_current__I3;
        const double var_x189 = 3.0769230769230774e-5 * var_x136 * var_chaste_interface__L_type_calcium_current__I2;
        const double var_x190 = var_x136 * var_chaste_interface__L_type_calcium_current__I1;
        const double var_x191 = 0.026000000000000002 * var_x139;
        const double var_x192 = var_x138 * var_chaste_interface__L_type_calcium_current__C4;
        const double var_x193 = var_x191 * var_x192;
        const double var_x194 = var_x164 * var_chaste_interface__calcium_concentration__Cass;
        const double var_x195 = 3.0321199999999999 * var_x139 * var_x192 * var_x194;
        const double var_x196 = 1.1195520000000001e-5 * var_x162 * var_x194;
        const double var_x197 = 0.00093296000000000004 * var_x194;
        const double var_x198 = var_x149 * var_x197;
        const double var_x199 = 9.3296000000000009e-5 * var_x155 * var_x194;
        const double var_x200 = 13.0 - 13.0 * var_x139;
        const double var_x201 = var_x200 * var_chaste_interface__L_type_calcium_current__C4;
        const double var_x202 = var_x165 * var_x201;
        const double var_x203 = var_x168 * var_x201;
        const double var_x204 = 0.00093296000000000004 * var_x155 * var_x164;
        const double var_x205 = 2.3324000000000003e-6 * var_x155 * var_x167;
        const double var_x206 = var_x171 * var_x200;
        const double var_x207 = var_x152 * var_x197;
        const double var_x208 = 0.00040000000000000002 * var_x136;
        const double var_x209 = 0.0001 * var_x136;
        const double var_x210 = var_x141 * var_chaste_interface__L_type_calcium_current__I1;
        const double var_x211 = 0.026000000000000002 * var_x139;
        const double var_x212 = var_x136 * (-0.026000000000000002 + var_x211);
        const double var_x213 = var_x153 * var_chaste_interface__L_type_calcium_current__I3;
        const double var_x214 = var_x157 * var_chaste_interface__L_type_calcium_current__I3;
        const double var_x215 = var_x160 * var_chaste_interface__L_type_calcium_current__I3;
        const double var_x216 = var_x165 * var_chaste_interface__L_type_calcium_current__I2;
        const double var_x217 = var_x168 * var_chaste_interface__L_type_calcium_current__I2;
        const double var_x218 = 0.013000000000000001 - var_x140;
        const double var_x219 = -var_x174;
        const double var_x220 = exp(-7.8688524590163942 - 0.16393442622950821 * var_chaste_interface__membrane__V);
        const double var_x221 = 1.0 + var_x220;
        const double var_x222 = 0.15151515151515152 * var_chaste_interface__membrane__V;
        const double var_x223 = exp(15.151515151515152 + var_x222);
        const double var_x224 = 1.0 + var_x223;
        const double var_x225 = 1 / var_x224;
        const double var_x226 = 1 / (0.10000000000000001 + 5.4000000000000004 * var_x225);
        const double var_x227 = exp(10.0 + var_x222);
        const double var_x228 = 1.0 + var_x227;
        const double var_x229 = exp(13.0 + var_x129);
        const double var_x230 = 1.0 + var_x229;
        const double var_x231 = 1 / var_x230;
        const double var_x232 = 1 / (8.0 + 32.0 * var_x231);
        const double var_x233 = 0.069959309196085367 * NV_Ith_S(mParameters, 6);
        const double var_x234 = 1 / (1.0 - exp(1.0000000000287557e-7));
        const double var_x235 = 1 / (1.0 - exp(-1.0000000000287557e-7));
        const double var_x236 = 47.130000000000003 + var_chaste_interface__membrane__V;
        const double var_x237 = fabs(var_x236) < 1.0000000000287557e-6;
        const double var_x238 = -0.10000000000000001 * var_chaste_interface__membrane__V;
        const double var_x239 = exp(-4.7130000000000001 + var_x238);
        const double var_x240 = 1.0 - var_x239;
        const double var_x241 = 0.32000000000000001 / var_x240;
        const double var_x242 = ((var_x237) ? (0.16 * var_x234 + 0.16 * var_x235) : (var_x241 - 0.032000000000000001 * var_x236 * var_x239 / pow(var_x240, 2)));
        const double var_x243 = exp(-0.090909090909090912 * var_chaste_interface__membrane__V);
        const double var_x244 = 3.200000000092018e-7 * var_x235;
        const double var_x245 = exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__membrane__V);
        const double var_x246 = var_chaste_interface__membrane__V < -40.0;
        const double var_x247 = ((var_x246) ? (-0.019852941176470591 * var_x245) : (0));
        const double var_x248 = exp(0.079000000000000001 * var_chaste_interface__membrane__V);
        const double var_x249 = exp(0.34999999999999998 * var_chaste_interface__membrane__V);
        const double var_x250 = exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__membrane__V);
        const double var_x251 = 1.0 + var_x250;
        const double var_x252 = exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__membrane__V);
        const double var_x253 = 1.0 + var_x252;
        const double var_x254 = exp(-0.01052 * var_chaste_interface__membrane__V);
        const double var_x255 = var_x254 / var_x253;
        const double var_x256 = exp(-3.2000000000000002 + var_x238);
        const double var_x257 = 1.0 + var_x256;
        const double var_x258 = exp(-2.5349999999999999e-7 * var_chaste_interface__membrane__V);
        const double var_x259 = var_x258 / var_x257;
        const double var_x260 = exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V);
        const double var_x261 = 1.0 + var_x260;
        const double var_x262 = 1 / var_x261;
        const double var_x263 = exp(0.24440000000000001 * var_chaste_interface__membrane__V);
        const double var_x264 = exp(-0.043909999999999998 * var_chaste_interface__membrane__V);
        const double var_x265 = -127140.0 * var_x263 - 3.4740000000000003e-5 * var_x264;
        const double var_x266 = var_x262 * var_x265;
        const double var_x267 = 37.780000000000001 + var_chaste_interface__membrane__V;
        const double var_x268 = ((var_x246) ? (var_x266 + var_x262 * var_x267 * (1.5254334000000001e-6 * var_x264 - 31073.016 * var_x263) - 0.311 * var_x260 * var_x265 * var_x267 / pow(var_x261, 2)) : (0));
        const double var_x269 = 1.7961577782752707 * var_x29;
        const double var_x270 = exp(1.0731000000000002 + 0.035770000000000003 * var_chaste_interface__membrane__V);
        const double var_x271 = exp(-1.8711 - 0.062370000000000002 * var_chaste_interface__membrane__V);
        const double var_x272 = 0.063492063492063489 * var_chaste_interface__membrane__V;
        const double var_x273 = -var_x272;
        const double var_x274 = exp(-8.3841269841269845 + var_x273);
        const double var_x275 = 1.0 + 0.0067083000000000004 * var_x274;
        const double var_x276 = exp(0.2419047619047619 + var_x273);
        const double var_x277 = var_x276 / var_x275;
        const double var_x278 = 0.00015200000000000001 * var_x277;
        const double var_x279 = exp(8.3841269841269845 + var_x272);
        const double var_x280 = 1.0 + 0.051334999999999999 * var_x279;
        const double var_x281 = var_x279 / var_x280;
        const double var_x282 = 1 / (var_x278 + 0.00095 * var_x281);
        const double var_x283 = 0.14285714285714285 * var_chaste_interface__membrane__V;
        const double var_x284 = exp(4.7857142857142856 + var_x283);
        const double var_x285 = 1.0 + 0.051334999999999999 * var_x284;
        const double var_x286 = var_x284 / var_x285;
        const double var_x287 = -var_x283;
        const double var_x288 = exp(-4.7857142857142856 + var_x287);
        const double var_x289 = 1.0 + 0.067083000000000004 * var_x288;
        const double var_x290 = exp(-1.9285714285714286 + var_x287);
        const double var_x291 = var_x290 / var_x289;
        const double var_x292 = 0.00015200000000000001 * var_x291;
        const double var_x293 = 0.00095 * var_x286;
        const double var_x294 = 9.6507936507936517e-6 * var_x277;
        const double var_x295 = 6.4740419047619061e-8 * var_x274 * var_x276 / pow(var_x275, 2);
        const double var_x296 = exp(-0.062899999999999998 * var_chaste_interface__membrane__V);
        const double var_x297 = exp(-2.9220779220779218 - 0.12987012987012986 * var_chaste_interface__membrane__V);
        const double var_x298 = 1.0 + var_x297;
        const double var_x299 = 1 / var_x298;
        const double var_x300 = 1 / (2.0579999999999998 + 0.49299999999999999 * var_x296);
        const double var_x301 = 0.12987012987012986 * var_x297 / pow(var_x298, 2);
        const double var_x302 = exp(7.9298245614035094 + 0.17543859649122806 * var_chaste_interface__membrane__V);
        const double var_x303 = 1.0 + var_x302;
        const double var_x304 = 1 / var_x303;
        const double var_x305 = 1 / (1200.0 - 170.0 * var_x304);
        const double var_x306 = var_x302 / pow(var_x303, 2);
        const double var_x307 = exp(-0.086199999999999999 * var_chaste_interface__membrane__V);
        const double var_x308 = 1 / (13.17 + 39.299999999999997 * var_x307);
        const double var_x309 = 1 / (1.0 - exp(9.9999999999766942e-8));
        const double var_x310 = 1 / (1.0 - exp(-9.9999999999766942e-8));
        const double var_x311 = 26.5 + var_chaste_interface__membrane__V;
        const double var_x312 = fabs(var_x311) < 7.8124999999817923e-7;
        const double var_x313 = exp(-3.3919999999999999 - 0.128 * var_chaste_interface__membrane__V);
        const double var_x314 = 1.0 - var_x313;
        const double var_x315 = 4.8133299999999997e-6 / var_x314;
        const double var_x316 = exp(-1.0069999999999999 - 0.037999999999999999 * var_chaste_interface__membrane__V);
        const double var_x317 = 3.7604140624912359e-12 * var_x310;
        const double var_x318 = exp(0.038198000000000003 * var_chaste_interface__membrane__V);
        const double var_x319 = 0.00052457313400000008 * var_x318 * var_chaste_interface__rapid_delayed_rectifier_potassium_current__C_K2;
        const double var_x320 = exp(-0.041779999999999998 * var_chaste_interface__membrane__V);
        const double var_x321 = 2.8786419999999997e-6 * var_x320 * var_chaste_interface__rapid_delayed_rectifier_potassium_current__O_K;
        const double var_x322 = exp(0.11695499999999999 + 0.023390999999999999 * var_chaste_interface__membrane__V);
        const double var_x323 = 0.0021243940109999999 * var_x322 * var_chaste_interface__rapid_delayed_rectifier_potassium_current__O_K;
        const double var_x324 = exp(-0.16339999999999999 - 0.032680000000000001 * var_chaste_interface__membrane__V);
        const double var_x325 = 0.00021232196 * var_x324 * var_chaste_interface__rapid_delayed_rectifier_potassium_current__I_K;
        const double var_x326 = 6.8899999999999994e-5 * var_x320;
        const double var_x327 = 0.090820999999999999 * var_x322;
        const double var_x328 = 0.013733 * var_x318;
        const double var_x329 = 0.0064970000000000002 * var_x324;
        const double var_x330 = exp(0.01176 * var_chaste_interface__membrane__V);
        const double var_x331 = exp(-0.063100000000000003 * var_chaste_interface__membrane__V);
        const double var_x332 = -0.022348 * var_x330;
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = mSetVoltageDerivativeToZero ? 0.0 : (-0.0028500000000000001 - var_x19 - var_x20 - var_x21 - var_x22 - var_x24 - var_x26 - var_x28 - var_x36 - var_x39 - ((var_x10) ? (var_x4 * var_x7 + var_x4 * var_x9) : (1.6091588988130313e-8 * var_x17 * var_x3 + var_x14 * var_x15 * var_x18 - var_x12 * var_x16 * var_x18 / pow(var_x13, 2))) + 0.089599999999999999 * var_x62 - 0.88 * var_x57 - 907.67999999999995 * var_x49 - 2.297984801248965 * var_x58);
        IJth(rJacobian, 2, 0) = var_x111 * (-0.00064948070203595543 + 0.14288575444791021 * var_x23 - 0.49409893888087347 * var_chaste_interface__L_type_calcium_current__O);
        IJth(rJacobian, 5, 0) = -var_x131 - var_x114 * var_x131 * (0.015432098765432098 - 0.0030864197530864196 * var_chaste_interface__membrane__V);
        IJth(rJacobian, 11, 0) = var_x137 + var_x142 + var_x150 + var_x154 + var_x156 + var_x158 - var_x161 - var_x163;
        IJth(rJacobian, 12, 0) = var_x177 - var_x175 - var_x178 - var_x179 + 1.6000000000000001 * var_x148 * var_x176 + 0.16 * var_x152 * var_x176 + 0.0038461538461538464 * var_x136 * var_chaste_interface__L_type_calcium_current__C2 - 0.019200000000000002 * var_x159 * var_x176;
        IJth(rJacobian, 13, 0) = var_x175 + var_x178 + var_x179 + var_x183 - var_x177 - var_x182 - var_x184 - var_x185;
        IJth(rJacobian, 14, 0) = var_x163 + var_x182 + var_x184 + var_x185 + var_x193 + var_x195 + var_x196 - var_x137 - var_x150 - var_x156 - var_x183 - var_x188 - var_x189 - var_x198 - var_x199 - 7.6923076923076936e-8 * var_x190;
        IJth(rJacobian, 15, 0) = var_x198 + var_x199 + var_x210 + var_x213 + var_x214 - var_x196 - var_x215 - 0.076923076923076927 * var_x212 * var_chaste_interface__L_type_calcium_current__I1 + var_x138 * var_x190 * var_x211;
        IJth(rJacobian, 16, 0) = var_x161 + var_x189 - var_x142 - var_x154 - var_x158 - var_x193;
        IJth(rJacobian, 17, 0) = var_x188 + var_x215 - var_x195 - var_x210 - var_x213 - var_x214;
        IJth(rJacobian, 18, 0) = 0.16393442622950821 * var_x220 * var_x226 / pow(var_x221, 2) + 0.028058361391694726 * var_x223 * (-var_chaste_interface__T_type_calcium_current_b_gate__b + 1 / var_x221) / (pow(var_x224, 2) * pow((0.018518518518518517 + var_x225), 2));
        IJth(rJacobian, 19, 0) = -0.15151515151515152 * var_x227 * var_x232 / pow(var_x228, 2) + 0.0062500000000000003 * var_x229 * (-var_chaste_interface__T_type_calcium_current_g_gate__g + 1 / var_x228) / (pow(var_x230, 2) * pow((0.25 + var_x231), 2));
        IJth(rJacobian, 20, 0) = (-0.00018189420390982193 - 0.069959309196085367 * var_x39 - 0.18469257627766536 * var_x57 - 190.50199731330829 * var_x49 - 0.48229628771544331 * var_x58) * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 21, 0) = var_x242 + (-var_x242 + 0.0072727272727272727 * var_x243) * var_chaste_interface__fast_sodium_current_m_gate__m;
        IJth(rJacobian, 22, 0) = var_x247 + (-var_x247 - ((var_x246) ? (0.28123999999999999 * var_x248 + 108500.0 * var_x249) : (0.693000693000693 * var_x250 / pow(var_x251, 2)))) * var_chaste_interface__fast_sodium_current_h_gate__h;
        IJth(rJacobian, 23, 0) = var_x268 + (-var_x268 - ((var_x246) ? (-0.001275024 * var_x255 + 0.016701360000000002 * var_x252 * var_x254 / pow(var_x253, 2)) : (-7.6049999999999996e-8 * var_x259 + 0.029999999999999999 * var_x256 * var_x258 / pow(var_x257, 2)))) * var_chaste_interface__fast_sodium_current_j_gate__j;
        IJth(rJacobian, 24, 0) = (0.12312838418511024 * var_x57 + 0.0062683541039692484 * var_x62 - 0.069959309196085367 * var_x20 - 0.069959309196085367 * var_x21 - 0.069959309196085367 * var_x22 - 0.069959309196085367 * var_x26 - 0.069959309196085367 * var_x28 - 0.069959309196085367 * var_x36) * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 25, 0) = 0.035770000000000003 * var_x270 * (0.18064 - 0.18064 * var_chaste_interface__fast_transient_outward_potassium_current__ato_f) + 0.024673572000000001 * var_x271 * var_chaste_interface__fast_transient_outward_potassium_current__ato_f;
        IJth(rJacobian, 26, 0) = (var_x292 + var_x293) * (var_x282 * var_x295 - var_x282 * var_x294 + 168.42105263157896 * var_x277 * (var_x294 - var_x295 - 6.0317460317460316e-5 * var_x281 + 3.0963968253968251e-6 * pow(var_x279, 2) / pow(var_x280, 2)) / pow((var_x281 + 0.16 * var_x277), 2)) + (-var_chaste_interface__fast_transient_outward_potassium_current__ito_f + var_x278 * var_x282) * (0.00013571428571428572 * var_x286 - 2.1714285714285715e-5 * var_x291 - 6.9668928571428572e-6 * pow(var_x284, 2) / pow(var_x285, 2) + 1.4566594285714287e-6 * var_x288 * var_x290 / pow(var_x289, 2));
        IJth(rJacobian, 27, 0) = var_x300 * var_x301 + 0.0073216139155926159 * var_x296 * (var_x299 - var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_potassium_current__aur) / pow((1 + 0.23955296404275997 * var_x296), 2);
        IJth(rJacobian, 28, 0) = -0.17543859649122806 * var_x305 * var_x306 - 2.0711500974658867e-5 * var_x306 * (-var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_potassium_current__iur + var_x304) / pow((1 - 0.14166666666666666 * var_x304), 2);
        IJth(rJacobian, 29, 0) = var_x301 * var_x308 + 0.0021933842239185751 * var_x307 * (var_x299 - var_chaste_interface__non_inactivating_steady_state_potassium_current__aKss) / pow((0.33511450381679392 + var_x307), 2);
        IJth(rJacobian, 30, 0) = (1.0 - var_chaste_interface__slow_delayed_rectifier_potassium_current__nKs) * ((var_x312) ? (2.4066649999999999e-6 * var_x309 + 2.4066649999999999e-6 * var_x310) : (var_x315 - 6.1610624e-7 * var_x311 * var_x313 / pow(var_x314, 2))) + 3.6226653999999999e-6 * var_x316 * var_chaste_interface__slow_delayed_rectifier_potassium_current__nKs;
        IJth(rJacobian, 31, 0) = var_x319 + var_x321 - var_x323 - var_x325;
        IJth(rJacobian, 32, 0) = 0.01176 * var_x330 * (0.022348 - 0.022348 * var_chaste_interface__rapid_delayed_rectifier_potassium_current__C_K1 - 0.022348 * var_chaste_interface__rapid_delayed_rectifier_potassium_current__C_K2 - 0.022348 * var_chaste_interface__rapid_delayed_rectifier_potassium_current__I_K - 0.022348 * var_chaste_interface__rapid_delayed_rectifier_potassium_current__O_K) + 0.0029658262000000005 * var_x331 * var_chaste_interface__rapid_delayed_rectifier_potassium_current__C_K1;
        IJth(rJacobian, 33, 0) = -var_x319 - var_x321;
        IJth(rJacobian, 34, 0) = var_x323 + var_x325;
        IJth(rJacobian, 0, 1) = mSetVoltageDerivativeToZero ? 0.0 : (0.40000000000000002 * var_x65 + 907679.99999999988 * var_x68 - 0.0032092901554404145 * var_x63 - 400000.0 * var_x67);
        IJth(rJacobian, 1, 1) = var_x103 * (-1435.4208799999999 + var_x98 + var_x99 + 0.17999999999999999 * var_x65 - 180000.0 * var_x67) + 1.1900000000000001e-8 * (var_x104 + 0.019599999999999999 * var_chaste_interface__calcium_buffering__LTRPN_Ca + 3.1999999999999999e-5 * var_chaste_interface__calcium_buffering__HTRPN_Ca + 2.088e-5 * var_chaste_interface__calcium_concentration__CaNSR - 90000.0 * var_x105 - 125.02087999999999 * var_chaste_interface__calcium_concentration__Cai_converted - var_x106 * (35.0 - var_chaste_interface__calcium_buffering__LTRPN_Ca) - var_x107 * (70.0 - var_chaste_interface__calcium_buffering__HTRPN_Ca)) / (pow(var_x100, 3) * pow(var_x101, 2));
        IJth(rJacobian, 2, 1) = var_x110 * (9283.6923277152328 + (1.0391691232575289 * var_x65 - 0.0083374880927700838 * var_x63 - 1039169.1232575288 * var_x67) * NV_Ith_S(mParameters, 6));
        IJth(rJacobian, 3, 1) = -125.0 * var_x123;
        IJth(rJacobian, 4, 1) = 0.22717201143946614 + 1958379.4089609149 * var_x67 - 1.958379408960915 * var_x65;
        IJth(rJacobian, 6, 1) = 1144.5 - var_x98;
        IJth(rJacobian, 7, 1) = 165.90000000000001 - var_x99;
        IJth(rJacobian, 20, 1) = 190501.99731330827 * var_x68 * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 0, 2) = mSetVoltageDerivativeToZero ? 0.0 : (-((var_x10) ? (var_x74 - var_x71 + (0.5 + 194747.11532096748 * var_chaste_interface__membrane__V) * (var_x71 - var_x74 + var_x7 * var_x70 - var_x7 * var_x73)) : (4.8274766964390942e-8 * var_x69 * var_x75 - 1.2068691741097736e-8 * var_x72 * var_x75)));
        IJth(rJacobian, 1, 2) = 0.000125 * var_x102;
        IJth(rJacobian, 2, 2) = var_x110 * (-9.283692327715233 + (-var_x112 - var_x113) * var_chaste_interface__calcium_fluxes__P_RyR) + 0.33613445378151263 * (0.017570117784863667 * var_x116 + 9283.6923277152328 * var_chaste_interface__calcium_concentration__Cai_converted - 9.283692327715233 * var_chaste_interface__calcium_concentration__Cass - 2.5979228081438217 * (0.00025000000000000001 * var_chaste_interface__membrane__V + 200000.0 * var_x105 - 0.0032092901554404145 * log(0.001 * var_x63 * NV_Ith_S(mParameters, 1)) + var_x114 * var_x19 - var_x24 * (-50.0 + var_chaste_interface__membrane__V)) * NV_Ith_S(mParameters, 6)) / (pow(var_x108, 3) * pow((0.16806722689075632 + var_x109), 2));
        IJth(rJacobian, 3, 2) = var_x123 * (0.125 + (var_x124 + var_x125) * var_chaste_interface__calcium_fluxes__P_RyR);
        IJth(rJacobian, 8, 2) = -var_x133 + 0.024320000000000001 * var_x132 * (1.0 - var_chaste_interface__ryanodine_receptors__P_C2 - var_chaste_interface__ryanodine_receptors__P_O1 - var_chaste_interface__ryanodine_receptors__P_O2);
        IJth(rJacobian, 9, 2) = var_x133;
        IJth(rJacobian, 11, 2) = var_x169 - var_x166;
        IJth(rJacobian, 14, 2) = var_x203 + var_x205 - var_x202 - var_x204;
        IJth(rJacobian, 15, 2) = var_x166 + var_x204 - var_x169 - var_x205;
        IJth(rJacobian, 16, 2) = var_x217 - var_x216;
        IJth(rJacobian, 17, 2) = var_x202 + var_x216 - var_x203 - var_x217;
        IJth(rJacobian, 2, 3) = var_x117 * (var_x112 + var_x113);
        IJth(rJacobian, 3, 3) = var_x126 * (-var_x124 - var_x125) + 0.00013333333333333334 * (var_x104 - 0.45000000000000001 * var_x116 - 125.0 * var_chaste_interface__calcium_concentration__Cai_converted) / (pow(var_x121, 3) * pow((0.053333333333333337 + var_x122), 2));
        IJth(rJacobian, 4, 3) = 0.00028598665395614868;
        IJth(rJacobian, 1, 4) = 2.0879999999999999e-8 * var_x102;
        IJth(rJacobian, 4, 4) = -0.0005131586653956148;
        IJth(rJacobian, 2, 5) = var_x110 * var_x115 * var_x118;
        IJth(rJacobian, 3, 5) = var_x115 * var_x123 * var_x127;
        IJth(rJacobian, 5, 5) = -0.040000000000000001;
        IJth(rJacobian, 1, 6) = var_x103 * (0.019599999999999999 + var_x106);
        IJth(rJacobian, 6, 6) = -0.019599999999999999 - var_x106;
        IJth(rJacobian, 1, 7) = var_x103 * (3.1999999999999999e-5 + var_x107);
        IJth(rJacobian, 7, 7) = -3.1999999999999999e-5 - var_x107;
        IJth(rJacobian, 2, 8) = var_x119;
        IJth(rJacobian, 3, 8) = var_x128;
        IJth(rJacobian, 8, 8) = -0.080249999999999988 + var_x135 - var_x134;
        IJth(rJacobian, 9, 8) = var_x134;
        IJth(rJacobian, 10, 8) = 0.0089999999999999993;
        IJth(rJacobian, 2, 9) = var_x119;
        IJth(rJacobian, 3, 9) = var_x128;
        IJth(rJacobian, 8, 9) = 0.96499999999999997 + var_x135;
        IJth(rJacobian, 9, 9) = -0.96499999999999997;
        IJth(rJacobian, 8, 10) = 0.00080000000000000004 + var_x135;
        IJth(rJacobian, 10, 10) = -0.00080000000000000004;
        IJth(rJacobian, 0, 11) = mSetVoltageDerivativeToZero ? 0.0 : (11.98197 - 0.19019 * var_chaste_interface__membrane__V);
        IJth(rJacobian, 2, 11) = var_x111 * (31.128233149495028 - 0.49409893888087347 * var_chaste_interface__membrane__V);
        IJth(rJacobian, 5, 11) = -var_x114 * var_x130;
        IJth(rJacobian, 11, 11) = -0.013000000000000001 + var_x140 + var_x172 - var_x170;
        IJth(rJacobian, 12, 11) = var_x180;
        IJth(rJacobian, 14, 11) = var_x170;
        IJth(rJacobian, 15, 11) = var_x171;
        IJth(rJacobian, 16, 11) = var_x218;
        IJth(rJacobian, 12, 12) = -0.050000000000000003 * var_x136 - 4.4000000000000004 * var_x152;
        IJth(rJacobian, 13, 12) = 1.2000000000000002 * var_x152;
        IJth(rJacobian, 12, 13) = var_x180 + var_x181;
        IJth(rJacobian, 13, 13) = -var_x181 - var_x186;
        IJth(rJacobian, 14, 13) = var_x186;
        IJth(rJacobian, 11, 14) = var_x173;
        IJth(rJacobian, 12, 14) = var_x180;
        IJth(rJacobian, 13, 14) = var_x187;
        IJth(rJacobian, 14, 14) = -0.026000000000000002 + var_x191 - var_x173 - var_x187 - var_x206 - var_x207;
        IJth(rJacobian, 15, 14) = var_x207;
        IJth(rJacobian, 16, 14) = 0.026000000000000002 - var_x191;
        IJth(rJacobian, 17, 14) = var_x206;
        IJth(rJacobian, 11, 15) = 0.00050000000000000001;
        IJth(rJacobian, 12, 15) = var_x180;
        IJth(rJacobian, 14, 15) = 1.0000000000000002e-6 * var_x136;
        IJth(rJacobian, 15, 15) = -0.0135 + var_x140 + var_x212;
        IJth(rJacobian, 17, 15) = var_x218;
        IJth(rJacobian, 11, 16) = var_x174;
        IJth(rJacobian, 12, 16) = var_x180;
        IJth(rJacobian, 14, 16) = var_x208;
        IJth(rJacobian, 16, 16) = var_x172 + var_x219 - var_x208;
        IJth(rJacobian, 17, 16) = var_x171;
        IJth(rJacobian, 12, 17) = var_x180;
        IJth(rJacobian, 14, 17) = var_x209;
        IJth(rJacobian, 15, 17) = var_x174;
        IJth(rJacobian, 16, 17) = 0.00050000000000000001;
        IJth(rJacobian, 17, 17) = -0.00050000000000000001 + var_x219 - var_x209;
        IJth(rJacobian, 0, 18) = mSetVoltageDerivativeToZero ? 0.0 : (var_x77);
        IJth(rJacobian, 2, 18) = -var_x120 * var_x77;
        IJth(rJacobian, 18, 18) = -var_x226;
        IJth(rJacobian, 0, 19) = mSetVoltageDerivativeToZero ? 0.0 : (var_x78);
        IJth(rJacobian, 2, 19) = -var_x120 * var_x78;
        IJth(rJacobian, 19, 19) = -var_x232;
        IJth(rJacobian, 0, 20) = mSetVoltageDerivativeToZero ? 0.0 : (-2723.04 * var_x80 - 4.3375549444376549e-7 * var_x81 - 0.066753235233160624 * var_x50 - 25.674321243523316 * var_x79);
        IJth(rJacobian, 20, 20) = (-571.5059919399248 * var_x80 - 9.1035704253876838e-8 * var_x81 - 0.004670010223515703 * var_x50 - 1.7961577782752707 * var_x79) * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 24, 20) = 6.0690469502584554e-8 * var_x81 * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 0, 21) = mSetVoltageDerivativeToZero ? 0.0 : (-3 * var_x84);
        IJth(rJacobian, 20, 21) = -0.2098779275882561 * var_x84 * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 21, 21) = -((var_x237) ? (var_x244 - 499999.99998562218 * (47.129999000000005 + var_chaste_interface__membrane__V) * (-var_x244 - 3.200000000092018e-7 * var_x234)) : (var_x236 * var_x241)) - 0.080000000000000002 * var_x243;
        IJth(rJacobian, 0, 22) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x85);
        IJth(rJacobian, 20, 22) = -var_x233 * var_x85;
        IJth(rJacobian, 22, 22) = -((var_x246) ? (0.13500000000000001 * var_x245) : (0)) - ((var_x246) ? (310000.0 * var_x249 + 3.5600000000000001 * var_x248) : (7.6923076923076916 / var_x251));
        IJth(rJacobian, 0, 23) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x86);
        IJth(rJacobian, 20, 23) = -var_x233 * var_x86;
        IJth(rJacobian, 23, 23) = -((var_x246) ? (0.1212 * var_x255) : (0.29999999999999999 * var_x259)) - ((var_x246) ? (var_x266 * var_x267) : (0));
        IJth(rJacobian, 0, 24) = mSetVoltageDerivativeToZero ? 0.0 : (2.300419183419689 * var_x89 - 25.674321243523316 * var_x88 - var_x20 * var_x87 - var_x21 * var_x87 - var_x22 * var_x87 - var_x26 * var_x87 - var_x28 * var_x87);
        IJth(rJacobian, 24, 24) = (0.16093573693346425 * var_x89 - 1.7961577782752707 * var_x88 - var_x20 * var_x269 - var_x21 * var_x269 - var_x22 * var_x269 - var_x26 * var_x269 - var_x269 * var_x28) * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 0, 25) = mSetVoltageDerivativeToZero ? 0.0 : (-6.5 * var_x90);
        IJth(rJacobian, 24, 25) = -0.4547355097745549 * var_x90 * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 25, 25) = -0.18064 * var_x270 - 0.39560000000000001 * var_x271;
        IJth(rJacobian, 0, 26) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x91);
        IJth(rJacobian, 24, 26) = -var_x233 * var_x91;
        IJth(rJacobian, 26, 26) = -var_x292 - var_x293;
        IJth(rJacobian, 0, 27) = mSetVoltageDerivativeToZero ? 0.0 : (var_x93);
        IJth(rJacobian, 24, 27) = var_x233 * var_x93;
        IJth(rJacobian, 27, 27) = -var_x300;
        IJth(rJacobian, 0, 28) = mSetVoltageDerivativeToZero ? 0.0 : (var_x94);
        IJth(rJacobian, 24, 28) = var_x233 * var_x94;
        IJth(rJacobian, 28, 28) = -var_x305;
        IJth(rJacobian, 0, 29) = mSetVoltageDerivativeToZero ? 0.0 : (var_x95);
        IJth(rJacobian, 24, 29) = var_x233 * var_x95;
        IJth(rJacobian, 29, 29) = -var_x308;
        IJth(rJacobian, 0, 30) = mSetVoltageDerivativeToZero ? 0.0 : (-2 * var_x96);
        IJth(rJacobian, 24, 30) = -0.13991861839217073 * var_x96 * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 30, 30) = -((var_x312) ? (var_x317 - 640000.00000149151 * (26.499999218749998 + var_chaste_interface__membrane__V) * (-var_x317 - 3.7604140624912359e-12 * var_x309)) : (var_x311 * var_x315)) - 9.5333299999999997e-5 * var_x316;
        IJth(rJacobian, 0, 31) = mSetVoltageDerivativeToZero ? 0.0 : (var_x97);
        IJth(rJacobian, 24, 31) = var_x233 * var_x97;
        IJth(rJacobian, 31, 31) = -var_x326 - var_x327;
        IJth(rJacobian, 32, 31) = var_x332;
        IJth(rJacobian, 33, 31) = var_x326;
        IJth(rJacobian, 34, 31) = var_x327;
        IJth(rJacobian, 32, 32) = -0.023761000000000001 + var_x332 - 0.047002000000000002 * var_x331;
        IJth(rJacobian, 33, 32) = 0.023761000000000001;
        IJth(rJacobian, 31, 33) = var_x328;
        IJth(rJacobian, 32, 33) = 0.036777999999999998 + var_x332;
        IJth(rJacobian, 33, 33) = -0.036777999999999998 - var_x328;
        IJth(rJacobian, 31, 34) = var_x329;
        IJth(rJacobian, 32, 34) = var_x332;
        IJth(rJacobian, 34, 34) = -var_x329;
    }

    N_Vector Cellwang_sobie_2008FromCellMLCvode::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -80.6475
        double var_chaste_interface__calcium_concentration__Cai_converted = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0002049
        double var_chaste_interface__L_type_calcium_current__O = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 4.4776e-12
        double var_chaste_interface__sodium_concentration__Nai = NV_Ith_S(rY, 20);
        // Units: micromolar; Initial value: 21747.0
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.0032
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.9606
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 0.9744
        double var_chaste_interface__potassium_concentration__Ki = NV_Ith_S(rY, 24);
        // Units: micromolar; Initial value: 136450.0
        double var_chaste_interface__fast_transient_outward_potassium_current__ato_f = NV_Ith_S(rY, 25);
        // Units: dimensionless; Initial value: 0.0032
        double var_chaste_interface__fast_transient_outward_potassium_current__ito_f = NV_Ith_S(rY, 26);
        // Units: dimensionless; Initial value: 0.753
        double var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_potassium_current__aur = NV_Ith_S(rY, 27);
        // Units: dimensionless; Initial value: 0.00052471
        double var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_potassium_current__iur = NV_Ith_S(rY, 28);
        // Units: dimensionless; Initial value: 0.9866
        double var_chaste_interface__non_inactivating_steady_state_potassium_current__aKss = NV_Ith_S(rY, 29);
        // Units: dimensionless; Initial value: 0.85
        double var_chaste_interface__slow_delayed_rectifier_potassium_current__nKs = NV_Ith_S(rY, 30);
        // Units: dimensionless; Initial value: 0.0026
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current__O_K = NV_Ith_S(rY, 31);
        // Units: dimensionless; Initial value: 0.0021
        
        // Mathematics
        const double var_L_type_calcium_current__E_CaL = 63.0; // millivolt
        const double var_L_type_calcium_current__g_CaL = 0.19019; // milliS_per_microF
        const double var_membrane__F = 96.5; // coulomb_per_millimole
        const double var_membrane__R = 8.3140000000000001; // joule_per_mole_kelvin
        const double var_membrane__T = 298.0; // kelvin
        const double var_L_type_calcium_current__i_CaL = (-var_L_type_calcium_current__E_CaL + var_chaste_interface__membrane__V) * var_chaste_interface__L_type_calcium_current__O * var_L_type_calcium_current__g_CaL; // picoA_per_picoF
        const double var_L_type_calcium_current__i_CaL_converted = HeartConfig::Instance()->GetCapacitance() * var_L_type_calcium_current__i_CaL; // uA_per_cm2
        const double var_membrane__i_stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
        const double var_fast_transient_outward_potassium_current__E_K = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 3) / var_chaste_interface__potassium_concentration__Ki) / var_membrane__F; // millivolt
        const double var_fast_transient_outward_potassium_current__i_Kto_f = pow(var_chaste_interface__fast_transient_outward_potassium_current__ato_f, 6.5) * (-var_fast_transient_outward_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 8) * var_chaste_interface__fast_transient_outward_potassium_current__ito_f; // picoA_per_picoF
        const double var_fast_transient_outward_potassium_current__i_Kto_f_converted = HeartConfig::Instance()->GetCapacitance() * var_fast_transient_outward_potassium_current__i_Kto_f; // uA_per_cm2
        const double var_non_inactivating_steady_state_potassium_current__i_Kss = (-var_fast_transient_outward_potassium_current__E_K + var_chaste_interface__membrane__V) * var_chaste_interface__non_inactivating_steady_state_potassium_current__aKss * NV_Ith_S(mParameters, 10); // picoA_per_picoF
        const double var_non_inactivating_steady_state_potassium_current__i_Kss_converted = HeartConfig::Instance()->GetCapacitance() * var_non_inactivating_steady_state_potassium_current__i_Kss; // uA_per_cm2
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_fast_transient_outward_potassium_current__E_K + var_chaste_interface__membrane__V) * var_chaste_interface__rapid_delayed_rectifier_potassium_current__O_K * NV_Ith_S(mParameters, 11); // picoA_per_picoF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_rapid_delayed_rectifier_potassium_current__i_Kr; // uA_per_cm2
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = pow(var_chaste_interface__slow_delayed_rectifier_potassium_current__nKs, 2) * (-var_fast_transient_outward_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 12); // picoA_per_picoF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks_converted = HeartConfig::Instance()->GetCapacitance() * var_slow_delayed_rectifier_potassium_current__i_Ks; // uA_per_cm2
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__sodium_concentration__Nai) / var_membrane__F; // millivolt
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 7) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // picoA_per_picoF
        const double var_fast_sodium_current__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na; // uA_per_cm2
        const double var_time_independent_potassium_current__i_K1 = (-var_fast_transient_outward_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 3) * NV_Ith_S(mParameters, 9) / ((1.0 + exp(0.089599999999999999 * var_chaste_interface__membrane__V - 0.089599999999999999 * var_fast_transient_outward_potassium_current__E_K)) * (210.0 + NV_Ith_S(mParameters, 3))); // picoA_per_picoF
        const double var_time_independent_potassium_current__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_time_independent_potassium_current__i_K1; // uA_per_cm2
        const double var_ultra_rapidly_activating_delayed_rectifier_potassium_current__i_Kur = (-var_fast_transient_outward_potassium_current__E_K + var_chaste_interface__membrane__V) * var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_potassium_current__aur * NV_Ith_S(mParameters, 13) * var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_potassium_current__iur; // picoA_per_picoF
        const double var_ultra_rapidly_activating_delayed_rectifier_potassium_current__i_Kur_converted = HeartConfig::Instance()->GetCapacitance() * var_ultra_rapidly_activating_delayed_rectifier_potassium_current__i_Kur; // uA_per_cm2

        N_Vector dqs = N_VNew_Serial(11);
        NV_Ith_S(dqs, 0) = var_chaste_interface__calcium_concentration__Cai_converted;
        NV_Ith_S(dqs, 1) = var_L_type_calcium_current__i_CaL_converted;
        NV_Ith_S(dqs, 2) = var_fast_sodium_current__i_Na_converted;
        NV_Ith_S(dqs, 3) = var_fast_transient_outward_potassium_current__i_Kto_f_converted;
        NV_Ith_S(dqs, 4) = var_time_independent_potassium_current__i_K1_converted;
        NV_Ith_S(dqs, 5) = var_non_inactivating_steady_state_potassium_current__i_Kss_converted;
        NV_Ith_S(dqs, 6) = var_rapid_delayed_rectifier_potassium_current__i_Kr_converted;
        NV_Ith_S(dqs, 7) = var_slow_delayed_rectifier_potassium_current__i_Ks_converted;
        NV_Ith_S(dqs, 8) = var_membrane__i_stim_converted;
        NV_Ith_S(dqs, 9) = var_ultra_rapidly_activating_delayed_rectifier_potassium_current__i_Kur_converted;
        NV_Ith_S(dqs, 10) = var_chaste_interface__environment__time;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellwang_sobie_2008FromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "wang_model_2008";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // NV_Ith_S(rY, 0):
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-80.6475);

    // NV_Ith_S(rY, 1):
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0002049);

    // NV_Ith_S(rY, 2):
    this->mVariableNames.push_back("dyadic_space_calcium_concentration");
    this->mVariableUnits.push_back("micromolar");
    this->mInitialConditions.push_back(0.1867);

    // NV_Ith_S(rY, 3):
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("micromolar");
    this->mInitialConditions.push_back(705.5417);

    // NV_Ith_S(rY, 4):
    this->mVariableNames.push_back("NSR_calcium_concentration");
    this->mVariableUnits.push_back("micromolar");
    this->mInitialConditions.push_back(703.3063);

    // NV_Ith_S(rY, 5):
    this->mVariableNames.push_back("calcium_fluxes__P_RyR");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.8603e-14);

    // NV_Ith_S(rY, 6):
    this->mVariableNames.push_back("calcium_buffering__LTRPN_Ca");
    this->mVariableUnits.push_back("micromolar");
    this->mInitialConditions.push_back(8.922);

    // NV_Ith_S(rY, 7):
    this->mVariableNames.push_back("calcium_buffering__HTRPN_Ca");
    this->mVariableUnits.push_back("micromolar");
    this->mInitialConditions.push_back(66.0407);

    // NV_Ith_S(rY, 8):
    this->mVariableNames.push_back("ryanodine_receptors__P_O1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0011);

    // NV_Ith_S(rY, 9):
    this->mVariableNames.push_back("ryanodine_receptors__P_O2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.9799e-08);

    // NV_Ith_S(rY, 10):
    this->mVariableNames.push_back("ryanodine_receptors__P_C2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.1003);

    // NV_Ith_S(rY, 11):
    this->mVariableNames.push_back("L_type_calcium_current__O");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(4.4776e-12);

    // NV_Ith_S(rY, 12):
    this->mVariableNames.push_back("L_type_calcium_current__C2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00016996);

    // NV_Ith_S(rY, 13):
    this->mVariableNames.push_back("L_type_calcium_current__C3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.1754e-08);

    // NV_Ith_S(rY, 14):
    this->mVariableNames.push_back("L_type_calcium_current__C4");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(6.1239e-10);

    // NV_Ith_S(rY, 15):
    this->mVariableNames.push_back("L_type_calcium_current__I1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.545e-09);

    // NV_Ith_S(rY, 16):
    this->mVariableNames.push_back("L_type_calcium_current__I2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(6.4226e-08);

    // NV_Ith_S(rY, 17):
    this->mVariableNames.push_back("L_type_calcium_current__I3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(6.5201e-07);

    // NV_Ith_S(rY, 18):
    this->mVariableNames.push_back("T_type_calcium_current_b_gate__b");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0047);

    // NV_Ith_S(rY, 19):
    this->mVariableNames.push_back("T_type_calcium_current_g_gate__g");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.902);

    // NV_Ith_S(rY, 20):
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("micromolar");
    this->mInitialConditions.push_back(21747.0);

    // NV_Ith_S(rY, 21):
    this->mVariableNames.push_back("fast_sodium_current_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0032);

    // NV_Ith_S(rY, 22):
    this->mVariableNames.push_back("fast_sodium_current_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9606);

    // NV_Ith_S(rY, 23):
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9744);

    // NV_Ith_S(rY, 24):
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("micromolar");
    this->mInitialConditions.push_back(136450.0);

    // NV_Ith_S(rY, 25):
    this->mVariableNames.push_back("fast_transient_outward_potassium_current__ato_f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0032);

    // NV_Ith_S(rY, 26):
    this->mVariableNames.push_back("fast_transient_outward_potassium_current__ito_f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.753);

    // NV_Ith_S(rY, 27):
    this->mVariableNames.push_back("ultra_rapidly_activating_delayed_rectifier_potassium_current__aur");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00052471);

    // NV_Ith_S(rY, 28):
    this->mVariableNames.push_back("ultra_rapidly_activating_delayed_rectifier_potassium_current__iur");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9866);

    // NV_Ith_S(rY, 29):
    this->mVariableNames.push_back("non_inactivating_steady_state_potassium_current__aKss");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.85);

    // NV_Ith_S(rY, 30):
    this->mVariableNames.push_back("slow_delayed_rectifier_potassium_current__nKs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0026);

    // NV_Ith_S(rY, 31):
    this->mVariableNames.push_back("rapid_delayed_rectifier_potassium_current__O_K");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0021);

    // NV_Ith_S(rY, 32):
    this->mVariableNames.push_back("rapid_delayed_rectifier_potassium_current__C_K1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0011);

    // NV_Ith_S(rY, 33):
    this->mVariableNames.push_back("rapid_delayed_rectifier_potassium_current__C_K2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00083641);

    // NV_Ith_S(rY, 34):
    this->mVariableNames.push_back("rapid_delayed_rectifier_potassium_current__I_K");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00043522);

    // mParameters[0]:
    this->mParameterNames.push_back("cytosolic_chloride_concentration");
    this->mParameterUnits.push_back("micromolar");

    // mParameters[1]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("micromolar");

    // mParameters[2]:
    this->mParameterNames.push_back("extracellular_chloride_concentration");
    this->mParameterUnits.push_back("micromolar");

    // mParameters[3]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("micromolar");

    // mParameters[4]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("micromolar");

    // mParameters[5]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("picoA_per_picoF");

    // mParameters[6]:
    this->mParameterNames.push_back("membrane_capacitance");
    this->mParameterUnits.push_back("microF_per_cm2");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_fast_transient_outward_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_non_inactivating_steady_state_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[12]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[13]:
    this->mParameterNames.push_back("membrane_ultrarapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("cytosolic_calcium_concentration");
    this->mDerivedQuantityUnits.push_back("millimolar");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_fast_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_non_inactivating_steady_state_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("membrane_ultrarapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [10]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellwang_sobie_2008FromCellMLCvode)

#endif // CHASTE_CVODE
