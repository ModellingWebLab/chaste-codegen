#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: clancy_rudy_2002
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: AnalyticCvode)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "clancy_rudy_2002.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"


    boost::shared_ptr<RegularStimulus> Cellclancy_rudy_2002FromCellMLCvode::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__stim_amplitude_converted = -50.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        const double var_chaste_interface__membrane__stim_duration_converted = 2.0; // millisecond
        const double var_chaste_interface__membrane__stim_period_converted = 1000.0; // millisecond
        const double var_chaste_interface__membrane__stim_start_converted = 3000.0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__stim_amplitude_converted),
                var_chaste_interface__membrane__stim_duration_converted,
                var_chaste_interface__membrane__stim_period_converted,
                var_chaste_interface__membrane__stim_start_converted
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }

    double Cellclancy_rudy_2002FromCellMLCvode::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Cellclancy_rudy_2002FromCellMLCvode::Cellclancy_rudy_2002FromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                35,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellclancy_rudy_2002FromCellMLCvode>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
        
        NV_Ith_S(this->mParameters, 0) = 60000.0; // (var_calcium_dynamics__G_rel_max) [per_second]
        NV_Ith_S(this->mParameters, 1) = 1.8; // (var_calcium_dynamics__Cao) [millimolar]
        NV_Ith_S(this->mParameters, 2) = 4.5; // (var_ionic_concentrations__Ko) [millimolar]
        NV_Ith_S(this->mParameters, 3) = 132.0; // (var_ionic_concentrations__Nao) [millimolar]
        NV_Ith_S(this->mParameters, 4) = 1.0; // (var_L_type_Ca_channel__P_scale) [dimensionless]
        NV_Ith_S(this->mParameters, 5) = 0.001; // (var_membrane__Cm) [microF]
        NV_Ith_S(this->mParameters, 6) = 23.5; // (var_fast_sodium_current__g_Na) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 7) = 0.75; // (var_time_independent_potassium_current__g_K1_max) [milliS_per_cm2]
        NV_Ith_S(this->mParameters, 8) = 0.0135; // (var_rapid_delayed_rectifier_potassium_current__g_Kr_max) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 9) = 1.1699999999999999; // (var_slow_delayed_rectifier_potassium_current__g_Ks_max) [dimensionless]
        NV_Ith_S(this->mParameters, 10) = 0.00025000000000000001; // (var_Na_Ca_exchanger__c1) [microA_per_microF]
        NV_Ith_S(this->mParameters, 11) = 1.0; // (var_transient_outward_current__g_to_max) [dimensionless]
    }

    Cellclancy_rudy_2002FromCellMLCvode::~Cellclancy_rudy_2002FromCellMLCvode()
    {
    }

    
    double Cellclancy_rudy_2002FromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__calcium_dynamics__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.000104
        double var_chaste_interface__Na_channel_states__P_O_Na = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 3.756e-13
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 3.289e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.99975
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.000983
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.9942
        double var_chaste_interface__Kr_channel_states__P_O = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 1.104e-10
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.01167
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 0.99998
        double var_chaste_interface__ionic_concentrations__Nai = NV_Ith_S(rY, 33);
        // Units: millimolar; Initial value: 10.532
        double var_chaste_interface__ionic_concentrations__Ki = NV_Ith_S(rY, 34);
        // Units: millimolar; Initial value: 140.557
        
        const double var_ATP_sensitive_potassium_current__ATPi = 3.0; // millimolar
        const double var_ATP_sensitive_potassium_current__hATP = 2.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__i_K_ATP_on = 1.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__kATP = 0.00025000000000000001; // millimolar
        const double var_ATP_sensitive_potassium_current__nATP = 0.23999999999999999; // dimensionless
        const double var_ATP_sensitive_potassium_current__nicholsarea = 5.0000000000000002e-5; // dimensionless
        const double var_ATP_sensitive_potassium_current__g_K_ATP = 0.000193 * var_ATP_sensitive_potassium_current__i_K_ATP_on / var_ATP_sensitive_potassium_current__nicholsarea; // milliS_per_microF
        const double var_ATP_sensitive_potassium_current__pATP = 1 / (1.0 + pow((var_ATP_sensitive_potassium_current__ATPi / var_ATP_sensitive_potassium_current__kATP), var_ATP_sensitive_potassium_current__hATP)); // dimensionless
        const double var_L_type_Ca_channel__gamma_Ki = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ko = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nai = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nao = 0.75; // dimensionless
        const double var_L_type_Ca_channel_f_Ca_gate__Km_Ca = 0.00059999999999999995; // millimolar
        const double var_Na_Ca_exchanger__c2 = 0.0001; // millimolar
        const double var_Na_Ca_exchanger__gamma = 0.14999999999999999; // dimensionless
        const double var_T_type_Ca_channel__g_CaT = 0.050000000000000003; // milliS_per_microF
        const double var_calcium_background_current__g_Cab = 0.003016; // milliS_per_microF
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + var_chaste_interface__calcium_dynamics__Cai / var_L_type_Ca_channel_f_Ca_gate__Km_Ca); // dimensionless
        const double var_ATP_sensitive_potassium_current__GKbaraATP = pow((0.25 * NV_Ith_S(mParameters, 2)), var_ATP_sensitive_potassium_current__nATP) * var_ATP_sensitive_potassium_current__g_K_ATP * var_ATP_sensitive_potassium_current__pATP; // milliS_per_microF
        const double var_membrane__F = 96485.0; // coulomb_per_mole
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_calcium_background_current__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 1) / var_chaste_interface__calcium_dynamics__Cai) / var_membrane__F; // millivolt
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 3) / var_chaste_interface__ionic_concentrations__Nai) / var_membrane__F; // millivolt
        const double var_L_type_Ca_channel__I_CaCa = ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 1) + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) / (-1.0 + exp(9.9999999999999995e-8)) + 1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 1) + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) / (-1.0 + exp(-9.9999999999999995e-8))) - 1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 1) + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) / (-1.0 + exp(-9.9999999999999995e-8))) : (7.8019226357407252 * (-0.34100000000000003 * NV_Ith_S(mParameters, 1) + var_chaste_interface__calcium_dynamics__Cai * exp(0.074871767015605231 * var_chaste_interface__membrane__V)) * NV_Ith_S(mParameters, 4) * var_chaste_interface__membrane__V / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaK = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (1.8621604999999999e-9 * (-0.75 * NV_Ith_S(mParameters, 2) + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) / (-1.0 + exp(9.9999999999999995e-8)) + 1.8621604999999999e-9 * (-0.75 * NV_Ith_S(mParameters, 2) + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) / (-1.0 + exp(-9.9999999999999995e-8))) - 1.8621604999999999e-9 * (-0.75 * NV_Ith_S(mParameters, 2) + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) / (-1.0 + exp(-9.9999999999999995e-8))) : (0.00069711623550831479 * (-0.75 * NV_Ith_S(mParameters, 2) + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(0.037435883507802616 * var_chaste_interface__membrane__V)) * NV_Ith_S(mParameters, 4) * var_chaste_interface__membrane__V / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaNa = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (6.5127375e-9 * (-0.75 * NV_Ith_S(mParameters, 3) + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) / (-1.0 + exp(9.9999999999999995e-8)) + 6.5127375e-9 * (-0.75 * NV_Ith_S(mParameters, 3) + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) / (-1.0 + exp(-9.9999999999999995e-8))) - 6.5127375e-9 * (-0.75 * NV_Ith_S(mParameters, 3) + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) / (-1.0 + exp(-9.9999999999999995e-8))) : (0.0024381008236689767 * (-0.75 * NV_Ith_S(mParameters, 3) + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(0.037435883507802616 * var_chaste_interface__membrane__V)) * NV_Ith_S(mParameters, 4) * var_chaste_interface__membrane__V / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaCa = var_L_type_Ca_channel__I_CaCa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaK = var_L_type_Ca_channel__I_CaK * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaNa = var_L_type_Ca_channel__I_CaNa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_CaCa + var_L_type_Ca_channel__i_CaK + var_L_type_Ca_channel__i_CaNa; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L_converted = HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L; // uA_per_cm2
        const double var_Na_Ca_exchanger__i_NaCa = (-pow(NV_Ith_S(mParameters, 3), 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * NV_Ith_S(mParameters, 1) * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * NV_Ith_S(mParameters, 10) * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) / (1.0 + (pow(NV_Ith_S(mParameters, 3), 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * NV_Ith_S(mParameters, 1) * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_Na_Ca_exchanger__c2 * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // microA_per_microF
        const double var_Na_Ca_exchanger__i_NaCa_converted = HeartConfig::Instance()->GetCapacitance() * var_Na_Ca_exchanger__i_NaCa; // uA_per_cm2
        const double var_T_type_Ca_channel__i_Ca_T = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2) * (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_T_type_Ca_channel__g_CaT * var_chaste_interface__T_type_Ca_channel_g_gate__g; // microA_per_microF
        const double var_calcium_background_current__i_Ca_b = (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_calcium_background_current__g_Cab; // microA_per_microF
        const double var_fast_sodium_current__i_Na = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__Na_channel_states__P_O_Na * NV_Ith_S(mParameters, 6); // microA_per_microF
        const double var_fast_sodium_current__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na; // uA_per_cm2
        const double var_non_specific_calcium_activated_current__K_m_ns_Ca = 0.0011999999999999999; // millimolar
        const double var_non_specific_calcium_activated_current__P_ns_Ca = 0; // cm_per_second
        const double var_non_specific_calcium_activated_current__I_ns_K = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * NV_Ith_S(mParameters, 2) + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__I_ns_Na = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * NV_Ith_S(mParameters, 3) + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_K = var_non_specific_calcium_activated_current__I_ns_K / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Na = var_non_specific_calcium_activated_current__I_ns_Na / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Ca = var_non_specific_calcium_activated_current__i_ns_K + var_non_specific_calcium_activated_current__i_ns_Na; // microA_per_microF
        const double var_plateau_potassium_current__Kp = 1 / (1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_plateau_potassium_current__g_Kp = 0.0055199999999999997; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__E_Kr = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 2) / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_rapid_delayed_rectifier_potassium_current__g_Kr = pow(NV_Ith_S(mParameters, 2), 0.58999999999999997) * NV_Ith_S(mParameters, 8); // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_rapid_delayed_rectifier_potassium_current__E_Kr + var_chaste_interface__membrane__V) * var_chaste_interface__Kr_channel_states__P_O * var_rapid_delayed_rectifier_potassium_current__g_Kr; // microA_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_rapid_delayed_rectifier_potassium_current__i_Kr; // uA_per_cm2
        const double var_sarcolemmal_calcium_pump__I_pCa = 1.1499999999999999; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__K_mpCa = 0.00050000000000000001; // millimolar
        const double var_sarcolemmal_calcium_pump__i_p_Ca = var_chaste_interface__calcium_dynamics__Cai * var_sarcolemmal_calcium_pump__I_pCa / (var_chaste_interface__calcium_dynamics__Cai + var_sarcolemmal_calcium_pump__K_mpCa); // microA_per_microF
        const double var_slow_delayed_rectifier_potassium_current__PNaK = 0.018329999999999999; // dimensionless
        const double var_slow_delayed_rectifier_potassium_current__E_Ks = var_membrane__R * var_membrane__T * log((NV_Ith_S(mParameters, 3) * var_slow_delayed_rectifier_potassium_current__PNaK + NV_Ith_S(mParameters, 2)) / (var_chaste_interface__ionic_concentrations__Nai * var_slow_delayed_rectifier_potassium_current__PNaK + var_chaste_interface__ionic_concentrations__Ki)) / var_membrane__F; // millivolt
        const double var_slow_delayed_rectifier_potassium_current__g_Ks = 0.433 * (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * NV_Ith_S(mParameters, 9); // milliS_per_microF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = (-var_slow_delayed_rectifier_potassium_current__E_Ks + var_chaste_interface__membrane__V) * var_slow_delayed_rectifier_potassium_current__g_Ks * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2; // microA_per_microF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks_converted = HeartConfig::Instance()->GetCapacitance() * var_slow_delayed_rectifier_potassium_current__i_Ks; // uA_per_cm2
        const double var_sodium_activated_potassium_current__g_K_Na = 0; // milliS_per_microF
        const double var_sodium_activated_potassium_current__kdKNa = 66.0; // millimolar
        const double var_sodium_activated_potassium_current__nKNa = 2.7999999999999998; // dimensionless
        const double var_sodium_activated_potassium_current__pona = 0.84999999999999998 / (1.0 + pow((var_sodium_activated_potassium_current__kdKNa / var_chaste_interface__ionic_concentrations__Nai), var_sodium_activated_potassium_current__nKNa)); // dimensionless
        const double var_sodium_activated_potassium_current__pov = 0.80000000000000004 - 0.65000000000000002 / (1.0 + exp(8.3333333333333339 + 0.066666666666666666 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_sodium_background_current__g_Nab = 0.0040000000000000001; // milliS_per_microF
        const double var_sodium_background_current__i_Na_b = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_sodium_background_current__g_Nab; // microA_per_microF
        const double var_sodium_potassium_pump__I_NaK = 2.25; // microA_per_microF
        const double var_sodium_potassium_pump__K_mKo = 1.5; // millimolar
        const double var_sodium_potassium_pump__K_mNai = 10.0; // millimolar
        const double var_sodium_potassium_pump__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * NV_Ith_S(mParameters, 3)); // dimensionless
        const double var_sodium_potassium_pump__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + 0.036499999999999998 * var_sodium_potassium_pump__sigma * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // dimensionless
        const double var_sodium_potassium_pump__i_NaK = NV_Ith_S(mParameters, 2) * var_sodium_potassium_pump__I_NaK * var_sodium_potassium_pump__f_NaK / ((1.0 + pow(var_sodium_potassium_pump__K_mNai, 2) / pow(var_chaste_interface__ionic_concentrations__Nai, 2)) * (NV_Ith_S(mParameters, 2) + var_sodium_potassium_pump__K_mKo)); // microA_per_microF
        const double var_time_independent_potassium_current__E_K = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 2) / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_ATP_sensitive_potassium_current__i_K_ATP = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_ATP_sensitive_potassium_current__GKbaraATP; // microA_per_microF
        const double var_plateau_potassium_current__i_Kp = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_plateau_potassium_current__Kp * var_plateau_potassium_current__g_Kp; // microA_per_microF
        const double var_sodium_activated_potassium_current__i_K_Na = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_sodium_activated_potassium_current__g_K_Na * var_sodium_activated_potassium_current__pona * var_sodium_activated_potassium_current__pov; // microA_per_microF
        const double var_time_independent_potassium_current__g_K1 = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 2)) * NV_Ith_S(mParameters, 7); // milliS_per_cm2
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K)); // per_second
        const double var_time_independent_potassium_current_K1_gate__beta_K1 = 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V)); // per_second
        const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_microF
        const double var_time_independent_potassium_current__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_time_independent_potassium_current__i_K1; // uA_per_cm2
        const double var_transient_outward_current__g_to = 1.1000000000000001; // milliS_per_microF
        const double var_transient_outward_current__rvdv = exp(0.01 * var_chaste_interface__membrane__V); // dimensionless
        const double var_transient_outward_current__i_to = pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_transient_outward_current__g_to * NV_Ith_S(mParameters, 11) * var_transient_outward_current__rvdv * var_chaste_interface__transient_outward_current_ydv_gate__ydv; // microA_per_microF
        const double var_transient_outward_current__i_to_converted = HeartConfig::Instance()->GetCapacitance() * var_transient_outward_current__i_to; // uA_per_cm2
        const double var_chaste_interface__i_ionic = HeartConfig::Instance()->GetCapacitance() * var_ATP_sensitive_potassium_current__i_K_ATP + HeartConfig::Instance()->GetCapacitance() * var_T_type_Ca_channel__i_Ca_T + HeartConfig::Instance()->GetCapacitance() * var_calcium_background_current__i_Ca_b + HeartConfig::Instance()->GetCapacitance() * var_non_specific_calcium_activated_current__i_ns_Ca + HeartConfig::Instance()->GetCapacitance() * var_plateau_potassium_current__i_Kp + HeartConfig::Instance()->GetCapacitance() * var_sarcolemmal_calcium_pump__i_p_Ca + HeartConfig::Instance()->GetCapacitance() * var_sodium_activated_potassium_current__i_K_Na + HeartConfig::Instance()->GetCapacitance() * var_sodium_background_current__i_Na_b + HeartConfig::Instance()->GetCapacitance() * var_sodium_potassium_pump__i_NaK + var_L_type_Ca_channel__i_Ca_L_converted + var_Na_Ca_exchanger__i_NaCa_converted + var_fast_sodium_current__i_Na_converted + var_rapid_delayed_rectifier_potassium_current__i_Kr_converted + var_slow_delayed_rectifier_potassium_current__i_Ks_converted + var_time_independent_potassium_current__i_K1_converted + var_transient_outward_current__i_to_converted; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellclancy_rudy_2002FromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__environment__time_converted, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__calcium_dynamics__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.000104
        double var_chaste_interface__Na_channel_states__P_O_Na = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 3.756e-13
        double var_chaste_interface__Na_channel_states__P_C1 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 4.744e-10
        double var_chaste_interface__Na_channel_states__P_C2 = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 9.776e-08
        double var_chaste_interface__Na_channel_states__P_C3 = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 7.583e-06
        double var_chaste_interface__Na_channel_states__P_IF = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 8.147e-11
        double var_chaste_interface__Na_channel_states__P_IC3 = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 1.302e-06
        double var_chaste_interface__Na_channel_states__P_IC2 = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 1.679e-08
        double var_chaste_interface__Na_channel_states__P_IM1 = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 9.736e-12
        double var_chaste_interface__Na_channel_states__P_IM2 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 6.187e-14
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 3.289e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.99975
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.000983
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.9942
        double var_chaste_interface__Kr_channel_states__P_O = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 1.104e-10
        double var_chaste_interface__Kr_channel_states__P_C1 = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 3.4083e-08
        double var_chaste_interface__Kr_channel_states__P_C2 = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 1.69e-08
        double var_chaste_interface__Kr_channel_states__P_C3 = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 4.949e-06
        double var_chaste_interface__Kr_channel_states__P_I = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 3.386e-11
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.01167
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 0.99998
        double var_chaste_interface__calcium_dynamics__Ca_JSR = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 1.516
        double var_chaste_interface__calcium_dynamics__Ca_NSR = NV_Ith_S(rY, 25);
        // Units: millimolar; Initial value: 1.518
        double var_chaste_interface__calcium_dynamics__APtrack = NV_Ith_S(rY, 26);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__APtrack2 = NV_Ith_S(rY, 27);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__APtrack3 = NV_Ith_S(rY, 28);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__Cainfluxtrack = NV_Ith_S(rY, 29);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack = NV_Ith_S(rY, 30);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack2 = NV_Ith_S(rY, 31);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack3 = NV_Ith_S(rY, 32);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ionic_concentrations__Nai = NV_Ith_S(rY, 33);
        // Units: millimolar; Initial value: 10.532
        double var_chaste_interface__ionic_concentrations__Ki = NV_Ith_S(rY, 34);
        // Units: millimolar; Initial value: 140.557

        // Mathematics
        double d_dt_chaste_interface_var_membrane__V;
        const double var_ATP_sensitive_potassium_current__ATPi = 3.0; // millimolar
        const double var_ATP_sensitive_potassium_current__hATP = 2.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__i_K_ATP_on = 1.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__kATP = 0.00025000000000000001; // millimolar
        const double var_ATP_sensitive_potassium_current__nATP = 0.23999999999999999; // dimensionless
        const double var_ATP_sensitive_potassium_current__nicholsarea = 5.0000000000000002e-5; // dimensionless
        const double var_ATP_sensitive_potassium_current__g_K_ATP = 0.000193 * var_ATP_sensitive_potassium_current__i_K_ATP_on / var_ATP_sensitive_potassium_current__nicholsarea; // milliS_per_microF
        const double var_ATP_sensitive_potassium_current__pATP = 1 / (1.0 + pow((var_ATP_sensitive_potassium_current__ATPi / var_ATP_sensitive_potassium_current__kATP), var_ATP_sensitive_potassium_current__hATP)); // dimensionless
        const double var_Kr_channel_states__alpha_in = 2172.0; // per_second
        const double var_Kr_channel_states__beta_in = 1077.0; // per_second
        const double var_L_type_Ca_channel__gamma_Ki = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ko = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nai = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nao = 0.75; // dimensionless
        const double var_L_type_Ca_channel_f_Ca_gate__Km_Ca = 0.00059999999999999995; // millimolar
        const double var_Na_Ca_exchanger__c2 = 0.0001; // millimolar
        const double var_Na_Ca_exchanger__gamma = 0.14999999999999999; // dimensionless
        const double var_T_type_Ca_channel__g_CaT = 0.050000000000000003; // milliS_per_microF
        const double var_calcium_background_current__g_Cab = 0.003016; // milliS_per_microF
        const double var_calcium_dynamics__APtrack2_orig_deriv = (((var_chaste_interface__calcium_dynamics__APtrack > 0.17999999999999999) && (var_chaste_interface__calcium_dynamics__APtrack < 0.20000000000000001)) ? (100000.0 - 100500.0 * var_chaste_interface__calcium_dynamics__APtrack2) : (-500.0 * var_chaste_interface__calcium_dynamics__APtrack2)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__APtrack2 = 0.001 * var_calcium_dynamics__APtrack2_orig_deriv; // 1 / millisecond
        const double var_calcium_dynamics__APtrack3_orig_deriv = (((var_chaste_interface__calcium_dynamics__APtrack > 0.17999999999999999) && (var_chaste_interface__calcium_dynamics__APtrack < 0.20000000000000001)) ? (100000.0 - 100500.0 * var_chaste_interface__calcium_dynamics__APtrack3) : (-10.0 * var_chaste_interface__calcium_dynamics__APtrack3)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__APtrack3 = 0.001 * var_calcium_dynamics__APtrack3_orig_deriv; // 1 / millisecond
        const double var_calcium_dynamics__CMDN_max = 0.050000000000000003; // millimolar
        const double var_calcium_dynamics__CSQN_max = 10.0; // millimolar
        const double var_calcium_dynamics__CSQNthresh = 0.69999999999999996; // millimolar
        const double var_calcium_dynamics__Ca_NSR_max = 15.0; // millimolar
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + var_chaste_interface__calcium_dynamics__Cai / var_L_type_Ca_channel_f_Ca_gate__Km_Ca); // dimensionless
        const double var_calcium_dynamics__G_rel_overload = 4000.0; // per_second
        const double var_calcium_dynamics__I_up = 8.75; // millimolar_per_second
        const double var_calcium_dynamics__K_leak = var_calcium_dynamics__I_up / var_calcium_dynamics__Ca_NSR_max; // per_second
        const double var_calcium_dynamics__K_mCMDN = 0.0023800000000000002; // millimolar
        const double var_calcium_dynamics__K_mCSQN = 0.80000000000000004; // millimolar
        const double var_calcium_dynamics__K_mTn = 0.00050000000000000001; // millimolar
        const double var_calcium_dynamics__K_mrel = 0.00080000000000000004; // millimolar
        const double var_calcium_dynamics__K_mup = 0.00092000000000000003; // millimolar
        const double var_calcium_dynamics__Logicthresh = 0.97999999999999998; // dimensionless
        const double var_calcium_dynamics__OVRLDtrack2_orig_deriv = (((var_calcium_dynamics__Logicthresh > var_chaste_interface__calcium_dynamics__OVRLDtrack2) && (var_calcium_dynamics__Logicthresh < var_chaste_interface__calcium_dynamics__OVRLDtrack)) ? (50000.0 - 50000.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (-500.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack2)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack2 = 0.001 * var_calcium_dynamics__OVRLDtrack2_orig_deriv; // 1 / millisecond
        const double var_calcium_dynamics__OVRLDtrack3_orig_deriv = (((var_calcium_dynamics__Logicthresh > var_chaste_interface__calcium_dynamics__OVRLDtrack3) && (var_calcium_dynamics__Logicthresh < var_chaste_interface__calcium_dynamics__OVRLDtrack)) ? (50000.0 - 50000.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack3) : (-10.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack3)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack3 = 0.001 * var_calcium_dynamics__OVRLDtrack3_orig_deriv; // 1 / millisecond
        const double var_calcium_dynamics__OVRLDtrack_orig_deriv = (((var_chaste_interface__calcium_dynamics__APtrack3 < 0.37) && (var_chaste_interface__calcium_dynamics__OVRLDtrack3 < 0.37) && (var_calcium_dynamics__CSQNthresh < 1 / (1.0 + var_calcium_dynamics__K_mCSQN / var_chaste_interface__calcium_dynamics__Ca_NSR))) ? (50000.0 - 50000.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack) : (-500.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack = 0.001 * var_calcium_dynamics__OVRLDtrack_orig_deriv; // 1 / millisecond
        const double var_calcium_dynamics__Tn_max = 0.070000000000000007; // millimolar
        const double var_calcium_dynamics__delta_Ca_ith = 0.00018000000000000001; // millimolar
        const double var_calcium_dynamics__G_rel = ((var_chaste_interface__calcium_dynamics__Cainfluxtrack > var_calcium_dynamics__delta_Ca_ith) ? ((1.0 - var_chaste_interface__calcium_dynamics__APtrack2) * (-var_calcium_dynamics__delta_Ca_ith + var_chaste_interface__calcium_dynamics__Cainfluxtrack) * var_chaste_interface__calcium_dynamics__APtrack2 * NV_Ith_S(mParameters, 0) / (-var_calcium_dynamics__delta_Ca_ith + var_chaste_interface__calcium_dynamics__Cainfluxtrack + var_calcium_dynamics__K_mrel)) : ((var_chaste_interface__calcium_dynamics__OVRLDtrack2 > 0) ? ((1.0 - var_chaste_interface__calcium_dynamics__OVRLDtrack2) * var_calcium_dynamics__G_rel_overload * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (0))); // per_second
        const double var_calcium_dynamics__i_leak = var_chaste_interface__calcium_dynamics__Ca_NSR * var_calcium_dynamics__K_leak; // millimolar_per_second
        const double var_calcium_dynamics__i_rel = (-var_chaste_interface__calcium_dynamics__Cai + var_chaste_interface__calcium_dynamics__Ca_JSR) * var_calcium_dynamics__G_rel; // millimolar_per_second
        const double var_calcium_dynamics__i_up = var_chaste_interface__calcium_dynamics__Cai * var_calcium_dynamics__I_up / (var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__K_mup); // millimolar_per_second
        const double var_calcium_dynamics__tau_tr = 0.17999999999999999; // second
        const double var_calcium_dynamics__i_tr = (-var_chaste_interface__calcium_dynamics__Ca_JSR + var_chaste_interface__calcium_dynamics__Ca_NSR) / var_calcium_dynamics__tau_tr; // millimolar_per_second
        const double var_calcium_dynamics__Ca_JSR_orig_deriv = (-var_calcium_dynamics__i_rel + var_calcium_dynamics__i_tr) / (1.0 + var_calcium_dynamics__CSQN_max * var_calcium_dynamics__K_mCSQN / pow((var_chaste_interface__calcium_dynamics__Ca_JSR + var_calcium_dynamics__K_mCSQN), 2)); // millimolar / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_JSR = 0.001 * var_calcium_dynamics__Ca_JSR_orig_deriv; // millimolar / millisecond
        const double var_ionic_concentrations__A_cap = 1.434e-7; // mm2
        const double var_ionic_concentrations__Ki_orig_deriv = 0; // millimolar / second
        const double d_dt_chaste_interface_var_ionic_concentrations__Ki = 0.001 * var_ionic_concentrations__Ki_orig_deriv; // millimolar / millisecond
        const double var_ATP_sensitive_potassium_current__GKbaraATP = pow((0.25 * NV_Ith_S(mParameters, 2)), var_ATP_sensitive_potassium_current__nATP) * var_ATP_sensitive_potassium_current__g_K_ATP * var_ATP_sensitive_potassium_current__pATP; // milliS_per_microF
        const double var_ionic_concentrations__Nai_orig_deriv = 0; // millimolar / second
        const double d_dt_chaste_interface_var_ionic_concentrations__Nai = 0.001 * var_ionic_concentrations__Nai_orig_deriv; // millimolar / millisecond
        const double var_ionic_concentrations__preplength = 0.001; // mm
        const double var_ionic_concentrations__radius = 0.00011; // mm
        const double var_ionic_concentrations__volume = M_PI * pow(var_ionic_concentrations__radius, 2) * var_ionic_concentrations__preplength; // micro_litre
        const double var_ionic_concentrations__V_myo = 0.68000000000000005 * var_ionic_concentrations__volume; // micro_litre
        const double var_calcium_dynamics__V_JSR = 0.0070588235294117632 * var_ionic_concentrations__V_myo; // micro_litre
        const double var_calcium_dynamics__V_NSR = 0.081176470588235281 * var_ionic_concentrations__V_myo; // micro_litre
        const double var_calcium_dynamics__Ca_NSR_orig_deriv = -var_calcium_dynamics__i_leak - var_calcium_dynamics__V_JSR * var_calcium_dynamics__i_tr / var_calcium_dynamics__V_NSR + var_calcium_dynamics__i_up; // millimolar / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_NSR = 0.001 * var_calcium_dynamics__Ca_NSR_orig_deriv; // millimolar / millisecond
        const double var_membrane__F = 96485.0; // coulomb_per_mole
        const double var_membrane__I_st_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_membrane__I_st = var_membrane__I_st_converted / HeartConfig::Instance()->GetCapacitance(); // microA_per_microF
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_calcium_background_current__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 1) / var_chaste_interface__calcium_dynamics__Cai) / var_membrane__F; // millivolt
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 3) / var_chaste_interface__ionic_concentrations__Nai) / var_membrane__F; // millivolt
        const double var_Kr_channel_states__alpha = 55.5 * exp(-0.66565836 + 0.055471529999999998 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__alpha_alpha = 65.5 * exp(-1.9969750799999999 + 0.055471529999999998 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__alpha_i = 1975.5 * exp(-0.58799999999999997 - 0.023519999999999999 * var_chaste_interface__membrane__V) / NV_Ith_S(mParameters, 2); // per_second
        const double var_Kr_channel_states__beta = 2.3570000000000002 * exp(-0.036588000000000002 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__P_C2_orig_deriv = (-var_Kr_channel_states__alpha_in - var_Kr_channel_states__beta) * var_chaste_interface__Kr_channel_states__P_C2 + var_chaste_interface__Kr_channel_states__P_C1 * var_Kr_channel_states__beta_in + var_chaste_interface__Kr_channel_states__P_C3 * var_Kr_channel_states__alpha; // 1 / second
        const double d_dt_chaste_interface_var_Kr_channel_states__P_C2 = 0.001 * var_Kr_channel_states__P_C2_orig_deriv; // 1 / millisecond
        const double var_Kr_channel_states__P_C3_orig_deriv = var_chaste_interface__Kr_channel_states__P_C2 * var_Kr_channel_states__beta - var_chaste_interface__Kr_channel_states__P_C3 * var_Kr_channel_states__alpha; // 1 / second
        const double d_dt_chaste_interface_var_Kr_channel_states__P_C3 = 0.001 * var_Kr_channel_states__P_C3_orig_deriv; // 1 / millisecond
        const double var_Kr_channel_states__beta_beta = 2.9357000000000002 * exp(-0.021579999999999998 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__beta_i = 1030.0720270741688 * pow(NV_Ith_S(mParameters, 2), (-0.29999999999999999)) * exp(0.00094200000000000002 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__P_O_orig_deriv = (-var_Kr_channel_states__beta_beta - var_Kr_channel_states__beta_i) * var_chaste_interface__Kr_channel_states__P_O + var_chaste_interface__Kr_channel_states__P_C1 * var_Kr_channel_states__alpha_alpha + var_chaste_interface__Kr_channel_states__P_I * var_Kr_channel_states__alpha_i; // 1 / second
        const double d_dt_chaste_interface_var_Kr_channel_states__P_O = 0.001 * var_Kr_channel_states__P_O_orig_deriv; // 1 / millisecond
        const double var_Kr_channel_states__mu = var_Kr_channel_states__alpha_i * var_Kr_channel_states__beta_beta / var_Kr_channel_states__beta_i; // per_second
        const double var_Kr_channel_states__P_C1_orig_deriv = (-var_Kr_channel_states__beta_in - 2 * var_Kr_channel_states__alpha_alpha) * var_chaste_interface__Kr_channel_states__P_C1 + var_chaste_interface__Kr_channel_states__P_C2 * var_Kr_channel_states__alpha_in + var_chaste_interface__Kr_channel_states__P_I * var_Kr_channel_states__mu + var_chaste_interface__Kr_channel_states__P_O * var_Kr_channel_states__beta_beta; // 1 / second
        const double d_dt_chaste_interface_var_Kr_channel_states__P_C1 = 0.001 * var_Kr_channel_states__P_C1_orig_deriv; // 1 / millisecond
        const double var_Kr_channel_states__P_I_orig_deriv = (-var_Kr_channel_states__alpha_i - var_Kr_channel_states__mu) * var_chaste_interface__Kr_channel_states__P_I + var_chaste_interface__Kr_channel_states__P_C1 * var_Kr_channel_states__alpha_alpha + var_chaste_interface__Kr_channel_states__P_O * var_Kr_channel_states__beta_i; // 1 / second
        const double d_dt_chaste_interface_var_Kr_channel_states__P_I = 0.001 * var_Kr_channel_states__P_I_orig_deriv; // 1 / millisecond
        const double var_L_type_Ca_channel__I_CaCa = ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 1) + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) / (-1.0 + exp(9.9999999999999995e-8)) + 1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 1) + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) / (-1.0 + exp(-9.9999999999999995e-8))) - 1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 1) + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) / (-1.0 + exp(-9.9999999999999995e-8))) : (7.8019226357407252 * (-0.34100000000000003 * NV_Ith_S(mParameters, 1) + var_chaste_interface__calcium_dynamics__Cai * exp(0.074871767015605231 * var_chaste_interface__membrane__V)) * NV_Ith_S(mParameters, 4) * var_chaste_interface__membrane__V / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaK = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (1.8621604999999999e-9 * (-0.75 * NV_Ith_S(mParameters, 2) + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) / (-1.0 + exp(9.9999999999999995e-8)) + 1.8621604999999999e-9 * (-0.75 * NV_Ith_S(mParameters, 2) + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) / (-1.0 + exp(-9.9999999999999995e-8))) - 1.8621604999999999e-9 * (-0.75 * NV_Ith_S(mParameters, 2) + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) / (-1.0 + exp(-9.9999999999999995e-8))) : (0.00069711623550831479 * (-0.75 * NV_Ith_S(mParameters, 2) + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(0.037435883507802616 * var_chaste_interface__membrane__V)) * NV_Ith_S(mParameters, 4) * var_chaste_interface__membrane__V / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaNa = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (6.5127375e-9 * (-0.75 * NV_Ith_S(mParameters, 3) + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) / (-1.0 + exp(9.9999999999999995e-8)) + 6.5127375e-9 * (-0.75 * NV_Ith_S(mParameters, 3) + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) / (-1.0 + exp(-9.9999999999999995e-8))) - 6.5127375e-9 * (-0.75 * NV_Ith_S(mParameters, 3) + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) / (-1.0 + exp(-9.9999999999999995e-8))) : (0.0024381008236689767 * (-0.75 * NV_Ith_S(mParameters, 3) + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(0.037435883507802616 * var_chaste_interface__membrane__V)) * NV_Ith_S(mParameters, 4) * var_chaste_interface__membrane__V / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaCa = var_L_type_Ca_channel__I_CaCa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaK = var_L_type_Ca_channel__I_CaK * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaNa = var_L_type_Ca_channel__I_CaNa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_CaCa + var_L_type_Ca_channel__i_CaK + var_L_type_Ca_channel__i_CaNa; // microA_per_microF
        const double var_L_type_Ca_channel_d_gate__d_infinity = 1 / (1.0 + exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_L_type_Ca_channel_d_gate__tau_d = ((fabs(10.0 + var_chaste_interface__membrane__V) < 6.2399999999074307e-7) ? (45787.545788225034 * (1.0 - exp(-9.999999999851651e-8)) / (1.0 + exp(-9.999999999851651e-8)) - 801282.05129393819 * (9.9999993759999999 + var_chaste_interface__membrane__V) * (-45787.545788225034 * (1.0 - exp(9.999999999851651e-8)) / (1.0 + exp(9.999999999851651e-8)) - 45787.545788225034 * (1.0 - exp(-9.999999999851651e-8)) / (1.0 + exp(-9.999999999851651e-8)))) : (0.028571428571428571 * (1.0 - exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V)) / ((1.0 + exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V)) * (10.0 + var_chaste_interface__membrane__V)))); // second
        const double var_L_type_Ca_channel_d_gate__alpha_d = var_L_type_Ca_channel_d_gate__d_infinity / var_L_type_Ca_channel_d_gate__tau_d; // per_second
        const double var_L_type_Ca_channel_d_gate__beta_d = (1.0 - var_L_type_Ca_channel_d_gate__d_infinity) / var_L_type_Ca_channel_d_gate__tau_d; // per_second
        const double var_L_type_Ca_channel_d_gate__d_orig_deriv = (1.0 - var_chaste_interface__L_type_Ca_channel_d_gate__d) * var_L_type_Ca_channel_d_gate__alpha_d - var_L_type_Ca_channel_d_gate__beta_d * var_chaste_interface__L_type_Ca_channel_d_gate__d; // 1 / second
        const double d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d = 0.001 * var_L_type_Ca_channel_d_gate__d_orig_deriv; // 1 / millisecond
        const double var_L_type_Ca_channel_f_gate__f_infinity = 1 / (1.0 + exp(4.0 + 0.125 * var_chaste_interface__membrane__V)) + 0.59999999999999998 / (1.0 + exp(2.5 - 0.050000000000000003 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_L_type_Ca_channel_f_gate__tau_f = 0.001 / (0.02 + 0.019699999999999999 * exp(-0.113569 * pow((1 + 0.10000000000000001 * var_chaste_interface__membrane__V), 2))); // second
        const double var_L_type_Ca_channel_f_gate__alpha_f = var_L_type_Ca_channel_f_gate__f_infinity / var_L_type_Ca_channel_f_gate__tau_f; // per_second
        const double var_L_type_Ca_channel_f_gate__beta_f = (1.0 - var_L_type_Ca_channel_f_gate__f_infinity) / var_L_type_Ca_channel_f_gate__tau_f; // per_second
        const double var_L_type_Ca_channel_f_gate__f_orig_deriv = (1.0 - var_chaste_interface__L_type_Ca_channel_f_gate__f) * var_L_type_Ca_channel_f_gate__alpha_f - var_L_type_Ca_channel_f_gate__beta_f * var_chaste_interface__L_type_Ca_channel_f_gate__f; // 1 / second
        const double d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f = 0.001 * var_L_type_Ca_channel_f_gate__f_orig_deriv; // 1 / millisecond
        const double var_Na_Ca_exchanger__i_NaCa = (-pow(NV_Ith_S(mParameters, 3), 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * NV_Ith_S(mParameters, 1) * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * NV_Ith_S(mParameters, 10) * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) / (1.0 + (pow(NV_Ith_S(mParameters, 3), 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * NV_Ith_S(mParameters, 1) * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_Na_Ca_exchanger__c2 * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // microA_per_microF
        const double var_Na_channel_states__alpha_11 = 3802.0 / (0.20000000000000001 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V) + 0.1027 * exp(-0.058823529411764705 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_12 = 3802.0 / (0.1027 * exp(-0.066666666666666666 * var_chaste_interface__membrane__V) + 0.23000000000000001 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_13 = 3802.0 / (0.25 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V) + 0.1027 * exp(-0.083333333333333329 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_2 = 9178.0 * exp(0.033692722371967652 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__alpha_3 = 0.00037932999999999999 * exp(-0.12987012987012986 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__alpha_4 = 0.01 * var_Na_channel_states__alpha_2; // per_second
        const double var_Na_channel_states__alpha_5 = 1.0526315789473684e-5 * var_Na_channel_states__alpha_2; // per_second
        const double var_Na_channel_states__beta_11 = 191.69999999999999 * exp(-0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_12 = 200.0 * exp(0.24630541871921183 - 0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_13 = 220.0 * exp(0.49261083743842365 - 0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_3 = 8.4000000000000004 + 0.02 * var_chaste_interface__membrane__V; // per_second
        const double var_Na_channel_states__P_C1_orig_deriv = (-var_Na_channel_states__alpha_13 - var_Na_channel_states__beta_12 - var_Na_channel_states__beta_3) * var_chaste_interface__Na_channel_states__P_C1 + var_chaste_interface__Na_channel_states__P_C2 * var_Na_channel_states__alpha_12 + var_chaste_interface__Na_channel_states__P_IF * var_Na_channel_states__alpha_3 + var_chaste_interface__Na_channel_states__P_O_Na * var_Na_channel_states__beta_13; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_C1 = 0.001 * var_Na_channel_states__P_C1_orig_deriv; // 1 / millisecond
        const double var_Na_channel_states__P_C2_orig_deriv = (-var_Na_channel_states__alpha_12 - var_Na_channel_states__beta_11 - var_Na_channel_states__beta_3) * var_chaste_interface__Na_channel_states__P_C2 + var_chaste_interface__Na_channel_states__P_C1 * var_Na_channel_states__beta_12 + var_chaste_interface__Na_channel_states__P_C3 * var_Na_channel_states__alpha_11 + var_chaste_interface__Na_channel_states__P_IC2 * var_Na_channel_states__alpha_3; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_C2 = 0.001 * var_Na_channel_states__P_C2_orig_deriv; // 1 / millisecond
        const double var_Na_channel_states__P_C3_orig_deriv = (-var_Na_channel_states__alpha_11 - var_Na_channel_states__beta_3) * var_chaste_interface__Na_channel_states__P_C3 + var_chaste_interface__Na_channel_states__P_C2 * var_Na_channel_states__beta_11 + var_chaste_interface__Na_channel_states__P_IC3 * var_Na_channel_states__alpha_3; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_C3 = 0.001 * var_Na_channel_states__P_C3_orig_deriv; // 1 / millisecond
        const double var_Na_channel_states__P_IC2_orig_deriv = (-var_Na_channel_states__alpha_12 - var_Na_channel_states__alpha_3 - var_Na_channel_states__beta_11) * var_chaste_interface__Na_channel_states__P_IC2 + var_chaste_interface__Na_channel_states__P_C2 * var_Na_channel_states__beta_3 + var_chaste_interface__Na_channel_states__P_IC3 * var_Na_channel_states__alpha_11 + var_chaste_interface__Na_channel_states__P_IF * var_Na_channel_states__beta_12; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_IC2 = 0.001 * var_Na_channel_states__P_IC2_orig_deriv; // 1 / millisecond
        const double var_Na_channel_states__P_IC3_orig_deriv = (-var_Na_channel_states__alpha_11 - var_Na_channel_states__alpha_3) * var_chaste_interface__Na_channel_states__P_IC3 + var_chaste_interface__Na_channel_states__P_C3 * var_Na_channel_states__beta_3 + var_chaste_interface__Na_channel_states__P_IC2 * var_Na_channel_states__beta_11; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_IC3 = 0.001 * var_Na_channel_states__P_IC3_orig_deriv; // 1 / millisecond
        const double var_Na_channel_states__beta_2 = var_Na_channel_states__alpha_13 * var_Na_channel_states__alpha_2 * var_Na_channel_states__alpha_3 / (var_Na_channel_states__beta_13 * var_Na_channel_states__beta_3); // per_second
        const double var_Na_channel_states__P_O_Na_orig_deriv = (-var_Na_channel_states__alpha_2 - var_Na_channel_states__beta_13) * var_chaste_interface__Na_channel_states__P_O_Na + var_chaste_interface__Na_channel_states__P_C1 * var_Na_channel_states__alpha_13 + var_chaste_interface__Na_channel_states__P_IF * var_Na_channel_states__beta_2; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_O_Na = 0.001 * var_Na_channel_states__P_O_Na_orig_deriv; // 1 / millisecond
        const double var_Na_channel_states__beta_4 = var_Na_channel_states__alpha_3; // per_second
        const double var_Na_channel_states__P_IF_orig_deriv = (-var_Na_channel_states__alpha_3 - var_Na_channel_states__alpha_4 - var_Na_channel_states__beta_12 - var_Na_channel_states__beta_2) * var_chaste_interface__Na_channel_states__P_IF + var_chaste_interface__Na_channel_states__P_C1 * var_Na_channel_states__beta_3 + var_chaste_interface__Na_channel_states__P_IC2 * var_Na_channel_states__alpha_12 + var_chaste_interface__Na_channel_states__P_IM1 * var_Na_channel_states__beta_4 + var_chaste_interface__Na_channel_states__P_O_Na * var_Na_channel_states__alpha_2; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_IF = 0.001 * var_Na_channel_states__P_IF_orig_deriv; // 1 / millisecond
        const double var_Na_channel_states__beta_5 = 0.02 * var_Na_channel_states__alpha_3; // per_second
        const double var_Na_channel_states__P_IM1_orig_deriv = (-var_Na_channel_states__alpha_5 - var_Na_channel_states__beta_4) * var_chaste_interface__Na_channel_states__P_IM1 + var_chaste_interface__Na_channel_states__P_IF * var_Na_channel_states__alpha_4 + var_chaste_interface__Na_channel_states__P_IM2 * var_Na_channel_states__beta_5; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_IM1 = 0.001 * var_Na_channel_states__P_IM1_orig_deriv; // 1 / millisecond
        const double var_Na_channel_states__P_IM2_orig_deriv = var_chaste_interface__Na_channel_states__P_IM1 * var_Na_channel_states__alpha_5 - var_chaste_interface__Na_channel_states__P_IM2 * var_Na_channel_states__beta_5; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_IM2 = 0.001 * var_Na_channel_states__P_IM2_orig_deriv; // 1 / millisecond
        const double var_T_type_Ca_channel__i_Ca_T = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2) * (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_T_type_Ca_channel__g_CaT * var_chaste_interface__T_type_Ca_channel_g_gate__g; // microA_per_microF
        const double var_T_type_Ca_channel_b_gate__b_inf = 1 / (1.0 + exp(-1.2962962962962963 - 0.092592592592592587 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_T_type_Ca_channel_b_gate__tau_b = 0.0037000000000000002 + 0.0061000000000000004 / (1.0 + exp(5.5555555555555554 + 0.22222222222222221 * var_chaste_interface__membrane__V)); // second
        const double var_T_type_Ca_channel_b_gate__b_orig_deriv = (-var_chaste_interface__T_type_Ca_channel_b_gate__b + var_T_type_Ca_channel_b_gate__b_inf) / var_T_type_Ca_channel_b_gate__tau_b; // 1 / second
        const double d_dt_chaste_interface_var_T_type_Ca_channel_b_gate__b = 0.001 * var_T_type_Ca_channel_b_gate__b_orig_deriv; // 1 / millisecond
        const double var_T_type_Ca_channel_g_gate__g_inf = 1 / (1.0 + exp(10.714285714285715 + 0.17857142857142858 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_T_type_Ca_channel_g_gate__tau_g = ((var_chaste_interface__membrane__V <= 0) ? (0.012 - 0.00087500000000000002 * var_chaste_interface__membrane__V) : (0.012)); // second
        const double var_T_type_Ca_channel_g_gate__g_orig_deriv = (-var_chaste_interface__T_type_Ca_channel_g_gate__g + var_T_type_Ca_channel_g_gate__g_inf) / var_T_type_Ca_channel_g_gate__tau_g; // 1 / second
        const double d_dt_chaste_interface_var_T_type_Ca_channel_g_gate__g = 0.001 * var_T_type_Ca_channel_g_gate__g_orig_deriv; // 1 / millisecond
        const double var_calcium_background_current__i_Ca_b = (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_calcium_background_current__g_Cab; // microA_per_microF
        const double var_fast_sodium_current__i_Na = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__Na_channel_states__P_O_Na * NV_Ith_S(mParameters, 6); // microA_per_microF
        const double var_non_specific_calcium_activated_current__K_m_ns_Ca = 0.0011999999999999999; // millimolar
        const double var_non_specific_calcium_activated_current__P_ns_Ca = 0; // cm_per_second
        const double var_non_specific_calcium_activated_current__I_ns_K = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * NV_Ith_S(mParameters, 2) + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__I_ns_Na = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * NV_Ith_S(mParameters, 3) + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_K = var_non_specific_calcium_activated_current__I_ns_K / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Na = var_non_specific_calcium_activated_current__I_ns_Na / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Ca = var_non_specific_calcium_activated_current__i_ns_K + var_non_specific_calcium_activated_current__i_ns_Na; // microA_per_microF
        const double var_plateau_potassium_current__Kp = 1 / (1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_plateau_potassium_current__g_Kp = 0.0055199999999999997; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__E_Kr = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 2) / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_rapid_delayed_rectifier_potassium_current__g_Kr = pow(NV_Ith_S(mParameters, 2), 0.58999999999999997) * NV_Ith_S(mParameters, 8); // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_rapid_delayed_rectifier_potassium_current__E_Kr + var_chaste_interface__membrane__V) * var_chaste_interface__Kr_channel_states__P_O * var_rapid_delayed_rectifier_potassium_current__g_Kr; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__I_pCa = 1.1499999999999999; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__K_mpCa = 0.00050000000000000001; // millimolar
        const double var_sarcolemmal_calcium_pump__i_p_Ca = var_chaste_interface__calcium_dynamics__Cai * var_sarcolemmal_calcium_pump__I_pCa / (var_chaste_interface__calcium_dynamics__Cai + var_sarcolemmal_calcium_pump__K_mpCa); // microA_per_microF
        const double var_calcium_dynamics__Cai_orig_deriv = ((-var_calcium_dynamics__i_up + var_calcium_dynamics__i_leak) * var_calcium_dynamics__V_NSR / var_ionic_concentrations__V_myo + var_calcium_dynamics__V_JSR * var_calcium_dynamics__i_rel / var_ionic_concentrations__V_myo - 0.5 * (-2.0 * var_Na_Ca_exchanger__i_NaCa + var_L_type_Ca_channel__i_CaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_sarcolemmal_calcium_pump__i_p_Ca) * var_ionic_concentrations__A_cap / (var_ionic_concentrations__V_myo * var_membrane__F)) / (1.0 + var_calcium_dynamics__CMDN_max * var_calcium_dynamics__K_mCMDN / pow((var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__K_mCMDN), 2) + var_calcium_dynamics__K_mTn * var_calcium_dynamics__Tn_max / pow((var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__K_mTn), 2)); // millimolar / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Cai = 0.001 * var_calcium_dynamics__Cai_orig_deriv; // millimolar / millisecond
        const double var_calcium_dynamics__Cainfluxtrack_orig_deriv = ((var_chaste_interface__calcium_dynamics__APtrack > 0.20000000000000001) ? (-0.5 * (-var_Na_Ca_exchanger__i_NaCa + var_L_type_Ca_channel__i_CaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_sarcolemmal_calcium_pump__i_p_Ca) * var_ionic_concentrations__A_cap / (var_ionic_concentrations__V_myo * var_membrane__F)) : ((var_chaste_interface__calcium_dynamics__APtrack2 > 0.01) ? (0) : (-500.0 * var_chaste_interface__calcium_dynamics__Cainfluxtrack))); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Cainfluxtrack = 0.001 * var_calcium_dynamics__Cainfluxtrack_orig_deriv; // 1 / millisecond
        const double var_slow_delayed_rectifier_potassium_current__PNaK = 0.018329999999999999; // dimensionless
        const double var_slow_delayed_rectifier_potassium_current__E_Ks = var_membrane__R * var_membrane__T * log((NV_Ith_S(mParameters, 3) * var_slow_delayed_rectifier_potassium_current__PNaK + NV_Ith_S(mParameters, 2)) / (var_chaste_interface__ionic_concentrations__Nai * var_slow_delayed_rectifier_potassium_current__PNaK + var_chaste_interface__ionic_concentrations__Ki)) / var_membrane__F; // millivolt
        const double var_slow_delayed_rectifier_potassium_current__g_Ks = 0.433 * (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * NV_Ith_S(mParameters, 9); // milliS_per_microF
        const double var_slow_delayed_rectifier_potassium_current_xs1_gate__tau_xs1 = 0.001 * ((fabs(30.0 + var_chaste_interface__membrane__V) < 1.455604075689676e-6) ? (1 / (-1.0465793304208771e-10 / (1.0 - exp(2.1542940320207204e-7)) - 1.9068413391534758e-10 / (-1.0 + exp(-9.9999999999880736e-8)) + 343500.00000040967 * (30.000001455604075 + var_chaste_interface__membrane__V) * (1.0465793304208771e-10 / (1.0 - exp(2.1542940320207204e-7)) + 1.0465793304208771e-10 / (1.0 - exp(-2.1542940320207204e-7)) + 1.9068413391534758e-10 / (-1.0 + exp(9.9999999999880736e-8)) + 1.9068413391534758e-10 / (-1.0 + exp(-9.9999999999880736e-8))))) : (1 / (0.00013100000000000001 * (30.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__V)) + 7.1899999999999999e-5 * (30.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__V))))); // second
        const double var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_infinity = 1 / (1.0 + exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_orig_deriv = (-var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 + var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_infinity) / var_slow_delayed_rectifier_potassium_current_xs1_gate__tau_xs1; // 1 / second
        const double d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = 0.001 * var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_orig_deriv; // 1 / millisecond
        const double var_slow_delayed_rectifier_potassium_current_xs2_gate__tau_xs2 = 0.0040000000000000001 * ((fabs(30.0 + var_chaste_interface__membrane__V) < 1.455604075689676e-6) ? (1 / (-1.0465793304208771e-10 / (1.0 - exp(2.1542940320207204e-7)) - 1.9068413391534758e-10 / (-1.0 + exp(-9.9999999999880736e-8)) + 343500.00000040967 * (30.000001455604075 + var_chaste_interface__membrane__V) * (1.0465793304208771e-10 / (1.0 - exp(2.1542940320207204e-7)) + 1.0465793304208771e-10 / (1.0 - exp(-2.1542940320207204e-7)) + 1.9068413391534758e-10 / (-1.0 + exp(9.9999999999880736e-8)) + 1.9068413391534758e-10 / (-1.0 + exp(-9.9999999999880736e-8))))) : (1 / (0.00013100000000000001 * (30.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__V)) + 7.1899999999999999e-5 * (30.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__V))))); // second
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = (-var_slow_delayed_rectifier_potassium_current__E_Ks + var_chaste_interface__membrane__V) * var_slow_delayed_rectifier_potassium_current__g_Ks * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2; // microA_per_microF
        const double var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_infinity = 1 / (1.0 + exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_orig_deriv = (-var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 + var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_infinity) / var_slow_delayed_rectifier_potassium_current_xs2_gate__tau_xs2; // 1 / second
        const double d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = 0.001 * var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_orig_deriv; // 1 / millisecond
        const double var_sodium_activated_potassium_current__g_K_Na = 0; // milliS_per_microF
        const double var_sodium_activated_potassium_current__kdKNa = 66.0; // millimolar
        const double var_sodium_activated_potassium_current__nKNa = 2.7999999999999998; // dimensionless
        const double var_sodium_activated_potassium_current__pona = 0.84999999999999998 / (1.0 + pow((var_sodium_activated_potassium_current__kdKNa / var_chaste_interface__ionic_concentrations__Nai), var_sodium_activated_potassium_current__nKNa)); // dimensionless
        const double var_sodium_activated_potassium_current__pov = 0.80000000000000004 - 0.65000000000000002 / (1.0 + exp(8.3333333333333339 + 0.066666666666666666 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_sodium_background_current__g_Nab = 0.0040000000000000001; // milliS_per_microF
        const double var_sodium_background_current__i_Na_b = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_sodium_background_current__g_Nab; // microA_per_microF
        const double var_sodium_potassium_pump__I_NaK = 2.25; // microA_per_microF
        const double var_sodium_potassium_pump__K_mKo = 1.5; // millimolar
        const double var_sodium_potassium_pump__K_mNai = 10.0; // millimolar
        const double var_sodium_potassium_pump__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * NV_Ith_S(mParameters, 3)); // dimensionless
        const double var_sodium_potassium_pump__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + 0.036499999999999998 * var_sodium_potassium_pump__sigma * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // dimensionless
        const double var_sodium_potassium_pump__i_NaK = NV_Ith_S(mParameters, 2) * var_sodium_potassium_pump__I_NaK * var_sodium_potassium_pump__f_NaK / ((1.0 + pow(var_sodium_potassium_pump__K_mNai, 2) / pow(var_chaste_interface__ionic_concentrations__Nai, 2)) * (NV_Ith_S(mParameters, 2) + var_sodium_potassium_pump__K_mKo)); // microA_per_microF
        const double var_time_independent_potassium_current__E_K = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 2) / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_ATP_sensitive_potassium_current__i_K_ATP = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_ATP_sensitive_potassium_current__GKbaraATP; // microA_per_microF
        const double var_plateau_potassium_current__i_Kp = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_plateau_potassium_current__Kp * var_plateau_potassium_current__g_Kp; // microA_per_microF
        const double var_sodium_activated_potassium_current__i_K_Na = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_sodium_activated_potassium_current__g_K_Na * var_sodium_activated_potassium_current__pona * var_sodium_activated_potassium_current__pov; // microA_per_microF
        const double var_time_independent_potassium_current__g_K1 = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 2)) * NV_Ith_S(mParameters, 7); // milliS_per_cm2
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K)); // per_second
        const double var_time_independent_potassium_current_K1_gate__beta_K1 = 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V)); // per_second
        const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_microF
        const double var_transient_outward_current__g_to = 1.1000000000000001; // milliS_per_microF
        const double var_transient_outward_current__rvdv = exp(0.01 * var_chaste_interface__membrane__V); // dimensionless
        const double var_transient_outward_current_ydv_gate__alpha_ydv = 15.0 / (1.0 + exp(12.0 + 0.20000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_transient_outward_current_ydv_gate__beta_ydv = 100.0 * exp(5.0 + 0.20000000000000001 * var_chaste_interface__membrane__V) / (1.0 + exp(5.0 + 0.20000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_transient_outward_current_ydv_gate__tau_ydv = 1 / (var_transient_outward_current_ydv_gate__alpha_ydv + var_transient_outward_current_ydv_gate__beta_ydv); // second
        const double var_transient_outward_current_ydv_gate__ydv_ss = var_transient_outward_current_ydv_gate__alpha_ydv / (var_transient_outward_current_ydv_gate__alpha_ydv + var_transient_outward_current_ydv_gate__beta_ydv); // dimensionless
        const double var_transient_outward_current_ydv_gate__ydv_orig_deriv = (-var_chaste_interface__transient_outward_current_ydv_gate__ydv + var_transient_outward_current_ydv_gate__ydv_ss) / var_transient_outward_current_ydv_gate__tau_ydv; // 1 / second
        const double d_dt_chaste_interface_var_transient_outward_current_ydv_gate__ydv = 0.001 * var_transient_outward_current_ydv_gate__ydv_orig_deriv; // 1 / millisecond
        const double var_transient_outward_current_zdv_gate__alpha_zdv = 10000.0 * exp(-1.6000000000000001 + 0.040000000000000001 * var_chaste_interface__membrane__V) / (1.0 + exp(-1.6000000000000001 + 0.040000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_transient_outward_current_zdv_gate__beta_zdv = 10000.0 * exp(-3.6000000000000001 - 0.040000000000000001 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.6000000000000001 - 0.040000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_transient_outward_current_zdv_gate__tau_zdv = 1 / (var_transient_outward_current_zdv_gate__alpha_zdv + var_transient_outward_current_zdv_gate__beta_zdv); // second
        const double var_transient_outward_current__i_to = pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_transient_outward_current__g_to * NV_Ith_S(mParameters, 11) * var_transient_outward_current__rvdv * var_chaste_interface__transient_outward_current_ydv_gate__ydv; // microA_per_microF
        const double var_membrane__dVdt = -(var_ATP_sensitive_potassium_current__i_K_ATP + var_L_type_Ca_channel__i_Ca_L + var_Na_Ca_exchanger__i_NaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_fast_sodium_current__i_Na + var_membrane__I_st + var_non_specific_calcium_activated_current__i_ns_Ca + var_plateau_potassium_current__i_Kp + var_rapid_delayed_rectifier_potassium_current__i_Kr + var_sarcolemmal_calcium_pump__i_p_Ca + var_slow_delayed_rectifier_potassium_current__i_Ks + var_sodium_activated_potassium_current__i_K_Na + var_sodium_background_current__i_Na_b + var_sodium_potassium_pump__i_NaK + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) / NV_Ith_S(mParameters, 5); // dimensionless
        const double var_calcium_dynamics__APtrack_orig_deriv = ((var_membrane__dVdt > 150000.0) ? (100000.0 - 100500.0 * var_chaste_interface__calcium_dynamics__APtrack) : (-500.0 * var_chaste_interface__calcium_dynamics__APtrack)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__APtrack = 0.001 * var_calcium_dynamics__APtrack_orig_deriv; // 1 / millisecond
        const double var_transient_outward_current_zdv_gate__zdv_ss = var_transient_outward_current_zdv_gate__alpha_zdv / (var_transient_outward_current_zdv_gate__alpha_zdv + var_transient_outward_current_zdv_gate__beta_zdv); // dimensionless
        const double var_transient_outward_current_zdv_gate__zdv_orig_deriv = (-var_chaste_interface__transient_outward_current_zdv_gate__zdv + var_transient_outward_current_zdv_gate__zdv_ss) / var_transient_outward_current_zdv_gate__tau_zdv; // 1 / second
        const double d_dt_chaste_interface_var_transient_outward_current_zdv_gate__zdv = 0.001 * var_transient_outward_current_zdv_gate__zdv_orig_deriv; // 1 / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_membrane__V = 0.0;
        }
        else
        {
            const double var_membrane__V_orig_deriv = -(var_ATP_sensitive_potassium_current__i_K_ATP + var_L_type_Ca_channel__i_Ca_L + var_Na_Ca_exchanger__i_NaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_fast_sodium_current__i_Na + var_membrane__I_st + var_non_specific_calcium_activated_current__i_ns_Ca + var_plateau_potassium_current__i_Kp + var_rapid_delayed_rectifier_potassium_current__i_Kr + var_sarcolemmal_calcium_pump__i_p_Ca + var_slow_delayed_rectifier_potassium_current__i_Ks + var_sodium_activated_potassium_current__i_K_Na + var_sodium_background_current__i_Na_b + var_sodium_potassium_pump__i_NaK + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) / NV_Ith_S(mParameters, 5); // millivolt / second
            d_dt_chaste_interface_var_membrane__V = 0.001 * var_membrane__V_orig_deriv; // millivolt / millisecond
        }
        
        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_membrane__V;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_calcium_dynamics__Cai;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_Na_channel_states__P_O_Na;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_Na_channel_states__P_C1;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_Na_channel_states__P_C2;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_Na_channel_states__P_C3;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_Na_channel_states__P_IF;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_Na_channel_states__P_IC3;
        NV_Ith_S(rDY,8) = d_dt_chaste_interface_var_Na_channel_states__P_IC2;
        NV_Ith_S(rDY,9) = d_dt_chaste_interface_var_Na_channel_states__P_IM1;
        NV_Ith_S(rDY,10) = d_dt_chaste_interface_var_Na_channel_states__P_IM2;
        NV_Ith_S(rDY,11) = d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d;
        NV_Ith_S(rDY,12) = d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f;
        NV_Ith_S(rDY,13) = d_dt_chaste_interface_var_T_type_Ca_channel_b_gate__b;
        NV_Ith_S(rDY,14) = d_dt_chaste_interface_var_T_type_Ca_channel_g_gate__g;
        NV_Ith_S(rDY,15) = d_dt_chaste_interface_var_Kr_channel_states__P_O;
        NV_Ith_S(rDY,16) = d_dt_chaste_interface_var_Kr_channel_states__P_C1;
        NV_Ith_S(rDY,17) = d_dt_chaste_interface_var_Kr_channel_states__P_C2;
        NV_Ith_S(rDY,18) = d_dt_chaste_interface_var_Kr_channel_states__P_C3;
        NV_Ith_S(rDY,19) = d_dt_chaste_interface_var_Kr_channel_states__P_I;
        NV_Ith_S(rDY,20) = d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1;
        NV_Ith_S(rDY,21) = d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2;
        NV_Ith_S(rDY,22) = d_dt_chaste_interface_var_transient_outward_current_zdv_gate__zdv;
        NV_Ith_S(rDY,23) = d_dt_chaste_interface_var_transient_outward_current_ydv_gate__ydv;
        NV_Ith_S(rDY,24) = d_dt_chaste_interface_var_calcium_dynamics__Ca_JSR;
        NV_Ith_S(rDY,25) = d_dt_chaste_interface_var_calcium_dynamics__Ca_NSR;
        NV_Ith_S(rDY,26) = d_dt_chaste_interface_var_calcium_dynamics__APtrack;
        NV_Ith_S(rDY,27) = d_dt_chaste_interface_var_calcium_dynamics__APtrack2;
        NV_Ith_S(rDY,28) = d_dt_chaste_interface_var_calcium_dynamics__APtrack3;
        NV_Ith_S(rDY,29) = d_dt_chaste_interface_var_calcium_dynamics__Cainfluxtrack;
        NV_Ith_S(rDY,30) = d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack;
        NV_Ith_S(rDY,31) = d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack2;
        NV_Ith_S(rDY,32) = d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack3;
        NV_Ith_S(rDY,33) = d_dt_chaste_interface_var_ionic_concentrations__Nai;
        NV_Ith_S(rDY,34) = d_dt_chaste_interface_var_ionic_concentrations__Ki;
    }

    void Cellclancy_rudy_2002FromCellMLCvode::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time_converted, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__calcium_dynamics__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.000104
        double var_chaste_interface__Na_channel_states__P_O_Na = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 3.756e-13
        double var_chaste_interface__Na_channel_states__P_C1 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 4.744e-10
        double var_chaste_interface__Na_channel_states__P_C2 = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 9.776e-08
        double var_chaste_interface__Na_channel_states__P_C3 = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 7.583e-06
        double var_chaste_interface__Na_channel_states__P_IF = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 8.147e-11
        double var_chaste_interface__Na_channel_states__P_IC3 = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 1.302e-06
        double var_chaste_interface__Na_channel_states__P_IC2 = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 1.679e-08
        double var_chaste_interface__Na_channel_states__P_IM1 = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 9.736e-12
        double var_chaste_interface__Na_channel_states__P_IM2 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 6.187e-14
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 3.289e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.99975
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.000983
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.9942
        double var_chaste_interface__Kr_channel_states__P_O = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 1.104e-10
        double var_chaste_interface__Kr_channel_states__P_C1 = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 3.4083e-08
        double var_chaste_interface__Kr_channel_states__P_C2 = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 1.69e-08
        double var_chaste_interface__Kr_channel_states__P_C3 = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 4.949e-06
        double var_chaste_interface__Kr_channel_states__P_I = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 3.386e-11
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.01167
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 0.99998
        double var_chaste_interface__calcium_dynamics__Ca_JSR = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 1.516
        double var_chaste_interface__calcium_dynamics__Ca_NSR = NV_Ith_S(rY, 25);
        // Units: millimolar; Initial value: 1.518
        double var_chaste_interface__calcium_dynamics__APtrack = NV_Ith_S(rY, 26);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__APtrack2 = NV_Ith_S(rY, 27);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__APtrack3 = NV_Ith_S(rY, 28);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__Cainfluxtrack = NV_Ith_S(rY, 29);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack = NV_Ith_S(rY, 30);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack2 = NV_Ith_S(rY, 31);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack3 = NV_Ith_S(rY, 32);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ionic_concentrations__Nai = NV_Ith_S(rY, 33);
        // Units: millimolar; Initial value: 10.532
        double var_chaste_interface__ionic_concentrations__Ki = NV_Ith_S(rY, 34);
        // Units: millimolar; Initial value: 140.557
        const double var_x0 = exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V);
        const double var_x1 = 1.0 + var_x0;
        const double var_x2 = 1 / var_x1;
        const double var_x3 = 0.0055199999999999997 * var_x2;
        const double var_x4 = pow(NV_Ith_S(mParameters, 2), 0.23999999999999999);
        const double var_x5 = 1.921898339896919e-8 * var_x4;
        const double var_x6 = var_chaste_interface__Na_channel_states__P_O_Na * NV_Ith_S(mParameters, 6);
        const double var_x7 = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2);
        const double var_x8 = var_x7 * var_chaste_interface__T_type_Ca_channel_g_gate__g;
        const double var_x9 = 0.050000000000000003 * var_x8;
        const double var_x10 = pow(NV_Ith_S(mParameters, 2), 0.58999999999999997) * NV_Ith_S(mParameters, 8);
        const double var_x11 = var_x10 * var_chaste_interface__Kr_channel_states__P_O;
        const double var_x12 = 1 / var_chaste_interface__ionic_concentrations__Ki;
        const double var_x13 = log(var_x12 * NV_Ith_S(mParameters, 2));
        const double var_x14 = -26.712338705498265 * var_x13 + var_chaste_interface__membrane__V;
        const double var_x15 = 1 / var_chaste_interface__calcium_dynamics__Cai;
        const double var_x16 = pow(var_x15, 1.3999999999999999);
        const double var_x17 = 1.0 + 6.4818210260626455e-7 * var_x16;
        const double var_x18 = 1 / var_x17;
        const double var_x19 = (0.433 + 0.25979999999999998 * var_x18) * NV_Ith_S(mParameters, 9);
        const double var_x20 = var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2;
        const double var_x21 = var_x19 * var_x20;
        const double var_x22 = 0.0003485581177541574 * NV_Ith_S(mParameters, 4);
        const double var_x23 = exp(9.9999999999999995e-8);
        const double var_x24 = 1 / (-1.0 + var_x23);
        const double var_x25 = -0.75 * NV_Ith_S(mParameters, 2);
        const double var_x26 = 0.75 * var_chaste_interface__ionic_concentrations__Ki;
        const double var_x27 = var_x24 * (var_x25 + var_x23 * var_x26);
        const double var_x28 = exp(-9.9999999999999995e-8);
        const double var_x29 = 1 / (-1.0 + var_x28);
        const double var_x30 = var_x29 * (var_x25 + var_x26 * var_x28);
        const double var_x31 = fabs(var_chaste_interface__membrane__V);
        const double var_x32 = var_x31 < 2.6712338705498262e-6;
        const double var_x33 = 0.037435883507802616 * var_chaste_interface__membrane__V;
        const double var_x34 = exp(var_x33);
        const double var_x35 = var_x25 + var_x26 * var_x34;
        const double var_x36 = -1.0 + var_x34;
        const double var_x37 = NV_Ith_S(mParameters, 4) / var_x36;
        const double var_x38 = 0.00069711623550831479 * var_x35 * var_x37;
        const double var_x39 = var_x34 * var_chaste_interface__membrane__V;
        const double var_x40 = var_x37 * var_x39;
        const double var_x41 = var_x39 * NV_Ith_S(mParameters, 4) / pow(var_x36, 2);
        const double var_x42 = 1 / (1.0 + 1666.6666666666667 * var_chaste_interface__calcium_dynamics__Cai);
        const double var_x43 = var_x42;
        const double var_x44 = var_x43 * var_chaste_interface__L_type_Ca_channel_f_gate__f;
        const double var_x45 = var_x44 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x46 = 0.0012190504118344883 * NV_Ith_S(mParameters, 4);
        const double var_x47 = -0.75 * NV_Ith_S(mParameters, 3);
        const double var_x48 = 0.75 * var_chaste_interface__ionic_concentrations__Nai;
        const double var_x49 = var_x24 * (var_x47 + var_x23 * var_x48);
        const double var_x50 = var_x29 * (var_x47 + var_x28 * var_x48);
        const double var_x51 = var_x47 + var_x34 * var_x48;
        const double var_x52 = 0.0024381008236689767 * var_x37 * var_x51;
        const double var_x53 = 3.9009613178703626 * NV_Ith_S(mParameters, 4);
        const double var_x54 = -0.34100000000000003 * NV_Ith_S(mParameters, 1);
        const double var_x55 = var_chaste_interface__calcium_dynamics__Cai;
        const double var_x56 = var_x24 * (var_x54 + var_x23 * var_x55);
        const double var_x57 = var_x29 * (var_x54 + var_x28 * var_x55);
        const double var_x58 = var_x53 * var_x56 + var_x53 * var_x57;
        const double var_x59 = var_x31 < 1.3356169352749131e-6;
        const double var_x60 = exp(0.074871767015605231 * var_chaste_interface__membrane__V);
        const double var_x61 = var_x54 + var_x55 * var_x60;
        const double var_x62 = -1.0 + var_x60;
        const double var_x63 = NV_Ith_S(mParameters, 4) / var_x62;
        const double var_x64 = 7.8019226357407252 * var_x63;
        const double var_x65 = var_x61 * var_x64;
        const double var_x66 = var_x60 * var_chaste_interface__membrane__V;
        const double var_x67 = 0.58414373385695628 * var_x66;
        const double var_x68 = var_x63 * var_x67 * var_chaste_interface__calcium_dynamics__Cai;
        const double var_x69 = var_x61 * var_x67 * NV_Ith_S(mParameters, 4) / pow(var_x62, 2);
        const double var_x70 = var_x45 * ((var_x59) ? (var_x58) : (var_x65 + var_x68 - var_x69));
        const double var_x71 = exp(0.01 * var_chaste_interface__membrane__V);
        const double var_x72 = var_x71 * pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * NV_Ith_S(mParameters, 11);
        const double var_x73 = var_x72 * var_chaste_interface__transient_outward_current_ydv_gate__ydv;
        const double var_x74 = 1.1000000000000001 * var_x73;
        const double var_x75 = exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 6.3708927812613361 * var_x13);
        const double var_x76 = 1.0 + var_x75;
        const double var_x77 = 1 / var_x76;
        const double var_x78 = exp(-2.4444678999999998 + 13.738155796237757 * var_x13 - 0.51429999999999998 * var_chaste_interface__membrane__V);
        const double var_x79 = 1.0 + var_x78;
        const double var_x80 = 1 / var_x79;
        const double var_x81 = exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 2.1455350448256207 * var_x13);
        const double var_x82 = exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 1.6494869150645177 * var_x13);
        const double var_x83 = var_x82 + 0.49124000000000001 * var_x81;
        const double var_x84 = var_x80 * var_x83;
        const double var_x85 = 1 / (1000.0 * var_x84 + 1020.0 * var_x77);
        const double var_x86 = sqrt(NV_Ith_S(mParameters, 2));
        const double var_x87 = var_x77 * var_x86 * NV_Ith_S(mParameters, 7);
        const double var_x88 = var_x85 * var_x87;
        const double var_x89 = 438.93811257017387 * var_x88;
        const double var_x90 = pow(NV_Ith_S(mParameters, 3), 3);
        const double var_x91 = var_x90 * var_chaste_interface__calcium_dynamics__Cai;
        const double var_x92 = pow(var_chaste_interface__ionic_concentrations__Nai, 3);
        const double var_x93 = var_x34 * NV_Ith_S(mParameters, 1);
        const double var_x94 = var_x92 * var_x93;
        const double var_x95 = var_x94 - var_x91;
        const double var_x96 = exp(-0.031820500981632228 * var_chaste_interface__membrane__V);
        const double var_x97 = 0.031820500981632228 * var_x96;
        const double var_x98 = 1.0 + 0.0001 * var_x96 * (var_x91 + var_x94);
        const double var_x99 = NV_Ith_S(mParameters, 10) / var_x98;
        const double var_x100 = var_x95 * var_x97 * var_x99;
        const double var_x101 = var_x95 * NV_Ith_S(mParameters, 10) / pow(var_x98, 2);
        const double var_x102 = var_x101 * var_x96 * (var_x97 * (0.0001 * var_x91 + 0.0001 * var_x94) - 3.7435883507802621e-6 * var_x94 * var_x96);
        const double var_x103 = 1 / (1.5 + NV_Ith_S(mParameters, 2));
        const double var_x104 = exp(-0.003743588350780262 * var_chaste_interface__membrane__V);
        const double var_x105 = exp(0.01485884101040119 * NV_Ith_S(mParameters, 3));
        const double var_x106 = exp(-var_x33);
        const double var_x107 = 1.0 + 0.1245 * var_x104 + 0.036499999999999998 * var_x106 * (-0.14285714285714285 + 0.14285714285714285 * var_x105);
        const double var_x108 = pow(var_chaste_interface__ionic_concentrations__Nai, 2);
        const double var_x109 = 1 / var_x108;
        const double var_x110 = 2.25 / (1.0 + 100.0 * var_x109);
        const double var_x111 = var_x96 * var_x99;
        const double var_x112 = var_x111 * var_x94;
        const double var_x113 = 0.037435883507802616 * var_x112;
        const double var_x114 = var_x75 / pow(var_x76, 2);
        const double var_x115 = 1000.0 * var_x80;
        const double var_x116 = var_x78 * var_x83 / pow(var_x79, 2);
        const double var_x117 = 0.0004218936106979757 * var_x14 * var_x87 / pow((var_x77 + 0.98039215686274506 * var_x84), 2);
        const double var_x118 = var_x14 * var_x85 * var_x86 * NV_Ith_S(mParameters, 7);
        const double var_x119 = 1 / NV_Ith_S(mParameters, 5);
        const double var_x120 = 0.001 * var_x119;
        const double var_x121 = var_x111 * var_x90;
        const double var_x122 = 6.5127375e-9 * NV_Ith_S(mParameters, 4);
        const double var_x123 = var_x122 * var_x50;
        const double var_x124 = var_x123 + var_x122 * var_x49;
        const double var_x125 = 0.5 + 187179.41753901311 * var_chaste_interface__membrane__V;
        const double var_x126 = -var_x123;
        const double var_x127 = var_x52 * var_chaste_interface__membrane__V;
        const double var_x128 = ((var_x32) ? (var_x126 + var_x124 * var_x125) : (var_x127));
        const double var_x129 = var_x128 * var_chaste_interface__L_type_Ca_channel_f_gate__f;
        const double var_x130 = var_chaste_interface__L_type_Ca_channel_d_gate__d / pow((0.00059999999999999995 + var_chaste_interface__calcium_dynamics__Cai), 2);
        const double var_x131 = 0.00059999999999999995 * var_x130;
        const double var_x132 = 1.8621604999999999e-9 * NV_Ith_S(mParameters, 4);
        const double var_x133 = var_x132 * var_x30;
        const double var_x134 = var_x133 + var_x132 * var_x27;
        const double var_x135 = -var_x133;
        const double var_x136 = var_x38 * var_chaste_interface__membrane__V;
        const double var_x137 = ((var_x32) ? (var_x135 + var_x125 * var_x134) : (var_x136));
        const double var_x138 = var_x131 * var_chaste_interface__L_type_Ca_channel_f_gate__f;
        const double var_x139 = var_x101 * pow(var_x96, 2);
        const double var_x140 = var_x139 * var_x90;
        const double var_x141 = 0.0001 * var_x140;
        const double var_x142 = 1 / (0.018329999999999999 * var_chaste_interface__ionic_concentrations__Nai + var_chaste_interface__ionic_concentrations__Ki);
        const double var_x143 = -26.712338705498265 * log(var_x142 * (0.018329999999999999 * NV_Ith_S(mParameters, 3) + NV_Ith_S(mParameters, 2))) + var_chaste_interface__membrane__V;
        const double var_x144 = var_x143 * var_x20 * NV_Ith_S(mParameters, 9);
        const double var_x145 = 1.042038e-5 * NV_Ith_S(mParameters, 4);
        const double var_x146 = var_x23 * var_x24;
        const double var_x147 = var_x28 * var_x29;
        const double var_x148 = var_x145 * var_x147;
        const double var_x149 = -var_x148 + (0.5 + 374358.83507802623 * var_chaste_interface__membrane__V) * (var_x148 + var_x145 * var_x146);
        const double var_x150 = var_x64 * var_x66;
        const double var_x151 = var_x145 * var_x57;
        const double var_x152 = 374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (var_x151 + var_x145 * var_x56);
        const double var_x153 = var_x152 - var_x151;
        const double var_x154 = var_x65 * var_chaste_interface__membrane__V;
        const double var_x155 = ((var_x59) ? (var_x153) : (var_x154));
        const double var_x156 = 0.00050000000000000001 + var_chaste_interface__calcium_dynamics__Cai;
        const double var_x157 = 1.1499999999999999 / var_x156;
        const double var_x158 = pow(var_x156, (-2));
        const double var_x159 = var_x157 + 0.040282206767891383 * var_x15 + 0.6678084676374566 * var_x15 * var_x8 - 1.1499999999999999 * var_x158 * var_chaste_interface__calcium_dynamics__Cai;
        const double var_x160 = var_x159 + var_x45 * ((var_x59) ? (var_x149) : (var_x150)) - var_x138 * var_x155;
        const double var_x161 = 1 / var_chaste_interface__ionic_concentrations__Nai;
        const double var_x162 = log(var_x161 * NV_Ith_S(mParameters, 3));
        const double var_x163 = -26.712338705498265 * var_x162 + var_chaste_interface__membrane__V;
        const double var_x164 = var_x155 * var_x44;
        const double var_x165 = var_x43 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x166 = log(var_x15 * NV_Ith_S(mParameters, 1));
        const double var_x167 = -13.356169352749133 * var_x166 + var_chaste_interface__membrane__V;
        const double var_x168 = var_x167 * var_chaste_interface__T_type_Ca_channel_b_gate__b * var_chaste_interface__T_type_Ca_channel_g_gate__g;
        const double var_x169 = var_x167 * var_x7;
        const double var_x170 = 0.001 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2;
        const double var_x171 = var_x119 * var_x143 * var_x19;
        const double var_x172 = 0.001 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1;
        const double var_x173 = var_x119 * var_x14;
        const double var_x174 = 0.5 + 187179.41753901311 * var_chaste_interface__membrane__V;
        const double var_x175 = 4.8845531249999998e-9 * NV_Ith_S(mParameters, 4);
        const double var_x176 = var_x147 * var_x175;
        const double var_x177 = var_x103 * NV_Ith_S(mParameters, 2) / var_x107;
        const double var_x178 = var_x142 * var_x21;
        const double var_x179 = var_x108 * var_x93;
        const double var_x180 = var_x111 * var_x179;
        const double var_x181 = 3 * var_x180;
        const double var_x182 = var_x139 * var_x179;
        const double var_x183 = 0.00030000000000000003 * var_x182;
        const double var_x184 = 1.396620375e-9 * NV_Ith_S(mParameters, 4);
        const double var_x185 = var_x147 * var_x184;
        const double var_x186 = var_x114 * var_x12;
        const double var_x187 = var_x111 * var_x95;
        const double var_x188 = 0.003016 + var_x9;
        const double var_x189 = 0.0023800000000000002 + var_chaste_interface__calcium_dynamics__Cai;
        const double var_x190 = 1.0 + 0.00011900000000000002 / pow(var_x189, 2) + 3.5000000000000004e-5 * var_x158;
        const double var_x191 = 1 / var_x190;
        const double var_x192 = 1 / M_PI;
        const double var_x193 = var_x191 * var_x192;
        const double var_x194 = 9.0316078310111333e-5 * var_x193;
        const double var_x195 = 0.00092000000000000003 + var_chaste_interface__calcium_dynamics__Cai;
        const double var_x196 = 1 / var_x195;
        const double var_x197 = 0.71029411764705874 * var_x196;
        const double var_x198 = 1.0 - var_chaste_interface__calcium_dynamics__APtrack2;
        const double var_x199 = 0.00062 + var_chaste_interface__calcium_dynamics__Cainfluxtrack;
        const double var_x200 = 1 / var_x199;
        const double var_x201 = -0.00018000000000000001 + var_chaste_interface__calcium_dynamics__Cainfluxtrack;
        const double var_x202 = var_x200 * var_x201 * NV_Ith_S(mParameters, 0);
        const double var_x203 = var_x198 * var_x202;
        const double var_x204 = var_chaste_interface__calcium_dynamics__Cainfluxtrack > 0.00018000000000000001;
        const double var_x205 = var_chaste_interface__calcium_dynamics__OVRLDtrack2 > 0;
        const double var_x206 = ((var_x204) ? (var_x203 * var_chaste_interface__calcium_dynamics__APtrack2) : ((var_x205) ? (4000.0 * (1.0 - var_chaste_interface__calcium_dynamics__OVRLDtrack2) * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (0)));
        const double var_x207 = 0.0070588235294117632 * var_x206;
        const double var_x208 = var_chaste_interface__calcium_dynamics__Cai / pow(var_x195, 2);
        const double var_x209 = 0.090316078310111333 * var_x192;
        const double var_x210 = 0.001 * var_x191;
        const double var_x211 = -var_chaste_interface__calcium_dynamics__Cai + var_chaste_interface__calcium_dynamics__Ca_JSR;
        const double var_x212 = 0.040282206767891383 * var_x166;
        const double var_x213 = var_x157 * var_chaste_interface__calcium_dynamics__Cai;
        const double var_x214 = var_x167 * var_x9;
        const double var_x215 = var_x213 + var_x214 - var_x212;
        const double var_x216 = var_x42 * var_chaste_interface__L_type_Ca_channel_f_gate__f;
        const double var_x217 = var_x155 * var_x194;
        const double var_x218 = var_x42 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x219 = ((var_x204) ? (var_x203 - var_x202 * var_chaste_interface__calcium_dynamics__APtrack2) : (0));
        const double var_x220 = var_x210 * (0.0070588235294117632 * var_chaste_interface__calcium_dynamics__Ca_JSR - 0.0070588235294117632 * var_chaste_interface__calcium_dynamics__Cai);
        const double var_x221 = var_x198 * var_chaste_interface__calcium_dynamics__APtrack2 * NV_Ith_S(mParameters, 0);
        const double var_x222 = ((var_x204) ? (var_x200 * var_x221 - var_x201 * var_x221 / pow(var_x199, 2)) : (0));
        const double var_x223 = ((var_x204) ? (0) : ((var_x205) ? (4000.0 - 8000.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (0)));
        const double var_x224 = -0.04926108374384236 * var_chaste_interface__membrane__V;
        const double var_x225 = exp(0.49261083743842365 + var_x224);
        const double var_x226 = exp(0.033692722371967652 * var_chaste_interface__membrane__V);
        const double var_x227 = 0.30923180592991917 * var_x226;
        const double var_x228 = exp(-0.083333333333333329 * var_chaste_interface__membrane__V);
        const double var_x229 = exp(-0.0066666666666666671 * var_chaste_interface__membrane__V);
        const double var_x230 = (0.0085583333333333327 * var_x228 + 0.0016666666666666668 * var_x229) / pow((var_x229 + 0.4108 * var_x228), 2);
        const double var_x231 = 60.832000000000001 * var_x230;
        const double var_x232 = 1 / (8.4000000000000004 + 0.02 * var_chaste_interface__membrane__V);
        const double var_x233 = 1 / (0.25 * var_x229 + 0.1027 * var_x228);
        const double var_x234 = exp(-0.12987012987012986 * var_chaste_interface__membrane__V);
        const double var_x235 = 1 / var_x225;
        const double var_x236 = var_x226 * var_x233 * var_x234 * var_x235;
        const double var_x237 = var_x232 * var_x236;
        const double var_x238 = var_x236 / pow((1 + 0.0023809523809523807 * var_chaste_interface__membrane__V), 2);
        const double var_x239 = 0.96266383952581813 * var_x226 * var_x230 * var_x232 * var_x234 * var_x235;
        const double var_x240 = 9.1780000000000008 * var_x226;
        const double var_x241 = 0.22 * var_x225;
        const double var_x242 = 3.802 * var_x233;
        const double var_x243 = 0.060166489970363633 * var_x237;
        const double var_x244 = exp(0.24630541871921183 + var_x224);
        const double var_x245 = 0.009852216748768473 * var_x244;
        const double var_x246 = 4.926363636363636e-8 * var_x234;
        const double var_x247 = exp(-0.066666666666666666 * var_chaste_interface__membrane__V);
        const double var_x248 = 71.871455576559541 * (0.0068466666666666667 * var_x247 + 0.0015333333333333334 * var_x229) / pow((var_x229 + 0.44652173913043475 * var_x247), 2);
        const double var_x249 = 0.20000000000000001 * var_x244;
        const double var_x250 = -var_x249;
        const double var_x251 = 2.0000000000000002e-5 * var_chaste_interface__membrane__V;
        const double var_x252 = -0.0084000000000000012 - var_x251;
        const double var_x253 = 3.802 / (0.1027 * var_x247 + 0.23000000000000001 * var_x229);
        const double var_x254 = 3.7933e-7 * var_x234;
        const double var_x255 = exp(var_x224);
        const double var_x256 = 0.0094433497536945809 * var_x255;
        const double var_x257 = var_x256 - var_x248;
        const double var_x258 = exp(-0.058823529411764705 * var_chaste_interface__membrane__V);
        const double var_x259 = 95.049999999999983 * (0.0013333333333333335 * var_x229 + 0.0060411764705882356 * var_x258) / pow((var_x229 + 0.51349999999999996 * var_x258), 2);
        const double var_x260 = 0.19169999999999998 * var_x255;
        const double var_x261 = -var_x253 - var_x260;
        const double var_x262 = 3.802 / (0.20000000000000001 * var_x229 + 0.1027 * var_x258);
        const double var_x263 = -var_x259;
        const double var_x264 = -var_x262;
        const double var_x265 = 0.0030923180592991916 * var_x226;
        const double var_x266 = 0.0084000000000000012 + var_x251;
        const double var_x267 = 0.09178 * var_x226;
        const double var_x268 = -var_x254;
        const double var_x269 = 3.2550716413675699e-6 * var_x226;
        const double var_x270 = 9.8527272727272722e-10 * var_x234 * var_chaste_interface__Na_channel_states__P_IM2;
        const double var_x271 = 9.6610526315789479e-5 * var_x226;
        const double var_x272 = 7.5866000000000003e-9 * var_x234;
        const double var_x273 = exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V);
        const double var_x274 = 1.0 + var_x273;
        const double var_x275 = 0.001 / var_x274;
        const double var_x276 = -0.001 + var_x275;
        const double var_x277 = exp(9.999999999851651e-8);
        const double var_x278 = (1.0 - var_x277) / (1.0 + var_x277);
        const double var_x279 = exp(-9.999999999851651e-8);
        const double var_x280 = (1.0 - var_x279) / (1.0 + var_x279);
        const double var_x281 = 45787.545788225034 * var_x280;
        const double var_x282 = (9.9999993759999999 + var_chaste_interface__membrane__V) * (-var_x281 - 45787.545788225034 * var_x278);
        const double var_x283 = 10.0 + var_chaste_interface__membrane__V;
        const double var_x284 = fabs(var_x283) < 6.2399999999074307e-7;
        const double var_x285 = 1.0 - var_x273;
        const double var_x286 = 1 / var_x285;
        const double var_x287 = 35.0 * var_x274 * var_x286;
        const double var_x288 = 5.6089743589743595 * var_x273 * var_x283;
        const double var_x289 = ((var_x284) ? (1.5575039999537894e-12 * (-36688738612.904076 * var_x278 - 36688738612.904076 * var_x280) / pow((-var_x282 + 0.057142857142857141 * var_x280), 2)) : (var_x287 - var_x286 * var_x288 - var_x274 * var_x288 / pow(var_x285, 2)));
        const double var_x290 = 1.0 - var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x291 = ((var_x284) ? (1 / (var_x281 - 801282.05129393819 * var_x282)) : (var_x283 * var_x287));
        const double var_x292 = 0.00016025641025641026 * var_x273 * var_x291 / pow(var_x274, 2);
        const double var_x293 = exp(-0.113569 * pow((1 + 0.10000000000000001 * var_chaste_interface__membrane__V), 2));
        const double var_x294 = 19.699999999999999 * var_x293;
        const double var_x295 = 0.001 - 0.001 * var_chaste_interface__L_type_Ca_channel_f_gate__f;
        const double var_x296 = exp(2.5 - 0.050000000000000003 * var_chaste_interface__membrane__V);
        const double var_x297 = 1.0 + var_x296;
        const double var_x298 = 0.029999999999999999 * var_x296 / pow(var_x297, 2);
        const double var_x299 = exp(4.0 + 0.125 * var_chaste_interface__membrane__V);
        const double var_x300 = 1.0 + var_x299;
        const double var_x301 = 0.125 * var_x299 / pow(var_x300, 2);
        const double var_x302 = 0.019699999999999999 * var_x293;
        const double var_x303 = -0.02 - var_x302;
        const double var_x304 = 1 / var_x300;
        const double var_x305 = 0.59999999999999998 / var_x297;
        const double var_x306 = var_x304 + var_x305;
        const double var_x307 = -0.022713800000000003 - 0.0022713799999999999 * var_chaste_interface__membrane__V;
        const double var_x308 = 1.0 - var_x304 - var_x305;
        const double var_x309 = exp(-1.2962962962962963 - 0.092592592592592587 * var_chaste_interface__membrane__V);
        const double var_x310 = 1.0 + var_x309;
        const double var_x311 = exp(5.5555555555555554 + 0.22222222222222221 * var_chaste_interface__membrane__V);
        const double var_x312 = 1.0 + var_x311;
        const double var_x313 = 1 / var_x312;
        const double var_x314 = 1 / (0.0037000000000000002 + 0.0061000000000000004 * var_x313);
        const double var_x315 = exp(10.714285714285715 + 0.17857142857142858 * var_chaste_interface__membrane__V);
        const double var_x316 = 1.0 + var_x315;
        const double var_x317 = var_chaste_interface__membrane__V <= 0;
        const double var_x318 = ((var_x317) ? (1 / (0.012 - 0.00087500000000000002 * var_chaste_interface__membrane__V)) : (83.333333333333329));
        const double var_x319 = exp(-0.021579999999999998 * var_chaste_interface__membrane__V);
        const double var_x320 = exp(0.00094200000000000002 * var_chaste_interface__membrane__V);
        const double var_x321 = var_x320 * pow(NV_Ith_S(mParameters, 2), (-0.29999999999999999));
        const double var_x322 = 0.00097032784950386709 * var_x321;
        const double var_x323 = 0.055471529999999998 * var_chaste_interface__membrane__V;
        const double var_x324 = exp(-1.9969750799999999 + var_x323);
        const double var_x325 = var_x324 * var_chaste_interface__Kr_channel_states__P_C1;
        const double var_x326 = 0.0036333852149999998 * var_x325;
        const double var_x327 = exp(-0.58799999999999997 - 0.023519999999999999 * var_chaste_interface__membrane__V);
        const double var_x328 = var_x327 / NV_Ith_S(mParameters, 2);
        const double var_x329 = 0.04646376 * var_x328;
        const double var_x330 = 0.0029357000000000003 * var_x319;
        const double var_x331 = 1.0300720270741688 * var_x321;
        const double var_x332 = 0.065500000000000003 * var_x324;
        const double var_x333 = 1.9755 * var_x328;
        const double var_x334 = var_x319 * var_x327 * pow(NV_Ith_S(mParameters, 2), (-0.69999999999999996)) / var_x320;
        const double var_x335 = 0.00025922405137351976 * var_x334;
        const double var_x336 = 0.0056301648793171408 * var_x334;
        const double var_x337 = exp(-0.036588000000000002 * var_chaste_interface__membrane__V);
        const double var_x338 = var_x337 * var_chaste_interface__Kr_channel_states__P_C2;
        const double var_x339 = exp(-0.66565836 + var_x323);
        const double var_x340 = 0.0030786699149999998 * var_x339 * var_chaste_interface__Kr_channel_states__P_C3;
        const double var_x341 = 0.0023570000000000002 * var_x337;
        const double var_x342 = 0.055500000000000001 * var_x339;
        const double var_x343 = exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__membrane__V);
        const double var_x344 = 1.0 + var_x343;
        const double var_x345 = 0.001 / var_x344;
        const double var_x346 = 1 / (-1.0 + exp(9.9999999999880736e-8));
        const double var_x347 = 1 / (-1.0 + exp(-9.9999999999880736e-8));
        const double var_x348 = 1 / (1.0 - exp(2.1542940320207204e-7));
        const double var_x349 = 1 / (1.0 - exp(-2.1542940320207204e-7));
        const double var_x350 = 30.0 + var_chaste_interface__membrane__V;
        const double var_x351 = fabs(var_x350) < 1.455604075689676e-6;
        const double var_x352 = exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__V);
        const double var_x353 = -1.0 + var_x352;
        const double var_x354 = 1 / var_x353;
        const double var_x355 = 0.13100000000000001 * var_x354;
        const double var_x356 = exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__V);
        const double var_x357 = 1.0 - var_x356;
        const double var_x358 = 1 / var_x357;
        const double var_x359 = 0.071899999999999992 * var_x358;
        const double var_x360 = var_x350 * var_x352 / pow(var_x353, 2);
        const double var_x361 = var_x350 * var_x356 / pow(var_x357, 2);
        const double var_x362 = (30.000001455604075 + var_chaste_interface__membrane__V) * (1.0465793304208771e-10 * var_x348 + 1.0465793304208771e-10 * var_x349 + 1.9068413391534758e-10 * var_x346 + 1.9068413391534758e-10 * var_x347);
        const double var_x363 = ((var_x351) ? (343500000.00040966 * var_x362 - 1.9068413391534758e-7 * var_x347 - 1.046579330420877e-7 * var_x348) : (var_x350 * var_x355 + var_x350 * var_x359));
        const double var_x364 = 5.9880239520958083e-5 * var_x343 / pow(var_x344, 2);
        const double var_x365 = 0.032750000000000001 * var_x354;
        const double var_x366 = 0.017974999999999998 * var_x358;
        const double var_x367 = ((var_x351) ? (85875000.000102416 * var_x362 - 4.7671033478836895e-8 * var_x347 - 2.6164483260521924e-8 * var_x348) : (var_x350 * var_x365 + var_x350 * var_x366));
        const double var_x368 = 0.040000000000000001 * var_chaste_interface__membrane__V;
        const double var_x369 = exp(-1.6000000000000001 + var_x368);
        const double var_x370 = 1.0 + var_x369;
        const double var_x371 = var_x369 / var_x370;
        const double var_x372 = exp(-3.6000000000000001 - var_x368);
        const double var_x373 = 1.0 + var_x372;
        const double var_x374 = var_x372 / var_x373;
        const double var_x375 = 10000.0 * var_x371 + 10000.0 * var_x374;
        const double var_x376 = 1 / var_x375;
        const double var_x377 = 10.0 * var_x371;
        const double var_x378 = 400.0 * var_x371;
        const double var_x379 = 400.0 * pow(var_x372, 2) / pow(var_x373, 2);
        const double var_x380 = pow(var_x369, 2) / pow(var_x370, 2);
        const double var_x381 = 400.0 * var_x380;
        const double var_x382 = 400.0 * var_x374;
        const double var_x383 = 0.40000000000000002 * var_x376;
        const double var_x384 = 0.20000000000000001 * var_chaste_interface__membrane__V;
        const double var_x385 = exp(12.0 + var_x384);
        const double var_x386 = 1.0 + var_x385;
        const double var_x387 = 1 / var_x386;
        const double var_x388 = exp(5.0 + var_x384);
        const double var_x389 = 1.0 + var_x388;
        const double var_x390 = var_x388 / var_x389;
        const double var_x391 = 15.0 * var_x387 + 100.0 * var_x390;
        const double var_x392 = var_x385 / pow(var_x386, 2);
        const double var_x393 = 3.0 * var_x392;
        const double var_x394 = 20.0 * pow(var_x388, 2) / pow(var_x389, 2);
        const double var_x395 = 20.0 * var_x390;
        const double var_x396 = 1 / var_x391;
        const double var_x397 = 0.014999999999999999 * var_x387;
        const double var_x398 = 0.80000000000000004 + var_chaste_interface__calcium_dynamics__Ca_JSR;
        const double var_x399 = pow(var_x398, (-2));
        const double var_x400 = 1 / (1.0 + 8.0 * var_x399);
        const double var_x401 = 0.001 * var_x400;
        const double var_x402 = var_x401 * (-var_chaste_interface__calcium_dynamics__Ca_JSR + var_chaste_interface__calcium_dynamics__Cai);
        const double var_x403 = var_x216 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x404 = 0.0070159999999999997 * var_chaste_interface__membrane__V;
        const double var_x405 = 0.10684935482199306 * var_x162;
        const double var_x406 = GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted) / HeartConfig::Instance()->GetCapacitance();
        const double var_x407 = var_x14 * var_x3;
        const double var_x408 = var_x14 * var_x5;
        const double var_x409 = var_x163 * var_x6;
        const double var_x410 = var_x11 * var_x14;
        const double var_x411 = var_x110 * var_x177;
        const double var_x412 = var_x14 * var_x74;
        const double var_x413 = 0.433 * var_x144 * (1.0 + 0.59999999999999998 * var_x18);
        const double var_x414 = var_x14 * var_x89;
        const double var_x415 = var_x187 + var_x215 + var_x404 + var_x406 + var_x407 + var_x408 + var_x409 + var_x410 + var_x411 + var_x412 + var_x413 + var_x414 - var_x405 + var_x154 * var_x403;
        const double var_x416 = var_x119;
        const double var_x417 = var_x45 * (var_x126 + var_x124 * var_x174);
        const double var_x418 = var_x45 * (var_x135 + var_x134 * var_x174);
        const double var_x419 = (var_chaste_interface__calcium_dynamics__APtrack > 0.17999999999999999) && (var_chaste_interface__calcium_dynamics__APtrack < 0.20000000000000001);
        const double var_x420 = var_x100 + var_x188 - var_x102 - var_x113;
        const double var_x421 = var_chaste_interface__calcium_dynamics__APtrack > 0.20000000000000001;
        const double var_x422 = (var_x421) && (var_x59);
        const double var_x423 = var_x121 + var_x141 + var_x159;
        const double var_x424 = var_x61 * var_x63 * var_chaste_interface__membrane__V;
        const double var_x425 = var_x153 * var_x209;
        const double var_x426 = 0.70463905573898955 * var_x192 * var_x424;
        const double var_x427 = (var_x421) && (((var_x421) || (var_x59)));
        const double var_x428 = var_chaste_interface__calcium_dynamics__APtrack2 > 0.01;
        const double var_x429 = var_chaste_interface__calcium_dynamics__OVRLDtrack > 0.97999999999999998;
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x120 * (0.0070159999999999997 + var_x102 + var_x11 + var_x113 + var_x21 + var_x3 + var_x5 + var_x6 + var_x70 + var_x74 + var_x89 + var_x9 - var_x100 + var_x117 * (243.26999999999998 * var_x114 - 514.29999999999995 * var_x116 - var_x115 * (0.061749999999999999 * var_x82 + 0.039456396800000001 * var_x81)) + var_x45 * ((var_x32) ? (var_x22 * var_x27 + var_x22 * var_x30) : (var_x38 + 1.9572871637915374e-5 * var_x40 * var_chaste_interface__ionic_concentrations__Ki - 2.6097162183887167e-5 * var_x35 * var_x41)) + var_x45 * ((var_x32) ? (var_x46 * var_x49 + var_x46 * var_x50) : (var_x52 + 6.8454343811362063e-5 * var_x40 * var_chaste_interface__ionic_concentrations__Nai - 9.1272458415149417e-5 * var_x41 * var_x51)) + 0.011000000000000001 * var_x14 * var_x73 - 104.68673984798647 * var_x114 * var_x118 + 0.00092307692307692295 * var_x0 * var_x14 / pow(var_x1, 2) + var_x103 * var_x110 * (0.00046607674967214262 * var_x104 + 0.037435883507802616 * var_x106 * (-0.0052142857142857138 + 0.0052142857142857138 * var_x105)) * NV_Ith_S(mParameters, 2) / pow(var_x107, 2)));
        IJth(rJacobian, 1, 0) = -var_x194 * (var_x188 + var_x70 + 0.063641001963264457 * var_x187 - 2.0 * var_x102 - 0.074871767015605231 * var_x112);
        IJth(rJacobian, 2, 0) = var_x231 * var_chaste_interface__Na_channel_states__P_C1 + var_x239 * var_chaste_interface__Na_channel_states__P_IF + (-var_x227 + 0.01083743842364532 * var_x225) * var_chaste_interface__Na_channel_states__P_O_Na - 0.0028227905226106183 * var_x237 * var_chaste_interface__Na_channel_states__P_IF - 1.7053993755772005e-5 * var_x238 * var_chaste_interface__Na_channel_states__P_IF;
        IJth(rJacobian, 3, 0) = var_x248 * var_chaste_interface__Na_channel_states__P_C2 + (-2.0000000000000002e-5 + var_x245 - var_x231) * var_chaste_interface__Na_channel_states__P_C1 - var_x246 * var_chaste_interface__Na_channel_states__P_IF - 0.01083743842364532 * var_x225 * var_chaste_interface__Na_channel_states__P_O_Na;
        IJth(rJacobian, 4, 0) = var_x259 * var_chaste_interface__Na_channel_states__P_C3 + (-2.0000000000000002e-5 + var_x257) * var_chaste_interface__Na_channel_states__P_C2 - var_x245 * var_chaste_interface__Na_channel_states__P_C1 - var_x246 * var_chaste_interface__Na_channel_states__P_IC2;
        IJth(rJacobian, 5, 0) = (-2.0000000000000002e-5 + var_x263) * var_chaste_interface__Na_channel_states__P_C3 - var_x246 * var_chaste_interface__Na_channel_states__P_IC3 - var_x256 * var_chaste_interface__Na_channel_states__P_C2;
        IJth(rJacobian, 6, 0) = 2.0000000000000002e-5 * var_chaste_interface__Na_channel_states__P_C1 + var_x227 * var_chaste_interface__Na_channel_states__P_O_Na + var_x248 * var_chaste_interface__Na_channel_states__P_IC2 + (var_x245 + var_x246 - var_x239 - var_x265 + 0.0028227905226106183 * var_x237 + 1.7053993755772005e-5 * var_x238) * var_chaste_interface__Na_channel_states__P_IF - var_x246 * var_chaste_interface__Na_channel_states__P_IM1;
        IJth(rJacobian, 7, 0) = 2.0000000000000002e-5 * var_chaste_interface__Na_channel_states__P_C3 + (var_x246 + var_x263) * var_chaste_interface__Na_channel_states__P_IC3 - var_x256 * var_chaste_interface__Na_channel_states__P_IC2;
        IJth(rJacobian, 8, 0) = 2.0000000000000002e-5 * var_chaste_interface__Na_channel_states__P_C2 + var_x259 * var_chaste_interface__Na_channel_states__P_IC3 + (var_x246 + var_x257) * var_chaste_interface__Na_channel_states__P_IC2 - var_x245 * var_chaste_interface__Na_channel_states__P_IF;
        IJth(rJacobian, 9, 0) = -var_x270 + var_x265 * var_chaste_interface__Na_channel_states__P_IF + (var_x246 - var_x269) * var_chaste_interface__Na_channel_states__P_IM1;
        IJth(rJacobian, 10, 0) = var_x270 + var_x269 * var_chaste_interface__Na_channel_states__P_IM1;
        IJth(rJacobian, 11, 0) = var_x290 * var_x292 + var_x292 * var_chaste_interface__L_type_Ca_channel_d_gate__d + var_x275 * var_x289 * var_x290 + var_x276 * var_x289 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        IJth(rJacobian, 12, 0) = var_x295 * (20.0 + var_x294) * (var_x298 - var_x301) + var_x303 * (var_x301 - var_x298) * var_chaste_interface__L_type_Ca_channel_f_gate__f + var_x294 * var_x295 * var_x306 * var_x307 - var_x302 * var_x307 * var_x308 * var_chaste_interface__L_type_Ca_channel_f_gate__f;
        IJth(rJacobian, 13, 0) = 9.2592592592592588e-5 * var_x309 * var_x314 / pow(var_x310, 2) + 0.036429872495446262 * var_x311 * (-var_chaste_interface__T_type_Ca_channel_b_gate__b + 1 / var_x310) / (pow(var_x312, 2) * pow((0.60655737704918034 + var_x313), 2));
        IJth(rJacobian, 14, 0) = (0.001 / var_x316 - 0.001 * var_chaste_interface__T_type_Ca_channel_g_gate__g) * ((var_x317) ? (6.0763888888888884 / pow((1 - 0.072916666666666671 * var_chaste_interface__membrane__V), 2)) : (0)) - 0.00017857142857142857 * var_x315 * var_x318 / pow(var_x316, 2);
        IJth(rJacobian, 15, 0) = var_x326 + (-var_x322 + 6.3352406000000003e-5 * var_x319) * var_chaste_interface__Kr_channel_states__P_O - var_x329 * var_chaste_interface__Kr_channel_states__P_I;
        IJth(rJacobian, 16, 0) = -0.0072667704299999997 * var_x325 - var_x335 * var_chaste_interface__Kr_channel_states__P_I - 6.3352406000000003e-5 * var_x319 * var_chaste_interface__Kr_channel_states__P_O;
        IJth(rJacobian, 17, 0) = var_x340 + 8.6237916000000007e-5 * var_x338;
        IJth(rJacobian, 18, 0) = -var_x340 - 8.6237916000000007e-5 * var_x338;
        IJth(rJacobian, 19, 0) = var_x326 + var_x322 * var_chaste_interface__Kr_channel_states__P_O + (var_x329 + var_x335) * var_chaste_interface__Kr_channel_states__P_I;
        IJth(rJacobian, 20, 0) = var_x363 * var_x364 + (var_x345 - var_x172) * ((var_x351) ? (0.065500000000000003 * var_x346 + 0.065500000000000003 * var_x347 + 0.035949999999999996 * var_x348 + 0.035949999999999996 * var_x349) : (var_x355 + var_x359 - 0.0089997000000000011 * var_x360 - 0.0106412 * var_x361));
        IJth(rJacobian, 21, 0) = var_x364 * var_x367 + (var_x345 - var_x170) * ((var_x351) ? (0.016375000000000001 * var_x346 + 0.016375000000000001 * var_x347 + 0.008987499999999999 * var_x348 + 0.008987499999999999 * var_x349) : (var_x365 + var_x366 - 0.0022499250000000003 * var_x360 - 0.0026603 * var_x361));
        IJth(rJacobian, 22, 0) = var_x375 * (var_x371 * var_x383 - var_x380 * var_x383 + 9.9999999999999995e-8 * var_x371 * (var_x381 + var_x382 - var_x378 - var_x379) / pow((var_x371 + var_x374), 2)) + (-0.001 * var_chaste_interface__transient_outward_current_zdv_gate__zdv + var_x376 * var_x377) * (var_x378 + var_x379 - var_x381 - var_x382);
        IJth(rJacobian, 23, 0) = var_x391 * (-0.0030000000000000001 * var_x392 * var_x396 + 1.5e-6 * var_x387 * (var_x393 + var_x394 - var_x395) / pow((var_x390 + 0.14999999999999999 * var_x387), 2)) + (-0.001 * var_chaste_interface__transient_outward_current_ydv_gate__ydv + var_x396 * var_x397) * (var_x395 - var_x393 - var_x394);
        IJth(rJacobian, 29, 0) = 0.001 * ((var_x422) ? (-var_x209 * (var_x420 + var_x45 * var_x58)) : ((var_x421) ? (-var_x209 * (var_x420 + var_x403 * var_x65 + var_x403 * var_x68 - var_x403 * var_x69)) : (0)));
        IJth(rJacobian, 0, 1) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x120 * (var_x160 - var_x121 - var_x141 - var_x129 * var_x131 - var_x137 * var_x138 + 2.3575679435995052e-7 * var_x144 * var_x15 * var_x16 / pow(var_x17, 2)));
        IJth(rJacobian, 1, 1) = var_x210 * (-var_x197 - var_x207 + 0.71029411764705874 * var_x208 - var_x209 * (var_x160 + 2.0 * var_x121 + 0.00020000000000000001 * var_x140)) + 0.001 * (0.00023800000000000004 / pow(var_x189, 3) + 7.0000000000000007e-5 / pow(var_x156, 3)) * (0.047352941176470584 * var_chaste_interface__calcium_dynamics__Ca_NSR + var_x207 * var_x211 - var_x197 * var_chaste_interface__calcium_dynamics__Cai - var_x209 * (var_x215 + 0.003016 * var_chaste_interface__membrane__V - 2.0 * var_x187 + var_x164 * var_chaste_interface__L_type_Ca_channel_d_gate__d)) / pow(var_x190, 2);
        IJth(rJacobian, 24, 1) = var_x206 * var_x401;
        IJth(rJacobian, 25, 1) = 0.0087500000000000008 * var_x196 - 0.0087500000000000008 * var_x208;
        IJth(rJacobian, 29, 1) = 0.001 * ((var_x422) ? (-var_x209 * (var_x423 + var_x149 * var_x45 - var_x138 * var_x153)) : ((var_x421) ? (-var_x209 * (var_x423 + var_x150 * var_x403 - 0.0046811535814444347 * var_x130 * var_x424 * var_chaste_interface__L_type_Ca_channel_f_gate__f)) : (0)));
        IJth(rJacobian, 0, 2) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x120 * var_x163 * NV_Ith_S(mParameters, 6));
        IJth(rJacobian, 2, 2) = -var_x240 - var_x241;
        IJth(rJacobian, 3, 2) = var_x241;
        IJth(rJacobian, 6, 2) = var_x240;
        IJth(rJacobian, 2, 3) = var_x242;
        IJth(rJacobian, 3, 3) = var_x250 + var_x252 - var_x242;
        IJth(rJacobian, 4, 3) = var_x249;
        IJth(rJacobian, 6, 3) = var_x266;
        IJth(rJacobian, 3, 4) = var_x253;
        IJth(rJacobian, 4, 4) = var_x252 + var_x261;
        IJth(rJacobian, 5, 4) = var_x260;
        IJth(rJacobian, 8, 4) = var_x266;
        IJth(rJacobian, 4, 5) = var_x262;
        IJth(rJacobian, 5, 5) = var_x252 + var_x264;
        IJth(rJacobian, 7, 5) = var_x266;
        IJth(rJacobian, 2, 6) = var_x243;
        IJth(rJacobian, 3, 6) = var_x254;
        IJth(rJacobian, 6, 6) = var_x250 + var_x268 - var_x243 - var_x267;
        IJth(rJacobian, 8, 6) = var_x249;
        IJth(rJacobian, 9, 6) = var_x267;
        IJth(rJacobian, 5, 7) = var_x254;
        IJth(rJacobian, 7, 7) = var_x264 + var_x268;
        IJth(rJacobian, 8, 7) = var_x262;
        IJth(rJacobian, 4, 8) = var_x254;
        IJth(rJacobian, 6, 8) = var_x253;
        IJth(rJacobian, 7, 8) = var_x260;
        IJth(rJacobian, 8, 8) = var_x261 + var_x268;
        IJth(rJacobian, 6, 9) = var_x254;
        IJth(rJacobian, 9, 9) = var_x268 - var_x271;
        IJth(rJacobian, 10, 9) = var_x271;
        IJth(rJacobian, 9, 10) = var_x272;
        IJth(rJacobian, 10, 10) = -var_x272;
        IJth(rJacobian, 0, 11) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x120 * (var_x164 + var_x129 * var_x43 + var_x137 * var_x44));
        IJth(rJacobian, 1, 11) = -var_x216 * var_x217;
        IJth(rJacobian, 11, 11) = var_x276 * var_x291 - var_x275 * var_x291;
        IJth(rJacobian, 29, 11) = 0.001 * ((var_x422) ? (-var_x216 * var_x425) : ((var_x421) ? (-var_x216 * var_x426) : (0)));
        IJth(rJacobian, 0, 12) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x120 * (var_x128 * var_x165 + var_x137 * var_x165 + var_x155 * var_x165));
        IJth(rJacobian, 1, 12) = -var_x217 * var_x218;
        IJth(rJacobian, 12, 12) = var_x303 * var_x306 + var_x303 * var_x308;
        IJth(rJacobian, 29, 12) = 0.001 * ((var_x422) ? (-var_x218 * var_x425) : ((var_x421) ? (-var_x218 * var_x426) : (0)));
        IJth(rJacobian, 0, 13) = mSetVoltageDerivativeToZero ? 0.0 : (-0.0001 * var_x119 * var_x168);
        IJth(rJacobian, 1, 13) = -9.0316078310111336e-6 * var_x168 * var_x193;
        IJth(rJacobian, 13, 13) = -0.001 * var_x314;
        IJth(rJacobian, 29, 13) = 0.001 * ((var_x427) ? (-0.0090316078310111337 * var_x168 * var_x192) : (0));
        IJth(rJacobian, 0, 14) = mSetVoltageDerivativeToZero ? 0.0 : (-5.0000000000000002e-5 * var_x119 * var_x169);
        IJth(rJacobian, 1, 14) = -4.5158039155055668e-6 * var_x169 * var_x193;
        IJth(rJacobian, 14, 14) = -0.001 * var_x318;
        IJth(rJacobian, 29, 14) = 0.001 * ((var_x427) ? (-0.0045158039155055668 * var_x169 * var_x192) : (0));
        IJth(rJacobian, 0, 15) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x10 * var_x120 * var_x14);
        IJth(rJacobian, 15, 15) = -var_x330 - var_x331;
        IJth(rJacobian, 16, 15) = var_x330;
        IJth(rJacobian, 19, 15) = var_x331;
        IJth(rJacobian, 15, 16) = var_x332;
        IJth(rJacobian, 16, 16) = -1.077 - 0.13100000000000001 * var_x324;
        IJth(rJacobian, 17, 16) = 1.077;
        IJth(rJacobian, 19, 16) = var_x332;
        IJth(rJacobian, 16, 17) = 2.1720000000000002;
        IJth(rJacobian, 17, 17) = -2.1720000000000002 - var_x341;
        IJth(rJacobian, 18, 17) = var_x341;
        IJth(rJacobian, 17, 18) = var_x342;
        IJth(rJacobian, 18, 18) = -var_x342;
        IJth(rJacobian, 15, 19) = var_x333;
        IJth(rJacobian, 16, 19) = var_x336;
        IJth(rJacobian, 19, 19) = -var_x333 - var_x336;
        IJth(rJacobian, 0, 20) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x170 * var_x171);
        IJth(rJacobian, 20, 20) = -0.001 * var_x363;
        IJth(rJacobian, 0, 21) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x171 * var_x172);
        IJth(rJacobian, 21, 21) = -0.001 * var_x367;
        IJth(rJacobian, 0, 22) = mSetVoltageDerivativeToZero ? 0.0 : (-0.0033000000000000004 * var_x173 * var_x71 * pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 2) * NV_Ith_S(mParameters, 11) * var_chaste_interface__transient_outward_current_ydv_gate__ydv);
        IJth(rJacobian, 22, 22) = -var_x377 - 10.0 * var_x374;
        IJth(rJacobian, 0, 23) = mSetVoltageDerivativeToZero ? 0.0 : (-0.0011000000000000001 * var_x173 * var_x72);
        IJth(rJacobian, 23, 23) = -var_x397 - 0.10000000000000001 * var_x390;
        IJth(rJacobian, 1, 24) = 7.0588235294117632e-6 * var_x191 * var_x206;
        IJth(rJacobian, 24, 24) = var_x401 * (-5.5555555555555554 - var_x206) + 0.00025000000000000001 * (5.5555555555555554 * var_chaste_interface__calcium_dynamics__Ca_NSR - 5.5555555555555554 * var_chaste_interface__calcium_dynamics__Ca_JSR - var_x206 * var_x211) / (pow(var_x398, 3) * pow((0.125 + var_x399), 2));
        IJth(rJacobian, 25, 24) = 0.00048309178743961351;
        IJth(rJacobian, 1, 25) = 4.7352941176470584e-5 * var_x191;
        IJth(rJacobian, 24, 25) = 0.0055555555555555558 * var_x400;
        IJth(rJacobian, 25, 25) = -0.001066425120772947;
        IJth(rJacobian, 26, 26) = 0.001 * (((((var_x59) || (var_x31 >= 2.6712338705498262e-6) || (var_x416 * (var_x415 + var_x417 + var_x418) < -150000.0))) && (((var_x32) || (var_x59) || (var_x416 * (var_x415 + var_x127 * var_x403 + var_x136 * var_x403) < -150000.0))) && (((var_x31 >= 1.3356169352749131e-6) || (var_x416 * (var_x212 + var_x405 - var_x187 - var_x213 - var_x214 - var_x404 - var_x406 - var_x407 - var_x408 - var_x409 - var_x410 - var_x411 - var_x412 - var_x413 - var_x414 - var_x417 - var_x418 + var_x45 * (var_x151 - var_x152)) > 150000.0)))) ? (-100500.0) : (-500.0));
        IJth(rJacobian, 1, 27) = var_x219 * var_x220;
        IJth(rJacobian, 24, 27) = var_x219 * var_x402;
        IJth(rJacobian, 27, 27) = 0.001 * ((var_x419) ? (-100500.0) : (-500.0));
        IJth(rJacobian, 28, 28) = 0.001 * ((var_x419) ? (-100500.0) : (-10.0));
        IJth(rJacobian, 1, 29) = var_x220 * var_x222;
        IJth(rJacobian, 24, 29) = var_x222 * var_x402;
        IJth(rJacobian, 29, 29) = 0.001 * (((((var_x421) || (var_x428))) && (((var_x421) || (var_x428) || (var_x59)))) ? (0) : (-500.0));
        IJth(rJacobian, 30, 30) = 0.001 * (((var_chaste_interface__calcium_dynamics__APtrack3 < 0.37) && (var_chaste_interface__calcium_dynamics__OVRLDtrack3 < 0.37) && (1 / (1.0 + 0.80000000000000004 / var_chaste_interface__calcium_dynamics__Ca_NSR) > 0.69999999999999996)) ? (-50000.0) : (-500.0));
        IJth(rJacobian, 1, 31) = var_x220 * var_x223;
        IJth(rJacobian, 24, 31) = var_x223 * var_x402;
        IJth(rJacobian, 31, 31) = 0.001 * (((var_x429) && (var_chaste_interface__calcium_dynamics__OVRLDtrack2 < 0.97999999999999998)) ? (-50000.0) : (-500.0));
        IJth(rJacobian, 32, 32) = 0.001 * (((var_x429) && (var_chaste_interface__calcium_dynamics__OVRLDtrack3 < 0.97999999999999998)) ? (-50000.0) : (-10.0));
        IJth(rJacobian, 0, 33) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x120 * (var_x181 - var_x183 + 0.10684935482199306 * var_x161 + 0.48963716847178318 * var_x178 + var_x45 * ((var_x32) ? (-var_x176 + var_x174 * (var_x176 + var_x146 * var_x175)) : (0.0018285756177517324 * var_x40)) + 26.712338705498265 * var_x161 * var_x6 + 0.044999999999999998 * var_x177 / (var_x92 * pow((0.01 + var_x109), 2))));
        IJth(rJacobian, 1, 33) = -var_x194 * (0.00060000000000000006 * var_x182 - 6.0 * var_x180);
        IJth(rJacobian, 29, 33) = 0.001 * ((var_x427) ? (-var_x209 * (var_x183 - var_x181)) : (0));
        IJth(rJacobian, 0, 34) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x120 * (26.712338705498265 * var_x178 + var_x117 * (6498.310636886562 * var_x186 - var_x115 * (1.053972635420138 * var_x12 * var_x81 + 1.6494869150645177 * var_x12 * var_x82) - 13738.155796237757 * var_x116 * var_x12) + var_x45 * ((var_x32) ? (-var_x185 + var_x174 * (var_x185 + var_x146 * var_x184)) : (0.00052283717663123607 * var_x40)) + 29.383572576048092 * var_x12 * var_x73 + 5.1338399412861326e-7 * var_x12 * var_x4 + 0.14745210965435041 * var_x12 * var_x2 + 11725.06353372661 * var_x12 * var_x88 + 26.712338705498265 * var_x11 * var_x12 - 2796.4276527937964 * var_x118 * var_x186));
    }

    N_Vector Cellclancy_rudy_2002FromCellMLCvode::ComputeDerivedQuantities(double var_chaste_interface__environment__time_converted, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__calcium_dynamics__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.000104
        double var_chaste_interface__Na_channel_states__P_O_Na = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 3.756e-13
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 3.289e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.99975
        double var_chaste_interface__Kr_channel_states__P_O = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 1.104e-10
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.01167
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 0.99998
        double var_chaste_interface__calcium_dynamics__Ca_JSR = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 1.516
        double var_chaste_interface__calcium_dynamics__APtrack2 = NV_Ith_S(rY, 27);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__Cainfluxtrack = NV_Ith_S(rY, 29);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack2 = NV_Ith_S(rY, 31);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ionic_concentrations__Nai = NV_Ith_S(rY, 33);
        // Units: millimolar; Initial value: 10.532
        double var_chaste_interface__ionic_concentrations__Ki = NV_Ith_S(rY, 34);
        // Units: millimolar; Initial value: 140.557
        
        // Mathematics
        const double var_L_type_Ca_channel_f_Ca_gate__Km_Ca = 0.00059999999999999995; // millimolar
        const double var_Na_Ca_exchanger__c2 = 0.0001; // millimolar
        const double var_Na_Ca_exchanger__gamma = 0.14999999999999999; // dimensionless
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + var_chaste_interface__calcium_dynamics__Cai / var_L_type_Ca_channel_f_Ca_gate__Km_Ca); // dimensionless
        const double var_calcium_dynamics__G_rel_overload = 4000.0; // per_second
        const double var_calcium_dynamics__K_mrel = 0.00080000000000000004; // millimolar
        const double var_calcium_dynamics__delta_Ca_ith = 0.00018000000000000001; // millimolar
        const double var_calcium_dynamics__G_rel = ((var_chaste_interface__calcium_dynamics__Cainfluxtrack > var_calcium_dynamics__delta_Ca_ith) ? ((1.0 - var_chaste_interface__calcium_dynamics__APtrack2) * (-var_calcium_dynamics__delta_Ca_ith + var_chaste_interface__calcium_dynamics__Cainfluxtrack) * var_chaste_interface__calcium_dynamics__APtrack2 * NV_Ith_S(mParameters, 0) / (-var_calcium_dynamics__delta_Ca_ith + var_chaste_interface__calcium_dynamics__Cainfluxtrack + var_calcium_dynamics__K_mrel)) : ((var_chaste_interface__calcium_dynamics__OVRLDtrack2 > 0) ? ((1.0 - var_chaste_interface__calcium_dynamics__OVRLDtrack2) * var_calcium_dynamics__G_rel_overload * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (0))); // per_second
        const double var_calcium_dynamics__i_rel = (-var_chaste_interface__calcium_dynamics__Cai + var_chaste_interface__calcium_dynamics__Ca_JSR) * var_calcium_dynamics__G_rel; // millimolar_per_second
        const double var_membrane__F = 96485.0; // coulomb_per_mole
        const double var_membrane__I_st_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 3) / var_chaste_interface__ionic_concentrations__Nai) / var_membrane__F; // millivolt
        const double var_L_type_Ca_channel__I_CaCa = ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 1) + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) / (-1.0 + exp(9.9999999999999995e-8)) + 1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 1) + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) / (-1.0 + exp(-9.9999999999999995e-8))) - 1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 1) + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) / (-1.0 + exp(-9.9999999999999995e-8))) : (7.8019226357407252 * (-0.34100000000000003 * NV_Ith_S(mParameters, 1) + var_chaste_interface__calcium_dynamics__Cai * exp(0.074871767015605231 * var_chaste_interface__membrane__V)) * NV_Ith_S(mParameters, 4) * var_chaste_interface__membrane__V / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaK = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (1.8621604999999999e-9 * (-0.75 * NV_Ith_S(mParameters, 2) + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) / (-1.0 + exp(9.9999999999999995e-8)) + 1.8621604999999999e-9 * (-0.75 * NV_Ith_S(mParameters, 2) + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) / (-1.0 + exp(-9.9999999999999995e-8))) - 1.8621604999999999e-9 * (-0.75 * NV_Ith_S(mParameters, 2) + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) / (-1.0 + exp(-9.9999999999999995e-8))) : (0.00069711623550831479 * (-0.75 * NV_Ith_S(mParameters, 2) + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(0.037435883507802616 * var_chaste_interface__membrane__V)) * NV_Ith_S(mParameters, 4) * var_chaste_interface__membrane__V / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaNa = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (6.5127375e-9 * (-0.75 * NV_Ith_S(mParameters, 3) + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) / (-1.0 + exp(9.9999999999999995e-8)) + 6.5127375e-9 * (-0.75 * NV_Ith_S(mParameters, 3) + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) / (-1.0 + exp(-9.9999999999999995e-8))) - 6.5127375e-9 * (-0.75 * NV_Ith_S(mParameters, 3) + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(-9.9999999999999995e-8)) * NV_Ith_S(mParameters, 4) / (-1.0 + exp(-9.9999999999999995e-8))) : (0.0024381008236689767 * (-0.75 * NV_Ith_S(mParameters, 3) + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(0.037435883507802616 * var_chaste_interface__membrane__V)) * NV_Ith_S(mParameters, 4) * var_chaste_interface__membrane__V / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaCa = var_L_type_Ca_channel__I_CaCa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaK = var_L_type_Ca_channel__I_CaK * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaNa = var_L_type_Ca_channel__I_CaNa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_CaCa + var_L_type_Ca_channel__i_CaK + var_L_type_Ca_channel__i_CaNa; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L_converted = HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L; // uA_per_cm2
        const double var_Na_Ca_exchanger__i_NaCa = (-pow(NV_Ith_S(mParameters, 3), 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * NV_Ith_S(mParameters, 1) * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * NV_Ith_S(mParameters, 10) * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) / (1.0 + (pow(NV_Ith_S(mParameters, 3), 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * NV_Ith_S(mParameters, 1) * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_Na_Ca_exchanger__c2 * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // microA_per_microF
        const double var_Na_Ca_exchanger__i_NaCa_converted = HeartConfig::Instance()->GetCapacitance() * var_Na_Ca_exchanger__i_NaCa; // uA_per_cm2
        const double var_fast_sodium_current__i_Na = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__Na_channel_states__P_O_Na * NV_Ith_S(mParameters, 6); // microA_per_microF
        const double var_fast_sodium_current__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na; // uA_per_cm2
        const double var_rapid_delayed_rectifier_potassium_current__E_Kr = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 2) / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_rapid_delayed_rectifier_potassium_current__g_Kr = pow(NV_Ith_S(mParameters, 2), 0.58999999999999997) * NV_Ith_S(mParameters, 8); // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_rapid_delayed_rectifier_potassium_current__E_Kr + var_chaste_interface__membrane__V) * var_chaste_interface__Kr_channel_states__P_O * var_rapid_delayed_rectifier_potassium_current__g_Kr; // microA_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_rapid_delayed_rectifier_potassium_current__i_Kr; // uA_per_cm2
        const double var_slow_delayed_rectifier_potassium_current__PNaK = 0.018329999999999999; // dimensionless
        const double var_slow_delayed_rectifier_potassium_current__E_Ks = var_membrane__R * var_membrane__T * log((NV_Ith_S(mParameters, 3) * var_slow_delayed_rectifier_potassium_current__PNaK + NV_Ith_S(mParameters, 2)) / (var_chaste_interface__ionic_concentrations__Nai * var_slow_delayed_rectifier_potassium_current__PNaK + var_chaste_interface__ionic_concentrations__Ki)) / var_membrane__F; // millivolt
        const double var_slow_delayed_rectifier_potassium_current__g_Ks = 0.433 * (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * NV_Ith_S(mParameters, 9); // milliS_per_microF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = (-var_slow_delayed_rectifier_potassium_current__E_Ks + var_chaste_interface__membrane__V) * var_slow_delayed_rectifier_potassium_current__g_Ks * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2; // microA_per_microF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks_converted = HeartConfig::Instance()->GetCapacitance() * var_slow_delayed_rectifier_potassium_current__i_Ks; // uA_per_cm2
        const double var_time_independent_potassium_current__E_K = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 2) / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_time_independent_potassium_current__g_K1 = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 2)) * NV_Ith_S(mParameters, 7); // milliS_per_cm2
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K)); // per_second
        const double var_time_independent_potassium_current_K1_gate__beta_K1 = 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V)); // per_second
        const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_microF
        const double var_time_independent_potassium_current__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_time_independent_potassium_current__i_K1; // uA_per_cm2
        const double var_transient_outward_current__g_to = 1.1000000000000001; // milliS_per_microF
        const double var_transient_outward_current__rvdv = exp(0.01 * var_chaste_interface__membrane__V); // dimensionless
        const double var_transient_outward_current__i_to = pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_transient_outward_current__g_to * NV_Ith_S(mParameters, 11) * var_transient_outward_current__rvdv * var_chaste_interface__transient_outward_current_ydv_gate__ydv; // microA_per_microF
        const double var_transient_outward_current__i_to_converted = HeartConfig::Instance()->GetCapacitance() * var_transient_outward_current__i_to; // uA_per_cm2

        N_Vector dqs = N_VNew_Serial(10);
        NV_Ith_S(dqs, 0) = var_calcium_dynamics__i_rel;
        NV_Ith_S(dqs, 1) = var_L_type_Ca_channel__i_Ca_L_converted;
        NV_Ith_S(dqs, 2) = var_fast_sodium_current__i_Na_converted;
        NV_Ith_S(dqs, 3) = var_time_independent_potassium_current__i_K1_converted;
        NV_Ith_S(dqs, 4) = var_rapid_delayed_rectifier_potassium_current__i_Kr_converted;
        NV_Ith_S(dqs, 5) = var_slow_delayed_rectifier_potassium_current__i_Ks_converted;
        NV_Ith_S(dqs, 6) = var_Na_Ca_exchanger__i_NaCa_converted;
        NV_Ith_S(dqs, 7) = var_membrane__I_st_converted;
        NV_Ith_S(dqs, 8) = var_transient_outward_current__i_to_converted;
        NV_Ith_S(dqs, 9) = var_chaste_interface__environment__time_converted;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellclancy_rudy_2002FromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "clancy_rudy_2002";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // NV_Ith_S(rY, 0):
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-88.78);

    // NV_Ith_S(rY, 1):
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.000104);

    // NV_Ith_S(rY, 2):
    this->mVariableNames.push_back("Na_channel_states__P_O_Na");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.756e-13);

    // NV_Ith_S(rY, 3):
    this->mVariableNames.push_back("Na_channel_states__P_C1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(4.744e-10);

    // NV_Ith_S(rY, 4):
    this->mVariableNames.push_back("Na_channel_states__P_C2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.776e-08);

    // NV_Ith_S(rY, 5):
    this->mVariableNames.push_back("Na_channel_states__P_C3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(7.583e-06);

    // NV_Ith_S(rY, 6):
    this->mVariableNames.push_back("Na_channel_states__P_IF");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.147e-11);

    // NV_Ith_S(rY, 7):
    this->mVariableNames.push_back("Na_channel_states__P_IC3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.302e-06);

    // NV_Ith_S(rY, 8):
    this->mVariableNames.push_back("Na_channel_states__P_IC2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.679e-08);

    // NV_Ith_S(rY, 9):
    this->mVariableNames.push_back("Na_channel_states__P_IM1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.736e-12);

    // NV_Ith_S(rY, 10):
    this->mVariableNames.push_back("Na_channel_states__P_IM2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(6.187e-14);

    // NV_Ith_S(rY, 11):
    this->mVariableNames.push_back("L_type_Ca_channel_d_gate__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.289e-06);

    // NV_Ith_S(rY, 12):
    this->mVariableNames.push_back("L_type_Ca_channel_f_gate__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99975);

    // NV_Ith_S(rY, 13):
    this->mVariableNames.push_back("T_type_Ca_channel_b_gate__b");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000983);

    // NV_Ith_S(rY, 14):
    this->mVariableNames.push_back("T_type_Ca_channel_g_gate__g");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9942);

    // NV_Ith_S(rY, 15):
    this->mVariableNames.push_back("Kr_channel_states__P_O");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.104e-10);

    // NV_Ith_S(rY, 16):
    this->mVariableNames.push_back("Kr_channel_states__P_C1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.4083e-08);

    // NV_Ith_S(rY, 17):
    this->mVariableNames.push_back("Kr_channel_states__P_C2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.69e-08);

    // NV_Ith_S(rY, 18):
    this->mVariableNames.push_back("Kr_channel_states__P_C3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(4.949e-06);

    // NV_Ith_S(rY, 19):
    this->mVariableNames.push_back("Kr_channel_states__P_I");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.386e-11);

    // NV_Ith_S(rY, 20):
    this->mVariableNames.push_back("slow_delayed_rectifier_potassium_current_xs1_gate__xs1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00447);

    // NV_Ith_S(rY, 21):
    this->mVariableNames.push_back("slow_delayed_rectifier_potassium_current_xs2_gate__xs2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00447);

    // NV_Ith_S(rY, 22):
    this->mVariableNames.push_back("transient_outward_current_zdv_gate__zdv");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.01167);

    // NV_Ith_S(rY, 23):
    this->mVariableNames.push_back("transient_outward_current_ydv_gate__ydv");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99998);

    // NV_Ith_S(rY, 24):
    this->mVariableNames.push_back("calcium_dynamics__Ca_JSR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.516);

    // NV_Ith_S(rY, 25):
    this->mVariableNames.push_back("calcium_dynamics__Ca_NSR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.518);

    // NV_Ith_S(rY, 26):
    this->mVariableNames.push_back("calcium_dynamics__APtrack");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 27):
    this->mVariableNames.push_back("calcium_dynamics__APtrack2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 28):
    this->mVariableNames.push_back("calcium_dynamics__APtrack3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 29):
    this->mVariableNames.push_back("calcium_dynamics__Cainfluxtrack");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 30):
    this->mVariableNames.push_back("calcium_dynamics__OVRLDtrack");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 31):
    this->mVariableNames.push_back("calcium_dynamics__OVRLDtrack2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 32):
    this->mVariableNames.push_back("calcium_dynamics__OVRLDtrack3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 33):
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(10.532);

    // NV_Ith_S(rY, 34):
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(140.557);

    // mParameters[0]:
    this->mParameterNames.push_back("SR_release_current_max");
    this->mParameterUnits.push_back("per_second");

    // mParameters[1]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[2]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[3]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[4]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[5]:
    this->mParameterNames.push_back("membrane_capacitance");
    this->mParameterUnits.push_back("microF");

    // mParameters[6]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_cm2");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("microA_per_microF");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("SR_release_current");
    this->mDerivedQuantityUnits.push_back("millimolar_per_second");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellclancy_rudy_2002FromCellMLCvode)

#endif // CHASTE_CVODE
