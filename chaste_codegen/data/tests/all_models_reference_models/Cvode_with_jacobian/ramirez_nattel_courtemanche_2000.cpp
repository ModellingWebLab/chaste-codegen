#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: ramirez_2000
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: AnalyticCvode)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "ramirez_nattel_courtemanche_2000.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"


    boost::shared_ptr<RegularStimulus> Cellramirez_nattel_courtemanche_2000FromCellMLCvode::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__stim_amplitude_converted = -2900.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        const double var_chaste_interface__membrane__stim_duration = 1.0; // millisecond
        const double var_chaste_interface__membrane__stim_period = 1000.0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__stim_amplitude_converted),
                var_chaste_interface__membrane__stim_duration,
                var_chaste_interface__membrane__stim_period,
                0.0
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }

    double Cellramirez_nattel_courtemanche_2000FromCellMLCvode::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Cellramirez_nattel_courtemanche_2000FromCellMLCvode::Cellramirez_nattel_courtemanche_2000FromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                25,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellramirez_nattel_courtemanche_2000FromCellMLCvode>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
        
        NV_Ith_S(this->mParameters, 0) = 1.8; // (var_standard_ionic_concentrations__Ca_o) [millimolar]
        NV_Ith_S(this->mParameters, 1) = 5.4000000000000004; // (var_standard_ionic_concentrations__K_o) [millimolar]
        NV_Ith_S(this->mParameters, 2) = 140.0; // (var_standard_ionic_concentrations__Na_o) [millimolar]
        NV_Ith_S(this->mParameters, 3) = 100.0; // (var_membrane__Cm) [picoF]
        NV_Ith_S(this->mParameters, 4) = 7.7999999999999998; // (var_fast_sodium_current__g_Na) [nanoS_per_picoF]
        NV_Ith_S(this->mParameters, 5) = 0.14999999999999999; // (var_time_independent_potassium_current__g_K1) [nanoS_per_picoF]
        NV_Ith_S(this->mParameters, 6) = 0.069839999999999999; // (var_rapid_delayed_rectifier_K_current__g_Kr) [nanoS_per_picoF]
    }

    Cellramirez_nattel_courtemanche_2000FromCellMLCvode::~Cellramirez_nattel_courtemanche_2000FromCellMLCvode()
    {
    }

    
    double Cellramirez_nattel_courtemanche_2000FromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -83.53
        double var_chaste_interface__intracellular_ion_concentrations__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0001024
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.001972
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.9791
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.9869
        double var_chaste_interface__transient_outward_K_current_oa_gate__oa = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.07164
        double var_chaste_interface__transient_outward_K_current_oi_gate__oi = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.998
        double var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.05869
        double var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.9987
        double var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 7.433e-07
        double var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.01791
        double var_chaste_interface__sarcolemmal_Ca_current_d_gate__d = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 4.757e-06
        double var_chaste_interface__sarcolemmal_Ca_current_f_gate__f = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.9999
        double var_chaste_interface__sarcolemmal_Ca_current_f_Ca_gate__f_Ca = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.7484
        double var_chaste_interface__intracellular_ion_concentrations__Na_i = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 11.75
        double var_chaste_interface__intracellular_ion_concentrations__Cl_i = NV_Ith_S(rY, 21);
        // Units: millimolar; Initial value: 29.26
        double var_chaste_interface__intracellular_ion_concentrations__K_i = NV_Ith_S(rY, 22);
        // Units: millimolar; Initial value: 138.4
        
        const double var_Ca_activated_Cl_current__g_Cl_Ca = 0.29999999999999999; // nanoS_per_picoF
        const double var_Ca_activated_Cl_current_q_Ca_gate__q_Ca = 0; // dimensionless
        const double var_Ca_pump_current__i_p_Ca_max = 0.27500000000000002; // picoA_per_picoF
        const double var_Na_Ca_exchanger_current__I_NaCa_max = 1600.0; // picoA_per_picoF
        const double var_Na_Ca_exchanger_current__K_mCa = 1.3799999999999999; // millimolar
        const double var_Na_Ca_exchanger_current__K_mNa = 87.5; // millimolar
        const double var_Na_Ca_exchanger_current__K_sat = 0.10000000000000001; // dimensionless
        const double var_background_currents__g_B_Ca = 0.0011299999999999999; // nanoS_per_picoF
        const double var_background_currents__g_B_Na = 0.00067400000000000001; // nanoS_per_picoF
        const double var_Ca_pump_current__i_p_Ca = var_Ca_pump_current__i_p_Ca_max * var_chaste_interface__intracellular_ion_concentrations__Ca_i / (0.00050000000000000001 + var_chaste_interface__intracellular_ion_concentrations__Ca_i); // picoA_per_picoF
        const double var_membrane__F = 96.486699999999999; // coulomb_per_millimole
        const double var_membrane__R = 8.3142999999999994; // joule_per_mole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_sarcolemmal_Ca_current__g_Ca = 0.23999999999999999; // nanoS_per_picoF
        const double var_sarcolemmal_Ca_current__i_Ca = (-65.0 + var_chaste_interface__membrane__V) * var_sarcolemmal_Ca_current__g_Ca * var_chaste_interface__sarcolemmal_Ca_current_d_gate__d * var_chaste_interface__sarcolemmal_Ca_current_f_Ca_gate__f_Ca * var_chaste_interface__sarcolemmal_Ca_current_f_gate__f; // picoA_per_picoF
        const double var_slow_delayed_rectifier_K_current__g_Ks = 0.056099999999999997; // nanoS_per_picoF
        const double var_sodium_potassium_pump__Km_K_o = 1.5; // millimolar
        const double var_sodium_potassium_pump__Km_Na_i = 10.0; // millimolar
        const double var_sodium_potassium_pump__i_NaK_max = 0.59999999999999998; // picoA_per_picoF
        const double var_background_currents__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 0) / var_chaste_interface__intracellular_ion_concentrations__Ca_i) / var_membrane__F; // millivolt
        const double var_background_currents__i_B_Ca = (-var_background_currents__E_Ca + var_chaste_interface__membrane__V) * var_background_currents__g_B_Ca; // picoA_per_picoF
        const double var_standard_ionic_concentrations__Cl_o = 132.0; // millimolar
        const double var_Ca_activated_Cl_current__E_Cl = -var_membrane__R * var_membrane__T * log(var_standard_ionic_concentrations__Cl_o / var_chaste_interface__intracellular_ion_concentrations__Cl_i) / var_membrane__F; // millivolt
        const double var_Ca_activated_Cl_current__i_Cl_Ca = (-var_Ca_activated_Cl_current__E_Cl + var_chaste_interface__membrane__V) * var_Ca_activated_Cl_current__g_Cl_Ca * var_Ca_activated_Cl_current_q_Ca_gate__q_Ca; // picoA_per_picoF
        const double var_Na_Ca_exchanger_current__i_NaCa = (pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * NV_Ith_S(mParameters, 0) * exp(0.34999999999999998 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) - pow(NV_Ith_S(mParameters, 2), 3) * var_chaste_interface__intracellular_ion_concentrations__Ca_i * exp(-0.65000000000000002 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_Na_Ca_exchanger_current__I_NaCa_max / ((1.0 + var_Na_Ca_exchanger_current__K_sat * exp(-0.65000000000000002 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * (pow(var_Na_Ca_exchanger_current__K_mNa, 3) + pow(NV_Ith_S(mParameters, 2), 3)) * (var_Na_Ca_exchanger_current__K_mCa + NV_Ith_S(mParameters, 0))); // picoA_per_picoF
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 2) / var_chaste_interface__intracellular_ion_concentrations__Na_i) / var_membrane__F; // millivolt
        const double var_background_currents__i_B_Na = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_background_currents__g_B_Na; // picoA_per_picoF
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 4) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // picoA_per_picoF
        const double var_fast_sodium_current__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na; // uA_per_cm2
        const double var_sodium_potassium_pump__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * NV_Ith_S(mParameters, 2)); // dimensionless
        const double var_sodium_potassium_pump__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + 0.036499999999999998 * var_sodium_potassium_pump__sigma * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // dimensionless
        const double var_sodium_potassium_pump__i_NaK = var_sodium_potassium_pump__f_NaK * var_sodium_potassium_pump__i_NaK_max * NV_Ith_S(mParameters, 1) / ((1.0 + pow((var_sodium_potassium_pump__Km_Na_i / var_chaste_interface__intracellular_ion_concentrations__Na_i), 1.5)) * (var_sodium_potassium_pump__Km_K_o + NV_Ith_S(mParameters, 1))); // picoA_per_picoF
        const double var_time_independent_potassium_current__E_K = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 1) / var_chaste_interface__intracellular_ion_concentrations__K_i) / var_membrane__F; // millivolt
        const double var_rapid_delayed_rectifier_K_current__i_Kr = (0.070000000000000007 + 0.57999999999999996 / (1.0 + exp(0.66964285714285721 + 0.044642857142857144 * var_chaste_interface__membrane__V))) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 6) * var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr; // picoA_per_picoF
        const double var_rapid_delayed_rectifier_K_current__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_rapid_delayed_rectifier_K_current__i_Kr; // uA_per_cm2
        const double var_slow_delayed_rectifier_K_current__i_Ks = pow(var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs, 2) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_slow_delayed_rectifier_K_current__g_Ks; // picoA_per_picoF
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 5) / (1.0 + exp(5.6000000000000005 + 0.070000000000000007 * var_chaste_interface__membrane__V)); // picoA_per_picoF
        const double var_time_independent_potassium_current__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_time_independent_potassium_current__i_K1; // uA_per_cm2
        const double var_transient_outward_K_current__g_to = 0.19824; // nanoS_per_picoF
        const double var_transient_outward_K_current__i_to = pow(var_chaste_interface__transient_outward_K_current_oa_gate__oa, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_transient_outward_K_current__g_to * var_chaste_interface__transient_outward_K_current_oi_gate__oi; // picoA_per_picoF
        const double var_ultrarapid_delayed_rectifier_K_current__g_Kur_d = 0.0085500000000000003 + 0.077899999999999997 / (1.0 + exp(-0.6875 - 0.0625 * var_chaste_interface__membrane__V)); // nanoS_per_picoF
        const double var_ultrarapid_delayed_rectifier_K_current__i_Kur_d = pow(var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_ultrarapid_delayed_rectifier_K_current__g_Kur_d * var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui; // picoA_per_picoF
        const double var_chaste_interface__i_ionic = HeartConfig::Instance()->GetCapacitance() * var_Ca_activated_Cl_current__i_Cl_Ca + HeartConfig::Instance()->GetCapacitance() * var_Ca_pump_current__i_p_Ca + HeartConfig::Instance()->GetCapacitance() * var_Na_Ca_exchanger_current__i_NaCa + HeartConfig::Instance()->GetCapacitance() * var_background_currents__i_B_Ca + HeartConfig::Instance()->GetCapacitance() * var_background_currents__i_B_Na + HeartConfig::Instance()->GetCapacitance() * var_sarcolemmal_Ca_current__i_Ca + HeartConfig::Instance()->GetCapacitance() * var_slow_delayed_rectifier_K_current__i_Ks + HeartConfig::Instance()->GetCapacitance() * var_sodium_potassium_pump__i_NaK + HeartConfig::Instance()->GetCapacitance() * var_transient_outward_K_current__i_to + HeartConfig::Instance()->GetCapacitance() * var_ultrarapid_delayed_rectifier_K_current__i_Kur_d + var_fast_sodium_current__i_Na_converted + var_rapid_delayed_rectifier_K_current__i_Kr_converted + var_time_independent_potassium_current__i_K1_converted; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellramirez_nattel_courtemanche_2000FromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -83.53
        double var_chaste_interface__intracellular_ion_concentrations__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0001024
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.001972
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.9791
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.9869
        double var_chaste_interface__transient_outward_K_current_oa_gate__oa = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.07164
        double var_chaste_interface__transient_outward_K_current_oi_gate__oi = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.998
        double var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.05869
        double var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.9987
        double var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 7.433e-07
        double var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.01791
        double var_chaste_interface__sarcolemmal_Ca_current_d_gate__d = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 4.757e-06
        double var_chaste_interface__sarcolemmal_Ca_current_f_gate__f = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.9999
        double var_chaste_interface__sarcolemmal_Ca_current_f_Ca_gate__f_Ca = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.7484
        double var_chaste_interface__Ca_release_current_from_JSR_u_gate__u = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__Ca_release_current_from_JSR_v_gate__v = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ca_release_current_from_JSR_w_gate__w = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.9993
        double var_chaste_interface__Ca_buffers__Ca_CMDN = NV_Ith_S(rY, 17);
        // Units: millimolar; Initial value: 0.001856
        double var_chaste_interface__Ca_buffers__Ca_TRPN = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 0.007022
        double var_chaste_interface__Ca_buffers__Ca_CSQN = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 6.432
        double var_chaste_interface__intracellular_ion_concentrations__Na_i = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 11.75
        double var_chaste_interface__intracellular_ion_concentrations__Cl_i = NV_Ith_S(rY, 21);
        // Units: millimolar; Initial value: 29.26
        double var_chaste_interface__intracellular_ion_concentrations__K_i = NV_Ith_S(rY, 22);
        // Units: millimolar; Initial value: 138.4
        double var_chaste_interface__intracellular_ion_concentrations__Ca_rel = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 1.502
        double var_chaste_interface__intracellular_ion_concentrations__Ca_up = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 1.502

        // Mathematics
        double d_dt_chaste_interface_var_membrane__V;
        const double var_Ca_activated_Cl_current__g_Cl_Ca = 0.29999999999999999; // nanoS_per_picoF
        const double var_Ca_activated_Cl_current_q_Ca_gate__q_Ca = 0; // dimensionless
        const double var_Ca_buffers__CMDN_max = 0.044999999999999998; // millimolar
        const double var_Ca_buffers__CSQN_max = 10.0; // millimolar
        const double var_Ca_buffers__TRPN_max = 0.34999999999999998; // millimolar
        const double var_Ca_leak_current_by_the_NSR__Ca_up_max = 15.0; // millimolar
        const double var_Ca_pump_current__i_p_Ca_max = 0.27500000000000002; // picoA_per_picoF
        const double var_Ca_release_current_from_JSR__K_rel = 30.0; // per_millisecond
        const double var_Ca_release_current_from_JSR__V_rel = 96.480000000000004; // micrometre_3
        const double var_Ca_release_current_from_JSR_u_gate__tau_u = 8.0; // millisecond
        const double var_Ca_uptake_current_by_the_NSR__I_up_max = 0.0050000000000000001; // picoA_per_picoF
        const double var_Ca_uptake_current_by_the_NSR__K_up = 0.00092000000000000003; // millimolar
        const double var_Na_Ca_exchanger_current__I_NaCa_max = 1600.0; // picoA_per_picoF
        const double var_Na_Ca_exchanger_current__K_mCa = 1.3799999999999999; // millimolar
        const double var_Na_Ca_exchanger_current__K_mNa = 87.5; // millimolar
        const double var_Na_Ca_exchanger_current__K_sat = 0.10000000000000001; // dimensionless
        const double var_background_currents__g_B_Ca = 0.0011299999999999999; // nanoS_per_picoF
        const double var_background_currents__g_B_Na = 0.00067400000000000001; // nanoS_per_picoF
        const double var_Ca_pump_current__i_p_Ca = var_Ca_pump_current__i_p_Ca_max * var_chaste_interface__intracellular_ion_concentrations__Ca_i / (0.00050000000000000001 + var_chaste_interface__intracellular_ion_concentrations__Ca_i); // picoA_per_picoF
        const double var_Ca_uptake_current_by_the_NSR__i_up = var_Ca_uptake_current_by_the_NSR__I_up_max / (1.0 + var_Ca_uptake_current_by_the_NSR__K_up / var_chaste_interface__intracellular_ion_concentrations__Ca_i); // picoA_per_picoF
        const double d_dt_chaste_interface_var_Ca_buffers__Ca_CMDN = 200.0 * (1.0 - var_chaste_interface__Ca_buffers__Ca_CMDN / var_Ca_buffers__CMDN_max) * var_chaste_interface__intracellular_ion_concentrations__Ca_i - 0.47599999999999998 * var_chaste_interface__Ca_buffers__Ca_CMDN / var_Ca_buffers__CMDN_max; // millimolar / millisecond
        const double var_Ca_buffers__J_Ca_CMDN = d_dt_chaste_interface_var_Ca_buffers__Ca_CMDN; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_Ca_buffers__Ca_TRPN = 78.400000000000006 * (1.0 - var_chaste_interface__Ca_buffers__Ca_TRPN / var_Ca_buffers__TRPN_max) * var_chaste_interface__intracellular_ion_concentrations__Ca_i - 0.39200000000000002 * var_chaste_interface__Ca_buffers__Ca_TRPN / var_Ca_buffers__TRPN_max; // millimolar / millisecond
        const double var_Ca_buffers__J_Ca_TRPN = d_dt_chaste_interface_var_Ca_buffers__Ca_TRPN; // millimolar_per_millisecond
        const double var_Ca_release_current_from_JSR__i_rel = pow(var_chaste_interface__Ca_release_current_from_JSR_u_gate__u, 2) * (-var_chaste_interface__intracellular_ion_concentrations__Ca_i + var_chaste_interface__intracellular_ion_concentrations__Ca_rel) * var_Ca_release_current_from_JSR__K_rel * var_chaste_interface__Ca_release_current_from_JSR_v_gate__v * var_chaste_interface__Ca_release_current_from_JSR_w_gate__w; // picoA_per_picoF
        const double d_dt_chaste_interface_var_Ca_buffers__Ca_CSQN = 0.47999999999999998 * (1.0 - var_chaste_interface__Ca_buffers__Ca_CSQN / var_Ca_buffers__CSQN_max) * var_chaste_interface__intracellular_ion_concentrations__Ca_rel - 0.40000000000000002 * var_chaste_interface__Ca_buffers__Ca_CSQN / var_Ca_buffers__CSQN_max; // millimolar / millisecond
        const double var_Ca_buffers__J_Ca_CSQN = d_dt_chaste_interface_var_Ca_buffers__Ca_CSQN; // millimolar_per_millisecond
        const double var_Ca_leak_current_by_the_NSR__i_up_leak = var_Ca_uptake_current_by_the_NSR__I_up_max * var_chaste_interface__intracellular_ion_concentrations__Ca_up / var_Ca_leak_current_by_the_NSR__Ca_up_max; // picoA_per_picoF
        const double var_intracellular_ion_concentrations__V_i = 13668.0; // micrometre_3
        const double var_intracellular_ion_concentrations__V_rel = 96.480000000000004; // micrometre_3
        const double var_intracellular_ion_concentrations__V_up = 1109.52; // micrometre_3
        const double var_membrane__F = 96.486699999999999; // coulomb_per_millimole
        const double var_membrane__R = 8.3142999999999994; // joule_per_mole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_Ca_release_current_from_JSR_w_gate__tau_w = (6.0 - 6.0 * exp(1.5800000000000001 - 0.20000000000000001 * var_chaste_interface__membrane__V)) / ((1.0 + 0.29999999999999999 * exp(1.5800000000000001 - 0.20000000000000001 * var_chaste_interface__membrane__V)) * (-7.9000000000000004 + var_chaste_interface__membrane__V)); // millisecond
        const double var_Ca_release_current_from_JSR_w_gate__w_infinity = 1.0 - 1 / (1.0 + exp(2.3529411764705883 - 0.058823529411764705 * var_chaste_interface__membrane__V)); // dimensionless
        const double d_dt_chaste_interface_var_Ca_release_current_from_JSR_w_gate__w = (-var_chaste_interface__Ca_release_current_from_JSR_w_gate__w + var_Ca_release_current_from_JSR_w_gate__w_infinity) / var_Ca_release_current_from_JSR_w_gate__tau_w; // 1 / millisecond
        const double var_fast_sodium_current_h_gate__alpha_h = ((var_chaste_interface__membrane__V < -40.0) ? (0.13500000000000001 * exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__membrane__V)) : (0)); // per_millisecond
        const double var_fast_sodium_current_h_gate__beta_h = ((var_chaste_interface__membrane__V < -40.0) ? (310000.0 * exp(0.34999999999999998 * var_chaste_interface__membrane__V) + 3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__membrane__V)) : (7.6923076923076916 / (1.0 + exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_h_gate__h = (1.0 - var_chaste_interface__fast_sodium_current_h_gate__h) * var_fast_sodium_current_h_gate__alpha_h - var_fast_sodium_current_h_gate__beta_h * var_chaste_interface__fast_sodium_current_h_gate__h; // 1 / millisecond
        const double var_fast_sodium_current_j_gate__alpha_j = ((var_chaste_interface__membrane__V < -40.0) ? ((37.780000000000001 + var_chaste_interface__membrane__V) * (-127140.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__V) - 3.4740000000000003e-5 * exp(-0.043909999999999998 * var_chaste_interface__membrane__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V))) : (0)); // per_millisecond
        const double var_fast_sodium_current_j_gate__beta_j = ((var_chaste_interface__membrane__V < -40.0) ? (0.1212 * exp(-0.01052 * var_chaste_interface__membrane__V) / (1.0 + exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__membrane__V))) : (0.29999999999999999 * exp(-2.5349999999999999e-7 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.2000000000000002 - 0.10000000000000001 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_j_gate__j = (1.0 - var_chaste_interface__fast_sodium_current_j_gate__j) * var_fast_sodium_current_j_gate__alpha_j - var_fast_sodium_current_j_gate__beta_j * var_chaste_interface__fast_sodium_current_j_gate__j; // 1 / millisecond
        const double var_fast_sodium_current_m_gate__alpha_m = ((fabs(47.130000000000003 + var_chaste_interface__membrane__V) < 1.0000000000287557e-6) ? (3.200000000092018e-7 / (1.0 - exp(-1.0000000000287557e-7)) - 499999.99998562218 * (47.129999000000005 + var_chaste_interface__membrane__V) * (-3.200000000092018e-7 / (1.0 - exp(1.0000000000287557e-7)) - 3.200000000092018e-7 / (1.0 - exp(-1.0000000000287557e-7)))) : (0.32000000000000001 * (47.130000000000003 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.7130000000000001 - 0.10000000000000001 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_fast_sodium_current_m_gate__beta_m = 0.080000000000000002 * exp(-0.090909090909090912 * var_chaste_interface__membrane__V); // per_millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_m_gate__m = (1.0 - var_chaste_interface__fast_sodium_current_m_gate__m) * var_fast_sodium_current_m_gate__alpha_m - var_fast_sodium_current_m_gate__beta_m * var_chaste_interface__fast_sodium_current_m_gate__m; // 1 / millisecond
        const double var_rapid_delayed_rectifier_K_current_xr_gate__alpha_xr = ((fabs(-248.0 + var_chaste_interface__membrane__V) < 2.8000000000805159e-6) ? (1.1200000000322064e-7 / (1.0 - exp(-1.0000000000287557e-7)) - 178571.42856629365 * (-248.0000028 + var_chaste_interface__membrane__V) * (-1.1200000000322064e-7 / (1.0 - exp(1.0000000000287557e-7)) - 1.1200000000322064e-7 / (1.0 - exp(-1.0000000000287557e-7)))) : (0.040000000000000001 * (-248.0 + var_chaste_interface__membrane__V) / (1.0 - exp(8.8571428571428577 - 0.035714285714285712 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_rapid_delayed_rectifier_K_current_xr_gate__beta_xr = ((fabs(163.0 + var_chaste_interface__membrane__V) < 2.1000000000048757e-6) ? (-5.8799999997027897e-8 / (-1.0 + exp(-9.9999999994945406e-8)) + 238095.23809468528 * (163.00000209999999 + var_chaste_interface__membrane__V) * (5.8799999997027897e-8 / (-1.0 + exp(-9.9999999994945406e-8)) + 5.8800000003245146e-8 / (-1.0 + exp(1.0000000000551896e-7)))) : (0.028000000000000001 * (163.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(7.7619047619047619 + 0.047619047619047616 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_rapid_delayed_rectifier_K_current_xr_gate__tau_xr = 1 / (var_rapid_delayed_rectifier_K_current_xr_gate__alpha_xr + var_rapid_delayed_rectifier_K_current_xr_gate__beta_xr); // millisecond
        const double var_rapid_delayed_rectifier_K_current_xr_gate__xr_infinity = 1 / (1.0 + exp(-1.4234703366189325 - 0.1859773107680863 * var_chaste_interface__membrane__V)); // dimensionless
        const double d_dt_chaste_interface_var_rapid_delayed_rectifier_K_current_xr_gate__xr = (-var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr + var_rapid_delayed_rectifier_K_current_xr_gate__xr_infinity) / var_rapid_delayed_rectifier_K_current_xr_gate__tau_xr; // 1 / millisecond
        const double var_sarcolemmal_Ca_current__g_Ca = 0.23999999999999999; // nanoS_per_picoF
        const double var_sarcolemmal_Ca_current_d_gate__d_infinity = 1 / (1.0 + exp(-1.6666666666666667 - 0.16666666666666666 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_sarcolemmal_Ca_current_d_gate__tau_d = ((fabs(10.0 + var_chaste_interface__membrane__V) < 6.2399999999074307e-7) ? (45787545.788225032 * (1.0 - exp(-9.999999999851651e-8)) / (1.0 + exp(-9.999999999851651e-8)) - 801282.05129393819 * (9.9999993759999999 + var_chaste_interface__membrane__V) * (-45787545.788225032 * (1.0 - exp(9.999999999851651e-8)) / (1.0 + exp(9.999999999851651e-8)) - 45787545.788225032 * (1.0 - exp(-9.999999999851651e-8)) / (1.0 + exp(-9.999999999851651e-8)))) : (28.571428571428569 * (1.0 - exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V)) / ((1.0 + exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V)) * (10.0 + var_chaste_interface__membrane__V)))); // millisecond
        const double d_dt_chaste_interface_var_sarcolemmal_Ca_current_d_gate__d = (-var_chaste_interface__sarcolemmal_Ca_current_d_gate__d + var_sarcolemmal_Ca_current_d_gate__d_infinity) / var_sarcolemmal_Ca_current_d_gate__tau_d; // 1 / millisecond
        const double var_sarcolemmal_Ca_current_f_Ca_gate__f_Ca_infinity = 0.28999999999999998 + 0.80000000000000004 / (1.0 + exp(-2.0 + 16666.666666666668 * var_chaste_interface__intracellular_ion_concentrations__Ca_i)); // dimensionless
        const double var_sarcolemmal_Ca_current_f_Ca_gate__tau_f_Ca = 2.0; // millisecond
        const double d_dt_chaste_interface_var_sarcolemmal_Ca_current_f_Ca_gate__f_Ca = (-var_chaste_interface__sarcolemmal_Ca_current_f_Ca_gate__f_Ca + var_sarcolemmal_Ca_current_f_Ca_gate__f_Ca_infinity) / var_sarcolemmal_Ca_current_f_Ca_gate__tau_f_Ca; // 1 / millisecond
        const double var_sarcolemmal_Ca_current__i_Ca = (-65.0 + var_chaste_interface__membrane__V) * var_sarcolemmal_Ca_current__g_Ca * var_chaste_interface__sarcolemmal_Ca_current_d_gate__d * var_chaste_interface__sarcolemmal_Ca_current_f_Ca_gate__f_Ca * var_chaste_interface__sarcolemmal_Ca_current_f_gate__f; // picoA_per_picoF
        const double var_sarcolemmal_Ca_current_f_gate__f_infinity = 1 / (1.0 + exp(3.967741935483871 + 0.16129032258064516 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_sarcolemmal_Ca_current_f_gate__tau_f = 400.0 / (1.0 + 4.5 * exp(-0.0567 * pow((-1 + 0.1111111111111111 * var_chaste_interface__membrane__V), 2))); // millisecond
        const double d_dt_chaste_interface_var_sarcolemmal_Ca_current_f_gate__f = (-var_chaste_interface__sarcolemmal_Ca_current_f_gate__f + var_sarcolemmal_Ca_current_f_gate__f_infinity) / var_sarcolemmal_Ca_current_f_gate__tau_f; // 1 / millisecond
        const double var_slow_delayed_rectifier_K_current__g_Ks = 0.056099999999999997; // nanoS_per_picoF
        const double var_slow_delayed_rectifier_K_current_xs_gate__alpha_xs = ((fabs(28.5 + var_chaste_interface__membrane__V) < 1.1500000000011501e-5) ? (1.1499999999997625e-10 / (1.0 - exp(-9.9999999999979336e-8)) - 43478.260869521735 * (28.499988500000001 + var_chaste_interface__membrane__V) * (-1.1500000000025379e-10 / (1.0 - exp(1.0000000000022069e-7)) - 1.1499999999997625e-10 / (1.0 - exp(-9.9999999999979336e-8)))) : (1.0000000000000001e-5 * (28.5 + var_chaste_interface__membrane__V) / (1.0 - exp(-0.24782608695652175 - 0.0086956521739130436 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_slow_delayed_rectifier_K_current_xs_gate__beta_xs = ((fabs(28.5 + var_chaste_interface__membrane__V) < 3.300000000205916e-7) ? (-7.5900000004736066e-11 / (-1.0 + exp(-1.0000000000623989e-7)) + 1515151.5150569715 * (28.500000329999999 + var_chaste_interface__membrane__V) * (7.5900000004736066e-11 / (-1.0 + exp(1.0000000000623989e-7)) + 7.5900000004736066e-11 / (-1.0 + exp(-1.0000000000623989e-7)))) : (0.00023000000000000001 * (28.5 + var_chaste_interface__membrane__V) / (-1.0 + exp(8.6363636363636367 + 0.30303030303030304 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_slow_delayed_rectifier_K_current_xs_gate__tau_xs = 1 / (var_slow_delayed_rectifier_K_current_xs_gate__alpha_xs + var_slow_delayed_rectifier_K_current_xs_gate__beta_xs); // millisecond
        const double var_slow_delayed_rectifier_K_current_xs_gate__xs_infinity = pow((1.0 + exp(1.0833333333333333 - 0.083333333333333329 * var_chaste_interface__membrane__V)), (-0.5)); // dimensionless
        const double d_dt_chaste_interface_var_slow_delayed_rectifier_K_current_xs_gate__xs = (-var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs + var_slow_delayed_rectifier_K_current_xs_gate__xs_infinity) / var_slow_delayed_rectifier_K_current_xs_gate__tau_xs; // 1 / millisecond
        const double var_sodium_potassium_pump__Km_K_o = 1.5; // millimolar
        const double var_sodium_potassium_pump__Km_Na_i = 10.0; // millimolar
        const double var_sodium_potassium_pump__i_NaK_max = 0.59999999999999998; // picoA_per_picoF
        const double var_background_currents__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 0) / var_chaste_interface__intracellular_ion_concentrations__Ca_i) / var_membrane__F; // millivolt
        const double var_background_currents__i_B_Ca = (-var_background_currents__E_Ca + var_chaste_interface__membrane__V) * var_background_currents__g_B_Ca; // picoA_per_picoF
        const double var_standard_ionic_concentrations__Cl_o = 132.0; // millimolar
        const double var_Ca_activated_Cl_current__E_Cl = -var_membrane__R * var_membrane__T * log(var_standard_ionic_concentrations__Cl_o / var_chaste_interface__intracellular_ion_concentrations__Cl_i) / var_membrane__F; // millivolt
        const double var_Ca_activated_Cl_current__i_Cl_Ca = (-var_Ca_activated_Cl_current__E_Cl + var_chaste_interface__membrane__V) * var_Ca_activated_Cl_current__g_Cl_Ca * var_Ca_activated_Cl_current_q_Ca_gate__q_Ca; // picoA_per_picoF
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__Cl_i = var_Ca_activated_Cl_current__i_Cl_Ca / (var_intracellular_ion_concentrations__V_i * var_membrane__F); // millimolar / millisecond
        const double var_Na_Ca_exchanger_current__i_NaCa = (pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * NV_Ith_S(mParameters, 0) * exp(0.34999999999999998 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) - pow(NV_Ith_S(mParameters, 2), 3) * var_chaste_interface__intracellular_ion_concentrations__Ca_i * exp(-0.65000000000000002 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_Na_Ca_exchanger_current__I_NaCa_max / ((1.0 + var_Na_Ca_exchanger_current__K_sat * exp(-0.65000000000000002 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * (pow(var_Na_Ca_exchanger_current__K_mNa, 3) + pow(NV_Ith_S(mParameters, 2), 3)) * (var_Na_Ca_exchanger_current__K_mCa + NV_Ith_S(mParameters, 0))); // picoA_per_picoF
        const double var_Ca_release_current_from_JSR__Fn = 9.9999999999999998e-13 * var_Ca_release_current_from_JSR__V_rel * var_Ca_release_current_from_JSR__i_rel + 1.0e-13 * var_Na_Ca_exchanger_current__i_NaCa / var_membrane__F - 2.4999999999999999e-13 * var_sarcolemmal_Ca_current__i_Ca / var_membrane__F; // dimensionless
        const double var_Ca_release_current_from_JSR_u_gate__u_infinity = 1 / (1.0 + exp(250.0 - 731528895391368.0 * var_Ca_release_current_from_JSR__Fn)); // dimensionless
        const double var_Ca_release_current_from_JSR_v_gate__tau_v = 1.9099999999999999 + 2.0899999999999999 / (1.0 + exp(250.0 - 731528895391368.0 * var_Ca_release_current_from_JSR__Fn)); // millisecond
        const double var_Ca_release_current_from_JSR_v_gate__v_infinity = 1.0 - 1 / (1.0 + exp(50.0 - 731528895391368.0 * var_Ca_release_current_from_JSR__Fn)); // dimensionless
        const double d_dt_chaste_interface_var_Ca_release_current_from_JSR_u_gate__u = (-var_chaste_interface__Ca_release_current_from_JSR_u_gate__u + var_Ca_release_current_from_JSR_u_gate__u_infinity) / var_Ca_release_current_from_JSR_u_gate__tau_u; // 1 / millisecond
        const double d_dt_chaste_interface_var_Ca_release_current_from_JSR_v_gate__v = (-var_chaste_interface__Ca_release_current_from_JSR_v_gate__v + var_Ca_release_current_from_JSR_v_gate__v_infinity) / var_Ca_release_current_from_JSR_v_gate__tau_v; // 1 / millisecond
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__Ca_i = ((-var_Ca_uptake_current_by_the_NSR__i_up + var_Ca_leak_current_by_the_NSR__i_up_leak) * var_intracellular_ion_concentrations__V_up + var_Ca_release_current_from_JSR__i_rel * var_intracellular_ion_concentrations__V_rel) / var_intracellular_ion_concentrations__V_i - var_Ca_buffers__CMDN_max * var_Ca_buffers__J_Ca_CMDN - var_Ca_buffers__J_Ca_TRPN * var_Ca_buffers__TRPN_max + 0.5 * (-var_Ca_pump_current__i_p_Ca - var_background_currents__i_B_Ca - var_sarcolemmal_Ca_current__i_Ca + 2.0 * var_Na_Ca_exchanger_current__i_NaCa) / (var_intracellular_ion_concentrations__V_i * var_membrane__F); // millimolar / millisecond
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 2) / var_chaste_interface__intracellular_ion_concentrations__Na_i) / var_membrane__F; // millivolt
        const double var_background_currents__i_B_Na = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_background_currents__g_B_Na; // picoA_per_picoF
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 4) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // picoA_per_picoF
        const double var_sodium_potassium_pump__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * NV_Ith_S(mParameters, 2)); // dimensionless
        const double var_sodium_potassium_pump__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + 0.036499999999999998 * var_sodium_potassium_pump__sigma * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // dimensionless
        const double var_sodium_potassium_pump__i_NaK = var_sodium_potassium_pump__f_NaK * var_sodium_potassium_pump__i_NaK_max * NV_Ith_S(mParameters, 1) / ((1.0 + pow((var_sodium_potassium_pump__Km_Na_i / var_chaste_interface__intracellular_ion_concentrations__Na_i), 1.5)) * (var_sodium_potassium_pump__Km_K_o + NV_Ith_S(mParameters, 1))); // picoA_per_picoF
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__Na_i = (-var_background_currents__i_B_Na - var_fast_sodium_current__i_Na - 3.0 * var_Na_Ca_exchanger_current__i_NaCa - 3.0 * var_sodium_potassium_pump__i_NaK) / (var_intracellular_ion_concentrations__V_i * var_membrane__F); // millimolar / millisecond
        const double var_time_independent_potassium_current__E_K = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 1) / var_chaste_interface__intracellular_ion_concentrations__K_i) / var_membrane__F; // millivolt
        const double var_rapid_delayed_rectifier_K_current__i_Kr = (0.070000000000000007 + 0.57999999999999996 / (1.0 + exp(0.66964285714285721 + 0.044642857142857144 * var_chaste_interface__membrane__V))) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 6) * var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr; // picoA_per_picoF
        const double var_slow_delayed_rectifier_K_current__i_Ks = pow(var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs, 2) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_slow_delayed_rectifier_K_current__g_Ks; // picoA_per_picoF
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 5) / (1.0 + exp(5.6000000000000005 + 0.070000000000000007 * var_chaste_interface__membrane__V)); // picoA_per_picoF
        const double var_transfer_current_from_NSR_to_JSR__tau_tr = 180.0; // millisecond
        const double var_transfer_current_from_NSR_to_JSR__i_tr = (-var_chaste_interface__intracellular_ion_concentrations__Ca_rel + var_chaste_interface__intracellular_ion_concentrations__Ca_up) / var_transfer_current_from_NSR_to_JSR__tau_tr; // picoA_per_picoF
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__Ca_rel = -var_Ca_release_current_from_JSR__i_rel - 31.0 * var_Ca_buffers__J_Ca_CSQN + var_transfer_current_from_NSR_to_JSR__i_tr; // millimolar / millisecond
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__Ca_up = -var_Ca_leak_current_by_the_NSR__i_up_leak - var_intracellular_ion_concentrations__V_rel * var_transfer_current_from_NSR_to_JSR__i_tr / var_intracellular_ion_concentrations__V_up + var_Ca_uptake_current_by_the_NSR__i_up; // millimolar / millisecond
        const double var_transient_outward_K_current__g_to = 0.19824; // nanoS_per_picoF
        const double var_transient_outward_K_current_oa_gate__alpha_oa = 0.65000000000000002 / (exp(0.2711864406779661 - 0.016949152542372881 * var_chaste_interface__membrane__V) + exp(-2.1176470588235294 - 0.11764705882352941 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_transient_outward_K_current_oa_gate__beta_oa = 1.2 / (2.2000000000000002 + exp(4.166666666666667 + 0.055555555555555552 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_transient_outward_K_current_oa_gate__oa_infinity = pow((1.0 + exp(-0.047619047619047616 - 0.095238095238095233 * var_chaste_interface__membrane__V)), (-0.33333333333333331)); // dimensionless
        const double var_transient_outward_K_current_oa_gate__tau_oa = 1 / (var_transient_outward_K_current_oa_gate__alpha_oa + var_transient_outward_K_current_oa_gate__beta_oa); // millisecond
        const double d_dt_chaste_interface_var_transient_outward_K_current_oa_gate__oa = (-var_chaste_interface__transient_outward_K_current_oa_gate__oa + var_transient_outward_K_current_oa_gate__oa_infinity) / var_transient_outward_K_current_oa_gate__tau_oa; // 1 / millisecond
        const double var_transient_outward_K_current_oi_gate__alpha_oi = 1 / (6.2000000000000002 + exp(10.68020304568528 + 0.10152284263959391 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_transient_outward_K_current_oi_gate__beta_oi = 1 / (7.54 + exp(0.69075369075369086 - 0.07770007770007771 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_transient_outward_K_current__i_to = pow(var_chaste_interface__transient_outward_K_current_oa_gate__oa, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_transient_outward_K_current__g_to * var_chaste_interface__transient_outward_K_current_oi_gate__oi; // picoA_per_picoF
        const double var_transient_outward_K_current_oi_gate__oi_infinity = 1 / (1.0 + exp(6.7251162790697681 + 0.15503875968992248 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_transient_outward_K_current_oi_gate__tau_oi = 1 / (var_transient_outward_K_current_oi_gate__alpha_oi + var_transient_outward_K_current_oi_gate__beta_oi); // millisecond
        const double d_dt_chaste_interface_var_transient_outward_K_current_oi_gate__oi = (-var_chaste_interface__transient_outward_K_current_oi_gate__oi + var_transient_outward_K_current_oi_gate__oi_infinity) / var_transient_outward_K_current_oi_gate__tau_oi; // 1 / millisecond
        const double var_ultrarapid_delayed_rectifier_K_current__g_Kur_d = 0.0085500000000000003 + 0.077899999999999997 / (1.0 + exp(-0.6875 - 0.0625 * var_chaste_interface__membrane__V)); // nanoS_per_picoF
        const double var_ultrarapid_delayed_rectifier_K_current_ua_gate__alpha_ua = 1.47 / (exp(0.90048939641109305 - 0.032626427406199025 * var_chaste_interface__membrane__V) + exp(-1.0839046686255307 - 0.032647730982696702 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_ultrarapid_delayed_rectifier_K_current_ua_gate__beta_ua = 0.41999999999999998 / (exp(10.698795180722891 + 0.40160642570281119 * var_chaste_interface__membrane__V) + exp(2.1812377210216107 + 0.049115913555992145 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_ultrarapid_delayed_rectifier_K_current_ua_gate__tau_ua = 1 / (var_ultrarapid_delayed_rectifier_K_current_ua_gate__alpha_ua + var_ultrarapid_delayed_rectifier_K_current_ua_gate__beta_ua); // millisecond
        const double var_ultrarapid_delayed_rectifier_K_current_ua_gate__ua_infinity = pow((1.0 + exp(-0.29610115911485774 - 0.10537407797681771 * var_chaste_interface__membrane__V)), (-0.33333333333333331)); // dimensionless
        const double d_dt_chaste_interface_var_ultrarapid_delayed_rectifier_K_current_ua_gate__ua = (-var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua + var_ultrarapid_delayed_rectifier_K_current_ua_gate__ua_infinity) / var_ultrarapid_delayed_rectifier_K_current_ua_gate__tau_ua; // 1 / millisecond
        const double var_ultrarapid_delayed_rectifier_K_current_ui_gate__alpha_ui = 1 / (21.0 + exp(6.6071428571428568 - 0.035714285714285712 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_ultrarapid_delayed_rectifier_K_current_ui_gate__beta_ui = exp(-9.875 + 0.0625 * var_chaste_interface__membrane__V); // per_millisecond
        const double var_ultrarapid_delayed_rectifier_K_current_ui_gate__tau_ui = 1 / (var_ultrarapid_delayed_rectifier_K_current_ui_gate__alpha_ui + var_ultrarapid_delayed_rectifier_K_current_ui_gate__beta_ui); // millisecond
        const double var_ultrarapid_delayed_rectifier_K_current__i_Kur_d = pow(var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_ultrarapid_delayed_rectifier_K_current__g_Kur_d * var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui; // picoA_per_picoF
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__K_i = (-var_rapid_delayed_rectifier_K_current__i_Kr - var_slow_delayed_rectifier_K_current__i_Ks - var_time_independent_potassium_current__i_K1 - var_transient_outward_K_current__i_to - var_ultrarapid_delayed_rectifier_K_current__i_Kur_d + 2.0 * var_sodium_potassium_pump__i_NaK) / (var_intracellular_ion_concentrations__V_i * var_membrane__F); // millimolar / millisecond
        const double var_ultrarapid_delayed_rectifier_K_current_ui_gate__ui_infinity = 1 / (1.0 + exp(-3.6189956331877728 + 0.036390101892285295 * var_chaste_interface__membrane__V)); // dimensionless
        const double d_dt_chaste_interface_var_ultrarapid_delayed_rectifier_K_current_ui_gate__ui = (-var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui + var_ultrarapid_delayed_rectifier_K_current_ui_gate__ui_infinity) / var_ultrarapid_delayed_rectifier_K_current_ui_gate__tau_ui; // 1 / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_membrane__V = 0.0;
        }
        else
        {
            const double var_membrane__i_stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
            const double var_membrane__i_stim = var_membrane__i_stim_converted / HeartConfig::Instance()->GetCapacitance(); // picoA_per_picoF
            d_dt_chaste_interface_var_membrane__V = (-var_Ca_activated_Cl_current__i_Cl_Ca - var_Ca_pump_current__i_p_Ca - var_Na_Ca_exchanger_current__i_NaCa - var_background_currents__i_B_Ca - var_background_currents__i_B_Na - var_fast_sodium_current__i_Na - var_membrane__i_stim - var_rapid_delayed_rectifier_K_current__i_Kr - var_sarcolemmal_Ca_current__i_Ca - var_slow_delayed_rectifier_K_current__i_Ks - var_sodium_potassium_pump__i_NaK - var_time_independent_potassium_current__i_K1 - var_transient_outward_K_current__i_to - var_ultrarapid_delayed_rectifier_K_current__i_Kur_d) / NV_Ith_S(mParameters, 3); // millivolt / millisecond
        }
        
        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_membrane__V;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_intracellular_ion_concentrations__Ca_i;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_fast_sodium_current_m_gate__m;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_fast_sodium_current_h_gate__h;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_fast_sodium_current_j_gate__j;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_transient_outward_K_current_oa_gate__oa;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_transient_outward_K_current_oi_gate__oi;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_ultrarapid_delayed_rectifier_K_current_ua_gate__ua;
        NV_Ith_S(rDY,8) = d_dt_chaste_interface_var_ultrarapid_delayed_rectifier_K_current_ui_gate__ui;
        NV_Ith_S(rDY,9) = d_dt_chaste_interface_var_rapid_delayed_rectifier_K_current_xr_gate__xr;
        NV_Ith_S(rDY,10) = d_dt_chaste_interface_var_slow_delayed_rectifier_K_current_xs_gate__xs;
        NV_Ith_S(rDY,11) = d_dt_chaste_interface_var_sarcolemmal_Ca_current_d_gate__d;
        NV_Ith_S(rDY,12) = d_dt_chaste_interface_var_sarcolemmal_Ca_current_f_gate__f;
        NV_Ith_S(rDY,13) = d_dt_chaste_interface_var_sarcolemmal_Ca_current_f_Ca_gate__f_Ca;
        NV_Ith_S(rDY,14) = d_dt_chaste_interface_var_Ca_release_current_from_JSR_u_gate__u;
        NV_Ith_S(rDY,15) = d_dt_chaste_interface_var_Ca_release_current_from_JSR_v_gate__v;
        NV_Ith_S(rDY,16) = d_dt_chaste_interface_var_Ca_release_current_from_JSR_w_gate__w;
        NV_Ith_S(rDY,17) = d_dt_chaste_interface_var_Ca_buffers__Ca_CMDN;
        NV_Ith_S(rDY,18) = d_dt_chaste_interface_var_Ca_buffers__Ca_TRPN;
        NV_Ith_S(rDY,19) = d_dt_chaste_interface_var_Ca_buffers__Ca_CSQN;
        NV_Ith_S(rDY,20) = d_dt_chaste_interface_var_intracellular_ion_concentrations__Na_i;
        NV_Ith_S(rDY,21) = d_dt_chaste_interface_var_intracellular_ion_concentrations__Cl_i;
        NV_Ith_S(rDY,22) = d_dt_chaste_interface_var_intracellular_ion_concentrations__K_i;
        NV_Ith_S(rDY,23) = d_dt_chaste_interface_var_intracellular_ion_concentrations__Ca_rel;
        NV_Ith_S(rDY,24) = d_dt_chaste_interface_var_intracellular_ion_concentrations__Ca_up;
    }

    void Cellramirez_nattel_courtemanche_2000FromCellMLCvode::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -83.53
        double var_chaste_interface__intracellular_ion_concentrations__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0001024
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.001972
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.9791
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.9869
        double var_chaste_interface__transient_outward_K_current_oa_gate__oa = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.07164
        double var_chaste_interface__transient_outward_K_current_oi_gate__oi = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.998
        double var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.05869
        double var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.9987
        double var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 7.433e-07
        double var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.01791
        double var_chaste_interface__sarcolemmal_Ca_current_d_gate__d = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 4.757e-06
        double var_chaste_interface__sarcolemmal_Ca_current_f_gate__f = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.9999
        double var_chaste_interface__sarcolemmal_Ca_current_f_Ca_gate__f_Ca = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.7484
        double var_chaste_interface__Ca_release_current_from_JSR_u_gate__u = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__Ca_release_current_from_JSR_v_gate__v = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ca_release_current_from_JSR_w_gate__w = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.9993
        double var_chaste_interface__Ca_buffers__Ca_CMDN = NV_Ith_S(rY, 17);
        // Units: millimolar; Initial value: 0.001856
        double var_chaste_interface__Ca_buffers__Ca_TRPN = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 0.007022
        double var_chaste_interface__Ca_buffers__Ca_CSQN = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 6.432
        double var_chaste_interface__intracellular_ion_concentrations__Na_i = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 11.75
        double var_chaste_interface__intracellular_ion_concentrations__K_i = NV_Ith_S(rY, 22);
        // Units: millimolar; Initial value: 138.4
        double var_chaste_interface__intracellular_ion_concentrations__Ca_rel = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 1.502
        const double var_x0 = 1 / NV_Ith_S(mParameters, 3);
        const double var_x1 = pow(var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs, 2);
        const double var_x2 = exp(5.6000000000000005 + 0.070000000000000007 * var_chaste_interface__membrane__V);
        const double var_x3 = 1.0 + var_x2;
        const double var_x4 = NV_Ith_S(mParameters, 5) / var_x3;
        const double var_x5 = pow(var_chaste_interface__transient_outward_K_current_oa_gate__oa, 3);
        const double var_x6 = var_x5 * var_chaste_interface__transient_outward_K_current_oi_gate__oi;
        const double var_x7 = exp(0.66964285714285721 + 0.044642857142857144 * var_chaste_interface__membrane__V);
        const double var_x8 = 1.0 + var_x7;
        const double var_x9 = 1 / var_x8;
        const double var_x10 = -0.070000000000000007 - 0.57999999999999996 * var_x9;
        const double var_x11 = NV_Ith_S(mParameters, 6) * var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr;
        const double var_x12 = var_x10 * var_x11;
        const double var_x13 = pow(var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua, 3);
        const double var_x14 = 0.0625 * var_chaste_interface__membrane__V;
        const double var_x15 = exp(-0.6875 - var_x14);
        const double var_x16 = 1.0 + var_x15;
        const double var_x17 = 0.0085500000000000003 + 0.077899999999999997 / var_x16;
        const double var_x18 = var_x13 * var_x17;
        const double var_x19 = var_x18 * var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui;
        const double var_x20 = var_chaste_interface__sarcolemmal_Ca_current_d_gate__d * var_chaste_interface__sarcolemmal_Ca_current_f_gate__f;
        const double var_x21 = var_x20 * var_chaste_interface__sarcolemmal_Ca_current_f_Ca_gate__f_Ca;
        const double var_x22 = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3);
        const double var_x23 = var_x22 * NV_Ith_S(mParameters, 4) * var_chaste_interface__fast_sodium_current_j_gate__j;
        const double var_x24 = var_x23 * var_chaste_interface__fast_sodium_current_h_gate__h;
        const double var_x25 = 1 / var_chaste_interface__intracellular_ion_concentrations__K_i;
        const double var_x26 = -26.712831923985377 * log(var_x25 * NV_Ith_S(mParameters, 1)) + var_chaste_interface__membrane__V;
        const double var_x27 = var_x2 * var_x26 * NV_Ith_S(mParameters, 5) / pow(var_x3, 2);
        const double var_x28 = NV_Ith_S(mParameters, 0) * exp(0.013102317305629283 * var_chaste_interface__membrane__V);
        const double var_x29 = var_x28 * pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3);
        const double var_x30 = exp(-0.024332874996168673 * var_chaste_interface__membrane__V);
        const double var_x31 = pow(NV_Ith_S(mParameters, 2), 3);
        const double var_x32 = var_x30 * var_x31;
        const double var_x33 = var_x32 * var_chaste_interface__intracellular_ion_concentrations__Ca_i;
        const double var_x34 = 1.0 + 0.10000000000000001 * var_x30;
        const double var_x35 = 1 / ((669921.875 + var_x31) * (1.3799999999999999 + NV_Ith_S(mParameters, 0)));
        const double var_x36 = var_x35 / var_x34;
        const double var_x37 = var_x36 * (0.013102317305629283 * var_x29 + 0.024332874996168673 * var_x33);
        const double var_x38 = var_x11 * var_x26 * var_x7 / pow(var_x8, 2);
        const double var_x39 = var_x26 * var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui;
        const double var_x40 = var_x13 * var_x15 * var_x39 / pow(var_x16, 2);
        const double var_x41 = 1 / var_chaste_interface__intracellular_ion_concentrations__Na_i;
        const double var_x42 = pow(var_x41, 1.5);
        const double var_x43 = exp(-0.0037435192301797956 * var_chaste_interface__membrane__V);
        const double var_x44 = exp(0.01485884101040119 * NV_Ith_S(mParameters, 2));
        const double var_x45 = exp(-0.037435192301797954 * var_chaste_interface__membrane__V);
        const double var_x46 = 1.0 + 0.1245 * var_x43 + 0.036499999999999998 * var_x45 * (-0.14285714285714285 + 0.14285714285714285 * var_x44);
        const double var_x47 = NV_Ith_S(mParameters, 1) / (1.5 + NV_Ith_S(mParameters, 1));
        const double var_x48 = var_x47 * (0.00046606814415738453 * var_x43 + 0.037435192301797954 * var_x45 * (-0.0052142857142857138 + 0.0052142857142857138 * var_x44)) / (pow(var_x46, 2) * (1.0 + 31.622776601683793 * var_x42));
        const double var_x49 = var_x29 - var_x33;
        const double var_x50 = var_x30 * var_x35 * var_x49 / pow(var_x34, 2);
        const double var_x51 = 0.00050000000000000001 + var_chaste_interface__intracellular_ion_concentrations__Ca_i;
        const double var_x52 = 1 / var_x51;
        const double var_x53 = 1 / var_chaste_interface__intracellular_ion_concentrations__Ca_i;
        const double var_x54 = var_chaste_interface__intracellular_ion_concentrations__Ca_i / pow(var_x51, 2);
        const double var_x55 = var_x32 * var_x36;
        const double var_x56 = -26.712831923985377 * log(var_x41 * NV_Ith_S(mParameters, 2)) + var_chaste_interface__membrane__V;
        const double var_x57 = var_x0 * var_x56;
        const double var_x58 = NV_Ith_S(mParameters, 4) * var_chaste_interface__fast_sodium_current_h_gate__h;
        const double var_x59 = var_x58 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 2) * var_chaste_interface__fast_sodium_current_j_gate__j;
        const double var_x60 = var_x22 * var_x58;
        const double var_x61 = var_x26 * pow(var_chaste_interface__transient_outward_K_current_oa_gate__oa, 2) * var_chaste_interface__transient_outward_K_current_oi_gate__oi;
        const double var_x62 = var_x26 * var_x5;
        const double var_x63 = var_x17 * var_x39 * pow(var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua, 2);
        const double var_x64 = var_x18 * var_x26;
        const double var_x65 = var_x26 * NV_Ith_S(mParameters, 6);
        const double var_x66 = var_x26 * var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs;
        const double var_x67 = var_x0 * (15.6 - 0.23999999999999999 * var_chaste_interface__membrane__V);
        const double var_x68 = var_chaste_interface__sarcolemmal_Ca_current_f_Ca_gate__f_Ca * var_chaste_interface__sarcolemmal_Ca_current_f_gate__f;
        const double var_x69 = var_chaste_interface__sarcolemmal_Ca_current_d_gate__d * var_chaste_interface__sarcolemmal_Ca_current_f_Ca_gate__f_Ca;
        const double var_x70 = var_x24 * var_x41;
        const double var_x71 = var_x28 * var_x36 * pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 2);
        const double var_x72 = var_x41 * var_x42 * var_x47 / (var_x46 * pow((0.031622776601683791 + var_x42), 2));
        const double var_x73 = var_x1 * var_x25;
        const double var_x74 = var_x25 * var_x6;
        const double var_x75 = var_x25 * var_x4;
        const double var_x76 = 26.712831923985377 * var_x25;
        const double var_x77 = 1 / (pow((1.0 + 0.00092000000000000003 * var_x53), 2) * pow(var_chaste_interface__intracellular_ion_concentrations__Ca_i, 2));
        const double var_x78 = pow(var_chaste_interface__Ca_release_current_from_JSR_u_gate__u, 2);
        const double var_x79 = var_x78 * var_chaste_interface__Ca_release_current_from_JSR_w_gate__w;
        const double var_x80 = 0.21176470588235294 * var_x79;
        const double var_x81 = var_x80 * var_chaste_interface__Ca_release_current_from_JSR_v_gate__v;
        const double var_x82 = 5.9145564270171174e-6 - 9.0993175800263347e-8 * var_chaste_interface__membrane__V;
        const double var_x83 = var_x82 * var_chaste_interface__sarcolemmal_Ca_current_f_Ca_gate__f_Ca;
        const double var_x84 = -var_chaste_interface__intracellular_ion_concentrations__Ca_i + var_chaste_interface__intracellular_ion_concentrations__Ca_rel;
        const double var_x85 = var_x84 * var_chaste_interface__Ca_release_current_from_JSR_v_gate__v;
        const double var_x86 = var_x85 * var_chaste_interface__Ca_release_current_from_JSR_u_gate__u * var_chaste_interface__Ca_release_current_from_JSR_w_gate__w;
        const double var_x87 = var_x78 * var_x85;
        const double var_x88 = 1 / (1.0 - exp(1.0000000000287557e-7));
        const double var_x89 = 1 / (1.0 - exp(-1.0000000000287557e-7));
        const double var_x90 = 47.130000000000003 + var_chaste_interface__membrane__V;
        const double var_x91 = fabs(var_x90) < 1.0000000000287557e-6;
        const double var_x92 = -0.10000000000000001 * var_chaste_interface__membrane__V;
        const double var_x93 = exp(-4.7130000000000001 + var_x92);
        const double var_x94 = 1.0 - var_x93;
        const double var_x95 = 0.32000000000000001 / var_x94;
        const double var_x96 = exp(-0.090909090909090912 * var_chaste_interface__membrane__V);
        const double var_x97 = 3.200000000092018e-7 * var_x89;
        const double var_x98 = exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__membrane__V);
        const double var_x99 = var_chaste_interface__membrane__V < -40.0;
        const double var_x100 = exp(0.079000000000000001 * var_chaste_interface__membrane__V);
        const double var_x101 = exp(0.34999999999999998 * var_chaste_interface__membrane__V);
        const double var_x102 = exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__membrane__V);
        const double var_x103 = 1.0 + var_x102;
        const double var_x104 = exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V);
        const double var_x105 = 1.0 + var_x104;
        const double var_x106 = 1 / var_x105;
        const double var_x107 = exp(0.24440000000000001 * var_chaste_interface__membrane__V);
        const double var_x108 = exp(-0.043909999999999998 * var_chaste_interface__membrane__V);
        const double var_x109 = -127140.0 * var_x107 - 3.4740000000000003e-5 * var_x108;
        const double var_x110 = var_x106 * var_x109;
        const double var_x111 = 37.780000000000001 + var_chaste_interface__membrane__V;
        const double var_x112 = exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__membrane__V);
        const double var_x113 = 1.0 + var_x112;
        const double var_x114 = exp(-0.01052 * var_chaste_interface__membrane__V);
        const double var_x115 = var_x114 / var_x113;
        const double var_x116 = exp(-3.2000000000000002 + var_x92);
        const double var_x117 = 1.0 + var_x116;
        const double var_x118 = exp(-2.5349999999999999e-7 * var_chaste_interface__membrane__V);
        const double var_x119 = var_x118 / var_x117;
        const double var_x120 = exp(-0.047619047619047616 - 0.095238095238095233 * var_chaste_interface__membrane__V);
        const double var_x121 = 1.0 + var_x120;
        const double var_x122 = exp(0.2711864406779661 - 0.016949152542372881 * var_chaste_interface__membrane__V);
        const double var_x123 = exp(-2.1176470588235294 - 0.11764705882352941 * var_chaste_interface__membrane__V);
        const double var_x124 = var_x122 + var_x123;
        const double var_x125 = exp(4.166666666666667 + 0.055555555555555552 * var_chaste_interface__membrane__V);
        const double var_x126 = 1.2 / (2.2000000000000002 + var_x125);
        const double var_x127 = 0.65000000000000002 / var_x124;
        const double var_x128 = exp(6.7251162790697681 + 0.15503875968992248 * var_chaste_interface__membrane__V);
        const double var_x129 = 1.0 + var_x128;
        const double var_x130 = exp(0.69075369075369086 - 0.07770007770007771 * var_chaste_interface__membrane__V);
        const double var_x131 = exp(10.68020304568528 + 0.10152284263959391 * var_chaste_interface__membrane__V);
        const double var_x132 = 1 / (6.2000000000000002 + var_x131);
        const double var_x133 = 1 / (7.54 + var_x130);
        const double var_x134 = exp(-0.29610115911485774 - 0.10537407797681771 * var_chaste_interface__membrane__V);
        const double var_x135 = 1.0 + var_x134;
        const double var_x136 = exp(0.90048939641109305 - 0.032626427406199025 * var_chaste_interface__membrane__V);
        const double var_x137 = exp(-1.0839046686255307 - 0.032647730982696702 * var_chaste_interface__membrane__V);
        const double var_x138 = var_x136 + var_x137;
        const double var_x139 = exp(10.698795180722891 + 0.40160642570281119 * var_chaste_interface__membrane__V);
        const double var_x140 = exp(2.1812377210216107 + 0.049115913555992145 * var_chaste_interface__membrane__V);
        const double var_x141 = var_x139 + var_x140;
        const double var_x142 = 1.47 / var_x138;
        const double var_x143 = 0.41999999999999998 / var_x141;
        const double var_x144 = exp(-3.6189956331877728 + 0.036390101892285295 * var_chaste_interface__membrane__V);
        const double var_x145 = 1.0 + var_x144;
        const double var_x146 = exp(-9.875 + var_x14);
        const double var_x147 = -0.035714285714285712 * var_chaste_interface__membrane__V;
        const double var_x148 = exp(6.6071428571428568 + var_x147);
        const double var_x149 = 1 / (21.0 + var_x148);
        const double var_x150 = exp(-1.4234703366189325 - 0.1859773107680863 * var_chaste_interface__membrane__V);
        const double var_x151 = 1.0 + var_x150;
        const double var_x152 = 1 / (1.0 - exp(1.0000000000287557e-7));
        const double var_x153 = 1 / (1.0 - exp(-1.0000000000287557e-7));
        const double var_x154 = -248.0 + var_chaste_interface__membrane__V;
        const double var_x155 = fabs(var_x154) < 2.8000000000805159e-6;
        const double var_x156 = exp(8.8571428571428577 + var_x147);
        const double var_x157 = 1.0 - var_x156;
        const double var_x158 = 0.040000000000000001 / var_x157;
        const double var_x159 = 1 / (-1.0 + exp(-9.9999999994945406e-8));
        const double var_x160 = 1 / (-1.0 + exp(1.0000000000551896e-7));
        const double var_x161 = 163.0 + var_chaste_interface__membrane__V;
        const double var_x162 = fabs(var_x161) < 2.1000000000048757e-6;
        const double var_x163 = exp(7.7619047619047619 + 0.047619047619047616 * var_chaste_interface__membrane__V);
        const double var_x164 = -1.0 + var_x163;
        const double var_x165 = 0.028000000000000001 / var_x164;
        const double var_x166 = 1.1200000000322064e-7 * var_x153;
        const double var_x167 = ((var_x155) ? (var_x166 - 178571.42856629365 * (-248.0000028 + var_chaste_interface__membrane__V) * (-var_x166 - 1.1200000000322064e-7 * var_x152)) : (var_x154 * var_x158));
        const double var_x168 = 5.8799999997027897e-8 * var_x159;
        const double var_x169 = ((var_x162) ? (-var_x168 + 238095.23809468528 * (163.00000209999999 + var_chaste_interface__membrane__V) * (var_x168 + 5.8800000003245146e-8 * var_x160)) : (var_x161 * var_x165));
        const double var_x170 = exp(1.0833333333333333 - 0.083333333333333329 * var_chaste_interface__membrane__V);
        const double var_x171 = 1.0 + var_x170;
        const double var_x172 = 1 / (1.0 - exp(1.0000000000022069e-7));
        const double var_x173 = 1 / (1.0 - exp(-9.9999999999979336e-8));
        const double var_x174 = 28.5 + var_chaste_interface__membrane__V;
        const double var_x175 = fabs(var_x174);
        const double var_x176 = var_x175 < 1.1500000000011501e-5;
        const double var_x177 = exp(-0.24782608695652175 - 0.0086956521739130436 * var_chaste_interface__membrane__V);
        const double var_x178 = 1.0 - var_x177;
        const double var_x179 = 1.0000000000000001e-5 / var_x178;
        const double var_x180 = 1 / (-1.0 + exp(1.0000000000623989e-7));
        const double var_x181 = 1 / (-1.0 + exp(-1.0000000000623989e-7));
        const double var_x182 = var_x175 < 3.300000000205916e-7;
        const double var_x183 = exp(8.6363636363636367 + 0.30303030303030304 * var_chaste_interface__membrane__V);
        const double var_x184 = -1.0 + var_x183;
        const double var_x185 = 0.00023000000000000001 / var_x184;
        const double var_x186 = 1.1499999999997625e-10 * var_x173;
        const double var_x187 = ((var_x176) ? (var_x186 - 43478.260869521735 * (28.499988500000001 + var_chaste_interface__membrane__V) * (-var_x186 - 1.1500000000025379e-10 * var_x172)) : (var_x174 * var_x179));
        const double var_x188 = 7.5900000004736066e-11 * var_x181;
        const double var_x189 = ((var_x182) ? (-var_x188 + 1515151.5150569715 * (28.500000329999999 + var_chaste_interface__membrane__V) * (var_x188 + 7.5900000004736066e-11 * var_x180)) : (var_x174 * var_x185));
        const double var_x190 = exp(-1.6666666666666667 - 0.16666666666666666 * var_chaste_interface__membrane__V);
        const double var_x191 = 1.0 + var_x190;
        const double var_x192 = exp(-9.999999999851651e-8);
        const double var_x193 = (1.0 - var_x192) / (1.0 + var_x192);
        const double var_x194 = exp(9.999999999851651e-8);
        const double var_x195 = (1.0 - var_x194) / (1.0 + var_x194);
        const double var_x196 = 45787545.788225032 * var_x193;
        const double var_x197 = (9.9999993759999999 + var_chaste_interface__membrane__V) * (-var_x196 - 45787545.788225032 * var_x195);
        const double var_x198 = 10.0 + var_chaste_interface__membrane__V;
        const double var_x199 = fabs(var_x198) < 6.2399999999074307e-7;
        const double var_x200 = exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V);
        const double var_x201 = 1.0 - var_x200;
        const double var_x202 = 1 / var_x201;
        const double var_x203 = 1.0 + var_x200;
        const double var_x204 = 0.035000000000000003 * var_x202 * var_x203;
        const double var_x205 = 0.005608974358974359 * var_x198 * var_x200;
        const double var_x206 = ((var_x199) ? (1 / (var_x196 - 801282.05129393819 * var_x197)) : (var_x198 * var_x204));
        const double var_x207 = exp(3.967741935483871 + 0.16129032258064516 * var_chaste_interface__membrane__V);
        const double var_x208 = 1.0 + var_x207;
        const double var_x209 = 0.01125 * exp(-0.0567 * pow((-1 + 0.1111111111111111 * var_chaste_interface__membrane__V), 2));
        const double var_x210 = exp(-2.0 + 16666.666666666668 * var_chaste_interface__intracellular_ion_concentrations__Ca_i);
        const double var_x211 = 0.45489931486393542 * var_x21;
        const double var_x212 = var_x211 - 1213.0648396371612 * var_x37 - 2.9517355105138439 * var_x50;
        const double var_x213 = 1213.0648396371612 * var_x36;
        const double var_x214 = var_x211 * (-65.0 + var_chaste_interface__membrane__V) - var_x213 * var_x49 - 2117337.2348207757 * var_x79 * var_x85;
        const double var_x215 = exp(250.0 + var_x214);
        const double var_x216 = 1.0 + var_x215;
        const double var_x217 = var_x215 / pow(var_x216, 2);
        const double var_x218 = 0.125 * var_x217;
        const double var_x219 = var_x79 * var_chaste_interface__Ca_release_current_from_JSR_v_gate__v;
        const double var_x220 = 2117337.2348207757 * var_x219;
        const double var_x221 = var_x220 + var_x213 * var_x32;
        const double var_x222 = -29.568455466155804 + 0.45489931486393542 * var_chaste_interface__membrane__V;
        const double var_x223 = var_x218 * var_x222;
        const double var_x224 = var_x79 * var_x84;
        const double var_x225 = 264667.15435259696 * var_x217;
        const double var_x226 = 1 / var_x216;
        const double var_x227 = 1 / (1.9099999999999999 + 2.0899999999999999 * var_x226);
        const double var_x228 = exp(50.0 + var_x214);
        const double var_x229 = 1.0 + var_x228;
        const double var_x230 = var_x228 / pow(var_x229, 2);
        const double var_x231 = var_x227 * var_x230;
        const double var_x232 = var_x217 * (1.0 - 1 / var_x229 - var_chaste_interface__Ca_release_current_from_JSR_v_gate__v) / pow((0.9138755980861244 + var_x226), 2);
        const double var_x233 = 0.47846889952153115 * var_x232;
        const double var_x234 = var_x222 * var_x231;
        const double var_x235 = var_x222 * var_x233;
        const double var_x236 = 1013080.0166606583 * var_x232;
        const double var_x237 = exp(2.3529411764705883 - 0.058823529411764705 * var_chaste_interface__membrane__V);
        const double var_x238 = 1.0 + var_x237;
        const double var_x239 = 1.0 - 1 / var_x238 - var_chaste_interface__Ca_release_current_from_JSR_w_gate__w;
        const double var_x240 = exp(1.5800000000000001 - 0.20000000000000001 * var_chaste_interface__membrane__V);
        const double var_x241 = 1 / (6.0 - 6.0 * var_x240);
        const double var_x242 = 1.0 + 0.29999999999999999 * var_x240;
        const double var_x243 = var_x241 * var_x242;
        const double var_x244 = -7.9000000000000004 + var_chaste_interface__membrane__V;
        const double var_x245 = var_x239 * var_x240 * var_x244;
        const double var_x246 = var_x243 * var_x244;
        const double var_x247 = 7.5827646500219453e-7 * var_x56;
        const double var_x248 = -5.3079352550153625e-8 - 4.3980034970127282e-7 * var_x9;
        const double var_x249 = var_x11 * var_x248;
        const double var_x250 = 30.0 * var_x219;
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = mSetVoltageDerivativeToZero ? 0.0 : (var_x0 * (-0.001804 + var_x12 - var_x19 - var_x24 - var_x4 + 0.070000000000000007 * var_x27 + 0.025892857142857141 * var_x38 - 1600.0 * var_x37 - 0.23999999999999999 * var_x21 - 0.0048687499999999998 * var_x40 - 0.056099999999999997 * var_x1 - 0.59999999999999998 * var_x48 - 0.19824 * var_x6 - 3.8932599993869874 * var_x50));
        IJth(rJacobian, 1, 0) = -4.2842620272623992e-10 + 0.0012132423440035112 * var_x37 + 2.9521674296696111e-6 * var_x50 - 9.0993175800263347e-8 * var_x21;
        IJth(rJacobian, 2, 0) = (1.0 - var_chaste_interface__fast_sodium_current_m_gate__m) * ((var_x91) ? (0.16 * var_x88 + 0.16 * var_x89) : (var_x95 - 0.032000000000000001 * var_x90 * var_x93 / pow(var_x94, 2))) + 0.0072727272727272727 * var_x96 * var_chaste_interface__fast_sodium_current_m_gate__m;
        IJth(rJacobian, 3, 0) = (1.0 - var_chaste_interface__fast_sodium_current_h_gate__h) * ((var_x99) ? (-0.019852941176470591 * var_x98) : (0)) - ((var_x99) ? (0.28123999999999999 * var_x100 + 108500.0 * var_x101) : (0.693000693000693 * var_x102 / pow(var_x103, 2))) * var_chaste_interface__fast_sodium_current_h_gate__h;
        IJth(rJacobian, 4, 0) = (1.0 - var_chaste_interface__fast_sodium_current_j_gate__j) * ((var_x99) ? (var_x110 + var_x106 * var_x111 * (1.5254334000000001e-6 * var_x108 - 31073.016 * var_x107) - 0.311 * var_x104 * var_x109 * var_x111 / pow(var_x105, 2)) : (0)) - ((var_x99) ? (-0.001275024 * var_x115 + 0.016701360000000002 * var_x112 * var_x114 / pow(var_x113, 2)) : (-7.6049999999999996e-8 * var_x119 + 0.029999999999999999 * var_x116 * var_x118 / pow(var_x117, 2))) * var_chaste_interface__fast_sodium_current_j_gate__j;
        IJth(rJacobian, 5, 0) = (pow(var_x121, (-0.33333333333333331)) - var_chaste_interface__transient_outward_K_current_oa_gate__oa) * (0.65000000000000002 * (0.016949152542372881 * var_x122 + 0.11764705882352941 * var_x123) / pow(var_x124, 2) - 0.013774104683195589 * var_x125 / pow((1 + 0.45454545454545453 * var_x125), 2)) + 0.031746031746031744 * var_x120 * pow(var_x121, (-1.3333333333333333)) * (var_x126 + var_x127);
        IJth(rJacobian, 6, 0) = (1 / var_x129 - var_chaste_interface__transient_outward_K_current_oi_gate__oi) * (0.0013667175189454248 * var_x130 / pow((1 + 0.13262599469496023 * var_x130), 2) - 0.0026410729094587383 * var_x131 / pow((1 + 0.16129032258064516 * var_x131), 2)) - 0.15503875968992248 * var_x128 * (var_x132 + var_x133) / pow(var_x129, 2);
        IJth(rJacobian, 7, 0) = (pow(var_x135, (-0.33333333333333331)) - var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua) * (1.47 * (0.032626427406199025 * var_x136 + 0.032647730982696702 * var_x137) / pow(var_x138, 2) + 0.41999999999999998 * (-0.049115913555992145 * var_x140 - 0.40160642570281119 * var_x139) / pow(var_x141, 2)) + 0.035124692658939236 * var_x134 * pow(var_x135, (-1.3333333333333333)) * (var_x142 + var_x143);
        IJth(rJacobian, 8, 0) = (1 / var_x145 - var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui) * (0.0625 * var_x146 + 8.0984774862325883e-5 * var_x148 / pow((1 + 0.047619047619047616 * var_x148), 2)) - 0.036390101892285295 * var_x144 * (var_x146 + var_x149) / pow(var_x145, 2);
        IJth(rJacobian, 9, 0) = (1 / var_x151 - var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr) * (((var_x155) ? (0.02 * var_x152 + 0.02 * var_x153) : (var_x158 - 0.0014285714285714286 * var_x154 * var_x156 / pow(var_x157, 2))) + ((var_x162) ? (0.013999999999259851 * var_x159 + 0.01400000000074015 * var_x160) : (var_x165 - 0.0013333333333333333 * var_x161 * var_x163 / pow(var_x164, 2)))) + 0.1859773107680863 * var_x150 * (var_x167 + var_x169) / pow(var_x151, 2);
        IJth(rJacobian, 10, 0) = (pow(var_x171, (-0.5)) - var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs) * (((var_x176) ? (5.0000000000060338e-6 * var_x172 + 4.999999999993967e-6 * var_x173) : (var_x179 - 8.6956521739130438e-8 * var_x174 * var_x177 / pow(var_x178, 2))) + ((var_x182) ? (0.000115 * var_x180 + 0.000115 * var_x181) : (var_x185 - 6.9696969696969699e-5 * var_x174 * var_x183 / pow(var_x184, 2)))) + 0.041666666666666664 * var_x170 * pow(var_x171, (-1.5)) * (var_x187 + var_x189);
        IJth(rJacobian, 11, 0) = (1 / var_x191 - var_chaste_interface__sarcolemmal_Ca_current_d_gate__d) * ((var_x199) ? (4.7698559998584812e-16 * (-36688738612904.07 * var_x193 - 36688738612904.07 * var_x195) / pow((var_x193 - 0.017500000000000002 * var_x197), 2)) : (var_x204 - var_x202 * var_x205 - var_x203 * var_x205 / pow(var_x201, 2))) + 0.16666666666666666 * var_x190 * var_x206 / pow(var_x191, 2);
        IJth(rJacobian, 12, 0) = var_x209 * (0.0126 - 0.0014 * var_chaste_interface__membrane__V) * (1 / var_x208 - var_chaste_interface__sarcolemmal_Ca_current_f_gate__f) - 0.16129032258064516 * var_x207 * (0.0025000000000000001 + var_x209) / pow(var_x208, 2);
        IJth(rJacobian, 14, 0) = -var_x212 * var_x218;
        IJth(rJacobian, 15, 0) = var_x212 * var_x231 + var_x212 * var_x233;
        IJth(rJacobian, 16, 0) = var_x239 * var_x243 - 0.059999999999999998 * var_x241 * var_x245 - 0.033333333333333333 * var_x242 * var_x245 / pow((1 - var_x240), 2) - 0.058823529411764705 * var_x237 * var_x246 / pow(var_x238, 2);
        IJth(rJacobian, 20, 0) = -5.1107833741147911e-10 - 8.8565022890088337e-6 * var_x50 - 7.5827646500219453e-7 * var_x24 - 1.3648976370039502e-6 * var_x48 - 0.0036397270320105341 * var_x37;
        IJth(rJacobian, 22, 0) = var_x249 + 9.099317580026335e-7 * var_x48 + 1.9633944183092539e-8 * var_x38 + 5.3079352550153625e-8 * var_x27 - 1.5032072642203504e-7 * var_x6 - 7.5827646500219453e-7 * var_x19 - 7.5827646500219453e-7 * var_x4 - 4.2539309686623115e-8 * var_x1 - 3.6918585389794347e-9 * var_x40;
        IJth(rJacobian, 0, 1) = mSetVoltageDerivativeToZero ? 0.0 : (var_x0 * (1600.0 * var_x55 + 0.27500000000000002 * var_x54 - 0.27500000000000002 * var_x52 - 0.015092750037051737 * var_x53));
        IJth(rJacobian, 1, 1) = -36.439999999999998 - var_x81 + 200.0 * var_chaste_interface__Ca_buffers__Ca_CMDN + 78.400000000000006 * var_chaste_interface__Ca_buffers__Ca_TRPN + 1.0426301393780176e-7 * var_x54 - 3.7341176470588237e-7 * var_x77 - 1.0426301393780176e-7 * var_x52 - 0.0012132423440035112 * var_x55 - 5.7222385726286662e-9 * var_x53;
        IJth(rJacobian, 13, 1) = -6666.666666666667 * var_x210 / pow((1.0 + var_x210), 2);
        IJth(rJacobian, 14, 1) = -var_x218 * var_x221;
        IJth(rJacobian, 15, 1) = var_x221 * var_x231 + var_x221 * var_x233;
        IJth(rJacobian, 17, 1) = 200.0 - 4444.4444444444443 * var_chaste_interface__Ca_buffers__Ca_CMDN;
        IJth(rJacobian, 18, 1) = 78.400000000000006 - 224.00000000000003 * var_chaste_interface__Ca_buffers__Ca_TRPN;
        IJth(rJacobian, 20, 1) = 0.0036397270320105341 * var_x55;
        IJth(rJacobian, 23, 1) = var_x250;
        IJth(rJacobian, 24, 1) = 4.6e-6 * var_x77;
        IJth(rJacobian, 0, 2) = mSetVoltageDerivativeToZero ? 0.0 : (-3 * var_x57 * var_x59);
        IJth(rJacobian, 2, 2) = -((var_x91) ? (var_x97 - 499999.99998562218 * (47.129999000000005 + var_chaste_interface__membrane__V) * (-var_x97 - 3.200000000092018e-7 * var_x88)) : (var_x90 * var_x95)) - 0.080000000000000002 * var_x96;
        IJth(rJacobian, 20, 2) = -2.2748293950065838e-6 * var_x56 * var_x59;
        IJth(rJacobian, 0, 3) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x23 * var_x57);
        IJth(rJacobian, 3, 3) = -((var_x99) ? (0.13500000000000001 * var_x98) : (0)) - ((var_x99) ? (310000.0 * var_x101 + 3.5600000000000001 * var_x100) : (7.6923076923076916 / var_x103));
        IJth(rJacobian, 20, 3) = -var_x23 * var_x247;
        IJth(rJacobian, 0, 4) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x57 * var_x60);
        IJth(rJacobian, 4, 4) = -((var_x99) ? (0.1212 * var_x115) : (0.29999999999999999 * var_x119)) - ((var_x99) ? (var_x110 * var_x111) : (0));
        IJth(rJacobian, 20, 4) = -var_x247 * var_x60;
        IJth(rJacobian, 0, 5) = mSetVoltageDerivativeToZero ? 0.0 : (-0.59472000000000003 * var_x0 * var_x61);
        IJth(rJacobian, 5, 5) = -var_x126 - var_x127;
        IJth(rJacobian, 22, 5) = -4.5096217926610517e-7 * var_x61;
        IJth(rJacobian, 0, 6) = mSetVoltageDerivativeToZero ? 0.0 : (-0.19824 * var_x0 * var_x62);
        IJth(rJacobian, 6, 6) = -var_x132 - var_x133;
        IJth(rJacobian, 22, 6) = -1.5032072642203504e-7 * var_x62;
        IJth(rJacobian, 0, 7) = mSetVoltageDerivativeToZero ? 0.0 : (-3 * var_x0 * var_x63);
        IJth(rJacobian, 7, 7) = -var_x142 - var_x143;
        IJth(rJacobian, 22, 7) = -2.2748293950065838e-6 * var_x63;
        IJth(rJacobian, 0, 8) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x0 * var_x64);
        IJth(rJacobian, 8, 8) = -var_x146 - var_x149;
        IJth(rJacobian, 22, 8) = -7.5827646500219453e-7 * var_x64;
        IJth(rJacobian, 0, 9) = mSetVoltageDerivativeToZero ? 0.0 : (var_x0 * var_x10 * var_x65);
        IJth(rJacobian, 9, 9) = -var_x167 - var_x169;
        IJth(rJacobian, 22, 9) = var_x248 * var_x65;
        IJth(rJacobian, 0, 10) = mSetVoltageDerivativeToZero ? 0.0 : (-0.11219999999999999 * var_x0 * var_x66);
        IJth(rJacobian, 10, 10) = -var_x187 - var_x189;
        IJth(rJacobian, 22, 10) = -8.5078619373246231e-8 * var_x66;
        IJth(rJacobian, 0, 11) = mSetVoltageDerivativeToZero ? 0.0 : (var_x67 * var_x68);
        IJth(rJacobian, 1, 11) = var_x83 * var_chaste_interface__sarcolemmal_Ca_current_f_gate__f;
        IJth(rJacobian, 11, 11) = -var_x206;
        IJth(rJacobian, 14, 11) = -var_x223 * var_x68;
        IJth(rJacobian, 15, 11) = var_x234 * var_x68 + var_x235 * var_x68;
        IJth(rJacobian, 0, 12) = mSetVoltageDerivativeToZero ? 0.0 : (var_x67 * var_x69);
        IJth(rJacobian, 1, 12) = var_x83 * var_chaste_interface__sarcolemmal_Ca_current_d_gate__d;
        IJth(rJacobian, 12, 12) = -0.0025000000000000001 - var_x209;
        IJth(rJacobian, 14, 12) = -var_x223 * var_x69;
        IJth(rJacobian, 15, 12) = var_x234 * var_x69 + var_x235 * var_x69;
        IJth(rJacobian, 0, 13) = mSetVoltageDerivativeToZero ? 0.0 : (var_x20 * var_x67);
        IJth(rJacobian, 1, 13) = var_x20 * var_x82;
        IJth(rJacobian, 13, 13) = -0.5;
        IJth(rJacobian, 14, 13) = -var_x20 * var_x223;
        IJth(rJacobian, 15, 13) = var_x20 * var_x234 + var_x20 * var_x235;
        IJth(rJacobian, 1, 14) = 0.42352941176470588 * var_x86;
        IJth(rJacobian, 14, 14) = -0.125 + 529334.30870519392 * var_x217 * var_x86;
        IJth(rJacobian, 15, 14) = -4234674.4696415514 * var_x231 * var_x86 - 2026160.0333213166 * var_x232 * var_x86;
        IJth(rJacobian, 23, 14) = -60.0 * var_x86;
        IJth(rJacobian, 1, 15) = var_x80 * var_x84;
        IJth(rJacobian, 14, 15) = var_x224 * var_x225;
        IJth(rJacobian, 15, 15) = var_x227 * (-1 - 2117337.2348207757 * var_x224 * var_x230) - var_x224 * var_x236;
        IJth(rJacobian, 23, 15) = -30.0 * var_x224;
        IJth(rJacobian, 1, 16) = 0.21176470588235294 * var_x87;
        IJth(rJacobian, 14, 16) = var_x225 * var_x87;
        IJth(rJacobian, 15, 16) = -var_x236 * var_x87 - 2117337.2348207757 * var_x231 * var_x87;
        IJth(rJacobian, 16, 16) = -var_x246;
        IJth(rJacobian, 23, 16) = -30.0 * var_x87;
        IJth(rJacobian, 1, 17) = 0.47599999999999998 + 200.0 * var_chaste_interface__intracellular_ion_concentrations__Ca_i;
        IJth(rJacobian, 17, 17) = -10.577777777777778 - 4444.4444444444443 * var_chaste_interface__intracellular_ion_concentrations__Ca_i;
        IJth(rJacobian, 1, 18) = 0.39200000000000002 + 78.400000000000006 * var_chaste_interface__intracellular_ion_concentrations__Ca_i;
        IJth(rJacobian, 18, 18) = -1.1200000000000001 - 224.00000000000003 * var_chaste_interface__intracellular_ion_concentrations__Ca_i;
        IJth(rJacobian, 19, 19) = -0.040000000000000001 - 0.048000000000000001 * var_chaste_interface__intracellular_ion_concentrations__Ca_rel;
        IJth(rJacobian, 23, 19) = 1.24 + 1.488 * var_chaste_interface__intracellular_ion_concentrations__Ca_rel;
        IJth(rJacobian, 0, 20) = mSetVoltageDerivativeToZero ? 0.0 : (var_x0 * (-4800.0 * var_x71 - 0.018004448716766146 * var_x41 - 26.712831923985377 * var_x70 - 0.028460498941515412 * var_x72));
        IJth(rJacobian, 1, 20) = 0.0036397270320105341 * var_x71;
        IJth(rJacobian, 14, 20) = 454.89931486393544 * var_x217 * var_x71;
        IJth(rJacobian, 15, 20) = -3639.1945189114836 * var_x231 * var_x71 - 1741.2413966083654 * var_x232 * var_x71;
        IJth(rJacobian, 20, 20) = -6.4742779588713023e-8 * var_x72 - 2.0255711761517402e-5 * var_x70 - 0.010919181096031601 * var_x71 - 1.3652349727262729e-8 * var_x41;
        IJth(rJacobian, 22, 20) = 4.3161853059142013e-8 * var_x72;
        IJth(rJacobian, 0, 22) = mSetVoltageDerivativeToZero ? 0.0 : (var_x0 * (-5.2955518006108608 * var_x74 - 26.712831923985377 * var_x75 - 1.4985898709355796 * var_x73 + var_x12 * var_x76 - var_x19 * var_x76));
        IJth(rJacobian, 22, 22) = -1.1363454298211262e-6 * var_x73 - 2.0255711761517402e-5 * var_x75 - 4.0154922996032103e-6 * var_x74 + var_x249 * var_x76 - 2.0255711761517402e-5 * var_x19 * var_x25;
        IJth(rJacobian, 1, 23) = var_x81;
        IJth(rJacobian, 14, 23) = var_x219 * var_x225;
        IJth(rJacobian, 15, 23) = -var_x219 * var_x236 - var_x220 * var_x231;
        IJth(rJacobian, 19, 23) = 0.47999999999999998 - 0.048000000000000001 * var_chaste_interface__Ca_buffers__Ca_CSQN;
        IJth(rJacobian, 23, 23) = -14.885555555555555 - var_x250 + 1.488 * var_chaste_interface__Ca_buffers__Ca_CSQN;
        IJth(rJacobian, 24, 23) = 0.00048309178743961357;
        IJth(rJacobian, 1, 24) = 2.7058823529411766e-5;
        IJth(rJacobian, 23, 24) = 0.0055555555555555558;
        IJth(rJacobian, 24, 24) = -0.00081642512077294694;
    }

    N_Vector Cellramirez_nattel_courtemanche_2000FromCellMLCvode::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -83.53
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.001972
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.9791
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.9869
        double var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 7.433e-07
        double var_chaste_interface__intracellular_ion_concentrations__Na_i = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 11.75
        double var_chaste_interface__intracellular_ion_concentrations__K_i = NV_Ith_S(rY, 22);
        // Units: millimolar; Initial value: 138.4
        
        // Mathematics
        const double var_membrane__Cm_converted = 9.9999999999999995e-7 * NV_Ith_S(mParameters, 3); // uF
        const double var_membrane__F = 96.486699999999999; // coulomb_per_millimole
        const double var_membrane__R = 8.3142999999999994; // joule_per_mole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_membrane__i_stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 2) / var_chaste_interface__intracellular_ion_concentrations__Na_i) / var_membrane__F; // millivolt
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 4) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // picoA_per_picoF
        const double var_fast_sodium_current__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na; // uA_per_cm2
        const double var_time_independent_potassium_current__E_K = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 1) / var_chaste_interface__intracellular_ion_concentrations__K_i) / var_membrane__F; // millivolt
        const double var_rapid_delayed_rectifier_K_current__i_Kr = (0.070000000000000007 + 0.57999999999999996 / (1.0 + exp(0.66964285714285721 + 0.044642857142857144 * var_chaste_interface__membrane__V))) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 6) * var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr; // picoA_per_picoF
        const double var_rapid_delayed_rectifier_K_current__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_rapid_delayed_rectifier_K_current__i_Kr; // uA_per_cm2
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 5) / (1.0 + exp(5.6000000000000005 + 0.070000000000000007 * var_chaste_interface__membrane__V)); // picoA_per_picoF
        const double var_time_independent_potassium_current__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_time_independent_potassium_current__i_K1; // uA_per_cm2

        N_Vector dqs = N_VNew_Serial(6);
        NV_Ith_S(dqs, 0) = var_membrane__Cm_converted;
        NV_Ith_S(dqs, 1) = var_fast_sodium_current__i_Na_converted;
        NV_Ith_S(dqs, 2) = var_time_independent_potassium_current__i_K1_converted;
        NV_Ith_S(dqs, 3) = var_rapid_delayed_rectifier_K_current__i_Kr_converted;
        NV_Ith_S(dqs, 4) = var_membrane__i_stim_converted;
        NV_Ith_S(dqs, 5) = var_chaste_interface__environment__time;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellramirez_nattel_courtemanche_2000FromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "ramirez_2000";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // NV_Ith_S(rY, 0):
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-83.53);

    // NV_Ith_S(rY, 1):
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0001024);

    // NV_Ith_S(rY, 2):
    this->mVariableNames.push_back("fast_sodium_current_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.001972);

    // NV_Ith_S(rY, 3):
    this->mVariableNames.push_back("fast_sodium_current_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9791);

    // NV_Ith_S(rY, 4):
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9869);

    // NV_Ith_S(rY, 5):
    this->mVariableNames.push_back("transient_outward_K_current_oa_gate__oa");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.07164);

    // NV_Ith_S(rY, 6):
    this->mVariableNames.push_back("transient_outward_K_current_oi_gate__oi");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.998);

    // NV_Ith_S(rY, 7):
    this->mVariableNames.push_back("ultrarapid_delayed_rectifier_K_current_ua_gate__ua");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.05869);

    // NV_Ith_S(rY, 8):
    this->mVariableNames.push_back("ultrarapid_delayed_rectifier_K_current_ui_gate__ui");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9987);

    // NV_Ith_S(rY, 9):
    this->mVariableNames.push_back("rapid_delayed_rectifier_K_current_xr_gate__xr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(7.433e-07);

    // NV_Ith_S(rY, 10):
    this->mVariableNames.push_back("slow_delayed_rectifier_K_current_xs_gate__xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.01791);

    // NV_Ith_S(rY, 11):
    this->mVariableNames.push_back("sarcolemmal_Ca_current_d_gate__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(4.757e-06);

    // NV_Ith_S(rY, 12):
    this->mVariableNames.push_back("sarcolemmal_Ca_current_f_gate__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9999);

    // NV_Ith_S(rY, 13):
    this->mVariableNames.push_back("sarcolemmal_Ca_current_f_Ca_gate__f_Ca");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7484);

    // NV_Ith_S(rY, 14):
    this->mVariableNames.push_back("Ca_release_current_from_JSR_u_gate__u");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 15):
    this->mVariableNames.push_back("Ca_release_current_from_JSR_v_gate__v");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // NV_Ith_S(rY, 16):
    this->mVariableNames.push_back("Ca_release_current_from_JSR_w_gate__w");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9993);

    // NV_Ith_S(rY, 17):
    this->mVariableNames.push_back("Ca_buffers__Ca_CMDN");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.001856);

    // NV_Ith_S(rY, 18):
    this->mVariableNames.push_back("Ca_buffers__Ca_TRPN");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.007022);

    // NV_Ith_S(rY, 19):
    this->mVariableNames.push_back("Ca_buffers__Ca_CSQN");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(6.432);

    // NV_Ith_S(rY, 20):
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(11.75);

    // NV_Ith_S(rY, 21):
    this->mVariableNames.push_back("cytosolic_chloride_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(29.26);

    // NV_Ith_S(rY, 22):
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(138.4);

    // NV_Ith_S(rY, 23):
    this->mVariableNames.push_back("intracellular_ion_concentrations__Ca_rel");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.502);

    // NV_Ith_S(rY, 24):
    this->mVariableNames.push_back("intracellular_ion_concentrations__Ca_up");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.502);

    // mParameters[0]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[1]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[2]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[3]:
    this->mParameterNames.push_back("membrane__Cm");
    this->mParameterUnits.push_back("picoF");

    // mParameters[4]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("nanoS_per_picoF");

    // mParameters[5]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("nanoS_per_picoF");

    // mParameters[6]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("nanoS_per_picoF");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("membrane_capacitance");
    this->mDerivedQuantityUnits.push_back("uF");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellramirez_nattel_courtemanche_2000FromCellMLCvode)

#endif // CHASTE_CVODE
