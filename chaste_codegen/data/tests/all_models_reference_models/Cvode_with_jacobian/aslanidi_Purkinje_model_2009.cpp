#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: aslanidi_2009
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: AnalyticCvode)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "aslanidi_Purkinje_model_2009.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"


    boost::shared_ptr<RegularStimulus> Cellaslanidi_Purkinje_model_2009FromCellMLCvode::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__stim_amplitude_converted = -80.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        const double var_chaste_interface__membrane__stim_duration = 1.0; // millisecond
        const double var_chaste_interface__membrane__stim_period = 800.0; // millisecond
        const double var_chaste_interface__membrane__stim_start = 100.0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__stim_amplitude_converted),
                var_chaste_interface__membrane__stim_duration,
                var_chaste_interface__membrane__stim_period,
                var_chaste_interface__membrane__stim_start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLCvode::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Cellaslanidi_Purkinje_model_2009FromCellMLCvode::Cellaslanidi_Purkinje_model_2009FromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                30,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellaslanidi_Purkinje_model_2009FromCellMLCvode>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
        
        NV_Ith_S(this->mParameters, 0) = 0.0043750000000000004; // (var_q_leak__q_leak_max) [millimolar_per_millisecond]
        NV_Ith_S(this->mParameters, 1) = 3000.0; // (var_q_rel__g_rel_max) [per_millisecond]
        NV_Ith_S(this->mParameters, 2) = 0.0043750000000000004; // (var_q_up__q_up_max) [millimolar_per_millisecond]
        NV_Ith_S(this->mParameters, 3) = 1.0; // (var_intracellular_ion_concentrations__conc_clamp) [dimensionless]
        NV_Ith_S(this->mParameters, 4) = 1.8; // (var_model_parameters__Ca_o) [millimolar]
        NV_Ith_S(this->mParameters, 5) = 5.4000000000000004; // (var_model_parameters__K_o) [millimolar]
        NV_Ith_S(this->mParameters, 6) = 140.0; // (var_model_parameters__Na_o) [millimolar]
        NV_Ith_S(this->mParameters, 7) = 0.3392328; // (var_i_Ca_L__g_Ca_L) [dimensionless]
        NV_Ith_S(this->mParameters, 8) = 8.0; // (var_i_Na__g_Na) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 9) = 0; // (var_i_Na__perc_reduced_inact_for_IpNa) [dimensionless]
        NV_Ith_S(this->mParameters, 10) = 0; // (var_i_Na__shift_INa_inact) [millivolt]
        NV_Ith_S(this->mParameters, 11) = 0.25; // (var_i_K1__g_K1_max) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 12) = 0.040008488000000002; // (var_i_Kr__g_Kr_max) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 13) = 0.052581329000000003; // (var_i_Ks__g_Ks_max) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 14) = 4.5; // (var_i_NaCa__i_NaCa_max) [microA_per_microF]
        NV_Ith_S(this->mParameters, 15) = 0.14135944; // (var_i_to_1__g_to_1) [milliS_per_microF]
    }

    Cellaslanidi_Purkinje_model_2009FromCellMLCvode::~Cellaslanidi_Purkinje_model_2009FromCellMLCvode()
    {
    }

    
    double Cellaslanidi_Purkinje_model_2009FromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__Ca_i__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.00022355433459434943
        double var_chaste_interface__i_Na_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.002003390432234504
        double var_chaste_interface__i_Na_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.9786390933308567
        double var_chaste_interface__i_Na_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.09866447258167589
        double var_chaste_interface__i_Na_L_m_L_gate__m_L = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.002003390432234504
        double var_chaste_interface__i_Na_L_h_L_gate__h_L = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.8946968372659203
        double var_chaste_interface__i_Ca_L_d_gate__d = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 2.322223865147363e-06
        double var_chaste_interface__i_Ca_L_f_gate__f = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.9985607329462358
        double var_chaste_interface__i_Ca_L_f2_gate__f2 = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.8173435436674658
        double var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.9610551285529658
        double var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.868690796671854
        double var_chaste_interface__i_Ca_T_b_gate__b = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.0002563937630984438
        double var_chaste_interface__i_Ca_T_g_gate__g = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.9720432601848331
        double var_chaste_interface__i_to_1_a_gate__a = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.0004238729429342389
        double var_chaste_interface__i_to_1_i_gate__i = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.9990935802459496
        double var_chaste_interface__i_to_1_i2_gate__i2 = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.9777368439681764
        double var_chaste_interface__i_Kr_xr_gate__xr = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 0.07084939408222911
        double var_chaste_interface__i_Ks_xs1_gate__xs1 = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 0.0011737654433043125
        double var_chaste_interface__i_Ks_xs2_gate__xs2 = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 0.001179442867470093
        double var_chaste_interface__i_to_2_a_gate__a = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 0.0014909437525000811
        double var_chaste_interface__intracellular_ion_concentrations__Na_i = NV_Ith_S(rY, 21);
        // Units: millimolar; Initial value: 9.927155552932733
        double var_chaste_interface__intracellular_ion_concentrations__Cl_i = NV_Ith_S(rY, 22);
        // Units: millimolar; Initial value: 18.904682470140408
        double var_chaste_interface__intracellular_ion_concentrations__K_i = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 141.9670801746057
        double var_chaste_interface__Ca_r__Ca_r = NV_Ith_S(rY, 27);
        // Units: millimolar; Initial value: 0.00022418117117903934
        
        const double var_background_currents__g_Cl_b = 0.00022499999999999999; // milliS_per_microF
        const double var_background_currents__g_K_b = 0.0050000000000000001; // milliS_per_microF
        const double var_background_currents__g_Na_b = 0.0025000000000000001; // milliS_per_microF
        const double var_equilibrium_potentials__r_NaK = 0.018329999999999999; // dimensionless
        const double var_i_Ca_T__g_Ca_T = 0.13; // milliS_per_microF
        const double var_i_Ca_p__i_Ca_p_max = 0.057500000000000002; // microA_per_microF
        const double var_i_Ca_p__km_Ca_p = 0.00050000000000000001; // millimolar
        const double var_i_Ca_p__i_Ca_p = var_chaste_interface__Ca_i__Ca_i * var_i_Ca_p__i_Ca_p_max / (var_chaste_interface__Ca_i__Ca_i + var_i_Ca_p__km_Ca_p); // microA_per_microF
        const double var_i_K_p__g_K_p = 0.0027599999999999999; // milliS_per_microF
        const double var_i_Ks__g_Ks = (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__Ca_i__Ca_i), 1.3999999999999999))) * NV_Ith_S(mParameters, 13); // milliS_per_microF
        const double var_i_NaCa__X_NaCa = 0.40000000000000002; // dimensionless
        const double var_i_NaCa__k_sat = 0.27000000000000002; // dimensionless
        const double var_i_NaCa__km_Ca_act = 0.000125; // millimolar
        const double var_i_NaCa__km_Ca_i = 0.0035999999999999999; // millimolar
        const double var_i_NaCa__km_Ca_o = 1.3; // millimolar
        const double var_i_NaCa__km_Na_i_1 = 12.300000000000001; // millimolar
        const double var_i_NaCa__km_Na_o = 87.5; // millimolar
        const double var_i_NaK__g_NaK = 0.61875000000000002; // microA_per_microF
        const double var_i_NaK__km_K_o = 1.5; // millimolar
        const double var_i_NaK__km_Na_i_2 = 10.0; // millimolar
        const double var_i_Na_L__g_Na_L = 0.037374999999999999; // milliS_per_microF
        const double var_i_Ca_T__i_Ca_T = (-50.0 + var_chaste_interface__membrane__V) * var_i_Ca_T__g_Ca_T * var_chaste_interface__i_Ca_T_b_gate__b * var_chaste_interface__i_Ca_T_g_gate__g; // microA_per_microF
        const double var_i_K_p__kp = 1 / (1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_i_Kr__rr_infinity = 1 / (1.0 + exp(-0.26470588235294124 + 0.049019607843137261 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_i_to_2__i_to_2_max = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (3.8593999999999993e-9 * (-100.0 * exp(9.9999999999999995e-8) + var_chaste_interface__intracellular_ion_concentrations__Cl_i) / (1.0 - exp(9.9999999999999995e-8)) + 3.8593999999999993e-9 * (-100.0 * exp(-9.9999999999999995e-8) + var_chaste_interface__intracellular_ion_concentrations__Cl_i) / (1.0 - exp(-9.9999999999999995e-8))) - 3.8593999999999993e-9 * (-100.0 * exp(-9.9999999999999995e-8) + var_chaste_interface__intracellular_ion_concentrations__Cl_i) / (1.0 - exp(-9.9999999999999995e-8))) : (0.0014448004881001341 * (-100.0 * exp(0.037435883507802616 * var_chaste_interface__membrane__V) + var_chaste_interface__intracellular_ion_concentrations__Cl_i) * var_chaste_interface__membrane__V / (1.0 - exp(0.037435883507802616 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_i_to_2__i_to_2 = 20.0 * var_i_to_2__i_to_2_max * var_chaste_interface__i_to_2_a_gate__a; // microA_per_microF
        const double var_background_currents__i_Ca_b = ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (3.8499135947999997e-9 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + var_chaste_interface__Ca_i__Ca_i * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) + 3.8499135947999997e-9 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + var_chaste_interface__Ca_i__Ca_i * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8))) - 3.8499135947999997e-9 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + var_chaste_interface__Ca_i__Ca_i * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8))) : (0.0028824983370007683 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + var_chaste_interface__Ca_i__Ca_i * exp(0.074871767015605231 * var_chaste_interface__membrane__V)) * var_chaste_interface__membrane__V / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_i_Ca_L__i_Ca_L_max = ((fabs(-15.0 + var_chaste_interface__membrane__V) < 1.3356169352718439e-6) ? (374358.83507888648 * (-14.999998664383064 + var_chaste_interface__membrane__V) * (4.6891709999892238e-6 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + var_chaste_interface__Ca_r__Ca_r * exp(9.9999999999770198e-8)) / (-1.0 + exp(9.9999999999770198e-8)) + 4.6891709999892238e-6 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + var_chaste_interface__Ca_r__Ca_r * exp(-9.9999999999770198e-8)) / (-1.0 + exp(-9.9999999999770198e-8))) - 4.6891709999892238e-6 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + var_chaste_interface__Ca_r__Ca_r * exp(-9.9999999999770198e-8)) / (-1.0 + exp(-9.9999999999770198e-8))) : (3.510865186083326 * (-15.0 + var_chaste_interface__membrane__V) * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + var_chaste_interface__Ca_r__Ca_r * exp(-1.1230765052340785 + 0.074871767015605231 * var_chaste_interface__membrane__V)) / (-1.0 + exp(-1.1230765052340785 + 0.074871767015605231 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_i_Ca_L__i_Ca_L = NV_Ith_S(mParameters, 7) * var_i_Ca_L__i_Ca_L_max * var_chaste_interface__i_Ca_L_d_gate__d * var_chaste_interface__i_Ca_L_f2_gate__f2 * var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 * var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca * var_chaste_interface__i_Ca_L_f_gate__f; // microA_per_microF
        const double var_i_NaCa__dNaCa_1 = pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * var_i_NaCa__km_Ca_o + 1.5 * pow(var_i_NaCa__km_Na_o, 3) * var_chaste_interface__Ca_i__Ca_i + pow(var_i_NaCa__km_Na_i_1, 3) * (1.0 + 1.5 * var_chaste_interface__Ca_i__Ca_i / var_i_NaCa__km_Ca_i) * NV_Ith_S(mParameters, 4); // millimolar4
        const double var_model_parameters__Cl_o = 100.0; // millimolar
        const double var_model_parameters__F = 96485.0; // coulomb_per_mole
        const double var_i_K1__g_K1 = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 5)) * NV_Ith_S(mParameters, 11); // milliS_per_microF
        const double var_i_Kr__g_Kr = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 5)) * NV_Ith_S(mParameters, 12); // milliS_per_microF
        const double var_i_NaCa__dNaCa_2 = pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * NV_Ith_S(mParameters, 4) + 1.5 * pow(NV_Ith_S(mParameters, 6), 3) * var_chaste_interface__Ca_i__Ca_i + pow(NV_Ith_S(mParameters, 6), 3) * (1.0 + var_chaste_interface__intracellular_ion_concentrations__Na_i / var_i_NaCa__km_Na_i_1) * var_i_NaCa__km_Ca_i; // millimolar4
        const double var_i_NaK__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * NV_Ith_S(mParameters, 6)); // dimensionless
        const double var_model_parameters__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_model_parameters__T = 310.0; // kelvin
        const double var_equilibrium_potentials__E_Cl = -var_model_parameters__R * var_model_parameters__T * log(var_model_parameters__Cl_o / var_chaste_interface__intracellular_ion_concentrations__Cl_i) / var_model_parameters__F; // millivolt
        const double var_background_currents__i_Cl_b = (-var_equilibrium_potentials__E_Cl + var_chaste_interface__membrane__V) * var_background_currents__g_Cl_b; // microA_per_microF
        const double var_equilibrium_potentials__E_K = var_model_parameters__R * var_model_parameters__T * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__intracellular_ion_concentrations__K_i) / var_model_parameters__F; // millivolt
        const double var_background_currents__i_K_b = (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * var_background_currents__g_K_b; // microA_per_microF
        const double var_equilibrium_potentials__E_Ks = var_model_parameters__R * var_model_parameters__T * log((var_equilibrium_potentials__r_NaK * NV_Ith_S(mParameters, 6) + NV_Ith_S(mParameters, 5)) / (var_equilibrium_potentials__r_NaK * var_chaste_interface__intracellular_ion_concentrations__Na_i + var_chaste_interface__intracellular_ion_concentrations__K_i)) / var_model_parameters__F; // millivolt
        const double var_equilibrium_potentials__E_Na = var_model_parameters__R * var_model_parameters__T * log(NV_Ith_S(mParameters, 6) / var_chaste_interface__intracellular_ion_concentrations__Na_i) / var_model_parameters__F; // millivolt
        const double var_background_currents__i_Na_b = (-var_equilibrium_potentials__E_Na + var_chaste_interface__membrane__V) * var_background_currents__g_Na_b; // microA_per_microF
        const double var_i_K1_xK1_gate__alpha_xK1 = 1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_equilibrium_potentials__E_K)); // dimensionless
        const double var_i_K1_xK1_gate__beta_xK1 = (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_equilibrium_potentials__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_equilibrium_potentials__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_equilibrium_potentials__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_i_K1_xK1_gate__xK1 = var_i_K1_xK1_gate__alpha_xK1 / (var_i_K1_xK1_gate__alpha_xK1 + var_i_K1_xK1_gate__beta_xK1); // dimensionless
        const double var_i_K1__i_K1 = (0.0040000000000000001 + var_i_K1__g_K1 * var_i_K1_xK1_gate__xK1) * (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V); // microA_per_microF
        const double var_i_K_p__i_K_p = (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * var_i_K_p__g_K_p * var_i_K_p__kp; // microA_per_microF
        const double var_i_Kr__i_Kr = (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * var_i_Kr__g_Kr * var_i_Kr__rr_infinity * var_chaste_interface__i_Kr_xr_gate__xr; // microA_per_microF
        const double var_i_Ks__i_Ks = (-var_equilibrium_potentials__E_Ks + var_chaste_interface__membrane__V) * var_i_Ks__g_Ks * var_chaste_interface__i_Ks_xs1_gate__xs1 * var_chaste_interface__i_Ks_xs2_gate__xs2; // microA_per_microF
        const double var_i_Na__i_Na = pow(var_chaste_interface__i_Na_m_gate__m, 3) * (-var_equilibrium_potentials__E_Na + var_chaste_interface__membrane__V) * (0.20000000000000001 * var_chaste_interface__i_Na_j_gate__j + 0.80000000000000004 * var_chaste_interface__i_Na_h_gate__h) * NV_Ith_S(mParameters, 8); // microA_per_microF
        const double var_i_NaCa__i_NaCa = (-1.5 * pow(NV_Ith_S(mParameters, 6), 3) * var_chaste_interface__Ca_i__Ca_i * exp(-0.65000000000000002 * var_chaste_interface__membrane__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)) + pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * var_i_NaCa__X_NaCa * NV_Ith_S(mParameters, 14) * NV_Ith_S(mParameters, 4) * exp(0.34999999999999998 * var_chaste_interface__membrane__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))) / ((1.0 + var_i_NaCa__k_sat * exp(-0.65000000000000002 * var_chaste_interface__membrane__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))) * (1.0 + 0.44444444444444442 * pow(var_i_NaCa__km_Ca_act, 2) / pow(var_chaste_interface__Ca_i__Ca_i, 2)) * (var_i_NaCa__dNaCa_1 + var_i_NaCa__dNaCa_2)); // microA_per_microF
        const double var_i_NaK__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_chaste_interface__membrane__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)) + 0.036499999999999998 * var_i_NaK__sigma * exp(-var_chaste_interface__membrane__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))); // dimensionless
        const double var_i_NaK__i_NaK = var_i_NaK__f_NaK * var_i_NaK__g_NaK * NV_Ith_S(mParameters, 5) / ((1.0 + pow(var_i_NaK__km_Na_i_2, 2) / pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 2)) * (var_i_NaK__km_K_o + NV_Ith_S(mParameters, 5))); // microA_per_microF
        const double var_i_Na_L__i_Na_L = pow(var_chaste_interface__i_Na_L_m_L_gate__m_L, 3) * (-var_equilibrium_potentials__E_Na + var_chaste_interface__membrane__V) * var_i_Na_L__g_Na_L * var_chaste_interface__i_Na_L_h_L_gate__h_L; // microA_per_microF
        const double var_i_to_1__i_to_1 = (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * (0.20000000000000001 * var_chaste_interface__i_to_1_i2_gate__i2 + 0.80000000000000004 * var_chaste_interface__i_to_1_i_gate__i) * NV_Ith_S(mParameters, 15) * var_chaste_interface__i_to_1_a_gate__a; // microA_per_microF
        const double var_membrane__i_tot = var_background_currents__i_Ca_b + var_background_currents__i_Cl_b + var_background_currents__i_K_b + var_background_currents__i_Na_b + var_i_Ca_L__i_Ca_L + var_i_Ca_T__i_Ca_T + var_i_Ca_p__i_Ca_p + var_i_K1__i_K1 + var_i_K_p__i_K_p + var_i_Kr__i_Kr + var_i_Ks__i_Ks + var_i_Na__i_Na + var_i_NaCa__i_NaCa + var_i_NaK__i_NaK + var_i_Na_L__i_Na_L + var_i_to_1__i_to_1 + var_i_to_2__i_to_2; // microA_per_microF
        const double var_chaste_interface__i_ionic = HeartConfig::Instance()->GetCapacitance() * var_membrane__i_tot; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellaslanidi_Purkinje_model_2009FromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__Ca_i__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.00022355433459434943
        double var_chaste_interface__i_Na_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.002003390432234504
        double var_chaste_interface__i_Na_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.9786390933308567
        double var_chaste_interface__i_Na_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.09866447258167589
        double var_chaste_interface__i_Na_L_m_L_gate__m_L = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.002003390432234504
        double var_chaste_interface__i_Na_L_h_L_gate__h_L = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.8946968372659203
        double var_chaste_interface__i_Ca_L_d_gate__d = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 2.322223865147363e-06
        double var_chaste_interface__i_Ca_L_f_gate__f = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.9985607329462358
        double var_chaste_interface__i_Ca_L_f2_gate__f2 = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.8173435436674658
        double var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.9610551285529658
        double var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.868690796671854
        double var_chaste_interface__i_Ca_T_b_gate__b = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.0002563937630984438
        double var_chaste_interface__i_Ca_T_g_gate__g = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.9720432601848331
        double var_chaste_interface__i_to_1_a_gate__a = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.0004238729429342389
        double var_chaste_interface__i_to_1_i_gate__i = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.9990935802459496
        double var_chaste_interface__i_to_1_i2_gate__i2 = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.9777368439681764
        double var_chaste_interface__i_Kr_xr_gate__xr = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 0.07084939408222911
        double var_chaste_interface__i_Ks_xs1_gate__xs1 = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 0.0011737654433043125
        double var_chaste_interface__i_Ks_xs2_gate__xs2 = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 0.001179442867470093
        double var_chaste_interface__i_to_2_a_gate__a = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 0.0014909437525000811
        double var_chaste_interface__intracellular_ion_concentrations__Na_i = NV_Ith_S(rY, 21);
        // Units: millimolar; Initial value: 9.927155552932733
        double var_chaste_interface__intracellular_ion_concentrations__Cl_i = NV_Ith_S(rY, 22);
        // Units: millimolar; Initial value: 18.904682470140408
        double var_chaste_interface__intracellular_ion_concentrations__K_i = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 141.9670801746057
        double var_chaste_interface__Ca_MK_act__Ca_MK_trap = NV_Ith_S(rY, 24);
        // Units: dimensionless; Initial value: 8.789168284782809e-06
        double var_chaste_interface__Ca_NSR__Ca_NSR = NV_Ith_S(rY, 25);
        // Units: millimolar; Initial value: 1.2132524695849454
        double var_chaste_interface__Ca_JSR__Ca_JSR = NV_Ith_S(rY, 26);
        // Units: millimolar; Initial value: 1.1433050636518596
        double var_chaste_interface__Ca_r__Ca_r = NV_Ith_S(rY, 27);
        // Units: millimolar; Initial value: 0.00022418117117903934
        double var_chaste_interface__q_rel_ri_gate__ri = NV_Ith_S(rY, 28);
        // Units: dimensionless; Initial value: 0.7802870066567904
        double var_chaste_interface__q_rel_ro_gate__ro = NV_Ith_S(rY, 29);
        // Units: dimensionless; Initial value: 1.2785734760674763e-09

        // Mathematics
        double d_dt_chaste_interface_var_membrane__V;
        const double var_CT_K_Cl__CT_K_Cl_max = 7.0755999999999996e-6; // millimolar_per_millisecond
        const double var_CT_Na_Cl__CT_Na_Cl_max = 9.8442999999999999e-6; // millimolar_per_millisecond
        const double var_Ca_JSR__CSQN_max = 10.0; // millimolar
        const double var_Ca_JSR__km_CSQN = 0.80000000000000004; // millimolar
        const double var_Ca_MK_act__Ca_MK_0 = 0.050000000000000003; // dimensionless
        const double var_Ca_MK_act__alpha_Ca_MK = 0.050000000000000003; // per_millisecond
        const double var_Ca_MK_act__beta_Ca_MK = 0.00068000000000000005; // per_millisecond
        const double var_Ca_MK_act__km_Ca_MK = 0.14999999999999999; // millimolar
        const double var_Ca_i__CMDN_max = 0.050000000000000003; // millimolar
        const double var_Ca_i__TRPN_max = 0.070000000000000007; // millimolar
        const double var_Ca_i__km_CMDN = 0.0023800000000000002; // millimolar
        const double var_Ca_i__CMDN = 2.0 * var_Ca_i__CMDN_max * var_chaste_interface__Ca_i__Ca_i / pow((var_chaste_interface__Ca_i__Ca_i + var_Ca_i__km_CMDN), 2); // dimensionless
        const double var_Ca_i__km_TRPN = 0.00050000000000000001; // millimolar
        const double var_Ca_i__TRPN = 2.0 * var_chaste_interface__Ca_i__Ca_i * var_Ca_i__TRPN_max / pow((var_chaste_interface__Ca_i__Ca_i + var_Ca_i__km_TRPN), 2); // dimensionless
        const double var_Ca_i__b_myo = 1 / (1.0 + var_Ca_i__CMDN + var_Ca_i__TRPN); // dimensionless
        const double var_Ca_MK_act__Ca_MK_bound = (1.0 - var_chaste_interface__Ca_MK_act__Ca_MK_trap) * var_Ca_MK_act__Ca_MK_0 / (1.0 + var_Ca_MK_act__km_Ca_MK / var_chaste_interface__Ca_r__Ca_r); // dimensionless
        const double var_Ca_MK_act__Ca_MK_act = var_Ca_MK_act__Ca_MK_bound + var_chaste_interface__Ca_MK_act__Ca_MK_trap; // dimensionless
        const double var_Ca_r__b_SL_max = 1.1240000000000001; // millimolar
        const double var_Ca_r__b_SR_max = 0.047; // millimolar
        const double var_Ca_r__km_b_SL = 0.0086999999999999994; // millimolar
        const double var_Ca_r__b_SL = 2.0 * var_chaste_interface__Ca_r__Ca_r * var_Ca_r__b_SL_max / pow((var_chaste_interface__Ca_r__Ca_r + var_Ca_r__km_b_SL), 2); // dimensionless
        const double var_Ca_r__km_b_SR = 0.00087000000000000001; // millimolar
        const double var_Ca_r__b_SR = 2.0 * var_chaste_interface__Ca_r__Ca_r * var_Ca_r__b_SR_max / pow((var_chaste_interface__Ca_r__Ca_r + var_Ca_r__km_b_SR), 2); // dimensionless
        const double var_Ca_r__Ca_r_tot = 1 / (1.0 + var_Ca_r__b_SL + var_Ca_r__b_SR); // dimensionless
        const double var_Ca_r__tau_ss = 0.20000000000000001; // millisecond
        const double var_Ca_r__q_diff = (-var_chaste_interface__Ca_i__Ca_i + var_chaste_interface__Ca_r__Ca_r) / var_Ca_r__tau_ss; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_Ca_MK_act__Ca_MK_trap = -var_chaste_interface__Ca_MK_act__Ca_MK_trap * var_Ca_MK_act__beta_Ca_MK + (var_Ca_MK_act__Ca_MK_bound + var_chaste_interface__Ca_MK_act__Ca_MK_trap) * var_Ca_MK_act__Ca_MK_bound * var_Ca_MK_act__alpha_Ca_MK; // 1 / millisecond
        const double var_background_currents__g_Cl_b = 0.00022499999999999999; // milliS_per_microF
        const double var_background_currents__g_K_b = 0.0050000000000000001; // milliS_per_microF
        const double var_background_currents__g_Na_b = 0.0025000000000000001; // milliS_per_microF
        const double var_equilibrium_potentials__r_NaK = 0.018329999999999999; // dimensionless
        const double var_i_Ca_L_f_Ca_gate__tau_f_Ca = 0.5 + 1 / (1.0 + 333.33333333333331 * var_chaste_interface__Ca_r__Ca_r) + 10.0 * var_Ca_MK_act__Ca_MK_act / (var_Ca_MK_act__Ca_MK_act + var_Ca_MK_act__km_Ca_MK); // millisecond
        const double var_i_Ca_p__i_Ca_p_max = 0.057500000000000002; // microA_per_microF
        const double var_i_Ca_p__km_Ca_p = 0.00050000000000000001; // millimolar
        const double var_i_Ca_p__i_Ca_p = var_chaste_interface__Ca_i__Ca_i * var_i_Ca_p__i_Ca_p_max / (var_chaste_interface__Ca_i__Ca_i + var_i_Ca_p__km_Ca_p); // microA_per_microF
        const double var_i_K_p__g_K_p = 0.0027599999999999999; // milliS_per_microF
        const double var_i_Ks__g_Ks = (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__Ca_i__Ca_i), 1.3999999999999999))) * NV_Ith_S(mParameters, 13); // milliS_per_microF
        const double var_i_NaCa__X_NaCa = 0.40000000000000002; // dimensionless
        const double var_i_NaCa__k_sat = 0.27000000000000002; // dimensionless
        const double var_i_NaCa__km_Ca_act = 0.000125; // millimolar
        const double var_i_NaCa__km_Ca_i = 0.0035999999999999999; // millimolar
        const double var_i_NaCa__km_Ca_o = 1.3; // millimolar
        const double var_i_NaCa__km_Na_i_1 = 12.300000000000001; // millimolar
        const double var_i_NaCa__km_Na_o = 87.5; // millimolar
        const double var_i_NaK__g_NaK = 0.61875000000000002; // microA_per_microF
        const double var_i_NaK__km_K_o = 1.5; // millimolar
        const double var_i_NaK__km_Na_i_2 = 10.0; // millimolar
        const double var_i_Na_L__g_Na_L = 0.037374999999999999; // milliS_per_microF
        const double var_i_to_2_a_gate__km_to_2 = 0.1502; // millimolar
        const double var_i_to_2_a_gate__a_infinity = 1 / (1.0 + var_i_to_2_a_gate__km_to_2 / var_chaste_interface__Ca_r__Ca_r); // dimensionless
        const double var_i_to_2_a_gate__tau_a = 1.0; // millisecond
        const double d_dt_chaste_interface_var_i_to_2_a_gate__a = (-var_chaste_interface__i_to_2_a_gate__a + var_i_to_2_a_gate__a_infinity) / var_i_to_2_a_gate__tau_a; // 1 / millisecond
        const double var_i_Ca_L_d_gate__d_infinity = 1 / (1.0 + exp(0.59347181008902072 - 0.14836795252225518 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_i_Ca_L_d_gate__tau_d = 0.58999999999999997 + 0.80000000000000004 * exp(0.67599999999999993 + 0.051999999999999998 * var_chaste_interface__membrane__V) / (1.0 + exp(1.7160000000000002 + 0.13200000000000001 * var_chaste_interface__membrane__V)); // millisecond
        const double d_dt_chaste_interface_var_i_Ca_L_d_gate__d = (-var_chaste_interface__i_Ca_L_d_gate__d + var_i_Ca_L_d_gate__d_infinity) / var_i_Ca_L_d_gate__tau_d; // 1 / millisecond
        const double var_i_Ca_L_f2_gate__f2_infinity = 1 / (1.0 + exp(1.8 + 0.10000000000000001 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_i_Ca_L_f2_gate__tau_f2 = 38.0 + 24.217200000000005 * pow((-1 + 0.053763440860215048 * var_chaste_interface__membrane__V), 2); // millisecond
        const double d_dt_chaste_interface_var_i_Ca_L_f2_gate__f2 = (-var_chaste_interface__i_Ca_L_f2_gate__f2 + var_i_Ca_L_f2_gate__f2_infinity) / var_i_Ca_L_f2_gate__tau_f2; // 1 / millisecond
        const double var_i_Ca_L_f_gate__f_infinity = 1 / (1.0 + exp(1.8 + 0.10000000000000001 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_i_Ca_L_f_gate__tau_f = 4.0 + 0.03125 * pow((-1 + 0.40000000000000002 * var_chaste_interface__membrane__V), 2); // millisecond
        const double d_dt_chaste_interface_var_i_Ca_L_f_gate__f = (-var_chaste_interface__i_Ca_L_f_gate__f + var_i_Ca_L_f_gate__f_infinity) / var_i_Ca_L_f_gate__tau_f; // 1 / millisecond
        const double var_i_Ca_T_b_gate__alpha_b = 1.0680000000000001 * exp(0.54333333333333333 + 0.033333333333333333 * var_chaste_interface__membrane__V); // per_millisecond
        const double var_i_Ca_T_b_gate__b_infinity = 1 / (1.0 + exp(-5.4098360655737707 - 0.16393442622950821 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_i_Ca_T_b_gate__beta_b = 1.0680000000000001 * exp(-0.54333333333333333 - 0.033333333333333333 * var_chaste_interface__membrane__V); // per_millisecond
        const double var_i_Ca_T_b_gate__tau_b = 1 / (var_i_Ca_T_b_gate__alpha_b + var_i_Ca_T_b_gate__beta_b); // millisecond
        const double d_dt_chaste_interface_var_i_Ca_T_b_gate__b = (-var_chaste_interface__i_Ca_T_b_gate__b + var_i_Ca_T_b_gate__b_infinity) / var_i_Ca_T_b_gate__tau_b; // 1 / millisecond
        const double var_i_Ca_T_g_gate__alpha_g = 0.014999999999999999 * exp(-0.86074429771908767 - 0.012004801920768308 * var_chaste_interface__membrane__V); // per_millisecond
        const double var_i_Ca_T_g_gate__beta_g = 0.014999999999999999 * exp(4.6558441558441563 + 0.064935064935064929 * var_chaste_interface__membrane__V); // per_millisecond
        const double var_i_Ca_T_g_gate__g_infinity = 1 / (1.0 + exp(9.0909090909090917 + 0.15151515151515152 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_i_Ca_T_g_gate__tau_g = 1 / (var_i_Ca_T_g_gate__alpha_g + var_i_Ca_T_g_gate__beta_g); // millisecond
        const double d_dt_chaste_interface_var_i_Ca_T_g_gate__g = (-var_chaste_interface__i_Ca_T_g_gate__g + var_i_Ca_T_g_gate__g_infinity) / var_i_Ca_T_g_gate__tau_g; // 1 / millisecond
        const double var_i_K_p__kp = 1 / (1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_i_Kr__rr_infinity = 1 / (1.0 + exp(-0.26470588235294124 + 0.049019607843137261 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_i_Kr_xr_gate__tau_xr = 100.0 + 900.0 / (1.0 + exp(0.20000000000000001 * var_chaste_interface__membrane__V)); // millisecond
        const double var_i_Kr_xr_gate__xr_infinity = 1 / (1.0 + exp(-0.0069387755102040824 - 0.081632653061224483 * var_chaste_interface__membrane__V)); // dimensionless
        const double d_dt_chaste_interface_var_i_Kr_xr_gate__xr = (-var_chaste_interface__i_Kr_xr_gate__xr + var_i_Kr_xr_gate__xr_infinity) / var_i_Kr_xr_gate__tau_xr; // 1 / millisecond
        const double var_i_Ks_xs1_gate__tau_xs1 = 1 / (((fabs(44.600000000000001 + var_chaste_interface__membrane__V) < 1.0030090258350555e-8) ? (7.6328986866047728e-13 / (1.0 - exp(-9.9999999875755032e-8)) - 49850000.061936118 * (44.599999989969909 + var_chaste_interface__membrane__V) * (-7.6328986866047728e-13 / (1.0 - exp(9.9999999875755032e-8)) - 7.6328986866047728e-13 / (1.0 - exp(-9.9999999875755032e-8)))) : (7.6100000000000007e-5 * (44.600000000000001 + var_chaste_interface__membrane__V) / (1.0 - exp(-444.66200000000003 - 9.9700000000000006 * var_chaste_interface__membrane__V)))) + ((fabs(-0.55000000000000004 + var_chaste_interface__membrane__V) < 7.8124999999948028e-7) ? (-2.8124999999965681e-10 / (-1.0 + exp(-9.999999999987797e-8)) + 640000.00000042573 * (-0.54999921875000002 + var_chaste_interface__membrane__V) * (2.8124999999996902e-10 / (-1.0 + exp(9.9999999999988984e-8)) + 2.8124999999965681e-10 / (-1.0 + exp(-9.999999999987797e-8)))) : (0.00036000000000000002 * (-0.55000000000000004 + var_chaste_interface__membrane__V) / (-1.0 + exp(-0.070400000000000004 + 0.128 * var_chaste_interface__membrane__V))))); // millisecond
        const double var_i_Ks_xs1_gate__xs1_infinity = 1 / (1.0 + exp(0.65693430656934315 - 0.072992700729927015 * var_chaste_interface__membrane__V)); // dimensionless
        const double d_dt_chaste_interface_var_i_Ks_xs1_gate__xs1 = (-var_chaste_interface__i_Ks_xs1_gate__xs1 + var_i_Ks_xs1_gate__xs1_infinity) / var_i_Ks_xs1_gate__tau_xs1; // 1 / millisecond
        const double var_i_Ks_xs2_gate__tau_xs2 = 2.0 / (((fabs(44.600000000000001 + var_chaste_interface__membrane__V) < 1.0030090258350555e-8) ? (7.6328986866047728e-13 / (1.0 - exp(-9.9999999875755032e-8)) - 49850000.061936118 * (44.599999989969909 + var_chaste_interface__membrane__V) * (-7.6328986866047728e-13 / (1.0 - exp(9.9999999875755032e-8)) - 7.6328986866047728e-13 / (1.0 - exp(-9.9999999875755032e-8)))) : (7.6100000000000007e-5 * (44.600000000000001 + var_chaste_interface__membrane__V) / (1.0 - exp(-444.66200000000003 - 9.9700000000000006 * var_chaste_interface__membrane__V)))) + ((fabs(-0.55000000000000004 + var_chaste_interface__membrane__V) < 7.8124999999948028e-7) ? (-2.8124999999965681e-10 / (-1.0 + exp(-9.999999999987797e-8)) + 640000.00000042573 * (-0.54999921875000002 + var_chaste_interface__membrane__V) * (2.8124999999996902e-10 / (-1.0 + exp(9.9999999999988984e-8)) + 2.8124999999965681e-10 / (-1.0 + exp(-9.999999999987797e-8)))) : (0.00036000000000000002 * (-0.55000000000000004 + var_chaste_interface__membrane__V) / (-1.0 + exp(-0.070400000000000004 + 0.128 * var_chaste_interface__membrane__V))))); // millisecond
        const double var_i_Ks_xs2_gate__xs2_infinity = 1 / (1.0 + exp(0.65693430656934315 - 0.072992700729927015 * var_chaste_interface__membrane__V)); // dimensionless
        const double d_dt_chaste_interface_var_i_Ks_xs2_gate__xs2 = (-var_chaste_interface__i_Ks_xs2_gate__xs2 + var_i_Ks_xs2_gate__xs2_infinity) / var_i_Ks_xs2_gate__tau_xs2; // 1 / millisecond
        const double var_i_Na_L_h_L_gate__h_L_infinity = 1 / (1.0 + exp(11.311475409836067 + 0.16393442622950821 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_i_Na_L_h_L_gate__tau_h_L = 175.0 + 125.0 / (1.0 + exp(-4.166666666666667 - 0.16666666666666666 * var_chaste_interface__membrane__V)); // millisecond
        const double d_dt_chaste_interface_var_i_Na_L_h_L_gate__h_L = (-var_chaste_interface__i_Na_L_h_L_gate__h_L + var_i_Na_L_h_L_gate__h_L_infinity) / var_i_Na_L_h_L_gate__tau_h_L; // 1 / millisecond
        const double var_i_Na_L_m_L_gate__alpha_m_L = ((fabs(47.130000000000003 + var_chaste_interface__membrane__V) < 1.0000000000287557e-6) ? (3.200000000092018e-7 / (1.0 - exp(-1.0000000000287557e-7)) - 499999.99998562218 * (47.129999000000005 + var_chaste_interface__membrane__V) * (-3.200000000092018e-7 / (1.0 - exp(1.0000000000287557e-7)) - 3.200000000092018e-7 / (1.0 - exp(-1.0000000000287557e-7)))) : (0.32000000000000001 * (47.130000000000003 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.7130000000000001 - 0.10000000000000001 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_i_Na_L_m_L_gate__beta_m_L = 0.080000000000000002 * exp(-0.090909090909090912 * var_chaste_interface__membrane__V); // per_millisecond
        const double var_i_Na_L_m_L_gate__m_L_infinity = var_i_Na_L_m_L_gate__alpha_m_L / (var_i_Na_L_m_L_gate__alpha_m_L + var_i_Na_L_m_L_gate__beta_m_L); // dimensionless
        const double var_i_Na_L_m_L_gate__tau_m_L = 1 / (var_i_Na_L_m_L_gate__alpha_m_L + var_i_Na_L_m_L_gate__beta_m_L); // millisecond
        const double d_dt_chaste_interface_var_i_Na_L_m_L_gate__m_L = (-var_chaste_interface__i_Na_L_m_L_gate__m_L + var_i_Na_L_m_L_gate__m_L_infinity) / var_i_Na_L_m_L_gate__tau_m_L; // 1 / millisecond
        const double var_i_Na_h_gate__alpha_h = ((var_chaste_interface__membrane__V < -40.0) ? (0.13500000000000001 * exp(-11.764705882352942 + 0.14705882352941177 * NV_Ith_S(mParameters, 10) - 0.14705882352941177 * var_chaste_interface__membrane__V)) : (0)); // per_millisecond
        const double var_i_Na_h_gate__beta_h = ((var_chaste_interface__membrane__V < -40.0) ? (310000.0 * exp(0.34999999999999998 * var_chaste_interface__membrane__V - 0.34999999999999998 * NV_Ith_S(mParameters, 10)) + 3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__membrane__V - 0.079000000000000001 * NV_Ith_S(mParameters, 10))) : (7.6923076923076916 / (1.0 + exp(-0.96036036036036043 + 0.0900900900900901 * NV_Ith_S(mParameters, 10) - 0.0900900900900901 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_i_Na_h_gate__h_infinity = 0.01 * NV_Ith_S(mParameters, 9) + (1.0 - 0.01 * NV_Ith_S(mParameters, 9)) * var_i_Na_h_gate__alpha_h / (var_i_Na_h_gate__alpha_h + var_i_Na_h_gate__beta_h); // dimensionless
        const double var_i_Na_h_gate__tau_h = 1 / (var_i_Na_h_gate__alpha_h + var_i_Na_h_gate__beta_h); // millisecond
        const double d_dt_chaste_interface_var_i_Na_h_gate__h = (-var_chaste_interface__i_Na_h_gate__h + var_i_Na_h_gate__h_infinity) / var_i_Na_h_gate__tau_h; // 1 / millisecond
        const double var_i_Na_j_gate__alpha_j = ((var_chaste_interface__membrane__V < -40.0) ? ((37.780000000000001 + var_chaste_interface__membrane__V) * (-127140.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__V - 0.24440000000000001 * NV_Ith_S(mParameters, 10)) - 3.4740000000000003e-5 * exp(0.043909999999999998 * NV_Ith_S(mParameters, 10) - 0.043909999999999998 * var_chaste_interface__membrane__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V - 0.311 * NV_Ith_S(mParameters, 10)))) : (0)); // per_millisecond
        const double var_i_Na_j_gate__beta_j = ((var_chaste_interface__membrane__V < -40.0) ? (0.1212 * exp(0.01052 * NV_Ith_S(mParameters, 10) - 0.01052 * var_chaste_interface__membrane__V) / (1.0 + exp(-5.5312920000000005 + 0.13780000000000001 * NV_Ith_S(mParameters, 10) - 0.13780000000000001 * var_chaste_interface__membrane__V))) : (0.29999999999999999 * exp(2.5349999999999999e-7 * NV_Ith_S(mParameters, 10) - 2.5349999999999999e-7 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.2000000000000002 + 0.10000000000000001 * NV_Ith_S(mParameters, 10) - 0.10000000000000001 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_i_Na_j_gate__j_infinity = 0.01 * NV_Ith_S(mParameters, 9) + (1.0 - 0.01 * NV_Ith_S(mParameters, 9)) * var_i_Na_j_gate__alpha_j / (var_i_Na_j_gate__alpha_j + var_i_Na_j_gate__beta_j); // dimensionless
        const double var_i_Na_j_gate__tau_j = 1 / (var_i_Na_j_gate__alpha_j + var_i_Na_j_gate__beta_j); // millisecond
        const double d_dt_chaste_interface_var_i_Na_j_gate__j = (-var_chaste_interface__i_Na_j_gate__j + var_i_Na_j_gate__j_infinity) / var_i_Na_j_gate__tau_j; // 1 / millisecond
        const double var_i_Na_m_gate__alpha_m = ((fabs(47.130000000000003 + var_chaste_interface__membrane__V) < 1.0000000000287557e-6) ? (3.200000000092018e-7 / (1.0 - exp(-1.0000000000287557e-7)) - 499999.99998562218 * (47.129999000000005 + var_chaste_interface__membrane__V) * (-3.200000000092018e-7 / (1.0 - exp(1.0000000000287557e-7)) - 3.200000000092018e-7 / (1.0 - exp(-1.0000000000287557e-7)))) : (0.32000000000000001 * (47.130000000000003 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.7130000000000001 - 0.10000000000000001 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_i_Na_m_gate__beta_m = 0.080000000000000002 * exp(-0.090909090909090912 * var_chaste_interface__membrane__V); // per_millisecond
        const double var_i_Na_m_gate__m_infinity = var_i_Na_m_gate__alpha_m / (var_i_Na_m_gate__alpha_m + var_i_Na_m_gate__beta_m); // dimensionless
        const double var_i_Na_m_gate__tau_m = 1 / (var_i_Na_m_gate__alpha_m + var_i_Na_m_gate__beta_m); // millisecond
        const double d_dt_chaste_interface_var_i_Na_m_gate__m = (-var_chaste_interface__i_Na_m_gate__m + var_i_Na_m_gate__m_infinity) / var_i_Na_m_gate__tau_m; // 1 / millisecond
        const double var_i_to_1_a_gate__alpha_a = 25.0 * exp(-3.7999999999999998 + 0.050000000000000003 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.7999999999999998 + 0.050000000000000003 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_i_to_1_a_gate__beta_a = 25.0 * exp(-2.7000000000000002 - 0.050000000000000003 * var_chaste_interface__membrane__V) / (1.0 + exp(-2.7000000000000002 - 0.050000000000000003 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_i_to_1_a_gate__a_infinity = var_i_to_1_a_gate__alpha_a / (var_i_to_1_a_gate__alpha_a + var_i_to_1_a_gate__beta_a); // dimensionless
        const double var_i_to_1_a_gate__tau_a = 1 / (var_i_to_1_a_gate__alpha_a + var_i_to_1_a_gate__beta_a); // millisecond
        const double d_dt_chaste_interface_var_i_to_1_a_gate__a = (-var_chaste_interface__i_to_1_a_gate__a + var_i_to_1_a_gate__a_infinity) / var_i_to_1_a_gate__tau_a; // 1 / millisecond
        const double var_i_to_1_i2_gate__alpha_i2 = 0.0044200000000000003 / (1.0 + exp(1.7333333333333334 + 0.066666666666666666 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_i_to_1_i2_gate__beta_i2 = 0.050000000000000003 * exp(-0.66666666666666663 + 0.066666666666666666 * var_chaste_interface__membrane__V) / (1.0 + exp(-0.66666666666666663 + 0.066666666666666666 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_i_to_1_i2_gate__i2_infinity = var_i_to_1_i2_gate__alpha_i2 / (var_i_to_1_i2_gate__alpha_i2 + var_i_to_1_i2_gate__beta_i2); // dimensionless
        const double var_i_to_1_i2_gate__tau_i2 = 21.5 + 30.0 / (1.0 + exp(-2.5 + 0.10000000000000001 * var_chaste_interface__membrane__V)); // millisecond
        const double d_dt_chaste_interface_var_i_to_1_i2_gate__i2 = (-var_chaste_interface__i_to_1_i2_gate__i2 + var_i_to_1_i2_gate__i2_infinity) / var_i_to_1_i2_gate__tau_i2; // 1 / millisecond
        const double var_i_to_1_i_gate__alpha_i = 0.029999999999999999 / (1.0 + exp(1.6666666666666667 + 0.066666666666666666 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_i_to_1_i_gate__beta_i = 0.10000000000000001 * exp(-2.6666666666666665 + 0.066666666666666666 * var_chaste_interface__membrane__V) / (1.0 + exp(-2.6666666666666665 + 0.066666666666666666 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_i_to_1_i_gate__i_infinity = var_i_to_1_i_gate__alpha_i / (var_i_to_1_i_gate__alpha_i + var_i_to_1_i_gate__beta_i); // dimensionless
        const double var_i_to_1_i_gate__tau_i = 6.0 + 5.0 / (1.0 + exp(-1.6499999999999999 + 0.10000000000000001 * var_chaste_interface__membrane__V)); // millisecond
        const double d_dt_chaste_interface_var_i_to_1_i_gate__i = (-var_chaste_interface__i_to_1_i_gate__i + var_i_to_1_i_gate__i_infinity) / var_i_to_1_i_gate__tau_i; // 1 / millisecond
        const double var_i_to_2__i_to_2_max = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (3.8593999999999993e-9 * (-100.0 * exp(9.9999999999999995e-8) + var_chaste_interface__intracellular_ion_concentrations__Cl_i) / (1.0 - exp(9.9999999999999995e-8)) + 3.8593999999999993e-9 * (-100.0 * exp(-9.9999999999999995e-8) + var_chaste_interface__intracellular_ion_concentrations__Cl_i) / (1.0 - exp(-9.9999999999999995e-8))) - 3.8593999999999993e-9 * (-100.0 * exp(-9.9999999999999995e-8) + var_chaste_interface__intracellular_ion_concentrations__Cl_i) / (1.0 - exp(-9.9999999999999995e-8))) : (0.0014448004881001341 * (-100.0 * exp(0.037435883507802616 * var_chaste_interface__membrane__V) + var_chaste_interface__intracellular_ion_concentrations__Cl_i) * var_chaste_interface__membrane__V / (1.0 - exp(0.037435883507802616 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_i_to_2__i_to_2 = 20.0 * var_i_to_2__i_to_2_max * var_chaste_interface__i_to_2_a_gate__a; // microA_per_microF
        const double var_background_currents__i_Ca_b = ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (3.8499135947999997e-9 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + var_chaste_interface__Ca_i__Ca_i * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) + 3.8499135947999997e-9 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + var_chaste_interface__Ca_i__Ca_i * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8))) - 3.8499135947999997e-9 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + var_chaste_interface__Ca_i__Ca_i * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8))) : (0.0028824983370007683 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + var_chaste_interface__Ca_i__Ca_i * exp(0.074871767015605231 * var_chaste_interface__membrane__V)) * var_chaste_interface__membrane__V / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_i_Ca_L__i_Ca_L_max = ((fabs(-15.0 + var_chaste_interface__membrane__V) < 1.3356169352718439e-6) ? (374358.83507888648 * (-14.999998664383064 + var_chaste_interface__membrane__V) * (4.6891709999892238e-6 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + var_chaste_interface__Ca_r__Ca_r * exp(9.9999999999770198e-8)) / (-1.0 + exp(9.9999999999770198e-8)) + 4.6891709999892238e-6 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + var_chaste_interface__Ca_r__Ca_r * exp(-9.9999999999770198e-8)) / (-1.0 + exp(-9.9999999999770198e-8))) - 4.6891709999892238e-6 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + var_chaste_interface__Ca_r__Ca_r * exp(-9.9999999999770198e-8)) / (-1.0 + exp(-9.9999999999770198e-8))) : (3.510865186083326 * (-15.0 + var_chaste_interface__membrane__V) * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + var_chaste_interface__Ca_r__Ca_r * exp(-1.1230765052340785 + 0.074871767015605231 * var_chaste_interface__membrane__V)) / (-1.0 + exp(-1.1230765052340785 + 0.074871767015605231 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_i_Ca_L__i_Ca_L = NV_Ith_S(mParameters, 7) * var_i_Ca_L__i_Ca_L_max * var_chaste_interface__i_Ca_L_d_gate__d * var_chaste_interface__i_Ca_L_f2_gate__f2 * var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 * var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca * var_chaste_interface__i_Ca_L_f_gate__f; // microA_per_microF
        const double var_i_Ca_L_f_Ca2_gate__f_Ca2_infinity = 1 / (1.0 - 100.0 * var_i_Ca_L__i_Ca_L); // dimensionless
        const double var_i_Ca_L_f_Ca2_gate__tau_f_Ca2 = 125.0 + 300.0 / (1.0 + exp(-4.375 - 25.0 * var_i_Ca_L__i_Ca_L)); // millisecond
        const double d_dt_chaste_interface_var_i_Ca_L_f_Ca2_gate__f_Ca2 = (-var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 + var_i_Ca_L_f_Ca2_gate__f_Ca2_infinity) / var_i_Ca_L_f_Ca2_gate__tau_f_Ca2; // 1 / millisecond
        const double var_i_Ca_L_f_Ca_gate__f_Ca_infinity = 0.14999999999999999 + 0.55000000000000004 / (1.0 + 333.33333333333331 * var_chaste_interface__Ca_r__Ca_r) + 0.29999999999999999 / (1.0 - 20.0 * var_i_Ca_L__i_Ca_L); // dimensionless
        const double d_dt_chaste_interface_var_i_Ca_L_f_Ca_gate__f_Ca = (-var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca + var_i_Ca_L_f_Ca_gate__f_Ca_infinity) / var_i_Ca_L_f_Ca_gate__tau_f_Ca; // 1 / millisecond
        const double var_i_NaCa__dNaCa_1 = pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * var_i_NaCa__km_Ca_o + 1.5 * pow(var_i_NaCa__km_Na_o, 3) * var_chaste_interface__Ca_i__Ca_i + pow(var_i_NaCa__km_Na_i_1, 3) * (1.0 + 1.5 * var_chaste_interface__Ca_i__Ca_i / var_i_NaCa__km_Ca_i) * NV_Ith_S(mParameters, 4); // millimolar4
        const double var_model_parameters__Cl_o = 100.0; // millimolar
        const double var_model_parameters__Cm = 1.0; // microF_per_cm2
        const double var_model_parameters__F = 96485.0; // coulomb_per_mole
        const double var_i_K1__g_K1 = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 5)) * NV_Ith_S(mParameters, 11); // milliS_per_microF
        const double var_i_Kr__g_Kr = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 5)) * NV_Ith_S(mParameters, 12); // milliS_per_microF
        const double var_i_NaCa__dNaCa_2 = pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * NV_Ith_S(mParameters, 4) + 1.5 * pow(NV_Ith_S(mParameters, 6), 3) * var_chaste_interface__Ca_i__Ca_i + pow(NV_Ith_S(mParameters, 6), 3) * (1.0 + var_chaste_interface__intracellular_ion_concentrations__Na_i / var_i_NaCa__km_Na_i_1) * var_i_NaCa__km_Ca_i; // millimolar4
        const double var_i_NaK__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * NV_Ith_S(mParameters, 6)); // dimensionless
        const double var_model_parameters__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_model_parameters__T = 310.0; // kelvin
        const double var_equilibrium_potentials__E_Cl = -var_model_parameters__R * var_model_parameters__T * log(var_model_parameters__Cl_o / var_chaste_interface__intracellular_ion_concentrations__Cl_i) / var_model_parameters__F; // millivolt
        const double var_background_currents__i_Cl_b = (-var_equilibrium_potentials__E_Cl + var_chaste_interface__membrane__V) * var_background_currents__g_Cl_b; // microA_per_microF
        const double var_equilibrium_potentials__E_K = var_model_parameters__R * var_model_parameters__T * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__intracellular_ion_concentrations__K_i) / var_model_parameters__F; // millivolt
        const double var_CT_K_Cl__CT_K_Cl = (-var_equilibrium_potentials__E_Cl + var_equilibrium_potentials__E_K) * var_CT_K_Cl__CT_K_Cl_max / (87.825100000000006 - var_equilibrium_potentials__E_Cl + var_equilibrium_potentials__E_K); // millimolar_per_millisecond
        const double var_background_currents__i_K_b = (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * var_background_currents__g_K_b; // microA_per_microF
        const double var_equilibrium_potentials__E_Ks = var_model_parameters__R * var_model_parameters__T * log((var_equilibrium_potentials__r_NaK * NV_Ith_S(mParameters, 6) + NV_Ith_S(mParameters, 5)) / (var_equilibrium_potentials__r_NaK * var_chaste_interface__intracellular_ion_concentrations__Na_i + var_chaste_interface__intracellular_ion_concentrations__K_i)) / var_model_parameters__F; // millivolt
        const double var_equilibrium_potentials__E_Na = var_model_parameters__R * var_model_parameters__T * log(NV_Ith_S(mParameters, 6) / var_chaste_interface__intracellular_ion_concentrations__Na_i) / var_model_parameters__F; // millivolt
        const double var_CT_Na_Cl__CT_Na_Cl = pow((-var_equilibrium_potentials__E_Cl + var_equilibrium_potentials__E_Na), 4) * var_CT_Na_Cl__CT_Na_Cl_max / (59494197.640692554 + pow((-var_equilibrium_potentials__E_Cl + var_equilibrium_potentials__E_Na), 4)); // millimolar_per_millisecond
        const double var_background_currents__i_Na_b = (-var_equilibrium_potentials__E_Na + var_chaste_interface__membrane__V) * var_background_currents__g_Na_b; // microA_per_microF
        const double var_i_K1_xK1_gate__alpha_xK1 = 1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_equilibrium_potentials__E_K)); // dimensionless
        const double var_i_K1_xK1_gate__beta_xK1 = (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_equilibrium_potentials__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_equilibrium_potentials__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_equilibrium_potentials__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_i_K1_xK1_gate__xK1 = var_i_K1_xK1_gate__alpha_xK1 / (var_i_K1_xK1_gate__alpha_xK1 + var_i_K1_xK1_gate__beta_xK1); // dimensionless
        const double var_i_K1__i_K1 = (0.0040000000000000001 + var_i_K1__g_K1 * var_i_K1_xK1_gate__xK1) * (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V); // microA_per_microF
        const double var_i_K_p__i_K_p = (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * var_i_K_p__g_K_p * var_i_K_p__kp; // microA_per_microF
        const double var_i_Kr__i_Kr = (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * var_i_Kr__g_Kr * var_i_Kr__rr_infinity * var_chaste_interface__i_Kr_xr_gate__xr; // microA_per_microF
        const double var_i_Ks__i_Ks = (-var_equilibrium_potentials__E_Ks + var_chaste_interface__membrane__V) * var_i_Ks__g_Ks * var_chaste_interface__i_Ks_xs1_gate__xs1 * var_chaste_interface__i_Ks_xs2_gate__xs2; // microA_per_microF
        const double var_i_Na__i_Na = pow(var_chaste_interface__i_Na_m_gate__m, 3) * (-var_equilibrium_potentials__E_Na + var_chaste_interface__membrane__V) * (0.20000000000000001 * var_chaste_interface__i_Na_j_gate__j + 0.80000000000000004 * var_chaste_interface__i_Na_h_gate__h) * NV_Ith_S(mParameters, 8); // microA_per_microF
        const double var_i_NaCa__i_NaCa = (-1.5 * pow(NV_Ith_S(mParameters, 6), 3) * var_chaste_interface__Ca_i__Ca_i * exp(-0.65000000000000002 * var_chaste_interface__membrane__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)) + pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * var_i_NaCa__X_NaCa * NV_Ith_S(mParameters, 14) * NV_Ith_S(mParameters, 4) * exp(0.34999999999999998 * var_chaste_interface__membrane__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))) / ((1.0 + var_i_NaCa__k_sat * exp(-0.65000000000000002 * var_chaste_interface__membrane__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))) * (1.0 + 0.44444444444444442 * pow(var_i_NaCa__km_Ca_act, 2) / pow(var_chaste_interface__Ca_i__Ca_i, 2)) * (var_i_NaCa__dNaCa_1 + var_i_NaCa__dNaCa_2)); // microA_per_microF
        const double var_i_NaK__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_chaste_interface__membrane__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)) + 0.036499999999999998 * var_i_NaK__sigma * exp(-var_chaste_interface__membrane__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))); // dimensionless
        const double var_i_NaK__i_NaK = var_i_NaK__f_NaK * var_i_NaK__g_NaK * NV_Ith_S(mParameters, 5) / ((1.0 + pow(var_i_NaK__km_Na_i_2, 2) / pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 2)) * (var_i_NaK__km_K_o + NV_Ith_S(mParameters, 5))); // microA_per_microF
        const double var_i_Na_L__i_Na_L = pow(var_chaste_interface__i_Na_L_m_L_gate__m_L, 3) * (-var_equilibrium_potentials__E_Na + var_chaste_interface__membrane__V) * var_i_Na_L__g_Na_L * var_chaste_interface__i_Na_L_h_L_gate__h_L; // microA_per_microF
        const double var_i_to_1__i_to_1 = (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * (0.20000000000000001 * var_chaste_interface__i_to_1_i2_gate__i2 + 0.80000000000000004 * var_chaste_interface__i_to_1_i_gate__i) * NV_Ith_S(mParameters, 15) * var_chaste_interface__i_to_1_a_gate__a; // microA_per_microF
        const double var_model_parameters__Vol_cell = 0.34539999999999998; // microlitre
        const double var_model_parameters__Vol_jsr = 0.0047999999999999996 * var_model_parameters__Vol_cell; // microlitre
        const double var_model_parameters__Vol_myo = 0.68000000000000005 * var_model_parameters__Vol_cell; // microlitre
        const double var_model_parameters__Vol_nsr = 0.055199999999999999 * var_model_parameters__Vol_cell; // microlitre
        const double var_model_parameters__Vol_ss = 0.02 * var_model_parameters__Vol_cell; // microlitre
        const double var_model_parameters__length = 0.01; // cm
        const double var_model_parameters__radius = 0.0011000000000000001; // cm
        const double var_model_parameters__a_geo = 6.2800000000000002 * pow(var_model_parameters__radius, 2) + 6.2800000000000002 * var_model_parameters__length * var_model_parameters__radius; // cm2
        const double var_model_parameters__rcg = 2.0; // dimensionless
        const double var_model_parameters__a_cap = var_model_parameters__a_geo * var_model_parameters__rcg; // cm2
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__Cl_i = (-(var_background_currents__i_Cl_b + var_i_to_2__i_to_2) * var_model_parameters__Cm * var_model_parameters__a_cap / (var_model_parameters__F * var_model_parameters__Vol_myo) + var_CT_K_Cl__CT_K_Cl + var_CT_Na_Cl__CT_Na_Cl) * NV_Ith_S(mParameters, 3); // millimolar / millisecond
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__K_i = (-(-2.0 * var_i_NaK__i_NaK + var_background_currents__i_K_b + var_i_K1__i_K1 + var_i_K_p__i_K_p + var_i_Kr__i_Kr + var_i_Ks__i_Ks + var_i_to_1__i_to_1) * var_model_parameters__Cm * var_model_parameters__a_cap / (var_model_parameters__F * var_model_parameters__Vol_myo) + var_CT_K_Cl__CT_K_Cl) * NV_Ith_S(mParameters, 3); // millimolar / millisecond
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__Na_i = (-(3.0 * var_i_NaCa__i_NaCa + 3.0 * var_i_NaK__i_NaK + var_background_currents__i_Na_b + var_i_Na__i_Na + var_i_Na_L__i_Na_L) * var_model_parameters__Cm * var_model_parameters__a_cap / (var_model_parameters__F * var_model_parameters__Vol_myo) + var_CT_Na_Cl__CT_Na_Cl) * NV_Ith_S(mParameters, 3); // millimolar / millisecond
        const double var_model_parameters__z_Ca = 2.0; // dimensionless
        const double var_q_leak__NSR_max = 15.0; // millimolar
        const double var_q_leak__q_leak = var_chaste_interface__Ca_NSR__Ca_NSR * NV_Ith_S(mParameters, 0) / var_q_leak__NSR_max; // millimolar_per_millisecond
        const double var_q_rel__vg = 1 / (1.0 + exp(2.6000000000000001 + 0.20000000000000001 * NV_Ith_S(mParameters, 7) * var_i_Ca_L__i_Ca_L_max)); // dimensionless
        const double var_q_rel__g_rel = NV_Ith_S(mParameters, 1) * var_q_rel__vg; // per_millisecond
        const double var_q_rel_ri_gate__Ca_fac = 1 / (1.0 + exp(3.3333333333333335 + 66.666666666666671 * var_i_Ca_L__i_Ca_L)); // millimolar
        const double var_q_rel_ri_gate__ri_infinity = 1 / (1.0 + exp(-16.0 + 80.0 * var_q_rel_ri_gate__Ca_fac + 40000.0 * var_chaste_interface__Ca_r__Ca_r)); // dimensionless
        const double var_q_rel_ri_gate__tau_Ca_MK_max = 10.0; // millisecond
        const double var_q_rel_ri_gate__tau_Ca_MK = var_Ca_MK_act__Ca_MK_act * var_q_rel_ri_gate__tau_Ca_MK_max / (var_Ca_MK_act__Ca_MK_act + var_Ca_MK_act__km_Ca_MK); // millisecond
        const double var_q_rel_ri_gate__tau_ri = 3.0 + (350.0 - var_q_rel_ri_gate__tau_Ca_MK) / (1.0 + exp(-15.0 + 5000.0 * var_chaste_interface__Ca_r__Ca_r + 15.0 * var_q_rel_ri_gate__Ca_fac)) + var_q_rel_ri_gate__tau_Ca_MK; // millisecond
        const double d_dt_chaste_interface_var_q_rel_ri_gate__ri = (-var_chaste_interface__q_rel_ri_gate__ri + var_q_rel_ri_gate__ri_infinity) / var_q_rel_ri_gate__tau_ri; // 1 / millisecond
        const double var_q_rel__q_rel = (-var_chaste_interface__Ca_r__Ca_r + var_chaste_interface__Ca_JSR__Ca_JSR) * var_q_rel__g_rel * var_chaste_interface__q_rel_ri_gate__ri * var_chaste_interface__q_rel_ro_gate__ro; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_Ca_r__Ca_r = (-var_Ca_r__q_diff + var_model_parameters__Vol_jsr * var_q_rel__q_rel / var_model_parameters__Vol_ss - var_i_Ca_L__i_Ca_L * var_model_parameters__Cm * var_model_parameters__a_cap / (var_model_parameters__F * var_model_parameters__Vol_ss * var_model_parameters__z_Ca)) * var_Ca_r__Ca_r_tot; // millimolar / millisecond
        const double var_q_rel_ro_gate__ro_infinity_JSR = pow(var_chaste_interface__Ca_JSR__Ca_JSR, 1.8999999999999999) / (pow(var_chaste_interface__Ca_JSR__Ca_JSR, 1.8999999999999999) + 1644.6531773416521 * pow((var_chaste_interface__Ca_r__Ca_r / (0.0028 + var_chaste_interface__Ca_r__Ca_r)), 1.8999999999999999)); // dimensionless
        const double var_q_rel_ro_gate__ro_infinity = pow(var_i_Ca_L__i_Ca_L, 2) * var_q_rel_ro_gate__ro_infinity_JSR / (1.0 + pow(var_i_Ca_L__i_Ca_L, 2)); // dimensionless
        const double var_q_rel_ro_gate__tau_ro = 3.0; // millisecond
        const double d_dt_chaste_interface_var_q_rel_ro_gate__ro = (-var_chaste_interface__q_rel_ro_gate__ro + var_q_rel_ro_gate__ro_infinity) / var_q_rel_ro_gate__tau_ro; // 1 / millisecond
        const double var_q_tr__tau_tr = 120.0; // millisecond
        const double var_q_tr__q_tr = (-var_chaste_interface__Ca_JSR__Ca_JSR + var_chaste_interface__Ca_NSR__Ca_NSR) / var_q_tr__tau_tr; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_Ca_JSR__Ca_JSR = (-var_q_rel__q_rel + var_q_tr__q_tr) / (1.0 + var_Ca_JSR__CSQN_max * var_Ca_JSR__km_CSQN / pow((var_chaste_interface__Ca_JSR__Ca_JSR + var_Ca_JSR__km_CSQN), 2)); // millimolar / millisecond
        const double var_q_up__X_q_up = 0.5; // dimensionless
        const double var_q_up__dkm_plb_max = 0.00017000000000000001; // millimolar
        const double var_q_up__dkm_plb = var_Ca_MK_act__Ca_MK_act * var_q_up__dkm_plb_max / (var_Ca_MK_act__Ca_MK_act + var_Ca_MK_act__km_Ca_MK); // millimolar
        const double var_q_up__dq_up_Ca_MK_max = 0.75; // dimensionless
        const double var_q_up__dq_up_Ca_MK = var_Ca_MK_act__Ca_MK_act * var_q_up__dq_up_Ca_MK_max / (var_Ca_MK_act__Ca_MK_act + var_Ca_MK_act__km_Ca_MK); // dimensionless
        const double var_q_up__km_up = 0.00092000000000000003; // millimolar
        const double var_q_up__q_up = (1.0 + var_q_up__dq_up_Ca_MK) * var_chaste_interface__Ca_i__Ca_i * var_q_up__X_q_up * NV_Ith_S(mParameters, 2) / (-var_q_up__dkm_plb + var_chaste_interface__Ca_i__Ca_i + var_q_up__km_up); // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_Ca_NSR__Ca_NSR = -var_q_leak__q_leak - var_model_parameters__Vol_jsr * var_q_tr__q_tr / var_model_parameters__Vol_nsr + var_q_up__q_up; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Ca_i__Ca_i = -((-var_q_leak__q_leak + var_q_up__q_up) * var_model_parameters__Vol_nsr / var_model_parameters__Vol_myo - var_Ca_r__q_diff * var_model_parameters__Vol_ss / var_model_parameters__Vol_myo + 0.5 * (-2.0 * var_i_NaCa__i_NaCa + var_background_currents__i_Ca_b + var_i_Ca_p__i_Ca_p) * var_model_parameters__Cm * var_model_parameters__a_cap / (var_model_parameters__F * var_model_parameters__Vol_myo)) * var_Ca_i__b_myo; // millimolar / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_membrane__V = 0.0;
        }
        else
        {
            const double var_i_Ca_T__g_Ca_T = 0.13; // milliS_per_microF
            const double var_i_Ca_T__i_Ca_T = (-50.0 + var_chaste_interface__membrane__V) * var_i_Ca_T__g_Ca_T * var_chaste_interface__i_Ca_T_b_gate__b * var_chaste_interface__i_Ca_T_g_gate__g; // microA_per_microF
            const double var_membrane__i_stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
            const double var_membrane__i_stim = var_membrane__i_stim_converted / HeartConfig::Instance()->GetCapacitance(); // microA_per_microF
            const double var_membrane__i_tot = var_background_currents__i_Ca_b + var_background_currents__i_Cl_b + var_background_currents__i_K_b + var_background_currents__i_Na_b + var_i_Ca_L__i_Ca_L + var_i_Ca_T__i_Ca_T + var_i_Ca_p__i_Ca_p + var_i_K1__i_K1 + var_i_K_p__i_K_p + var_i_Kr__i_Kr + var_i_Ks__i_Ks + var_i_Na__i_Na + var_i_NaCa__i_NaCa + var_i_NaK__i_NaK + var_i_Na_L__i_Na_L + var_i_to_1__i_to_1 + var_i_to_2__i_to_2; // microA_per_microF
            d_dt_chaste_interface_var_membrane__V = -var_membrane__i_stim - var_membrane__i_tot; // millivolt / millisecond
        }
        
        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_membrane__V;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_Ca_i__Ca_i;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_i_Na_m_gate__m;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_i_Na_h_gate__h;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_i_Na_j_gate__j;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_i_Na_L_m_L_gate__m_L;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_i_Na_L_h_L_gate__h_L;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_i_Ca_L_d_gate__d;
        NV_Ith_S(rDY,8) = d_dt_chaste_interface_var_i_Ca_L_f_gate__f;
        NV_Ith_S(rDY,9) = d_dt_chaste_interface_var_i_Ca_L_f2_gate__f2;
        NV_Ith_S(rDY,10) = d_dt_chaste_interface_var_i_Ca_L_f_Ca_gate__f_Ca;
        NV_Ith_S(rDY,11) = d_dt_chaste_interface_var_i_Ca_L_f_Ca2_gate__f_Ca2;
        NV_Ith_S(rDY,12) = d_dt_chaste_interface_var_i_Ca_T_b_gate__b;
        NV_Ith_S(rDY,13) = d_dt_chaste_interface_var_i_Ca_T_g_gate__g;
        NV_Ith_S(rDY,14) = d_dt_chaste_interface_var_i_to_1_a_gate__a;
        NV_Ith_S(rDY,15) = d_dt_chaste_interface_var_i_to_1_i_gate__i;
        NV_Ith_S(rDY,16) = d_dt_chaste_interface_var_i_to_1_i2_gate__i2;
        NV_Ith_S(rDY,17) = d_dt_chaste_interface_var_i_Kr_xr_gate__xr;
        NV_Ith_S(rDY,18) = d_dt_chaste_interface_var_i_Ks_xs1_gate__xs1;
        NV_Ith_S(rDY,19) = d_dt_chaste_interface_var_i_Ks_xs2_gate__xs2;
        NV_Ith_S(rDY,20) = d_dt_chaste_interface_var_i_to_2_a_gate__a;
        NV_Ith_S(rDY,21) = d_dt_chaste_interface_var_intracellular_ion_concentrations__Na_i;
        NV_Ith_S(rDY,22) = d_dt_chaste_interface_var_intracellular_ion_concentrations__Cl_i;
        NV_Ith_S(rDY,23) = d_dt_chaste_interface_var_intracellular_ion_concentrations__K_i;
        NV_Ith_S(rDY,24) = d_dt_chaste_interface_var_Ca_MK_act__Ca_MK_trap;
        NV_Ith_S(rDY,25) = d_dt_chaste_interface_var_Ca_NSR__Ca_NSR;
        NV_Ith_S(rDY,26) = d_dt_chaste_interface_var_Ca_JSR__Ca_JSR;
        NV_Ith_S(rDY,27) = d_dt_chaste_interface_var_Ca_r__Ca_r;
        NV_Ith_S(rDY,28) = d_dt_chaste_interface_var_q_rel_ri_gate__ri;
        NV_Ith_S(rDY,29) = d_dt_chaste_interface_var_q_rel_ro_gate__ro;
    }

    void Cellaslanidi_Purkinje_model_2009FromCellMLCvode::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__Ca_i__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.00022355433459434943
        double var_chaste_interface__i_Na_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.002003390432234504
        double var_chaste_interface__i_Na_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.9786390933308567
        double var_chaste_interface__i_Na_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.09866447258167589
        double var_chaste_interface__i_Na_L_m_L_gate__m_L = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.002003390432234504
        double var_chaste_interface__i_Na_L_h_L_gate__h_L = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.8946968372659203
        double var_chaste_interface__i_Ca_L_d_gate__d = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 2.322223865147363e-06
        double var_chaste_interface__i_Ca_L_f_gate__f = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.9985607329462358
        double var_chaste_interface__i_Ca_L_f2_gate__f2 = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.8173435436674658
        double var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.9610551285529658
        double var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.868690796671854
        double var_chaste_interface__i_Ca_T_b_gate__b = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.0002563937630984438
        double var_chaste_interface__i_Ca_T_g_gate__g = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.9720432601848331
        double var_chaste_interface__i_to_1_a_gate__a = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.0004238729429342389
        double var_chaste_interface__i_to_1_i_gate__i = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.9990935802459496
        double var_chaste_interface__i_to_1_i2_gate__i2 = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.9777368439681764
        double var_chaste_interface__i_Kr_xr_gate__xr = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 0.07084939408222911
        double var_chaste_interface__i_Ks_xs1_gate__xs1 = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 0.0011737654433043125
        double var_chaste_interface__i_Ks_xs2_gate__xs2 = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 0.001179442867470093
        double var_chaste_interface__i_to_2_a_gate__a = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 0.0014909437525000811
        double var_chaste_interface__intracellular_ion_concentrations__Na_i = NV_Ith_S(rY, 21);
        // Units: millimolar; Initial value: 9.927155552932733
        double var_chaste_interface__intracellular_ion_concentrations__Cl_i = NV_Ith_S(rY, 22);
        // Units: millimolar; Initial value: 18.904682470140408
        double var_chaste_interface__intracellular_ion_concentrations__K_i = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 141.9670801746057
        double var_chaste_interface__Ca_MK_act__Ca_MK_trap = NV_Ith_S(rY, 24);
        // Units: dimensionless; Initial value: 8.789168284782809e-06
        double var_chaste_interface__Ca_NSR__Ca_NSR = NV_Ith_S(rY, 25);
        // Units: millimolar; Initial value: 1.2132524695849454
        double var_chaste_interface__Ca_JSR__Ca_JSR = NV_Ith_S(rY, 26);
        // Units: millimolar; Initial value: 1.1433050636518596
        double var_chaste_interface__Ca_r__Ca_r = NV_Ith_S(rY, 27);
        // Units: millimolar; Initial value: 0.00022418117117903934
        double var_chaste_interface__q_rel_ri_gate__ri = NV_Ith_S(rY, 28);
        // Units: dimensionless; Initial value: 0.7802870066567904
        double var_chaste_interface__q_rel_ro_gate__ro = NV_Ith_S(rY, 29);
        // Units: dimensionless; Initial value: 1.2785734760674763e-09
        const double var_x0 = exp(9.9999999999999995e-8);
        const double var_x1 = 1 / (-1.0 + var_x0);
        const double var_x2 = -0.34100000000000003 * NV_Ith_S(mParameters, 4);
        const double var_x3 = var_chaste_interface__Ca_i__Ca_i;
        const double var_x4 = var_x1 * (var_x2 + var_x0 * var_x3);
        const double var_x5 = exp(-9.9999999999999995e-8);
        const double var_x6 = 1 / (-1.0 + var_x5);
        const double var_x7 = var_x6 * (var_x2 + var_x3 * var_x5);
        const double var_x8 = fabs(var_chaste_interface__membrane__V);
        const double var_x9 = var_x8 < 1.3356169352749131e-6;
        const double var_x10 = 0.074871767015605231 * var_chaste_interface__membrane__V;
        const double var_x11 = exp(var_x10);
        const double var_x12 = var_x2 + var_x11 * var_x3;
        const double var_x13 = -1.0 + var_x11;
        const double var_x14 = 1 / var_x13;
        const double var_x15 = 0.0028824983370007683 * var_x14;
        const double var_x16 = var_x12 * var_x15;
        const double var_x17 = var_x11 * var_chaste_interface__membrane__V;
        const double var_x18 = 0.00021581774391079108 * var_x17;
        const double var_x19 = ((var_x9) ? (0.0014412491685003841 * var_x4 + 0.0014412491685003841 * var_x7) : (var_x16 + var_x14 * var_x18 * var_chaste_interface__Ca_i__Ca_i - var_x12 * var_x18 / pow(var_x13, 2)));
        const double var_x20 = exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V);
        const double var_x21 = 1.0 + var_x20;
        const double var_x22 = 1 / var_x21;
        const double var_x23 = 1 / var_chaste_interface__intracellular_ion_concentrations__K_i;
        const double var_x24 = log(var_x23 * NV_Ith_S(mParameters, 5));
        const double var_x25 = 26.712338705498265 * var_x24;
        const double var_x26 = -var_x25 + var_chaste_interface__membrane__V;
        const double var_x27 = exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 6.3708927812613361 * var_x24);
        const double var_x28 = 1.0 + var_x27;
        const double var_x29 = var_x27 / pow(var_x28, 2);
        const double var_x30 = sqrt(NV_Ith_S(mParameters, 5));
        const double var_x31 = 1 / var_x28;
        const double var_x32 = exp(-2.4444678999999998 + 13.738155796237757 * var_x24 - 0.51429999999999998 * var_chaste_interface__membrane__V);
        const double var_x33 = 1.0 + var_x32;
        const double var_x34 = 1 / var_x33;
        const double var_x35 = exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 2.1455350448256207 * var_x24);
        const double var_x36 = exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 1.6494869150645177 * var_x24);
        const double var_x37 = var_x36 + 0.49124000000000001 * var_x35;
        const double var_x38 = var_x34 * var_x37;
        const double var_x39 = var_x30 * NV_Ith_S(mParameters, 11) / (var_x38 + 1.02 * var_x31);
        const double var_x40 = var_x29 * var_x39;
        const double var_x41 = var_x32 * var_x37 / pow(var_x33, 2);
        const double var_x42 = 0.24326999999999999 * var_x29 - 0.51429999999999998 * var_x41 - var_x34 * (0.061749999999999999 * var_x36 + 0.039456396800000001 * var_x35);
        const double var_x43 = var_x30 * var_x31 * NV_Ith_S(mParameters, 11) / pow((var_x31 + 0.98039215686274506 * var_x38), 2);
        const double var_x44 = 0.42189361069797565 * var_x43;
        const double var_x45 = 1 / (1.0 - var_x0);
        const double var_x46 = -100.0 * var_x0 + var_chaste_interface__intracellular_ion_concentrations__Cl_i;
        const double var_x47 = 1 / (1.0 - var_x5);
        const double var_x48 = -100.0 * var_x5 + var_chaste_interface__intracellular_ion_concentrations__Cl_i;
        const double var_x49 = var_x8 < 2.6712338705498262e-6;
        const double var_x50 = 0.037435883507802616 * var_chaste_interface__membrane__V;
        const double var_x51 = exp(var_x50);
        const double var_x52 = -100.0 * var_x51 + var_chaste_interface__intracellular_ion_concentrations__Cl_i;
        const double var_x53 = 1.0 - var_x51;
        const double var_x54 = 1 / var_x53;
        const double var_x55 = 0.0014448004881001341 * var_x54;
        const double var_x56 = var_x52 * var_x55;
        const double var_x57 = var_x51 * var_chaste_interface__membrane__V;
        const double var_x58 = ((var_x49) ? (0.00072240024405006704 * var_x45 * var_x46 + 0.00072240024405006704 * var_x47 * var_x48) : (var_x56 - 0.0054087382764532984 * var_x54 * var_x57 + 5.4087382764532986e-5 * var_x52 * var_x57 / pow(var_x53, 2)));
        const double var_x59 = 20.0 * var_chaste_interface__i_to_2_a_gate__a;
        const double var_x60 = pow(var_chaste_interface__i_Na_L_m_L_gate__m_L, 3);
        const double var_x61 = 0.037374999999999999 * var_x60;
        const double var_x62 = (-0.20000000000000001 * var_chaste_interface__i_to_1_i2_gate__i2 - 0.80000000000000004 * var_chaste_interface__i_to_1_i_gate__i) * NV_Ith_S(mParameters, 15);
        const double var_x63 = var_x62 * var_chaste_interface__i_to_1_a_gate__a;
        const double var_x64 = 0.20000000000000001 * var_chaste_interface__i_Na_j_gate__j + 0.80000000000000004 * var_chaste_interface__i_Na_h_gate__h;
        const double var_x65 = pow(var_chaste_interface__i_Na_m_gate__m, 3) * NV_Ith_S(mParameters, 8);
        const double var_x66 = var_x64 * var_x65;
        const double var_x67 = var_x20 * var_x26 / pow(var_x21, 2);
        const double var_x68 = 1 / var_chaste_interface__Ca_i__Ca_i;
        const double var_x69 = pow(var_x68, 1.3999999999999999);
        const double var_x70 = 1.0 + 6.4818210260626455e-7 * var_x69;
        const double var_x71 = 1 / var_x70;
        const double var_x72 = -1.0 - 0.59999999999999998 * var_x71;
        const double var_x73 = NV_Ith_S(mParameters, 13) * var_chaste_interface__i_Ks_xs2_gate__xs2;
        const double var_x74 = var_x72 * var_x73;
        const double var_x75 = var_x74 * var_chaste_interface__i_Ks_xs1_gate__xs1;
        const double var_x76 = exp(-0.024333324280071702 * var_chaste_interface__membrane__V);
        const double var_x77 = pow(NV_Ith_S(mParameters, 6), 3);
        const double var_x78 = var_x77 * var_chaste_interface__Ca_i__Ca_i;
        const double var_x79 = pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3);
        const double var_x80 = var_x79 * NV_Ith_S(mParameters, 4);
        const double var_x81 = NV_Ith_S(mParameters, 14) * exp(0.013102559227730915 * var_chaste_interface__membrane__V);
        const double var_x82 = var_x80 * var_x81;
        const double var_x83 = 1.0 + 0.27000000000000002 * var_x76;
        const double var_x84 = 1 / var_x83;
        const double var_x85 = 1.0 + 6.9444444444444451e-9 / pow(var_chaste_interface__Ca_i__Ca_i, 2);
        const double var_x86 = 1 / var_x85;
        const double var_x87 = 1.5 * var_x77;
        const double var_x88 = var_x87 * var_chaste_interface__Ca_i__Ca_i;
        const double var_x89 = var_x77 * (1.0 + 0.081300813008130079 * var_chaste_interface__intracellular_ion_concentrations__Na_i);
        const double var_x90 = (1.0 + 416.66666666666669 * var_chaste_interface__Ca_i__Ca_i) * NV_Ith_S(mParameters, 4);
        const double var_x91 = 1 / (var_x80 + var_x88 + 1004882.8125 * var_chaste_interface__Ca_i__Ca_i + 0.0035999999999999999 * var_x89 + 1.3 * var_x79 + 1860.8670000000004 * var_x90);
        const double var_x92 = var_x86 * var_x91;
        const double var_x93 = var_x84 * var_x92;
        const double var_x94 = var_x93 * (0.0052410236910923665 * var_x82 + 0.036499986420107551 * var_x76 * var_x78);
        const double var_x95 = exp(-0.26470588235294124 + 0.049019607843137261 * var_chaste_interface__membrane__V);
        const double var_x96 = 1.0 + var_x95;
        const double var_x97 = var_x30 * NV_Ith_S(mParameters, 12) / var_x96;
        const double var_x98 = 0.43033148291193518 * var_x97;
        const double var_x99 = var_x31 * var_x39;
        const double var_x100 = -0.4389381125701739 * var_x99;
        const double var_x101 = pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 2);
        const double var_x102 = 1 / var_x101;
        const double var_x103 = exp(-0.003743588350780262 * var_chaste_interface__membrane__V);
        const double var_x104 = exp(0.01485884101040119 * NV_Ith_S(mParameters, 6));
        const double var_x105 = exp(-var_x50);
        const double var_x106 = 1.0 + 0.1245 * var_x103 + 0.036499999999999998 * var_x105 * (-0.14285714285714285 + 0.14285714285714285 * var_x104);
        const double var_x107 = NV_Ith_S(mParameters, 5) / (1.5 + NV_Ith_S(mParameters, 5));
        const double var_x108 = var_x107 * (0.00046607674967214262 * var_x103 + 0.037435883507802616 * var_x105 * (-0.0052142857142857138 + 0.0052142857142857138 * var_x104)) / (pow(var_x106, 2) * (1.0 + 100.0 * var_x102));
        const double var_x109 = 0.40000000000000002 * var_x82 - var_x76 * var_x88;
        const double var_x110 = var_x109 * var_x76 * var_x92 / pow(var_x83, 2);
        const double var_x111 = var_x26 * var_x30 * var_x95 * NV_Ith_S(mParameters, 12) * var_chaste_interface__i_Kr_xr_gate__xr / pow(var_x96, 2);
        const double var_x112 = exp(9.9999999999770198e-8);
        const double var_x113 = 1 / (-1.0 + var_x112);
        const double var_x114 = var_chaste_interface__Ca_r__Ca_r;
        const double var_x115 = var_x113 * (var_x2 + var_x112 * var_x114);
        const double var_x116 = exp(-9.9999999999770198e-8);
        const double var_x117 = 1 / (-1.0 + var_x116);
        const double var_x118 = var_x117 * (var_x2 + var_x114 * var_x116);
        const double var_x119 = -15.0 + var_chaste_interface__membrane__V;
        const double var_x120 = fabs(var_x119) < 1.3356169352718439e-6;
        const double var_x121 = exp(-1.1230765052340785 + var_x10);
        const double var_x122 = var_x2 + var_x114 * var_x121;
        const double var_x123 = -1.0 + var_x121;
        const double var_x124 = 1 / var_x123;
        const double var_x125 = 3.510865186083326 * var_x124;
        const double var_x126 = var_x122 * var_x125;
        const double var_x127 = var_x119 * var_x121;
        const double var_x128 = 0.26286468023563031 * var_x127;
        const double var_x129 = pow(var_x123, (-2));
        const double var_x130 = var_x122 * var_x129;
        const double var_x131 = ((var_x120) ? (1.755432593041663 * var_x115 + 1.755432593041663 * var_x118) : (var_x126 - var_x128 * var_x130 + var_x124 * var_x128 * var_chaste_interface__Ca_r__Ca_r)) * NV_Ith_S(mParameters, 7);
        const double var_x132 = var_chaste_interface__i_Ca_L_d_gate__d * var_chaste_interface__i_Ca_L_f2_gate__f2 * var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca * var_chaste_interface__i_Ca_L_f_gate__f;
        const double var_x133 = var_x132 * var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2;
        const double var_x134 = var_x131 * var_x133;
        const double var_x135 = 3.8499135947999997e-9 * var_x5 * var_x6;
        const double var_x136 = ((var_x9) ? (-var_x135 + (0.5 + 374358.83507802623 * var_chaste_interface__membrane__V) * (var_x135 + 3.8499135947999997e-9 * var_x0 * var_x1)) : (var_x15 * var_x17));
        const double var_x137 = 0.00050000000000000001 + var_chaste_interface__Ca_i__Ca_i;
        const double var_x138 = 1 / var_x137;
        const double var_x139 = pow(var_x137, (-2));
        const double var_x140 = var_x139 * var_chaste_interface__Ca_i__Ca_i;
        const double var_x141 = var_x76 * var_x93;
        const double var_x142 = -1004882.8125 - var_x87 - 775361.25000000012 * NV_Ith_S(mParameters, 4);
        const double var_x143 = var_x109 * var_x84;
        const double var_x144 = var_x143 * var_x86 / pow((1.2936831875607387e-6 * var_x79 + 0.0018518248862973764 * var_x90 + 1.4927113702623908e-6 * var_x78 + 9.9514091350826051e-7 * var_x80 + 3.5825072886297377e-9 * var_x89 + var_chaste_interface__Ca_i__Ca_i), 2);
        const double var_x145 = 9.9030543773805519e-13 * var_x144;
        const double var_x146 = var_x143 * var_x91 / (pow(var_x85, 2) * pow(var_chaste_interface__Ca_i__Ca_i, 3));
        const double var_x147 = 1 / (0.018329999999999999 * var_chaste_interface__intracellular_ion_concentrations__Na_i + var_chaste_interface__intracellular_ion_concentrations__K_i);
        const double var_x148 = -26.712338705498265 * log(var_x147 * (0.018329999999999999 * NV_Ith_S(mParameters, 6) + NV_Ith_S(mParameters, 5))) + var_chaste_interface__membrane__V;
        const double var_x149 = var_x148 * var_chaste_interface__i_Ks_xs1_gate__xs1;
        const double var_x150 = var_x149 * var_x68 * var_x69 * var_x73 / pow(var_x70, 2);
        const double var_x151 = 1 / var_chaste_interface__intracellular_ion_concentrations__Na_i;
        const double var_x152 = log(var_x151 * NV_Ith_S(mParameters, 6));
        const double var_x153 = -26.712338705498265 * var_x152 + var_chaste_interface__membrane__V;
        const double var_x154 = var_x64 * pow(var_chaste_interface__i_Na_m_gate__m, 2) * NV_Ith_S(mParameters, 8);
        const double var_x155 = var_x153 * var_x65;
        const double var_x156 = var_x153 * pow(var_chaste_interface__i_Na_L_m_L_gate__m_L, 2) * var_chaste_interface__i_Na_L_h_L_gate__h_L;
        const double var_x157 = -14.999998664383064 + var_chaste_interface__membrane__V;
        const double var_x158 = 4.6891709999892238e-6 * var_x118;
        const double var_x159 = var_x157 * (var_x158 + 4.6891709999892238e-6 * var_x115);
        const double var_x160 = ((var_x120) ? (-var_x158 + 374358.83507888648 * var_x159) : (var_x119 * var_x126)) * NV_Ith_S(mParameters, 7);
        const double var_x161 = var_x160 * var_chaste_interface__i_Ca_L_f2_gate__f2 * var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 * var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca;
        const double var_x162 = var_x161 * var_chaste_interface__i_Ca_L_f_gate__f;
        const double var_x163 = var_x161 * var_chaste_interface__i_Ca_L_d_gate__d;
        const double var_x164 = var_x160 * var_chaste_interface__i_Ca_L_d_gate__d * var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 * var_chaste_interface__i_Ca_L_f_gate__f;
        const double var_x165 = var_x164 * var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca;
        const double var_x166 = var_x164 * var_chaste_interface__i_Ca_L_f2_gate__f2;
        const double var_x167 = var_x132 * var_x160;
        const double var_x168 = 6.5 - 0.13 * var_chaste_interface__membrane__V;
        const double var_x169 = NV_Ith_S(mParameters, 15) * var_chaste_interface__i_to_1_a_gate__a;
        const double var_x170 = var_x149 * NV_Ith_S(mParameters, 13);
        const double var_x171 = 3.8593999999999993e-9 * var_x45;
        const double var_x172 = 3.8593999999999993e-9 * var_x47;
        const double var_x173 = var_x172 * var_x48;
        const double var_x174 = ((var_x49) ? (-var_x173 + 187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (var_x173 + var_x171 * var_x46)) : (var_x56 * var_chaste_interface__membrane__V));
        const double var_x175 = var_x60 * var_chaste_interface__i_Na_L_h_L_gate__h_L;
        const double var_x176 = var_x151 * var_x175;
        const double var_x177 = var_x151 * var_x66;
        const double var_x178 = var_x147 * var_x75;
        const double var_x179 = var_x101 * NV_Ith_S(mParameters, 4);
        const double var_x180 = -3 * var_x179 - 3.9000000000000004 * var_x101 - 0.00029268292682926828 * var_x77;
        const double var_x181 = var_x107 / (var_x106 * var_x79 * pow((0.01 + var_x102), 2));
        const double var_x182 = var_x179 * var_x81 * var_x93;
        const double var_x183 = 1 / var_chaste_interface__intracellular_ion_concentrations__Cl_i;
        const double var_x184 = ((var_x49) ? (-var_x172 + (0.5 + 187179.41753901311 * var_chaste_interface__membrane__V) * (var_x171 + var_x172)) : (var_x55 * var_chaste_interface__membrane__V));
        const double var_x185 = var_x23 * var_x29;
        const double var_x186 = 6.4983106368865622 * var_x185 - var_x34 * (1.053972635420138 * var_x23 * var_x35 + 1.6494869150645177 * var_x23 * var_x36) - 13.738155796237757 * var_x23 * var_x41;
        const double var_x187 = var_x185 * var_x39;
        const double var_x188 = 26.712338705498265 * var_x23;
        const double var_x189 = var_x22 * var_x23;
        const double var_x190 = var_x97 * var_chaste_interface__i_Kr_xr_gate__xr;
        const double var_x191 = var_x190 * var_x23;
        const double var_x192 = var_x116 * var_x117;
        const double var_x193 = 4.6891709999892238e-6 * var_x192;
        const double var_x194 = var_x193 + 4.6891709999892238e-6 * var_x112 * var_x113;
        const double var_x195 = ((var_x120) ? (-var_x193 + var_x194 * (-5615382.0261832969 + 374358.83507888648 * var_chaste_interface__membrane__V)) : (var_x125 * var_x127)) * NV_Ith_S(mParameters, 7);
        const double var_x196 = var_x133 * var_x195;
        const double var_x197 = 0.14000000000000001 * var_x139;
        const double var_x198 = 0.0023800000000000002 + var_chaste_interface__Ca_i__Ca_i;
        const double var_x199 = 0.10000000000000001 / pow(var_x198, 2);
        const double var_x200 = 1.0 + var_x197 * var_chaste_interface__Ca_i__Ca_i + var_x199 * var_chaste_interface__Ca_i__Ca_i;
        const double var_x201 = 1 / var_x200;
        const double var_x202 = var_x201;
        const double var_x203 = 1.9455934936549115e-10 * var_x138;
        const double var_x204 = 1.0 - var_chaste_interface__Ca_MK_act__Ca_MK_trap;
        const double var_x205 = 1 / var_chaste_interface__Ca_r__Ca_r;
        const double var_x206 = 1.0 + 0.14999999999999999 * var_x205;
        const double var_x207 = 1 / var_x206;
        const double var_x208 = 0.050000000000000003 * var_x207;
        const double var_x209 = var_x204 * var_x208;
        const double var_x210 = 0.14999999999999999 + var_x209 + var_chaste_interface__Ca_MK_act__Ca_MK_trap;
        const double var_x211 = 1 / var_x210;
        const double var_x212 = var_x209 + var_chaste_interface__Ca_MK_act__Ca_MK_trap;
        const double var_x213 = var_x211 * var_x212;
        const double var_x214 = 0.00092000000000000003 - 0.00017000000000000001 * var_x213 + var_chaste_interface__Ca_i__Ca_i;
        const double var_x215 = 1 / var_x214;
        const double var_x216 = (1.0 + 0.75 * var_x213) * NV_Ith_S(mParameters, 2);
        const double var_x217 = var_x215 * var_x216;
        const double var_x218 = 0.04058823529411764 * var_x217;
        const double var_x219 = 0.04058823529411764 * var_chaste_interface__Ca_i__Ca_i;
        const double var_x220 = var_x216 / pow(var_x214, 2);
        const double var_x221 = var_x219 * var_x220;
        const double var_x222 = var_x141 * var_x77;
        const double var_x223 = 6.7016758831103969e-21 * var_x144;
        const double var_x224 = 3.8499135947999997e-9 * var_x7;
        const double var_x225 = 0.005411764705882352 * NV_Ith_S(mParameters, 0);
        const double var_x226 = 1 - var_x208;
        const double var_x227 = var_x211 * var_x226;
        const double var_x228 = var_x212 / pow(var_x210, 2);
        const double var_x229 = var_x228 * (-1.0 + var_x208);
        const double var_x230 = 0.75 * var_x227 + 0.75 * var_x229;
        const double var_x231 = var_x215 * NV_Ith_S(mParameters, 2);
        const double var_x232 = var_x219 * var_x231;
        const double var_x233 = 0.00017000000000000001 * var_x227 + 0.00017000000000000001 * var_x229;
        const double var_x234 = pow(var_chaste_interface__Ca_r__Ca_r, (-2));
        const double var_x235 = var_x204 * var_x234 / pow(var_x206, 2);
        const double var_x236 = var_x211 * var_x235;
        const double var_x237 = var_x228 * var_x235;
        const double var_x238 = 0.0056249999999999998 * var_x236 - 0.0056249999999999998 * var_x237;
        const double var_x239 = 1.2750000000000001e-6 * var_x236 - 1.2750000000000001e-6 * var_x237;
        const double var_x240 = exp(-0.090909090909090912 * var_chaste_interface__membrane__V);
        const double var_x241 = 0.080000000000000002 * var_x240;
        const double var_x242 = 1 / (1.0 - exp(-1.0000000000287557e-7));
        const double var_x243 = 3.200000000092018e-7 * var_x242;
        const double var_x244 = 1 / (1.0 - exp(1.0000000000287557e-7));
        const double var_x245 = 47.130000000000003 + var_chaste_interface__membrane__V;
        const double var_x246 = fabs(var_x245) < 1.0000000000287557e-6;
        const double var_x247 = -0.10000000000000001 * var_chaste_interface__membrane__V;
        const double var_x248 = exp(-4.7130000000000001 + var_x247);
        const double var_x249 = 1.0 - var_x248;
        const double var_x250 = 0.32000000000000001 / var_x249;
        const double var_x251 = ((var_x246) ? (var_x243 - 499999.99998562218 * (47.129999000000005 + var_chaste_interface__membrane__V) * (-var_x243 - 3.200000000092018e-7 * var_x244)) : (var_x245 * var_x250));
        const double var_x252 = var_x241 + var_x251;
        const double var_x253 = 1 / var_x252;
        const double var_x254 = var_x251 * var_x253;
        const double var_x255 = ((var_x246) ? (0.16 * var_x242 + 0.16 * var_x244) : (var_x250 - 0.032000000000000001 * var_x245 * var_x248 / pow(var_x249, 2)));
        const double var_x256 = 0.0072727272727272727 * var_x240;
        const double var_x257 = -var_x256 + var_x255;
        const double var_x258 = var_x251;
        const double var_x259 = (var_x241 + var_x258) * (var_x253 * var_x255 + var_x251 * (var_x256 - var_x255) / pow(var_x252, 2));
        const double var_x260 = -var_x241 - var_x258;
        const double var_x261 = exp(-11.764705882352942 + 0.14705882352941177 * NV_Ith_S(mParameters, 10) - 0.14705882352941177 * var_chaste_interface__membrane__V);
        const double var_x262 = var_chaste_interface__membrane__V < -40.0;
        const double var_x263 = ((var_x262) ? (0.13500000000000001 * var_x261) : (0));
        const double var_x264 = var_x263;
        const double var_x265 = exp(0.34999999999999998 * var_chaste_interface__membrane__V - 0.34999999999999998 * NV_Ith_S(mParameters, 10));
        const double var_x266 = exp(0.079000000000000001 * var_chaste_interface__membrane__V - 0.079000000000000001 * NV_Ith_S(mParameters, 10));
        const double var_x267 = exp(-0.96036036036036043 + 0.0900900900900901 * NV_Ith_S(mParameters, 10) - 0.0900900900900901 * var_chaste_interface__membrane__V);
        const double var_x268 = 1.0 + var_x267;
        const double var_x269 = ((var_x262) ? (310000.0 * var_x265 + 3.5600000000000001 * var_x266) : (7.6923076923076916 / var_x268));
        const double var_x270 = var_x269;
        const double var_x271 = ((var_x262) ? (-0.019852941176470591 * var_x261) : (0));
        const double var_x272 = var_x263 + var_x269;
        const double var_x273 = 0.01 * NV_Ith_S(mParameters, 9);
        const double var_x274 = 1.0 - var_x273;
        const double var_x275 = var_x274 / var_x272;
        const double var_x276 = ((var_x262) ? (0.28123999999999999 * var_x266 + 108500.0 * var_x265) : (0.693000693000693 * var_x267 / pow(var_x268, 2)));
        const double var_x277 = exp(-5.5312920000000005 + 0.13780000000000001 * NV_Ith_S(mParameters, 10) - 0.13780000000000001 * var_chaste_interface__membrane__V);
        const double var_x278 = 1.0 + var_x277;
        const double var_x279 = exp(0.01052 * NV_Ith_S(mParameters, 10) - 0.01052 * var_chaste_interface__membrane__V);
        const double var_x280 = var_x279 / var_x278;
        const double var_x281 = exp(-3.2000000000000002 + var_x247 + 0.10000000000000001 * NV_Ith_S(mParameters, 10));
        const double var_x282 = 1.0 + var_x281;
        const double var_x283 = exp(2.5349999999999999e-7 * NV_Ith_S(mParameters, 10) - 2.5349999999999999e-7 * var_chaste_interface__membrane__V);
        const double var_x284 = var_x283 / var_x282;
        const double var_x285 = ((var_x262) ? (0.1212 * var_x280) : (0.29999999999999999 * var_x284));
        const double var_x286 = var_x285;
        const double var_x287 = 37.780000000000001 + var_chaste_interface__membrane__V;
        const double var_x288 = exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V - 0.311 * NV_Ith_S(mParameters, 10));
        const double var_x289 = 1.0 + var_x288;
        const double var_x290 = 1 / var_x289;
        const double var_x291 = exp(0.24440000000000001 * var_chaste_interface__membrane__V - 0.24440000000000001 * NV_Ith_S(mParameters, 10));
        const double var_x292 = exp(0.043909999999999998 * NV_Ith_S(mParameters, 10) - 0.043909999999999998 * var_chaste_interface__membrane__V);
        const double var_x293 = -127140.0 * var_x291 - 3.4740000000000003e-5 * var_x292;
        const double var_x294 = var_x290 * var_x293;
        const double var_x295 = ((var_x262) ? (var_x287 * var_x294) : (0));
        const double var_x296 = var_x295;
        const double var_x297 = ((var_x262) ? (var_x294 + var_x287 * var_x290 * (1.5254334000000001e-6 * var_x292 - 31073.016 * var_x291) - 0.311 * var_x287 * var_x288 * var_x293 / pow(var_x289, 2)) : (0));
        const double var_x298 = var_x285 + var_x295;
        const double var_x299 = var_x274 / var_x298;
        const double var_x300 = ((var_x262) ? (-0.001275024 * var_x280 + 0.016701360000000002 * var_x277 * var_x279 / pow(var_x278, 2)) : (-7.6049999999999996e-8 * var_x284 + 0.029999999999999999 * var_x281 * var_x283 / pow(var_x282, 2)));
        const double var_x301 = 0.16393442622950821 * var_chaste_interface__membrane__V;
        const double var_x302 = exp(11.311475409836067 + var_x301);
        const double var_x303 = 1.0 + var_x302;
        const double var_x304 = exp(-4.166666666666667 - 0.16666666666666666 * var_chaste_interface__membrane__V);
        const double var_x305 = 1.0 + var_x304;
        const double var_x306 = 1 / var_x305;
        const double var_x307 = 1 / (175.0 + 125.0 * var_x306);
        const double var_x308 = exp(1.7160000000000002 + 0.13200000000000001 * var_chaste_interface__membrane__V);
        const double var_x309 = 1.0 + var_x308;
        const double var_x310 = exp(0.67599999999999993 + 0.051999999999999998 * var_chaste_interface__membrane__V);
        const double var_x311 = var_x310 / var_x309;
        const double var_x312 = exp(0.59347181008902072 - 0.14836795252225518 * var_chaste_interface__membrane__V);
        const double var_x313 = 1.0 + var_x312;
        const double var_x314 = 1 / (0.58999999999999997 + 0.80000000000000004 * var_x311);
        const double var_x315 = pow((-1 + 0.40000000000000002 * var_chaste_interface__membrane__V), 2);
        const double var_x316 = 0.10000000000000001 * var_chaste_interface__membrane__V;
        const double var_x317 = exp(1.8 + var_x316);
        const double var_x318 = 1.0 + var_x317;
        const double var_x319 = 1 / var_x318;
        const double var_x320 = 1 / (4.0 + 0.03125 * var_x315);
        const double var_x321 = 0.10000000000000001 * var_x317 / pow(var_x318, 2);
        const double var_x322 = pow((-1 + 0.053763440860215048 * var_chaste_interface__membrane__V), 2);
        const double var_x323 = 1 / (38.0 + 24.217200000000005 * var_x322);
        const double var_x324 = 1 / (1.0 + 333.33333333333331 * var_chaste_interface__Ca_r__Ca_r);
        const double var_x325 = 10.0 * var_x213;
        const double var_x326 = 1 / (0.5 + var_x325 + var_x324);
        const double var_x327 = var_x162 * var_chaste_interface__i_Ca_L_d_gate__d;
        const double var_x328 = -var_x327;
        const double var_x329 = 0.014999999999999999 / pow((0.050000000000000003 + var_x328), 2);
        const double var_x330 = var_x326 * var_x329;
        const double var_x331 = -10.0 * var_x227 - 10.0 * var_x229;
        const double var_x332 = 0.01 * (0.14999999999999999 - var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca + 0.55000000000000004 * var_x324 + 0.29999999999999999 / (1.0 - 20.0 * var_x327)) / pow((0.050000000000000003 + var_x213 + 0.10000000000000001 * var_x324), 2);
        const double var_x333 = pow((0.0030000000000000001 + var_chaste_interface__Ca_r__Ca_r), (-2));
        const double var_x334 = 0.074999999999999997 * var_x237 - 0.074999999999999997 * var_x236;
        const double var_x335 = exp(-4.375 - 25.0 * var_x327);
        const double var_x336 = 1.0 + var_x335;
        const double var_x337 = 1 / var_x336;
        const double var_x338 = 1 / (125.0 + 300.0 * var_x337);
        const double var_x339 = 0.01 / pow((0.01 + var_x328), 2);
        const double var_x340 = var_x338 * var_x339;
        const double var_x341 = 0.083333333333333329 * var_x335 * (-var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 + 1 / (1.0 - 100.0 * var_x327)) / (pow(var_x336, 2) * pow((0.41666666666666669 + var_x337), 2));
        const double var_x342 = exp(-5.4098360655737707 - var_x301);
        const double var_x343 = 1.0 + var_x342;
        const double var_x344 = 0.033333333333333333 * var_chaste_interface__membrane__V;
        const double var_x345 = exp(0.54333333333333333 + var_x344);
        const double var_x346 = exp(-0.54333333333333333 - var_x344);
        const double var_x347 = 1.0680000000000001 * var_x345;
        const double var_x348 = 1.0680000000000001 * var_x346;
        const double var_x349 = exp(9.0909090909090917 + 0.15151515151515152 * var_chaste_interface__membrane__V);
        const double var_x350 = 1.0 + var_x349;
        const double var_x351 = exp(4.6558441558441563 + 0.064935064935064929 * var_chaste_interface__membrane__V);
        const double var_x352 = exp(-0.86074429771908767 - 0.012004801920768308 * var_chaste_interface__membrane__V);
        const double var_x353 = 0.014999999999999999 * var_x351;
        const double var_x354 = 0.014999999999999999 * var_x352;
        const double var_x355 = 0.050000000000000003 * var_chaste_interface__membrane__V;
        const double var_x356 = exp(-2.7000000000000002 - var_x355);
        const double var_x357 = 1.0 + var_x356;
        const double var_x358 = var_x356 / var_x357;
        const double var_x359 = 25.0 * var_x358;
        const double var_x360 = exp(-3.7999999999999998 + var_x355);
        const double var_x361 = 1.0 + var_x360;
        const double var_x362 = var_x360 / var_x361;
        const double var_x363 = 25.0 * var_x362;
        const double var_x364 = var_x359 + var_x363;
        const double var_x365 = 1 / var_x364;
        const double var_x366 = 1.25 * pow(var_x356, 2) / pow(var_x357, 2);
        const double var_x367 = 1.25 * var_x362;
        const double var_x368 = 1.25 * var_x358;
        const double var_x369 = 1.25 * pow(var_x360, 2) / pow(var_x361, 2);
        const double var_x370 = exp(-1.6499999999999999 + var_x316);
        const double var_x371 = 1.0 + var_x370;
        const double var_x372 = 1 / var_x371;
        const double var_x373 = 1 / (6.0 + 5.0 * var_x372);
        const double var_x374 = 0.066666666666666666 * var_chaste_interface__membrane__V;
        const double var_x375 = exp(1.6666666666666667 + var_x374);
        const double var_x376 = 1.0 + var_x375;
        const double var_x377 = 1 / var_x376;
        const double var_x378 = exp(-2.6666666666666665 + var_x374);
        const double var_x379 = 1.0 + var_x378;
        const double var_x380 = var_x378 / var_x379;
        const double var_x381 = 0.002 * var_x375 / pow(var_x376, 2);
        const double var_x382 = 0.029999999999999999 * var_x377;
        const double var_x383 = 1 / (var_x382 + 0.10000000000000001 * var_x380);
        const double var_x384 = exp(-2.5 + var_x316);
        const double var_x385 = 1.0 + var_x384;
        const double var_x386 = 1 / var_x385;
        const double var_x387 = 1 / (21.5 + 30.0 * var_x386);
        const double var_x388 = exp(1.7333333333333334 + var_x374);
        const double var_x389 = 1.0 + var_x388;
        const double var_x390 = 1 / var_x389;
        const double var_x391 = exp(-0.66666666666666663 + var_x374);
        const double var_x392 = 1.0 + var_x391;
        const double var_x393 = var_x391 / var_x392;
        const double var_x394 = 0.00029466666666666671 * var_x388 / pow(var_x389, 2);
        const double var_x395 = 0.0044200000000000003 * var_x390;
        const double var_x396 = 1 / (var_x395 + 0.050000000000000003 * var_x393);
        const double var_x397 = exp(-0.0069387755102040824 - 0.081632653061224483 * var_chaste_interface__membrane__V);
        const double var_x398 = 1.0 + var_x397;
        const double var_x399 = exp(0.20000000000000001 * var_chaste_interface__membrane__V);
        const double var_x400 = 1.0 + var_x399;
        const double var_x401 = 1 / var_x400;
        const double var_x402 = 1 / (100.0 + 900.0 * var_x401);
        const double var_x403 = exp(0.65693430656934315 - 0.072992700729927015 * var_chaste_interface__membrane__V);
        const double var_x404 = 1.0 + var_x403;
        const double var_x405 = 1 / var_x404;
        const double var_x406 = 1 / (-1.0 + exp(-9.999999999987797e-8));
        const double var_x407 = 1 / (-1.0 + exp(9.9999999999988984e-8));
        const double var_x408 = exp(-444.66200000000003 - 9.9700000000000006 * var_chaste_interface__membrane__V);
        const double var_x409 = 1.0 - var_x408;
        const double var_x410 = 1 / var_x409;
        const double var_x411 = 7.6100000000000007e-5 * var_x410;
        const double var_x412 = 44.600000000000001 + var_chaste_interface__membrane__V;
        const double var_x413 = var_x408 * var_x412 / pow(var_x409, 2);
        const double var_x414 = var_x411 - 0.00075871700000000012 * var_x413;
        const double var_x415 = -0.55000000000000004 + var_chaste_interface__membrane__V;
        const double var_x416 = fabs(var_x415) < 7.8124999999948028e-7;
        const double var_x417 = 1 / (1.0 - exp(9.9999999875755032e-8));
        const double var_x418 = 1 / (1.0 - exp(-9.9999999875755032e-8));
        const double var_x419 = exp(-0.070400000000000004 + 0.128 * var_chaste_interface__membrane__V);
        const double var_x420 = -1.0 + var_x419;
        const double var_x421 = 1 / var_x420;
        const double var_x422 = 0.00036000000000000002 * var_x421;
        const double var_x423 = var_x415 * var_x419 / pow(var_x420, 2);
        const double var_x424 = var_x422 - 4.6080000000000006e-5 * var_x423;
        const double var_x425 = fabs(var_x412) < 1.0030090258350555e-8;
        const double var_x426 = 2.8124999999965681e-10 * var_x406;
        const double var_x427 = var_x411 * var_x412;
        const double var_x428 = (-0.54999921875000002 + var_chaste_interface__membrane__V) * (var_x426 + 2.8124999999996902e-10 * var_x407);
        const double var_x429 = 7.6328986866047728e-13 * var_x418;
        const double var_x430 = var_x415 * var_x422;
        const double var_x431 = (44.599999989969909 + var_chaste_interface__membrane__V) * (-var_x429 - 7.6328986866047728e-13 * var_x417);
        const double var_x432 = ((var_x416) ? (var_x427 - var_x426 + 640000.00000042573 * var_x428) : ((var_x425) ? (var_x429 + var_x430 - 49850000.061936118 * var_x431) : (var_x427 + var_x430)));
        const double var_x433 = 0.072992700729927015 * var_x403 / pow(var_x404, 2);
        const double var_x434 = 3.8050000000000003e-5 * var_x410;
        const double var_x435 = var_x434 - 0.00037935850000000006 * var_x413;
        const double var_x436 = 0.00018000000000000001 * var_x421;
        const double var_x437 = var_x436 - 2.3040000000000003e-5 * var_x423;
        const double var_x438 = var_x412 * var_x434;
        const double var_x439 = var_x415 * var_x436;
        const double var_x440 = ((var_x416) ? (var_x438 + 320000.00000021287 * var_x428 - 1.406249999998284e-10 * var_x406) : ((var_x425) ? (var_x439 + 3.8164493433023864e-13 * var_x418 - 24925000.030968059 * var_x431) : (var_x438 + var_x439)));
        const double var_x441 = 2.010502764933119e-20 * var_x144;
        const double var_x442 = var_x153 * NV_Ith_S(mParameters, 3);
        const double var_x443 = var_x155 * NV_Ith_S(mParameters, 3);
        const double var_x444 = log(100.0 * var_x183);
        const double var_x445 = var_x152 + var_x444;
        const double var_x446 = pow(var_x445, 4);
        const double var_x447 = 2.8839711417365218e-9 * pow(var_x445, 7) / pow((1 + 0.0085580149227345564 * var_x446), 2);
        const double var_x448 = 20.048989239399607 * pow(var_x445, 3) / (59494197.640692554 + 509152.231225166 * var_x446);
        const double var_x449 = var_x151 * var_x447 - var_x151 * var_x448;
        const double var_x450 = var_x183 * var_x447 - var_x183 * var_x448;
        const double var_x451 = 1.3534563434121123e-7 * var_chaste_interface__i_to_2_a_gate__a;
        const double var_x452 = var_x25 + 26.712338705498265 * var_x444;
        const double var_x453 = 0.00018900582374462349 / (87.825100000000006 + var_x452);
        const double var_x454 = 2.4504050574882179e-8 * var_x452 / pow((1 + 0.30415380916729118 * var_x24 + 0.30415380916729118 * var_x444), 2);
        const double var_x455 = var_x183 * var_x454 - var_x183 * var_x453;
        const double var_x456 = var_x23 * var_x454 - var_x23 * var_x453;
        const double var_x457 = 2.8550729182210769e-9 * var_x43;
        const double var_x458 = -1.3534563434121124e-9 * var_chaste_interface__i_to_1_i2_gate__i2 - 5.4138253736484496e-9 * var_chaste_interface__i_to_1_i_gate__i;
        const double var_x459 = var_x169 * var_x458;
        const double var_x460 = -6.767281717060562e-9 - 4.0603690302363372e-9 * var_x71;
        const double var_x461 = var_x460 * var_x73;
        const double var_x462 = var_x461 * var_chaste_interface__i_Ks_xs1_gate__xs1;
        const double var_x463 = -2.9704178641172085e-9 * var_x99;
        const double var_x464 = var_x26 * NV_Ith_S(mParameters, 3);
        const double var_x465 = var_x169 * NV_Ith_S(mParameters, 3);
        const double var_x466 = var_x147 * var_x462;
        const double var_x467 = 0.0025000000000000005 * var_x207;
        const double var_x468 = 0.5 * var_chaste_interface__Ca_i__Ca_i;
        const double var_x469 = var_x220 * var_x468;
        const double var_x470 = var_x231 * var_x468;
        const double var_x471 = 0.80000000000000004 + var_chaste_interface__Ca_JSR__Ca_JSR;
        const double var_x472 = pow(var_x471, (-2));
        const double var_x473 = 1 / (1.0 + 8.0 * var_x472);
        const double var_x474 = exp(2.6000000000000001 + 0.20000000000000001 * var_x160);
        const double var_x475 = 1.0 + var_x474;
        const double var_x476 = -var_chaste_interface__Ca_r__Ca_r + var_chaste_interface__Ca_JSR__Ca_JSR;
        const double var_x477 = var_x476 * NV_Ith_S(mParameters, 1) * var_chaste_interface__q_rel_ri_gate__ri;
        const double var_x478 = var_x474 * var_x477 * var_chaste_interface__q_rel_ro_gate__ro / pow(var_x475, 2);
        const double var_x479 = var_x131 * var_x478;
        const double var_x480 = 1 / var_x475;
        const double var_x481 = var_x480 * NV_Ith_S(mParameters, 1) * var_chaste_interface__q_rel_ro_gate__ro;
        const double var_x482 = var_x481 * var_chaste_interface__q_rel_ri_gate__ri;
        const double var_x483 = var_x482;
        const double var_x484 = var_x195 * var_x478;
        const double var_x485 = var_x476 * var_x481;
        const double var_x486 = var_x473;
        const double var_x487 = var_x477 * var_x480;
        const double var_x488 = 0.0086999999999999994 + var_chaste_interface__Ca_r__Ca_r;
        const double var_x489 = pow(var_x488, (-2));
        const double var_x490 = var_x489 * var_chaste_interface__Ca_r__Ca_r;
        const double var_x491 = 0.00087000000000000001 + var_chaste_interface__Ca_r__Ca_r;
        const double var_x492 = pow(var_x491, (-2));
        const double var_x493 = 0.094 * var_x492;
        const double var_x494 = 1 / (1.0 + 2.2480000000000002 * var_x490 + var_x493 * var_chaste_interface__Ca_r__Ca_r);
        const double var_x495 = var_x494;
        const double var_x496 = 1.1504378919002956e-7 * var_x494;
        const double var_x497 = 0.23999999999999996 * var_x482;
        const double var_x498 = 0.23999999999999996 * var_x494;
        const double var_x499 = exp(3.3333333333333335 + 66.666666666666671 * var_x327);
        const double var_x500 = 1.0 + var_x499;
        const double var_x501 = var_x499 / pow(var_x500, 2);
        const double var_x502 = 1 / var_x500;
        const double var_x503 = exp(-16.0 + 80.0 * var_x502 + 40000.0 * var_chaste_interface__Ca_r__Ca_r);
        const double var_x504 = 1.0 + var_x503;
        const double var_x505 = exp(-15.0 + 5000.0 * var_chaste_interface__Ca_r__Ca_r + 15.0 * var_x502);
        const double var_x506 = 1.0 + var_x505;
        const double var_x507 = 1 / var_x506;
        const double var_x508 = 350.0 - var_x325;
        const double var_x509 = var_x507 * var_x508;
        const double var_x510 = 1 / (3.0 + var_x325 + var_x509);
        const double var_x511 = var_x503 * var_x510 / pow(var_x504, 2);
        const double var_x512 = 5333.333333333333 * var_x511;
        const double var_x513 = var_x501 * var_x512;
        const double var_x514 = (-var_chaste_interface__q_rel_ri_gate__ri + 1 / var_x504) / pow((0.29999999999999999 + var_x213 + 0.10000000000000001 * var_x509), 2);
        const double var_x515 = var_x505 * var_x508 / pow(var_x506, 2);
        const double var_x516 = 10.0 * var_x514 * var_x515;
        const double var_x517 = var_x501 * var_x516;
        const double var_x518 = var_x162 * var_x501;
        const double var_x519 = 0.01 * var_x514;
        const double var_x520 = var_x196 * var_x501;
        const double var_x521 = var_x159 - 1.252587239994243e-11 * var_x118;
        const double var_x522 = 140144537401.62091 * var_x521;
        const double var_x523 = pow(var_x122, 2);
        const double var_x524 = var_x129 * var_x523;
        const double var_x525 = -1 + var_x374;
        const double var_x526 = pow(var_x525, 2);
        const double var_x527 = var_x121 * var_x526;
        const double var_x528 = 415.29710452059015 * var_x527;
        const double var_x529 = 0.33333333333333331 * ((var_x120) ? (var_x522 * (9.3783419999784476e-6 * var_x115 + 9.3783419999784476e-6 * var_x118)) : (var_x524 * (-369.78523064555725 + 24.652348709703816 * var_chaste_interface__membrane__V) + var_x130 * var_x528 * var_chaste_interface__Ca_r__Ca_r - var_x523 * var_x528 / pow(var_x123, 3)));
        const double var_x530 = pow(NV_Ith_S(mParameters, 7), 2);
        const double var_x531 = pow(var_chaste_interface__i_Ca_L_d_gate__d, 2);
        const double var_x532 = pow(var_chaste_interface__i_Ca_L_f2_gate__f2, 2);
        const double var_x533 = pow(var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2, 2);
        const double var_x534 = pow(var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca, 2);
        const double var_x535 = pow(var_chaste_interface__i_Ca_L_f_gate__f, 2);
        const double var_x536 = var_x530 * var_x531 * var_x532 * var_x533 * var_x534 * var_x535;
        const double var_x537 = ((var_x120) ? (140144537401.62091 * pow(var_x521, 2)) : (2773.3892298416795 * var_x524 * var_x526));
        const double var_x538 = var_x536 * var_x537;
        const double var_x539 = 1.0 + var_x538;
        const double var_x540 = 1 / var_x539;
        const double var_x541 = pow(var_chaste_interface__Ca_JSR__Ca_JSR, 1.8999999999999999);
        const double var_x542 = 0.0028 + var_chaste_interface__Ca_r__Ca_r;
        const double var_x543 = 1 / var_x542;
        const double var_x544 = pow((var_x543 * var_chaste_interface__Ca_r__Ca_r), 1.8999999999999999);
        const double var_x545 = 1 / (var_x541 + 1644.6531773416521 * var_x544);
        const double var_x546 = var_x541 * var_x545;
        const double var_x547 = var_x540 * var_x546;
        const double var_x548 = var_x536 * var_x547;
        const double var_x549 = pow(var_chaste_interface__i_Ca_L_d_gate__d, 4);
        const double var_x550 = pow(var_x539, (-2));
        const double var_x551 = pow(NV_Ith_S(mParameters, 7), 4);
        const double var_x552 = pow(var_chaste_interface__i_Ca_L_f2_gate__f2, 4);
        const double var_x553 = pow(var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2, 4);
        const double var_x554 = pow(var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca, 4);
        const double var_x555 = pow(var_chaste_interface__i_Ca_L_f_gate__f, 4);
        const double var_x556 = var_x546 * var_x550 * var_x551 * var_x552 * var_x553 * var_x554 * var_x555;
        const double var_x557 = var_x537 * var_x549 * var_x556;
        const double var_x558 = 0.66666666666666663 * var_x530 * var_x532 * var_x533 * var_x534 * var_x537 * var_x547;
        const double var_x559 = 0.66666666666666663 * ((var_x120) ? (1.9640491363514324e+22 * pow(var_x521, 4)) : (7691687.8202018235 * pow(var_x122, 4) * pow(var_x525, 4) / pow(var_x123, 4)));
        const double var_x560 = var_x546 * var_x549 * var_x550 * var_x551 * var_x553 * var_x554 * var_x559;
        const double var_x561 = 0.66666666666666663 * var_x530 * var_x531 * var_x533 * var_x535 * var_x537 * var_x547;
        const double var_x562 = var_x546 * var_x549 * var_x550 * var_x551 * var_x552 * var_x555 * var_x559;
        const double var_x563 = var_x538 * var_x540;
        const double var_x564 = var_x563 / pow((var_x544 + 0.00060803092942449902 * var_x541), 2);
        const double var_x565 = 0.33333333333333331 * ((var_x120) ? (var_x522 * (-2.505174479988486e-11 * var_x192 + 2 * var_x157 * var_x194)) : (5546.778459683359 * var_x130 * var_x527));
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = mSetVoltageDerivativeToZero ? 0.0 : (-0.011725000000000001 + var_x100 + var_x63 + var_x75 - var_x134 - var_x19 - var_x66 - var_x94 + 0.021094680534898786 * var_x111 - 0.61875000000000002 * var_x108 - 0.0027599999999999999 * var_x22 - 0.0065699975556193606 * var_x110 - 0.00046153846153846147 * var_x67 + var_x26 * (0.10468673984798647 * var_x40 - var_x42 * var_x44) - var_x58 * var_x59 - var_x61 * var_chaste_interface__i_Na_L_h_L_gate__h_L - var_x98 * var_chaste_interface__i_Kr_xr_gate__xr - 0.13 * var_chaste_interface__i_Ca_T_b_gate__b * var_chaste_interface__i_Ca_T_g_gate__g);
        IJth(rJacobian, 1, 0) = -var_x202 * (3.383640858530281e-9 * var_x19 - 6.767281717060562e-9 * var_x94 - 4.446102433927548e-11 * var_x110);
        IJth(rJacobian, 2, 0) = var_x259 + var_x257 * (var_x254 - var_chaste_interface__i_Na_m_gate__m);
        IJth(rJacobian, 3, 0) = (var_x264 + var_x270) * (var_x271 * var_x275 + var_x263 * var_x274 * (-var_x271 - var_x276) / pow(var_x272, 2)) + (var_x271 + var_x276) * (var_x273 - var_chaste_interface__i_Na_h_gate__h + var_x263 * var_x275);
        IJth(rJacobian, 4, 0) = (var_x286 + var_x296) * (var_x297 * var_x299 + var_x274 * var_x295 * (-var_x297 - var_x300) / pow(var_x298, 2)) + (var_x297 + var_x300) * (var_x273 - var_chaste_interface__i_Na_j_gate__j + var_x295 * var_x299);
        IJth(rJacobian, 5, 0) = var_x259 + var_x257 * (var_x254 - var_chaste_interface__i_Na_L_m_L_gate__m_L);
        IJth(rJacobian, 6, 0) = -0.16393442622950821 * var_x302 * var_x307 / pow(var_x303, 2) - 0.00068027210884353737 * var_x304 * (-var_chaste_interface__i_Na_L_h_L_gate__h_L + 1 / var_x303) / (pow(var_x305, 2) * pow((1 + 0.7142857142857143 * var_x306), 2));
        IJth(rJacobian, 7, 0) = 1.5624999999999998 * (-var_chaste_interface__i_Ca_L_d_gate__d + 1 / var_x313) * (-0.041599999999999998 * var_x311 + 0.10560000000000001 * var_x308 * var_x310 / pow(var_x309, 2)) / pow((0.73749999999999993 + var_x311), 2) + 0.14836795252225518 * var_x312 * var_x314 / pow(var_x313, 2);
        IJth(rJacobian, 8, 0) = -var_x320 * var_x321 + 0.0625 * (0.025000000000000001 - 0.01 * var_chaste_interface__membrane__V) * (var_x319 - var_chaste_interface__i_Ca_L_f_gate__f) / pow((1 + 0.0078125 * var_x315), 2);
        IJth(rJacobian, 9, 0) = -var_x321 * var_x323 + 0.0006925207756232687 * (2.6040000000000005 - 0.14000000000000001 * var_chaste_interface__membrane__V) * (var_x319 - var_chaste_interface__i_Ca_L_f2_gate__f2) / pow((1 + 0.63729473684210547 * var_x322), 2);
        IJth(rJacobian, 10, 0) = var_x134 * var_x330;
        IJth(rJacobian, 11, 0) = var_x134 * var_x340 - var_x134 * var_x341;
        IJth(rJacobian, 12, 0) = (-var_chaste_interface__i_Ca_T_b_gate__b + 1 / var_x343) * (0.0356 * var_x345 - 0.0356 * var_x346) + 0.16393442622950821 * var_x342 * (var_x347 + var_x348) / pow(var_x343, 2);
        IJth(rJacobian, 13, 0) = (-var_chaste_interface__i_Ca_T_g_gate__g + 1 / var_x350) * (0.00097402597402597392 * var_x351 - 0.0001800720288115246 * var_x352) - 0.15151515151515152 * var_x349 * (var_x353 + var_x354) / pow(var_x350, 2);
        IJth(rJacobian, 14, 0) = var_x364 * (var_x365 * var_x367 - var_x365 * var_x369 + 0.040000000000000001 * var_x362 * (var_x368 + var_x369 - var_x366 - var_x367) / pow((var_x358 + var_x362), 2)) + (-var_chaste_interface__i_to_1_a_gate__a + var_x363 * var_x365) * (var_x366 + var_x367 - var_x368 - var_x369);
        IJth(rJacobian, 15, 0) = var_x373 * (-var_x381 * var_x383 + 2.9999999999999996 * var_x377 * (var_x381 - 0.0066666666666666671 * var_x380 + 0.0066666666666666671 * pow(var_x378, 2) / pow(var_x379, 2)) / pow((var_x380 + 0.29999999999999999 * var_x377), 2)) + 0.013888888888888888 * var_x370 * (-var_chaste_interface__i_to_1_i_gate__i + var_x382 * var_x383) / (pow(var_x371, 2) * pow((1 + 0.83333333333333337 * var_x372), 2));
        IJth(rJacobian, 16, 0) = var_x387 * (-var_x394 * var_x396 + 1.768 * var_x390 * (var_x394 - 0.0033333333333333335 * var_x393 + 0.0033333333333333335 * pow(var_x391, 2) / pow(var_x392, 2)) / pow((var_x393 + 0.088400000000000006 * var_x390), 2)) + 0.0033333333333333335 * var_x384 * (-var_chaste_interface__i_to_1_i2_gate__i2 + var_x395 * var_x396) / (pow(var_x385, 2) * pow((0.71666666666666667 + var_x386), 2));
        IJth(rJacobian, 17, 0) = 0.081632653061224483 * var_x397 * var_x402 / pow(var_x398, 2) + 0.00022222222222222223 * var_x399 * (-var_chaste_interface__i_Kr_xr_gate__xr + 1 / var_x398) / (pow(var_x400, 2) * pow((0.1111111111111111 + var_x401), 2));
        IJth(rJacobian, 18, 0) = var_x432 * var_x433 + (var_x405 - var_chaste_interface__i_Ks_xs1_gate__xs1) * ((var_x416) ? (var_x414 + 0.0001799999999999001 * var_x406 + 0.00018000000000009992 * var_x407) : ((var_x425) ? (var_x424 + 3.8050000000000003e-5 * var_x417 + 3.8050000000000003e-5 * var_x418) : (var_x414 + var_x424)));
        IJth(rJacobian, 19, 0) = var_x433 * var_x440 + (var_x405 - var_chaste_interface__i_Ks_xs2_gate__xs2) * ((var_x416) ? (var_x435 + 8.9999999999950051e-5 * var_x406 + 9.000000000004996e-5 * var_x407) : ((var_x425) ? (var_x437 + 1.9025000000000002e-5 * var_x417 + 1.9025000000000002e-5 * var_x418) : (var_x435 + var_x437)));
        IJth(rJacobian, 21, 0) = (-1.6918204292651404e-11 - 2.5292715417513851e-10 * var_x175 - 2.0301845151181685e-8 * var_x94 - 1.2561766687293667e-8 * var_x108 - 6.767281717060562e-9 * var_x66 - 1.3338307301782643e-10 * var_x110) * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 22, 0) = (-1.5226383863386264e-12 - var_x451 * var_x58) * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 23, 0) = (-6.0905535453545056e-11 + var_x459 + var_x462 + var_x463 + 1.4275364591105386e-10 * var_x111 + 8.3745111248624455e-9 * var_x108 - 3.1233607924894898e-12 * var_x67 - 1.8677697539087149e-11 * var_x22 - 2.9121743765854985e-9 * var_x190 + var_x26 * (7.0844466059195419e-10 * var_x40 - var_x42 * var_x457)) * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 26, 0) = 0.20000000000000001 * var_x473 * var_x479;
        IJth(rJacobian, 27, 0) = var_x495 * (-0.047999999999999994 * var_x479 - 1.1504378919002956e-7 * var_x134);
        IJth(rJacobian, 28, 0) = var_x134 * var_x513 - var_x134 * var_x517;
        IJth(rJacobian, 29, 0) = var_x529 * var_x548 - var_x529 * var_x557;
        IJth(rJacobian, 0, 1) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x136 + 0.057500000000000002 * var_x140 - 0.057500000000000002 * var_x138 - 5.4447296618926212e-7 * var_x150 - 1.388888888888889e-8 * var_x146 + var_x141 * var_x87 - var_x142 * var_x145);
        IJth(rJacobian, 1, 1) = -var_x202 * (0.14705882352941174 + var_x203 + var_x218 - var_x221 + 1.0150922575590843e-8 * var_x222 + 3.383640858530281e-9 * var_x136 - 1.9455934936549115e-10 * var_x140 - 9.3990023848063356e-17 * var_x146 - var_x142 * var_x223) - (-var_x197 - var_x199 + 0.28000000000000003 * var_chaste_interface__Ca_i__Ca_i / pow(var_x137, 3) + 0.20000000000000001 * var_chaste_interface__Ca_i__Ca_i / pow(var_x198, 3)) * (3.383640858530281e-9 * ((var_x9) ? (-var_x224 + 374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (var_x224 + 3.8499135947999997e-9 * var_x4)) : (var_x16 * var_chaste_interface__membrane__V)) + 0.14705882352941174 * var_chaste_interface__Ca_i__Ca_i - 0.14705882352941174 * var_chaste_interface__Ca_r__Ca_r + var_x203 * var_chaste_interface__Ca_i__Ca_i + var_x218 * var_chaste_interface__Ca_i__Ca_i - var_x225 * var_chaste_interface__Ca_NSR__Ca_NSR - 6.767281717060562e-9 * var_x109 * var_x93) / pow(var_x200, 2);
        IJth(rJacobian, 21, 1) = (3.045276772677253e-8 * var_x222 - 2.8197007154419011e-16 * var_x146 - var_x142 * var_x441) * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 23, 1) = -3.6846019495263273e-15 * var_x150 * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 25, 1) = -var_x469 + 0.5 * var_x217;
        IJth(rJacobian, 27, 1) = 5.0 * var_x494;
        IJth(rJacobian, 0, 2) = mSetVoltageDerivativeToZero ? 0.0 : (-3 * var_x153 * var_x154);
        IJth(rJacobian, 2, 2) = var_x260;
        IJth(rJacobian, 21, 2) = -2.0301845151181685e-8 * var_x154 * var_x442;
        IJth(rJacobian, 0, 3) = mSetVoltageDerivativeToZero ? 0.0 : (-0.80000000000000004 * var_x155);
        IJth(rJacobian, 3, 3) = -var_x264 - var_x270;
        IJth(rJacobian, 21, 3) = -5.4138253736484496e-9 * var_x443;
        IJth(rJacobian, 0, 4) = mSetVoltageDerivativeToZero ? 0.0 : (-0.20000000000000001 * var_x155);
        IJth(rJacobian, 4, 4) = -var_x286 - var_x296;
        IJth(rJacobian, 21, 4) = -1.3534563434121124e-9 * var_x443;
        IJth(rJacobian, 0, 5) = mSetVoltageDerivativeToZero ? 0.0 : (-0.112125 * var_x156);
        IJth(rJacobian, 5, 5) = var_x260;
        IJth(rJacobian, 21, 5) = -7.5878146252541542e-10 * var_x156 * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 0, 6) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x153 * var_x61);
        IJth(rJacobian, 6, 6) = -var_x307;
        IJth(rJacobian, 21, 6) = -2.5292715417513851e-10 * var_x442 * var_x60;
        IJth(rJacobian, 0, 7) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x162);
        IJth(rJacobian, 7, 7) = -var_x314;
        IJth(rJacobian, 10, 7) = var_x162 * var_x330;
        IJth(rJacobian, 11, 7) = var_x162 * var_x340 - var_x162 * var_x341;
        IJth(rJacobian, 27, 7) = -var_x162 * var_x496;
        IJth(rJacobian, 28, 7) = var_x512 * var_x518 - var_x516 * var_x518;
        IJth(rJacobian, 29, 7) = var_x535 * var_x558 * var_chaste_interface__i_Ca_L_d_gate__d - var_x556 * var_x559 * pow(var_chaste_interface__i_Ca_L_d_gate__d, 3);
        IJth(rJacobian, 0, 8) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x163);
        IJth(rJacobian, 8, 8) = -var_x320;
        IJth(rJacobian, 10, 8) = var_x163 * var_x330;
        IJth(rJacobian, 11, 8) = var_x163 * var_x340 - var_x163 * var_x341;
        IJth(rJacobian, 27, 8) = -var_x163 * var_x496;
        IJth(rJacobian, 28, 8) = var_x163 * var_x513 - var_x163 * var_x517;
        IJth(rJacobian, 29, 8) = var_x531 * var_x558 * var_chaste_interface__i_Ca_L_f_gate__f - var_x552 * var_x560 * pow(var_chaste_interface__i_Ca_L_f_gate__f, 3);
        IJth(rJacobian, 0, 9) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x165);
        IJth(rJacobian, 9, 9) = -var_x323;
        IJth(rJacobian, 10, 9) = var_x165 * var_x330;
        IJth(rJacobian, 11, 9) = var_x165 * var_x340 - var_x165 * var_x341;
        IJth(rJacobian, 27, 9) = -var_x165 * var_x496;
        IJth(rJacobian, 28, 9) = var_x165 * var_x513 - var_x165 * var_x517;
        IJth(rJacobian, 29, 9) = var_x534 * var_x561 * var_chaste_interface__i_Ca_L_f2_gate__f2 - var_x555 * var_x560 * pow(var_chaste_interface__i_Ca_L_f2_gate__f2, 3);
        IJth(rJacobian, 0, 10) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x166);
        IJth(rJacobian, 10, 10) = var_x326 * (-1 + var_x166 * var_x329);
        IJth(rJacobian, 11, 10) = var_x166 * var_x340 - var_x166 * var_x341;
        IJth(rJacobian, 27, 10) = -var_x166 * var_x496;
        IJth(rJacobian, 28, 10) = var_x166 * var_x513 - var_x166 * var_x517;
        IJth(rJacobian, 29, 10) = var_x532 * var_x561 * var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca - var_x553 * var_x562 * pow(var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca, 3);
        IJth(rJacobian, 0, 11) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x167);
        IJth(rJacobian, 10, 11) = var_x167 * var_x330;
        IJth(rJacobian, 11, 11) = var_x338 * (-1 + var_x167 * var_x339) - var_x167 * var_x341;
        IJth(rJacobian, 27, 11) = -var_x167 * var_x496;
        IJth(rJacobian, 28, 11) = var_x167 * var_x513 - var_x167 * var_x517;
        IJth(rJacobian, 29, 11) = -var_x554 * var_x562 * pow(var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2, 3) + 0.66666666666666663 * var_x530 * var_x531 * var_x532 * var_x534 * var_x535 * var_x537 * var_x547 * var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2;
        IJth(rJacobian, 0, 12) = mSetVoltageDerivativeToZero ? 0.0 : (var_x168 * var_chaste_interface__i_Ca_T_g_gate__g);
        IJth(rJacobian, 12, 12) = -var_x347 - var_x348;
        IJth(rJacobian, 0, 13) = mSetVoltageDerivativeToZero ? 0.0 : (var_x168 * var_chaste_interface__i_Ca_T_b_gate__b);
        IJth(rJacobian, 13, 13) = -var_x353 - var_x354;
        IJth(rJacobian, 0, 14) = mSetVoltageDerivativeToZero ? 0.0 : (var_x26 * var_x62);
        IJth(rJacobian, 14, 14) = -var_x359 - var_x363;
        IJth(rJacobian, 23, 14) = var_x458 * var_x464 * NV_Ith_S(mParameters, 15);
        IJth(rJacobian, 0, 15) = mSetVoltageDerivativeToZero ? 0.0 : (var_x169 * (21.369870964398611 * var_x24 - 0.80000000000000004 * var_chaste_interface__membrane__V));
        IJth(rJacobian, 15, 15) = -var_x373;
        IJth(rJacobian, 23, 15) = var_x465 * (1.4461593707331807e-7 * var_x24 - 5.4138253736484496e-9 * var_chaste_interface__membrane__V);
        IJth(rJacobian, 0, 16) = mSetVoltageDerivativeToZero ? 0.0 : (var_x169 * (5.3424677410996528 * var_x24 - 0.20000000000000001 * var_chaste_interface__membrane__V));
        IJth(rJacobian, 16, 16) = -var_x387;
        IJth(rJacobian, 23, 16) = var_x465 * (3.6153984268329518e-8 * var_x24 - 1.3534563434121124e-9 * var_chaste_interface__membrane__V);
        IJth(rJacobian, 0, 17) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x26 * var_x98);
        IJth(rJacobian, 17, 17) = -var_x402;
        IJth(rJacobian, 23, 17) = -2.9121743765854985e-9 * var_x464 * var_x97;
        IJth(rJacobian, 0, 18) = mSetVoltageDerivativeToZero ? 0.0 : (var_x148 * var_x74);
        IJth(rJacobian, 18, 18) = -var_x432;
        IJth(rJacobian, 23, 18) = var_x148 * var_x461 * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 0, 19) = mSetVoltageDerivativeToZero ? 0.0 : (var_x170 * var_x72);
        IJth(rJacobian, 19, 19) = -var_x440;
        IJth(rJacobian, 23, 19) = var_x170 * var_x460 * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 0, 20) = mSetVoltageDerivativeToZero ? 0.0 : (-20.0 * var_x174);
        IJth(rJacobian, 20, 20) = -1.0;
        IJth(rJacobian, 22, 20) = -1.3534563434121123e-7 * var_x174 * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 0, 21) = mSetVoltageDerivativeToZero ? 0.0 : (0.48963716847178318 * var_x178 - 1.2000000000000002 * var_x182 - 0.066780846763745655 * var_x151 - 0.012375000000000001 * var_x181 - 26.712338705498265 * var_x177 - 0.99837365911799758 * var_x176 - var_x145 * var_x180);
        IJth(rJacobian, 1, 21) = -var_x202 * (-8.1207380604726744e-9 * var_x182 - var_x180 * var_x223);
        IJth(rJacobian, 21, 21) = (var_x449 - 2.5123533374587338e-10 * var_x181 - 2.4362214181418025e-8 * var_x182 - 4.5192480335411901e-10 * var_x151 - 6.7562758101440786e-9 * var_x176 - 1.8076992134164759e-7 * var_x177 - var_x180 * var_x441) * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 22, 21) = var_x449 * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 23, 21) = (1.6749022249724892e-10 * var_x181 + 0.48963716847178318 * var_x466) * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 0, 22) = mSetVoltageDerivativeToZero ? 0.0 : (0.0060102762087371094 * var_x183 - var_x184 * var_x59);
        IJth(rJacobian, 21, 22) = var_x450 * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 22, 22) = (var_x450 + var_x455 + 4.0673232301870709e-11 * var_x183 - var_x184 * var_x451) * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 23, 22) = var_x455 * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 0, 23) = mSetVoltageDerivativeToZero ? 0.0 : (26.712338705498265 * var_x178 - 0.13356169352749131 * var_x23 - 11.495160327182951 * var_x191 - 0.073726054827175203 * var_x189 + var_x188 * var_x63 + var_x188 * (-0.0040000000000000001 + var_x100) + var_x26 * (2.7964276527937963 * var_x187 - var_x186 * var_x44));
        IJth(rJacobian, 22, 23) = var_x456 * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 23, 23) = (var_x456 + 26.712338705498265 * var_x466 - 9.0384960670823802e-10 * var_x23 - 4.9892498290294737e-10 * var_x189 - 7.7790988316825085e-8 * var_x191 + var_x188 * var_x459 + var_x188 * (-2.7069126868242249e-11 + var_x463) + var_x26 * (1.892421372783404e-8 * var_x187 - var_x186 * var_x457)) * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 1, 24) = -var_x202 * (var_x221 * var_x233 + var_x230 * var_x232);
        IJth(rJacobian, 10, 24) = var_x331 * var_x332;
        IJth(rJacobian, 24, 24) = -0.00068000000000000005 - var_x212 * var_x467 + var_x204 * var_x226 * var_x467;
        IJth(rJacobian, 25, 24) = var_x230 * var_x470 + var_x233 * var_x469;
        IJth(rJacobian, 28, 24) = var_x519 * (var_x331 - var_x331 * var_x507);
        IJth(rJacobian, 1, 25) = var_x201 * var_x225;
        IJth(rJacobian, 25, 25) = -0.00072463768115942019 - 0.066666666666666666 * NV_Ith_S(mParameters, 0);
        IJth(rJacobian, 26, 25) = 0.0083333333333333332 * var_x473;
        IJth(rJacobian, 25, 26) = 0.00072463768115942019;
        IJth(rJacobian, 26, 26) = var_x473 * (-0.0083333333333333332 - var_x483) + 0.25 * (0.0083333333333333332 * var_chaste_interface__Ca_NSR__Ca_NSR - 0.0083333333333333332 * var_chaste_interface__Ca_JSR__Ca_JSR - var_x476 * var_x483) / (pow(var_x471, 3) * pow((0.125 + var_x472), 2));
        IJth(rJacobian, 27, 26) = var_x494 * var_x497;
        IJth(rJacobian, 29, 26) = -2.3414435371998602e-7 * var_x564 * pow(var_chaste_interface__Ca_JSR__Ca_JSR, 2.7999999999999998) + 0.6333333333333333 * var_x545 * var_x563 * pow(var_chaste_interface__Ca_JSR__Ca_JSR, 0.89999999999999991);
        IJth(rJacobian, 0, 27) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x196);
        IJth(rJacobian, 1, 27) = -var_x202 * (-0.14705882352941174 + var_x221 * var_x239 + var_x232 * var_x238);
        IJth(rJacobian, 10, 27) = var_x326 * (-0.0016500000000000002 * var_x333 + var_x196 * var_x329) + var_x332 * (var_x334 + 0.0030000000000000001 * var_x333);
        IJth(rJacobian, 11, 27) = var_x196 * var_x340 - var_x196 * var_x341;
        IJth(rJacobian, 20, 27) = 0.1502 * var_x234 / pow((1.0 + 0.1502 * var_x205), 2);
        IJth(rJacobian, 24, 27) = 0.00037500000000000001 * var_x212 * var_x235 + 1.8750000000000002e-5 * var_x234 * pow(var_x204, 2) / pow(var_x206, 3);
        IJth(rJacobian, 25, 27) = var_x238 * var_x470 + var_x239 * var_x469;
        IJth(rJacobian, 26, 27) = var_x473 * (var_x483 + 0.20000000000000001 * var_x484);
        IJth(rJacobian, 27, 27) = var_x495 * (-5.0 - var_x497 - 0.047999999999999994 * var_x484 - 1.1504378919002956e-7 * var_x196) + 0.19788249895518037 * (-var_x493 - 2.2480000000000002 * var_x489 + 4.4960000000000004 * var_chaste_interface__Ca_r__Ca_r / pow(var_x488, 3) + 0.188 * var_chaste_interface__Ca_r__Ca_r / pow(var_x491, 3)) * (5.0 * var_chaste_interface__Ca_i__Ca_i - 5.0 * var_chaste_interface__Ca_r__Ca_r - 1.1504378919002956e-7 * var_x327 + var_x476 * var_x497) / pow((0.44483985765124551 + var_x490 + 0.041814946619217079 * var_x492 * var_chaste_interface__Ca_r__Ca_r), 2);
        IJth(rJacobian, 28, 27) = var_x519 * (var_x334 + var_x515 * (5000.0 - 1000.0 * var_x520) - var_x334 * var_x507) - var_x511 * (40000.0 - 5333.333333333333 * var_x520);
        IJth(rJacobian, 29, 27) = var_x548 * var_x565 - var_x557 * var_x565 - 0.00020267697647483301 * var_x205 * var_x541 * var_x542 * var_x544 * var_x564 * (1.8999999999999999 * var_x543 - 1.8999999999999999 * var_chaste_interface__Ca_r__Ca_r / pow(var_x542, 2));
        IJth(rJacobian, 26, 28) = -var_x485 * var_x486;
        IJth(rJacobian, 27, 28) = var_x485 * var_x498;
        IJth(rJacobian, 28, 28) = -var_x510;
        IJth(rJacobian, 26, 29) = -var_x486 * var_x487;
        IJth(rJacobian, 27, 29) = var_x487 * var_x498;
        IJth(rJacobian, 29, 29) = -0.33333333333333331;
    }

    N_Vector Cellaslanidi_Purkinje_model_2009FromCellMLCvode::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__Ca_i__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.00022355433459434943
        double var_chaste_interface__i_Na_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.002003390432234504
        double var_chaste_interface__i_Na_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.9786390933308567
        double var_chaste_interface__i_Na_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.09866447258167589
        double var_chaste_interface__i_Ca_L_d_gate__d = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 2.322223865147363e-06
        double var_chaste_interface__i_Ca_L_f_gate__f = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.9985607329462358
        double var_chaste_interface__i_Ca_L_f2_gate__f2 = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.8173435436674658
        double var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.9610551285529658
        double var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.868690796671854
        double var_chaste_interface__i_to_1_a_gate__a = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.0004238729429342389
        double var_chaste_interface__i_to_1_i_gate__i = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.9990935802459496
        double var_chaste_interface__i_to_1_i2_gate__i2 = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.9777368439681764
        double var_chaste_interface__i_Kr_xr_gate__xr = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 0.07084939408222911
        double var_chaste_interface__i_Ks_xs1_gate__xs1 = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 0.0011737654433043125
        double var_chaste_interface__i_Ks_xs2_gate__xs2 = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 0.001179442867470093
        double var_chaste_interface__intracellular_ion_concentrations__Na_i = NV_Ith_S(rY, 21);
        // Units: millimolar; Initial value: 9.927155552932733
        double var_chaste_interface__intracellular_ion_concentrations__K_i = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 141.9670801746057
        double var_chaste_interface__Ca_MK_act__Ca_MK_trap = NV_Ith_S(rY, 24);
        // Units: dimensionless; Initial value: 8.789168284782809e-06
        double var_chaste_interface__Ca_JSR__Ca_JSR = NV_Ith_S(rY, 26);
        // Units: millimolar; Initial value: 1.1433050636518596
        double var_chaste_interface__Ca_r__Ca_r = NV_Ith_S(rY, 27);
        // Units: millimolar; Initial value: 0.00022418117117903934
        double var_chaste_interface__q_rel_ri_gate__ri = NV_Ith_S(rY, 28);
        // Units: dimensionless; Initial value: 0.7802870066567904
        double var_chaste_interface__q_rel_ro_gate__ro = NV_Ith_S(rY, 29);
        // Units: dimensionless; Initial value: 1.2785734760674763e-09
        
        // Mathematics
        const double var_Ca_MK_act__Ca_MK_0 = 0.050000000000000003; // dimensionless
        const double var_Ca_MK_act__km_Ca_MK = 0.14999999999999999; // millimolar
        const double var_Ca_MK_act__Ca_MK_bound = (1.0 - var_chaste_interface__Ca_MK_act__Ca_MK_trap) * var_Ca_MK_act__Ca_MK_0 / (1.0 + var_Ca_MK_act__km_Ca_MK / var_chaste_interface__Ca_r__Ca_r); // dimensionless
        const double var_Ca_MK_act__Ca_MK_act = var_Ca_MK_act__Ca_MK_bound + var_chaste_interface__Ca_MK_act__Ca_MK_trap; // dimensionless
        const double var_equilibrium_potentials__r_NaK = 0.018329999999999999; // dimensionless
        const double var_i_Ca_L_f_Ca_gate__tau_f_Ca = 0.5 + 1 / (1.0 + 333.33333333333331 * var_chaste_interface__Ca_r__Ca_r) + 10.0 * var_Ca_MK_act__Ca_MK_act / (var_Ca_MK_act__Ca_MK_act + var_Ca_MK_act__km_Ca_MK); // millisecond
        const double var_i_Ks__g_Ks = (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__Ca_i__Ca_i), 1.3999999999999999))) * NV_Ith_S(mParameters, 13); // milliS_per_microF
        const double var_i_NaCa__X_NaCa = 0.40000000000000002; // dimensionless
        const double var_i_NaCa__k_sat = 0.27000000000000002; // dimensionless
        const double var_i_NaCa__km_Ca_act = 0.000125; // millimolar
        const double var_i_NaCa__km_Ca_i = 0.0035999999999999999; // millimolar
        const double var_i_NaCa__km_Ca_o = 1.3; // millimolar
        const double var_i_NaCa__km_Na_i_1 = 12.300000000000001; // millimolar
        const double var_i_NaCa__km_Na_o = 87.5; // millimolar
        const double var_i_Ca_L_f2_gate__tau_f2 = 38.0 + 24.217200000000005 * pow((-1 + 0.053763440860215048 * var_chaste_interface__membrane__V), 2); // millisecond
        const double var_i_Ca_L_f_gate__tau_f = 4.0 + 0.03125 * pow((-1 + 0.40000000000000002 * var_chaste_interface__membrane__V), 2); // millisecond
        const double var_i_Kr__rr_infinity = 1 / (1.0 + exp(-0.26470588235294124 + 0.049019607843137261 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_i_Na_h_gate__alpha_h = ((var_chaste_interface__membrane__V < -40.0) ? (0.13500000000000001 * exp(-11.764705882352942 + 0.14705882352941177 * NV_Ith_S(mParameters, 10) - 0.14705882352941177 * var_chaste_interface__membrane__V)) : (0)); // per_millisecond
        const double var_i_Na_h_gate__beta_h = ((var_chaste_interface__membrane__V < -40.0) ? (310000.0 * exp(0.34999999999999998 * var_chaste_interface__membrane__V - 0.34999999999999998 * NV_Ith_S(mParameters, 10)) + 3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__membrane__V - 0.079000000000000001 * NV_Ith_S(mParameters, 10))) : (7.6923076923076916 / (1.0 + exp(-0.96036036036036043 + 0.0900900900900901 * NV_Ith_S(mParameters, 10) - 0.0900900900900901 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_i_Na_h_gate__tau_h = 1 / (var_i_Na_h_gate__alpha_h + var_i_Na_h_gate__beta_h); // millisecond
        const double var_i_Na_j_gate__alpha_j = ((var_chaste_interface__membrane__V < -40.0) ? ((37.780000000000001 + var_chaste_interface__membrane__V) * (-127140.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__V - 0.24440000000000001 * NV_Ith_S(mParameters, 10)) - 3.4740000000000003e-5 * exp(0.043909999999999998 * NV_Ith_S(mParameters, 10) - 0.043909999999999998 * var_chaste_interface__membrane__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V - 0.311 * NV_Ith_S(mParameters, 10)))) : (0)); // per_millisecond
        const double var_i_Na_j_gate__beta_j = ((var_chaste_interface__membrane__V < -40.0) ? (0.1212 * exp(0.01052 * NV_Ith_S(mParameters, 10) - 0.01052 * var_chaste_interface__membrane__V) / (1.0 + exp(-5.5312920000000005 + 0.13780000000000001 * NV_Ith_S(mParameters, 10) - 0.13780000000000001 * var_chaste_interface__membrane__V))) : (0.29999999999999999 * exp(2.5349999999999999e-7 * NV_Ith_S(mParameters, 10) - 2.5349999999999999e-7 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.2000000000000002 + 0.10000000000000001 * NV_Ith_S(mParameters, 10) - 0.10000000000000001 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_i_Na_j_gate__tau_j = 1 / (var_i_Na_j_gate__alpha_j + var_i_Na_j_gate__beta_j); // millisecond
        const double var_membrane__i_stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
        const double var_i_Ca_L__i_Ca_L_max = ((fabs(-15.0 + var_chaste_interface__membrane__V) < 1.3356169352718439e-6) ? (374358.83507888648 * (-14.999998664383064 + var_chaste_interface__membrane__V) * (4.6891709999892238e-6 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + var_chaste_interface__Ca_r__Ca_r * exp(9.9999999999770198e-8)) / (-1.0 + exp(9.9999999999770198e-8)) + 4.6891709999892238e-6 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + var_chaste_interface__Ca_r__Ca_r * exp(-9.9999999999770198e-8)) / (-1.0 + exp(-9.9999999999770198e-8))) - 4.6891709999892238e-6 * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + var_chaste_interface__Ca_r__Ca_r * exp(-9.9999999999770198e-8)) / (-1.0 + exp(-9.9999999999770198e-8))) : (3.510865186083326 * (-15.0 + var_chaste_interface__membrane__V) * (-0.34100000000000003 * NV_Ith_S(mParameters, 4) + var_chaste_interface__Ca_r__Ca_r * exp(-1.1230765052340785 + 0.074871767015605231 * var_chaste_interface__membrane__V)) / (-1.0 + exp(-1.1230765052340785 + 0.074871767015605231 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_i_Ca_L__i_Ca_L = NV_Ith_S(mParameters, 7) * var_i_Ca_L__i_Ca_L_max * var_chaste_interface__i_Ca_L_d_gate__d * var_chaste_interface__i_Ca_L_f2_gate__f2 * var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 * var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca * var_chaste_interface__i_Ca_L_f_gate__f; // microA_per_microF
        const double var_i_Ca_L__i_Ca_L_converted = HeartConfig::Instance()->GetCapacitance() * var_i_Ca_L__i_Ca_L; // uA_per_cm2
        const double var_i_Ca_L_f_Ca2_gate__tau_f_Ca2 = 125.0 + 300.0 / (1.0 + exp(-4.375 - 25.0 * var_i_Ca_L__i_Ca_L)); // millisecond
        const double var_i_NaCa__dNaCa_1 = pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * var_i_NaCa__km_Ca_o + 1.5 * pow(var_i_NaCa__km_Na_o, 3) * var_chaste_interface__Ca_i__Ca_i + pow(var_i_NaCa__km_Na_i_1, 3) * (1.0 + 1.5 * var_chaste_interface__Ca_i__Ca_i / var_i_NaCa__km_Ca_i) * NV_Ith_S(mParameters, 4); // millimolar4
        const double var_model_parameters__F = 96485.0; // coulomb_per_mole
        const double var_i_K1__g_K1 = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 5)) * NV_Ith_S(mParameters, 11); // milliS_per_microF
        const double var_i_Kr__g_Kr = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 5)) * NV_Ith_S(mParameters, 12); // milliS_per_microF
        const double var_i_NaCa__dNaCa_2 = pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * NV_Ith_S(mParameters, 4) + 1.5 * pow(NV_Ith_S(mParameters, 6), 3) * var_chaste_interface__Ca_i__Ca_i + pow(NV_Ith_S(mParameters, 6), 3) * (1.0 + var_chaste_interface__intracellular_ion_concentrations__Na_i / var_i_NaCa__km_Na_i_1) * var_i_NaCa__km_Ca_i; // millimolar4
        const double var_model_parameters__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_model_parameters__T = 310.0; // kelvin
        const double var_equilibrium_potentials__E_K = var_model_parameters__R * var_model_parameters__T * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__intracellular_ion_concentrations__K_i) / var_model_parameters__F; // millivolt
        const double var_equilibrium_potentials__E_Ks = var_model_parameters__R * var_model_parameters__T * log((var_equilibrium_potentials__r_NaK * NV_Ith_S(mParameters, 6) + NV_Ith_S(mParameters, 5)) / (var_equilibrium_potentials__r_NaK * var_chaste_interface__intracellular_ion_concentrations__Na_i + var_chaste_interface__intracellular_ion_concentrations__K_i)) / var_model_parameters__F; // millivolt
        const double var_equilibrium_potentials__E_Na = var_model_parameters__R * var_model_parameters__T * log(NV_Ith_S(mParameters, 6) / var_chaste_interface__intracellular_ion_concentrations__Na_i) / var_model_parameters__F; // millivolt
        const double var_i_K1_xK1_gate__alpha_xK1 = 1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_equilibrium_potentials__E_K)); // dimensionless
        const double var_i_K1_xK1_gate__beta_xK1 = (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_equilibrium_potentials__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_equilibrium_potentials__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_equilibrium_potentials__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_i_K1_xK1_gate__xK1 = var_i_K1_xK1_gate__alpha_xK1 / (var_i_K1_xK1_gate__alpha_xK1 + var_i_K1_xK1_gate__beta_xK1); // dimensionless
        const double var_i_K1__i_K1 = (0.0040000000000000001 + var_i_K1__g_K1 * var_i_K1_xK1_gate__xK1) * (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V); // microA_per_microF
        const double var_i_K1__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_i_K1__i_K1; // uA_per_cm2
        const double var_i_Kr__i_Kr = (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * var_i_Kr__g_Kr * var_i_Kr__rr_infinity * var_chaste_interface__i_Kr_xr_gate__xr; // microA_per_microF
        const double var_i_Kr__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_i_Kr__i_Kr; // uA_per_cm2
        const double var_i_Ks__i_Ks = (-var_equilibrium_potentials__E_Ks + var_chaste_interface__membrane__V) * var_i_Ks__g_Ks * var_chaste_interface__i_Ks_xs1_gate__xs1 * var_chaste_interface__i_Ks_xs2_gate__xs2; // microA_per_microF
        const double var_i_Ks__i_Ks_converted = HeartConfig::Instance()->GetCapacitance() * var_i_Ks__i_Ks; // uA_per_cm2
        const double var_i_Na__i_Na = pow(var_chaste_interface__i_Na_m_gate__m, 3) * (-var_equilibrium_potentials__E_Na + var_chaste_interface__membrane__V) * (0.20000000000000001 * var_chaste_interface__i_Na_j_gate__j + 0.80000000000000004 * var_chaste_interface__i_Na_h_gate__h) * NV_Ith_S(mParameters, 8); // microA_per_microF
        const double var_i_Na__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_i_Na__i_Na; // uA_per_cm2
        const double var_i_NaCa__i_NaCa = (-1.5 * pow(NV_Ith_S(mParameters, 6), 3) * var_chaste_interface__Ca_i__Ca_i * exp(-0.65000000000000002 * var_chaste_interface__membrane__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)) + pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * var_i_NaCa__X_NaCa * NV_Ith_S(mParameters, 14) * NV_Ith_S(mParameters, 4) * exp(0.34999999999999998 * var_chaste_interface__membrane__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))) / ((1.0 + var_i_NaCa__k_sat * exp(-0.65000000000000002 * var_chaste_interface__membrane__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))) * (1.0 + 0.44444444444444442 * pow(var_i_NaCa__km_Ca_act, 2) / pow(var_chaste_interface__Ca_i__Ca_i, 2)) * (var_i_NaCa__dNaCa_1 + var_i_NaCa__dNaCa_2)); // microA_per_microF
        const double var_i_NaCa__i_NaCa_converted = HeartConfig::Instance()->GetCapacitance() * var_i_NaCa__i_NaCa; // uA_per_cm2
        const double var_i_to_1__i_to_1 = (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * (0.20000000000000001 * var_chaste_interface__i_to_1_i2_gate__i2 + 0.80000000000000004 * var_chaste_interface__i_to_1_i_gate__i) * NV_Ith_S(mParameters, 15) * var_chaste_interface__i_to_1_a_gate__a; // microA_per_microF
        const double var_i_to_1__i_to_1_converted = HeartConfig::Instance()->GetCapacitance() * var_i_to_1__i_to_1; // uA_per_cm2
        const double var_q_rel__vg = 1 / (1.0 + exp(2.6000000000000001 + 0.20000000000000001 * NV_Ith_S(mParameters, 7) * var_i_Ca_L__i_Ca_L_max)); // dimensionless
        const double var_q_rel__g_rel = NV_Ith_S(mParameters, 1) * var_q_rel__vg; // per_millisecond
        const double var_q_rel__q_rel = (-var_chaste_interface__Ca_r__Ca_r + var_chaste_interface__Ca_JSR__Ca_JSR) * var_q_rel__g_rel * var_chaste_interface__q_rel_ri_gate__ri * var_chaste_interface__q_rel_ro_gate__ro; // millimolar_per_millisecond

        N_Vector dqs = N_VNew_Serial(16);
        NV_Ith_S(dqs, 0) = var_q_rel__q_rel;
        NV_Ith_S(dqs, 1) = var_i_Ca_L__i_Ca_L_converted;
        NV_Ith_S(dqs, 2) = var_i_Ca_L_f2_gate__tau_f2;
        NV_Ith_S(dqs, 3) = var_i_Ca_L_f_Ca2_gate__tau_f_Ca2;
        NV_Ith_S(dqs, 4) = var_i_Ca_L_f_Ca_gate__tau_f_Ca;
        NV_Ith_S(dqs, 5) = var_i_Ca_L_f_gate__tau_f;
        NV_Ith_S(dqs, 6) = var_i_Na__i_Na_converted;
        NV_Ith_S(dqs, 7) = var_i_Na_h_gate__tau_h;
        NV_Ith_S(dqs, 8) = var_i_Na_j_gate__tau_j;
        NV_Ith_S(dqs, 9) = var_i_K1__i_K1_converted;
        NV_Ith_S(dqs, 10) = var_i_Kr__i_Kr_converted;
        NV_Ith_S(dqs, 11) = var_i_Ks__i_Ks_converted;
        NV_Ith_S(dqs, 12) = var_i_NaCa__i_NaCa_converted;
        NV_Ith_S(dqs, 13) = var_membrane__i_stim_converted;
        NV_Ith_S(dqs, 14) = var_i_to_1__i_to_1_converted;
        NV_Ith_S(dqs, 15) = var_chaste_interface__environment__time;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellaslanidi_Purkinje_model_2009FromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "aslanidi_2009";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // NV_Ith_S(rY, 0):
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-83.43812846286808);

    // NV_Ith_S(rY, 1):
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.00022355433459434943);

    // NV_Ith_S(rY, 2):
    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.002003390432234504);

    // NV_Ith_S(rY, 3):
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9786390933308567);

    // NV_Ith_S(rY, 4):
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.09866447258167589);

    // NV_Ith_S(rY, 5):
    this->mVariableNames.push_back("i_Na_L_m_L_gate__m_L");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.002003390432234504);

    // NV_Ith_S(rY, 6):
    this->mVariableNames.push_back("i_Na_L_h_L_gate__h_L");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.8946968372659203);

    // NV_Ith_S(rY, 7):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.322223865147363e-06);

    // NV_Ith_S(rY, 8):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9985607329462358);

    // NV_Ith_S(rY, 9):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f2_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.8173435436674658);

    // NV_Ith_S(rY, 10):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_fCa_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9610551285529658);

    // NV_Ith_S(rY, 11):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_fCa2_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.868690796671854);

    // NV_Ith_S(rY, 12):
    this->mVariableNames.push_back("i_Ca_T_b_gate__b");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0002563937630984438);

    // NV_Ith_S(rY, 13):
    this->mVariableNames.push_back("i_Ca_T_g_gate__g");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9720432601848331);

    // NV_Ith_S(rY, 14):
    this->mVariableNames.push_back("i_to_1_a_gate__a");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0004238729429342389);

    // NV_Ith_S(rY, 15):
    this->mVariableNames.push_back("i_to_1_i_gate__i");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9990935802459496);

    // NV_Ith_S(rY, 16):
    this->mVariableNames.push_back("i_to_1_i2_gate__i2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9777368439681764);

    // NV_Ith_S(rY, 17):
    this->mVariableNames.push_back("i_Kr_xr_gate__xr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.07084939408222911);

    // NV_Ith_S(rY, 18):
    this->mVariableNames.push_back("i_Ks_xs1_gate__xs1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0011737654433043125);

    // NV_Ith_S(rY, 19):
    this->mVariableNames.push_back("i_Ks_xs2_gate__xs2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.001179442867470093);

    // NV_Ith_S(rY, 20):
    this->mVariableNames.push_back("i_to_2_a_gate__a");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0014909437525000811);

    // NV_Ith_S(rY, 21):
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(9.927155552932733);

    // NV_Ith_S(rY, 22):
    this->mVariableNames.push_back("intracellular_ion_concentrations__Cl_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(18.904682470140408);

    // NV_Ith_S(rY, 23):
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(141.9670801746057);

    // NV_Ith_S(rY, 24):
    this->mVariableNames.push_back("Ca_MK_act__Ca_MK_trap");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.789168284782809e-06);

    // NV_Ith_S(rY, 25):
    this->mVariableNames.push_back("Ca_NSR__Ca_NSR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.2132524695849454);

    // NV_Ith_S(rY, 26):
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.1433050636518596);

    // NV_Ith_S(rY, 27):
    this->mVariableNames.push_back("dyadic_space_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.00022418117117903934);

    // NV_Ith_S(rY, 28):
    this->mVariableNames.push_back("q_rel_ri_gate__ri");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7802870066567904);

    // NV_Ith_S(rY, 29):
    this->mVariableNames.push_back("q_rel_ro_gate__ro");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.2785734760674763e-09);

    // mParameters[0]:
    this->mParameterNames.push_back("SR_leak_current_max");
    this->mParameterUnits.push_back("millimolar_per_millisecond");

    // mParameters[1]:
    this->mParameterNames.push_back("SR_release_current_max");
    this->mParameterUnits.push_back("per_millisecond");

    // mParameters[2]:
    this->mParameterNames.push_back("SR_uptake_current_max");
    this->mParameterUnits.push_back("millimolar_per_millisecond");

    // mParameters[3]:
    this->mParameterNames.push_back("concentration_clamp_onoff");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[4]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[5]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[6]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_reduced_inactivation");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_shift_inactivation");
    this->mParameterUnits.push_back("millivolt");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[12]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[13]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[14]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("microA_per_microF");

    // mParameters[15]:
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("SR_release_current");
    this->mDerivedQuantityUnits.push_back("millimolar_per_millisecond");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current_f2_gate_tau");
    this->mDerivedQuantityUnits.push_back("millisecond");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current_fCa2_gate_tau");
    this->mDerivedQuantityUnits.push_back("millisecond");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current_fCa_gate_tau");
    this->mDerivedQuantityUnits.push_back("millisecond");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current_f_gate_tau");
    this->mDerivedQuantityUnits.push_back("millisecond");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_h_gate_tau");
    this->mDerivedQuantityUnits.push_back("millisecond");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_j_gate_tau");
    this->mDerivedQuantityUnits.push_back("millisecond");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [10]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [11]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [12]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [13]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [14]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [15]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellaslanidi_Purkinje_model_2009FromCellMLCvode)

#endif // CHASTE_CVODE
