#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: faber_rudy_2000
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: AnalyticCvode)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "faber_rudy_2000.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"


    boost::shared_ptr<RegularStimulus> Cellfaber_rudy_2000FromCellMLCvode::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__cell__stim_amplitude_converted = -25.5 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        const double var_chaste_interface__cell__stim_duration = 2.0; // ms
        const double var_chaste_interface__cell__stim_period = 1000.0; // ms
        const double var_chaste_interface__cell__stim_start = 100.0; // ms
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__cell__stim_amplitude_converted),
                var_chaste_interface__cell__stim_duration,
                var_chaste_interface__cell__stim_period,
                var_chaste_interface__cell__stim_start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }

    double Cellfaber_rudy_2000FromCellMLCvode::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Cellfaber_rudy_2000FromCellMLCvode::Cellfaber_rudy_2000FromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                25,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellfaber_rudy_2000FromCellMLCvode>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
        
        NV_Ith_S(this->mParameters, 0) = 1.0; // (var_calcium_dynamics__leak_factor) [dimensionless]
        NV_Ith_S(this->mParameters, 1) = 60.0; // (var_calcium_dynamics__G_rel_max) [per_ms]
        NV_Ith_S(this->mParameters, 2) = 0.00080000000000000004; // (var_calcium_dynamics__K_mrel) [millimolar]
        NV_Ith_S(this->mParameters, 3) = 0.0087500000000000008; // (var_calcium_dynamics__I_up) [millimolar_per_ms]
        NV_Ith_S(this->mParameters, 4) = 1.0; // (var_ionic_concentrations__conc_clamp) [dimensionless]
        NV_Ith_S(this->mParameters, 5) = 1.8; // (var_calcium_dynamics__Cao) [millimolar]
        NV_Ith_S(this->mParameters, 6) = 5.4000000000000004; // (var_ionic_concentrations__Ko) [millimolar]
        NV_Ith_S(this->mParameters, 7) = 140.0; // (var_ionic_concentrations__Nao) [millimolar]
        NV_Ith_S(this->mParameters, 8) = 0.00054000000000000001; // (var_L_type_Ca_channel__P_Ca) [litre_per_farad_ms]
        NV_Ith_S(this->mParameters, 9) = 16.0; // (var_fast_sodium_current__g_Na) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 10) = 0; // (var_fast_sodium_current__perc_reduced_inact_for_IpNa) [dimensionless]
        NV_Ith_S(this->mParameters, 11) = 0; // (var_fast_sodium_current__shift_INa_inact) [millivolt]
        NV_Ith_S(this->mParameters, 12) = 0.75; // (var_time_independent_potassium_current__G_K1) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 13) = 0.02614; // (var_rapid_delayed_rectifier_potassium_current__G_Kr) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 14) = 0.433; // (var_slow_delayed_rectifier_potassium_current__G_Ks) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 15) = 0.00025000000000000001; // (var_Na_Ca_exchanger__c1) [microA_per_microF]
        NV_Ith_S(this->mParameters, 16) = 0.5; // (var_transient_outward_current__g_to) [milliS_per_microF]
    }

    Cellfaber_rudy_2000FromCellMLCvode::~Cellfaber_rudy_2000FromCellMLCvode()
    {
    }

    
    double Cellfaber_rudy_2000FromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -85.2119207874627
        double var_chaste_interface__calcium_dynamics__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.000117482029668194
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.00149183115674257
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.985596581239651
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.990898461370389
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 5.82597094505446e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.997765362821995
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.00136737866785149
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.98881442877378
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.000204700363126417
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.00660746743356887
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.0303768241233812
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.0144622472219576
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.999945568566232
        double var_chaste_interface__ionic_concentrations__Nai = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 13.3649235394859
        double var_chaste_interface__ionic_concentrations__Ki = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 141.056872392446
        
        const double var_ATP_sensitive_potassium_current__ATPi = 3.0; // millimolar
        const double var_ATP_sensitive_potassium_current__hATP = 2.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__i_K_ATP_on = 1.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__kATP = 0.00025000000000000001; // millimolar
        const double var_ATP_sensitive_potassium_current__nATP = 0.23999999999999999; // dimensionless
        const double var_ATP_sensitive_potassium_current__nicholsarea = 5.0000000000000002e-5; // dimensionless
        const double var_ATP_sensitive_potassium_current__g_K_ATP = 0.000193 * var_ATP_sensitive_potassium_current__i_K_ATP_on / var_ATP_sensitive_potassium_current__nicholsarea; // milliS_per_microF
        const double var_ATP_sensitive_potassium_current__pATP = 1 / (1.0 + pow((var_ATP_sensitive_potassium_current__ATPi / var_ATP_sensitive_potassium_current__kATP), var_ATP_sensitive_potassium_current__hATP)); // dimensionless
        const double var_L_type_Ca_channel__P_K = 1.9299999999999999e-7; // litre_per_farad_ms
        const double var_L_type_Ca_channel__P_Na = 6.75e-7; // litre_per_farad_ms
        const double var_L_type_Ca_channel__gamma_Cai = 1.0; // dimensionless
        const double var_L_type_Ca_channel__gamma_Cao = 0.34100000000000003; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ki = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ko = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nai = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nao = 0.75; // dimensionless
        const double var_L_type_Ca_channel_f_Ca_gate__Km_Ca = 0.00059999999999999995; // millimolar
        const double var_Na_Ca_exchanger__c2 = 0.0001; // dimensionless
        const double var_Na_Ca_exchanger__gamma = 0.14999999999999999; // dimensionless
        const double var_T_type_Ca_channel__g_CaT = 0.050000000000000003; // milliS_per_microF
        const double var_calcium_background_current__g_Cab = 0.003016; // milliS_per_microF
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + var_chaste_interface__calcium_dynamics__Cai / var_L_type_Ca_channel_f_Ca_gate__Km_Ca); // dimensionless
        const double var_cell__F = 96485.0; // coulomb_per_mole
        const double var_cell__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_cell__T = 310.0; // kelvin
        const double var_calcium_background_current__E_Ca = 0.5 * var_cell__R * var_cell__T * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__calcium_dynamics__Cai) / var_cell__F; // millivolt
        const double var_L_type_Ca_channel__I_CaCa = 4.0 * pow(var_cell__F, 2) * (-var_L_type_Ca_channel__gamma_Cao * NV_Ith_S(mParameters, 5) + var_L_type_Ca_channel__gamma_Cai * var_chaste_interface__calcium_dynamics__Cai * exp(2.0 * var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * NV_Ith_S(mParameters, 8) * var_chaste_interface__cell__V / ((-1.0 + exp(2.0 * var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * var_cell__R * var_cell__T); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaCa = var_L_type_Ca_channel__I_CaCa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_T_type_Ca_channel__i_Ca_T = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2) * (-var_calcium_background_current__E_Ca + var_chaste_interface__cell__V) * var_T_type_Ca_channel__g_CaT * var_chaste_interface__T_type_Ca_channel_g_gate__g; // microA_per_microF
        const double var_calcium_background_current__i_Ca_b = (-var_calcium_background_current__E_Ca + var_chaste_interface__cell__V) * var_calcium_background_current__g_Cab; // microA_per_microF
        const double var_ATP_sensitive_potassium_current__GKbaraATP = pow((0.25 * NV_Ith_S(mParameters, 6)), var_ATP_sensitive_potassium_current__nATP) * var_ATP_sensitive_potassium_current__g_K_ATP * var_ATP_sensitive_potassium_current__pATP; // milliS_per_microF
        const double var_L_type_Ca_channel__I_CaK = pow(var_cell__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * NV_Ith_S(mParameters, 6) + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * var_L_type_Ca_channel__P_K * var_chaste_interface__cell__V / ((-1.0 + exp(var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * var_cell__R * var_cell__T); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaK = var_L_type_Ca_channel__I_CaK * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__I_CaNa = pow(var_cell__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * NV_Ith_S(mParameters, 7) + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * var_L_type_Ca_channel__P_Na * var_chaste_interface__cell__V / ((-1.0 + exp(var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * var_cell__R * var_cell__T); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaNa = var_L_type_Ca_channel__I_CaNa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_CaCa + var_L_type_Ca_channel__i_CaK + var_L_type_Ca_channel__i_CaNa; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L_converted = HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L; // uA_per_cm2
        const double var_Na_Ca_exchanger__i_NaCa = (-pow(NV_Ith_S(mParameters, 7), 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * NV_Ith_S(mParameters, 5) * exp(var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * NV_Ith_S(mParameters, 15) * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T)) / (1.0 + (pow(NV_Ith_S(mParameters, 7), 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * NV_Ith_S(mParameters, 5) * exp(var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * var_Na_Ca_exchanger__c2 * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))); // microA_per_microF
        const double var_Na_Ca_exchanger__i_NaCa_converted = HeartConfig::Instance()->GetCapacitance() * var_Na_Ca_exchanger__i_NaCa; // uA_per_cm2
        const double var_fast_sodium_current__E_Na = var_cell__R * var_cell__T * log(NV_Ith_S(mParameters, 7) / var_chaste_interface__ionic_concentrations__Nai) / var_cell__F; // millivolt
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_Na + var_chaste_interface__cell__V) * NV_Ith_S(mParameters, 9) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // microA_per_microF
        const double var_fast_sodium_current__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na; // uA_per_cm2
        const double var_non_specific_calcium_activated_current__K_m_ns_Ca = 0.0011999999999999999; // millimolar
        const double var_non_specific_calcium_activated_current__P_ns_Ca = 1.7499999999999999e-7; // litre_per_farad_ms
        const double var_non_specific_calcium_activated_current__I_ns_K = pow(var_cell__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * NV_Ith_S(mParameters, 6) + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * var_chaste_interface__cell__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * var_cell__R * var_cell__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__I_ns_Na = pow(var_cell__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * NV_Ith_S(mParameters, 7) + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * var_chaste_interface__cell__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * var_cell__R * var_cell__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_K = var_non_specific_calcium_activated_current__I_ns_K / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Na = var_non_specific_calcium_activated_current__I_ns_Na / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Ca = var_non_specific_calcium_activated_current__i_ns_K + var_non_specific_calcium_activated_current__i_ns_Na; // microA_per_microF
        const double var_plateau_potassium_current__Kp = 1 / (1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__cell__V)); // dimensionless
        const double var_plateau_potassium_current__g_Kp = 0.0055199999999999997; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__Rect = 1 / (1.0 + exp(0.4017857142857143 + 0.044642857142857144 * var_chaste_interface__cell__V)); // dimensionless
        const double var_rapid_delayed_rectifier_potassium_current__g_Kr = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 6)) * NV_Ith_S(mParameters, 13); // milliS_per_microF
        const double var_sarcolemmal_calcium_pump__I_pCa = 1.1499999999999999; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__K_mpCa = 0.00050000000000000001; // millimolar
        const double var_sarcolemmal_calcium_pump__i_p_Ca = var_chaste_interface__calcium_dynamics__Cai * var_sarcolemmal_calcium_pump__I_pCa / (var_chaste_interface__calcium_dynamics__Cai + var_sarcolemmal_calcium_pump__K_mpCa); // microA_per_microF
        const double var_slow_delayed_rectifier_potassium_current__PNaK = 0.018329999999999999; // dimensionless
        const double var_slow_delayed_rectifier_potassium_current__E_Ks = var_cell__R * var_cell__T * log((NV_Ith_S(mParameters, 7) * var_slow_delayed_rectifier_potassium_current__PNaK + NV_Ith_S(mParameters, 6)) / (var_chaste_interface__ionic_concentrations__Nai * var_slow_delayed_rectifier_potassium_current__PNaK + var_chaste_interface__ionic_concentrations__Ki)) / var_cell__F; // millivolt
        const double var_slow_delayed_rectifier_potassium_current__g_Ks = (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * NV_Ith_S(mParameters, 14); // milliS_per_microF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = (-var_slow_delayed_rectifier_potassium_current__E_Ks + var_chaste_interface__cell__V) * var_slow_delayed_rectifier_potassium_current__g_Ks * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2; // microA_per_microF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks_converted = HeartConfig::Instance()->GetCapacitance() * var_slow_delayed_rectifier_potassium_current__i_Ks; // uA_per_cm2
        const double var_sodium_activated_potassium_current__g_K_Na = 0.12848000000000001; // milliS_per_microF
        const double var_sodium_activated_potassium_current__kdKNa = 66.0; // millimolar
        const double var_sodium_activated_potassium_current__nKNa = 2.7999999999999998; // dimensionless
        const double var_sodium_activated_potassium_current__pona = 0.84999999999999998 / (1.0 + pow((var_sodium_activated_potassium_current__kdKNa / var_chaste_interface__ionic_concentrations__Nai), var_sodium_activated_potassium_current__nKNa)); // dimensionless
        const double var_sodium_activated_potassium_current__pov = 0.80000000000000004 - 0.65000000000000002 / (1.0 + exp(8.3333333333333339 + 0.066666666666666666 * var_chaste_interface__cell__V)); // dimensionless
        const double var_sodium_background_current__g_Nab = 0.0040000000000000001; // milliS_per_microF
        const double var_sodium_background_current__i_Na_b = (-var_fast_sodium_current__E_Na + var_chaste_interface__cell__V) * var_sodium_background_current__g_Nab; // microA_per_microF
        const double var_sodium_potassium_pump__I_NaK = 2.25; // microA_per_microF
        const double var_sodium_potassium_pump__K_mKo = 1.5; // millimolar
        const double var_sodium_potassium_pump__K_mNai = 10.0; // millimolar
        const double var_sodium_potassium_pump__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * NV_Ith_S(mParameters, 7)); // dimensionless
        const double var_sodium_potassium_pump__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T)) + 0.036499999999999998 * var_sodium_potassium_pump__sigma * exp(-var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))); // dimensionless
        const double var_sodium_potassium_pump__i_NaK = NV_Ith_S(mParameters, 6) * var_sodium_potassium_pump__I_NaK * var_sodium_potassium_pump__f_NaK / ((1.0 + pow(var_sodium_potassium_pump__K_mNai, 2) / pow(var_chaste_interface__ionic_concentrations__Nai, 2)) * (NV_Ith_S(mParameters, 6) + var_sodium_potassium_pump__K_mKo)); // microA_per_microF
        const double var_time_independent_potassium_current__E_K = var_cell__R * var_cell__T * log(NV_Ith_S(mParameters, 6) / var_chaste_interface__ionic_concentrations__Ki) / var_cell__F; // millivolt
        const double var_ATP_sensitive_potassium_current__i_K_ATP = (-var_time_independent_potassium_current__E_K + var_chaste_interface__cell__V) * var_ATP_sensitive_potassium_current__GKbaraATP; // microA_per_microF
        const double var_plateau_potassium_current__i_Kp = (-var_time_independent_potassium_current__E_K + var_chaste_interface__cell__V) * var_plateau_potassium_current__Kp * var_plateau_potassium_current__g_Kp; // microA_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_time_independent_potassium_current__E_K + var_chaste_interface__cell__V) * var_rapid_delayed_rectifier_potassium_current__Rect * var_rapid_delayed_rectifier_potassium_current__g_Kr * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr; // microA_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_rapid_delayed_rectifier_potassium_current__i_Kr; // uA_per_cm2
        const double var_sodium_activated_potassium_current__i_K_Na = (-var_time_independent_potassium_current__E_K + var_chaste_interface__cell__V) * var_sodium_activated_potassium_current__g_K_Na * var_sodium_activated_potassium_current__pona * var_sodium_activated_potassium_current__pov; // microA_per_microF
        const double var_time_independent_potassium_current__g_K1 = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 6)) * NV_Ith_S(mParameters, 12); // milliS_per_microF
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__cell__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K)); // per_ms
        const double var_time_independent_potassium_current_K1_gate__beta_K1 = (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__cell__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__cell__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K - 0.51429999999999998 * var_chaste_interface__cell__V)); // per_ms
        const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__cell__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_microF
        const double var_time_independent_potassium_current__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_time_independent_potassium_current__i_K1; // uA_per_cm2
        const double var_transient_outward_current__rvdv = exp(0.01 * var_chaste_interface__cell__V); // dimensionless
        const double var_transient_outward_current__i_to = pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__cell__V) * NV_Ith_S(mParameters, 16) * var_transient_outward_current__rvdv * var_chaste_interface__transient_outward_current_ydv_gate__ydv; // microA_per_microF
        const double var_transient_outward_current__i_to_converted = HeartConfig::Instance()->GetCapacitance() * var_transient_outward_current__i_to; // uA_per_cm2
        const double var_chaste_interface__i_ionic = HeartConfig::Instance()->GetCapacitance() * var_ATP_sensitive_potassium_current__i_K_ATP + HeartConfig::Instance()->GetCapacitance() * var_T_type_Ca_channel__i_Ca_T + HeartConfig::Instance()->GetCapacitance() * var_calcium_background_current__i_Ca_b + HeartConfig::Instance()->GetCapacitance() * var_non_specific_calcium_activated_current__i_ns_Ca + HeartConfig::Instance()->GetCapacitance() * var_plateau_potassium_current__i_Kp + HeartConfig::Instance()->GetCapacitance() * var_sarcolemmal_calcium_pump__i_p_Ca + HeartConfig::Instance()->GetCapacitance() * var_sodium_activated_potassium_current__i_K_Na + HeartConfig::Instance()->GetCapacitance() * var_sodium_background_current__i_Na_b + HeartConfig::Instance()->GetCapacitance() * var_sodium_potassium_pump__i_NaK + var_L_type_Ca_channel__i_Ca_L_converted + var_Na_Ca_exchanger__i_NaCa_converted + var_fast_sodium_current__i_Na_converted + var_rapid_delayed_rectifier_potassium_current__i_Kr_converted + var_slow_delayed_rectifier_potassium_current__i_Ks_converted + var_time_independent_potassium_current__i_K1_converted + var_transient_outward_current__i_to_converted; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellfaber_rudy_2000FromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -85.2119207874627
        double var_chaste_interface__calcium_dynamics__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.000117482029668194
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.00149183115674257
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.985596581239651
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.990898461370389
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 5.82597094505446e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.997765362821995
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.00136737866785149
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.98881442877378
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.000204700363126417
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.00660746743356887
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.0303768241233812
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.0144622472219576
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.999945568566232
        double var_chaste_interface__calcium_dynamics__Ca_JSR = NV_Ith_S(rY, 14);
        // Units: millimolar; Initial value: 1.12791401197882
        double var_chaste_interface__calcium_dynamics__Ca_NSR = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 1.76731003671612
        double var_chaste_interface__calcium_dynamics__APtrack = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 9.65910542308504e-196
        double var_chaste_interface__calcium_dynamics__APtrack2 = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 5.33944967562997e-195
        double var_chaste_interface__calcium_dynamics__APtrack3 = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 0.000129515197402902
        double var_chaste_interface__calcium_dynamics__Cainfluxtrack = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 2.69380318286645e-196
        double var_chaste_interface__calcium_dynamics__OVRLDtrack = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack2 = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack3 = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ionic_concentrations__Nai = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 13.3649235394859
        double var_chaste_interface__ionic_concentrations__Ki = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 141.056872392446

        // Mathematics
        double d_dt_chaste_interface_var_cell__V;
        const double var_ATP_sensitive_potassium_current__ATPi = 3.0; // millimolar
        const double var_ATP_sensitive_potassium_current__hATP = 2.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__i_K_ATP_on = 1.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__kATP = 0.00025000000000000001; // millimolar
        const double var_ATP_sensitive_potassium_current__nATP = 0.23999999999999999; // dimensionless
        const double var_ATP_sensitive_potassium_current__nicholsarea = 5.0000000000000002e-5; // dimensionless
        const double var_ATP_sensitive_potassium_current__g_K_ATP = 0.000193 * var_ATP_sensitive_potassium_current__i_K_ATP_on / var_ATP_sensitive_potassium_current__nicholsarea; // milliS_per_microF
        const double var_ATP_sensitive_potassium_current__pATP = 1 / (1.0 + pow((var_ATP_sensitive_potassium_current__ATPi / var_ATP_sensitive_potassium_current__kATP), var_ATP_sensitive_potassium_current__hATP)); // dimensionless
        const double var_L_type_Ca_channel__P_K = 1.9299999999999999e-7; // litre_per_farad_ms
        const double var_L_type_Ca_channel__P_Na = 6.75e-7; // litre_per_farad_ms
        const double var_L_type_Ca_channel__gamma_Cai = 1.0; // dimensionless
        const double var_L_type_Ca_channel__gamma_Cao = 0.34100000000000003; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ki = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ko = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nai = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nao = 0.75; // dimensionless
        const double var_L_type_Ca_channel_f_Ca_gate__Km_Ca = 0.00059999999999999995; // millimolar
        const double var_Na_Ca_exchanger__c2 = 0.0001; // dimensionless
        const double var_Na_Ca_exchanger__gamma = 0.14999999999999999; // dimensionless
        const double var_T_type_Ca_channel__g_CaT = 0.050000000000000003; // milliS_per_microF
        const double var_calcium_background_current__g_Cab = 0.003016; // milliS_per_microF
        const double d_dt_chaste_interface_var_calcium_dynamics__APtrack2 = (((var_chaste_interface__calcium_dynamics__APtrack > 0.17999999999999999) && (var_chaste_interface__calcium_dynamics__APtrack < 0.20000000000000001)) ? (100.0 - 100.5 * var_chaste_interface__calcium_dynamics__APtrack2) : (-0.5 * var_chaste_interface__calcium_dynamics__APtrack2)); // 1 / ms
        const double d_dt_chaste_interface_var_calcium_dynamics__APtrack3 = (((var_chaste_interface__calcium_dynamics__APtrack > 0.17999999999999999) && (var_chaste_interface__calcium_dynamics__APtrack < 0.20000000000000001)) ? (100.0 - 100.5 * var_chaste_interface__calcium_dynamics__APtrack3) : (-0.01 * var_chaste_interface__calcium_dynamics__APtrack3)); // 1 / ms
        const double var_calcium_dynamics__CMDN_max = 0.050000000000000003; // millimolar
        const double var_calcium_dynamics__CSQN_max = 10.0; // millimolar
        const double var_calcium_dynamics__CSQNthresh = 0.69999999999999996; // dimensionless
        const double var_calcium_dynamics__Ca_NSR_max = 15.0; // millimolar
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + var_chaste_interface__calcium_dynamics__Cai / var_L_type_Ca_channel_f_Ca_gate__Km_Ca); // dimensionless
        const double var_calcium_dynamics__K_mCMDN = 0.0023800000000000002; // millimolar
        const double var_calcium_dynamics__K_mCSQN = 0.80000000000000004; // millimolar
        const double var_calcium_dynamics__K_mTn = 0.00050000000000000001; // millimolar
        const double var_calcium_dynamics__K_mup = 0.00092000000000000003; // millimolar
        const double var_calcium_dynamics__Logicthresh = 0.97999999999999998; // dimensionless
        const double d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack2 = (((var_calcium_dynamics__Logicthresh > var_chaste_interface__calcium_dynamics__OVRLDtrack2) && (var_calcium_dynamics__Logicthresh < var_chaste_interface__calcium_dynamics__OVRLDtrack)) ? (50.0 - 50.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (-0.5 * var_chaste_interface__calcium_dynamics__OVRLDtrack2)); // 1 / ms
        const double d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack = (((var_chaste_interface__calcium_dynamics__APtrack3 < 0.37) && (var_chaste_interface__calcium_dynamics__OVRLDtrack3 < 0.37) && (var_calcium_dynamics__CSQNthresh < 1 / (1.0 + var_calcium_dynamics__K_mCSQN / var_chaste_interface__calcium_dynamics__Ca_JSR))) ? (50.0 - 50.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack) : (-0.5 * var_chaste_interface__calcium_dynamics__OVRLDtrack)); // 1 / ms
        const double d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack3 = (((var_calcium_dynamics__Logicthresh > var_chaste_interface__calcium_dynamics__OVRLDtrack3) && (var_calcium_dynamics__Logicthresh < var_chaste_interface__calcium_dynamics__OVRLDtrack)) ? (50.0 - 50.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack3) : (-0.01 * var_chaste_interface__calcium_dynamics__OVRLDtrack3)); // 1 / ms
        const double var_calcium_dynamics__RyRopen = 1 / (1.0 + var_chaste_interface__calcium_dynamics__APtrack2 * exp(2.0)); // dimensionless
        const double var_calcium_dynamics__RyRclose = 1.0 - var_calcium_dynamics__RyRopen; // dimensionless
        const double var_calcium_dynamics__Tn_max = 0.070000000000000007; // millimolar
        const double var_calcium_dynamics__i_up = var_chaste_interface__calcium_dynamics__Cai * NV_Ith_S(mParameters, 3) / (var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__K_mup); // millimolar_per_ms
        const double var_calcium_dynamics__K_leak = NV_Ith_S(mParameters, 3) * NV_Ith_S(mParameters, 0) / var_calcium_dynamics__Ca_NSR_max; // per_ms
        const double var_calcium_dynamics__i_leak = var_chaste_interface__calcium_dynamics__Ca_NSR * var_calcium_dynamics__K_leak; // millimolar_per_ms
        const double var_calcium_dynamics__tau_tr = 180.0; // ms
        const double var_calcium_dynamics__i_tr = (-var_chaste_interface__calcium_dynamics__Ca_JSR + var_chaste_interface__calcium_dynamics__Ca_NSR) / var_calcium_dynamics__tau_tr; // millimolar_per_ms
        const double var_cell__F = 96485.0; // coulomb_per_mole
        const double var_cell__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_cell__T = 310.0; // kelvin
        const double var_calcium_background_current__E_Ca = 0.5 * var_cell__R * var_cell__T * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__calcium_dynamics__Cai) / var_cell__F; // millivolt
        const double var_L_type_Ca_channel__I_CaCa = 4.0 * pow(var_cell__F, 2) * (-var_L_type_Ca_channel__gamma_Cao * NV_Ith_S(mParameters, 5) + var_L_type_Ca_channel__gamma_Cai * var_chaste_interface__calcium_dynamics__Cai * exp(2.0 * var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * NV_Ith_S(mParameters, 8) * var_chaste_interface__cell__V / ((-1.0 + exp(2.0 * var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * var_cell__R * var_cell__T); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaCa = var_L_type_Ca_channel__I_CaCa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel_d_gate__d_infinity = 1 / (1.0 + exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__cell__V)); // dimensionless
        const double var_L_type_Ca_channel_d_gate__tau_d = 28.571428571428569 * (1.0 - exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__cell__V)) * var_L_type_Ca_channel_d_gate__d_infinity / (10.0 + var_chaste_interface__cell__V); // ms
        const double var_L_type_Ca_channel_d_gate__alpha_d = var_L_type_Ca_channel_d_gate__d_infinity / var_L_type_Ca_channel_d_gate__tau_d; // per_ms
        const double var_L_type_Ca_channel_d_gate__beta_d = (1.0 - var_L_type_Ca_channel_d_gate__d_infinity) / var_L_type_Ca_channel_d_gate__tau_d; // per_ms
        const double d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d = (1.0 - var_chaste_interface__L_type_Ca_channel_d_gate__d) * var_L_type_Ca_channel_d_gate__alpha_d - var_L_type_Ca_channel_d_gate__beta_d * var_chaste_interface__L_type_Ca_channel_d_gate__d; // 1 / ms
        const double var_L_type_Ca_channel_f_gate__f_infinity = 1 / (1.0 + exp(4.0767441860465121 + 0.11627906976744186 * var_chaste_interface__cell__V)) + 0.59999999999999998 / (1.0 + exp(2.5 - 0.050000000000000003 * var_chaste_interface__cell__V)); // dimensionless
        const double var_L_type_Ca_channel_f_gate__tau_f = 1 / (0.02 + 0.019699999999999999 * exp(-0.113569 * pow((1 + 0.10000000000000001 * var_chaste_interface__cell__V), 2))); // ms
        const double var_L_type_Ca_channel_f_gate__alpha_f = var_L_type_Ca_channel_f_gate__f_infinity / var_L_type_Ca_channel_f_gate__tau_f; // per_ms
        const double var_L_type_Ca_channel_f_gate__beta_f = (1.0 - var_L_type_Ca_channel_f_gate__f_infinity) / var_L_type_Ca_channel_f_gate__tau_f; // per_ms
        const double d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f = (1.0 - var_chaste_interface__L_type_Ca_channel_f_gate__f) * var_L_type_Ca_channel_f_gate__alpha_f - var_L_type_Ca_channel_f_gate__beta_f * var_chaste_interface__L_type_Ca_channel_f_gate__f; // 1 / ms
        const double var_T_type_Ca_channel__i_Ca_T = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2) * (-var_calcium_background_current__E_Ca + var_chaste_interface__cell__V) * var_T_type_Ca_channel__g_CaT * var_chaste_interface__T_type_Ca_channel_g_gate__g; // microA_per_microF
        const double var_T_type_Ca_channel_b_gate__b_inf = 1 / (1.0 + exp(-1.2962962962962963 - 0.092592592592592587 * var_chaste_interface__cell__V)); // dimensionless
        const double var_T_type_Ca_channel_b_gate__tau_b = 3.7000000000000002 + 6.0999999999999996 / (1.0 + exp(5.5555555555555554 + 0.22222222222222221 * var_chaste_interface__cell__V)); // ms
        const double d_dt_chaste_interface_var_T_type_Ca_channel_b_gate__b = (-var_chaste_interface__T_type_Ca_channel_b_gate__b + var_T_type_Ca_channel_b_gate__b_inf) / var_T_type_Ca_channel_b_gate__tau_b; // 1 / ms
        const double var_T_type_Ca_channel_g_gate__g_inf = 1 / (1.0 + exp(10.714285714285715 + 0.17857142857142858 * var_chaste_interface__cell__V)); // dimensionless
        const double var_T_type_Ca_channel_g_gate__tau_g = ((var_chaste_interface__cell__V <= 0) ? (12.0 - 0.875 * var_chaste_interface__cell__V) : (12.0)); // ms
        const double d_dt_chaste_interface_var_T_type_Ca_channel_g_gate__g = (-var_chaste_interface__T_type_Ca_channel_g_gate__g + var_T_type_Ca_channel_g_gate__g_inf) / var_T_type_Ca_channel_g_gate__tau_g; // 1 / ms
        const double var_calcium_background_current__i_Ca_b = (-var_calcium_background_current__E_Ca + var_chaste_interface__cell__V) * var_calcium_background_current__g_Cab; // microA_per_microF
        const double var_cell__I_st_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
        const double var_cell__I_st = var_cell__I_st_converted / HeartConfig::Instance()->GetCapacitance(); // microA_per_microF
        const double var_fast_sodium_current_h_gate__alpha_h = ((var_chaste_interface__cell__V < -40.0) ? (0.13500000000000001 * exp(-11.764705882352942 + 0.14705882352941177 * NV_Ith_S(mParameters, 11) - 0.14705882352941177 * var_chaste_interface__cell__V)) : (0)); // per_ms
        const double var_fast_sodium_current_h_gate__beta_h = ((var_chaste_interface__cell__V < -40.0) ? (310000.0 * exp(0.34999999999999998 * var_chaste_interface__cell__V - 0.34999999999999998 * NV_Ith_S(mParameters, 11)) + 3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__cell__V - 0.079000000000000001 * NV_Ith_S(mParameters, 11))) : (7.6923076923076916 / (1.0 + exp(-0.96036036036036043 + 0.0900900900900901 * NV_Ith_S(mParameters, 11) - 0.0900900900900901 * var_chaste_interface__cell__V)))); // per_ms
        const double var_fast_sodium_current_h_gate__h_inf = 0.01 * NV_Ith_S(mParameters, 10) + (1.0 - 0.01 * NV_Ith_S(mParameters, 10)) * var_fast_sodium_current_h_gate__alpha_h / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h); // dimensionless
        const double var_fast_sodium_current_h_gate__tau_h = 1 / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h); // ms
        const double d_dt_chaste_interface_var_fast_sodium_current_h_gate__h = (-var_chaste_interface__fast_sodium_current_h_gate__h + var_fast_sodium_current_h_gate__h_inf) / var_fast_sodium_current_h_gate__tau_h; // 1 / ms
        const double var_fast_sodium_current_j_gate__alpha_j = ((var_chaste_interface__cell__V < -40.0) ? ((37.780000000000001 + var_chaste_interface__cell__V) * (-127140.0 * exp(0.24440000000000001 * var_chaste_interface__cell__V - 0.24440000000000001 * NV_Ith_S(mParameters, 11)) - 3.4740000000000003e-5 * exp(0.043909999999999998 * NV_Ith_S(mParameters, 11) - 0.043909999999999998 * var_chaste_interface__cell__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__cell__V - 0.311 * NV_Ith_S(mParameters, 11)))) : (0)); // per_ms
        const double var_fast_sodium_current_j_gate__beta_j = ((var_chaste_interface__cell__V < -40.0) ? (0.1212 * exp(0.01052 * NV_Ith_S(mParameters, 11) - 0.01052 * var_chaste_interface__cell__V) / (1.0 + exp(-5.5312920000000005 + 0.13780000000000001 * NV_Ith_S(mParameters, 11) - 0.13780000000000001 * var_chaste_interface__cell__V))) : (0.29999999999999999 * exp(2.5349999999999999e-7 * NV_Ith_S(mParameters, 11) - 2.5349999999999999e-7 * var_chaste_interface__cell__V) / (1.0 + exp(-3.2000000000000002 + 0.10000000000000001 * NV_Ith_S(mParameters, 11) - 0.10000000000000001 * var_chaste_interface__cell__V)))); // per_ms
        const double var_fast_sodium_current_j_gate__j_inf = 0.01 * NV_Ith_S(mParameters, 10) + (1.0 - 0.01 * NV_Ith_S(mParameters, 10)) * var_fast_sodium_current_j_gate__alpha_j / (var_fast_sodium_current_j_gate__alpha_j + var_fast_sodium_current_j_gate__beta_j); // dimensionless
        const double var_fast_sodium_current_j_gate__tau_j = 1 / (var_fast_sodium_current_j_gate__alpha_j + var_fast_sodium_current_j_gate__beta_j); // ms
        const double d_dt_chaste_interface_var_fast_sodium_current_j_gate__j = (-var_chaste_interface__fast_sodium_current_j_gate__j + var_fast_sodium_current_j_gate__j_inf) / var_fast_sodium_current_j_gate__tau_j; // 1 / ms
        const double var_fast_sodium_current_m_gate__alpha_m = 0.32000000000000001 * (47.130000000000003 + var_chaste_interface__cell__V) / (1.0 - exp(-4.7130000000000001 - 0.10000000000000001 * var_chaste_interface__cell__V)); // per_ms
        const double var_fast_sodium_current_m_gate__beta_m = 0.080000000000000002 * exp(-0.090909090909090912 * var_chaste_interface__cell__V); // per_ms
        const double d_dt_chaste_interface_var_fast_sodium_current_m_gate__m = (1.0 - var_chaste_interface__fast_sodium_current_m_gate__m) * var_fast_sodium_current_m_gate__alpha_m - var_fast_sodium_current_m_gate__beta_m * var_chaste_interface__fast_sodium_current_m_gate__m; // 1 / ms
        const double var_geometry__A_cap = 0.00015339999999999999; // cm2
        const double var_geometry__preplength = 0.10000000000000001; // mm
        const double var_geometry__radius = 0.010999999999999999; // mm
        const double var_geometry__volume = M_PI * pow(var_geometry__radius, 2) * var_geometry__preplength; // micro_litre
        const double var_geometry__V_JSR = 0.0047999999999999996 * var_geometry__volume; // micro_litre
        const double var_geometry__V_NSR = 0.055199999999999999 * var_geometry__volume; // micro_litre
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_NSR = -var_calcium_dynamics__i_leak - var_calcium_dynamics__i_tr * var_geometry__V_JSR / var_geometry__V_NSR + var_calcium_dynamics__i_up; // millimolar / ms
        const double var_geometry__V_myo = 0.68000000000000005 * var_geometry__volume; // micro_litre
        const double var_ATP_sensitive_potassium_current__GKbaraATP = pow((0.25 * NV_Ith_S(mParameters, 6)), var_ATP_sensitive_potassium_current__nATP) * var_ATP_sensitive_potassium_current__g_K_ATP * var_ATP_sensitive_potassium_current__pATP; // milliS_per_microF
        const double var_L_type_Ca_channel__I_CaK = pow(var_cell__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * NV_Ith_S(mParameters, 6) + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * var_L_type_Ca_channel__P_K * var_chaste_interface__cell__V / ((-1.0 + exp(var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * var_cell__R * var_cell__T); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaK = var_L_type_Ca_channel__I_CaK * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__I_CaNa = pow(var_cell__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * NV_Ith_S(mParameters, 7) + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * var_L_type_Ca_channel__P_Na * var_chaste_interface__cell__V / ((-1.0 + exp(var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * var_cell__R * var_cell__T); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaNa = var_L_type_Ca_channel__I_CaNa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_CaCa + var_L_type_Ca_channel__i_CaK + var_L_type_Ca_channel__i_CaNa; // microA_per_microF
        const double var_Na_Ca_exchanger__i_NaCa = (-pow(NV_Ith_S(mParameters, 7), 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * NV_Ith_S(mParameters, 5) * exp(var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * NV_Ith_S(mParameters, 15) * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T)) / (1.0 + (pow(NV_Ith_S(mParameters, 7), 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * NV_Ith_S(mParameters, 5) * exp(var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * var_Na_Ca_exchanger__c2 * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))); // microA_per_microF
        const double var_fast_sodium_current__E_Na = var_cell__R * var_cell__T * log(NV_Ith_S(mParameters, 7) / var_chaste_interface__ionic_concentrations__Nai) / var_cell__F; // millivolt
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_Na + var_chaste_interface__cell__V) * NV_Ith_S(mParameters, 9) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // microA_per_microF
        const double var_non_specific_calcium_activated_current__K_m_ns_Ca = 0.0011999999999999999; // millimolar
        const double var_non_specific_calcium_activated_current__P_ns_Ca = 1.7499999999999999e-7; // litre_per_farad_ms
        const double var_non_specific_calcium_activated_current__I_ns_K = pow(var_cell__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * NV_Ith_S(mParameters, 6) + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * var_chaste_interface__cell__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * var_cell__R * var_cell__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__I_ns_Na = pow(var_cell__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * NV_Ith_S(mParameters, 7) + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * var_chaste_interface__cell__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * var_cell__R * var_cell__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_K = var_non_specific_calcium_activated_current__I_ns_K / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Na = var_non_specific_calcium_activated_current__I_ns_Na / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Ca = var_non_specific_calcium_activated_current__i_ns_K + var_non_specific_calcium_activated_current__i_ns_Na; // microA_per_microF
        const double var_plateau_potassium_current__Kp = 1 / (1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__cell__V)); // dimensionless
        const double var_plateau_potassium_current__g_Kp = 0.0055199999999999997; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__Rect = 1 / (1.0 + exp(0.4017857142857143 + 0.044642857142857144 * var_chaste_interface__cell__V)); // dimensionless
        const double var_rapid_delayed_rectifier_potassium_current__g_Kr = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 6)) * NV_Ith_S(mParameters, 13); // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current_xr_gate__tau_xr = 1 / (0.00060999999999999997 * (38.899999999999999 + var_chaste_interface__cell__V) / (-1.0 + exp(5.6404999999999994 + 0.14499999999999999 * var_chaste_interface__cell__V)) + 0.0013799999999999999 * (14.199999999999999 + var_chaste_interface__cell__V) / (1.0 - exp(-1.7465999999999999 - 0.123 * var_chaste_interface__cell__V))); // ms
        const double var_rapid_delayed_rectifier_potassium_current_xr_gate__xr_infinity = 1 / (1.0 + exp(-2.8666666666666667 - 0.13333333333333333 * var_chaste_interface__cell__V)); // dimensionless
        const double d_dt_chaste_interface_var_rapid_delayed_rectifier_potassium_current_xr_gate__xr = (-var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr + var_rapid_delayed_rectifier_potassium_current_xr_gate__xr_infinity) / var_rapid_delayed_rectifier_potassium_current_xr_gate__tau_xr; // 1 / ms
        const double var_sarcolemmal_calcium_pump__I_pCa = 1.1499999999999999; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__K_mpCa = 0.00050000000000000001; // millimolar
        const double var_sarcolemmal_calcium_pump__i_p_Ca = var_chaste_interface__calcium_dynamics__Cai * var_sarcolemmal_calcium_pump__I_pCa / (var_chaste_interface__calcium_dynamics__Cai + var_sarcolemmal_calcium_pump__K_mpCa); // microA_per_microF
        const double d_dt_chaste_interface_var_calcium_dynamics__Cainfluxtrack = ((var_chaste_interface__calcium_dynamics__APtrack > 0.20000000000000001) ? (-0.5 * (-2.0 * var_Na_Ca_exchanger__i_NaCa + var_L_type_Ca_channel__i_CaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_sarcolemmal_calcium_pump__i_p_Ca) * var_geometry__A_cap / (var_cell__F * var_geometry__V_myo)) : ((var_chaste_interface__calcium_dynamics__APtrack2 > 0.01) ? (0) : (-0.5 * var_chaste_interface__calcium_dynamics__Cainfluxtrack))); // millimolar / ms
        const double var_calcium_dynamics__G_rel = 150.0 * var_calcium_dynamics__RyRclose * var_calcium_dynamics__RyRopen / (1.0 + exp(5.5555555555555554 + 1.1111111111111112 * var_L_type_Ca_channel__i_CaCa + 1.1111111111111112 * var_T_type_Ca_channel__i_Ca_T + 1.1111111111111112 * var_calcium_background_current__i_Ca_b + 1.1111111111111112 * var_sarcolemmal_calcium_pump__i_p_Ca - 2.2222222222222223 * var_Na_Ca_exchanger__i_NaCa)); // per_ms
        const double var_calcium_dynamics__i_rel = (-var_chaste_interface__calcium_dynamics__Cai + var_chaste_interface__calcium_dynamics__Ca_JSR) * var_calcium_dynamics__G_rel; // millimolar_per_ms
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_JSR = (-var_calcium_dynamics__i_rel + var_calcium_dynamics__i_tr) / (1.0 + var_calcium_dynamics__CSQN_max * var_calcium_dynamics__K_mCSQN / pow((var_chaste_interface__calcium_dynamics__Ca_JSR + var_calcium_dynamics__K_mCSQN), 2)); // millimolar / ms
        const double d_dt_chaste_interface_var_calcium_dynamics__Cai = ((-var_calcium_dynamics__i_up + var_calcium_dynamics__i_leak) * var_geometry__V_NSR / var_geometry__V_myo + var_calcium_dynamics__i_rel * var_geometry__V_JSR / var_geometry__V_myo - 0.5 * (-2.0 * var_Na_Ca_exchanger__i_NaCa + var_L_type_Ca_channel__i_CaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_sarcolemmal_calcium_pump__i_p_Ca) * var_geometry__A_cap / (var_cell__F * var_geometry__V_myo)) / (1.0 + var_calcium_dynamics__CMDN_max * var_calcium_dynamics__K_mCMDN / pow((var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__K_mCMDN), 2) + var_calcium_dynamics__K_mTn * var_calcium_dynamics__Tn_max / pow((var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__K_mTn), 2)); // millimolar / ms
        const double var_slow_delayed_rectifier_potassium_current__PNaK = 0.018329999999999999; // dimensionless
        const double var_slow_delayed_rectifier_potassium_current__E_Ks = var_cell__R * var_cell__T * log((NV_Ith_S(mParameters, 7) * var_slow_delayed_rectifier_potassium_current__PNaK + NV_Ith_S(mParameters, 6)) / (var_chaste_interface__ionic_concentrations__Nai * var_slow_delayed_rectifier_potassium_current__PNaK + var_chaste_interface__ionic_concentrations__Ki)) / var_cell__F; // millivolt
        const double var_slow_delayed_rectifier_potassium_current__g_Ks = (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * NV_Ith_S(mParameters, 14); // milliS_per_microF
        const double var_slow_delayed_rectifier_potassium_current_xs1_gate__tau_xs1 = 1 / (0.00013100000000000001 * (30.0 + var_chaste_interface__cell__V) / (-1.0 + exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__cell__V)) + 7.1899999999999999e-5 * (30.0 + var_chaste_interface__cell__V) / (1.0 - exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__cell__V))); // ms
        const double var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_infinity = 1 / (1.0 + exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__cell__V)); // dimensionless
        const double d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = (-var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 + var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_infinity) / var_slow_delayed_rectifier_potassium_current_xs1_gate__tau_xs1; // 1 / ms
        const double var_slow_delayed_rectifier_potassium_current_xs2_gate__tau_xs2 = 4.0 / (0.00013100000000000001 * (30.0 + var_chaste_interface__cell__V) / (-1.0 + exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__cell__V)) + 7.1899999999999999e-5 * (30.0 + var_chaste_interface__cell__V) / (1.0 - exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__cell__V))); // ms
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = (-var_slow_delayed_rectifier_potassium_current__E_Ks + var_chaste_interface__cell__V) * var_slow_delayed_rectifier_potassium_current__g_Ks * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2; // microA_per_microF
        const double var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_infinity = 1 / (1.0 + exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__cell__V)); // dimensionless
        const double d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = (-var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 + var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_infinity) / var_slow_delayed_rectifier_potassium_current_xs2_gate__tau_xs2; // 1 / ms
        const double var_sodium_activated_potassium_current__g_K_Na = 0.12848000000000001; // milliS_per_microF
        const double var_sodium_activated_potassium_current__kdKNa = 66.0; // millimolar
        const double var_sodium_activated_potassium_current__nKNa = 2.7999999999999998; // dimensionless
        const double var_sodium_activated_potassium_current__pona = 0.84999999999999998 / (1.0 + pow((var_sodium_activated_potassium_current__kdKNa / var_chaste_interface__ionic_concentrations__Nai), var_sodium_activated_potassium_current__nKNa)); // dimensionless
        const double var_sodium_activated_potassium_current__pov = 0.80000000000000004 - 0.65000000000000002 / (1.0 + exp(8.3333333333333339 + 0.066666666666666666 * var_chaste_interface__cell__V)); // dimensionless
        const double var_sodium_background_current__g_Nab = 0.0040000000000000001; // milliS_per_microF
        const double var_sodium_background_current__i_Na_b = (-var_fast_sodium_current__E_Na + var_chaste_interface__cell__V) * var_sodium_background_current__g_Nab; // microA_per_microF
        const double var_sodium_potassium_pump__I_NaK = 2.25; // microA_per_microF
        const double var_sodium_potassium_pump__K_mKo = 1.5; // millimolar
        const double var_sodium_potassium_pump__K_mNai = 10.0; // millimolar
        const double var_sodium_potassium_pump__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * NV_Ith_S(mParameters, 7)); // dimensionless
        const double var_sodium_potassium_pump__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T)) + 0.036499999999999998 * var_sodium_potassium_pump__sigma * exp(-var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))); // dimensionless
        const double var_sodium_potassium_pump__i_NaK = NV_Ith_S(mParameters, 6) * var_sodium_potassium_pump__I_NaK * var_sodium_potassium_pump__f_NaK / ((1.0 + pow(var_sodium_potassium_pump__K_mNai, 2) / pow(var_chaste_interface__ionic_concentrations__Nai, 2)) * (NV_Ith_S(mParameters, 6) + var_sodium_potassium_pump__K_mKo)); // microA_per_microF
        const double d_dt_chaste_interface_var_ionic_concentrations__Nai = -(3.0 * var_Na_Ca_exchanger__i_NaCa + 3.0 * var_sodium_potassium_pump__i_NaK + var_L_type_Ca_channel__i_CaNa + var_fast_sodium_current__i_Na + var_non_specific_calcium_activated_current__i_ns_Na + var_sodium_background_current__i_Na_b) * var_geometry__A_cap * NV_Ith_S(mParameters, 4) / (var_cell__F * var_geometry__V_myo); // millimolar / ms
        const double var_time_independent_potassium_current__E_K = var_cell__R * var_cell__T * log(NV_Ith_S(mParameters, 6) / var_chaste_interface__ionic_concentrations__Ki) / var_cell__F; // millivolt
        const double var_ATP_sensitive_potassium_current__i_K_ATP = (-var_time_independent_potassium_current__E_K + var_chaste_interface__cell__V) * var_ATP_sensitive_potassium_current__GKbaraATP; // microA_per_microF
        const double var_plateau_potassium_current__i_Kp = (-var_time_independent_potassium_current__E_K + var_chaste_interface__cell__V) * var_plateau_potassium_current__Kp * var_plateau_potassium_current__g_Kp; // microA_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_time_independent_potassium_current__E_K + var_chaste_interface__cell__V) * var_rapid_delayed_rectifier_potassium_current__Rect * var_rapid_delayed_rectifier_potassium_current__g_Kr * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr; // microA_per_microF
        const double var_sodium_activated_potassium_current__i_K_Na = (-var_time_independent_potassium_current__E_K + var_chaste_interface__cell__V) * var_sodium_activated_potassium_current__g_K_Na * var_sodium_activated_potassium_current__pona * var_sodium_activated_potassium_current__pov; // microA_per_microF
        const double var_time_independent_potassium_current__g_K1 = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 6)) * NV_Ith_S(mParameters, 12); // milliS_per_microF
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__cell__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K)); // per_ms
        const double var_time_independent_potassium_current_K1_gate__beta_K1 = (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__cell__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__cell__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K - 0.51429999999999998 * var_chaste_interface__cell__V)); // per_ms
        const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__cell__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_microF
        const double var_transient_outward_current__rvdv = exp(0.01 * var_chaste_interface__cell__V); // dimensionless
        const double var_transient_outward_current_ydv_gate__alpha_ydv = 0.014999999999999999 / (1.0 + exp(12.0 + 0.20000000000000001 * var_chaste_interface__cell__V)); // per_ms
        const double var_transient_outward_current_ydv_gate__beta_ydv = 0.10000000000000001 * exp(5.0 + 0.20000000000000001 * var_chaste_interface__cell__V) / (1.0 + exp(5.0 + 0.20000000000000001 * var_chaste_interface__cell__V)); // per_ms
        const double var_transient_outward_current_ydv_gate__tau_ydv = 1 / (var_transient_outward_current_ydv_gate__alpha_ydv + var_transient_outward_current_ydv_gate__beta_ydv); // ms
        const double var_transient_outward_current_ydv_gate__ydv_ss = var_transient_outward_current_ydv_gate__alpha_ydv / (var_transient_outward_current_ydv_gate__alpha_ydv + var_transient_outward_current_ydv_gate__beta_ydv); // dimensionless
        const double d_dt_chaste_interface_var_transient_outward_current_ydv_gate__ydv = (-var_chaste_interface__transient_outward_current_ydv_gate__ydv + var_transient_outward_current_ydv_gate__ydv_ss) / var_transient_outward_current_ydv_gate__tau_ydv; // 1 / ms
        const double var_transient_outward_current_zdv_gate__alpha_zdv = 10.0 * exp(-1.6000000000000001 + 0.040000000000000001 * var_chaste_interface__cell__V) / (1.0 + exp(-1.6000000000000001 + 0.040000000000000001 * var_chaste_interface__cell__V)); // per_ms
        const double var_transient_outward_current_zdv_gate__beta_zdv = 10.0 * exp(-3.6000000000000001 - 0.040000000000000001 * var_chaste_interface__cell__V) / (1.0 + exp(-3.6000000000000001 - 0.040000000000000001 * var_chaste_interface__cell__V)); // per_ms
        const double var_transient_outward_current_zdv_gate__tau_zdv = 1 / (var_transient_outward_current_zdv_gate__alpha_zdv + var_transient_outward_current_zdv_gate__beta_zdv); // ms
        const double var_transient_outward_current__i_to = pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__cell__V) * NV_Ith_S(mParameters, 16) * var_transient_outward_current__rvdv * var_chaste_interface__transient_outward_current_ydv_gate__ydv; // microA_per_microF
        const double d_dt_chaste_interface_var_ionic_concentrations__Ki = -(-2.0 * var_sodium_potassium_pump__i_NaK + var_ATP_sensitive_potassium_current__i_K_ATP + var_L_type_Ca_channel__i_CaK + var_cell__I_st + var_non_specific_calcium_activated_current__i_ns_K + var_plateau_potassium_current__i_Kp + var_rapid_delayed_rectifier_potassium_current__i_Kr + var_slow_delayed_rectifier_potassium_current__i_Ks + var_sodium_activated_potassium_current__i_K_Na + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) * var_geometry__A_cap * NV_Ith_S(mParameters, 4) / (var_cell__F * var_geometry__V_myo); // millimolar / ms
        const double var_cell__dVdt = -var_ATP_sensitive_potassium_current__i_K_ATP - var_L_type_Ca_channel__i_Ca_L - var_Na_Ca_exchanger__i_NaCa - var_T_type_Ca_channel__i_Ca_T - var_calcium_background_current__i_Ca_b - var_cell__I_st - var_fast_sodium_current__i_Na - var_non_specific_calcium_activated_current__i_ns_Ca - var_plateau_potassium_current__i_Kp - var_rapid_delayed_rectifier_potassium_current__i_Kr - var_sarcolemmal_calcium_pump__i_p_Ca - var_slow_delayed_rectifier_potassium_current__i_Ks - var_sodium_activated_potassium_current__i_K_Na - var_sodium_background_current__i_Na_b - var_sodium_potassium_pump__i_NaK - var_time_independent_potassium_current__i_K1 - var_transient_outward_current__i_to; // microA_per_microF
        const double d_dt_chaste_interface_var_calcium_dynamics__APtrack = ((var_cell__dVdt > 150.0) ? (100.0 - 100.5 * var_chaste_interface__calcium_dynamics__APtrack) : (-0.5 * var_chaste_interface__calcium_dynamics__APtrack)); // 1 / ms
        const double var_transient_outward_current_zdv_gate__zdv_ss = var_transient_outward_current_zdv_gate__alpha_zdv / (var_transient_outward_current_zdv_gate__alpha_zdv + var_transient_outward_current_zdv_gate__beta_zdv); // dimensionless
        const double d_dt_chaste_interface_var_transient_outward_current_zdv_gate__zdv = (-var_chaste_interface__transient_outward_current_zdv_gate__zdv + var_transient_outward_current_zdv_gate__zdv_ss) / var_transient_outward_current_zdv_gate__tau_zdv; // 1 / ms

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_cell__V = 0.0;
        }
        else
        {
            d_dt_chaste_interface_var_cell__V = -var_ATP_sensitive_potassium_current__i_K_ATP - var_L_type_Ca_channel__i_Ca_L - var_Na_Ca_exchanger__i_NaCa - var_T_type_Ca_channel__i_Ca_T - var_calcium_background_current__i_Ca_b - var_cell__I_st - var_fast_sodium_current__i_Na - var_non_specific_calcium_activated_current__i_ns_Ca - var_plateau_potassium_current__i_Kp - var_rapid_delayed_rectifier_potassium_current__i_Kr - var_sarcolemmal_calcium_pump__i_p_Ca - var_slow_delayed_rectifier_potassium_current__i_Ks - var_sodium_activated_potassium_current__i_K_Na - var_sodium_background_current__i_Na_b - var_sodium_potassium_pump__i_NaK - var_time_independent_potassium_current__i_K1 - var_transient_outward_current__i_to; // millivolt / ms
        }
        
        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_cell__V;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_calcium_dynamics__Cai;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_fast_sodium_current_m_gate__m;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_fast_sodium_current_h_gate__h;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_fast_sodium_current_j_gate__j;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_T_type_Ca_channel_b_gate__b;
        NV_Ith_S(rDY,8) = d_dt_chaste_interface_var_T_type_Ca_channel_g_gate__g;
        NV_Ith_S(rDY,9) = d_dt_chaste_interface_var_rapid_delayed_rectifier_potassium_current_xr_gate__xr;
        NV_Ith_S(rDY,10) = d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1;
        NV_Ith_S(rDY,11) = d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2;
        NV_Ith_S(rDY,12) = d_dt_chaste_interface_var_transient_outward_current_zdv_gate__zdv;
        NV_Ith_S(rDY,13) = d_dt_chaste_interface_var_transient_outward_current_ydv_gate__ydv;
        NV_Ith_S(rDY,14) = d_dt_chaste_interface_var_calcium_dynamics__Ca_JSR;
        NV_Ith_S(rDY,15) = d_dt_chaste_interface_var_calcium_dynamics__Ca_NSR;
        NV_Ith_S(rDY,16) = d_dt_chaste_interface_var_calcium_dynamics__APtrack;
        NV_Ith_S(rDY,17) = d_dt_chaste_interface_var_calcium_dynamics__APtrack2;
        NV_Ith_S(rDY,18) = d_dt_chaste_interface_var_calcium_dynamics__APtrack3;
        NV_Ith_S(rDY,19) = d_dt_chaste_interface_var_calcium_dynamics__Cainfluxtrack;
        NV_Ith_S(rDY,20) = d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack;
        NV_Ith_S(rDY,21) = d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack2;
        NV_Ith_S(rDY,22) = d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack3;
        NV_Ith_S(rDY,23) = d_dt_chaste_interface_var_ionic_concentrations__Nai;
        NV_Ith_S(rDY,24) = d_dt_chaste_interface_var_ionic_concentrations__Ki;
    }

    void Cellfaber_rudy_2000FromCellMLCvode::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -85.2119207874627
        double var_chaste_interface__calcium_dynamics__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.000117482029668194
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.00149183115674257
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.985596581239651
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.990898461370389
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 5.82597094505446e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.997765362821995
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.00136737866785149
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.98881442877378
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.000204700363126417
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.00660746743356887
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.0303768241233812
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.0144622472219576
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.999945568566232
        double var_chaste_interface__calcium_dynamics__Ca_JSR = NV_Ith_S(rY, 14);
        // Units: millimolar; Initial value: 1.12791401197882
        double var_chaste_interface__calcium_dynamics__Ca_NSR = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 1.76731003671612
        double var_chaste_interface__calcium_dynamics__APtrack = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 9.65910542308504e-196
        double var_chaste_interface__calcium_dynamics__APtrack2 = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 5.33944967562997e-195
        double var_chaste_interface__calcium_dynamics__APtrack3 = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 0.000129515197402902
        double var_chaste_interface__calcium_dynamics__OVRLDtrack = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack2 = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack3 = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ionic_concentrations__Nai = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 13.3649235394859
        double var_chaste_interface__ionic_concentrations__Ki = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 141.056872392446
        const double var_x0 = exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__cell__V);
        const double var_x1 = 1.0 + var_x0;
        const double var_x2 = 1 / var_x1;
        const double var_x3 = 0.0055199999999999997 * var_x2;
        const double var_x4 = pow(NV_Ith_S(mParameters, 6), 0.23999999999999999);
        const double var_x5 = 1.921898339896919e-8 * var_x4;
        const double var_x6 = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2);
        const double var_x7 = 0.050000000000000003 * var_x6;
        const double var_x8 = var_x7 * var_chaste_interface__T_type_Ca_channel_g_gate__g;
        const double var_x9 = 1 / var_chaste_interface__ionic_concentrations__Nai;
        const double var_x10 = pow(var_x9, 2.7999999999999998);
        const double var_x11 = 1 / (1.0 + 124372.1149330912 * var_x10);
        const double var_x12 = exp(8.3333333333333339 + 0.066666666666666666 * var_chaste_interface__cell__V);
        const double var_x13 = 1.0 + var_x12;
        const double var_x14 = 0.80000000000000004 - 0.65000000000000002 / var_x13;
        const double var_x15 = var_x11 * var_x14;
        const double var_x16 = 0.109208 * var_x15;
        const double var_x17 = 0.037435883507802616 * var_chaste_interface__cell__V;
        const double var_x18 = exp(var_x17);
        const double var_x19 = 0.75 * var_x18;
        const double var_x20 = -0.75 * NV_Ith_S(mParameters, 6) + var_x19 * var_chaste_interface__ionic_concentrations__Ki;
        const double var_x21 = 1.0 + 1.7279999999999996e-9 / pow(var_chaste_interface__calcium_dynamics__Cai, 3);
        const double var_x22 = 1 / var_x21;
        const double var_x23 = -1.0 + var_x18;
        const double var_x24 = 1 / var_x23;
        const double var_x25 = var_x22 * var_x24;
        const double var_x26 = 0.00063210021354380874 * var_x25;
        const double var_x27 = var_x20 * var_x26;
        const double var_x28 = -0.75 * NV_Ith_S(mParameters, 7) + var_x19 * var_chaste_interface__ionic_concentrations__Nai;
        const double var_x29 = var_x26 * var_x28;
        const double var_x30 = 1 / var_chaste_interface__ionic_concentrations__Ki;
        const double var_x31 = log(var_x30 * NV_Ith_S(mParameters, 6));
        const double var_x32 = -26.712338705498265 * var_x31 + var_chaste_interface__cell__V;
        const double var_x33 = 0.00092307692307692295 * var_x0 * var_x32 / pow(var_x1, 2);
        const double var_x34 = 1 / var_chaste_interface__calcium_dynamics__Cai;
        const double var_x35 = pow(var_x34, 1.3999999999999999);
        const double var_x36 = 1.0 + 6.4818210260626455e-7 * var_x35;
        const double var_x37 = 0.59999999999999998 / var_x36;
        const double var_x38 = -1.0 - var_x37;
        const double var_x39 = NV_Ith_S(mParameters, 14) * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2;
        const double var_x40 = var_x38 * var_x39;
        const double var_x41 = var_x40 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1;
        const double var_x42 = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3);
        const double var_x43 = var_x42 * NV_Ith_S(mParameters, 9) * var_chaste_interface__fast_sodium_current_j_gate__j;
        const double var_x44 = var_x43 * var_chaste_interface__fast_sodium_current_h_gate__h;
        const double var_x45 = exp(0.01 * var_chaste_interface__cell__V);
        const double var_x46 = var_x45 * pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * NV_Ith_S(mParameters, 16);
        const double var_x47 = var_x46 * var_chaste_interface__transient_outward_current_ydv_gate__ydv;
        const double var_x48 = pow(NV_Ith_S(mParameters, 7), 3);
        const double var_x49 = var_x48 * var_chaste_interface__calcium_dynamics__Cai;
        const double var_x50 = pow(var_chaste_interface__ionic_concentrations__Nai, 3);
        const double var_x51 = var_x18 * NV_Ith_S(mParameters, 5);
        const double var_x52 = var_x50 * var_x51;
        const double var_x53 = var_x52 - var_x49;
        const double var_x54 = exp(-0.031820500981632228 * var_chaste_interface__cell__V);
        const double var_x55 = 0.031820500981632228 * var_x54;
        const double var_x56 = 1.0 + 0.0001 * var_x54 * (var_x49 + var_x52);
        const double var_x57 = NV_Ith_S(mParameters, 15) / var_x56;
        const double var_x58 = sqrt(NV_Ith_S(mParameters, 6));
        const double var_x59 = var_x58 * NV_Ith_S(mParameters, 13) * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr;
        const double var_x60 = exp(0.4017857142857143 + 0.044642857142857144 * var_chaste_interface__cell__V);
        const double var_x61 = 1.0 + var_x60;
        const double var_x62 = 1 / var_x61;
        const double var_x63 = 0.43033148291193518 * var_x62;
        const double var_x64 = var_x59 * var_x63;
        const double var_x65 = 0.0047323466666666673 * var_x11 * var_x12 * var_x32 / pow(var_x13, 2);
        const double var_x66 = exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__cell__V - 6.3708927812613361 * var_x31);
        const double var_x67 = 1.0 + var_x66;
        const double var_x68 = 1 / var_x67;
        const double var_x69 = exp(-2.4444678999999998 + 13.738155796237757 * var_x31 - 0.51429999999999998 * var_chaste_interface__cell__V);
        const double var_x70 = 1.0 + var_x69;
        const double var_x71 = 1 / var_x70;
        const double var_x72 = exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__cell__V - 2.1455350448256207 * var_x31);
        const double var_x73 = exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__cell__V - 1.6494869150645177 * var_x31);
        const double var_x74 = var_x73 + 0.49124000000000001 * var_x72;
        const double var_x75 = var_x71 * var_x74;
        const double var_x76 = var_x58 * NV_Ith_S(mParameters, 12) / (var_x75 + 1.02 * var_x68);
        const double var_x77 = var_x68 * var_x76;
        const double var_x78 = 0.4389381125701739 * var_x77;
        const double var_x79 = var_x53 * NV_Ith_S(mParameters, 15) / pow(var_x56, 2);
        const double var_x80 = var_x54 * var_x79 * (var_x55 * (0.0001 * var_x49 + 0.0001 * var_x52) - 3.7435883507802621e-6 * var_x52 * var_x54);
        const double var_x81 = var_x18 * var_chaste_interface__cell__V;
        const double var_x82 = var_x81 / pow(var_x23, 2);
        const double var_x83 = var_x20 * var_x82;
        const double var_x84 = 2.3663229959483181e-5 * var_x22;
        const double var_x85 = var_x83 * var_x84;
        const double var_x86 = var_x28 * var_x82;
        const double var_x87 = var_x84 * var_x86;
        const double var_x88 = pow(var_chaste_interface__ionic_concentrations__Nai, 2);
        const double var_x89 = 1 / var_x88;
        const double var_x90 = 1 / (1.0 + 100.0 * var_x89);
        const double var_x91 = 2.25 * var_x90;
        const double var_x92 = 1 / (1.5 + NV_Ith_S(mParameters, 6));
        const double var_x93 = exp(-0.003743588350780262 * var_chaste_interface__cell__V);
        const double var_x94 = exp(0.01485884101040119 * NV_Ith_S(mParameters, 7));
        const double var_x95 = exp(-var_x17);
        const double var_x96 = 1.0 + 0.1245 * var_x93 + 0.036499999999999998 * var_x95 * (-0.14285714285714285 + 0.14285714285714285 * var_x94);
        const double var_x97 = var_x92 * (0.00046607674967214262 * var_x93 + 0.037435883507802616 * var_x95 * (-0.0052142857142857138 + 0.0052142857142857138 * var_x94)) * NV_Ith_S(mParameters, 6) / pow(var_x96, 2);
        const double var_x98 = var_x25 * var_x81;
        const double var_x99 = 1.7747422469612385e-5 * var_x98;
        const double var_x100 = var_x99 * var_chaste_interface__ionic_concentrations__Ki;
        const double var_x101 = var_x99 * var_chaste_interface__ionic_concentrations__Nai;
        const double var_x102 = 1 / (1.0 + 1666.6666666666667 * var_chaste_interface__calcium_dynamics__Cai);
        const double var_x103 = var_x102 * var_chaste_interface__L_type_Ca_channel_f_gate__f;
        const double var_x104 = var_x103 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x105 = var_x24 * var_x28;
        const double var_x106 = 0.0024381008236689767 * var_x105;
        const double var_x107 = var_x104 * var_x106;
        const double var_x108 = var_x20 * var_x24;
        const double var_x109 = 0.00069711623550831479 * var_x108;
        const double var_x110 = var_x104 * var_x109;
        const double var_x111 = var_x32 * var_x47;
        const double var_x112 = 0.01 * var_x111;
        const double var_x113 = var_x66 / pow(var_x67, 2);
        const double var_x114 = var_x32 * var_x76;
        const double var_x115 = 0.10468673984798647 * var_x113 * var_x114;
        const double var_x116 = 0.019211226915711394 * var_x32 * var_x59 * var_x60 / pow(var_x61, 2);
        const double var_x117 = var_x54 * var_x57;
        const double var_x118 = var_x117 * var_x52;
        const double var_x119 = var_x71;
        const double var_x120 = var_x69 * var_x74 / pow(var_x70, 2);
        const double var_x121 = var_x32 * var_x58;
        const double var_x122 = 0.42189361069797565 * var_x121 * var_x68 * NV_Ith_S(mParameters, 12) / pow((var_x68 + 0.98039215686274506 * var_x75), 2);
        const double var_x123 = var_x122 * (0.24326999999999999 * var_x113 - 0.51429999999999998 * var_x120 - var_x119 * (0.061749999999999999 * var_x73 + 0.039456396800000001 * var_x72));
        const double var_x124 = exp(0.074871767015605231 * var_chaste_interface__cell__V);
        const double var_x125 = -1.0 + var_x124;
        const double var_x126 = 1 / var_x125;
        const double var_x127 = var_x124 * var_chaste_interface__calcium_dynamics__Cai;
        const double var_x128 = var_x127 - 0.34100000000000003 * NV_Ith_S(mParameters, 5);
        const double var_x129 = var_x126 * var_x128 * NV_Ith_S(mParameters, 8);
        const double var_x130 = 14448.004881001343 * var_x129;
        const double var_x131 = var_x104 * var_x130;
        const double var_x132 = 2.6097162183887167e-5 * var_x104 * var_x83;
        const double var_x133 = 9.1272458415149417e-5 * var_x104 * var_x86;
        const double var_x134 = var_x104 * var_x24 * var_x81;
        const double var_x135 = 6.8454343811362063e-5 * var_x134 * var_chaste_interface__ionic_concentrations__Nai;
        const double var_x136 = 1.9572871637915374e-5 * var_x134 * var_chaste_interface__ionic_concentrations__Ki;
        const double var_x137 = var_x104 * NV_Ith_S(mParameters, 8) * var_chaste_interface__cell__V;
        const double var_x138 = 1081.7476552906598 * var_x137;
        const double var_x139 = var_x124 * var_x128 / pow(var_x125, 2);
        const double var_x140 = var_x138 * var_x139;
        const double var_x141 = var_x126 * var_x127;
        const double var_x142 = var_x138 * var_x141;
        const double var_x143 = 0.00050000000000000001 + var_chaste_interface__calcium_dynamics__Cai;
        const double var_x144 = 1 / var_x143;
        const double var_x145 = 1.1499999999999999 * var_x144;
        const double var_x146 = 0.040282206767891383 * var_x34;
        const double var_x147 = pow(var_x143, (-2));
        const double var_x148 = var_x147 * var_chaste_interface__calcium_dynamics__Cai;
        const double var_x149 = 1.1499999999999999 * var_x148;
        const double var_x150 = var_x6 * var_chaste_interface__T_type_Ca_channel_g_gate__g;
        const double var_x151 = var_x150 * var_x34;
        const double var_x152 = 0.6678084676374566 * var_x151;
        const double var_x153 = var_x117 * var_x48;
        const double var_x154 = var_x79 * pow(var_x54, 2);
        const double var_x155 = var_x154 * var_x48;
        const double var_x156 = var_x108 * var_chaste_interface__cell__V;
        const double var_x157 = 3.2768075070111035e-12 / (pow(var_x21, 2) * pow(var_chaste_interface__calcium_dynamics__Cai, 4));
        const double var_x158 = var_x156 * var_x157;
        const double var_x159 = var_x105 * var_chaste_interface__cell__V;
        const double var_x160 = var_x157 * var_x159;
        const double var_x161 = var_chaste_interface__L_type_Ca_channel_f_gate__f / pow((0.00059999999999999995 + var_chaste_interface__calcium_dynamics__Cai), 2);
        const double var_x162 = var_x159 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x163 = 1.4628604942013857e-6 * var_x161 * var_x162;
        const double var_x164 = var_x156 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x165 = 4.1826974130498884e-7 * var_x161 * var_x164;
        const double var_x166 = var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__cell__V;
        const double var_x167 = var_x129 * var_x161 * var_x166;
        const double var_x168 = 8.6688029286008046 * var_x167;
        const double var_x169 = 1 / (0.018329999999999999 * var_chaste_interface__ionic_concentrations__Nai + var_chaste_interface__ionic_concentrations__Ki);
        const double var_x170 = -26.712338705498265 * log(var_x169 * (0.018329999999999999 * NV_Ith_S(mParameters, 7) + NV_Ith_S(mParameters, 6))) + var_chaste_interface__cell__V;
        const double var_x171 = var_x170 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1;
        const double var_x172 = 5.4447296618926212e-7 * var_x171 * var_x34 * var_x35 * var_x39 / pow(var_x36, 2);
        const double var_x173 = var_x124 * var_x126 * NV_Ith_S(mParameters, 8) * var_chaste_interface__cell__V;
        const double var_x174 = 14448.004881001343 * var_x104 * var_x173;
        const double var_x175 = log(var_x9 * NV_Ith_S(mParameters, 7));
        const double var_x176 = -26.712338705498265 * var_x175 + var_chaste_interface__cell__V;
        const double var_x177 = var_x176 * NV_Ith_S(mParameters, 9) * var_chaste_interface__fast_sodium_current_h_gate__h;
        const double var_x178 = var_x177 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 2) * var_chaste_interface__fast_sodium_current_j_gate__j;
        const double var_x179 = var_x176 * var_x43;
        const double var_x180 = var_x177 * var_x42;
        const double var_x181 = var_x103 * var_chaste_interface__cell__V;
        const double var_x182 = var_x102 * var_x166;
        const double var_x183 = log(var_x34 * NV_Ith_S(mParameters, 5));
        const double var_x184 = -13.356169352749133 * var_x183 + var_chaste_interface__cell__V;
        const double var_x185 = var_x184 * var_chaste_interface__T_type_Ca_channel_b_gate__b * var_chaste_interface__T_type_Ca_channel_g_gate__g;
        const double var_x186 = var_x121 * NV_Ith_S(mParameters, 13);
        const double var_x187 = var_x171 * NV_Ith_S(mParameters, 14);
        const double var_x188 = var_x32 * var_x45 * pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 2) * NV_Ith_S(mParameters, 16) * var_chaste_interface__transient_outward_current_ydv_gate__ydv;
        const double var_x189 = var_x32 * var_x46;
        const double var_x190 = 0.10684935482199306 * var_x9;
        const double var_x191 = 0.0004740751601578565 * var_x98;
        const double var_x192 = -var_x191;
        const double var_x193 = var_x169 * var_x41;
        const double var_x194 = 2.4586089909663641e-6 * var_x10 * var_x14 * var_x32 * var_x9 / pow((8.0403875140176932e-6 + var_x10), 2);
        const double var_x195 = var_x92 * NV_Ith_S(mParameters, 6) / var_x96;
        const double var_x196 = var_x195 / (var_x50 * pow((0.01 + var_x89), 2));
        const double var_x197 = 26.712338705498265 * var_x44 * var_x9;
        const double var_x198 = var_x51 * var_x88;
        const double var_x199 = var_x117 * var_x198;
        const double var_x200 = 0.0018285756177517324 * var_x134;
        const double var_x201 = var_x154 * var_x198;
        const double var_x202 = 5.1338399412861326e-7 * var_x30 * var_x4;
        const double var_x203 = 0.14745210965435041 * var_x2 * var_x30;
        const double var_x204 = 2.9172010853500545 * var_x15 * var_x30;
        const double var_x205 = 11.72506353372661 * var_x30 * var_x77;
        const double var_x206 = 11.495160327182951 * var_x30 * var_x59 * var_x62;
        const double var_x207 = 26.712338705498265 * var_x30 * var_x47;
        const double var_x208 = var_x113 * var_x30;
        const double var_x209 = var_x122 * (6.4983106368865622 * var_x208 - var_x119 * (1.053972635420138 * var_x30 * var_x72 + 1.6494869150645177 * var_x30 * var_x73) - 13.738155796237757 * var_x120 * var_x30);
        const double var_x210 = 0.00052283717663123607 * var_x134;
        const double var_x211 = 2.7964276527937963 * var_x114 * var_x208;
        const double var_x212 = var_x117 * var_x53;
        const double var_x213 = 1 / M_PI;
        const double var_x214 = 9.6614270660886194e-5 * var_x213;
        const double var_x215 = -var_x214 * (0.003016 + var_x131 + var_x142 + var_x8 - var_x140 + 0.063641001963264457 * var_x212 - 2.0 * var_x80 - 0.074871767015605231 * var_x118);
        const double var_x216 = 0.055555555555555559 * var_x150;
        const double var_x217 = 16053.338756668158 * var_x104;
        const double var_x218 = var_x129 * var_x217;
        const double var_x219 = 1201.9418392118441 * var_x137;
        const double var_x220 = 0.0033511111111111111 + var_x216 + var_x218 + 0.070712224403627164 * var_x212 - 2.2222222222222223 * var_x80 - 0.083190852239561366 * var_x118 + var_x141 * var_x219 - var_x139 * var_x219;
        const double var_x221 = -var_chaste_interface__calcium_dynamics__Cai + var_chaste_interface__calcium_dynamics__Ca_JSR;
        const double var_x222 = 1.2777777777777777 * var_x144;
        const double var_x223 = exp(5.5555555555555554 + 0.0033511111111111111 * var_chaste_interface__cell__V - 0.044758007519879316 * var_x183 - 2.2222222222222223 * var_x212 + var_x184 * var_x216 + var_x218 * var_chaste_interface__cell__V + var_x222 * var_chaste_interface__calcium_dynamics__Cai);
        const double var_x224 = 1.0 + var_x223;
        const double var_x225 = exp(2.0);
        const double var_x226 = 1.0 + var_x225 * var_chaste_interface__calcium_dynamics__APtrack2;
        const double var_x227 = 1 / var_x226;
        const double var_x228 = 1.0 - var_x227;
        const double var_x229 = var_x227 * var_x228;
        const double var_x230 = var_x221 * var_x223 * var_x229 / pow(var_x224, 2);
        const double var_x231 = 1.0588235294117645 * var_x230;
        const double var_x232 = 0.0023800000000000002 + var_chaste_interface__calcium_dynamics__Cai;
        const double var_x233 = 1.0 + 0.00011900000000000002 / pow(var_x232, 2) + 3.5000000000000004e-5 * var_x147;
        const double var_x234 = 1 / var_x233;
        const double var_x235 = var_x234;
        const double var_x236 = 0.00092000000000000003 + var_chaste_interface__calcium_dynamics__Cai;
        const double var_x237 = NV_Ith_S(mParameters, 3) / var_x236;
        const double var_x238 = 0.081176470588235281 * var_x237;
        const double var_x239 = -var_x214 * (var_x145 + var_x146 + var_x152 + var_x174 - var_x149 - var_x168 + 2.0 * var_x153 + 0.00020000000000000001 * var_x155);
        const double var_x240 = var_chaste_interface__calcium_dynamics__Cai * NV_Ith_S(mParameters, 3) / pow(var_x236, 2);
        const double var_x241 = 1 / var_x224;
        const double var_x242 = 1.0588235294117645 * var_x241;
        const double var_x243 = var_x229 * var_x242;
        const double var_x244 = var_x222 + 0.044758007519879316 * var_x34 + 2.2222222222222223 * var_x153 + 0.74200940848606289 * var_x151 + 0.00022222222222222223 * var_x155 - 1.2777777777777777 * var_x148 - 9.6320032540008942 * var_x167 + var_x173 * var_x217;
        const double var_x245 = -0.040282206767891383 * var_x183 + var_x131 * var_chaste_interface__cell__V + var_x145 * var_chaste_interface__calcium_dynamics__Cai + var_x184 * var_x8;
        const double var_x246 = NV_Ith_S(mParameters, 3) * NV_Ith_S(mParameters, 0);
        const double var_x247 = 0.0054117647058823529 * var_x246;
        const double var_x248 = var_x129 * var_x181;
        const double var_x249 = 1.3958834540828686 * var_x213;
        const double var_x250 = -var_x248 * var_x249;
        const double var_x251 = 16997.652801178047 * var_x230;
        const double var_x252 = var_x129 * var_x182;
        const double var_x253 = -var_x249 * var_x252;
        const double var_x254 = -9.6614270660886201e-6 * var_x185 * var_x213;
        const double var_x255 = var_x185 * var_x230;
        const double var_x256 = var_x184 * var_x6;
        const double var_x257 = -4.83071353304431e-6 * var_x213 * var_x256;
        const double var_x258 = var_x230 * var_x256;
        const double var_x259 = var_x221 * var_x225;
        const double var_x260 = var_x259 / pow(var_x226, 3);
        const double var_x261 = var_x228 * var_x259 / pow(var_x226, 2);
        const double var_x262 = -var_x214 * (0.00060000000000000006 * var_x201 - 6.0 * var_x199);
        const double var_x263 = 0.00066666666666666664 * var_x201 - 6.6666666666666661 * var_x199;
        const double var_x264 = 1.0 - var_chaste_interface__fast_sodium_current_m_gate__m;
        const double var_x265 = -0.10000000000000001 * var_chaste_interface__cell__V;
        const double var_x266 = exp(-4.7130000000000001 + var_x265);
        const double var_x267 = 1.0 - var_x266;
        const double var_x268 = 0.32000000000000001 / var_x267;
        const double var_x269 = exp(-0.090909090909090912 * var_chaste_interface__cell__V);
        const double var_x270 = 47.130000000000003 + var_chaste_interface__cell__V;
        const double var_x271 = exp(-11.764705882352942 + 0.14705882352941177 * NV_Ith_S(mParameters, 11) - 0.14705882352941177 * var_chaste_interface__cell__V);
        const double var_x272 = var_chaste_interface__cell__V < -40.0;
        const double var_x273 = ((var_x272) ? (0.13500000000000001 * var_x271) : (0));
        const double var_x274 = var_x273;
        const double var_x275 = exp(0.34999999999999998 * var_chaste_interface__cell__V - 0.34999999999999998 * NV_Ith_S(mParameters, 11));
        const double var_x276 = exp(0.079000000000000001 * var_chaste_interface__cell__V - 0.079000000000000001 * NV_Ith_S(mParameters, 11));
        const double var_x277 = exp(-0.96036036036036043 + 0.0900900900900901 * NV_Ith_S(mParameters, 11) - 0.0900900900900901 * var_chaste_interface__cell__V);
        const double var_x278 = 1.0 + var_x277;
        const double var_x279 = ((var_x272) ? (310000.0 * var_x275 + 3.5600000000000001 * var_x276) : (7.6923076923076916 / var_x278));
        const double var_x280 = var_x279;
        const double var_x281 = ((var_x272) ? (-0.019852941176470591 * var_x271) : (0));
        const double var_x282 = var_x273 + var_x279;
        const double var_x283 = 0.01 * NV_Ith_S(mParameters, 10);
        const double var_x284 = 1.0 - var_x283;
        const double var_x285 = var_x284 / var_x282;
        const double var_x286 = ((var_x272) ? (0.28123999999999999 * var_x276 + 108500.0 * var_x275) : (0.693000693000693 * var_x277 / pow(var_x278, 2)));
        const double var_x287 = exp(-5.5312920000000005 + 0.13780000000000001 * NV_Ith_S(mParameters, 11) - 0.13780000000000001 * var_chaste_interface__cell__V);
        const double var_x288 = 1.0 + var_x287;
        const double var_x289 = exp(0.01052 * NV_Ith_S(mParameters, 11) - 0.01052 * var_chaste_interface__cell__V);
        const double var_x290 = var_x289 / var_x288;
        const double var_x291 = exp(-3.2000000000000002 + var_x265 + 0.10000000000000001 * NV_Ith_S(mParameters, 11));
        const double var_x292 = 1.0 + var_x291;
        const double var_x293 = exp(2.5349999999999999e-7 * NV_Ith_S(mParameters, 11) - 2.5349999999999999e-7 * var_chaste_interface__cell__V);
        const double var_x294 = var_x293 / var_x292;
        const double var_x295 = ((var_x272) ? (0.1212 * var_x290) : (0.29999999999999999 * var_x294));
        const double var_x296 = var_x295;
        const double var_x297 = 37.780000000000001 + var_chaste_interface__cell__V;
        const double var_x298 = exp(24.640530000000002 + 0.311 * var_chaste_interface__cell__V - 0.311 * NV_Ith_S(mParameters, 11));
        const double var_x299 = 1.0 + var_x298;
        const double var_x300 = 1 / var_x299;
        const double var_x301 = exp(0.24440000000000001 * var_chaste_interface__cell__V - 0.24440000000000001 * NV_Ith_S(mParameters, 11));
        const double var_x302 = exp(0.043909999999999998 * NV_Ith_S(mParameters, 11) - 0.043909999999999998 * var_chaste_interface__cell__V);
        const double var_x303 = -127140.0 * var_x301 - 3.4740000000000003e-5 * var_x302;
        const double var_x304 = var_x300 * var_x303;
        const double var_x305 = ((var_x272) ? (var_x297 * var_x304) : (0));
        const double var_x306 = var_x305;
        const double var_x307 = ((var_x272) ? (var_x304 + var_x297 * var_x300 * (1.5254334000000001e-6 * var_x302 - 31073.016 * var_x301) - 0.311 * var_x297 * var_x298 * var_x303 / pow(var_x299, 2)) : (0));
        const double var_x308 = var_x295 + var_x305;
        const double var_x309 = var_x284 / var_x308;
        const double var_x310 = ((var_x272) ? (-0.001275024 * var_x290 + 0.016701360000000002 * var_x287 * var_x289 / pow(var_x288, 2)) : (-7.6049999999999996e-8 * var_x294 + 0.029999999999999999 * var_x291 * var_x293 / pow(var_x292, 2)));
        const double var_x311 = 1.0 - var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x312 = exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__cell__V);
        const double var_x313 = 1.0 - var_x312;
        const double var_x314 = 1 / var_x313;
        const double var_x315 = 0.035000000000000003 * var_x314;
        const double var_x316 = 1.0 + var_x312;
        const double var_x317 = 1 / var_x316;
        const double var_x318 = 1.0 - var_x317;
        const double var_x319 = var_x316 * var_x318;
        const double var_x320 = var_x319 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x321 = 10.0 + var_chaste_interface__cell__V;
        const double var_x322 = 0.005608974358974359 * var_x312 * var_x321;
        const double var_x323 = var_x322 / pow(var_x313, 2);
        const double var_x324 = var_x314 * var_x322 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x325 = var_x315 * var_x321;
        const double var_x326 = 1.0 - var_chaste_interface__L_type_Ca_channel_f_gate__f;
        const double var_x327 = 0.019699999999999999 * exp(-0.113569 * pow((1 + 0.10000000000000001 * var_chaste_interface__cell__V), 2));
        const double var_x328 = exp(2.5 - 0.050000000000000003 * var_chaste_interface__cell__V);
        const double var_x329 = 1.0 + var_x328;
        const double var_x330 = 0.029999999999999999 * var_x328 / pow(var_x329, 2);
        const double var_x331 = exp(4.0767441860465121 + 0.11627906976744186 * var_chaste_interface__cell__V);
        const double var_x332 = 1.0 + var_x331;
        const double var_x333 = 0.11627906976744186 * var_x331 / pow(var_x332, 2);
        const double var_x334 = -0.02 - var_x327;
        const double var_x335 = 1 / var_x332;
        const double var_x336 = 0.59999999999999998 / var_x329;
        const double var_x337 = var_x335 + var_x336;
        const double var_x338 = var_x327 * (-0.022713800000000003 - 0.0022713799999999999 * var_chaste_interface__cell__V);
        const double var_x339 = 1.0 - var_x335 - var_x336;
        const double var_x340 = exp(-1.2962962962962963 - 0.092592592592592587 * var_chaste_interface__cell__V);
        const double var_x341 = 1.0 + var_x340;
        const double var_x342 = exp(5.5555555555555554 + 0.22222222222222221 * var_chaste_interface__cell__V);
        const double var_x343 = 1.0 + var_x342;
        const double var_x344 = 1 / var_x343;
        const double var_x345 = 1 / (3.7000000000000002 + 6.0999999999999996 * var_x344);
        const double var_x346 = exp(10.714285714285715 + 0.17857142857142858 * var_chaste_interface__cell__V);
        const double var_x347 = 1.0 + var_x346;
        const double var_x348 = var_chaste_interface__cell__V <= 0;
        const double var_x349 = ((var_x348) ? (1 / (12.0 - 0.875 * var_chaste_interface__cell__V)) : (0.083333333333333329));
        const double var_x350 = exp(-2.8666666666666667 - 0.13333333333333333 * var_chaste_interface__cell__V);
        const double var_x351 = 1.0 + var_x350;
        const double var_x352 = exp(5.6404999999999994 + 0.14499999999999999 * var_chaste_interface__cell__V);
        const double var_x353 = -1.0 + var_x352;
        const double var_x354 = 0.00060999999999999997 / var_x353;
        const double var_x355 = exp(-1.7465999999999999 - 0.123 * var_chaste_interface__cell__V);
        const double var_x356 = 1.0 - var_x355;
        const double var_x357 = 0.0013799999999999999 / var_x356;
        const double var_x358 = 14.199999999999999 + var_chaste_interface__cell__V;
        const double var_x359 = 38.899999999999999 + var_chaste_interface__cell__V;
        const double var_x360 = var_x354 * var_x359;
        const double var_x361 = var_x357 * var_x358;
        const double var_x362 = exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__cell__V);
        const double var_x363 = 1.0 + var_x362;
        const double var_x364 = 1 / var_x363;
        const double var_x365 = exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__cell__V);
        const double var_x366 = -1.0 + var_x365;
        const double var_x367 = 1 / var_x366;
        const double var_x368 = 0.00013100000000000001 * var_x367;
        const double var_x369 = exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__cell__V);
        const double var_x370 = 1.0 - var_x369;
        const double var_x371 = 1 / var_x370;
        const double var_x372 = 7.1899999999999999e-5 * var_x371;
        const double var_x373 = 30.0 + var_chaste_interface__cell__V;
        const double var_x374 = var_x365 * var_x373 / pow(var_x366, 2);
        const double var_x375 = var_x369 * var_x373 / pow(var_x370, 2);
        const double var_x376 = var_x368 * var_x373;
        const double var_x377 = var_x372 * var_x373;
        const double var_x378 = 0.059880239520958084 * var_x362 / pow(var_x363, 2);
        const double var_x379 = 3.2750000000000003e-5 * var_x367;
        const double var_x380 = 1.7975e-5 * var_x371;
        const double var_x381 = var_x373 * var_x379;
        const double var_x382 = var_x373 * var_x380;
        const double var_x383 = 0.040000000000000001 * var_chaste_interface__cell__V;
        const double var_x384 = exp(-1.6000000000000001 + var_x383);
        const double var_x385 = 1.0 + var_x384;
        const double var_x386 = var_x384 / var_x385;
        const double var_x387 = 10.0 * var_x386;
        const double var_x388 = exp(-3.6000000000000001 - var_x383);
        const double var_x389 = 1.0 + var_x388;
        const double var_x390 = var_x388 / var_x389;
        const double var_x391 = 10.0 * var_x390;
        const double var_x392 = var_x387 + var_x391;
        const double var_x393 = 1 / var_x392;
        const double var_x394 = 0.40000000000000002 * var_x386;
        const double var_x395 = 0.40000000000000002 * pow(var_x388, 2) / pow(var_x389, 2);
        const double var_x396 = 0.40000000000000002 * pow(var_x384, 2) / pow(var_x385, 2);
        const double var_x397 = 0.40000000000000002 * var_x390;
        const double var_x398 = 0.20000000000000001 * var_chaste_interface__cell__V;
        const double var_x399 = exp(12.0 + var_x398);
        const double var_x400 = 1.0 + var_x399;
        const double var_x401 = 1 / var_x400;
        const double var_x402 = 0.014999999999999999 * var_x401;
        const double var_x403 = exp(5.0 + var_x398);
        const double var_x404 = 1.0 + var_x403;
        const double var_x405 = var_x403 / var_x404;
        const double var_x406 = 0.10000000000000001 * var_x405;
        const double var_x407 = var_x402 + var_x406;
        const double var_x408 = 1 / var_x407;
        const double var_x409 = 0.02 * var_x405;
        const double var_x410 = 0.02 * pow(var_x403, 2) / pow(var_x404, 2);
        const double var_x411 = 0.0030000000000000001 * var_x399 / pow(var_x400, 2);
        const double var_x412 = 0.80000000000000004 + var_chaste_interface__calcium_dynamics__Ca_JSR;
        const double var_x413 = pow(var_x412, (-2));
        const double var_x414 = 1 / (1.0 + 8.0 * var_x413);
        const double var_x415 = 150.0 * var_x230;
        const double var_x416 = var_x414 * var_x415;
        const double var_x417 = 150.0 * var_x241;
        const double var_x418 = var_x229 * var_x417;
        const double var_x419 = var_x414;
        const double var_x420 = 2408000.8135002237 * var_x230 * var_x414;
        const double var_x421 = 1.0 + var_x37;
        const double var_x422 = var_x39 * var_x421;
        const double var_x423 = (var_chaste_interface__calcium_dynamics__APtrack > 0.17999999999999999) && (var_chaste_interface__calcium_dynamics__APtrack < 0.20000000000000001);
        const double var_x424 = var_chaste_interface__calcium_dynamics__APtrack > 0.20000000000000001;
        const double var_x425 = var_chaste_interface__calcium_dynamics__OVRLDtrack > 0.97999999999999998;
        const double var_x426 = var_x90 * var_x97;
        const double var_x427 = var_x213 * NV_Ith_S(mParameters, 4);
        const double var_x428 = 0.00019322854132177239 * var_x427;
        const double var_x429 = 0.00057968562396531716 * var_x427;
        const double var_x430 = 4.711106657529681e-7 * var_x427;
        const double var_x431 = var_x422 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1;
        const double var_x432 = 1.3470275331899681e-7 * var_x427;
        const double var_x433 = var_x169 * var_x431;
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = mSetVoltageDerivativeToZero ? 0.0 : (-0.0070159999999999997 + var_x115 + var_x116 + var_x132 + var_x133 + var_x140 + var_x41 + var_x85 + var_x87 - var_x100 - var_x101 - var_x107 - var_x110 - var_x112 - var_x123 - var_x131 - var_x135 - var_x136 - var_x142 - var_x16 - var_x27 - var_x29 - var_x3 - var_x33 - var_x44 - var_x47 - var_x5 - var_x64 - var_x65 - var_x78 - var_x8 - var_x80 - 0.037435883507802616 * var_x118 - var_x91 * var_x97 + var_x53 * var_x55 * var_x57);
        IJth(rJacobian, 1, 0) = var_x235 * (var_x215 - var_x220 * var_x231);
        IJth(rJacobian, 2, 0) = var_x264 * var_x268 + 0.0072727272727272727 * var_x269 * var_chaste_interface__fast_sodium_current_m_gate__m - 0.032000000000000001 * var_x264 * var_x266 * var_x270 / pow(var_x267, 2);
        IJth(rJacobian, 3, 0) = (var_x274 + var_x280) * (var_x281 * var_x285 + var_x273 * var_x284 * (-var_x281 - var_x286) / pow(var_x282, 2)) + (var_x281 + var_x286) * (var_x283 - var_chaste_interface__fast_sodium_current_h_gate__h + var_x273 * var_x285);
        IJth(rJacobian, 4, 0) = (var_x296 + var_x306) * (var_x307 * var_x309 + var_x284 * var_x305 * (-var_x307 - var_x310) / pow(var_x308, 2)) + (var_x307 + var_x310) * (var_x283 - var_chaste_interface__fast_sodium_current_j_gate__j + var_x305 * var_x309);
        IJth(rJacobian, 5, 0) = var_x311 * var_x315 + var_x317 * var_x324 + var_x318 * var_x324 + var_x320 * var_x323 - var_x311 * var_x323 - var_x315 * var_x320;
        IJth(rJacobian, 6, 0) = var_x326 * var_x337 * var_x338 + var_x326 * (0.02 + var_x327) * (var_x330 - var_x333) + var_x334 * (var_x333 - var_x330) * var_chaste_interface__L_type_Ca_channel_f_gate__f - var_x338 * var_x339 * var_chaste_interface__L_type_Ca_channel_f_gate__f;
        IJth(rJacobian, 7, 0) = 0.092592592592592587 * var_x340 * var_x345 / pow(var_x341, 2) + 0.036429872495446269 * var_x342 * (-var_chaste_interface__T_type_Ca_channel_b_gate__b + 1 / var_x341) / (pow(var_x343, 2) * pow((0.60655737704918045 + var_x344), 2));
        IJth(rJacobian, 8, 0) = (-var_chaste_interface__T_type_Ca_channel_g_gate__g + 1 / var_x347) * ((var_x348) ? (0.006076388888888889 / pow((1 - 0.072916666666666671 * var_chaste_interface__cell__V), 2)) : (0)) - 0.17857142857142858 * var_x346 * var_x349 / pow(var_x347, 2);
        IJth(rJacobian, 9, 0) = (-var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr + 1 / var_x351) * (var_x354 + var_x357 - 0.00016973999999999998 * var_x355 * var_x358 / pow(var_x356, 2) - 8.8449999999999995e-5 * var_x352 * var_x359 / pow(var_x353, 2)) + 0.13333333333333333 * var_x350 * (var_x360 + var_x361) / pow(var_x351, 2);
        IJth(rJacobian, 10, 0) = var_x378 * (var_x376 + var_x377) + (var_x364 - var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1) * (var_x368 + var_x372 - 8.9997000000000013e-6 * var_x374 - 1.0641199999999999e-5 * var_x375);
        IJth(rJacobian, 11, 0) = var_x378 * (var_x381 + var_x382) + (var_x364 - var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2) * (var_x379 + var_x380 - 2.2499250000000003e-6 * var_x374 - 2.6602999999999998e-6 * var_x375);
        IJth(rJacobian, 12, 0) = var_x392 * (var_x393 * var_x394 - var_x393 * var_x396 + 0.10000000000000001 * var_x386 * (var_x396 + var_x397 - var_x394 - var_x395) / pow((var_x386 + var_x390), 2)) + (-var_chaste_interface__transient_outward_current_zdv_gate__zdv + var_x387 * var_x393) * (var_x394 + var_x395 - var_x396 - var_x397);
        IJth(rJacobian, 13, 0) = var_x407 * (-var_x408 * var_x411 + 1.4999999999999998 * var_x401 * (var_x410 + var_x411 - var_x409) / pow((var_x405 + 0.14999999999999999 * var_x401), 2)) + (-var_chaste_interface__transient_outward_current_ydv_gate__ydv + var_x402 * var_x408) * (var_x409 - var_x410 - var_x411);
        IJth(rJacobian, 14, 0) = var_x220 * var_x416;
        IJth(rJacobian, 19, 0) = ((var_x424) ? (var_x215) : (0));
        IJth(rJacobian, 23, 0) = -var_x428 * (0.0040000000000000001 + var_x101 + var_x107 + var_x135 + var_x29 + var_x44 - var_x133 - var_x87 + 3.0 * var_x80 + 6.75 * var_x426 + 0.11230765052340785 * var_x118 - 0.095461502944896678 * var_x212);
        IJth(rJacobian, 24, 0) = -var_x428 * (var_x100 + var_x110 + var_x112 + var_x123 + var_x136 + var_x16 + var_x27 + var_x3 + var_x33 + var_x431 + var_x47 + var_x5 + var_x64 + var_x65 + var_x78 - var_x115 - var_x116 - var_x132 - var_x85 - 4.5 * var_x426);
        IJth(rJacobian, 0, 1) = mSetVoltageDerivativeToZero ? 0.0 : (var_x149 + var_x153 + var_x163 + var_x165 + var_x168 - var_x145 - var_x146 - var_x152 - var_x158 - var_x160 - var_x172 - var_x174 + 0.0001 * var_x155);
        IJth(rJacobian, 1, 1) = var_x235 * (var_x239 - var_x238 - var_x243 + 0.081176470588235281 * var_x240 - var_x231 * var_x244) + (0.00023800000000000004 / pow(var_x232, 3) + 7.0000000000000007e-5 / pow(var_x143, 3)) * (var_x221 * var_x243 + var_x247 * var_chaste_interface__calcium_dynamics__Ca_NSR - var_x214 * (var_x245 + 0.003016 * var_chaste_interface__cell__V - 2.0 * var_x212) - var_x238 * var_chaste_interface__calcium_dynamics__Cai) / pow(var_x233, 2);
        IJth(rJacobian, 14, 1) = var_x419 * (var_x418 + var_x244 * var_x415);
        IJth(rJacobian, 15, 1) = var_x237 - var_x240;
        IJth(rJacobian, 19, 1) = ((var_x424) ? (var_x239) : (0));
        IJth(rJacobian, 23, 1) = -var_x428 * (var_x160 - var_x163 - 3.0 * var_x153 - 0.00030000000000000003 * var_x155);
        IJth(rJacobian, 24, 1) = -var_x428 * (var_x158 + var_x172 - var_x165);
        IJth(rJacobian, 0, 2) = mSetVoltageDerivativeToZero ? 0.0 : (-3 * var_x178);
        IJth(rJacobian, 2, 2) = -0.080000000000000002 * var_x269 - var_x268 * var_x270;
        IJth(rJacobian, 23, 2) = -var_x178 * var_x429;
        IJth(rJacobian, 0, 3) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x179);
        IJth(rJacobian, 3, 3) = -var_x274 - var_x280;
        IJth(rJacobian, 23, 3) = -var_x179 * var_x428;
        IJth(rJacobian, 0, 4) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x180);
        IJth(rJacobian, 4, 4) = -var_x296 - var_x306;
        IJth(rJacobian, 23, 4) = -var_x180 * var_x428;
        IJth(rJacobian, 0, 5) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x106 * var_x181 - var_x109 * var_x181 - var_x130 * var_x181);
        IJth(rJacobian, 1, 5) = var_x235 * (var_x250 - var_x248 * var_x251);
        IJth(rJacobian, 5, 5) = -var_x325 - var_x319 * var_x325;
        IJth(rJacobian, 14, 5) = var_x248 * var_x420;
        IJth(rJacobian, 19, 5) = ((var_x424) ? (var_x250) : (0));
        IJth(rJacobian, 23, 5) = -var_x103 * var_x159 * var_x430;
        IJth(rJacobian, 24, 5) = -var_x103 * var_x156 * var_x432;
        IJth(rJacobian, 0, 6) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x106 * var_x182 - var_x109 * var_x182 - var_x130 * var_x182);
        IJth(rJacobian, 1, 6) = var_x235 * (var_x253 - var_x251 * var_x252);
        IJth(rJacobian, 6, 6) = var_x334 * var_x337 + var_x334 * var_x339;
        IJth(rJacobian, 14, 6) = var_x252 * var_x420;
        IJth(rJacobian, 19, 6) = ((var_x424) ? (var_x253) : (0));
        IJth(rJacobian, 23, 6) = -var_x102 * var_x162 * var_x430;
        IJth(rJacobian, 24, 6) = -var_x102 * var_x164 * var_x432;
        IJth(rJacobian, 0, 7) = mSetVoltageDerivativeToZero ? 0.0 : (-0.10000000000000001 * var_x185);
        IJth(rJacobian, 1, 7) = var_x235 * (var_x254 - 0.1176470588235294 * var_x255);
        IJth(rJacobian, 7, 7) = -var_x345;
        IJth(rJacobian, 14, 7) = 16.666666666666668 * var_x255 * var_x414;
        IJth(rJacobian, 19, 7) = ((var_x424) ? (var_x254) : (0));
        IJth(rJacobian, 0, 8) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x184 * var_x7);
        IJth(rJacobian, 1, 8) = var_x235 * (var_x257 - 0.058823529411764698 * var_x258);
        IJth(rJacobian, 8, 8) = -var_x349;
        IJth(rJacobian, 14, 8) = 8.3333333333333339 * var_x258 * var_x414;
        IJth(rJacobian, 19, 8) = ((var_x424) ? (var_x257) : (0));
        IJth(rJacobian, 0, 9) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x186 * var_x63);
        IJth(rJacobian, 9, 9) = -var_x360 - var_x361;
        IJth(rJacobian, 24, 9) = -8.3152324727908455e-5 * var_x186 * var_x427 * var_x62;
        IJth(rJacobian, 0, 10) = mSetVoltageDerivativeToZero ? 0.0 : (var_x170 * var_x40);
        IJth(rJacobian, 10, 10) = -var_x376 - var_x377;
        IJth(rJacobian, 24, 10) = -var_x170 * var_x422 * var_x428;
        IJth(rJacobian, 0, 11) = mSetVoltageDerivativeToZero ? 0.0 : (var_x187 * var_x38);
        IJth(rJacobian, 11, 11) = -var_x381 - var_x382;
        IJth(rJacobian, 24, 11) = -var_x187 * var_x421 * var_x428;
        IJth(rJacobian, 0, 12) = mSetVoltageDerivativeToZero ? 0.0 : (-3 * var_x188);
        IJth(rJacobian, 12, 12) = -var_x387 - var_x391;
        IJth(rJacobian, 24, 12) = -var_x188 * var_x429;
        IJth(rJacobian, 0, 13) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x189);
        IJth(rJacobian, 13, 13) = -var_x402 - var_x406;
        IJth(rJacobian, 24, 13) = -var_x189 * var_x428;
        IJth(rJacobian, 1, 14) = var_x234 * var_x243;
        IJth(rJacobian, 14, 14) = var_x419 * (-0.0055555555555555558 - var_x418) + 0.25 * (0.0055555555555555558 * var_chaste_interface__calcium_dynamics__Ca_NSR - 0.0055555555555555558 * var_chaste_interface__calcium_dynamics__Ca_JSR - var_x221 * var_x418) / (pow(var_x412, 3) * pow((0.125 + var_x413), 2));
        IJth(rJacobian, 15, 14) = 0.00048309178743961351;
        IJth(rJacobian, 1, 15) = var_x234 * var_x247;
        IJth(rJacobian, 14, 15) = 0.0055555555555555558 * var_x414;
        IJth(rJacobian, 15, 15) = -0.00048309178743961351 - 0.066666666666666666 * var_x246;
        IJth(rJacobian, 16, 16) = ((var_x111 + var_x212 + var_x245 + 0.0070159999999999997 * var_chaste_interface__cell__V - 0.10684935482199306 * var_x175 + var_x107 * var_chaste_interface__cell__V + var_x110 * var_chaste_interface__cell__V + var_x16 * var_x32 + var_x171 * var_x422 + var_x176 * var_x44 + var_x195 * var_x91 + var_x27 * var_chaste_interface__cell__V + var_x29 * var_chaste_interface__cell__V + var_x3 * var_x32 + var_x32 * var_x5 + var_x32 * var_x64 + var_x32 * var_x78 + GetIntracellularAreaStimulus(var_chaste_interface__environment__time) / HeartConfig::Instance()->GetCapacitance() < -150.0) ? (-100.5) : (-0.5));
        IJth(rJacobian, 1, 17) = var_x235 * (var_x242 * var_x260 - var_x242 * var_x261);
        IJth(rJacobian, 14, 17) = var_x419 * (var_x261 * var_x417 - var_x260 * var_x417);
        IJth(rJacobian, 17, 17) = ((var_x423) ? (-100.5) : (-0.5));
        IJth(rJacobian, 18, 18) = ((var_x423) ? (-100.5) : (-0.01));
        IJth(rJacobian, 19, 19) = (((var_x424) || (var_chaste_interface__calcium_dynamics__APtrack2 > 0.01)) ? (0) : (-0.5));
        IJth(rJacobian, 20, 20) = (((var_chaste_interface__calcium_dynamics__APtrack3 < 0.37) && (var_chaste_interface__calcium_dynamics__OVRLDtrack3 < 0.37) && (1 / (1.0 + 0.80000000000000004 / var_chaste_interface__calcium_dynamics__Ca_JSR) > 0.69999999999999996)) ? (-50.0) : (-0.5));
        IJth(rJacobian, 21, 21) = (((var_x425) && (var_chaste_interface__calcium_dynamics__OVRLDtrack2 < 0.97999999999999998)) ? (-50.0) : (-0.5));
        IJth(rJacobian, 22, 22) = (((var_x425) && (var_chaste_interface__calcium_dynamics__OVRLDtrack3 < 0.97999999999999998)) ? (-50.0) : (-0.01));
        IJth(rJacobian, 0, 23) = mSetVoltageDerivativeToZero ? 0.0 : (var_x192 - var_x190 - var_x194 - var_x197 - var_x200 - 3 * var_x199 + 0.00030000000000000003 * var_x201 + 0.48963716847178318 * var_x193 - 0.044999999999999998 * var_x196);
        IJth(rJacobian, 1, 23) = var_x235 * (var_x262 - var_x231 * var_x263);
        IJth(rJacobian, 14, 23) = var_x263 * var_x416;
        IJth(rJacobian, 19, 23) = ((var_x424) ? (var_x262) : (0));
        IJth(rJacobian, 23, 23) = -var_x428 * (var_x190 + var_x191 + var_x197 + var_x200 + 9.0 * var_x199 + 0.13500000000000001 * var_x196 - 0.00090000000000000008 * var_x201);
        IJth(rJacobian, 24, 23) = -var_x428 * (var_x194 + 0.48963716847178318 * var_x433 - 0.089999999999999997 * var_x196);
        IJth(rJacobian, 0, 24) = mSetVoltageDerivativeToZero ? 0.0 : (var_x192 + var_x211 - var_x202 - var_x203 - var_x204 - var_x205 - var_x206 - var_x207 - var_x209 - var_x210 + 26.712338705498265 * var_x193);
        IJth(rJacobian, 24, 24) = -var_x428 * (var_x191 + var_x202 + var_x203 + var_x204 + var_x205 + var_x206 + var_x207 + var_x209 + var_x210 - var_x211 + 26.712338705498265 * var_x433);
    }

    N_Vector Cellfaber_rudy_2000FromCellMLCvode::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -85.2119207874627
        double var_chaste_interface__calcium_dynamics__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.000117482029668194
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.00149183115674257
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.985596581239651
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.990898461370389
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 5.82597094505446e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.997765362821995
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.00136737866785149
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.98881442877378
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.000204700363126417
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.00660746743356887
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.0303768241233812
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.0144622472219576
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.999945568566232
        double var_chaste_interface__calcium_dynamics__Ca_JSR = NV_Ith_S(rY, 14);
        // Units: millimolar; Initial value: 1.12791401197882
        double var_chaste_interface__calcium_dynamics__APtrack2 = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 5.33944967562997e-195
        double var_chaste_interface__ionic_concentrations__Nai = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 13.3649235394859
        double var_chaste_interface__ionic_concentrations__Ki = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 141.056872392446
        
        // Mathematics
        const double var_L_type_Ca_channel__P_K = 1.9299999999999999e-7; // litre_per_farad_ms
        const double var_L_type_Ca_channel__P_Na = 6.75e-7; // litre_per_farad_ms
        const double var_L_type_Ca_channel__gamma_Cai = 1.0; // dimensionless
        const double var_L_type_Ca_channel__gamma_Cao = 0.34100000000000003; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ki = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ko = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nai = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nao = 0.75; // dimensionless
        const double var_L_type_Ca_channel_f_Ca_gate__Km_Ca = 0.00059999999999999995; // millimolar
        const double var_Na_Ca_exchanger__c2 = 0.0001; // dimensionless
        const double var_Na_Ca_exchanger__gamma = 0.14999999999999999; // dimensionless
        const double var_T_type_Ca_channel__g_CaT = 0.050000000000000003; // milliS_per_microF
        const double var_calcium_background_current__g_Cab = 0.003016; // milliS_per_microF
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + var_chaste_interface__calcium_dynamics__Cai / var_L_type_Ca_channel_f_Ca_gate__Km_Ca); // dimensionless
        const double var_calcium_dynamics__RyRopen = 1 / (1.0 + var_chaste_interface__calcium_dynamics__APtrack2 * exp(2.0)); // dimensionless
        const double var_calcium_dynamics__RyRclose = 1.0 - var_calcium_dynamics__RyRopen; // dimensionless
        const double var_cell__F = 96485.0; // coulomb_per_mole
        const double var_cell__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_cell__T = 310.0; // kelvin
        const double var_calcium_background_current__E_Ca = 0.5 * var_cell__R * var_cell__T * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__calcium_dynamics__Cai) / var_cell__F; // millivolt
        const double var_L_type_Ca_channel__I_CaCa = 4.0 * pow(var_cell__F, 2) * (-var_L_type_Ca_channel__gamma_Cao * NV_Ith_S(mParameters, 5) + var_L_type_Ca_channel__gamma_Cai * var_chaste_interface__calcium_dynamics__Cai * exp(2.0 * var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * NV_Ith_S(mParameters, 8) * var_chaste_interface__cell__V / ((-1.0 + exp(2.0 * var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * var_cell__R * var_cell__T); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaCa = var_L_type_Ca_channel__I_CaCa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel_f_gate__tau_f = 1 / (0.02 + 0.019699999999999999 * exp(-0.113569 * pow((1 + 0.10000000000000001 * var_chaste_interface__cell__V), 2))); // ms
        const double var_T_type_Ca_channel__i_Ca_T = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2) * (-var_calcium_background_current__E_Ca + var_chaste_interface__cell__V) * var_T_type_Ca_channel__g_CaT * var_chaste_interface__T_type_Ca_channel_g_gate__g; // microA_per_microF
        const double var_calcium_background_current__i_Ca_b = (-var_calcium_background_current__E_Ca + var_chaste_interface__cell__V) * var_calcium_background_current__g_Cab; // microA_per_microF
        const double var_cell__I_st_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
        const double var_fast_sodium_current_h_gate__alpha_h = ((var_chaste_interface__cell__V < -40.0) ? (0.13500000000000001 * exp(-11.764705882352942 + 0.14705882352941177 * NV_Ith_S(mParameters, 11) - 0.14705882352941177 * var_chaste_interface__cell__V)) : (0)); // per_ms
        const double var_fast_sodium_current_h_gate__beta_h = ((var_chaste_interface__cell__V < -40.0) ? (310000.0 * exp(0.34999999999999998 * var_chaste_interface__cell__V - 0.34999999999999998 * NV_Ith_S(mParameters, 11)) + 3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__cell__V - 0.079000000000000001 * NV_Ith_S(mParameters, 11))) : (7.6923076923076916 / (1.0 + exp(-0.96036036036036043 + 0.0900900900900901 * NV_Ith_S(mParameters, 11) - 0.0900900900900901 * var_chaste_interface__cell__V)))); // per_ms
        const double var_fast_sodium_current_h_gate__tau_h = 1 / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h); // ms
        const double var_fast_sodium_current_j_gate__alpha_j = ((var_chaste_interface__cell__V < -40.0) ? ((37.780000000000001 + var_chaste_interface__cell__V) * (-127140.0 * exp(0.24440000000000001 * var_chaste_interface__cell__V - 0.24440000000000001 * NV_Ith_S(mParameters, 11)) - 3.4740000000000003e-5 * exp(0.043909999999999998 * NV_Ith_S(mParameters, 11) - 0.043909999999999998 * var_chaste_interface__cell__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__cell__V - 0.311 * NV_Ith_S(mParameters, 11)))) : (0)); // per_ms
        const double var_fast_sodium_current_j_gate__beta_j = ((var_chaste_interface__cell__V < -40.0) ? (0.1212 * exp(0.01052 * NV_Ith_S(mParameters, 11) - 0.01052 * var_chaste_interface__cell__V) / (1.0 + exp(-5.5312920000000005 + 0.13780000000000001 * NV_Ith_S(mParameters, 11) - 0.13780000000000001 * var_chaste_interface__cell__V))) : (0.29999999999999999 * exp(2.5349999999999999e-7 * NV_Ith_S(mParameters, 11) - 2.5349999999999999e-7 * var_chaste_interface__cell__V) / (1.0 + exp(-3.2000000000000002 + 0.10000000000000001 * NV_Ith_S(mParameters, 11) - 0.10000000000000001 * var_chaste_interface__cell__V)))); // per_ms
        const double var_fast_sodium_current_j_gate__tau_j = 1 / (var_fast_sodium_current_j_gate__alpha_j + var_fast_sodium_current_j_gate__beta_j); // ms
        const double var_L_type_Ca_channel__I_CaK = pow(var_cell__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * NV_Ith_S(mParameters, 6) + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * var_L_type_Ca_channel__P_K * var_chaste_interface__cell__V / ((-1.0 + exp(var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * var_cell__R * var_cell__T); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaK = var_L_type_Ca_channel__I_CaK * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__I_CaNa = pow(var_cell__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * NV_Ith_S(mParameters, 7) + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * var_L_type_Ca_channel__P_Na * var_chaste_interface__cell__V / ((-1.0 + exp(var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * var_cell__R * var_cell__T); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaNa = var_L_type_Ca_channel__I_CaNa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_CaCa + var_L_type_Ca_channel__i_CaK + var_L_type_Ca_channel__i_CaNa; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L_converted = HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L; // uA_per_cm2
        const double var_Na_Ca_exchanger__i_NaCa = (-pow(NV_Ith_S(mParameters, 7), 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * NV_Ith_S(mParameters, 5) * exp(var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * NV_Ith_S(mParameters, 15) * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T)) / (1.0 + (pow(NV_Ith_S(mParameters, 7), 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * NV_Ith_S(mParameters, 5) * exp(var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * var_Na_Ca_exchanger__c2 * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))); // microA_per_microF
        const double var_Na_Ca_exchanger__i_NaCa_converted = HeartConfig::Instance()->GetCapacitance() * var_Na_Ca_exchanger__i_NaCa; // uA_per_cm2
        const double var_fast_sodium_current__E_Na = var_cell__R * var_cell__T * log(NV_Ith_S(mParameters, 7) / var_chaste_interface__ionic_concentrations__Nai) / var_cell__F; // millivolt
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_Na + var_chaste_interface__cell__V) * NV_Ith_S(mParameters, 9) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // microA_per_microF
        const double var_fast_sodium_current__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na; // uA_per_cm2
        const double var_rapid_delayed_rectifier_potassium_current__Rect = 1 / (1.0 + exp(0.4017857142857143 + 0.044642857142857144 * var_chaste_interface__cell__V)); // dimensionless
        const double var_rapid_delayed_rectifier_potassium_current__g_Kr = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 6)) * NV_Ith_S(mParameters, 13); // milliS_per_microF
        const double var_sarcolemmal_calcium_pump__I_pCa = 1.1499999999999999; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__K_mpCa = 0.00050000000000000001; // millimolar
        const double var_sarcolemmal_calcium_pump__i_p_Ca = var_chaste_interface__calcium_dynamics__Cai * var_sarcolemmal_calcium_pump__I_pCa / (var_chaste_interface__calcium_dynamics__Cai + var_sarcolemmal_calcium_pump__K_mpCa); // microA_per_microF
        const double var_calcium_dynamics__G_rel = 150.0 * var_calcium_dynamics__RyRclose * var_calcium_dynamics__RyRopen / (1.0 + exp(5.5555555555555554 + 1.1111111111111112 * var_L_type_Ca_channel__i_CaCa + 1.1111111111111112 * var_T_type_Ca_channel__i_Ca_T + 1.1111111111111112 * var_calcium_background_current__i_Ca_b + 1.1111111111111112 * var_sarcolemmal_calcium_pump__i_p_Ca - 2.2222222222222223 * var_Na_Ca_exchanger__i_NaCa)); // per_ms
        const double var_calcium_dynamics__i_rel = (-var_chaste_interface__calcium_dynamics__Cai + var_chaste_interface__calcium_dynamics__Ca_JSR) * var_calcium_dynamics__G_rel; // millimolar_per_ms
        const double var_slow_delayed_rectifier_potassium_current__PNaK = 0.018329999999999999; // dimensionless
        const double var_slow_delayed_rectifier_potassium_current__E_Ks = var_cell__R * var_cell__T * log((NV_Ith_S(mParameters, 7) * var_slow_delayed_rectifier_potassium_current__PNaK + NV_Ith_S(mParameters, 6)) / (var_chaste_interface__ionic_concentrations__Nai * var_slow_delayed_rectifier_potassium_current__PNaK + var_chaste_interface__ionic_concentrations__Ki)) / var_cell__F; // millivolt
        const double var_slow_delayed_rectifier_potassium_current__g_Ks = (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * NV_Ith_S(mParameters, 14); // milliS_per_microF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = (-var_slow_delayed_rectifier_potassium_current__E_Ks + var_chaste_interface__cell__V) * var_slow_delayed_rectifier_potassium_current__g_Ks * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2; // microA_per_microF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks_converted = HeartConfig::Instance()->GetCapacitance() * var_slow_delayed_rectifier_potassium_current__i_Ks; // uA_per_cm2
        const double var_time_independent_potassium_current__E_K = var_cell__R * var_cell__T * log(NV_Ith_S(mParameters, 6) / var_chaste_interface__ionic_concentrations__Ki) / var_cell__F; // millivolt
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_time_independent_potassium_current__E_K + var_chaste_interface__cell__V) * var_rapid_delayed_rectifier_potassium_current__Rect * var_rapid_delayed_rectifier_potassium_current__g_Kr * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr; // microA_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_rapid_delayed_rectifier_potassium_current__i_Kr; // uA_per_cm2
        const double var_time_independent_potassium_current__g_K1 = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 6)) * NV_Ith_S(mParameters, 12); // milliS_per_microF
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__cell__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K)); // per_ms
        const double var_time_independent_potassium_current_K1_gate__beta_K1 = (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__cell__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__cell__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K - 0.51429999999999998 * var_chaste_interface__cell__V)); // per_ms
        const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__cell__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_microF
        const double var_time_independent_potassium_current__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_time_independent_potassium_current__i_K1; // uA_per_cm2
        const double var_transient_outward_current__rvdv = exp(0.01 * var_chaste_interface__cell__V); // dimensionless
        const double var_transient_outward_current__i_to = pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__cell__V) * NV_Ith_S(mParameters, 16) * var_transient_outward_current__rvdv * var_chaste_interface__transient_outward_current_ydv_gate__ydv; // microA_per_microF
        const double var_transient_outward_current__i_to_converted = HeartConfig::Instance()->GetCapacitance() * var_transient_outward_current__i_to; // uA_per_cm2

        N_Vector dqs = N_VNew_Serial(17);
        NV_Ith_S(dqs, 0) = var_calcium_dynamics__i_rel;
        NV_Ith_S(dqs, 1) = var_L_type_Ca_channel__i_Ca_L_converted;
        NV_Ith_S(dqs, 2) = var_L_type_Ca_channel_f_Ca_gate__f_Ca;
        NV_Ith_S(dqs, 3) = var_L_type_Ca_channel_f_gate__tau_f;
        NV_Ith_S(dqs, 4) = var_fast_sodium_current__i_Na_converted;
        NV_Ith_S(dqs, 5) = var_fast_sodium_current_h_gate__tau_h;
        NV_Ith_S(dqs, 6) = var_fast_sodium_current_j_gate__tau_j;
        NV_Ith_S(dqs, 7) = var_time_independent_potassium_current__i_K1_converted;
        NV_Ith_S(dqs, 8) = var_time_independent_potassium_current__g_K1;
        NV_Ith_S(dqs, 9) = var_rapid_delayed_rectifier_potassium_current__i_Kr_converted;
        NV_Ith_S(dqs, 10) = var_rapid_delayed_rectifier_potassium_current__g_Kr;
        NV_Ith_S(dqs, 11) = var_slow_delayed_rectifier_potassium_current__i_Ks_converted;
        NV_Ith_S(dqs, 12) = var_slow_delayed_rectifier_potassium_current__g_Ks;
        NV_Ith_S(dqs, 13) = var_Na_Ca_exchanger__i_NaCa_converted;
        NV_Ith_S(dqs, 14) = var_cell__I_st_converted;
        NV_Ith_S(dqs, 15) = var_transient_outward_current__i_to_converted;
        NV_Ith_S(dqs, 16) = var_chaste_interface__environment__time;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellfaber_rudy_2000FromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "faber_rudy_2000";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "ms";

    // NV_Ith_S(rY, 0):
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-85.2119207874627);

    // NV_Ith_S(rY, 1):
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.000117482029668194);

    // NV_Ith_S(rY, 2):
    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00149183115674257);

    // NV_Ith_S(rY, 3):
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.985596581239651);

    // NV_Ith_S(rY, 4):
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.990898461370389);

    // NV_Ith_S(rY, 5):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(5.82597094505446e-06);

    // NV_Ith_S(rY, 6):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.997765362821995);

    // NV_Ith_S(rY, 7):
    this->mVariableNames.push_back("T_type_Ca_channel_b_gate__b");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00136737866785149);

    // NV_Ith_S(rY, 8):
    this->mVariableNames.push_back("T_type_Ca_channel_g_gate__g");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.98881442877378);

    // NV_Ith_S(rY, 9):
    this->mVariableNames.push_back("rapid_delayed_rectifier_potassium_current_xr_gate__xr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000204700363126417);

    // NV_Ith_S(rY, 10):
    this->mVariableNames.push_back("slow_delayed_rectifier_potassium_current_xs1_gate__xs1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00660746743356887);

    // NV_Ith_S(rY, 11):
    this->mVariableNames.push_back("slow_delayed_rectifier_potassium_current_xs2_gate__xs2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0303768241233812);

    // NV_Ith_S(rY, 12):
    this->mVariableNames.push_back("transient_outward_current_zdv_gate__zdv");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0144622472219576);

    // NV_Ith_S(rY, 13):
    this->mVariableNames.push_back("transient_outward_current_ydv_gate__ydv");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999945568566232);

    // NV_Ith_S(rY, 14):
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.12791401197882);

    // NV_Ith_S(rY, 15):
    this->mVariableNames.push_back("calcium_dynamics__Ca_NSR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.76731003671612);

    // NV_Ith_S(rY, 16):
    this->mVariableNames.push_back("calcium_dynamics__APtrack");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.65910542308504e-196);

    // NV_Ith_S(rY, 17):
    this->mVariableNames.push_back("calcium_dynamics__APtrack2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(5.33944967562997e-195);

    // NV_Ith_S(rY, 18):
    this->mVariableNames.push_back("calcium_dynamics__APtrack3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000129515197402902);

    // NV_Ith_S(rY, 19):
    this->mVariableNames.push_back("calcium_dynamics__Cainfluxtrack");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(2.69380318286645e-196);

    // NV_Ith_S(rY, 20):
    this->mVariableNames.push_back("calcium_dynamics__OVRLDtrack");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 21):
    this->mVariableNames.push_back("calcium_dynamics__OVRLDtrack2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 22):
    this->mVariableNames.push_back("calcium_dynamics__OVRLDtrack3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 23):
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(13.3649235394859);

    // NV_Ith_S(rY, 24):
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(141.056872392446);

    // mParameters[0]:
    this->mParameterNames.push_back("SR_leak_current_max");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[1]:
    this->mParameterNames.push_back("SR_release_current_max");
    this->mParameterUnits.push_back("per_ms");

    // mParameters[2]:
    this->mParameterNames.push_back("SR_release_kmcacyt");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[3]:
    this->mParameterNames.push_back("SR_uptake_current_max");
    this->mParameterUnits.push_back("millimolar_per_ms");

    // mParameters[4]:
    this->mParameterNames.push_back("concentration_clamp_onoff");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[5]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[6]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[7]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("litre_per_farad_ms");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_reduced_inactivation");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_shift_inactivation");
    this->mParameterUnits.push_back("millivolt");

    // mParameters[12]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[13]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[14]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[15]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("microA_per_microF");

    // mParameters[16]:
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("SR_release_current");
    this->mDerivedQuantityUnits.push_back("millimolar_per_ms");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current_fCa_gate");
    this->mDerivedQuantityUnits.push_back("dimensionless");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current_f_gate_tau");
    this->mDerivedQuantityUnits.push_back("ms");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_h_gate_tau");
    this->mDerivedQuantityUnits.push_back("ms");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_j_gate_tau");
    this->mDerivedQuantityUnits.push_back("ms");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mDerivedQuantityUnits.push_back("milliS_per_microF");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [10]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mDerivedQuantityUnits.push_back("milliS_per_microF");

    // Derived Quantity index [11]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [12]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mDerivedQuantityUnits.push_back("milliS_per_microF");

    // Derived Quantity index [13]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [14]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [15]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [16]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("ms");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellfaber_rudy_2000FromCellMLCvode)

#endif // CHASTE_CVODE
