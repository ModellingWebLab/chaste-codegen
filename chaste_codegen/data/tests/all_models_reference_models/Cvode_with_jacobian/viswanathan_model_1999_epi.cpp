#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: viswanathan_model_1999_epi
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: AnalyticCvode)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "viswanathan_model_1999_epi.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"



    boost::shared_ptr<RegularStimulus> Cellviswanathan_model_1999_epiFromCellMLCvode::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__stim_amplitude_converted = -25.5 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        const double var_chaste_interface__membrane__stim_duration_converted = 2.0; // millisecond
        const double var_chaste_interface__membrane__stim_period_converted = 1000.0; // millisecond
        const double var_chaste_interface__membrane__stim_start_converted = 100.0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__stim_amplitude_converted),
                var_chaste_interface__membrane__stim_duration_converted,
                var_chaste_interface__membrane__stim_period_converted,
                var_chaste_interface__membrane__stim_start_converted
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }

    double Cellviswanathan_model_1999_epiFromCellMLCvode::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Cellviswanathan_model_1999_epiFromCellMLCvode::Cellviswanathan_model_1999_epiFromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                25,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellviswanathan_model_1999_epiFromCellMLCvode>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
        
        NV_Ith_S(this->mParameters, 0) = 1.8; // (var_calcium_dynamics__Cao) [millimolar]
        NV_Ith_S(this->mParameters, 1) = 4.5; // (var_ionic_concentrations__Ko) [millimolar]
        NV_Ith_S(this->mParameters, 2) = 132.0; // (var_ionic_concentrations__Nao) [millimolar]
        NV_Ith_S(this->mParameters, 3) = 0.001; // (var_membrane__Cm) [microF]
        NV_Ith_S(this->mParameters, 4) = 16.0; // (var_fast_sodium_current__g_Na) [milliS_per_microF]
        NV_Ith_S(this->mParameters, 5) = 0.75; // (var_time_independent_potassium_current__g_K1_max) [milliS_per_cm2]
        NV_Ith_S(this->mParameters, 6) = 0.02614; // (var_rapid_delayed_rectifier_potassium_current__g_Kr_max) [milliS_per_cm2]
    }

    Cellviswanathan_model_1999_epiFromCellMLCvode::~Cellviswanathan_model_1999_epiFromCellMLCvode()
    {
    }

    
    double Cellviswanathan_model_1999_epiFromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -88.984
        double var_chaste_interface__calcium_dynamics__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.00035237
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.00079287
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.9938
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.99573
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 3.18355e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.9974388
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.000967785
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.95331988
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.00032151644
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.0272635
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.0631269
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.011528
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.985232
        double var_chaste_interface__ionic_concentrations__Nai = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 15.6748357
        double var_chaste_interface__ionic_concentrations__Ki = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 137.6244
        
        const double var_ATP_sensitive_potassium_current__ATPi = 3.0; // millimolar
        const double var_ATP_sensitive_potassium_current__hATP = 2.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__kATP = 0.00025000000000000001; // millimolar
        const double var_ATP_sensitive_potassium_current__nATP = 0.23999999999999999; // dimensionless
        const double var_ATP_sensitive_potassium_current__nicholsarea = 5.0000000000000002e-5; // dimensionless
        const double var_ATP_sensitive_potassium_current__g_K_ATP = 0.000193 / var_ATP_sensitive_potassium_current__nicholsarea; // milliS_per_microF
        const double var_ATP_sensitive_potassium_current__pATP = 1 / (1.0 + pow((var_ATP_sensitive_potassium_current__ATPi / var_ATP_sensitive_potassium_current__kATP), var_ATP_sensitive_potassium_current__hATP)); // dimensionless
        const double var_L_type_Ca_channel__gamma_Ki = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ko = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nai = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nao = 0.75; // dimensionless
        const double var_L_type_Ca_channel_f_Ca_gate__Km_Ca = 0.00059999999999999995; // millimolar
        const double var_Na_Ca_exchanger__K_NaCa = 0.002; // millimolar
        const double var_Na_Ca_exchanger__d_NaCa = 0.001; // millimolar
        const double var_Na_Ca_exchanger__gamma = 0.5; // dimensionless
        const double var_Na_Ca_exchanger__n_NaCa = 3.0; // dimensionless
        const double var_T_type_Ca_channel__g_CaT = 0.050000000000000003; // milliS_per_microF
        const double var_calcium_background_current__g_Cab = 0.003016; // milliS_per_microF
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + var_chaste_interface__calcium_dynamics__Cai / var_L_type_Ca_channel_f_Ca_gate__Km_Ca); // dimensionless
        const double var_ATP_sensitive_potassium_current__GKbaraATP = pow((0.25 * NV_Ith_S(mParameters, 1)), var_ATP_sensitive_potassium_current__nATP) * var_ATP_sensitive_potassium_current__g_K_ATP * var_ATP_sensitive_potassium_current__pATP; // milliS_per_microF
        const double var_membrane__F = 96485.0; // coulomb_per_mole
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_calcium_background_current__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 0) / var_chaste_interface__calcium_dynamics__Cai) / var_membrane__F; // millivolt
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 2) / var_chaste_interface__ionic_concentrations__Nai) / var_membrane__F; // millivolt
        const double var_L_type_Ca_channel__I_CaCa = ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 0) + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 374358.83507802623 * (-1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (-1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 0) + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 0) + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (7.8019226357407252 * (-0.34100000000000003 * NV_Ith_S(mParameters, 0) + var_chaste_interface__calcium_dynamics__Cai * exp(0.074871767015605231 * var_chaste_interface__membrane__V)) * var_chaste_interface__membrane__V / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaK = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (1.8621604999999999e-9 * (-0.75 * NV_Ith_S(mParameters, 1) + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 187179.41753901311 * (-2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (-1.8621604999999999e-9 * (-0.75 * NV_Ith_S(mParameters, 1) + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 1.8621604999999999e-9 * (-0.75 * NV_Ith_S(mParameters, 1) + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (0.00069711623550831479 * (-0.75 * NV_Ith_S(mParameters, 1) + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(0.037435883507802616 * var_chaste_interface__membrane__V)) * var_chaste_interface__membrane__V / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaNa = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (6.5127374999999992e-9 * (-0.75 * NV_Ith_S(mParameters, 2) + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 187179.41753901311 * (-2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (-6.5127374999999992e-9 * (-0.75 * NV_Ith_S(mParameters, 2) + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 6.5127374999999992e-9 * (-0.75 * NV_Ith_S(mParameters, 2) + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (0.0024381008236689767 * (-0.75 * NV_Ith_S(mParameters, 2) + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(0.037435883507802616 * var_chaste_interface__membrane__V)) * var_chaste_interface__membrane__V / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaCa = var_L_type_Ca_channel__I_CaCa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaK = var_L_type_Ca_channel__I_CaK * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaNa = var_L_type_Ca_channel__I_CaNa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_CaCa + var_L_type_Ca_channel__i_CaK + var_L_type_Ca_channel__i_CaNa; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L_converted = HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L; // uA_per_cm2
        const double var_Na_Ca_exchanger__i_NaCa = (pow(var_chaste_interface__ionic_concentrations__Nai, var_Na_Ca_exchanger__n_NaCa) * NV_Ith_S(mParameters, 0) * exp((-2.0 + var_Na_Ca_exchanger__n_NaCa) * var_Na_Ca_exchanger__gamma * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) - pow(NV_Ith_S(mParameters, 2), var_Na_Ca_exchanger__n_NaCa) * var_chaste_interface__calcium_dynamics__Cai * exp((-1.0 + var_Na_Ca_exchanger__gamma) * (-2.0 + var_Na_Ca_exchanger__n_NaCa) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_Na_Ca_exchanger__K_NaCa / ((1.0 + 144.92753623188406 * var_chaste_interface__calcium_dynamics__Cai) * (1.0 + (pow(var_chaste_interface__ionic_concentrations__Nai, var_Na_Ca_exchanger__n_NaCa) * NV_Ith_S(mParameters, 0) + pow(NV_Ith_S(mParameters, 2), var_Na_Ca_exchanger__n_NaCa) * var_chaste_interface__calcium_dynamics__Cai) * var_Na_Ca_exchanger__d_NaCa)); // microA_per_microF
        const double var_T_type_Ca_channel__i_Ca_T = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2) * (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_T_type_Ca_channel__g_CaT * var_chaste_interface__T_type_Ca_channel_g_gate__g; // microA_per_microF
        const double var_calcium_background_current__i_Ca_b = (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_calcium_background_current__g_Cab; // microA_per_microF
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 4) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // microA_per_microF
        const double var_fast_sodium_current__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na; // uA_per_cm2
        const double var_non_specific_calcium_activated_current__K_m_ns_Ca = 0.0011999999999999999; // millimolar
        const double var_non_specific_calcium_activated_current__P_ns_Ca = 0; // cm_per_second
        const double var_non_specific_calcium_activated_current__I_ns_K = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * NV_Ith_S(mParameters, 1) + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__I_ns_Na = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * NV_Ith_S(mParameters, 2) + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_K = var_non_specific_calcium_activated_current__I_ns_K / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Na = var_non_specific_calcium_activated_current__I_ns_Na / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Ca = var_non_specific_calcium_activated_current__i_ns_K + var_non_specific_calcium_activated_current__i_ns_Na; // microA_per_microF
        const double var_plateau_potassium_current__Kp = 1 / (1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_plateau_potassium_current__g_Kp = 0.0055199999999999997; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__Rect = 1 / (1.0 + exp(0.4017857142857143 + 0.044642857142857144 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_rapid_delayed_rectifier_potassium_current__g_Kr = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 1)) * NV_Ith_S(mParameters, 6); // milliS_per_microF
        const double var_sarcolemmal_calcium_pump__I_pCa = 1.1499999999999999; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__K_mpCa = 0.00050000000000000001; // millimolar
        const double var_sarcolemmal_calcium_pump__i_p_Ca = var_chaste_interface__calcium_dynamics__Cai * var_sarcolemmal_calcium_pump__I_pCa / (var_chaste_interface__calcium_dynamics__Cai + var_sarcolemmal_calcium_pump__K_mpCa); // microA_per_microF
        const double var_slow_delayed_rectifier_potassium_current__PNaK = 0.018329999999999999; // dimensionless
        const double var_slow_delayed_rectifier_potassium_current__E_Ks = var_membrane__R * var_membrane__T * log((NV_Ith_S(mParameters, 2) * var_slow_delayed_rectifier_potassium_current__PNaK + NV_Ith_S(mParameters, 1)) / (var_chaste_interface__ionic_concentrations__Nai * var_slow_delayed_rectifier_potassium_current__PNaK + var_chaste_interface__ionic_concentrations__Ki)) / var_membrane__F; // millivolt
        const double var_slow_delayed_rectifier_potassium_current__g_Ks = 0.433 + 0.25979999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999)); // milliS_per_microF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = (-var_slow_delayed_rectifier_potassium_current__E_Ks + var_chaste_interface__membrane__V) * var_slow_delayed_rectifier_potassium_current__g_Ks * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2; // microA_per_microF
        const double var_sodium_background_current__g_Nab = 0.0040000000000000001; // milliS_per_microF
        const double var_sodium_background_current__i_Na_b = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_sodium_background_current__g_Nab; // microA_per_microF
        const double var_sodium_potassium_pump__I_NaK = 2.0; // microA_per_microF
        const double var_sodium_potassium_pump__K_mKo = 1.5; // millimolar
        const double var_sodium_potassium_pump__K_mNai = 10.0; // millimolar
        const double var_sodium_potassium_pump__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * NV_Ith_S(mParameters, 2)); // dimensionless
        const double var_sodium_potassium_pump__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + 0.036499999999999998 * var_sodium_potassium_pump__sigma * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // dimensionless
        const double var_sodium_potassium_pump__i_NaK = NV_Ith_S(mParameters, 1) * var_sodium_potassium_pump__I_NaK * var_sodium_potassium_pump__f_NaK / ((1.0 + pow(var_sodium_potassium_pump__K_mNai, 2) / pow(var_chaste_interface__ionic_concentrations__Nai, 2)) * (NV_Ith_S(mParameters, 1) + var_sodium_potassium_pump__K_mKo)); // microA_per_microF
        const double var_time_independent_potassium_current__E_K = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 1) / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_ATP_sensitive_potassium_current__i_K_ATP = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_ATP_sensitive_potassium_current__GKbaraATP; // microA_per_microF
        const double var_plateau_potassium_current__i_Kp = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_plateau_potassium_current__Kp * var_plateau_potassium_current__g_Kp; // microA_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_rapid_delayed_rectifier_potassium_current__Rect * var_rapid_delayed_rectifier_potassium_current__g_Kr * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr; // microA_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_rapid_delayed_rectifier_potassium_current__i_Kr; // uA_per_cm2
        const double var_time_independent_potassium_current__g_K1 = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 1)) * NV_Ith_S(mParameters, 5); // milliS_per_cm2
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K)); // per_second
        const double var_time_independent_potassium_current_K1_gate__beta_K1 = 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V)); // per_second
        const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_microF
        const double var_time_independent_potassium_current__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_time_independent_potassium_current__i_K1; // uA_per_cm2
        const double var_transient_outward_current__g_to = 0; // milliS_per_microF
        const double var_transient_outward_current__rvdv = exp(0.01 * var_chaste_interface__membrane__V); // dimensionless
        const double var_transient_outward_current__i_to = pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_transient_outward_current__g_to * var_transient_outward_current__rvdv * var_chaste_interface__transient_outward_current_ydv_gate__ydv; // microA_per_microF
        const double var_chaste_interface__i_ionic = -var_L_type_Ca_channel__i_Ca_L_converted - var_fast_sodium_current__i_Na_converted - var_rapid_delayed_rectifier_potassium_current__i_Kr_converted - var_time_independent_potassium_current__i_K1_converted - HeartConfig::Instance()->GetCapacitance() * var_ATP_sensitive_potassium_current__i_K_ATP - HeartConfig::Instance()->GetCapacitance() * var_Na_Ca_exchanger__i_NaCa - HeartConfig::Instance()->GetCapacitance() * var_T_type_Ca_channel__i_Ca_T - HeartConfig::Instance()->GetCapacitance() * var_calcium_background_current__i_Ca_b - HeartConfig::Instance()->GetCapacitance() * var_non_specific_calcium_activated_current__i_ns_Ca - HeartConfig::Instance()->GetCapacitance() * var_plateau_potassium_current__i_Kp - HeartConfig::Instance()->GetCapacitance() * var_sarcolemmal_calcium_pump__i_p_Ca - HeartConfig::Instance()->GetCapacitance() * var_slow_delayed_rectifier_potassium_current__i_Ks - HeartConfig::Instance()->GetCapacitance() * var_sodium_background_current__i_Na_b - HeartConfig::Instance()->GetCapacitance() * var_sodium_potassium_pump__i_NaK - HeartConfig::Instance()->GetCapacitance() * var_transient_outward_current__i_to; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellviswanathan_model_1999_epiFromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__environment__time_converted, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -88.984
        double var_chaste_interface__calcium_dynamics__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.00035237
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.00079287
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.9938
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.99573
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 3.18355e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.9974388
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.000967785
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.95331988
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.00032151644
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.0272635
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.0631269
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.011528
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.985232
        double var_chaste_interface__calcium_dynamics__Ca_JSR = NV_Ith_S(rY, 14);
        // Units: millimolar; Initial value: 0.817895
        double var_chaste_interface__calcium_dynamics__Ca_NSR = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 2.797668
        double var_chaste_interface__calcium_dynamics__APtrack = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 3.814e-87
        double var_chaste_interface__calcium_dynamics__APtrack2 = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 2.1084e-86
        double var_chaste_interface__calcium_dynamics__APtrack3 = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 0.01925
        double var_chaste_interface__calcium_dynamics__Cainfluxtrack = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 1.784e-87
        double var_chaste_interface__calcium_dynamics__OVRLDtrack = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack2 = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack3 = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ionic_concentrations__Nai = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 15.6748357
        double var_chaste_interface__ionic_concentrations__Ki = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 137.6244

        // Mathematics
        double d_dt_chaste_interface_var_membrane__V;
        const double var_ATP_sensitive_potassium_current__ATPi = 3.0; // millimolar
        const double var_ATP_sensitive_potassium_current__hATP = 2.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__kATP = 0.00025000000000000001; // millimolar
        const double var_ATP_sensitive_potassium_current__nATP = 0.23999999999999999; // dimensionless
        const double var_ATP_sensitive_potassium_current__nicholsarea = 5.0000000000000002e-5; // dimensionless
        const double var_ATP_sensitive_potassium_current__g_K_ATP = 0.000193 / var_ATP_sensitive_potassium_current__nicholsarea; // milliS_per_microF
        const double var_ATP_sensitive_potassium_current__pATP = 1 / (1.0 + pow((var_ATP_sensitive_potassium_current__ATPi / var_ATP_sensitive_potassium_current__kATP), var_ATP_sensitive_potassium_current__hATP)); // dimensionless
        const double var_L_type_Ca_channel__gamma_Ki = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ko = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nai = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nao = 0.75; // dimensionless
        const double var_L_type_Ca_channel_f_Ca_gate__Km_Ca = 0.00059999999999999995; // millimolar
        const double var_Na_Ca_exchanger__K_NaCa = 0.002; // millimolar
        const double var_Na_Ca_exchanger__d_NaCa = 0.001; // millimolar
        const double var_Na_Ca_exchanger__gamma = 0.5; // dimensionless
        const double var_Na_Ca_exchanger__n_NaCa = 3.0; // dimensionless
        const double var_T_type_Ca_channel__g_CaT = 0.050000000000000003; // milliS_per_microF
        const double var_calcium_background_current__g_Cab = 0.003016; // milliS_per_microF
        const double var_calcium_dynamics__APtrack2_orig_deriv = (((var_chaste_interface__calcium_dynamics__APtrack > 0.17999999999999999) && (var_chaste_interface__calcium_dynamics__APtrack < 0.20000000000000001)) ? (100000.0 - 100500.0 * var_chaste_interface__calcium_dynamics__APtrack2) : (-500.0 * var_chaste_interface__calcium_dynamics__APtrack2)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__APtrack2 = 0.001 * var_calcium_dynamics__APtrack2_orig_deriv; // 1 / millisecond
        const double var_calcium_dynamics__APtrack3_orig_deriv = (((var_chaste_interface__calcium_dynamics__APtrack > 0.17999999999999999) && (var_chaste_interface__calcium_dynamics__APtrack < 0.20000000000000001)) ? (100000.0 - 100500.0 * var_chaste_interface__calcium_dynamics__APtrack3) : (-10.0 * var_chaste_interface__calcium_dynamics__APtrack3)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__APtrack3 = 0.001 * var_calcium_dynamics__APtrack3_orig_deriv; // 1 / millisecond
        const double var_calcium_dynamics__CMDN_max = 0.050000000000000003; // millimolar
        const double var_calcium_dynamics__CSQN_max = 10.0; // millimolar
        const double var_calcium_dynamics__CSQNthresh = 0.69999999999999996; // millimolar
        const double var_calcium_dynamics__Ca_NSR_max = 15.0; // millimolar
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + var_chaste_interface__calcium_dynamics__Cai / var_L_type_Ca_channel_f_Ca_gate__Km_Ca); // dimensionless
        const double var_calcium_dynamics__G_rel_max = 60000.0; // per_second
        const double var_calcium_dynamics__G_rel_overload = 4000.0; // per_second
        const double var_calcium_dynamics__I_up = 5.0; // millimolar_per_second
        const double var_calcium_dynamics__K_leak = var_calcium_dynamics__I_up / var_calcium_dynamics__Ca_NSR_max; // per_second
        const double var_calcium_dynamics__K_mCMDN = 0.0023800000000000002; // millimolar
        const double var_calcium_dynamics__K_mCSQN = 0.80000000000000004; // millimolar
        const double var_calcium_dynamics__K_mTn = 0.00050000000000000001; // millimolar
        const double var_calcium_dynamics__K_mrel = 0.00080000000000000004; // millimolar
        const double var_calcium_dynamics__K_mup = 0.00092000000000000003; // millimolar
        const double var_calcium_dynamics__Logicthresh = 0.97999999999999998; // dimensionless
        const double var_calcium_dynamics__OVRLDtrack2_orig_deriv = (((var_calcium_dynamics__Logicthresh > var_chaste_interface__calcium_dynamics__OVRLDtrack2) && (var_calcium_dynamics__Logicthresh < var_chaste_interface__calcium_dynamics__OVRLDtrack)) ? (50000.0 - 50000.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (-500.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack2)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack2 = 0.001 * var_calcium_dynamics__OVRLDtrack2_orig_deriv; // 1 / millisecond
        const double var_calcium_dynamics__OVRLDtrack3_orig_deriv = (((var_calcium_dynamics__Logicthresh > var_chaste_interface__calcium_dynamics__OVRLDtrack3) && (var_calcium_dynamics__Logicthresh < var_chaste_interface__calcium_dynamics__OVRLDtrack)) ? (50000.0 - 50000.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack3) : (-10.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack3)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack3 = 0.001 * var_calcium_dynamics__OVRLDtrack3_orig_deriv; // 1 / millisecond
        const double var_calcium_dynamics__OVRLDtrack_orig_deriv = (((var_chaste_interface__calcium_dynamics__APtrack3 < 0.37) && (var_chaste_interface__calcium_dynamics__OVRLDtrack3 < 0.37) && (var_calcium_dynamics__CSQNthresh < 1 / (1.0 + var_calcium_dynamics__K_mCSQN / var_chaste_interface__calcium_dynamics__Ca_JSR))) ? (50000.0 - 50000.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack) : (-500.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack = 0.001 * var_calcium_dynamics__OVRLDtrack_orig_deriv; // 1 / millisecond
        const double var_calcium_dynamics__Tn_max = 0.070000000000000007; // millimolar
        const double var_calcium_dynamics__delta_Ca_ith = 0.00018000000000000001; // millimolar
        const double var_calcium_dynamics__G_rel = ((var_chaste_interface__calcium_dynamics__Cainfluxtrack > var_calcium_dynamics__delta_Ca_ith) ? ((1.0 - var_chaste_interface__calcium_dynamics__APtrack2) * (-var_calcium_dynamics__delta_Ca_ith + var_chaste_interface__calcium_dynamics__Cainfluxtrack) * var_chaste_interface__calcium_dynamics__APtrack2 * var_calcium_dynamics__G_rel_max / (-var_calcium_dynamics__delta_Ca_ith + var_chaste_interface__calcium_dynamics__Cainfluxtrack + var_calcium_dynamics__K_mrel)) : ((var_chaste_interface__calcium_dynamics__OVRLDtrack2 > 0) ? ((1.0 - var_chaste_interface__calcium_dynamics__OVRLDtrack2) * var_calcium_dynamics__G_rel_overload * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (0))); // per_second
        const double var_calcium_dynamics__i_leak = var_chaste_interface__calcium_dynamics__Ca_NSR * var_calcium_dynamics__K_leak; // millimolar_per_second
        const double var_calcium_dynamics__i_rel = (-var_chaste_interface__calcium_dynamics__Cai + var_chaste_interface__calcium_dynamics__Ca_JSR) * var_calcium_dynamics__G_rel; // millimolar_per_second
        const double var_calcium_dynamics__i_up = var_chaste_interface__calcium_dynamics__Cai * var_calcium_dynamics__I_up / (var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__K_mup); // millimolar_per_second
        const double var_calcium_dynamics__tau_tr = 0.17999999999999999; // second
        const double var_calcium_dynamics__i_tr = (-var_chaste_interface__calcium_dynamics__Ca_JSR + var_chaste_interface__calcium_dynamics__Ca_NSR) / var_calcium_dynamics__tau_tr; // millimolar_per_second
        const double var_calcium_dynamics__Ca_JSR_orig_deriv = (-var_calcium_dynamics__i_rel + var_calcium_dynamics__i_tr) / (1.0 + var_calcium_dynamics__CSQN_max * var_calcium_dynamics__K_mCSQN / pow((var_chaste_interface__calcium_dynamics__Ca_JSR + var_calcium_dynamics__K_mCSQN), 2)); // millimolar / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_JSR = 0.001 * var_calcium_dynamics__Ca_JSR_orig_deriv; // millimolar / millisecond
        const double var_ionic_concentrations__A_cap = 1.434e-7; // mm2
        const double var_ATP_sensitive_potassium_current__GKbaraATP = pow((0.25 * NV_Ith_S(mParameters, 1)), var_ATP_sensitive_potassium_current__nATP) * var_ATP_sensitive_potassium_current__g_K_ATP * var_ATP_sensitive_potassium_current__pATP; // milliS_per_microF
        const double var_ionic_concentrations__preplength = 0.001; // mm
        const double var_ionic_concentrations__radius = 0.00011; // mm
        const double var_ionic_concentrations__volume = M_PI * pow(var_ionic_concentrations__radius, 2) * var_ionic_concentrations__preplength; // micro_litre
        const double var_ionic_concentrations__V_myo = 0.68000000000000005 * var_ionic_concentrations__volume; // micro_litre
        const double var_calcium_dynamics__V_JSR = 0.0070588235294117632 * var_ionic_concentrations__V_myo; // micro_litre
        const double var_calcium_dynamics__V_NSR = 0.081176470588235281 * var_ionic_concentrations__V_myo; // micro_litre
        const double var_calcium_dynamics__Ca_NSR_orig_deriv = -var_calcium_dynamics__i_leak - var_calcium_dynamics__V_JSR * var_calcium_dynamics__i_tr / var_calcium_dynamics__V_NSR + var_calcium_dynamics__i_up; // millimolar / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_NSR = 0.001 * var_calcium_dynamics__Ca_NSR_orig_deriv; // millimolar / millisecond
        const double var_membrane__F = 96485.0; // coulomb_per_mole
        const double var_membrane__I_st_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_membrane__I_st = var_membrane__I_st_converted / HeartConfig::Instance()->GetCapacitance(); // microA_per_microF
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_calcium_background_current__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 0) / var_chaste_interface__calcium_dynamics__Cai) / var_membrane__F; // millivolt
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 2) / var_chaste_interface__ionic_concentrations__Nai) / var_membrane__F; // millivolt
        const double var_L_type_Ca_channel__I_CaCa = ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 0) + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 374358.83507802623 * (-1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (-1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 0) + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 0) + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (7.8019226357407252 * (-0.34100000000000003 * NV_Ith_S(mParameters, 0) + var_chaste_interface__calcium_dynamics__Cai * exp(0.074871767015605231 * var_chaste_interface__membrane__V)) * var_chaste_interface__membrane__V / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaK = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (1.8621604999999999e-9 * (-0.75 * NV_Ith_S(mParameters, 1) + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 187179.41753901311 * (-2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (-1.8621604999999999e-9 * (-0.75 * NV_Ith_S(mParameters, 1) + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 1.8621604999999999e-9 * (-0.75 * NV_Ith_S(mParameters, 1) + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (0.00069711623550831479 * (-0.75 * NV_Ith_S(mParameters, 1) + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(0.037435883507802616 * var_chaste_interface__membrane__V)) * var_chaste_interface__membrane__V / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaNa = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (6.5127374999999992e-9 * (-0.75 * NV_Ith_S(mParameters, 2) + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 187179.41753901311 * (-2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (-6.5127374999999992e-9 * (-0.75 * NV_Ith_S(mParameters, 2) + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 6.5127374999999992e-9 * (-0.75 * NV_Ith_S(mParameters, 2) + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (0.0024381008236689767 * (-0.75 * NV_Ith_S(mParameters, 2) + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(0.037435883507802616 * var_chaste_interface__membrane__V)) * var_chaste_interface__membrane__V / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaCa = var_L_type_Ca_channel__I_CaCa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaK = var_L_type_Ca_channel__I_CaK * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaNa = var_L_type_Ca_channel__I_CaNa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_CaCa + var_L_type_Ca_channel__i_CaK + var_L_type_Ca_channel__i_CaNa; // microA_per_microF
        const double var_L_type_Ca_channel_d_gate__d_infinity = 1 / (1.0 + exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_L_type_Ca_channel_d_gate__tau_d = ((fabs(10.0 + var_chaste_interface__membrane__V) < 6.2400000011564316e-7) ? (801282.05113355326 * (10.000000624 + var_chaste_interface__membrane__V) * (45787.545779060179 * (1.0 - exp(1.0000000001853256e-7)) / (1.0 + exp(1.0000000001853256e-7)) + 45787.545779060179 * (1.0 - exp(-1.0000000001853256e-7)) / (1.0 + exp(-1.0000000001853256e-7))) - 45787.545779060179 * (1.0 - exp(1.0000000001853256e-7)) / (1.0 + exp(1.0000000001853256e-7))) : (0.028571428571428571 * (1.0 - exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V)) / ((1.0 + exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V)) * (10.0 + var_chaste_interface__membrane__V)))); // second
        const double var_L_type_Ca_channel_d_gate__alpha_d = var_L_type_Ca_channel_d_gate__d_infinity / var_L_type_Ca_channel_d_gate__tau_d; // per_second
        const double var_L_type_Ca_channel_d_gate__beta_d = (1.0 - var_L_type_Ca_channel_d_gate__d_infinity) / var_L_type_Ca_channel_d_gate__tau_d; // per_second
        const double var_L_type_Ca_channel_d_gate__d_orig_deriv = (1.0 - var_chaste_interface__L_type_Ca_channel_d_gate__d) * var_L_type_Ca_channel_d_gate__alpha_d - var_L_type_Ca_channel_d_gate__beta_d * var_chaste_interface__L_type_Ca_channel_d_gate__d; // 1 / second
        const double d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d = 0.001 * var_L_type_Ca_channel_d_gate__d_orig_deriv; // 1 / millisecond
        const double var_L_type_Ca_channel_f_gate__f_infinity = 1 / (1.0 + exp(4.0 + 0.125 * var_chaste_interface__membrane__V)) + 0.59999999999999998 / (1.0 + exp(2.5 - 0.050000000000000003 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_L_type_Ca_channel_f_gate__tau_f = 0.001 / (0.02 + 0.019699999999999999 * exp(-0.113569 * pow((1 + 0.10000000000000001 * var_chaste_interface__membrane__V), 2))); // second
        const double var_L_type_Ca_channel_f_gate__alpha_f = var_L_type_Ca_channel_f_gate__f_infinity / var_L_type_Ca_channel_f_gate__tau_f; // per_second
        const double var_L_type_Ca_channel_f_gate__beta_f = (1.0 - var_L_type_Ca_channel_f_gate__f_infinity) / var_L_type_Ca_channel_f_gate__tau_f; // per_second
        const double var_L_type_Ca_channel_f_gate__f_orig_deriv = (1.0 - var_chaste_interface__L_type_Ca_channel_f_gate__f) * var_L_type_Ca_channel_f_gate__alpha_f - var_L_type_Ca_channel_f_gate__beta_f * var_chaste_interface__L_type_Ca_channel_f_gate__f; // 1 / second
        const double d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f = 0.001 * var_L_type_Ca_channel_f_gate__f_orig_deriv; // 1 / millisecond
        const double var_Na_Ca_exchanger__i_NaCa = (pow(var_chaste_interface__ionic_concentrations__Nai, var_Na_Ca_exchanger__n_NaCa) * NV_Ith_S(mParameters, 0) * exp((-2.0 + var_Na_Ca_exchanger__n_NaCa) * var_Na_Ca_exchanger__gamma * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) - pow(NV_Ith_S(mParameters, 2), var_Na_Ca_exchanger__n_NaCa) * var_chaste_interface__calcium_dynamics__Cai * exp((-1.0 + var_Na_Ca_exchanger__gamma) * (-2.0 + var_Na_Ca_exchanger__n_NaCa) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_Na_Ca_exchanger__K_NaCa / ((1.0 + 144.92753623188406 * var_chaste_interface__calcium_dynamics__Cai) * (1.0 + (pow(var_chaste_interface__ionic_concentrations__Nai, var_Na_Ca_exchanger__n_NaCa) * NV_Ith_S(mParameters, 0) + pow(NV_Ith_S(mParameters, 2), var_Na_Ca_exchanger__n_NaCa) * var_chaste_interface__calcium_dynamics__Cai) * var_Na_Ca_exchanger__d_NaCa)); // microA_per_microF
        const double var_T_type_Ca_channel__i_Ca_T = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2) * (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_T_type_Ca_channel__g_CaT * var_chaste_interface__T_type_Ca_channel_g_gate__g; // microA_per_microF
        const double var_T_type_Ca_channel_b_gate__b_inf = 1 / (1.0 + exp(-1.2962962962962963 - 0.092592592592592587 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_T_type_Ca_channel_b_gate__tau_b = 0.0037000000000000002 + 0.0061000000000000004 / (1.0 + exp(5.5555555555555554 + 0.22222222222222221 * var_chaste_interface__membrane__V)); // second
        const double var_T_type_Ca_channel_b_gate__b_orig_deriv = (-var_chaste_interface__T_type_Ca_channel_b_gate__b + var_T_type_Ca_channel_b_gate__b_inf) / var_T_type_Ca_channel_b_gate__tau_b; // 1 / second
        const double d_dt_chaste_interface_var_T_type_Ca_channel_b_gate__b = 0.001 * var_T_type_Ca_channel_b_gate__b_orig_deriv; // 1 / millisecond
        const double var_T_type_Ca_channel_g_gate__g_inf = 1 / (1.0 + exp(10.714285714285715 + 0.17857142857142858 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_T_type_Ca_channel_g_gate__tau_g = ((var_chaste_interface__membrane__V <= 0) ? (0.012 - 0.00087500000000000002 * var_chaste_interface__membrane__V) : (0.012)); // second
        const double var_T_type_Ca_channel_g_gate__g_orig_deriv = (-var_chaste_interface__T_type_Ca_channel_g_gate__g + var_T_type_Ca_channel_g_gate__g_inf) / var_T_type_Ca_channel_g_gate__tau_g; // 1 / second
        const double d_dt_chaste_interface_var_T_type_Ca_channel_g_gate__g = 0.001 * var_T_type_Ca_channel_g_gate__g_orig_deriv; // 1 / millisecond
        const double var_calcium_background_current__i_Ca_b = (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_calcium_background_current__g_Cab; // microA_per_microF
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 4) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // microA_per_microF
        const double var_fast_sodium_current_h_gate__alpha_h = ((var_chaste_interface__membrane__V < -40.0) ? (135.0 * exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__membrane__V)) : (0)); // per_second
        const double var_fast_sodium_current_h_gate__beta_h = ((var_chaste_interface__membrane__V < -40.0) ? (3560.0 * exp(0.079000000000000001 * var_chaste_interface__membrane__V) + 310000000.0 * exp(0.34999999999999998 * var_chaste_interface__membrane__V)) : (7692.3076923076933 / (1.0 + exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__membrane__V)))); // per_second
        const double var_fast_sodium_current_h_gate__h_orig_deriv = (1.0 - var_chaste_interface__fast_sodium_current_h_gate__h) * var_fast_sodium_current_h_gate__alpha_h - var_fast_sodium_current_h_gate__beta_h * var_chaste_interface__fast_sodium_current_h_gate__h; // 1 / second
        const double d_dt_chaste_interface_var_fast_sodium_current_h_gate__h = 0.001 * var_fast_sodium_current_h_gate__h_orig_deriv; // 1 / millisecond
        const double var_fast_sodium_current_j_gate__alpha_j = ((var_chaste_interface__membrane__V < -40.0) ? (1000.0 * (37.780000000000001 + var_chaste_interface__membrane__V) * (-127140.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__V) - 3.4740000000000003e-5 * exp(-0.043909999999999998 * var_chaste_interface__membrane__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V))) : (0)); // per_second
        const double var_fast_sodium_current_j_gate__beta_j = ((var_chaste_interface__membrane__V < -40.0) ? (121.2 * exp(-0.01052 * var_chaste_interface__membrane__V) / (1.0 + exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__membrane__V))) : (300.0 * exp(-2.5349999999999999e-7 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.2000000000000002 - 0.10000000000000001 * var_chaste_interface__membrane__V)))); // per_second
        const double var_fast_sodium_current_j_gate__j_orig_deriv = (1.0 - var_chaste_interface__fast_sodium_current_j_gate__j) * var_fast_sodium_current_j_gate__alpha_j - var_fast_sodium_current_j_gate__beta_j * var_chaste_interface__fast_sodium_current_j_gate__j; // 1 / second
        const double d_dt_chaste_interface_var_fast_sodium_current_j_gate__j = 0.001 * var_fast_sodium_current_j_gate__j_orig_deriv; // 1 / millisecond
        const double var_fast_sodium_current_m_gate__alpha_m = ((fabs(47.130000000000003 + var_chaste_interface__membrane__V) < 1.0000000010279564e-6) ? (-0.00032000000146581442 / (1.0 - exp(1.0000000045806701e-7)) + 499999.99948602181 * (47.130001000000007 + var_chaste_interface__membrane__V) * (0.00031999999919207767 / (1.0 - exp(-9.9999999747524276e-8)) + 0.00032000000146581442 / (1.0 - exp(1.0000000045806701e-7)))) : (320.0 * (47.130000000000003 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.7130000000000001 - 0.10000000000000001 * var_chaste_interface__membrane__V)))); // per_second
        const double var_fast_sodium_current_m_gate__beta_m = 80.0 * exp(-0.090909090909090912 * var_chaste_interface__membrane__V); // per_second
        const double var_fast_sodium_current_m_gate__m_orig_deriv = (1.0 - var_chaste_interface__fast_sodium_current_m_gate__m) * var_fast_sodium_current_m_gate__alpha_m - var_fast_sodium_current_m_gate__beta_m * var_chaste_interface__fast_sodium_current_m_gate__m; // 1 / second
        const double d_dt_chaste_interface_var_fast_sodium_current_m_gate__m = 0.001 * var_fast_sodium_current_m_gate__m_orig_deriv; // 1 / millisecond
        const double var_non_specific_calcium_activated_current__K_m_ns_Ca = 0.0011999999999999999; // millimolar
        const double var_non_specific_calcium_activated_current__P_ns_Ca = 0; // cm_per_second
        const double var_non_specific_calcium_activated_current__I_ns_K = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * NV_Ith_S(mParameters, 1) + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__I_ns_Na = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * NV_Ith_S(mParameters, 2) + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_K = var_non_specific_calcium_activated_current__I_ns_K / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Na = var_non_specific_calcium_activated_current__I_ns_Na / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Ca = var_non_specific_calcium_activated_current__i_ns_K + var_non_specific_calcium_activated_current__i_ns_Na; // microA_per_microF
        const double var_plateau_potassium_current__Kp = 1 / (1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_plateau_potassium_current__g_Kp = 0.0055199999999999997; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__Rect = 1 / (1.0 + exp(0.4017857142857143 + 0.044642857142857144 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_rapid_delayed_rectifier_potassium_current__g_Kr = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 1)) * NV_Ith_S(mParameters, 6); // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current_xr_gate__tau_xr = 0.001 / (((fabs(38.899999999999999 + var_chaste_interface__membrane__V) < 6.8965517030505907e-7) ? (4.2068965605324136e-10 / (-1.0 + exp(1.0000000020937704e-7)) - 725000.00221680664 * (38.899999310344825 + var_chaste_interface__membrane__V) * (-4.2068965171893065e-10 / (-1.0 + exp(-9.9999999179090074e-8)) - 4.2068965605324136e-10 / (-1.0 + exp(1.0000000020937704e-7)))) : (0.00060999999999999997 * (38.899999999999999 + var_chaste_interface__membrane__V) / (-1.0 + exp(5.6404999999999994 + 0.14499999999999999 * var_chaste_interface__membrane__V)))) + ((fabs(14.199999999999999 + var_chaste_interface__membrane__V) < 8.1300813015161566e-7) ? (-1.1219512196092296e-9 / (1.0 - exp(1.0000000000864873e-7)) + 614999.99994681031 * (14.200000813008129 + var_chaste_interface__membrane__V) * (1.1219512196092296e-9 / (1.0 - exp(1.0000000000864873e-7)) + 1.1219512196092296e-9 / (1.0 - exp(-1.0000000000864873e-7)))) : (0.0013799999999999999 * (14.199999999999999 + var_chaste_interface__membrane__V) / (1.0 - exp(-1.7465999999999999 - 0.123 * var_chaste_interface__membrane__V))))); // second
        const double var_rapid_delayed_rectifier_potassium_current_xr_gate__xr_infinity = 1 / (1.0 + exp(-2.8666666666666667 - 0.13333333333333333 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_rapid_delayed_rectifier_potassium_current_xr_gate__xr_orig_deriv = (-var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr + var_rapid_delayed_rectifier_potassium_current_xr_gate__xr_infinity) / var_rapid_delayed_rectifier_potassium_current_xr_gate__tau_xr; // 1 / second
        const double d_dt_chaste_interface_var_rapid_delayed_rectifier_potassium_current_xr_gate__xr = 0.001 * var_rapid_delayed_rectifier_potassium_current_xr_gate__xr_orig_deriv; // 1 / millisecond
        const double var_sarcolemmal_calcium_pump__I_pCa = 1.1499999999999999; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__K_mpCa = 0.00050000000000000001; // millimolar
        const double var_sarcolemmal_calcium_pump__i_p_Ca = var_chaste_interface__calcium_dynamics__Cai * var_sarcolemmal_calcium_pump__I_pCa / (var_chaste_interface__calcium_dynamics__Cai + var_sarcolemmal_calcium_pump__K_mpCa); // microA_per_microF
        const double var_calcium_dynamics__Cai_orig_deriv = ((-var_calcium_dynamics__i_up + var_calcium_dynamics__i_leak) * var_calcium_dynamics__V_NSR / var_ionic_concentrations__V_myo + var_calcium_dynamics__V_JSR * var_calcium_dynamics__i_rel / var_ionic_concentrations__V_myo - 0.5 * (-var_Na_Ca_exchanger__i_NaCa + var_L_type_Ca_channel__i_CaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_sarcolemmal_calcium_pump__i_p_Ca) * var_ionic_concentrations__A_cap / (var_ionic_concentrations__V_myo * var_membrane__F)) / (1.0 + var_calcium_dynamics__CMDN_max * var_calcium_dynamics__K_mCMDN / pow((var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__K_mCMDN), 2) + var_calcium_dynamics__K_mTn * var_calcium_dynamics__Tn_max / pow((var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__K_mTn), 2)); // millimolar / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Cai = 0.001 * var_calcium_dynamics__Cai_orig_deriv; // millimolar / millisecond
        const double var_calcium_dynamics__Cainfluxtrack_orig_deriv = ((var_chaste_interface__calcium_dynamics__APtrack > 0.20000000000000001) ? (-0.5 * (-var_Na_Ca_exchanger__i_NaCa + var_L_type_Ca_channel__i_CaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_sarcolemmal_calcium_pump__i_p_Ca) * var_ionic_concentrations__A_cap / (var_ionic_concentrations__V_myo * var_membrane__F)) : ((var_chaste_interface__calcium_dynamics__APtrack2 > 0.01) ? (0) : (-500.0 * var_chaste_interface__calcium_dynamics__Cainfluxtrack))); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Cainfluxtrack = 0.001 * var_calcium_dynamics__Cainfluxtrack_orig_deriv; // 1 / millisecond
        const double var_slow_delayed_rectifier_potassium_current__PNaK = 0.018329999999999999; // dimensionless
        const double var_slow_delayed_rectifier_potassium_current__E_Ks = var_membrane__R * var_membrane__T * log((NV_Ith_S(mParameters, 2) * var_slow_delayed_rectifier_potassium_current__PNaK + NV_Ith_S(mParameters, 1)) / (var_chaste_interface__ionic_concentrations__Nai * var_slow_delayed_rectifier_potassium_current__PNaK + var_chaste_interface__ionic_concentrations__Ki)) / var_membrane__F; // millivolt
        const double var_slow_delayed_rectifier_potassium_current__g_Ks = 0.433 + 0.25979999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999)); // milliS_per_microF
        const double var_slow_delayed_rectifier_potassium_current_xs1_gate__tau_xs1 = 0.001 * ((fabs(30.0 + var_chaste_interface__membrane__V) < 1.4556040746072085e-6) ? (1 / (-1.9068413377354434e-10 / (-1.0 + exp(-9.9999999925515227e-8)) - 1.0465793296425829e-10 / (1.0 - exp(2.1542940304186685e-7)) + 343500.00025585521 * (30.000001455604075 + var_chaste_interface__membrane__V) * (1.9068413377354434e-10 / (-1.0 + exp(9.9999999925515227e-8)) + 1.9068413377354434e-10 / (-1.0 + exp(-9.9999999925515227e-8)) + 1.0465793296425829e-10 / (1.0 - exp(2.1542940304186685e-7)) + 1.0465793296425829e-10 / (1.0 - exp(-2.1542940304186685e-7))))) : (1 / (0.00013100000000000001 * (30.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__V)) + 7.1899999999999999e-5 * (30.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__V))))); // second
        const double var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_infinity = 1 / (1.0 + exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_orig_deriv = (-var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 + var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_infinity) / var_slow_delayed_rectifier_potassium_current_xs1_gate__tau_xs1; // 1 / second
        const double d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = 0.001 * var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_orig_deriv; // 1 / millisecond
        const double var_slow_delayed_rectifier_potassium_current_xs2_gate__tau_xs2 = 0.0040000000000000001 * ((fabs(30.0 + var_chaste_interface__membrane__V) < 1.4556040746072085e-6) ? (1 / (-1.9068413377354434e-10 / (-1.0 + exp(-9.9999999925515227e-8)) - 1.0465793296425829e-10 / (1.0 - exp(2.1542940304186685e-7)) + 343500.00025585521 * (30.000001455604075 + var_chaste_interface__membrane__V) * (1.9068413377354434e-10 / (-1.0 + exp(9.9999999925515227e-8)) + 1.9068413377354434e-10 / (-1.0 + exp(-9.9999999925515227e-8)) + 1.0465793296425829e-10 / (1.0 - exp(2.1542940304186685e-7)) + 1.0465793296425829e-10 / (1.0 - exp(-2.1542940304186685e-7))))) : (1 / (0.00013100000000000001 * (30.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__V)) + 7.1899999999999999e-5 * (30.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__V))))); // second
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = (-var_slow_delayed_rectifier_potassium_current__E_Ks + var_chaste_interface__membrane__V) * var_slow_delayed_rectifier_potassium_current__g_Ks * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2; // microA_per_microF
        const double var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_infinity = 1 / (1.0 + exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_orig_deriv = (-var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 + var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_infinity) / var_slow_delayed_rectifier_potassium_current_xs2_gate__tau_xs2; // 1 / second
        const double d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = 0.001 * var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_orig_deriv; // 1 / millisecond
        const double var_sodium_background_current__g_Nab = 0.0040000000000000001; // milliS_per_microF
        const double var_sodium_background_current__i_Na_b = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_sodium_background_current__g_Nab; // microA_per_microF
        const double var_sodium_potassium_pump__I_NaK = 2.0; // microA_per_microF
        const double var_sodium_potassium_pump__K_mKo = 1.5; // millimolar
        const double var_sodium_potassium_pump__K_mNai = 10.0; // millimolar
        const double var_sodium_potassium_pump__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * NV_Ith_S(mParameters, 2)); // dimensionless
        const double var_sodium_potassium_pump__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + 0.036499999999999998 * var_sodium_potassium_pump__sigma * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // dimensionless
        const double var_sodium_potassium_pump__i_NaK = NV_Ith_S(mParameters, 1) * var_sodium_potassium_pump__I_NaK * var_sodium_potassium_pump__f_NaK / ((1.0 + pow(var_sodium_potassium_pump__K_mNai, 2) / pow(var_chaste_interface__ionic_concentrations__Nai, 2)) * (NV_Ith_S(mParameters, 1) + var_sodium_potassium_pump__K_mKo)); // microA_per_microF
        const double var_ionic_concentrations__Nai_orig_deriv = (-var_L_type_Ca_channel__i_CaNa - var_fast_sodium_current__i_Na - var_non_specific_calcium_activated_current__i_ns_Na - var_sodium_background_current__i_Na_b - 3.0 * var_Na_Ca_exchanger__i_NaCa - 3.0 * var_sodium_potassium_pump__i_NaK) * var_ionic_concentrations__A_cap / (var_ionic_concentrations__V_myo * var_membrane__F); // millimolar / second
        const double d_dt_chaste_interface_var_ionic_concentrations__Nai = 0.001 * var_ionic_concentrations__Nai_orig_deriv; // millimolar / millisecond
        const double var_time_independent_potassium_current__E_K = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 1) / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_ATP_sensitive_potassium_current__i_K_ATP = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_ATP_sensitive_potassium_current__GKbaraATP; // microA_per_microF
        const double var_plateau_potassium_current__i_Kp = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_plateau_potassium_current__Kp * var_plateau_potassium_current__g_Kp; // microA_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_rapid_delayed_rectifier_potassium_current__Rect * var_rapid_delayed_rectifier_potassium_current__g_Kr * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr; // microA_per_microF
        const double var_time_independent_potassium_current__g_K1 = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 1)) * NV_Ith_S(mParameters, 5); // milliS_per_cm2
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K)); // per_second
        const double var_time_independent_potassium_current_K1_gate__beta_K1 = 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V)); // per_second
        const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_microF
        const double var_transient_outward_current__g_to = 0; // milliS_per_microF
        const double var_transient_outward_current__rvdv = exp(0.01 * var_chaste_interface__membrane__V); // dimensionless
        const double var_transient_outward_current_ydv_gate__alpha_ydv = 15.0 / (1.0 + exp(12.0 + 0.20000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_transient_outward_current_ydv_gate__beta_ydv = 100.0 * exp(5.0 + 0.20000000000000001 * var_chaste_interface__membrane__V) / (1.0 + exp(5.0 + 0.20000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_transient_outward_current_ydv_gate__tau_ydv = 1 / (var_transient_outward_current_ydv_gate__alpha_ydv + var_transient_outward_current_ydv_gate__beta_ydv); // second
        const double var_transient_outward_current_ydv_gate__ydv_ss = var_transient_outward_current_ydv_gate__alpha_ydv / (var_transient_outward_current_ydv_gate__alpha_ydv + var_transient_outward_current_ydv_gate__beta_ydv); // dimensionless
        const double var_transient_outward_current_ydv_gate__ydv_orig_deriv = (-var_chaste_interface__transient_outward_current_ydv_gate__ydv + var_transient_outward_current_ydv_gate__ydv_ss) / var_transient_outward_current_ydv_gate__tau_ydv; // 1 / second
        const double d_dt_chaste_interface_var_transient_outward_current_ydv_gate__ydv = 0.001 * var_transient_outward_current_ydv_gate__ydv_orig_deriv; // 1 / millisecond
        const double var_transient_outward_current_zdv_gate__alpha_zdv = 10000.0 * exp(-1.6000000000000001 + 0.040000000000000001 * var_chaste_interface__membrane__V) / (1.0 + exp(-1.6000000000000001 + 0.040000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_transient_outward_current_zdv_gate__beta_zdv = 10000.0 * exp(-3.6000000000000001 - 0.040000000000000001 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.6000000000000001 - 0.040000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_transient_outward_current_zdv_gate__tau_zdv = 1 / (var_transient_outward_current_zdv_gate__alpha_zdv + var_transient_outward_current_zdv_gate__beta_zdv); // second
        const double var_transient_outward_current__i_to = pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_transient_outward_current__g_to * var_transient_outward_current__rvdv * var_chaste_interface__transient_outward_current_ydv_gate__ydv; // microA_per_microF
        const double var_ionic_concentrations__Ki_orig_deriv = (-var_ATP_sensitive_potassium_current__i_K_ATP - var_L_type_Ca_channel__i_CaK - var_non_specific_calcium_activated_current__i_ns_K - var_plateau_potassium_current__i_Kp - var_rapid_delayed_rectifier_potassium_current__i_Kr - var_slow_delayed_rectifier_potassium_current__i_Ks - var_time_independent_potassium_current__i_K1 - var_transient_outward_current__i_to + 2.0 * var_sodium_potassium_pump__i_NaK) * var_ionic_concentrations__A_cap / (var_ionic_concentrations__V_myo * var_membrane__F); // millimolar / second
        const double d_dt_chaste_interface_var_ionic_concentrations__Ki = 0.001 * var_ionic_concentrations__Ki_orig_deriv; // millimolar / millisecond
        const double var_membrane__dVdt = -(var_ATP_sensitive_potassium_current__i_K_ATP + var_L_type_Ca_channel__i_Ca_L + var_Na_Ca_exchanger__i_NaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_fast_sodium_current__i_Na + var_membrane__I_st + var_non_specific_calcium_activated_current__i_ns_Ca + var_plateau_potassium_current__i_Kp + var_rapid_delayed_rectifier_potassium_current__i_Kr + var_sarcolemmal_calcium_pump__i_p_Ca + var_slow_delayed_rectifier_potassium_current__i_Ks + var_sodium_background_current__i_Na_b + var_sodium_potassium_pump__i_NaK + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) / NV_Ith_S(mParameters, 3); // dimensionless
        const double var_calcium_dynamics__APtrack_orig_deriv = ((var_membrane__dVdt > 150000.0) ? (100000.0 - 100500.0 * var_chaste_interface__calcium_dynamics__APtrack) : (-500.0 * var_chaste_interface__calcium_dynamics__APtrack)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__APtrack = 0.001 * var_calcium_dynamics__APtrack_orig_deriv; // 1 / millisecond
        const double var_transient_outward_current_zdv_gate__zdv_ss = var_transient_outward_current_zdv_gate__alpha_zdv / (var_transient_outward_current_zdv_gate__alpha_zdv + var_transient_outward_current_zdv_gate__beta_zdv); // dimensionless
        const double var_transient_outward_current_zdv_gate__zdv_orig_deriv = (-var_chaste_interface__transient_outward_current_zdv_gate__zdv + var_transient_outward_current_zdv_gate__zdv_ss) / var_transient_outward_current_zdv_gate__tau_zdv; // 1 / second
        const double d_dt_chaste_interface_var_transient_outward_current_zdv_gate__zdv = 0.001 * var_transient_outward_current_zdv_gate__zdv_orig_deriv; // 1 / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_membrane__V = 0.0;
        }
        else
        {
            const double var_membrane__V_orig_deriv = var_membrane__dVdt; // millivolt / second
            d_dt_chaste_interface_var_membrane__V = 0.001 * var_membrane__V_orig_deriv; // millivolt / millisecond
        }
        
        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_membrane__V;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_calcium_dynamics__Cai;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_fast_sodium_current_m_gate__m;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_fast_sodium_current_h_gate__h;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_fast_sodium_current_j_gate__j;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_T_type_Ca_channel_b_gate__b;
        NV_Ith_S(rDY,8) = d_dt_chaste_interface_var_T_type_Ca_channel_g_gate__g;
        NV_Ith_S(rDY,9) = d_dt_chaste_interface_var_rapid_delayed_rectifier_potassium_current_xr_gate__xr;
        NV_Ith_S(rDY,10) = d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1;
        NV_Ith_S(rDY,11) = d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2;
        NV_Ith_S(rDY,12) = d_dt_chaste_interface_var_transient_outward_current_zdv_gate__zdv;
        NV_Ith_S(rDY,13) = d_dt_chaste_interface_var_transient_outward_current_ydv_gate__ydv;
        NV_Ith_S(rDY,14) = d_dt_chaste_interface_var_calcium_dynamics__Ca_JSR;
        NV_Ith_S(rDY,15) = d_dt_chaste_interface_var_calcium_dynamics__Ca_NSR;
        NV_Ith_S(rDY,16) = d_dt_chaste_interface_var_calcium_dynamics__APtrack;
        NV_Ith_S(rDY,17) = d_dt_chaste_interface_var_calcium_dynamics__APtrack2;
        NV_Ith_S(rDY,18) = d_dt_chaste_interface_var_calcium_dynamics__APtrack3;
        NV_Ith_S(rDY,19) = d_dt_chaste_interface_var_calcium_dynamics__Cainfluxtrack;
        NV_Ith_S(rDY,20) = d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack;
        NV_Ith_S(rDY,21) = d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack2;
        NV_Ith_S(rDY,22) = d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack3;
        NV_Ith_S(rDY,23) = d_dt_chaste_interface_var_ionic_concentrations__Nai;
        NV_Ith_S(rDY,24) = d_dt_chaste_interface_var_ionic_concentrations__Ki;
    }

    void Cellviswanathan_model_1999_epiFromCellMLCvode::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time_converted, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -88.984
        double var_chaste_interface__calcium_dynamics__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.00035237
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.00079287
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.9938
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.99573
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 3.18355e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.9974388
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.000967785
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.95331988
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.00032151644
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.0272635
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.0631269
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.011528
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.985232
        double var_chaste_interface__calcium_dynamics__Ca_JSR = NV_Ith_S(rY, 14);
        // Units: millimolar; Initial value: 0.817895
        double var_chaste_interface__calcium_dynamics__Ca_NSR = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 2.797668
        double var_chaste_interface__calcium_dynamics__APtrack = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 3.814e-87
        double var_chaste_interface__calcium_dynamics__APtrack2 = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 2.1084e-86
        double var_chaste_interface__calcium_dynamics__APtrack3 = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 0.01925
        double var_chaste_interface__calcium_dynamics__Cainfluxtrack = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 1.784e-87
        double var_chaste_interface__calcium_dynamics__OVRLDtrack = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack2 = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack3 = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ionic_concentrations__Nai = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 15.6748357
        double var_chaste_interface__ionic_concentrations__Ki = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 137.6244
        const double var_x0 = exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V);
        const double var_x1 = 1.0 + var_x0;
        const double var_x2 = 1 / var_x1;
        const double var_x3 = 0.0055199999999999997 * var_x2;
        const double var_x4 = pow(NV_Ith_S(mParameters, 1), 0.23999999999999999);
        const double var_x5 = 1.921898339896919e-8 * var_x4;
        const double var_x6 = 1 / var_chaste_interface__calcium_dynamics__Cai;
        const double var_x7 = pow(var_x6, 1.3999999999999999);
        const double var_x8 = 1.0 + 6.4818210260626455e-7 * var_x7;
        const double var_x9 = 0.25979999999999998 / var_x8;
        const double var_x10 = 0.433 + var_x9;
        const double var_x11 = var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2;
        const double var_x12 = var_x10 * var_x11;
        const double var_x13 = 0.018717941753901308 * var_chaste_interface__membrane__V;
        const double var_x14 = exp(var_x13);
        const double var_x15 = pow(var_chaste_interface__ionic_concentrations__Nai, 3.0) * NV_Ith_S(mParameters, 0);
        const double var_x16 = var_x14 * var_x15;
        const double var_x17 = exp(-var_x13);
        const double var_x18 = pow(NV_Ith_S(mParameters, 2), 3.0);
        const double var_x19 = var_x18 * var_chaste_interface__calcium_dynamics__Cai;
        const double var_x20 = var_x17 * var_x19;
        const double var_x21 = 0.018717941753901308 * var_x16 + 0.018717941753901308 * var_x20;
        const double var_x22 = 1 / (1.0 + 144.92753623188406 * var_chaste_interface__calcium_dynamics__Cai);
        const double var_x23 = 1.0 + 0.001 * var_x15 + 0.001 * var_x19;
        const double var_x24 = 1 / var_x23;
        const double var_x25 = var_x22 * var_x24;
        const double var_x26 = 0.002 * var_x25;
        const double var_x27 = var_x21 * var_x26;
        const double var_x28 = 1 / var_chaste_interface__ionic_concentrations__Ki;
        const double var_x29 = log(var_x28 * NV_Ith_S(mParameters, 1));
        const double var_x30 = -26.712338705498265 * var_x29 + var_chaste_interface__membrane__V;
        const double var_x31 = 0.00092307692307692295 * var_x0 * var_x30 / pow(var_x1, 2);
        const double var_x32 = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * NV_Ith_S(mParameters, 4);
        const double var_x33 = var_x32 * var_chaste_interface__fast_sodium_current_j_gate__j;
        const double var_x34 = var_x33 * var_chaste_interface__fast_sodium_current_h_gate__h;
        const double var_x35 = exp(9.9999999999999995e-8);
        const double var_x36 = 1 / (-1.0 + var_x35);
        const double var_x37 = -0.75 * NV_Ith_S(mParameters, 2);
        const double var_x38 = 0.75 * var_chaste_interface__ionic_concentrations__Nai;
        const double var_x39 = var_x36 * (var_x37 + var_x35 * var_x38);
        const double var_x40 = exp(-9.9999999999999995e-8);
        const double var_x41 = 1 / (-1.0 + var_x40);
        const double var_x42 = var_x41 * (var_x37 + var_x38 * var_x40);
        const double var_x43 = fabs(var_chaste_interface__membrane__V);
        const double var_x44 = var_x43 < 2.6712338705498262e-6;
        const double var_x45 = 0.037435883507802616 * var_chaste_interface__membrane__V;
        const double var_x46 = exp(var_x45);
        const double var_x47 = -1.0 + var_x46;
        const double var_x48 = 1 / var_x47;
        const double var_x49 = var_x37 + var_x38 * var_x46;
        const double var_x50 = 0.0024381008236689767 * var_x48 * var_x49;
        const double var_x51 = var_x46 * var_chaste_interface__membrane__V;
        const double var_x52 = var_x48 * var_x51;
        const double var_x53 = var_x51 / pow(var_x47, 2);
        const double var_x54 = 1 / (1.0 + 1666.6666666666667 * var_chaste_interface__calcium_dynamics__Cai);
        const double var_x55 = var_x54;
        const double var_x56 = var_x55 * var_chaste_interface__L_type_Ca_channel_f_gate__f;
        const double var_x57 = var_x56 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x58 = var_x57 * ((var_x44) ? (0.0012190504118344883 * var_x39 + 0.0012190504118344883 * var_x42) : (var_x50 + 6.8454343811362063e-5 * var_x52 * var_chaste_interface__ionic_concentrations__Nai - 9.1272458415149417e-5 * var_x49 * var_x53));
        const double var_x59 = -0.75 * NV_Ith_S(mParameters, 1);
        const double var_x60 = 0.75 * var_chaste_interface__ionic_concentrations__Ki;
        const double var_x61 = var_x36 * (var_x59 + var_x35 * var_x60);
        const double var_x62 = var_x41 * (var_x59 + var_x40 * var_x60);
        const double var_x63 = var_x59 + var_x46 * var_x60;
        const double var_x64 = 0.00069711623550831479 * var_x48 * var_x63;
        const double var_x65 = var_x57 * ((var_x44) ? (0.0003485581177541574 * var_x61 + 0.0003485581177541574 * var_x62) : (var_x64 + 1.9572871637915374e-5 * var_x52 * var_chaste_interface__ionic_concentrations__Ki - 2.6097162183887167e-5 * var_x53 * var_x63));
        const double var_x66 = exp(0.4017857142857143 + 0.044642857142857144 * var_chaste_interface__membrane__V);
        const double var_x67 = 1.0 + var_x66;
        const double var_x68 = sqrt(NV_Ith_S(mParameters, 1));
        const double var_x69 = var_x68 * NV_Ith_S(mParameters, 6) / var_x67;
        const double var_x70 = var_x69 * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr;
        const double var_x71 = 0.43033148291193518 * var_x70;
        const double var_x72 = exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 6.3708927812613361 * var_x29);
        const double var_x73 = 1.0 + var_x72;
        const double var_x74 = 1 / var_x73;
        const double var_x75 = exp(-2.4444678999999998 + 13.738155796237757 * var_x29 - 0.51429999999999998 * var_chaste_interface__membrane__V);
        const double var_x76 = 1.0 + var_x75;
        const double var_x77 = 1 / var_x76;
        const double var_x78 = exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 2.1455350448256207 * var_x29);
        const double var_x79 = exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 1.6494869150645177 * var_x29);
        const double var_x80 = var_x79 + 0.49124000000000001 * var_x78;
        const double var_x81 = var_x77 * var_x80;
        const double var_x82 = 1 / (1000.0 * var_x81 + 1020.0 * var_x74);
        const double var_x83 = var_x68 * var_x74 * NV_Ith_S(mParameters, 5);
        const double var_x84 = var_x82 * var_x83;
        const double var_x85 = 438.93811257017387 * var_x84;
        const double var_x86 = pow(var_chaste_interface__ionic_concentrations__Nai, (-2));
        const double var_x87 = 1 / (1.0 + 100.0 * var_x86);
        const double var_x88 = 2.0 * var_x87;
        const double var_x89 = 1 / (1.5 + NV_Ith_S(mParameters, 1));
        const double var_x90 = exp(-0.003743588350780262 * var_chaste_interface__membrane__V);
        const double var_x91 = exp(0.01485884101040119 * NV_Ith_S(mParameters, 2));
        const double var_x92 = exp(-var_x45);
        const double var_x93 = 1.0 + 0.1245 * var_x90 + 0.036499999999999998 * var_x92 * (-0.14285714285714285 + 0.14285714285714285 * var_x91);
        const double var_x94 = var_x89 * (0.00046607674967214262 * var_x90 + 0.037435883507802616 * var_x92 * (-0.0052142857142857138 + 0.0052142857142857138 * var_x91)) * NV_Ith_S(mParameters, 1) / pow(var_x93, 2);
        const double var_x95 = var_x72 / pow(var_x73, 2);
        const double var_x96 = 1000.0 * var_x77;
        const double var_x97 = var_x75 * var_x80 / pow(var_x76, 2);
        const double var_x98 = 0.0004218936106979757 * var_x30 * var_x83 / pow((var_x74 + 0.98039215686274506 * var_x81), 2);
        const double var_x99 = var_x98 * (243.26999999999998 * var_x95 - 514.29999999999995 * var_x97 - var_x96 * (0.061749999999999999 * var_x79 + 0.039456396800000001 * var_x78));
        const double var_x100 = var_x30 * var_x68;
        const double var_x101 = 0.019211226915711394 * var_x100 * var_x66 * NV_Ith_S(mParameters, 6) * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr / pow(var_x67, 2);
        const double var_x102 = var_x100 * var_x82 * NV_Ith_S(mParameters, 5);
        const double var_x103 = 104.68673984798647 * var_x102 * var_x95;
        const double var_x104 = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2);
        const double var_x105 = var_x104 * var_chaste_interface__T_type_Ca_channel_g_gate__g;
        const double var_x106 = 0.050000000000000003 * var_x105;
        const double var_x107 = -0.34100000000000003 * NV_Ith_S(mParameters, 0);
        const double var_x108 = var_chaste_interface__calcium_dynamics__Cai;
        const double var_x109 = var_x36 * (var_x107 + var_x108 * var_x35);
        const double var_x110 = var_x41 * (var_x107 + var_x108 * var_x40);
        const double var_x111 = 3.9009613178703626 * var_x109 + 3.9009613178703626 * var_x110;
        const double var_x112 = var_x43 < 1.3356169352749131e-6;
        const double var_x113 = exp(0.074871767015605231 * var_chaste_interface__membrane__V);
        const double var_x114 = var_x107 + var_x108 * var_x113;
        const double var_x115 = -1.0 + var_x113;
        const double var_x116 = 1 / var_x115;
        const double var_x117 = 7.8019226357407252 * var_x116;
        const double var_x118 = var_x114 * var_x117;
        const double var_x119 = var_x113 * var_chaste_interface__membrane__V;
        const double var_x120 = 0.58414373385695628 * var_x119;
        const double var_x121 = var_x116 * var_x120 * var_chaste_interface__calcium_dynamics__Cai;
        const double var_x122 = var_x114 * var_x120 / pow(var_x115, 2);
        const double var_x123 = var_x106 + var_x57 * ((var_x112) ? (var_x111) : (var_x118 + var_x121 - var_x122));
        const double var_x124 = 1 / NV_Ith_S(mParameters, 3);
        const double var_x125 = 0.001 * var_x124;
        const double var_x126 = var_x16 - var_x20;
        const double var_x127 = var_x126 * var_x24 / pow((0.0068999999999999999 + var_chaste_interface__calcium_dynamics__Cai), 2);
        const double var_x128 = 1.38e-5 * var_x127;
        const double var_x129 = var_x17 * var_x18;
        const double var_x130 = var_x129 * var_x26;
        const double var_x131 = var_x126 * var_x22 / pow(var_x23, 2);
        const double var_x132 = var_x131 * var_x18;
        const double var_x133 = 1.9999999999999999e-6 * var_x132;
        const double var_x134 = 6.5127374999999992e-9 * var_x39;
        const double var_x135 = -var_x134 - 6.5127374999999992e-9 * var_x42;
        const double var_x136 = -0.5 + 187179.41753901311 * var_chaste_interface__membrane__V;
        const double var_x137 = var_x50 * var_chaste_interface__membrane__V;
        const double var_x138 = ((var_x44) ? (var_x134 - var_x135 * var_x136) : (var_x137));
        const double var_x139 = var_chaste_interface__L_type_Ca_channel_d_gate__d / pow((0.00059999999999999995 + var_chaste_interface__calcium_dynamics__Cai), 2);
        const double var_x140 = 0.00059999999999999995 * var_x139;
        const double var_x141 = var_x140 * var_chaste_interface__L_type_Ca_channel_f_gate__f;
        const double var_x142 = var_x138 * var_x141;
        const double var_x143 = 1.8621604999999999e-9 * var_x61;
        const double var_x144 = -var_x143 - 1.8621604999999999e-9 * var_x62;
        const double var_x145 = var_x64 * var_chaste_interface__membrane__V;
        const double var_x146 = ((var_x44) ? (var_x143 - var_x136 * var_x144) : (var_x145));
        const double var_x147 = var_x141 * var_x146;
        const double var_x148 = 1 / (0.018329999999999999 * var_chaste_interface__ionic_concentrations__Nai + var_chaste_interface__ionic_concentrations__Ki);
        const double var_x149 = -26.712338705498265 * log(var_x148 * (0.018329999999999999 * NV_Ith_S(mParameters, 2) + NV_Ith_S(mParameters, 1))) + var_chaste_interface__membrane__V;
        const double var_x150 = 2.3575679435995052e-7 * var_x11 * var_x149 * var_x6 * var_x7 / pow(var_x8, 2);
        const double var_x151 = 0.00050000000000000001 + var_chaste_interface__calcium_dynamics__Cai;
        const double var_x152 = 1.1499999999999999 / var_x151;
        const double var_x153 = 0.040282206767891383 * var_x6;
        const double var_x154 = pow(var_x151, (-2));
        const double var_x155 = -1.1499999999999999 * var_x154 * var_chaste_interface__calcium_dynamics__Cai;
        const double var_x156 = 0.6678084676374566 * var_x105 * var_x6;
        const double var_x157 = var_x35 * var_x36;
        const double var_x158 = 1.042038e-5 * var_x157;
        const double var_x159 = var_x40 * var_x41;
        const double var_x160 = var_x158 + (0.5 - 374358.83507802623 * var_chaste_interface__membrane__V) * (-var_x158 - 1.042038e-5 * var_x159);
        const double var_x161 = var_x117 * var_x119;
        const double var_x162 = 1.042038e-5 * var_x109;
        const double var_x163 = 1.042038e-5 * var_x110;
        const double var_x164 = -0.5 + 374358.83507802623 * var_chaste_interface__membrane__V;
        const double var_x165 = var_x162 - var_x164 * (-var_x162 - var_x163);
        const double var_x166 = var_x118 * var_chaste_interface__membrane__V;
        const double var_x167 = ((var_x112) ? (var_x165) : (var_x166));
        const double var_x168 = var_x167 * var_chaste_interface__L_type_Ca_channel_f_gate__f;
        const double var_x169 = var_x152 + var_x153 + var_x155 + var_x156 + var_x57 * ((var_x112) ? (var_x160) : (var_x161)) - var_x140 * var_x168;
        const double var_x170 = 1 / var_chaste_interface__ionic_concentrations__Nai;
        const double var_x171 = log(var_x170 * NV_Ith_S(mParameters, 2));
        const double var_x172 = -26.712338705498265 * var_x171 + var_chaste_interface__membrane__V;
        const double var_x173 = var_x172 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 2) * NV_Ith_S(mParameters, 4) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j;
        const double var_x174 = 0.001 * var_chaste_interface__fast_sodium_current_j_gate__j;
        const double var_x175 = var_x172 * var_x32;
        const double var_x176 = var_x124 * var_x175;
        const double var_x177 = 0.001 * var_chaste_interface__fast_sodium_current_h_gate__h;
        const double var_x178 = var_x168 * var_x55;
        const double var_x179 = var_x55 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x180 = log(var_x6 * NV_Ith_S(mParameters, 0));
        const double var_x181 = -13.356169352749133 * var_x180 + var_chaste_interface__membrane__V;
        const double var_x182 = var_x181 * var_chaste_interface__T_type_Ca_channel_b_gate__b * var_chaste_interface__T_type_Ca_channel_g_gate__g;
        const double var_x183 = var_x104 * var_x181;
        const double var_x184 = var_x30 * var_x69;
        const double var_x185 = 0.001 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2;
        const double var_x186 = var_x10 * var_x124 * var_x149;
        const double var_x187 = 0.001 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1;
        const double var_x188 = 0.10684935482199306 * var_x170;
        const double var_x189 = 187179.41753901311 * var_chaste_interface__membrane__V;
        const double var_x190 = 0.5 - var_x189;
        const double var_x191 = 4.8845531249999998e-9 * var_x157;
        const double var_x192 = var_x57 * ((var_x44) ? (var_x191 + var_x190 * (-var_x191 - 4.8845531249999998e-9 * var_x159)) : (0.0018285756177517324 * var_x52));
        const double var_x193 = var_x12 * var_x148;
        const double var_x194 = 0.0060000000000000001 * var_x25;
        const double var_x195 = pow(var_chaste_interface__ionic_concentrations__Nai, 2.0) * NV_Ith_S(mParameters, 0);
        const double var_x196 = var_x14 * var_x195;
        const double var_x197 = var_x194 * var_x196;
        const double var_x198 = var_x89 * NV_Ith_S(mParameters, 1) / var_x93;
        const double var_x199 = var_x198 / (pow((0.01 + var_x86), 2) * pow(var_chaste_interface__ionic_concentrations__Nai, 3));
        const double var_x200 = 26.712338705498265 * var_x170 * var_x34;
        const double var_x201 = var_x131 * var_x195;
        const double var_x202 = 6.0000000000000002e-6 * var_x201;
        const double var_x203 = 5.1338399412861326e-7 * var_x28 * var_x4;
        const double var_x204 = 0.14745210965435041 * var_x2 * var_x28;
        const double var_x205 = 1.3966203749999998e-9 * var_x157;
        const double var_x206 = var_x57 * ((var_x44) ? (var_x205 + var_x190 * (-var_x205 - 1.3966203749999998e-9 * var_x159)) : (0.00052283717663123607 * var_x52));
        const double var_x207 = 11.495160327182951 * var_x28 * var_x70;
        const double var_x208 = 11725.06353372661 * var_x28 * var_x84;
        const double var_x209 = var_x28 * var_x95;
        const double var_x210 = var_x98 * (6498.310636886562 * var_x209 - var_x96 * (1.053972635420138 * var_x28 * var_x78 + 1.6494869150645177 * var_x28 * var_x79) - 13738.155796237757 * var_x28 * var_x97);
        const double var_x211 = 2796.4276527937964 * var_x102 * var_x209;
        const double var_x212 = 0.003016 - var_x27;
        const double var_x213 = 0.0023800000000000002 + var_chaste_interface__calcium_dynamics__Cai;
        const double var_x214 = 1.0 + 0.00011900000000000002 / pow(var_x213, 2) + 3.5000000000000004e-5 * var_x154;
        const double var_x215 = 1 / var_x214;
        const double var_x216 = 1 / M_PI;
        const double var_x217 = var_x215 * var_x216;
        const double var_x218 = 9.0316078310111333e-5 * var_x217;
        const double var_x219 = 0.00092000000000000003 + var_chaste_interface__calcium_dynamics__Cai;
        const double var_x220 = 1 / var_x219;
        const double var_x221 = 0.40588235294117642 * var_x220;
        const double var_x222 = 1.0 - var_chaste_interface__calcium_dynamics__APtrack2;
        const double var_x223 = 0.00062 + var_chaste_interface__calcium_dynamics__Cainfluxtrack;
        const double var_x224 = 1 / var_x223;
        const double var_x225 = -0.00018000000000000001 + var_chaste_interface__calcium_dynamics__Cainfluxtrack;
        const double var_x226 = 60000.0 * var_x224 * var_x225;
        const double var_x227 = var_x222 * var_x226;
        const double var_x228 = var_chaste_interface__calcium_dynamics__Cainfluxtrack > 0.00018000000000000001;
        const double var_x229 = var_chaste_interface__calcium_dynamics__OVRLDtrack2 > 0;
        const double var_x230 = ((var_x228) ? (var_x227 * var_chaste_interface__calcium_dynamics__APtrack2) : ((var_x229) ? (4000.0 * (1.0 - var_chaste_interface__calcium_dynamics__OVRLDtrack2) * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (0)));
        const double var_x231 = 0.0070588235294117632 * var_x230;
        const double var_x232 = var_chaste_interface__calcium_dynamics__Cai / pow(var_x219, 2);
        const double var_x233 = var_x128 + var_x130 + var_x133;
        const double var_x234 = 0.090316078310111333 * var_x216;
        const double var_x235 = 0.001 * var_x215;
        const double var_x236 = -var_chaste_interface__calcium_dynamics__Cai + var_chaste_interface__calcium_dynamics__Ca_JSR;
        const double var_x237 = var_x126 * var_x26;
        const double var_x238 = -0.040282206767891383 * var_x180 + var_x106 * var_x181 + var_x152 * var_chaste_interface__calcium_dynamics__Cai;
        const double var_x239 = var_x54 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x240 = ((var_x228) ? (var_x227 - var_x226 * var_chaste_interface__calcium_dynamics__APtrack2) : (0));
        const double var_x241 = var_x235 * (0.0070588235294117632 * var_chaste_interface__calcium_dynamics__Ca_JSR - 0.0070588235294117632 * var_chaste_interface__calcium_dynamics__Cai);
        const double var_x242 = 60000.0 * var_x222 * var_chaste_interface__calcium_dynamics__APtrack2;
        const double var_x243 = ((var_x228) ? (var_x224 * var_x242 - var_x225 * var_x242 / pow(var_x223, 2)) : (0));
        const double var_x244 = ((var_x228) ? (0) : ((var_x229) ? (4000.0 - 8000.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (0)));
        const double var_x245 = var_x202 - var_x197;
        const double var_x246 = 1 / (1.0 - exp(-9.9999999747524276e-8));
        const double var_x247 = 1 / (1.0 - exp(1.0000000045806701e-7));
        const double var_x248 = 47.130000000000003 + var_chaste_interface__membrane__V;
        const double var_x249 = fabs(var_x248) < 1.0000000010279564e-6;
        const double var_x250 = -0.10000000000000001 * var_chaste_interface__membrane__V;
        const double var_x251 = exp(-4.7130000000000001 + var_x250);
        const double var_x252 = 1.0 - var_x251;
        const double var_x253 = 320.0 / var_x252;
        const double var_x254 = exp(-0.090909090909090912 * var_chaste_interface__membrane__V);
        const double var_x255 = 0.00032000000146581442 * var_x247;
        const double var_x256 = exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__membrane__V);
        const double var_x257 = var_chaste_interface__membrane__V < -40.0;
        const double var_x258 = exp(0.079000000000000001 * var_chaste_interface__membrane__V);
        const double var_x259 = exp(0.34999999999999998 * var_chaste_interface__membrane__V);
        const double var_x260 = exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__membrane__V);
        const double var_x261 = 1.0 + var_x260;
        const double var_x262 = exp(0.24440000000000001 * var_chaste_interface__membrane__V);
        const double var_x263 = exp(-0.043909999999999998 * var_chaste_interface__membrane__V);
        const double var_x264 = -127140.0 * var_x262 - 3.4740000000000003e-5 * var_x263;
        const double var_x265 = exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V);
        const double var_x266 = 1.0 + var_x265;
        const double var_x267 = 1000.0 / var_x266;
        const double var_x268 = var_x264 * var_x267;
        const double var_x269 = 37.780000000000001 + var_chaste_interface__membrane__V;
        const double var_x270 = exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__membrane__V);
        const double var_x271 = 1.0 + var_x270;
        const double var_x272 = exp(-0.01052 * var_chaste_interface__membrane__V);
        const double var_x273 = var_x272 / var_x271;
        const double var_x274 = exp(-3.2000000000000002 + var_x250);
        const double var_x275 = 1.0 + var_x274;
        const double var_x276 = exp(-2.5349999999999999e-7 * var_chaste_interface__membrane__V);
        const double var_x277 = var_x276 / var_x275;
        const double var_x278 = exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V);
        const double var_x279 = 1.0 + var_x278;
        const double var_x280 = 0.001 / var_x279;
        const double var_x281 = -0.001 + var_x280;
        const double var_x282 = exp(1.0000000001853256e-7);
        const double var_x283 = (1.0 - var_x282) / (1.0 + var_x282);
        const double var_x284 = 45787.545779060179 * var_x283;
        const double var_x285 = exp(-1.0000000001853256e-7);
        const double var_x286 = (1.0 - var_x285) / (1.0 + var_x285);
        const double var_x287 = (10.000000624 + var_chaste_interface__membrane__V) * (var_x284 + 45787.545779060179 * var_x286);
        const double var_x288 = 10.0 + var_chaste_interface__membrane__V;
        const double var_x289 = fabs(var_x288) < 6.2400000011564316e-7;
        const double var_x290 = 1.0 - var_x278;
        const double var_x291 = 1 / var_x290;
        const double var_x292 = 35.0 * var_x279 * var_x291;
        const double var_x293 = 5.6089743589743595 * var_x278 * var_x288;
        const double var_x294 = ((var_x289) ? (1.5575040005772907e-12 * (-36688738598.216812 * var_x283 - 36688738598.216812 * var_x286) / pow((var_x287 - 0.057142857142857141 * var_x283), 2)) : (var_x292 - var_x291 * var_x293 - var_x279 * var_x293 / pow(var_x290, 2)));
        const double var_x295 = 1.0 - var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x296 = ((var_x289) ? (1 / (-var_x284 + 801282.05113355326 * var_x287)) : (var_x288 * var_x292));
        const double var_x297 = 0.00016025641025641026 * var_x278 * var_x296 / pow(var_x279, 2);
        const double var_x298 = exp(-0.113569 * pow((1 + 0.10000000000000001 * var_chaste_interface__membrane__V), 2));
        const double var_x299 = 19.699999999999999 * var_x298;
        const double var_x300 = 0.001 - 0.001 * var_chaste_interface__L_type_Ca_channel_f_gate__f;
        const double var_x301 = exp(2.5 - 0.050000000000000003 * var_chaste_interface__membrane__V);
        const double var_x302 = 1.0 + var_x301;
        const double var_x303 = 0.029999999999999999 * var_x301 / pow(var_x302, 2);
        const double var_x304 = exp(4.0 + 0.125 * var_chaste_interface__membrane__V);
        const double var_x305 = 1.0 + var_x304;
        const double var_x306 = 0.125 * var_x304 / pow(var_x305, 2);
        const double var_x307 = 0.019699999999999999 * var_x298;
        const double var_x308 = -0.02 - var_x307;
        const double var_x309 = 1 / var_x305;
        const double var_x310 = 0.59999999999999998 / var_x302;
        const double var_x311 = var_x309 + var_x310;
        const double var_x312 = -0.022713800000000003 - 0.0022713799999999999 * var_chaste_interface__membrane__V;
        const double var_x313 = 1.0 - var_x309 - var_x310;
        const double var_x314 = exp(-1.2962962962962963 - 0.092592592592592587 * var_chaste_interface__membrane__V);
        const double var_x315 = 1.0 + var_x314;
        const double var_x316 = exp(5.5555555555555554 + 0.22222222222222221 * var_chaste_interface__membrane__V);
        const double var_x317 = 1.0 + var_x316;
        const double var_x318 = 1 / var_x317;
        const double var_x319 = 1 / (0.0037000000000000002 + 0.0061000000000000004 * var_x318);
        const double var_x320 = exp(10.714285714285715 + 0.17857142857142858 * var_chaste_interface__membrane__V);
        const double var_x321 = 1.0 + var_x320;
        const double var_x322 = var_chaste_interface__membrane__V <= 0;
        const double var_x323 = ((var_x322) ? (1 / (0.012 - 0.00087500000000000002 * var_chaste_interface__membrane__V)) : (83.333333333333329));
        const double var_x324 = exp(-2.8666666666666667 - 0.13333333333333333 * var_chaste_interface__membrane__V);
        const double var_x325 = 1.0 + var_x324;
        const double var_x326 = 1 / (-1.0 + exp(-9.9999999179090074e-8));
        const double var_x327 = 1 / (-1.0 + exp(1.0000000020937704e-7));
        const double var_x328 = exp(-1.7465999999999999 - 0.123 * var_chaste_interface__membrane__V);
        const double var_x329 = 1.0 - var_x328;
        const double var_x330 = 1.3799999999999999 / var_x329;
        const double var_x331 = 14.199999999999999 + var_chaste_interface__membrane__V;
        const double var_x332 = var_x330 - 0.16973999999999997 * var_x328 * var_x331 / pow(var_x329, 2);
        const double var_x333 = 38.899999999999999 + var_chaste_interface__membrane__V;
        const double var_x334 = fabs(var_x333) < 6.8965517030505907e-7;
        const double var_x335 = 1 / (1.0 - exp(1.0000000000864873e-7));
        const double var_x336 = 1 / (1.0 - exp(-1.0000000000864873e-7));
        const double var_x337 = exp(5.6404999999999994 + 0.14499999999999999 * var_chaste_interface__membrane__V);
        const double var_x338 = -1.0 + var_x337;
        const double var_x339 = 0.60999999999999999 / var_x338;
        const double var_x340 = var_x339 - 0.088449999999999987 * var_x333 * var_x337 / pow(var_x338, 2);
        const double var_x341 = fabs(var_x331) < 8.1300813015161566e-7;
        const double var_x342 = var_x330 * var_x331;
        const double var_x343 = var_x333 * var_x339;
        const double var_x344 = ((var_x334) ? (var_x342 + 4.2068965605324133e-7 * var_x327 - 725000002.21680665 * (38.899999310344825 + var_chaste_interface__membrane__V) * (-4.2068965171893065e-10 * var_x326 - 4.2068965605324136e-10 * var_x327)) : ((var_x341) ? (var_x343 - 1.1219512196092295e-6 * var_x335 + 614999999.94681036 * (14.200000813008129 + var_chaste_interface__membrane__V) * (1.1219512196092296e-9 * var_x335 + 1.1219512196092296e-9 * var_x336)) : (var_x342 + var_x343)));
        const double var_x345 = exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__membrane__V);
        const double var_x346 = 1.0 + var_x345;
        const double var_x347 = 0.001 / var_x346;
        const double var_x348 = 1 / (-1.0 + exp(9.9999999925515227e-8));
        const double var_x349 = 1 / (-1.0 + exp(-9.9999999925515227e-8));
        const double var_x350 = 1 / (1.0 - exp(2.1542940304186685e-7));
        const double var_x351 = 1 / (1.0 - exp(-2.1542940304186685e-7));
        const double var_x352 = 30.0 + var_chaste_interface__membrane__V;
        const double var_x353 = fabs(var_x352) < 1.4556040746072085e-6;
        const double var_x354 = exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__V);
        const double var_x355 = -1.0 + var_x354;
        const double var_x356 = 1 / var_x355;
        const double var_x357 = 0.13100000000000001 * var_x356;
        const double var_x358 = exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__V);
        const double var_x359 = 1.0 - var_x358;
        const double var_x360 = 1 / var_x359;
        const double var_x361 = 0.071899999999999992 * var_x360;
        const double var_x362 = var_x352 * var_x354 / pow(var_x355, 2);
        const double var_x363 = var_x352 * var_x358 / pow(var_x359, 2);
        const double var_x364 = (30.000001455604075 + var_chaste_interface__membrane__V) * (1.9068413377354434e-10 * var_x348 + 1.9068413377354434e-10 * var_x349 + 1.0465793296425829e-10 * var_x350 + 1.0465793296425829e-10 * var_x351);
        const double var_x365 = ((var_x353) ? (343500000.2558552 * var_x364 - 1.9068413377354434e-7 * var_x349 - 1.0465793296425829e-7 * var_x350) : (var_x352 * var_x357 + var_x352 * var_x361));
        const double var_x366 = 5.9880239520958083e-5 * var_x345 / pow(var_x346, 2);
        const double var_x367 = 0.032750000000000001 * var_x356;
        const double var_x368 = 0.017974999999999998 * var_x360;
        const double var_x369 = ((var_x353) ? (85875000.063963801 * var_x364 - 4.7671033443386084e-8 * var_x349 - 2.6164483241064571e-8 * var_x350) : (var_x352 * var_x367 + var_x352 * var_x368));
        const double var_x370 = 0.040000000000000001 * var_chaste_interface__membrane__V;
        const double var_x371 = exp(-1.6000000000000001 + var_x370);
        const double var_x372 = 1.0 + var_x371;
        const double var_x373 = var_x371 / var_x372;
        const double var_x374 = exp(-3.6000000000000001 - var_x370);
        const double var_x375 = 1.0 + var_x374;
        const double var_x376 = var_x374 / var_x375;
        const double var_x377 = 10000.0 * var_x373 + 10000.0 * var_x376;
        const double var_x378 = 1 / var_x377;
        const double var_x379 = 10.0 * var_x373;
        const double var_x380 = 400.0 * var_x373;
        const double var_x381 = 400.0 * pow(var_x374, 2) / pow(var_x375, 2);
        const double var_x382 = pow(var_x371, 2) / pow(var_x372, 2);
        const double var_x383 = 400.0 * var_x382;
        const double var_x384 = 400.0 * var_x376;
        const double var_x385 = 0.40000000000000002 * var_x378;
        const double var_x386 = 0.20000000000000001 * var_chaste_interface__membrane__V;
        const double var_x387 = exp(12.0 + var_x386);
        const double var_x388 = 1.0 + var_x387;
        const double var_x389 = 1 / var_x388;
        const double var_x390 = exp(5.0 + var_x386);
        const double var_x391 = 1.0 + var_x390;
        const double var_x392 = var_x390 / var_x391;
        const double var_x393 = 15.0 * var_x389 + 100.0 * var_x392;
        const double var_x394 = var_x387 / pow(var_x388, 2);
        const double var_x395 = 3.0 * var_x394;
        const double var_x396 = 20.0 * pow(var_x390, 2) / pow(var_x391, 2);
        const double var_x397 = 20.0 * var_x392;
        const double var_x398 = 1 / var_x393;
        const double var_x399 = 0.014999999999999999 * var_x389;
        const double var_x400 = 0.80000000000000004 + var_chaste_interface__calcium_dynamics__Ca_JSR;
        const double var_x401 = pow(var_x400, (-2));
        const double var_x402 = 1 / (1.0 + 8.0 * var_x401);
        const double var_x403 = 0.001 * var_x402;
        const double var_x404 = var_x403 * (-var_chaste_interface__calcium_dynamics__Ca_JSR + var_chaste_interface__calcium_dynamics__Cai);
        const double var_x405 = var_x54 * var_chaste_interface__L_type_Ca_channel_f_gate__f;
        const double var_x406 = var_x405 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x407 = var_x237 + var_x238 + 0.0070159999999999997 * var_chaste_interface__membrane__V - 0.10684935482199306 * var_x171 + var_x12 * var_x149 + var_x172 * var_x34 + var_x198 * var_x88 + var_x3 * var_x30 + var_x30 * var_x5 + var_x30 * var_x71 + var_x30 * var_x85 + GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted) / HeartConfig::Instance()->GetCapacitance();
        const double var_x408 = var_x407 + var_x166 * var_x406;
        const double var_x409 = var_x124;
        const double var_x410 = -0.5 + var_x189;
        const double var_x411 = var_x57 * (var_x134 - var_x135 * var_x410) + var_x57 * (var_x143 - var_x144 * var_x410);
        const double var_x412 = (var_chaste_interface__calcium_dynamics__APtrack > 0.17999999999999999) && (var_chaste_interface__calcium_dynamics__APtrack < 0.20000000000000001);
        const double var_x413 = var_x106 + var_x212;
        const double var_x414 = var_chaste_interface__calcium_dynamics__APtrack > 0.20000000000000001;
        const double var_x415 = (var_x112) && (var_x414);
        const double var_x416 = var_x152 + var_x153 + var_x155 + var_x156 + var_x233;
        const double var_x417 = var_x114 * var_x116 * var_chaste_interface__membrane__V;
        const double var_x418 = var_x165 * var_x234;
        const double var_x419 = 0.70463905573898955 * var_x216 * var_x417;
        const double var_x420 = (var_x414) && (((var_x112) || (var_x414)));
        const double var_x421 = var_chaste_interface__calcium_dynamics__APtrack2 > 0.01;
        const double var_x422 = var_chaste_interface__calcium_dynamics__OVRLDtrack > 0.97999999999999998;
        const double var_x423 = var_x87 * var_x94;
        const double var_x424 = 0.00018063215662022267 * var_x216;
        const double var_x425 = var_x138 * var_x424;
        const double var_x426 = -0.433 - var_x9;
        const double var_x427 = var_x11 * var_x426;
        const double var_x428 = var_x146 * var_x424;
        const double var_x429 = var_x149 * var_x424 * var_x426;
        const double var_x430 = var_x148 * var_x427;
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x125 * (0.0070159999999999997 + var_x12 + var_x123 + var_x27 + var_x3 + var_x31 + var_x34 + var_x5 + var_x58 + var_x65 + var_x71 + var_x85 + var_x99 - var_x101 - var_x103 + var_x88 * var_x94));
        IJth(rJacobian, 1, 0) = -var_x218 * (var_x123 + var_x212);
        IJth(rJacobian, 2, 0) = (0.001 - 0.001 * var_chaste_interface__fast_sodium_current_m_gate__m) * ((var_x249) ? (159.99999943156581 * var_x246 + 160.00000056843419 * var_x247) : (var_x253 - 32.0 * var_x248 * var_x251 / pow(var_x252, 2))) + 0.0072727272727272727 * var_x254 * var_chaste_interface__fast_sodium_current_m_gate__m;
        IJth(rJacobian, 3, 0) = (0.001 - var_x177) * ((var_x257) ? (-19.852941176470587 * var_x256) : (0)) - var_x177 * ((var_x257) ? (281.24000000000001 * var_x258 + 108500000.0 * var_x259) : (693.0006930006931 * var_x260 / pow(var_x261, 2)));
        IJth(rJacobian, 4, 0) = (0.001 - var_x174) * ((var_x257) ? (var_x268 + var_x267 * var_x269 * (1.5254334000000001e-6 * var_x263 - 31073.016 * var_x262) - 311.0 * var_x264 * var_x265 * var_x269 / pow(var_x266, 2)) : (0)) - var_x174 * ((var_x257) ? (-1.2750239999999999 * var_x273 + 16.701360000000001 * var_x270 * var_x272 / pow(var_x271, 2)) : (-7.6049999999999992e-5 * var_x277 + 30.0 * var_x274 * var_x276 / pow(var_x275, 2)));
        IJth(rJacobian, 5, 0) = var_x295 * var_x297 + var_x297 * var_chaste_interface__L_type_Ca_channel_d_gate__d + var_x280 * var_x294 * var_x295 + var_x281 * var_x294 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        IJth(rJacobian, 6, 0) = var_x300 * (20.0 + var_x299) * (var_x303 - var_x306) + var_x308 * (var_x306 - var_x303) * var_chaste_interface__L_type_Ca_channel_f_gate__f + var_x299 * var_x300 * var_x311 * var_x312 - var_x307 * var_x312 * var_x313 * var_chaste_interface__L_type_Ca_channel_f_gate__f;
        IJth(rJacobian, 7, 0) = 9.2592592592592588e-5 * var_x314 * var_x319 / pow(var_x315, 2) + 0.036429872495446262 * var_x316 * (-var_chaste_interface__T_type_Ca_channel_b_gate__b + 1 / var_x315) / (pow(var_x317, 2) * pow((0.60655737704918034 + var_x318), 2));
        IJth(rJacobian, 8, 0) = (0.001 / var_x321 - 0.001 * var_chaste_interface__T_type_Ca_channel_g_gate__g) * ((var_x322) ? (6.0763888888888884 / pow((1 - 0.072916666666666671 * var_chaste_interface__membrane__V), 2)) : (0)) - 0.00017857142857142857 * var_x320 * var_x323 / pow(var_x321, 2);
        IJth(rJacobian, 9, 0) = (0.001 / var_x325 - 0.001 * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr) * ((var_x334) ? (var_x332 + 0.30499999842881237 * var_x326 + 0.30500000157118762 * var_x327) : ((var_x341) ? (var_x340 + 0.68999999999999995 * var_x335 + 0.68999999999999995 * var_x336) : (var_x332 + var_x340))) + 0.00013333333333333334 * var_x324 * var_x344 / pow(var_x325, 2);
        IJth(rJacobian, 10, 0) = var_x365 * var_x366 + (var_x347 - var_x187) * ((var_x353) ? (0.065500000000000003 * var_x348 + 0.065500000000000003 * var_x349 + 0.035949999999999996 * var_x350 + 0.035949999999999996 * var_x351) : (var_x357 + var_x361 - 0.0089997000000000011 * var_x362 - 0.0106412 * var_x363));
        IJth(rJacobian, 11, 0) = var_x366 * var_x369 + (var_x347 - var_x185) * ((var_x353) ? (0.016375000000000001 * var_x348 + 0.016375000000000001 * var_x349 + 0.008987499999999999 * var_x350 + 0.008987499999999999 * var_x351) : (var_x367 + var_x368 - 0.0022499250000000003 * var_x362 - 0.0026603 * var_x363));
        IJth(rJacobian, 12, 0) = var_x377 * (var_x373 * var_x385 - var_x382 * var_x385 + 9.9999999999999995e-8 * var_x373 * (var_x383 + var_x384 - var_x380 - var_x381) / pow((var_x373 + var_x376), 2)) + (-0.001 * var_chaste_interface__transient_outward_current_zdv_gate__zdv + var_x378 * var_x379) * (var_x380 + var_x381 - var_x383 - var_x384);
        IJth(rJacobian, 13, 0) = var_x393 * (-0.0030000000000000001 * var_x394 * var_x398 + 1.5e-6 * var_x389 * (var_x395 + var_x396 - var_x397) / pow((var_x392 + 0.14999999999999999 * var_x389), 2)) + (-0.001 * var_chaste_interface__transient_outward_current_ydv_gate__ydv + var_x398 * var_x399) * (var_x397 - var_x395 - var_x396);
        IJth(rJacobian, 19, 0) = 0.001 * ((var_x415) ? (-var_x234 * (var_x413 + var_x111 * var_x57)) : ((var_x414) ? (-var_x234 * (var_x413 + var_x118 * var_x406 + var_x121 * var_x406 - var_x122 * var_x406)) : (0)));
        IJth(rJacobian, 23, 0) = var_x424 * (-0.0040000000000000001 - var_x34 - var_x58 - 6.0 * var_x423 - var_x194 * var_x21);
        IJth(rJacobian, 24, 0) = var_x424 * (var_x101 + var_x103 + var_x427 - var_x3 - var_x31 - var_x5 - var_x65 - var_x71 - var_x85 - var_x99 + 4.0 * var_x423);
        IJth(rJacobian, 0, 1) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x125 * (var_x150 + var_x169 - var_x128 - var_x130 - var_x133 - var_x142 - var_x147));
        IJth(rJacobian, 1, 1) = var_x235 * (-var_x221 - var_x231 + 0.40588235294117642 * var_x232 - var_x234 * (var_x169 + var_x233)) + 0.001 * (0.00023800000000000004 / pow(var_x213, 3) + 7.0000000000000007e-5 / pow(var_x151, 3)) * (0.027058823529411764 * var_chaste_interface__calcium_dynamics__Ca_NSR + var_x231 * var_x236 - var_x221 * var_chaste_interface__calcium_dynamics__Cai - var_x234 * (var_x238 - var_x237 + 0.003016 * var_chaste_interface__membrane__V + var_x178 * var_chaste_interface__L_type_Ca_channel_d_gate__d)) / pow(var_x214, 2);
        IJth(rJacobian, 14, 1) = var_x230 * var_x403;
        IJth(rJacobian, 15, 1) = 0.0050000000000000001 * var_x220 - 0.0050000000000000001 * var_x232;
        IJth(rJacobian, 19, 1) = 0.001 * ((var_x415) ? (-var_x234 * (var_x416 + var_x160 * var_x57 - var_x141 * var_x165)) : ((var_x414) ? (-var_x234 * (var_x416 + var_x161 * var_x406 - 0.0046811535814444347 * var_x139 * var_x417 * var_chaste_interface__L_type_Ca_channel_f_gate__f)) : (0)));
        IJth(rJacobian, 23, 1) = var_x424 * (var_x142 + 4.1400000000000003e-5 * var_x127 + 6.0000000000000002e-6 * var_x132 + var_x129 * var_x194);
        IJth(rJacobian, 24, 1) = var_x424 * (var_x147 - var_x150);
        IJth(rJacobian, 0, 2) = mSetVoltageDerivativeToZero ? 0.0 : (-0.0030000000000000001 * var_x124 * var_x173);
        IJth(rJacobian, 2, 2) = -0.001 * ((var_x249) ? (-var_x255 + 499999.99948602181 * (47.130001000000007 + var_chaste_interface__membrane__V) * (var_x255 + 0.00031999999919207767 * var_x246)) : (var_x248 * var_x253)) - 0.080000000000000002 * var_x254;
        IJth(rJacobian, 23, 2) = -0.000541896469860668 * var_x173 * var_x216;
        IJth(rJacobian, 0, 3) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x174 * var_x176);
        IJth(rJacobian, 3, 3) = -0.001 * ((var_x257) ? (135.0 * var_x256) : (0)) - 0.001 * ((var_x257) ? (3560.0 * var_x258 + 310000000.0 * var_x259) : (7692.3076923076933 / var_x261));
        IJth(rJacobian, 23, 3) = -var_x172 * var_x33 * var_x424;
        IJth(rJacobian, 0, 4) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x176 * var_x177);
        IJth(rJacobian, 4, 4) = -0.001 * ((var_x257) ? (121.2 * var_x273) : (300.0 * var_x277)) - 0.001 * ((var_x257) ? (var_x268 * var_x269) : (0));
        IJth(rJacobian, 23, 4) = -var_x175 * var_x424 * var_chaste_interface__fast_sodium_current_h_gate__h;
        IJth(rJacobian, 0, 5) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x125 * (var_x178 + var_x138 * var_x56 + var_x146 * var_x56));
        IJth(rJacobian, 1, 5) = -var_x168 * var_x218 * var_x54;
        IJth(rJacobian, 5, 5) = var_x281 * var_x296 - var_x280 * var_x296;
        IJth(rJacobian, 19, 5) = 0.001 * ((var_x415) ? (-var_x405 * var_x418) : ((var_x414) ? (-var_x405 * var_x419) : (0)));
        IJth(rJacobian, 23, 5) = -var_x405 * var_x425;
        IJth(rJacobian, 24, 5) = -var_x405 * var_x428;
        IJth(rJacobian, 0, 6) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x125 * (var_x138 * var_x179 + var_x146 * var_x179 + var_x167 * var_x179));
        IJth(rJacobian, 1, 6) = -var_x167 * var_x218 * var_x239;
        IJth(rJacobian, 6, 6) = var_x308 * var_x311 + var_x308 * var_x313;
        IJth(rJacobian, 19, 6) = 0.001 * ((var_x415) ? (-var_x239 * var_x418) : ((var_x414) ? (-var_x239 * var_x419) : (0)));
        IJth(rJacobian, 23, 6) = -var_x239 * var_x425;
        IJth(rJacobian, 24, 6) = -var_x239 * var_x428;
        IJth(rJacobian, 0, 7) = mSetVoltageDerivativeToZero ? 0.0 : (-0.0001 * var_x124 * var_x182);
        IJth(rJacobian, 1, 7) = -9.0316078310111336e-6 * var_x182 * var_x217;
        IJth(rJacobian, 7, 7) = -0.001 * var_x319;
        IJth(rJacobian, 19, 7) = 0.001 * ((var_x420) ? (-0.0090316078310111337 * var_x182 * var_x216) : (0));
        IJth(rJacobian, 0, 8) = mSetVoltageDerivativeToZero ? 0.0 : (-5.0000000000000002e-5 * var_x124 * var_x183);
        IJth(rJacobian, 1, 8) = -4.5158039155055668e-6 * var_x183 * var_x217;
        IJth(rJacobian, 8, 8) = -0.001 * var_x323;
        IJth(rJacobian, 19, 8) = 0.001 * ((var_x420) ? (-0.0045158039155055668 * var_x183 * var_x216) : (0));
        IJth(rJacobian, 0, 9) = mSetVoltageDerivativeToZero ? 0.0 : (-0.00043033148291193521 * var_x124 * var_x184);
        IJth(rJacobian, 9, 9) = -0.001 * var_x344;
        IJth(rJacobian, 24, 9) = -7.7731703819961356e-5 * var_x184 * var_x216;
        IJth(rJacobian, 0, 10) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x185 * var_x186);
        IJth(rJacobian, 10, 10) = -0.001 * var_x365;
        IJth(rJacobian, 24, 10) = var_x429 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2;
        IJth(rJacobian, 0, 11) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x186 * var_x187);
        IJth(rJacobian, 11, 11) = -0.001 * var_x369;
        IJth(rJacobian, 24, 11) = var_x429 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1;
        IJth(rJacobian, 12, 12) = -var_x379 - 10.0 * var_x376;
        IJth(rJacobian, 13, 13) = -var_x399 - 0.10000000000000001 * var_x392;
        IJth(rJacobian, 1, 14) = 7.0588235294117632e-6 * var_x215 * var_x230;
        IJth(rJacobian, 14, 14) = var_x403 * (-5.5555555555555554 - var_x230) + 0.00025000000000000001 * (5.5555555555555554 * var_chaste_interface__calcium_dynamics__Ca_NSR - 5.5555555555555554 * var_chaste_interface__calcium_dynamics__Ca_JSR - var_x230 * var_x236) / (pow(var_x400, 3) * pow((0.125 + var_x401), 2));
        IJth(rJacobian, 15, 14) = 0.00048309178743961351;
        IJth(rJacobian, 1, 15) = 2.7058823529411762e-5 * var_x215;
        IJth(rJacobian, 14, 15) = 0.0055555555555555558 * var_x402;
        IJth(rJacobian, 15, 15) = -0.00081642512077294684;
        IJth(rJacobian, 16, 16) = 0.001 * (((((var_x112) || (var_x43 >= 2.6712338705498262e-6) || (var_x409 * (var_x408 + var_x411) < -150000.0))) && (((var_x112) || (var_x44) || (var_x409 * (var_x408 + var_x137 * var_x406 + var_x145 * var_x406) < -150000.0))) && (((var_x43 >= 1.3356169352749131e-6) || (var_x409 * (var_x407 + var_x411 + var_x57 * (var_x162 + var_x164 * (var_x162 + var_x163))) < -150000.0)))) ? (-100500.0) : (-500.0));
        IJth(rJacobian, 1, 17) = var_x240 * var_x241;
        IJth(rJacobian, 14, 17) = var_x240 * var_x404;
        IJth(rJacobian, 17, 17) = 0.001 * ((var_x412) ? (-100500.0) : (-500.0));
        IJth(rJacobian, 18, 18) = 0.001 * ((var_x412) ? (-100500.0) : (-10.0));
        IJth(rJacobian, 1, 19) = var_x241 * var_x243;
        IJth(rJacobian, 14, 19) = var_x243 * var_x404;
        IJth(rJacobian, 19, 19) = 0.001 * (((((var_x414) || (var_x421))) && (((var_x112) || (var_x414) || (var_x421)))) ? (0) : (-500.0));
        IJth(rJacobian, 20, 20) = 0.001 * (((var_chaste_interface__calcium_dynamics__APtrack3 < 0.37) && (var_chaste_interface__calcium_dynamics__OVRLDtrack3 < 0.37) && (1 / (1.0 + 0.80000000000000004 / var_chaste_interface__calcium_dynamics__Ca_JSR) > 0.69999999999999996)) ? (-50000.0) : (-500.0));
        IJth(rJacobian, 1, 21) = var_x241 * var_x244;
        IJth(rJacobian, 14, 21) = var_x244 * var_x404;
        IJth(rJacobian, 21, 21) = 0.001 * (((var_x422) && (var_chaste_interface__calcium_dynamics__OVRLDtrack2 < 0.97999999999999998)) ? (-50000.0) : (-500.0));
        IJth(rJacobian, 22, 22) = 0.001 * (((var_x422) && (var_chaste_interface__calcium_dynamics__OVRLDtrack3 < 0.97999999999999998)) ? (-50000.0) : (-10.0));
        IJth(rJacobian, 0, 23) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x125 * (var_x188 + var_x192 + var_x197 + var_x200 - var_x202 + 0.040000000000000001 * var_x199 + 0.48963716847178318 * var_x193));
        IJth(rJacobian, 1, 23) = -var_x218 * var_x245;
        IJth(rJacobian, 19, 23) = 0.001 * ((var_x420) ? (-var_x234 * var_x245) : (0));
        IJth(rJacobian, 23, 23) = var_x424 * (-var_x188 - var_x192 - var_x200 + 1.8e-5 * var_x201 - 0.12 * var_x199 - 0.018000000000000002 * var_x196 * var_x25);
        IJth(rJacobian, 24, 23) = var_x424 * (0.080000000000000002 * var_x199 + 0.48963716847178318 * var_x430);
        IJth(rJacobian, 0, 24) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x125 * (var_x203 + var_x204 + var_x206 + var_x207 + var_x208 + var_x210 - var_x211 + 26.712338705498265 * var_x193));
        IJth(rJacobian, 24, 24) = var_x424 * (var_x211 - var_x203 - var_x204 - var_x206 - var_x207 - var_x208 - var_x210 + 26.712338705498265 * var_x430);
    }

    N_Vector Cellviswanathan_model_1999_epiFromCellMLCvode::ComputeDerivedQuantities(double var_chaste_interface__environment__time_converted, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -88.984
        double var_chaste_interface__calcium_dynamics__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.00035237
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.00079287
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.9938
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.99573
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 3.18355e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.9974388
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.00032151644
        double var_chaste_interface__ionic_concentrations__Nai = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 15.6748357
        double var_chaste_interface__ionic_concentrations__Ki = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 137.6244
        
        // Mathematics
        const double var_L_type_Ca_channel_f_Ca_gate__Km_Ca = 0.00059999999999999995; // millimolar
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + var_chaste_interface__calcium_dynamics__Cai / var_L_type_Ca_channel_f_Ca_gate__Km_Ca); // dimensionless
        const double var_membrane__F = 96485.0; // coulomb_per_mole
        const double var_membrane__I_st_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 2) / var_chaste_interface__ionic_concentrations__Nai) / var_membrane__F; // millivolt
        const double var_L_type_Ca_channel__I_CaCa = ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 0) + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 374358.83507802623 * (-1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (-1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 0) + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 1.042038e-5 * (-0.34100000000000003 * NV_Ith_S(mParameters, 0) + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (7.8019226357407252 * (-0.34100000000000003 * NV_Ith_S(mParameters, 0) + var_chaste_interface__calcium_dynamics__Cai * exp(0.074871767015605231 * var_chaste_interface__membrane__V)) * var_chaste_interface__membrane__V / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaK = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (1.8621604999999999e-9 * (-0.75 * NV_Ith_S(mParameters, 1) + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 187179.41753901311 * (-2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (-1.8621604999999999e-9 * (-0.75 * NV_Ith_S(mParameters, 1) + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 1.8621604999999999e-9 * (-0.75 * NV_Ith_S(mParameters, 1) + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (0.00069711623550831479 * (-0.75 * NV_Ith_S(mParameters, 1) + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(0.037435883507802616 * var_chaste_interface__membrane__V)) * var_chaste_interface__membrane__V / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaNa = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (6.5127374999999992e-9 * (-0.75 * NV_Ith_S(mParameters, 2) + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 187179.41753901311 * (-2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (-6.5127374999999992e-9 * (-0.75 * NV_Ith_S(mParameters, 2) + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 6.5127374999999992e-9 * (-0.75 * NV_Ith_S(mParameters, 2) + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (0.0024381008236689767 * (-0.75 * NV_Ith_S(mParameters, 2) + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(0.037435883507802616 * var_chaste_interface__membrane__V)) * var_chaste_interface__membrane__V / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaCa = var_L_type_Ca_channel__I_CaCa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaK = var_L_type_Ca_channel__I_CaK * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaNa = var_L_type_Ca_channel__I_CaNa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_CaCa + var_L_type_Ca_channel__i_CaK + var_L_type_Ca_channel__i_CaNa; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L_converted = HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L; // uA_per_cm2
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 4) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // microA_per_microF
        const double var_fast_sodium_current__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na; // uA_per_cm2
        const double var_rapid_delayed_rectifier_potassium_current__Rect = 1 / (1.0 + exp(0.4017857142857143 + 0.044642857142857144 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_rapid_delayed_rectifier_potassium_current__g_Kr = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 1)) * NV_Ith_S(mParameters, 6); // milliS_per_microF
        const double var_time_independent_potassium_current__E_K = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 1) / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_rapid_delayed_rectifier_potassium_current__Rect * var_rapid_delayed_rectifier_potassium_current__g_Kr * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr; // microA_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_rapid_delayed_rectifier_potassium_current__i_Kr; // uA_per_cm2
        const double var_time_independent_potassium_current__g_K1 = 0.43033148291193518 * sqrt(NV_Ith_S(mParameters, 1)) * NV_Ith_S(mParameters, 5); // milliS_per_cm2
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K)); // per_second
        const double var_time_independent_potassium_current_K1_gate__beta_K1 = 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V)); // per_second
        const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_microF
        const double var_time_independent_potassium_current__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_time_independent_potassium_current__i_K1; // uA_per_cm2

        N_Vector dqs = N_VNew_Serial(6);
        NV_Ith_S(dqs, 0) = var_L_type_Ca_channel__i_Ca_L_converted;
        NV_Ith_S(dqs, 1) = var_fast_sodium_current__i_Na_converted;
        NV_Ith_S(dqs, 2) = var_time_independent_potassium_current__i_K1_converted;
        NV_Ith_S(dqs, 3) = var_rapid_delayed_rectifier_potassium_current__i_Kr_converted;
        NV_Ith_S(dqs, 4) = var_membrane__I_st_converted;
        NV_Ith_S(dqs, 5) = var_chaste_interface__environment__time_converted;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellviswanathan_model_1999_epiFromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "viswanathan_model_1999_epi";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // NV_Ith_S(rY, 0):
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-88.984);

    // NV_Ith_S(rY, 1):
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.00035237);

    // NV_Ith_S(rY, 2):
    this->mVariableNames.push_back("fast_sodium_current_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00079287);

    // NV_Ith_S(rY, 3):
    this->mVariableNames.push_back("fast_sodium_current_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9938);

    // NV_Ith_S(rY, 4):
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99573);

    // NV_Ith_S(rY, 5):
    this->mVariableNames.push_back("L_type_Ca_channel_d_gate__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.18355e-06);

    // NV_Ith_S(rY, 6):
    this->mVariableNames.push_back("L_type_Ca_channel_f_gate__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9974388);

    // NV_Ith_S(rY, 7):
    this->mVariableNames.push_back("T_type_Ca_channel_b_gate__b");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000967785);

    // NV_Ith_S(rY, 8):
    this->mVariableNames.push_back("T_type_Ca_channel_g_gate__g");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.95331988);

    // NV_Ith_S(rY, 9):
    this->mVariableNames.push_back("rapid_delayed_rectifier_potassium_current_xr_gate__xr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00032151644);

    // NV_Ith_S(rY, 10):
    this->mVariableNames.push_back("slow_delayed_rectifier_potassium_current_xs1_gate__xs1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0272635);

    // NV_Ith_S(rY, 11):
    this->mVariableNames.push_back("slow_delayed_rectifier_potassium_current_xs2_gate__xs2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0631269);

    // NV_Ith_S(rY, 12):
    this->mVariableNames.push_back("transient_outward_current_zdv_gate__zdv");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.011528);

    // NV_Ith_S(rY, 13):
    this->mVariableNames.push_back("transient_outward_current_ydv_gate__ydv");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.985232);

    // NV_Ith_S(rY, 14):
    this->mVariableNames.push_back("calcium_dynamics__Ca_JSR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.817895);

    // NV_Ith_S(rY, 15):
    this->mVariableNames.push_back("calcium_dynamics__Ca_NSR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(2.797668);

    // NV_Ith_S(rY, 16):
    this->mVariableNames.push_back("calcium_dynamics__APtrack");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.814e-87);

    // NV_Ith_S(rY, 17):
    this->mVariableNames.push_back("calcium_dynamics__APtrack2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.1084e-86);

    // NV_Ith_S(rY, 18):
    this->mVariableNames.push_back("calcium_dynamics__APtrack3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.01925);

    // NV_Ith_S(rY, 19):
    this->mVariableNames.push_back("calcium_dynamics__Cainfluxtrack");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.784e-87);

    // NV_Ith_S(rY, 20):
    this->mVariableNames.push_back("calcium_dynamics__OVRLDtrack");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 21):
    this->mVariableNames.push_back("calcium_dynamics__OVRLDtrack2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 22):
    this->mVariableNames.push_back("calcium_dynamics__OVRLDtrack3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 23):
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(15.6748357);

    // NV_Ith_S(rY, 24):
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(137.6244);

    // mParameters[0]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[1]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[2]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[3]:
    this->mParameterNames.push_back("membrane_capacitance");
    this->mParameterUnits.push_back("microF");

    // mParameters[4]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[5]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_cm2");

    // mParameters[6]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_cm2");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellviswanathan_model_1999_epiFromCellMLCvode)

#endif // CHASTE_CVODE
