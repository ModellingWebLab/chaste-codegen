#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: zhang_SAN_model_2000_0D_capable
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: AnalyticCvode)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "zhang_SAN_model_2000_0D_capable.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"



    Cellzhang_SAN_model_2000_0D_capableFromCellMLCvode::Cellzhang_SAN_model_2000_0D_capableFromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                15,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellzhang_SAN_model_2000_0D_capableFromCellMLCvode>::Instance();
        Init();
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
        
        NV_Ith_S(this->mParameters, 0) = 0.0001; // (var_ionic_concentrations__Ca_i) [millimolar]
        NV_Ith_S(this->mParameters, 1) = 140.0; // (var_ionic_concentrations__K_i) [millimolar]
        NV_Ith_S(this->mParameters, 2) = 8.0; // (var_ionic_concentrations__Na_i) [millimolar]
        NV_Ith_S(this->mParameters, 3) = 2.0; // (var_ionic_concentrations__Ca_o) [millimolar]
        NV_Ith_S(this->mParameters, 4) = 5.4000000000000004; // (var_ionic_concentrations__K_o) [millimolar]
        NV_Ith_S(this->mParameters, 5) = 140.0; // (var_ionic_concentrations__Na_o) [millimolar]
        NV_Ith_S(this->mParameters, 6) = 1.0; // (var_L_type_Ca_channel__g_Ca_L_scaling) [dimensionless]
        NV_Ith_S(this->mParameters, 7) = 1.0; // (var_hyperpolarisation_activated_current__g_f_K_factor) [dimensionless]
        NV_Ith_S(this->mParameters, 8) = 1.0; // (var_hyperpolarisation_activated_current__g_f_Na_factor) [dimensionless]
        NV_Ith_S(this->mParameters, 9) = 1.0; // (var_rapid_delayed_rectifying_potassium_current__g_K_r_Scaling) [dimensionless]
    }

    Cellzhang_SAN_model_2000_0D_capableFromCellMLCvode::~Cellzhang_SAN_model_2000_0D_capableFromCellMLCvode()
    {
    }

    
    double Cellzhang_SAN_model_2000_0D_capableFromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -39.013558536
        double var_chaste_interface__sodium_current_m_gate__m = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.092361701692
        double var_chaste_interface__sodium_current_h_gate__h1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.015905380261
        double var_chaste_interface__sodium_current_h_gate__h2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.01445216109
        double var_chaste_interface__L_type_Ca_channel_d_gate__d_L = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.04804900895
        double var_chaste_interface__L_type_Ca_channel_f_gate__f_L = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.48779845203
        double var_chaste_interface__T_type_Ca_channel_d_gate__d_T = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.42074047435
        double var_chaste_interface__T_type_Ca_channel_f_gate__f_T = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.038968420558
        double var_chaste_interface__four_AP_sensitive_currents_q_gate__q = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.29760539675
        double var_chaste_interface__four_AP_sensitive_currents_r_gate__r = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.064402950262
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.13034201158
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.46960956028
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.87993375273
        double var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.082293827208
        double var_chaste_interface__hyperpolarisation_activated_current_y_gate__y = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.03889291759
        
        const double var_L_type_Ca_channel__E_Ca_L = 46.399999999999999; // millivolt
        const double var_L_type_Ca_channel__g_Ca_L_Centre = 0.0057938; // microS
        const double var_L_type_Ca_channel__g_Ca_L_Periphery = 0.065886479999999997; // microS
        const double var_T_type_Ca_channel__E_Ca_T = 45.0; // millivolt
        const double var_T_type_Ca_channel__g_Ca_T_Centre = 0.0042780600000000002; // microS
        const double var_T_type_Ca_channel__g_Ca_T_Periphery = 0.0138823; // microS
        const double var_calcium_background_current__g_b_Ca_Centre = 1.3236e-5; // microS
        const double var_calcium_background_current__g_b_Ca_Periphery = 4.2951999999999998e-5; // microS
        const double var_four_AP_sensitive_currents__g_sus_Centre = 6.6455040000000003e-5; // microS
        const double var_four_AP_sensitive_currents__g_sus_Periphery = 0.01138376; // microS
        const double var_four_AP_sensitive_currents__g_to_Centre = 0.0049049999999999996; // microS
        const double var_four_AP_sensitive_currents__g_to_Periphery = 0.036495; // microS
        const double var_hyperpolarisation_activated_current__g_f_K_Centre = 0.0005465; // microS
        const double var_hyperpolarisation_activated_current__g_f_K_Periphery = 0.006875; // microS
        const double var_hyperpolarisation_activated_current__g_f_Na_Centre = 0.0005465; // microS
        const double var_hyperpolarisation_activated_current__g_f_Na_Periphery = 0.006875; // microS
        const double var_membrane__CmCentre = 2.0000000000000002e-5; // microF
        const double var_membrane__CmPeriphery = 6.4999999999999994e-5; // microF
        const double var_membrane__F = 96845.0; // coulomb_per_mole
        const double var_membrane__FCellConstant = 1.0309347; // dimensionless
        const double var_membrane__R = 8314.0; // millijoule_per_mole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_membrane__dCell = 0; // dimensionless
        const double var_membrane__FCell = var_membrane__FCellConstant * var_membrane__dCell / (1.0 + 0.77449999999999997 * exp(6.9491525423728815 - 10.16949152542373 * var_membrane__dCell)); // dimensionless
        const double var_L_type_Ca_channel__g_Ca_L = (-var_L_type_Ca_channel__g_Ca_L_Centre + var_L_type_Ca_channel__g_Ca_L_Periphery) * var_membrane__FCell + var_L_type_Ca_channel__g_Ca_L_Centre; // microS
        const double var_L_type_Ca_channel__i_Ca_L = (-var_L_type_Ca_channel__E_Ca_L + var_chaste_interface__membrane__V) * (0.0060000000000000001 / (1.0 + exp(-2.3500000000000001 - 0.16666666666666666 * var_chaste_interface__membrane__V)) + var_chaste_interface__L_type_Ca_channel_d_gate__d_L * var_chaste_interface__L_type_Ca_channel_f_gate__f_L) * var_L_type_Ca_channel__g_Ca_L * NV_Ith_S(mParameters, 6); // nanoA
        const double var_T_type_Ca_channel__g_Ca_T = (-var_T_type_Ca_channel__g_Ca_T_Centre + var_T_type_Ca_channel__g_Ca_T_Periphery) * var_membrane__FCell + var_T_type_Ca_channel__g_Ca_T_Centre; // microS
        const double var_T_type_Ca_channel__i_Ca_T = (-var_T_type_Ca_channel__E_Ca_T + var_chaste_interface__membrane__V) * var_T_type_Ca_channel__g_Ca_T * var_chaste_interface__T_type_Ca_channel_d_gate__d_T * var_chaste_interface__T_type_Ca_channel_f_gate__f_T; // nanoA
        const double var_calcium_background_current__g_b_Ca = (-var_calcium_background_current__g_b_Ca_Centre + var_calcium_background_current__g_b_Ca_Periphery) * var_membrane__FCell + var_calcium_background_current__g_b_Ca_Centre; // microS
        const double var_four_AP_sensitive_currents__g_sus = (-var_four_AP_sensitive_currents__g_sus_Centre + var_four_AP_sensitive_currents__g_sus_Periphery) * var_membrane__FCell + var_four_AP_sensitive_currents__g_sus_Centre; // microS
        const double var_four_AP_sensitive_currents__g_to = (-var_four_AP_sensitive_currents__g_to_Centre + var_four_AP_sensitive_currents__g_to_Periphery) * var_membrane__FCell + var_four_AP_sensitive_currents__g_to_Centre; // microS
        const double var_hyperpolarisation_activated_current__g_f_K = (-var_hyperpolarisation_activated_current__g_f_K_Centre + var_hyperpolarisation_activated_current__g_f_K_Periphery) * var_membrane__FCell + var_hyperpolarisation_activated_current__g_f_K_Centre; // microS
        const double var_hyperpolarisation_activated_current__g_f_Na = (-var_hyperpolarisation_activated_current__g_f_Na_Centre + var_hyperpolarisation_activated_current__g_f_Na_Periphery) * var_membrane__FCell + var_hyperpolarisation_activated_current__g_f_Na_Centre; // microS
        const double var_membrane__Cm = (-var_membrane__CmCentre + var_membrane__CmPeriphery) * var_membrane__FCell + var_membrane__CmCentre; // microF
        const double var_L_type_Ca_channel__i_Ca_L_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L / var_membrane__Cm; // uA_per_cm2
        const double var_persistent_calcium_current__i_Ca_p_max_Centre = 0; // nanoA
        const double var_persistent_calcium_current__i_Ca_p_max_Periphery = 0; // nanoA
        const double var_persistent_calcium_current__i_Ca_p_max = (-var_persistent_calcium_current__i_Ca_p_max_Centre + var_persistent_calcium_current__i_Ca_p_max_Periphery) * var_membrane__FCell + var_persistent_calcium_current__i_Ca_p_max_Centre; // nanoA
        const double var_persistent_calcium_current__i_Ca_p = NV_Ith_S(mParameters, 0) * var_persistent_calcium_current__i_Ca_p_max / (0.00040000000000000002 + NV_Ith_S(mParameters, 0)); // nanoA
        const double var_potassium_background_current__g_b_K_Centre = 2.5236359999999998e-5; // microS
        const double var_potassium_background_current__g_b_K_Periphery = 8.1891999999999995e-5; // microS
        const double var_potassium_background_current__g_b_K = (-var_potassium_background_current__g_b_K_Centre + var_potassium_background_current__g_b_K_Periphery) * var_membrane__FCell + var_potassium_background_current__g_b_K_Centre; // microS
        const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre = 0.00079704000000000005; // microS
        const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery = 0.016; // microS
        const double var_rapid_delayed_rectifying_potassium_current__g_K_r = (-var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre + var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery) * var_membrane__FCell + var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre; // microS
        const double var_rapid_delayed_rectifying_potassium_current__P_a = 0.40000000000000002 * var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as + 0.59999999999999998 * var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af; // dimensionless
        const double var_reversal_and_equilibrium_potentials__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 3) / NV_Ith_S(mParameters, 0)) / var_membrane__F; // millivolt
        const double var_calcium_background_current__i_b_Ca = (-var_reversal_and_equilibrium_potentials__E_Ca + var_chaste_interface__membrane__V) * var_calcium_background_current__g_b_Ca; // nanoA
        const double var_reversal_and_equilibrium_potentials__E_K = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 4) / NV_Ith_S(mParameters, 1)) / var_membrane__F; // millivolt
        const double var_four_AP_sensitive_currents__i_sus = (-var_reversal_and_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * var_four_AP_sensitive_currents__g_sus * var_chaste_interface__four_AP_sensitive_currents_r_gate__r; // nanoA
        const double var_four_AP_sensitive_currents__i_to = (-var_reversal_and_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * var_four_AP_sensitive_currents__g_to * var_chaste_interface__four_AP_sensitive_currents_q_gate__q * var_chaste_interface__four_AP_sensitive_currents_r_gate__r; // nanoA
        const double var_hyperpolarisation_activated_current__i_f_K = (-var_reversal_and_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * var_hyperpolarisation_activated_current__g_f_K * NV_Ith_S(mParameters, 7) * var_chaste_interface__hyperpolarisation_activated_current_y_gate__y; // nanoA
        const double var_potassium_background_current__i_b_K = (-var_reversal_and_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * var_potassium_background_current__g_b_K; // nanoA
        const double var_rapid_delayed_rectifying_potassium_current__i_K_r = (-var_reversal_and_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * var_rapid_delayed_rectifying_potassium_current__P_a * var_rapid_delayed_rectifying_potassium_current__g_K_r * NV_Ith_S(mParameters, 9) * var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i; // nanoA
        const double var_rapid_delayed_rectifying_potassium_current__i_K_r_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_rapid_delayed_rectifying_potassium_current__i_K_r / var_membrane__Cm; // uA_per_cm2
        const double var_reversal_and_equilibrium_potentials__E_K_s = var_membrane__R * var_membrane__T * log((NV_Ith_S(mParameters, 4) + 0.029999999999999999 * NV_Ith_S(mParameters, 5)) / (NV_Ith_S(mParameters, 1) + 0.029999999999999999 * NV_Ith_S(mParameters, 2))) / var_membrane__F; // millivolt
        const double var_reversal_and_equilibrium_potentials__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 5) / NV_Ith_S(mParameters, 2)) / var_membrane__F; // millivolt
        const double var_hyperpolarisation_activated_current__i_f_Na = (-var_reversal_and_equilibrium_potentials__E_Na + var_chaste_interface__membrane__V) * var_hyperpolarisation_activated_current__g_f_Na * NV_Ith_S(mParameters, 8) * var_chaste_interface__hyperpolarisation_activated_current_y_gate__y; // nanoA
        const double var_slow_delayed_rectifying_potassium_current__g_K_s_Centre = 0.00034450000000000003; // microS
        const double var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery = 0.0104; // microS
        const double var_slow_delayed_rectifying_potassium_current__g_K_s = (-var_slow_delayed_rectifying_potassium_current__g_K_s_Centre + var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery) * var_membrane__FCell + var_slow_delayed_rectifying_potassium_current__g_K_s_Centre; // microS
        const double var_slow_delayed_rectifying_potassium_current__i_K_s = pow(var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs, 2) * (-var_reversal_and_equilibrium_potentials__E_K_s + var_chaste_interface__membrane__V) * var_slow_delayed_rectifying_potassium_current__g_K_s; // nanoA
        const double var_sodium_background_current__g_b_Na_Centre = 5.8181799999999999e-5; // microS
        const double var_sodium_background_current__g_b_Na_Periphery = 0.00018880000000000001; // microS
        const double var_sodium_background_current__g_b_Na = (-var_sodium_background_current__g_b_Na_Centre + var_sodium_background_current__g_b_Na_Periphery) * var_membrane__FCell + var_sodium_background_current__g_b_Na_Centre; // microS
        const double var_sodium_background_current__i_b_Na = (-var_reversal_and_equilibrium_potentials__E_Na + var_chaste_interface__membrane__V) * var_sodium_background_current__g_b_Na; // nanoA
        const double var_sodium_calcium_exchanger__d_NaCa = 0.0001; // dimensionless
        const double var_sodium_calcium_exchanger__gamma_NaCa = 0.5; // dimensionless
        const double var_sodium_calcium_exchanger__k_NaCa_Centre = 2.7228999999999998e-6; // nanoA
        const double var_sodium_calcium_exchanger__k_NaCa_Periphery = 8.8358400000000004e-6; // nanoA
        const double var_sodium_calcium_exchanger__k_NaCa = (-var_sodium_calcium_exchanger__k_NaCa_Centre + var_sodium_calcium_exchanger__k_NaCa_Periphery) * var_membrane__FCell + var_sodium_calcium_exchanger__k_NaCa_Centre; // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa = (pow(NV_Ith_S(mParameters, 2), 3) * NV_Ith_S(mParameters, 3) * exp(0.037429999999999998 * var_chaste_interface__membrane__V * var_sodium_calcium_exchanger__gamma_NaCa) - pow(NV_Ith_S(mParameters, 5), 3) * NV_Ith_S(mParameters, 0) * exp(0.037429999999999998 * (-1.0 + var_sodium_calcium_exchanger__gamma_NaCa) * var_chaste_interface__membrane__V)) * var_sodium_calcium_exchanger__k_NaCa / (1.0 + (pow(NV_Ith_S(mParameters, 2), 3) * NV_Ith_S(mParameters, 3) + pow(NV_Ith_S(mParameters, 5), 3) * NV_Ith_S(mParameters, 0)) * var_sodium_calcium_exchanger__d_NaCa); // nanoA
        const double var_sodium_current__g_Na_Centre = 0; // microlitre_per_second
        const double var_sodium_current__g_Na_Periphery = 1.204e-6; // microlitre_per_second
        const double var_sodium_current__g_Na = (-var_sodium_current__g_Na_Centre + var_sodium_current__g_Na_Periphery) * var_membrane__FCell + var_sodium_current__g_Na_Centre; // microlitre_per_second
        const double var_sodium_current_h_gate__F_Na = 0.086929999999999993 + 0.095180000000000001 * exp(-2.1692640000000001 - 0.063060000000000005 * var_chaste_interface__membrane__V) / (1.0 + 1.6619999999999999 * exp(-14.33887 - 0.22509999999999999 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_sodium_current_h_gate__h = (1.0 - var_sodium_current_h_gate__F_Na) * var_chaste_interface__sodium_current_h_gate__h1 + var_sodium_current_h_gate__F_Na * var_chaste_interface__sodium_current_h_gate__h2; // dimensionless
        const double var_sodium_current__i_Na = pow(var_membrane__F, 2) * pow(var_chaste_interface__sodium_current_m_gate__m, 3) * (-1.0 + exp((-var_reversal_and_equilibrium_potentials__E_Na + var_chaste_interface__membrane__V) * var_membrane__F / (var_membrane__R * var_membrane__T))) * NV_Ith_S(mParameters, 5) * var_chaste_interface__membrane__V * var_sodium_current__g_Na * var_sodium_current_h_gate__h / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // nanoA
        const double var_sodium_current__i_Na_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_sodium_current__i_Na / var_membrane__Cm; // uA_per_cm2
        const double var_sodium_potassium_pump__K_m_K = 0.621; // millimolar
        const double var_sodium_potassium_pump__K_m_Na = 5.6399999999999997; // millimolar
        const double var_sodium_potassium_pump__i_p_max_Centre = 0.047825449999999999; // nanoA
        const double var_sodium_potassium_pump__i_p_max_Periphery = 0.15519359999999999; // nanoA
        const double var_sodium_potassium_pump__i_p_max = (-var_sodium_potassium_pump__i_p_max_Centre + var_sodium_potassium_pump__i_p_max_Periphery) * var_membrane__FCell + var_sodium_potassium_pump__i_p_max_Centre; // nanoA
        const double var_sodium_potassium_pump__i_p = 1.6000000000000001 * pow(NV_Ith_S(mParameters, 4), 2) * pow(NV_Ith_S(mParameters, 2), 3) * var_sodium_potassium_pump__i_p_max / ((1.5 + exp(-1.5 - 0.025000000000000001 * var_chaste_interface__membrane__V)) * pow((NV_Ith_S(mParameters, 4) + var_sodium_potassium_pump__K_m_K), 2) * pow((NV_Ith_S(mParameters, 2) + var_sodium_potassium_pump__K_m_Na), 3)); // nanoA
        const double var_chaste_interface__i_ionic = ((var_L_type_Ca_channel__i_Ca_L_converted + var_rapid_delayed_rectifying_potassium_current__i_K_r_converted + var_sodium_current__i_Na_converted) * var_membrane__Cm + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_T_type_Ca_channel__i_Ca_T + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_calcium_background_current__i_b_Ca + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_four_AP_sensitive_currents__i_sus + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_four_AP_sensitive_currents__i_to + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_hyperpolarisation_activated_current__i_f_K + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_hyperpolarisation_activated_current__i_f_Na + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_persistent_calcium_current__i_Ca_p + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_potassium_background_current__i_b_K + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_slow_delayed_rectifying_potassium_current__i_K_s + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_sodium_background_current__i_b_Na + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_sodium_calcium_exchanger__i_NaCa + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_sodium_potassium_pump__i_p) / var_membrane__Cm; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellzhang_SAN_model_2000_0D_capableFromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__environment__time_converted, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -39.013558536
        double var_chaste_interface__sodium_current_m_gate__m = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.092361701692
        double var_chaste_interface__sodium_current_h_gate__h1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.015905380261
        double var_chaste_interface__sodium_current_h_gate__h2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.01445216109
        double var_chaste_interface__L_type_Ca_channel_d_gate__d_L = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.04804900895
        double var_chaste_interface__L_type_Ca_channel_f_gate__f_L = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.48779845203
        double var_chaste_interface__T_type_Ca_channel_d_gate__d_T = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.42074047435
        double var_chaste_interface__T_type_Ca_channel_f_gate__f_T = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.038968420558
        double var_chaste_interface__four_AP_sensitive_currents_q_gate__q = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.29760539675
        double var_chaste_interface__four_AP_sensitive_currents_r_gate__r = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.064402950262
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.13034201158
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.46960956028
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.87993375273
        double var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.082293827208
        double var_chaste_interface__hyperpolarisation_activated_current_y_gate__y = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.03889291759

        // Mathematics
        double d_dt_chaste_interface_var_membrane__V;
        const double var_membrane__FCellConstant = 1.0309347; // dimensionless
        const double var_L_type_Ca_channel_d_gate__alpha_d_L = ((fabs(var_chaste_interface__membrane__V) < 4.8076923076923074e-7) ? (-4.0817307692307694e-5 / (-1.0 + exp(-9.9999999999999995e-8)) - 1040000.0 * (-4.8076923076923074e-7 + var_chaste_interface__membrane__V) * (4.0817307692307694e-5 / (-1.0 + exp(9.9999999999999995e-8)) + 4.0817307692307694e-5 / (-1.0 + exp(-9.9999999999999995e-8)))) : (-84.900000000000006 * var_chaste_interface__membrane__V / (-1.0 + exp(-0.20799999999999999 * var_chaste_interface__membrane__V)))) + ((fabs(35.0 + var_chaste_interface__membrane__V) < 2.5000000000718892e-7) ? (-7.097500000992074e-6 / (-1.0 + exp(-1.000000000139778e-7)) - 1999999.9999424887 * (34.999999750000001 + var_chaste_interface__membrane__V) * (7.0974999994161125e-6 / (-1.0 + exp(9.9999999991773334e-8)) + 7.097500000992074e-6 / (-1.0 + exp(-1.000000000139778e-7)))) : (-28.390000000000001 * (35.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(-14.0 - 0.40000000000000002 * var_chaste_interface__membrane__V)))); // per_second
        const double var_L_type_Ca_channel_d_gate__beta_d_L = ((fabs(-5.0 + var_chaste_interface__membrane__V) < 2.5000000000025002e-7) ? (-2.8575000000028576e-6 / (-1.0 + exp(-1.0000000000010001e-7)) + 1999999.9999979998 * (-4.9999997499999997 + var_chaste_interface__membrane__V) * (2.8575000000028576e-6 / (-1.0 + exp(1.0000000000010001e-7)) + 2.8575000000028576e-6 / (-1.0 + exp(-1.0000000000010001e-7)))) : (11.43 * (-5.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(-2.0 + 0.40000000000000002 * var_chaste_interface__membrane__V)))); // per_second
        const double var_L_type_Ca_channel_d_gate__tau_d_L = 2.0 / (var_L_type_Ca_channel_d_gate__alpha_d_L + var_L_type_Ca_channel_d_gate__beta_d_L); // second
        const double var_L_type_Ca_channel_f_gate__alpha_f_L = ((fabs(28.0 + var_chaste_interface__membrane__V) < 4.0000000001150227e-7) ? (-1.5000000000431335e-6 / (-1.0 + exp(-1.0000000000287557e-7)) + 1249999.9999640554 * (28.000000400000001 + var_chaste_interface__membrane__V) * (1.5000000000431335e-6 / (-1.0 + exp(1.0000000000287557e-7)) + 1.5000000000431335e-6 / (-1.0 + exp(-1.0000000000287557e-7)))) : (3.75 * (28.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(7.0 + 0.25 * var_chaste_interface__membrane__V)))); // per_second
        const double var_L_type_Ca_channel_f_gate__beta_f_L = 30.0 / (1.0 + exp(-7.0 - 0.25 * var_chaste_interface__membrane__V)); // per_second
        const double var_L_type_Ca_channel_f_gate__f_L_infinity = 1 / (1.0 + exp(9.0 + 0.20000000000000001 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_T_type_Ca_channel_d_gate__alpha_d_T = 1068.0 * exp(0.87666666666666671 + 0.033333333333333333 * var_chaste_interface__membrane__V); // per_second
        const double var_T_type_Ca_channel_d_gate__beta_d_T = 1068.0 * exp(-0.87666666666666671 - 0.033333333333333333 * var_chaste_interface__membrane__V); // per_second
        const double var_T_type_Ca_channel_d_gate__d_T_infinity = 1 / (1.0 + exp(-5.4411764705882355 - 0.14705882352941177 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_T_type_Ca_channel_d_gate__tau_d_T = 1 / (var_T_type_Ca_channel_d_gate__alpha_d_T + var_T_type_Ca_channel_d_gate__beta_d_T); // second
        const double var_T_type_Ca_channel_d_gate__d_T_orig_deriv = (-var_chaste_interface__T_type_Ca_channel_d_gate__d_T + var_T_type_Ca_channel_d_gate__d_T_infinity) / var_T_type_Ca_channel_d_gate__tau_d_T; // 1 / second
        const double d_dt_chaste_interface_var_T_type_Ca_channel_d_gate__d_T = 0.001 * var_T_type_Ca_channel_d_gate__d_T_orig_deriv; // 1 / millisecond
        const double var_T_type_Ca_channel_f_gate__beta_f_T = 15.0 * exp(4.6163849154746419 + 0.065019505851755519 * var_chaste_interface__membrane__V); // per_second
        const double var_T_type_Ca_channel_f_gate__f_T_infinity = 1 / (1.0 + exp(7.8888888888888893 + 0.1111111111111111 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_four_AP_sensitive_currents_q_gate__q_infinity = 1 / (1.0 + exp(4.5320610687022898 + 0.076335877862595422 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_four_AP_sensitive_currents_r_gate__r_infinity = 1 / (1.0 + exp(0.5548223350253807 - 0.050761421319796954 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_four_AP_sensitive_currents_r_gate__tau_r = 0.0029775000000000001 + 0.019595000000000001 / (1.0369999999999999 * exp(2.7585732000000003 + 0.090120000000000006 * var_chaste_interface__membrane__V) + 0.36899999999999999 * exp(-2.8369599999999999 - 0.11899999999999999 * var_chaste_interface__membrane__V)); // second
        const double var_four_AP_sensitive_currents_r_gate__r_orig_deriv = (-var_chaste_interface__four_AP_sensitive_currents_r_gate__r + var_four_AP_sensitive_currents_r_gate__r_infinity) / var_four_AP_sensitive_currents_r_gate__tau_r; // 1 / second
        const double d_dt_chaste_interface_var_four_AP_sensitive_currents_r_gate__r = 0.001 * var_four_AP_sensitive_currents_r_gate__r_orig_deriv; // 1 / millisecond
        const double var_hyperpolarisation_activated_current_y_gate__alpha_y = exp(-2.9631993991738641 - 0.037551633496057078 * var_chaste_interface__membrane__V); // per_second
        const double var_hyperpolarisation_activated_current_y_gate__beta_y = exp(3.5355294117647058 + 0.047058823529411764 * var_chaste_interface__membrane__V); // per_second
        const double var_hyperpolarisation_activated_current_y_gate__y_orig_deriv = (1.0 - var_chaste_interface__hyperpolarisation_activated_current_y_gate__y) * var_hyperpolarisation_activated_current_y_gate__alpha_y - var_hyperpolarisation_activated_current_y_gate__beta_y * var_chaste_interface__hyperpolarisation_activated_current_y_gate__y; // 1 / second
        const double d_dt_chaste_interface_var_hyperpolarisation_activated_current_y_gate__y = 0.001 * var_hyperpolarisation_activated_current_y_gate__y_orig_deriv; // 1 / millisecond
        const double var_membrane__dCell = 0; // dimensionless
        const double var_membrane__FCell = var_membrane__FCellConstant * var_membrane__dCell / (1.0 + 0.77449999999999997 * exp(6.9491525423728815 - 10.16949152542373 * var_membrane__dCell)); // dimensionless
        const double var_L_type_Ca_channel_d_gate__d_L_infinity = 1 / (1.0 + exp(-3.7166666666666668 - 0.13333333333333333 * var_membrane__FCell - 0.16666666666666666 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_L_type_Ca_channel_d_gate__d_L_orig_deriv = (-var_chaste_interface__L_type_Ca_channel_d_gate__d_L + var_L_type_Ca_channel_d_gate__d_L_infinity) / var_L_type_Ca_channel_d_gate__tau_d_L; // 1 / second
        const double d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d_L = 0.001 * var_L_type_Ca_channel_d_gate__d_L_orig_deriv; // 1 / millisecond
        const double var_L_type_Ca_channel_f_gate__tau_f_L = (1.2 - 0.20000000000000001 * var_membrane__FCell) / (var_L_type_Ca_channel_f_gate__alpha_f_L + var_L_type_Ca_channel_f_gate__beta_f_L); // second
        const double var_L_type_Ca_channel_f_gate__f_L_orig_deriv = (-var_chaste_interface__L_type_Ca_channel_f_gate__f_L + var_L_type_Ca_channel_f_gate__f_L_infinity) / var_L_type_Ca_channel_f_gate__tau_f_L; // 1 / second
        const double d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f_L = 0.001 * var_L_type_Ca_channel_f_gate__f_L_orig_deriv; // 1 / millisecond
        const double var_T_type_Ca_channel_f_gate__alpha_f_T = 15.300000000000001 * exp(-0.85234093637454988 - 0.0084033613445378148 * var_membrane__FCell - 0.012004801920768308 * var_chaste_interface__membrane__V); // per_second
        const double var_T_type_Ca_channel_f_gate__tau_f_T = 1 / (var_T_type_Ca_channel_f_gate__alpha_f_T + var_T_type_Ca_channel_f_gate__beta_f_T); // second
        const double var_T_type_Ca_channel_f_gate__f_T_orig_deriv = (-var_chaste_interface__T_type_Ca_channel_f_gate__f_T + var_T_type_Ca_channel_f_gate__f_T_infinity) / var_T_type_Ca_channel_f_gate__tau_f_T; // 1 / second
        const double d_dt_chaste_interface_var_T_type_Ca_channel_f_gate__f_T = 0.001 * var_T_type_Ca_channel_f_gate__f_T_orig_deriv; // 1 / millisecond
        const double var_four_AP_sensitive_currents_q_gate__tau_q = 0.010103333333333334 + 0.065166666666666664 / (0.56859999999999999 * exp(-3.1827900000000002 - 0.081610000000000002 * var_chaste_interface__membrane__V - 0.81610000000000005 * var_membrane__FCell) + 0.71740000000000004 * exp((0.27189999999999998 - 0.1719 * var_membrane__FCell) * (40.93 + 10.0 * var_membrane__FCell + var_chaste_interface__membrane__V))); // second
        const double var_four_AP_sensitive_currents_q_gate__q_orig_deriv = (-var_chaste_interface__four_AP_sensitive_currents_q_gate__q + var_four_AP_sensitive_currents_q_gate__q_infinity) / var_four_AP_sensitive_currents_q_gate__tau_q; // 1 / second
        const double d_dt_chaste_interface_var_four_AP_sensitive_currents_q_gate__q = 0.001 * var_four_AP_sensitive_currents_q_gate__q_orig_deriv; // 1 / millisecond
        const double var_rapid_delayed_rectifying_potassium_current_P_af_gate__P_af_infinity = 1 / (1.0 + exp(-1.3396226415094339 - 0.094339622641509441 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_af_gate__tau_P_af = 1 / (0.95999999999999996 * exp(0.40000000000000002 - 0.044444444444444446 * var_chaste_interface__membrane__V) + 37.200000000000003 * exp(-0.56603773584905659 + 0.062893081761006289 * var_chaste_interface__membrane__V)); // second
        const double var_rapid_delayed_rectifying_potassium_current_P_af_gate__P_af_orig_deriv = (-var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af + var_rapid_delayed_rectifying_potassium_current_P_af_gate__P_af_infinity) / var_rapid_delayed_rectifying_potassium_current_P_af_gate__tau_P_af; // 1 / second
        const double d_dt_chaste_interface_var_rapid_delayed_rectifying_potassium_current_P_af_gate__P_af = 0.001 * var_rapid_delayed_rectifying_potassium_current_P_af_gate__P_af_orig_deriv; // 1 / millisecond
        const double var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_as_infinity = var_rapid_delayed_rectifying_potassium_current_P_af_gate__P_af_infinity; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_as_gate__tau_P_as = 1 / (4.2000000000000002 * exp(-0.52941176470588236 + 0.058823529411764705 * var_chaste_interface__membrane__V) + 0.14999999999999999 * exp(0.41666666666666663 - 0.046296296296296294 * var_chaste_interface__membrane__V)); // second
        const double var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_as_orig_deriv = (-var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as + var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_as_infinity) / var_rapid_delayed_rectifying_potassium_current_P_as_gate__tau_P_as; // 1 / second
        const double d_dt_chaste_interface_var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_as = 0.001 * var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_as_orig_deriv; // 1 / millisecond
        const double var_rapid_delayed_rectifying_potassium_current_P_i_gate__P_i_infinity = 1 / (1.0 + exp(1.8415841584158419 + 0.099009900990099015 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_i_gate__tau_P_i = 0.002; // second
        const double var_rapid_delayed_rectifying_potassium_current_P_i_gate__P_i_orig_deriv = (-var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i + var_rapid_delayed_rectifying_potassium_current_P_i_gate__P_i_infinity) / var_rapid_delayed_rectifying_potassium_current_P_i_gate__tau_P_i; // 1 / second
        const double d_dt_chaste_interface_var_rapid_delayed_rectifying_potassium_current_P_i_gate__P_i = 0.001 * var_rapid_delayed_rectifying_potassium_current_P_i_gate__P_i_orig_deriv; // 1 / millisecond
        const double var_slow_delayed_rectifying_potassium_current_xs_gate__alpha_xs = 14.0 / (1.0 + exp(4.4444444444444446 - 0.1111111111111111 * var_chaste_interface__membrane__V)); // per_second
        const double var_slow_delayed_rectifying_potassium_current_xs_gate__beta_xs = exp(-0.022222222222222223 * var_chaste_interface__membrane__V); // per_second
        const double var_slow_delayed_rectifying_potassium_current_xs_gate__xs_orig_deriv = (1.0 - var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs) * var_slow_delayed_rectifying_potassium_current_xs_gate__alpha_xs - var_slow_delayed_rectifying_potassium_current_xs_gate__beta_xs * var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs; // 1 / second
        const double d_dt_chaste_interface_var_slow_delayed_rectifying_potassium_current_xs_gate__xs = 0.001 * var_slow_delayed_rectifying_potassium_current_xs_gate__xs_orig_deriv; // 1 / millisecond
        const double var_sodium_current_h_gate__h1_infinity = 1 / (1.0 + exp(10.328124999999998 + 0.15625 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_sodium_current_h_gate__h2_infinity = var_sodium_current_h_gate__h1_infinity; // dimensionless
        const double var_sodium_current_h_gate__tau_h1 = 0.00059770000000000005 + 3.7170000000000002e-6 * exp(-4.8164649999999991 - 0.28149999999999997 * var_chaste_interface__membrane__V) / (1.0 + 0.0037320000000000001 * exp(-12.936576000000001 - 0.34260000000000002 * var_chaste_interface__membrane__V)); // second
        const double var_sodium_current_h_gate__h1_orig_deriv = (-var_chaste_interface__sodium_current_h_gate__h1 + var_sodium_current_h_gate__h1_infinity) / var_sodium_current_h_gate__tau_h1; // 1 / second
        const double d_dt_chaste_interface_var_sodium_current_h_gate__h1 = 0.001 * var_sodium_current_h_gate__h1_orig_deriv; // 1 / millisecond
        const double var_sodium_current_h_gate__tau_h2 = 0.0035560000000000001 + 3.1860000000000002e-8 * exp(-11.69172 - 0.62190000000000001 * var_chaste_interface__membrane__V) / (1.0 + 7.1890000000000005e-5 * exp(-22.768981 - 0.66830000000000001 * var_chaste_interface__membrane__V)); // second
        const double var_sodium_current_h_gate__h2_orig_deriv = (-var_chaste_interface__sodium_current_h_gate__h2 + var_sodium_current_h_gate__h2_infinity) / var_sodium_current_h_gate__tau_h2; // 1 / second
        const double d_dt_chaste_interface_var_sodium_current_h_gate__h2 = 0.001 * var_sodium_current_h_gate__h2_orig_deriv; // 1 / millisecond
        const double var_sodium_current_m_gate__m_infinity = pow((1 / (1.0 + exp(-5.5531135531135529 - 0.18315018315018314 * var_chaste_interface__membrane__V))), 0.33333333333333331); // dimensionless
        const double var_sodium_current_m_gate__tau_m = 4.5689999999999998e-5 + 0.00062469999999999995 / (0.62739999999999996 * exp(5.3505781299999997 + 0.082299999999999998 * var_chaste_interface__membrane__V) + 0.83221659999999997 * exp(-19.034003092000003 - 0.33566000000000001 * var_chaste_interface__membrane__V)); // second
        const double var_sodium_current_m_gate__m_orig_deriv = (-var_chaste_interface__sodium_current_m_gate__m + var_sodium_current_m_gate__m_infinity) / var_sodium_current_m_gate__tau_m; // 1 / second
        const double d_dt_chaste_interface_var_sodium_current_m_gate__m = 0.001 * var_sodium_current_m_gate__m_orig_deriv; // 1 / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_membrane__V = 0.0;
        }
        else
        {
            const double var_L_type_Ca_channel__E_Ca_L = 46.399999999999999; // millivolt
            const double var_L_type_Ca_channel__g_Ca_L_Centre = 0.0057938; // microS
            const double var_L_type_Ca_channel__g_Ca_L_Periphery = 0.065886479999999997; // microS
            const double var_T_type_Ca_channel__E_Ca_T = 45.0; // millivolt
            const double var_T_type_Ca_channel__g_Ca_T_Centre = 0.0042780600000000002; // microS
            const double var_T_type_Ca_channel__g_Ca_T_Periphery = 0.0138823; // microS
            const double var_calcium_background_current__g_b_Ca_Centre = 1.3236e-5; // microS
            const double var_calcium_background_current__g_b_Ca_Periphery = 4.2951999999999998e-5; // microS
            const double var_four_AP_sensitive_currents__g_sus_Centre = 6.6455040000000003e-5; // microS
            const double var_four_AP_sensitive_currents__g_sus_Periphery = 0.01138376; // microS
            const double var_four_AP_sensitive_currents__g_to_Centre = 0.0049049999999999996; // microS
            const double var_four_AP_sensitive_currents__g_to_Periphery = 0.036495; // microS
            const double var_hyperpolarisation_activated_current__g_f_K_Centre = 0.0005465; // microS
            const double var_hyperpolarisation_activated_current__g_f_K_Periphery = 0.006875; // microS
            const double var_hyperpolarisation_activated_current__g_f_Na_Centre = 0.0005465; // microS
            const double var_hyperpolarisation_activated_current__g_f_Na_Periphery = 0.006875; // microS
            const double var_membrane__CmCentre = 2.0000000000000002e-5; // microF
            const double var_membrane__CmPeriphery = 6.4999999999999994e-5; // microF
            const double var_membrane__F = 96845.0; // coulomb_per_mole
            const double var_membrane__R = 8314.0; // millijoule_per_mole_kelvin
            const double var_membrane__T = 310.0; // kelvin
            const double var_L_type_Ca_channel__g_Ca_L = (-var_L_type_Ca_channel__g_Ca_L_Centre + var_L_type_Ca_channel__g_Ca_L_Periphery) * var_membrane__FCell + var_L_type_Ca_channel__g_Ca_L_Centre; // microS
            const double var_L_type_Ca_channel__i_Ca_L = (-var_L_type_Ca_channel__E_Ca_L + var_chaste_interface__membrane__V) * (0.0060000000000000001 / (1.0 + exp(-2.3500000000000001 - 0.16666666666666666 * var_chaste_interface__membrane__V)) + var_chaste_interface__L_type_Ca_channel_d_gate__d_L * var_chaste_interface__L_type_Ca_channel_f_gate__f_L) * var_L_type_Ca_channel__g_Ca_L * NV_Ith_S(mParameters, 6); // nanoA
            const double var_T_type_Ca_channel__g_Ca_T = (-var_T_type_Ca_channel__g_Ca_T_Centre + var_T_type_Ca_channel__g_Ca_T_Periphery) * var_membrane__FCell + var_T_type_Ca_channel__g_Ca_T_Centre; // microS
            const double var_T_type_Ca_channel__i_Ca_T = (-var_T_type_Ca_channel__E_Ca_T + var_chaste_interface__membrane__V) * var_T_type_Ca_channel__g_Ca_T * var_chaste_interface__T_type_Ca_channel_d_gate__d_T * var_chaste_interface__T_type_Ca_channel_f_gate__f_T; // nanoA
            const double var_calcium_background_current__g_b_Ca = (-var_calcium_background_current__g_b_Ca_Centre + var_calcium_background_current__g_b_Ca_Periphery) * var_membrane__FCell + var_calcium_background_current__g_b_Ca_Centre; // microS
            const double var_four_AP_sensitive_currents__g_sus = (-var_four_AP_sensitive_currents__g_sus_Centre + var_four_AP_sensitive_currents__g_sus_Periphery) * var_membrane__FCell + var_four_AP_sensitive_currents__g_sus_Centre; // microS
            const double var_four_AP_sensitive_currents__g_to = (-var_four_AP_sensitive_currents__g_to_Centre + var_four_AP_sensitive_currents__g_to_Periphery) * var_membrane__FCell + var_four_AP_sensitive_currents__g_to_Centre; // microS
            const double var_hyperpolarisation_activated_current__g_f_K = (-var_hyperpolarisation_activated_current__g_f_K_Centre + var_hyperpolarisation_activated_current__g_f_K_Periphery) * var_membrane__FCell + var_hyperpolarisation_activated_current__g_f_K_Centre; // microS
            const double var_hyperpolarisation_activated_current__g_f_Na = (-var_hyperpolarisation_activated_current__g_f_Na_Centre + var_hyperpolarisation_activated_current__g_f_Na_Periphery) * var_membrane__FCell + var_hyperpolarisation_activated_current__g_f_Na_Centre; // microS
            const double var_membrane__Cm = (-var_membrane__CmCentre + var_membrane__CmPeriphery) * var_membrane__FCell + var_membrane__CmCentre; // microF
            const double var_persistent_calcium_current__i_Ca_p_max_Centre = 0; // nanoA
            const double var_persistent_calcium_current__i_Ca_p_max_Periphery = 0; // nanoA
            const double var_persistent_calcium_current__i_Ca_p_max = (-var_persistent_calcium_current__i_Ca_p_max_Centre + var_persistent_calcium_current__i_Ca_p_max_Periphery) * var_membrane__FCell + var_persistent_calcium_current__i_Ca_p_max_Centre; // nanoA
            const double var_persistent_calcium_current__i_Ca_p = NV_Ith_S(mParameters, 0) * var_persistent_calcium_current__i_Ca_p_max / (0.00040000000000000002 + NV_Ith_S(mParameters, 0)); // nanoA
            const double var_potassium_background_current__g_b_K_Centre = 2.5236359999999998e-5; // microS
            const double var_potassium_background_current__g_b_K_Periphery = 8.1891999999999995e-5; // microS
            const double var_potassium_background_current__g_b_K = (-var_potassium_background_current__g_b_K_Centre + var_potassium_background_current__g_b_K_Periphery) * var_membrane__FCell + var_potassium_background_current__g_b_K_Centre; // microS
            const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre = 0.00079704000000000005; // microS
            const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery = 0.016; // microS
            const double var_rapid_delayed_rectifying_potassium_current__g_K_r = (-var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre + var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery) * var_membrane__FCell + var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre; // microS
            const double var_rapid_delayed_rectifying_potassium_current__P_a = 0.40000000000000002 * var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as + 0.59999999999999998 * var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af; // dimensionless
            const double var_reversal_and_equilibrium_potentials__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 3) / NV_Ith_S(mParameters, 0)) / var_membrane__F; // millivolt
            const double var_calcium_background_current__i_b_Ca = (-var_reversal_and_equilibrium_potentials__E_Ca + var_chaste_interface__membrane__V) * var_calcium_background_current__g_b_Ca; // nanoA
            const double var_reversal_and_equilibrium_potentials__E_K = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 4) / NV_Ith_S(mParameters, 1)) / var_membrane__F; // millivolt
            const double var_four_AP_sensitive_currents__i_sus = (-var_reversal_and_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * var_four_AP_sensitive_currents__g_sus * var_chaste_interface__four_AP_sensitive_currents_r_gate__r; // nanoA
            const double var_four_AP_sensitive_currents__i_to = (-var_reversal_and_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * var_four_AP_sensitive_currents__g_to * var_chaste_interface__four_AP_sensitive_currents_q_gate__q * var_chaste_interface__four_AP_sensitive_currents_r_gate__r; // nanoA
            const double var_hyperpolarisation_activated_current__i_f_K = (-var_reversal_and_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * var_hyperpolarisation_activated_current__g_f_K * NV_Ith_S(mParameters, 7) * var_chaste_interface__hyperpolarisation_activated_current_y_gate__y; // nanoA
            const double var_potassium_background_current__i_b_K = (-var_reversal_and_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * var_potassium_background_current__g_b_K; // nanoA
            const double var_rapid_delayed_rectifying_potassium_current__i_K_r = (-var_reversal_and_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * var_rapid_delayed_rectifying_potassium_current__P_a * var_rapid_delayed_rectifying_potassium_current__g_K_r * NV_Ith_S(mParameters, 9) * var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i; // nanoA
            const double var_reversal_and_equilibrium_potentials__E_K_s = var_membrane__R * var_membrane__T * log((NV_Ith_S(mParameters, 4) + 0.029999999999999999 * NV_Ith_S(mParameters, 5)) / (NV_Ith_S(mParameters, 1) + 0.029999999999999999 * NV_Ith_S(mParameters, 2))) / var_membrane__F; // millivolt
            const double var_reversal_and_equilibrium_potentials__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 5) / NV_Ith_S(mParameters, 2)) / var_membrane__F; // millivolt
            const double var_hyperpolarisation_activated_current__i_f_Na = (-var_reversal_and_equilibrium_potentials__E_Na + var_chaste_interface__membrane__V) * var_hyperpolarisation_activated_current__g_f_Na * NV_Ith_S(mParameters, 8) * var_chaste_interface__hyperpolarisation_activated_current_y_gate__y; // nanoA
            const double var_slow_delayed_rectifying_potassium_current__g_K_s_Centre = 0.00034450000000000003; // microS
            const double var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery = 0.0104; // microS
            const double var_slow_delayed_rectifying_potassium_current__g_K_s = (-var_slow_delayed_rectifying_potassium_current__g_K_s_Centre + var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery) * var_membrane__FCell + var_slow_delayed_rectifying_potassium_current__g_K_s_Centre; // microS
            const double var_slow_delayed_rectifying_potassium_current__i_K_s = pow(var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs, 2) * (-var_reversal_and_equilibrium_potentials__E_K_s + var_chaste_interface__membrane__V) * var_slow_delayed_rectifying_potassium_current__g_K_s; // nanoA
            const double var_sodium_background_current__g_b_Na_Centre = 5.8181799999999999e-5; // microS
            const double var_sodium_background_current__g_b_Na_Periphery = 0.00018880000000000001; // microS
            const double var_sodium_background_current__g_b_Na = (-var_sodium_background_current__g_b_Na_Centre + var_sodium_background_current__g_b_Na_Periphery) * var_membrane__FCell + var_sodium_background_current__g_b_Na_Centre; // microS
            const double var_sodium_background_current__i_b_Na = (-var_reversal_and_equilibrium_potentials__E_Na + var_chaste_interface__membrane__V) * var_sodium_background_current__g_b_Na; // nanoA
            const double var_sodium_calcium_exchanger__d_NaCa = 0.0001; // dimensionless
            const double var_sodium_calcium_exchanger__gamma_NaCa = 0.5; // dimensionless
            const double var_sodium_calcium_exchanger__k_NaCa_Centre = 2.7228999999999998e-6; // nanoA
            const double var_sodium_calcium_exchanger__k_NaCa_Periphery = 8.8358400000000004e-6; // nanoA
            const double var_sodium_calcium_exchanger__k_NaCa = (-var_sodium_calcium_exchanger__k_NaCa_Centre + var_sodium_calcium_exchanger__k_NaCa_Periphery) * var_membrane__FCell + var_sodium_calcium_exchanger__k_NaCa_Centre; // nanoA
            const double var_sodium_calcium_exchanger__i_NaCa = (pow(NV_Ith_S(mParameters, 2), 3) * NV_Ith_S(mParameters, 3) * exp(0.037429999999999998 * var_chaste_interface__membrane__V * var_sodium_calcium_exchanger__gamma_NaCa) - pow(NV_Ith_S(mParameters, 5), 3) * NV_Ith_S(mParameters, 0) * exp(0.037429999999999998 * (-1.0 + var_sodium_calcium_exchanger__gamma_NaCa) * var_chaste_interface__membrane__V)) * var_sodium_calcium_exchanger__k_NaCa / (1.0 + (pow(NV_Ith_S(mParameters, 2), 3) * NV_Ith_S(mParameters, 3) + pow(NV_Ith_S(mParameters, 5), 3) * NV_Ith_S(mParameters, 0)) * var_sodium_calcium_exchanger__d_NaCa); // nanoA
            const double var_sodium_current__g_Na_Centre = 0; // microlitre_per_second
            const double var_sodium_current__g_Na_Periphery = 1.204e-6; // microlitre_per_second
            const double var_sodium_current__g_Na = (-var_sodium_current__g_Na_Centre + var_sodium_current__g_Na_Periphery) * var_membrane__FCell + var_sodium_current__g_Na_Centre; // microlitre_per_second
            const double var_sodium_current_h_gate__F_Na = 0.086929999999999993 + 0.095180000000000001 * exp(-2.1692640000000001 - 0.063060000000000005 * var_chaste_interface__membrane__V) / (1.0 + 1.6619999999999999 * exp(-14.33887 - 0.22509999999999999 * var_chaste_interface__membrane__V)); // dimensionless
            const double var_sodium_current_h_gate__h = (1.0 - var_sodium_current_h_gate__F_Na) * var_chaste_interface__sodium_current_h_gate__h1 + var_sodium_current_h_gate__F_Na * var_chaste_interface__sodium_current_h_gate__h2; // dimensionless
            const double var_sodium_current__i_Na = pow(var_membrane__F, 2) * pow(var_chaste_interface__sodium_current_m_gate__m, 3) * (-1.0 + exp((-var_reversal_and_equilibrium_potentials__E_Na + var_chaste_interface__membrane__V) * var_membrane__F / (var_membrane__R * var_membrane__T))) * NV_Ith_S(mParameters, 5) * var_chaste_interface__membrane__V * var_sodium_current__g_Na * var_sodium_current_h_gate__h / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // nanoA
            const double var_sodium_potassium_pump__K_m_K = 0.621; // millimolar
            const double var_sodium_potassium_pump__K_m_Na = 5.6399999999999997; // millimolar
            const double var_sodium_potassium_pump__i_p_max_Centre = 0.047825449999999999; // nanoA
            const double var_sodium_potassium_pump__i_p_max_Periphery = 0.15519359999999999; // nanoA
            const double var_sodium_potassium_pump__i_p_max = (-var_sodium_potassium_pump__i_p_max_Centre + var_sodium_potassium_pump__i_p_max_Periphery) * var_membrane__FCell + var_sodium_potassium_pump__i_p_max_Centre; // nanoA
            const double var_sodium_potassium_pump__i_p = 1.6000000000000001 * pow(NV_Ith_S(mParameters, 4), 2) * pow(NV_Ith_S(mParameters, 2), 3) * var_sodium_potassium_pump__i_p_max / ((1.5 + exp(-1.5 - 0.025000000000000001 * var_chaste_interface__membrane__V)) * pow((NV_Ith_S(mParameters, 4) + var_sodium_potassium_pump__K_m_K), 2) * pow((NV_Ith_S(mParameters, 2) + var_sodium_potassium_pump__K_m_Na), 3)); // nanoA
            const double var_membrane__V_orig_deriv = -(var_L_type_Ca_channel__i_Ca_L + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_b_Ca + var_four_AP_sensitive_currents__i_sus + var_four_AP_sensitive_currents__i_to + var_hyperpolarisation_activated_current__i_f_K + var_hyperpolarisation_activated_current__i_f_Na + var_persistent_calcium_current__i_Ca_p + var_potassium_background_current__i_b_K + var_rapid_delayed_rectifying_potassium_current__i_K_r + var_slow_delayed_rectifying_potassium_current__i_K_s + var_sodium_background_current__i_b_Na + var_sodium_calcium_exchanger__i_NaCa + var_sodium_current__i_Na + var_sodium_potassium_pump__i_p) / var_membrane__Cm; // millivolt / second
            d_dt_chaste_interface_var_membrane__V = 0.001 * var_membrane__V_orig_deriv; // millivolt / millisecond
        }
        
        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_membrane__V;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_sodium_current_m_gate__m;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_sodium_current_h_gate__h1;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_sodium_current_h_gate__h2;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d_L;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f_L;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_T_type_Ca_channel_d_gate__d_T;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_T_type_Ca_channel_f_gate__f_T;
        NV_Ith_S(rDY,8) = d_dt_chaste_interface_var_four_AP_sensitive_currents_q_gate__q;
        NV_Ith_S(rDY,9) = d_dt_chaste_interface_var_four_AP_sensitive_currents_r_gate__r;
        NV_Ith_S(rDY,10) = d_dt_chaste_interface_var_rapid_delayed_rectifying_potassium_current_P_af_gate__P_af;
        NV_Ith_S(rDY,11) = d_dt_chaste_interface_var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_as;
        NV_Ith_S(rDY,12) = d_dt_chaste_interface_var_rapid_delayed_rectifying_potassium_current_P_i_gate__P_i;
        NV_Ith_S(rDY,13) = d_dt_chaste_interface_var_slow_delayed_rectifying_potassium_current_xs_gate__xs;
        NV_Ith_S(rDY,14) = d_dt_chaste_interface_var_hyperpolarisation_activated_current_y_gate__y;
    }

    void Cellzhang_SAN_model_2000_0D_capableFromCellMLCvode::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time_converted, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -39.013558536
        double var_chaste_interface__sodium_current_m_gate__m = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.092361701692
        double var_chaste_interface__sodium_current_h_gate__h1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.015905380261
        double var_chaste_interface__sodium_current_h_gate__h2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.01445216109
        double var_chaste_interface__L_type_Ca_channel_d_gate__d_L = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.04804900895
        double var_chaste_interface__L_type_Ca_channel_f_gate__f_L = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.48779845203
        double var_chaste_interface__T_type_Ca_channel_d_gate__d_T = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.42074047435
        double var_chaste_interface__T_type_Ca_channel_f_gate__f_T = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.038968420558
        double var_chaste_interface__four_AP_sensitive_currents_q_gate__q = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.29760539675
        double var_chaste_interface__four_AP_sensitive_currents_r_gate__r = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.064402950262
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.13034201158
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.46960956028
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.87993375273
        double var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.082293827208
        double var_chaste_interface__hyperpolarisation_activated_current_y_gate__y = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.03889291759
        const double var_x0 = -0.16666666666666666 * var_chaste_interface__membrane__V;
        const double var_x1 = exp(-2.3500000000000001 + var_x0);
        const double var_x2 = 1.0 + var_x1;
        const double var_x3 = 0.027324999999999999 * var_chaste_interface__hyperpolarisation_activated_current_y_gate__y;
        const double var_x4 = pow(NV_Ith_S(mParameters, 2), 3);
        const double var_x5 = var_x4 * NV_Ith_S(mParameters, 3);
        const double var_x6 = pow(NV_Ith_S(mParameters, 5), 3) * NV_Ith_S(mParameters, 0);
        const double var_x7 = 0.018714999999999999 * var_chaste_interface__membrane__V;
        const double var_x8 = -0.015940800000000001 * var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as - 0.023911199999999997 * var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af;
        const double var_x9 = NV_Ith_S(mParameters, 9) * var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i;
        const double var_x10 = (13.441615999999998 - 0.28969 * var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 6);
        const double var_x11 = exp(-1.5 - 0.025000000000000001 * var_chaste_interface__membrane__V);
        const double var_x12 = 9.6256349999999991 - 0.21390299999999998 * var_chaste_interface__membrane__V;
        const double var_x13 = log(NV_Ith_S(mParameters, 4) / NV_Ith_S(mParameters, 1));
        const double var_x14 = 6.5268484175744739 * var_x13 - 0.24524999999999997 * var_chaste_interface__membrane__V;
        const double var_x15 = -0.027324999999999999 * var_chaste_interface__membrane__V;
        const double var_x16 = exp(-5.5531135531135529 - 0.18315018315018314 * var_chaste_interface__membrane__V);
        const double var_x17 = 1 / (1.0 + var_x16);
        const double var_x18 = pow(var_x17, 0.33333333333333331);
        const double var_x19 = exp(5.3505781299999997 + 0.082299999999999998 * var_chaste_interface__membrane__V);
        const double var_x20 = exp(-19.034003092000003 - 0.33566000000000001 * var_chaste_interface__membrane__V);
        const double var_x21 = 1 / (0.62739999999999996 * var_x19 + 0.83221659999999997 * var_x20);
        const double var_x22 = 1 / (4.5689999999999998e-5 + 0.00062469999999999995 * var_x21);
        const double var_x23 = exp(-12.936576000000001 - 0.34260000000000002 * var_chaste_interface__membrane__V);
        const double var_x24 = 1.0 + 0.0037320000000000001 * var_x23;
        const double var_x25 = exp(-4.8164649999999991 - 0.28149999999999997 * var_chaste_interface__membrane__V);
        const double var_x26 = var_x25 / var_x24;
        const double var_x27 = exp(10.328124999999998 + 0.15625 * var_chaste_interface__membrane__V);
        const double var_x28 = 1.0 + var_x27;
        const double var_x29 = 1 / var_x28;
        const double var_x30 = 1 / (0.00059770000000000005 + 3.7170000000000002e-6 * var_x26);
        const double var_x31 = 0.00015625 * var_x27 / pow(var_x28, 2);
        const double var_x32 = exp(-22.768981 - 0.66830000000000001 * var_chaste_interface__membrane__V);
        const double var_x33 = 1.0 + 7.1890000000000005e-5 * var_x32;
        const double var_x34 = exp(-11.69172 - 0.62190000000000001 * var_chaste_interface__membrane__V);
        const double var_x35 = var_x34 / var_x33;
        const double var_x36 = 1 / (0.0035560000000000001 + 3.1860000000000002e-8 * var_x35);
        const double var_x37 = 1 / (-1.0 + exp(1.0000000000010001e-7));
        const double var_x38 = 1 / (-1.0 + exp(-1.0000000000010001e-7));
        const double var_x39 = -5.0 + var_chaste_interface__membrane__V;
        const double var_x40 = fabs(var_x39) < 2.5000000000025002e-7;
        const double var_x41 = exp(-2.0 + 0.40000000000000002 * var_chaste_interface__membrane__V);
        const double var_x42 = -1.0 + var_x41;
        const double var_x43 = 11.43 / var_x42;
        const double var_x44 = 1 / (-1.0 + exp(9.9999999991773334e-8));
        const double var_x45 = 1 / (-1.0 + exp(-1.000000000139778e-7));
        const double var_x46 = exp(-0.20799999999999999 * var_chaste_interface__membrane__V);
        const double var_x47 = -1.0 + var_x46;
        const double var_x48 = 84.900000000000006 / var_x47;
        const double var_x49 = -var_x48 - 17.659200000000002 * var_x46 * var_chaste_interface__membrane__V / pow(var_x47, 2);
        const double var_x50 = 35.0 + var_chaste_interface__membrane__V;
        const double var_x51 = fabs(var_x50) < 2.5000000000718892e-7;
        const double var_x52 = 1 / (-1.0 + exp(9.9999999999999995e-8));
        const double var_x53 = 1 / (-1.0 + exp(-9.9999999999999995e-8));
        const double var_x54 = exp(-14.0 - 0.40000000000000002 * var_chaste_interface__membrane__V);
        const double var_x55 = -1.0 + var_x54;
        const double var_x56 = 28.390000000000001 / var_x55;
        const double var_x57 = -var_x56 - 11.356 * var_x50 * var_x54 / pow(var_x55, 2);
        const double var_x58 = fabs(var_chaste_interface__membrane__V) < 4.8076923076923074e-7;
        const double var_x59 = exp(-3.7166666666666668 + var_x0);
        const double var_x60 = 1.0 + var_x59;
        const double var_x61 = 2.8575000000028576e-6 * var_x38;
        const double var_x62 = ((var_x40) ? (-var_x61 + 1999999.9999979998 * (-4.9999997499999997 + var_chaste_interface__membrane__V) * (var_x61 + 2.8575000000028576e-6 * var_x37)) : (var_x39 * var_x43));
        const double var_x63 = 7.097500000992074e-6 * var_x45;
        const double var_x64 = -var_x48 * var_chaste_interface__membrane__V;
        const double var_x65 = 4.0817307692307694e-5 * var_x53;
        const double var_x66 = -var_x50 * var_x56;
        const double var_x67 = ((var_x51) ? (var_x64 - var_x63 - 1999999.9999424887 * (34.999999750000001 + var_chaste_interface__membrane__V) * (var_x63 + 7.0974999994161125e-6 * var_x44)) : ((var_x58) ? (var_x66 - var_x65 - 1040000.0 * (-4.8076923076923074e-7 + var_chaste_interface__membrane__V) * (var_x65 + 4.0817307692307694e-5 * var_x52)) : (var_x64 + var_x66)));
        const double var_x68 = exp(9.0 + 0.20000000000000001 * var_chaste_interface__membrane__V);
        const double var_x69 = 1.0 + var_x68;
        const double var_x70 = 1 / (-1.0 + exp(1.0000000000287557e-7));
        const double var_x71 = 1 / (-1.0 + exp(-1.0000000000287557e-7));
        const double var_x72 = 28.0 + var_chaste_interface__membrane__V;
        const double var_x73 = fabs(var_x72) < 4.0000000001150227e-7;
        const double var_x74 = 0.25 * var_chaste_interface__membrane__V;
        const double var_x75 = exp(7.0 + var_x74);
        const double var_x76 = -1.0 + var_x75;
        const double var_x77 = 3.75 / var_x76;
        const double var_x78 = exp(-7.0 - var_x74);
        const double var_x79 = 1.0 + var_x78;
        const double var_x80 = 1 / var_x79;
        const double var_x81 = 1.5000000000431335e-6 * var_x71;
        const double var_x82 = ((var_x73) ? (-var_x81 + 1249999.9999640554 * (28.000000400000001 + var_chaste_interface__membrane__V) * (var_x81 + 1.5000000000431335e-6 * var_x70)) : (var_x72 * var_x77));
        const double var_x83 = exp(-5.4411764705882355 - 0.14705882352941177 * var_chaste_interface__membrane__V);
        const double var_x84 = 1.0 + var_x83;
        const double var_x85 = 0.033333333333333333 * var_chaste_interface__membrane__V;
        const double var_x86 = exp(0.87666666666666671 + var_x85);
        const double var_x87 = exp(-0.87666666666666671 - var_x85);
        const double var_x88 = 0.1111111111111111 * var_chaste_interface__membrane__V;
        const double var_x89 = exp(7.8888888888888893 + var_x88);
        const double var_x90 = 1.0 + var_x89;
        const double var_x91 = exp(4.6163849154746419 + 0.065019505851755519 * var_chaste_interface__membrane__V);
        const double var_x92 = exp(-0.85234093637454988 - 0.012004801920768308 * var_chaste_interface__membrane__V);
        const double var_x93 = exp(4.5320610687022898 + 0.076335877862595422 * var_chaste_interface__membrane__V);
        const double var_x94 = 1.0 + var_x93;
        const double var_x95 = exp(-3.1827900000000002 - 0.081610000000000002 * var_chaste_interface__membrane__V);
        const double var_x96 = exp(11.128867 + 0.27189999999999998 * var_chaste_interface__membrane__V);
        const double var_x97 = 1 / (0.56859999999999999 * var_x95 + 0.71740000000000004 * var_x96);
        const double var_x98 = 1 / (0.010103333333333334 + 0.065166666666666664 * var_x97);
        const double var_x99 = exp(0.5548223350253807 - 0.050761421319796954 * var_chaste_interface__membrane__V);
        const double var_x100 = 1.0 + var_x99;
        const double var_x101 = exp(2.7585732000000003 + 0.090120000000000006 * var_chaste_interface__membrane__V);
        const double var_x102 = exp(-2.8369599999999999 - 0.11899999999999999 * var_chaste_interface__membrane__V);
        const double var_x103 = 1 / (1.0369999999999999 * var_x101 + 0.36899999999999999 * var_x102);
        const double var_x104 = 1 / (0.0029775000000000001 + 0.019595000000000001 * var_x103);
        const double var_x105 = exp(-1.3396226415094339 - 0.094339622641509441 * var_chaste_interface__membrane__V);
        const double var_x106 = 1.0 + var_x105;
        const double var_x107 = 0.001 / var_x106;
        const double var_x108 = exp(-0.56603773584905659 + 0.062893081761006289 * var_chaste_interface__membrane__V);
        const double var_x109 = exp(0.40000000000000002 - 0.044444444444444446 * var_chaste_interface__membrane__V);
        const double var_x110 = 9.4339622641509443e-5 * var_x105 / pow(var_x106, 2);
        const double var_x111 = exp(-0.52941176470588236 + 0.058823529411764705 * var_chaste_interface__membrane__V);
        const double var_x112 = exp(0.41666666666666663 - 0.046296296296296294 * var_chaste_interface__membrane__V);
        const double var_x113 = exp(1.8415841584158419 + 0.099009900990099015 * var_chaste_interface__membrane__V);
        const double var_x114 = exp(-0.022222222222222223 * var_chaste_interface__membrane__V);
        const double var_x115 = exp(4.4444444444444446 - var_x88);
        const double var_x116 = 1.0 + var_x115;
        const double var_x117 = exp(3.5355294117647058 + 0.047058823529411764 * var_chaste_interface__membrane__V);
        const double var_x118 = exp(-2.9631993991738641 - 0.037551633496057078 * var_chaste_interface__membrane__V);
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = mSetVoltageDerivativeToZero ? 0.0 : (-0.0048327079999999998 - 0.017225000000000001 * pow(var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs, 2) - 0.003322752 * var_chaste_interface__four_AP_sensitive_currents_r_gate__r + var_x8 * var_x9 + (-0.00173814 / var_x2 - 0.28969 * var_chaste_interface__L_type_Ca_channel_d_gate__d_L * var_chaste_interface__L_type_Ca_channel_f_gate__f_L) * NV_Ith_S(mParameters, 6) - var_x3 * NV_Ith_S(mParameters, 7) - var_x3 * NV_Ith_S(mParameters, 8) - 0.21390299999999998 * var_chaste_interface__T_type_Ca_channel_d_gate__d_T * var_chaste_interface__T_type_Ca_channel_f_gate__f_T - 0.24524999999999997 * var_chaste_interface__four_AP_sensitive_currents_q_gate__q * var_chaste_interface__four_AP_sensitive_currents_r_gate__r - 0.00013614499999999998 * (0.018714999999999999 * var_x5 * exp(var_x7) + 0.018714999999999999 * var_x6 * exp(-var_x7)) / (1.0 + 0.0001 * var_x5 + 0.0001 * var_x6) + 0.001 * var_x1 * var_x10 / pow(var_x2, 2) - 0.00023695682970094445 * var_x11 * var_x4 * pow(NV_Ith_S(mParameters, 4), 2) / (pow((1 + 0.1773049645390071 * NV_Ith_S(mParameters, 2)), 3) * pow((1 + 0.66666666666666663 * var_x11), 2) * pow((0.621 + NV_Ith_S(mParameters, 4)), 2)));
        IJth(rJacobian, 1, 0) = 6.105006105006105e-5 * var_x16 * var_x17 * var_x18 * var_x22 - 2.3112969460591231 * (-var_chaste_interface__sodium_current_m_gate__m + var_x18) * (0.27934182395599999 * var_x20 - 0.051635019999999997 * var_x19) / (pow((0.073139106771250198 + var_x21), 2) * pow((var_x20 + 0.75389027327741354 * var_x19), 2));
        IJth(rJacobian, 2, 0) = -var_x30 * var_x31 + 2799.1971566651023 * (var_x29 - var_chaste_interface__sodium_current_h_gate__h1) * (1.0463354999999999e-6 * var_x26 - 4.7524937544000007e-9 * var_x23 * var_x25 / pow(var_x24, 2)) / pow((1 + 0.0062188388823824657 * var_x26), 2);
        IJth(rJacobian, 3, 0) = -var_x31 * var_x36 + 79.081790816642851 * (var_x29 - var_chaste_interface__sodium_current_h_gate__h2) * (1.9813734000000003e-8 * var_x35 - 1.5306846118200001e-12 * var_x32 * var_x34 / pow(var_x33, 2)) / pow((1 + 8.959505061867266e-6 * var_x35), 2);
        IJth(rJacobian, 4, 0) = (0.5 * ((var_x40) ? (5.7149999999999999 * var_x37 + 5.7149999999999999 * var_x38) : (var_x43 - 4.5720000000000001 * var_x39 * var_x41 / pow(var_x42, 2))) + 0.5 * ((var_x51) ? (var_x49 - 14.19499999842404 * var_x44 - 14.195000001575963 * var_x45) : ((var_x58) ? (var_x57 - 42.450000000000003 * var_x52 - 42.450000000000003 * var_x53) : (var_x49 + var_x57)))) * (0.001 / var_x60 - 0.001 * var_chaste_interface__L_type_Ca_channel_d_gate__d_L) + 0.00016666666666666666 * var_x59 * (0.5 * var_x62 + 0.5 * var_x67) / pow(var_x60, 2);
        IJth(rJacobian, 5, 0) = (0.001 / var_x69 - 0.001 * var_chaste_interface__L_type_Ca_channel_f_gate__f_L) * (0.83333333333333337 * ((var_x73) ? (1.875 * var_x70 + 1.875 * var_x71) : (var_x77 - 0.9375 * var_x72 * var_x75 / pow(var_x76, 2))) + 6.25 * var_x78 / pow(var_x79, 2)) - 0.00020000000000000001 * var_x68 * (25.0 * var_x80 + 0.83333333333333337 * var_x82) / pow(var_x69, 2);
        IJth(rJacobian, 6, 0) = (0.001 / var_x84 - 0.001 * var_chaste_interface__T_type_Ca_channel_d_gate__d_T) * (35.600000000000001 * var_x86 - 35.600000000000001 * var_x87) + 0.00014705882352941178 * var_x83 * (1068.0 * var_x86 + 1068.0 * var_x87) / pow(var_x84, 2);
        IJth(rJacobian, 7, 0) = (0.001 / var_x90 - 0.001 * var_chaste_interface__T_type_Ca_channel_f_gate__f_T) * (0.97529258777633288 * var_x91 - 0.18367346938775511 * var_x92) - 0.00011111111111111112 * var_x89 * (15.0 * var_x91 + 15.300000000000001 * var_x92) / pow(var_x90, 2);
        IJth(rJacobian, 8, 0) = -7.6335877862595422e-5 * var_x93 * var_x98 / pow(var_x94, 2) - 0.02981616261141468 * (-var_chaste_interface__four_AP_sensitive_currents_q_gate__q + 1 / var_x94) * (0.046403446000000001 * var_x95 - 0.19506105999999998 * var_x96) / (pow((0.1550383631713555 + var_x97), 2) * pow((var_x96 + 0.79258433231112346 * var_x95), 2));
        IJth(rJacobian, 9, 0) = 5.076142131979696e-5 * var_x104 * var_x99 / pow(var_x100, 2) - 0.047456665474470604 * (-var_chaste_interface__four_AP_sensitive_currents_r_gate__r + 1 / var_x100) * (0.043910999999999999 * var_x102 - 0.09345444 * var_x101) / (pow((0.15195202857871906 + var_x103), 2) * pow((var_x101 + 0.35583413693346194 * var_x102), 2));
        IJth(rJacobian, 10, 0) = var_x110 * (0.95999999999999996 * var_x109 + 37.200000000000003 * var_x108) + (var_x107 - 0.001 * var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af) * (2.3396226415094339 * var_x108 - 0.042666666666666665 * var_x109);
        IJth(rJacobian, 11, 0) = var_x110 * (4.2000000000000002 * var_x111 + 0.14999999999999999 * var_x112) + (var_x107 - 0.001 * var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as) * (0.24705882352941178 * var_x111 - 0.0069444444444444441 * var_x112);
        IJth(rJacobian, 12, 0) = -0.049504950495049507 * var_x113 / pow((1.0 + var_x113), 2);
        IJth(rJacobian, 13, 0) = 2.2222222222222223e-5 * var_x114 * var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs + 0.0015555555555555555 * var_x115 * (1.0 - var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs) / pow(var_x116, 2);
        IJth(rJacobian, 14, 0) = -4.7058823529411767e-5 * var_x117 * var_chaste_interface__hyperpolarisation_activated_current_y_gate__y - 0.037551633496057078 * var_x118 * (0.001 - 0.001 * var_chaste_interface__hyperpolarisation_activated_current_y_gate__y);
        IJth(rJacobian, 1, 1) = -0.001 * var_x22;
        IJth(rJacobian, 2, 2) = -0.001 * var_x30;
        IJth(rJacobian, 3, 3) = -0.001 * var_x36;
        IJth(rJacobian, 0, 4) = mSetVoltageDerivativeToZero ? 0.0 : (var_x10 * var_chaste_interface__L_type_Ca_channel_f_gate__f_L);
        IJth(rJacobian, 4, 4) = -0.00050000000000000001 * var_x62 - 0.00050000000000000001 * var_x67;
        IJth(rJacobian, 0, 5) = mSetVoltageDerivativeToZero ? 0.0 : (var_x10 * var_chaste_interface__L_type_Ca_channel_d_gate__d_L);
        IJth(rJacobian, 5, 5) = -0.00083333333333333339 * var_x82 - 0.025000000000000001 * var_x80;
        IJth(rJacobian, 0, 6) = mSetVoltageDerivativeToZero ? 0.0 : (var_x12 * var_chaste_interface__T_type_Ca_channel_f_gate__f_T);
        IJth(rJacobian, 6, 6) = -1.0680000000000001 * var_x86 - 1.0680000000000001 * var_x87;
        IJth(rJacobian, 0, 7) = mSetVoltageDerivativeToZero ? 0.0 : (var_x12 * var_chaste_interface__T_type_Ca_channel_d_gate__d_T);
        IJth(rJacobian, 7, 7) = -0.015300000000000001 * var_x92 - 0.014999999999999999 * var_x91;
        IJth(rJacobian, 0, 8) = mSetVoltageDerivativeToZero ? 0.0 : (var_x14 * var_chaste_interface__four_AP_sensitive_currents_r_gate__r);
        IJth(rJacobian, 8, 8) = -0.001 * var_x98;
        IJth(rJacobian, 0, 9) = mSetVoltageDerivativeToZero ? 0.0 : (0.088428536730652069 * var_x13 - 0.003322752 * var_chaste_interface__membrane__V + var_x14 * var_chaste_interface__four_AP_sensitive_currents_q_gate__q);
        IJth(rJacobian, 9, 9) = -0.001 * var_x104;
        IJth(rJacobian, 0, 10) = mSetVoltageDerivativeToZero ? 0.0 : (var_x9 * (0.63634975691052709 * var_x13 - 0.023911199999999997 * var_chaste_interface__membrane__V));
        IJth(rJacobian, 10, 10) = -0.00095999999999999992 * var_x109 - 0.037200000000000004 * var_x108;
        IJth(rJacobian, 0, 11) = mSetVoltageDerivativeToZero ? 0.0 : (var_x9 * (0.42423317127368476 * var_x13 - 0.015940800000000001 * var_chaste_interface__membrane__V));
        IJth(rJacobian, 11, 11) = -0.00014999999999999999 * var_x112 - 0.0042000000000000006 * var_x111;
        IJth(rJacobian, 0, 12) = mSetVoltageDerivativeToZero ? 0.0 : (var_x8 * (-26.613041457999898 * var_x13 + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 9));
        IJth(rJacobian, 12, 12) = -0.5;
        IJth(rJacobian, 0, 13) = mSetVoltageDerivativeToZero ? 0.0 : (-0.034450000000000001 * (-26.613041457999898 * log((NV_Ith_S(mParameters, 4) + 0.029999999999999999 * NV_Ith_S(mParameters, 5)) / (NV_Ith_S(mParameters, 1) + 0.029999999999999999 * NV_Ith_S(mParameters, 2))) + var_chaste_interface__membrane__V) * var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs);
        IJth(rJacobian, 13, 13) = -0.001 * var_x114 - 0.014 / var_x116;
        IJth(rJacobian, 0, 14) = mSetVoltageDerivativeToZero ? 0.0 : ((var_x15 + 0.72720135783984707 * var_x13) * NV_Ith_S(mParameters, 7) + (var_x15 + 0.72720135783984707 * log(NV_Ith_S(mParameters, 5) / NV_Ith_S(mParameters, 2))) * NV_Ith_S(mParameters, 8));
        IJth(rJacobian, 14, 14) = -0.001 * var_x117 - 0.001 * var_x118;
    }

    N_Vector Cellzhang_SAN_model_2000_0D_capableFromCellMLCvode::ComputeDerivedQuantities(double var_chaste_interface__environment__time_converted, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -39.013558536
        double var_chaste_interface__sodium_current_m_gate__m = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.092361701692
        double var_chaste_interface__sodium_current_h_gate__h1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.015905380261
        double var_chaste_interface__sodium_current_h_gate__h2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.01445216109
        double var_chaste_interface__L_type_Ca_channel_d_gate__d_L = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.04804900895
        double var_chaste_interface__L_type_Ca_channel_f_gate__f_L = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.48779845203
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.13034201158
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.46960956028
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.87993375273
        double var_chaste_interface__hyperpolarisation_activated_current_y_gate__y = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.03889291759
        
        // Mathematics
        const double var_L_type_Ca_channel__E_Ca_L = 46.399999999999999; // millivolt
        const double var_L_type_Ca_channel__g_Ca_L_Centre = 0.0057938; // microS
        const double var_L_type_Ca_channel__g_Ca_L_Periphery = 0.065886479999999997; // microS
        const double var_hyperpolarisation_activated_current__g_f_K_Centre = 0.0005465; // microS
        const double var_hyperpolarisation_activated_current__g_f_K_Periphery = 0.006875; // microS
        const double var_hyperpolarisation_activated_current__g_f_Na_Centre = 0.0005465; // microS
        const double var_hyperpolarisation_activated_current__g_f_Na_Periphery = 0.006875; // microS
        const double var_membrane__CmCentre = 2.0000000000000002e-5; // microF
        const double var_membrane__CmPeriphery = 6.4999999999999994e-5; // microF
        const double var_membrane__F = 96845.0; // coulomb_per_mole
        const double var_membrane__FCellConstant = 1.0309347; // dimensionless
        const double var_membrane__R = 8314.0; // millijoule_per_mole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_membrane__dCell = 0; // dimensionless
        const double var_membrane__FCell = var_membrane__FCellConstant * var_membrane__dCell / (1.0 + 0.77449999999999997 * exp(6.9491525423728815 - 10.16949152542373 * var_membrane__dCell)); // dimensionless
        const double var_L_type_Ca_channel__g_Ca_L = (-var_L_type_Ca_channel__g_Ca_L_Centre + var_L_type_Ca_channel__g_Ca_L_Periphery) * var_membrane__FCell + var_L_type_Ca_channel__g_Ca_L_Centre; // microS
        const double var_L_type_Ca_channel__i_Ca_L = (-var_L_type_Ca_channel__E_Ca_L + var_chaste_interface__membrane__V) * (0.0060000000000000001 / (1.0 + exp(-2.3500000000000001 - 0.16666666666666666 * var_chaste_interface__membrane__V)) + var_chaste_interface__L_type_Ca_channel_d_gate__d_L * var_chaste_interface__L_type_Ca_channel_f_gate__f_L) * var_L_type_Ca_channel__g_Ca_L * NV_Ith_S(mParameters, 6); // nanoA
        const double var_hyperpolarisation_activated_current__g_f_K = (-var_hyperpolarisation_activated_current__g_f_K_Centre + var_hyperpolarisation_activated_current__g_f_K_Periphery) * var_membrane__FCell + var_hyperpolarisation_activated_current__g_f_K_Centre; // microS
        const double var_hyperpolarisation_activated_current__g_f_Na = (-var_hyperpolarisation_activated_current__g_f_Na_Centre + var_hyperpolarisation_activated_current__g_f_Na_Periphery) * var_membrane__FCell + var_hyperpolarisation_activated_current__g_f_Na_Centre; // microS
        const double var_membrane__Cm = (-var_membrane__CmCentre + var_membrane__CmPeriphery) * var_membrane__FCell + var_membrane__CmCentre; // microF
        const double var_L_type_Ca_channel__i_Ca_L_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L / var_membrane__Cm; // uA_per_cm2
        const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre = 0.00079704000000000005; // microS
        const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery = 0.016; // microS
        const double var_rapid_delayed_rectifying_potassium_current__g_K_r = (-var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre + var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery) * var_membrane__FCell + var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre; // microS
        const double var_rapid_delayed_rectifying_potassium_current__P_a = 0.40000000000000002 * var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as + 0.59999999999999998 * var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af; // dimensionless
        const double var_reversal_and_equilibrium_potentials__E_K = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 4) / NV_Ith_S(mParameters, 1)) / var_membrane__F; // millivolt
        const double var_hyperpolarisation_activated_current__i_f_K = (-var_reversal_and_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * var_hyperpolarisation_activated_current__g_f_K * NV_Ith_S(mParameters, 7) * var_chaste_interface__hyperpolarisation_activated_current_y_gate__y; // nanoA
        const double var_rapid_delayed_rectifying_potassium_current__i_K_r = (-var_reversal_and_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * var_rapid_delayed_rectifying_potassium_current__P_a * var_rapid_delayed_rectifying_potassium_current__g_K_r * NV_Ith_S(mParameters, 9) * var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i; // nanoA
        const double var_rapid_delayed_rectifying_potassium_current__i_K_r_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_rapid_delayed_rectifying_potassium_current__i_K_r / var_membrane__Cm; // uA_per_cm2
        const double var_reversal_and_equilibrium_potentials__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 5) / NV_Ith_S(mParameters, 2)) / var_membrane__F; // millivolt
        const double var_hyperpolarisation_activated_current__i_f_Na = (-var_reversal_and_equilibrium_potentials__E_Na + var_chaste_interface__membrane__V) * var_hyperpolarisation_activated_current__g_f_Na * NV_Ith_S(mParameters, 8) * var_chaste_interface__hyperpolarisation_activated_current_y_gate__y; // nanoA
        const double var_sodium_current__g_Na_Centre = 0; // microlitre_per_second
        const double var_sodium_current__g_Na_Periphery = 1.204e-6; // microlitre_per_second
        const double var_sodium_current__g_Na = (-var_sodium_current__g_Na_Centre + var_sodium_current__g_Na_Periphery) * var_membrane__FCell + var_sodium_current__g_Na_Centre; // microlitre_per_second
        const double var_sodium_current_h_gate__F_Na = 0.086929999999999993 + 0.095180000000000001 * exp(-2.1692640000000001 - 0.063060000000000005 * var_chaste_interface__membrane__V) / (1.0 + 1.6619999999999999 * exp(-14.33887 - 0.22509999999999999 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_sodium_current_h_gate__h = (1.0 - var_sodium_current_h_gate__F_Na) * var_chaste_interface__sodium_current_h_gate__h1 + var_sodium_current_h_gate__F_Na * var_chaste_interface__sodium_current_h_gate__h2; // dimensionless
        const double var_sodium_current__i_Na = pow(var_membrane__F, 2) * pow(var_chaste_interface__sodium_current_m_gate__m, 3) * (-1.0 + exp((-var_reversal_and_equilibrium_potentials__E_Na + var_chaste_interface__membrane__V) * var_membrane__F / (var_membrane__R * var_membrane__T))) * NV_Ith_S(mParameters, 5) * var_chaste_interface__membrane__V * var_sodium_current__g_Na * var_sodium_current_h_gate__h / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // nanoA
        const double var_sodium_current__i_Na_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_sodium_current__i_Na / var_membrane__Cm; // uA_per_cm2

        N_Vector dqs = N_VNew_Serial(7);
        NV_Ith_S(dqs, 0) = var_L_type_Ca_channel__i_Ca_L_converted;
        NV_Ith_S(dqs, 1) = var_membrane__Cm;
        NV_Ith_S(dqs, 2) = var_sodium_current__i_Na_converted;
        NV_Ith_S(dqs, 3) = var_hyperpolarisation_activated_current__i_f_K;
        NV_Ith_S(dqs, 4) = var_hyperpolarisation_activated_current__i_f_Na;
        NV_Ith_S(dqs, 5) = var_rapid_delayed_rectifying_potassium_current__i_K_r_converted;
        NV_Ith_S(dqs, 6) = var_chaste_interface__environment__time_converted;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellzhang_SAN_model_2000_0D_capableFromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "zhang_SAN_model_2000_0D_capable";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // NV_Ith_S(rY, 0):
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-39.013558536);

    // NV_Ith_S(rY, 1):
    this->mVariableNames.push_back("sodium_current_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.092361701692);

    // NV_Ith_S(rY, 2):
    this->mVariableNames.push_back("sodium_current_h_gate__h1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.015905380261);

    // NV_Ith_S(rY, 3):
    this->mVariableNames.push_back("sodium_current_h_gate__h2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.01445216109);

    // NV_Ith_S(rY, 4):
    this->mVariableNames.push_back("L_type_Ca_channel_d_gate__d_L");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.04804900895);

    // NV_Ith_S(rY, 5):
    this->mVariableNames.push_back("L_type_Ca_channel_f_gate__f_L");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.48779845203);

    // NV_Ith_S(rY, 6):
    this->mVariableNames.push_back("T_type_Ca_channel_d_gate__d_T");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.42074047435);

    // NV_Ith_S(rY, 7):
    this->mVariableNames.push_back("T_type_Ca_channel_f_gate__f_T");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.038968420558);

    // NV_Ith_S(rY, 8):
    this->mVariableNames.push_back("four_AP_sensitive_currents_q_gate__q");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.29760539675);

    // NV_Ith_S(rY, 9):
    this->mVariableNames.push_back("four_AP_sensitive_currents_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.064402950262);

    // NV_Ith_S(rY, 10):
    this->mVariableNames.push_back("rapid_delayed_rectifying_potassium_current_P_af_gate__P_af");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.13034201158);

    // NV_Ith_S(rY, 11):
    this->mVariableNames.push_back("rapid_delayed_rectifying_potassium_current_P_as_gate__P_as");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.46960956028);

    // NV_Ith_S(rY, 12):
    this->mVariableNames.push_back("rapid_delayed_rectifying_potassium_current_P_i_gate__P_i");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.87993375273);

    // NV_Ith_S(rY, 13):
    this->mVariableNames.push_back("slow_delayed_rectifying_potassium_current_xs_gate__xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.082293827208);

    // NV_Ith_S(rY, 14):
    this->mVariableNames.push_back("hyperpolarisation_activated_current_y_gate__y");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.03889291759);

    // mParameters[0]:
    this->mParameterNames.push_back("cytosolic_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[1]:
    this->mParameterNames.push_back("cytosolic_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[2]:
    this->mParameterNames.push_back("cytosolic_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[3]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[4]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[5]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[6]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_hyperpolarisation_activated_funny_current_potassium_component_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_hyperpolarisation_activated_funny_current_sodium_component_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_capacitance");
    this->mDerivedQuantityUnits.push_back("microF");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_hyperpolarisation_activated_funny_current_potassium_component");
    this->mDerivedQuantityUnits.push_back("nanoA");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_hyperpolarisation_activated_funny_current_sodium_component");
    this->mDerivedQuantityUnits.push_back("nanoA");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellzhang_SAN_model_2000_0D_capableFromCellMLCvode)

#endif // CHASTE_CVODE
