#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: courtemanche_1998
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: AnalyticCvode)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "courtemanche_ramirez_nattel_1998.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"


    boost::shared_ptr<RegularStimulus> Cellcourtemanche_ramirez_nattel_1998FromCellMLCvode::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_membrane__Cm_converted = 9.9999999999999995e-7 * NV_Ith_S(mParameters, 9); // uF
        const double var_chaste_interface__membrane__stim_amplitude_converted = -0.002 * HeartConfig::Instance()->GetCapacitance() / var_membrane__Cm_converted; // uA_per_cm2
        const double var_chaste_interface__membrane__stim_duration = 2.0; // millisecond
        const double var_chaste_interface__membrane__stim_period = 1000.0; // millisecond
        const double var_chaste_interface__membrane__stim_start = 100.0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__stim_amplitude_converted),
                var_chaste_interface__membrane__stim_duration,
                var_chaste_interface__membrane__stim_period,
                var_chaste_interface__membrane__stim_start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }

    double Cellcourtemanche_ramirez_nattel_1998FromCellMLCvode::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Cellcourtemanche_ramirez_nattel_1998FromCellMLCvode::Cellcourtemanche_ramirez_nattel_1998FromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                21,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellcourtemanche_ramirez_nattel_1998FromCellMLCvode>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
        
        NV_Ith_S(this->mParameters, 0) = 1.0; // (var_Ca_leak_current_by_the_NSR__leak_factor) [dimensionless]
        NV_Ith_S(this->mParameters, 1) = 30.0; // (var_Ca_release_current_from_JSR__K_rel) [per_millisecond]
        NV_Ith_S(this->mParameters, 2) = 0.0050000000000000001; // (var_Ca_uptake_current_by_the_NSR__I_up_max) [millimolar_per_millisecond]
        NV_Ith_S(this->mParameters, 3) = 1.0; // (var_intracellular_ion_concentrations__conc_clamp) [dimensionless]
        NV_Ith_S(this->mParameters, 4) = 1.8; // (var_standard_ionic_concentrations__Ca_o) [millimolar]
        NV_Ith_S(this->mParameters, 5) = 5.4000000000000004; // (var_standard_ionic_concentrations__K_o) [millimolar]
        NV_Ith_S(this->mParameters, 6) = 140.0; // (var_standard_ionic_concentrations__Na_o) [millimolar]
        NV_Ith_S(this->mParameters, 7) = 0.12375; // (var_L_type_Ca_channel__g_Ca_L) [nanoS_per_picoF]
        NV_Ith_S(this->mParameters, 8) = 2.0; // (var_L_type_Ca_channel_f_Ca_gate__tau_f_Ca) [millisecond]
        NV_Ith_S(this->mParameters, 9) = 100.0; // (var_membrane__Cm) [picoF]
        NV_Ith_S(this->mParameters, 10) = 7.7999999999999998; // (var_fast_sodium_current__g_Na) [nanoS_per_picoF]
        NV_Ith_S(this->mParameters, 11) = 0; // (var_fast_sodium_current__perc_reduced_inact_for_IpNa) [dimensionless]
        NV_Ith_S(this->mParameters, 12) = 0; // (var_fast_sodium_current__shift_INa_inact) [millivolt]
        NV_Ith_S(this->mParameters, 13) = 0.089999999999999997; // (var_time_independent_potassium_current__g_K1) [nanoS_per_picoF]
        NV_Ith_S(this->mParameters, 14) = 0.029411764999999999; // (var_rapid_delayed_rectifier_K_current__g_Kr) [nanoS_per_picoF]
        NV_Ith_S(this->mParameters, 15) = 0.12941175999999999; // (var_slow_delayed_rectifier_K_current__g_Ks) [nanoS_per_picoF]
        NV_Ith_S(this->mParameters, 16) = 1600.0; // (var_Na_Ca_exchanger_current__I_NaCa_max) [picoA_per_picoF]
        NV_Ith_S(this->mParameters, 17) = 0.16520000000000001; // (var_transient_outward_K_current__g_to) [nanoS_per_picoF]
    }

    Cellcourtemanche_ramirez_nattel_1998FromCellMLCvode::~Cellcourtemanche_ramirez_nattel_1998FromCellMLCvode()
    {
    }

    
    double Cellcourtemanche_ramirez_nattel_1998FromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -81.18
        double var_chaste_interface__intracellular_ion_concentrations__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0001013
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.002908
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.9649
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.9775
        double var_chaste_interface__transient_outward_K_current_oa_gate__oa = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.03043
        double var_chaste_interface__transient_outward_K_current_oi_gate__oi = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.9992
        double var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.004966
        double var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.9986
        double var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 3.296e-05
        double var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.01869
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.0001367
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.9996
        double var_chaste_interface__L_type_Ca_channel_f_Ca_gate__f_Ca = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.7755
        double var_chaste_interface__intracellular_ion_concentrations__Na_i = NV_Ith_S(rY, 17);
        // Units: millimolar; Initial value: 11.17
        double var_chaste_interface__intracellular_ion_concentrations__K_i = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 139.0
        
        const double var_Na_Ca_exchanger_current__K_mCa = 1.3799999999999999; // millimolar
        const double var_Na_Ca_exchanger_current__K_mNa = 87.5; // millimolar
        const double var_Na_Ca_exchanger_current__K_sat = 0.10000000000000001; // dimensionless
        const double var_Na_Ca_exchanger_current__gamma = 0.34999999999999998; // dimensionless
        const double var_background_currents__g_B_Ca = 0.0011310000000000001; // nanoS_per_picoF
        const double var_background_currents__g_B_Na = 0.00067443750000000002; // nanoS_per_picoF
        const double var_membrane__Cm_converted = 9.9999999999999995e-7 * NV_Ith_S(mParameters, 9); // uF
        const double var_membrane__F = 96.486699999999999; // coulomb_per_millimole
        const double var_membrane__R = 8.3142999999999994; // joule_per_mole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_L_type_Ca_channel__i_Ca_L = (-65.0 + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 7) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f * NV_Ith_S(mParameters, 9); // picoA
        const double var_L_type_Ca_channel__i_Ca_L_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L / var_membrane__Cm_converted; // uA_per_cm2
        const double var_sarcolemmal_calcium_pump_current__i_CaP_max = 0.27500000000000002; // picoA_per_picoF
        const double var_sarcolemmal_calcium_pump_current__i_CaP = var_chaste_interface__intracellular_ion_concentrations__Ca_i * NV_Ith_S(mParameters, 9) * var_sarcolemmal_calcium_pump_current__i_CaP_max / (0.00050000000000000001 + var_chaste_interface__intracellular_ion_concentrations__Ca_i); // picoA
        const double var_sodium_potassium_pump__Km_K_o = 1.5; // millimolar
        const double var_sodium_potassium_pump__Km_Na_i = 10.0; // millimolar
        const double var_sodium_potassium_pump__i_NaK_max = 0.59933873999999998; // picoA_per_picoF
        const double var_background_currents__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__intracellular_ion_concentrations__Ca_i) / var_membrane__F; // millivolt
        const double var_background_currents__i_B_Ca = (-var_background_currents__E_Ca + var_chaste_interface__membrane__V) * var_background_currents__g_B_Ca * NV_Ith_S(mParameters, 9); // picoA
        const double var_Na_Ca_exchanger_current__i_NaCa = (pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * NV_Ith_S(mParameters, 4) * exp(var_Na_Ca_exchanger_current__gamma * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) - pow(NV_Ith_S(mParameters, 6), 3) * var_chaste_interface__intracellular_ion_concentrations__Ca_i * exp((-1.0 + var_Na_Ca_exchanger_current__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * NV_Ith_S(mParameters, 16) * NV_Ith_S(mParameters, 9) / ((1.0 + var_Na_Ca_exchanger_current__K_sat * exp((-1.0 + var_Na_Ca_exchanger_current__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * (pow(var_Na_Ca_exchanger_current__K_mNa, 3) + pow(NV_Ith_S(mParameters, 6), 3)) * (var_Na_Ca_exchanger_current__K_mCa + NV_Ith_S(mParameters, 4))); // picoA
        const double var_Na_Ca_exchanger_current__i_NaCa_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_Na_Ca_exchanger_current__i_NaCa / var_membrane__Cm_converted; // uA_per_cm2
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 6) / var_chaste_interface__intracellular_ion_concentrations__Na_i) / var_membrane__F; // millivolt
        const double var_background_currents__i_B_Na = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_background_currents__g_B_Na * NV_Ith_S(mParameters, 9); // picoA
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 10) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j * NV_Ith_S(mParameters, 9); // picoA
        const double var_fast_sodium_current__i_Na_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na / var_membrane__Cm_converted; // uA_per_cm2
        const double var_sodium_potassium_pump__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * NV_Ith_S(mParameters, 6)); // dimensionless
        const double var_sodium_potassium_pump__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + 0.036499999999999998 * var_sodium_potassium_pump__sigma * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // dimensionless
        const double var_sodium_potassium_pump__i_NaK = NV_Ith_S(mParameters, 9) * var_sodium_potassium_pump__f_NaK * var_sodium_potassium_pump__i_NaK_max * NV_Ith_S(mParameters, 5) / ((1.0 + pow((var_sodium_potassium_pump__Km_Na_i / var_chaste_interface__intracellular_ion_concentrations__Na_i), 1.5)) * (var_sodium_potassium_pump__Km_K_o + NV_Ith_S(mParameters, 5))); // picoA
        const double var_time_independent_potassium_current__E_K = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__intracellular_ion_concentrations__K_i) / var_membrane__F; // millivolt
        const double var_rapid_delayed_rectifier_K_current__i_Kr = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 9) * NV_Ith_S(mParameters, 14) * var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr / (1.0 + exp(0.66964285714285721 + 0.044642857142857144 * var_chaste_interface__membrane__V)); // picoA
        const double var_rapid_delayed_rectifier_K_current__i_Kr_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_rapid_delayed_rectifier_K_current__i_Kr / var_membrane__Cm_converted; // uA_per_cm2
        const double var_slow_delayed_rectifier_K_current__i_Ks = pow(var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs, 2) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 9) * NV_Ith_S(mParameters, 15); // picoA
        const double var_slow_delayed_rectifier_K_current__i_Ks_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_slow_delayed_rectifier_K_current__i_Ks / var_membrane__Cm_converted; // uA_per_cm2
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 9) * NV_Ith_S(mParameters, 13) / (1.0 + exp(5.6000000000000005 + 0.070000000000000007 * var_chaste_interface__membrane__V)); // picoA
        const double var_time_independent_potassium_current__i_K1_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_time_independent_potassium_current__i_K1 / var_membrane__Cm_converted; // uA_per_cm2
        const double var_transient_outward_K_current__i_to = pow(var_chaste_interface__transient_outward_K_current_oa_gate__oa, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 9) * NV_Ith_S(mParameters, 17) * var_chaste_interface__transient_outward_K_current_oi_gate__oi; // picoA
        const double var_transient_outward_K_current__i_to_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_transient_outward_K_current__i_to / var_membrane__Cm_converted; // uA_per_cm2
        const double var_ultrarapid_delayed_rectifier_K_current__g_Kur = 0.0050000000000000001 + 0.050000000000000003 / (1.0 + exp(1.1538461538461537 - 0.076923076923076927 * var_chaste_interface__membrane__V)); // nanoS_per_picoF
        const double var_ultrarapid_delayed_rectifier_K_current__i_Kur = pow(var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 9) * var_ultrarapid_delayed_rectifier_K_current__g_Kur * var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui; // picoA
        const double var_chaste_interface__i_ionic = ((var_L_type_Ca_channel__i_Ca_L_converted + var_Na_Ca_exchanger_current__i_NaCa_converted + var_fast_sodium_current__i_Na_converted + var_rapid_delayed_rectifier_K_current__i_Kr_converted + var_slow_delayed_rectifier_K_current__i_Ks_converted + var_time_independent_potassium_current__i_K1_converted + var_transient_outward_K_current__i_to_converted) * var_membrane__Cm_converted + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_background_currents__i_B_Ca + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_background_currents__i_B_Na + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_sarcolemmal_calcium_pump_current__i_CaP + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_sodium_potassium_pump__i_NaK + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_ultrarapid_delayed_rectifier_K_current__i_Kur) / var_membrane__Cm_converted; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellcourtemanche_ramirez_nattel_1998FromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -81.18
        double var_chaste_interface__intracellular_ion_concentrations__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0001013
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.002908
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.9649
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.9775
        double var_chaste_interface__transient_outward_K_current_oa_gate__oa = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.03043
        double var_chaste_interface__transient_outward_K_current_oi_gate__oi = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.9992
        double var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.004966
        double var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.9986
        double var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 3.296e-05
        double var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.01869
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.0001367
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.9996
        double var_chaste_interface__L_type_Ca_channel_f_Ca_gate__f_Ca = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.7755
        double var_chaste_interface__Ca_release_current_from_JSR_u_gate__u = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 2.35e-112
        double var_chaste_interface__Ca_release_current_from_JSR_v_gate__v = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ca_release_current_from_JSR_w_gate__w = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.9992
        double var_chaste_interface__intracellular_ion_concentrations__Na_i = NV_Ith_S(rY, 17);
        // Units: millimolar; Initial value: 11.17
        double var_chaste_interface__intracellular_ion_concentrations__K_i = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 139.0
        double var_chaste_interface__intracellular_ion_concentrations__Ca_rel = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 1.488
        double var_chaste_interface__intracellular_ion_concentrations__Ca_up = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 1.488

        // Mathematics
        double d_dt_chaste_interface_var_membrane__V;
        const double var_Ca_buffers__CMDN_max = 0.050000000000000003; // millimolar
        const double var_Ca_buffers__CSQN_max = 10.0; // millimolar
        const double var_Ca_buffers__Km_CMDN = 0.0023800000000000002; // millimolar
        const double var_Ca_buffers__Km_CSQN = 0.80000000000000004; // millimolar
        const double var_Ca_buffers__Km_TRPN = 0.00050000000000000001; // millimolar
        const double var_Ca_buffers__TRPN_max = 0.070000000000000007; // millimolar
        const double var_Ca_leak_current_by_the_NSR__Ca_up_max = 15.0; // millimolar
        const double var_Ca_release_current_from_JSR_u_gate__tau_u = 8.0; // millisecond
        const double var_Ca_uptake_current_by_the_NSR__K_up = 0.00092000000000000003; // millimolar
        const double var_Na_Ca_exchanger_current__K_mCa = 1.3799999999999999; // millimolar
        const double var_Na_Ca_exchanger_current__K_mNa = 87.5; // millimolar
        const double var_Na_Ca_exchanger_current__K_sat = 0.10000000000000001; // dimensionless
        const double var_Na_Ca_exchanger_current__gamma = 0.34999999999999998; // dimensionless
        const double var_background_currents__g_B_Ca = 0.0011310000000000001; // nanoS_per_picoF
        const double var_background_currents__g_B_K = 0; // nanoS_per_picoF
        const double var_background_currents__g_B_Na = 0.00067443750000000002; // nanoS_per_picoF
        const double var_Ca_uptake_current_by_the_NSR__i_up = NV_Ith_S(mParameters, 2) / (1.0 + var_Ca_uptake_current_by_the_NSR__K_up / var_chaste_interface__intracellular_ion_concentrations__Ca_i); // millimolar_per_millisecond
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca_infinity = 1 / (1.0 + 2857.1428571428573 * var_chaste_interface__intracellular_ion_concentrations__Ca_i); // dimensionless
        const double d_dt_chaste_interface_var_L_type_Ca_channel_f_Ca_gate__f_Ca = (-var_chaste_interface__L_type_Ca_channel_f_Ca_gate__f_Ca + var_L_type_Ca_channel_f_Ca_gate__f_Ca_infinity) / NV_Ith_S(mParameters, 8); // 1 / millisecond
        const double var_intracellular_ion_concentrations__B2 = 1.0 + var_Ca_buffers__CMDN_max * var_Ca_buffers__Km_CMDN / pow((var_Ca_buffers__Km_CMDN + var_chaste_interface__intracellular_ion_concentrations__Ca_i), 2) + var_Ca_buffers__Km_TRPN * var_Ca_buffers__TRPN_max / pow((var_Ca_buffers__Km_TRPN + var_chaste_interface__intracellular_ion_concentrations__Ca_i), 2); // dimensionless
        const double var_Ca_release_current_from_JSR__i_rel = pow(var_chaste_interface__Ca_release_current_from_JSR_u_gate__u, 2) * (-var_chaste_interface__intracellular_ion_concentrations__Ca_i + var_chaste_interface__intracellular_ion_concentrations__Ca_rel) * NV_Ith_S(mParameters, 1) * var_chaste_interface__Ca_release_current_from_JSR_v_gate__v * var_chaste_interface__Ca_release_current_from_JSR_w_gate__w; // millimolar_per_millisecond
        const double var_Ca_leak_current_by_the_NSR__i_up_leak = NV_Ith_S(mParameters, 0) * NV_Ith_S(mParameters, 2) * var_chaste_interface__intracellular_ion_concentrations__Ca_up / var_Ca_leak_current_by_the_NSR__Ca_up_max; // millimolar_per_millisecond
        const double var_intracellular_ion_concentrations__V_cell = 20100.0; // micrometre_3
        const double var_intracellular_ion_concentrations__V_i = 0.68000000000000005 * var_intracellular_ion_concentrations__V_cell; // micrometre_3
        const double var_intracellular_ion_concentrations__V_rel = 0.0047999999999999996 * var_intracellular_ion_concentrations__V_cell; // micrometre_3
        const double var_intracellular_ion_concentrations__V_up = 0.055199999999999999 * var_intracellular_ion_concentrations__V_cell; // micrometre_3
        const double var_membrane__F = 96.486699999999999; // coulomb_per_millimole
        const double var_membrane__R = 8.3142999999999994; // joule_per_mole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_Ca_release_current_from_JSR_w_gate__tau_w = ((fabs(-7.9000000000000004 + var_chaste_interface__membrane__V) < 4.999999999970306e-7) ? (12000000.000154532 * (1.0 - exp(-9.9999999998712227e-8)) / (1.0 + 0.29999999999999999 * exp(-9.9999999998712227e-8)) - 1000000.0000059388 * (-7.9000005 + var_chaste_interface__membrane__V) * (-11999999.999987999 * (1.0 - exp(1.0000000000010001e-7)) / (1.0 + 0.29999999999999999 * exp(1.0000000000010001e-7)) - 12000000.000154532 * (1.0 - exp(-9.9999999998712227e-8)) / (1.0 + 0.29999999999999999 * exp(-9.9999999998712227e-8)))) : (6.0 * (1.0 - exp(1.5800000000000001 - 0.20000000000000001 * var_chaste_interface__membrane__V)) / ((1.0 + 0.29999999999999999 * exp(1.5800000000000001 - 0.20000000000000001 * var_chaste_interface__membrane__V)) * (-7.9000000000000004 + var_chaste_interface__membrane__V)))); // millisecond
        const double var_Ca_release_current_from_JSR_w_gate__w_infinity = 1.0 - 1 / (1.0 + exp(2.3529411764705883 - 0.058823529411764705 * var_chaste_interface__membrane__V)); // dimensionless
        const double d_dt_chaste_interface_var_Ca_release_current_from_JSR_w_gate__w = (-var_chaste_interface__Ca_release_current_from_JSR_w_gate__w + var_Ca_release_current_from_JSR_w_gate__w_infinity) / var_Ca_release_current_from_JSR_w_gate__tau_w; // 1 / millisecond
        const double var_L_type_Ca_channel__i_Ca_L = (-65.0 + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 7) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f * NV_Ith_S(mParameters, 9); // picoA
        const double var_L_type_Ca_channel_d_gate__d_infinity = 1 / (1.0 + exp(-1.25 - 0.125 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_L_type_Ca_channel_d_gate__tau_d = ((fabs(10.0 + var_chaste_interface__membrane__V) < 6.2399999999074307e-7) ? (45787545.788225032 * (1.0 - exp(-9.999999999851651e-8)) / (1.0 + exp(-9.999999999851651e-8)) - 801282.05129393819 * (9.9999993759999999 + var_chaste_interface__membrane__V) * (-45787545.788225032 * (1.0 - exp(9.999999999851651e-8)) / (1.0 + exp(9.999999999851651e-8)) - 45787545.788225032 * (1.0 - exp(-9.999999999851651e-8)) / (1.0 + exp(-9.999999999851651e-8)))) : (28.571428571428569 * (1.0 - exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V)) / ((1.0 + exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V)) * (10.0 + var_chaste_interface__membrane__V)))); // millisecond
        const double d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d = (-var_chaste_interface__L_type_Ca_channel_d_gate__d + var_L_type_Ca_channel_d_gate__d_infinity) / var_L_type_Ca_channel_d_gate__tau_d; // 1 / millisecond
        const double var_L_type_Ca_channel_f_gate__f_infinity = exp(-4.057971014492753 - 0.14492753623188406 * var_chaste_interface__membrane__V) / (1.0 + exp(-4.057971014492753 - 0.14492753623188406 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_L_type_Ca_channel_f_gate__tau_f = 9.0 / (0.02 + 0.019699999999999999 * exp(-0.113569 * pow((1 + 0.10000000000000001 * var_chaste_interface__membrane__V), 2))); // millisecond
        const double d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f = (-var_chaste_interface__L_type_Ca_channel_f_gate__f + var_L_type_Ca_channel_f_gate__f_infinity) / var_L_type_Ca_channel_f_gate__tau_f; // 1 / millisecond
        const double var_fast_sodium_current_h_gate__alpha_h = ((var_chaste_interface__membrane__V < -40.0) ? (0.13500000000000001 * exp(-11.764705882352942 + 0.14705882352941177 * NV_Ith_S(mParameters, 12) - 0.14705882352941177 * var_chaste_interface__membrane__V)) : (0)); // per_millisecond
        const double var_fast_sodium_current_h_gate__beta_h = ((var_chaste_interface__membrane__V < -40.0) ? (310000.0 * exp(0.34999999999999998 * var_chaste_interface__membrane__V - 0.34999999999999998 * NV_Ith_S(mParameters, 12)) + 3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__membrane__V - 0.079000000000000001 * NV_Ith_S(mParameters, 12))) : (7.6923076923076916 / (1.0 + exp(-0.96036036036036043 + 0.0900900900900901 * NV_Ith_S(mParameters, 12) - 0.0900900900900901 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_fast_sodium_current_h_gate__h_inf = 0.01 * NV_Ith_S(mParameters, 11) + (1.0 - 0.01 * NV_Ith_S(mParameters, 11)) * var_fast_sodium_current_h_gate__alpha_h / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h); // dimensionless
        const double var_fast_sodium_current_h_gate__tau_h = 1 / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h); // millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_h_gate__h = (-var_chaste_interface__fast_sodium_current_h_gate__h + var_fast_sodium_current_h_gate__h_inf) / var_fast_sodium_current_h_gate__tau_h; // 1 / millisecond
        const double var_fast_sodium_current_j_gate__alpha_j = ((var_chaste_interface__membrane__V < -40.0) ? ((37.780000000000001 + var_chaste_interface__membrane__V) * (-127140.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__V - 0.24440000000000001 * NV_Ith_S(mParameters, 12)) - 3.4740000000000003e-5 * exp(0.043909999999999998 * NV_Ith_S(mParameters, 12) - 0.043909999999999998 * var_chaste_interface__membrane__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V - 0.311 * NV_Ith_S(mParameters, 12)))) : (0)); // per_millisecond
        const double var_fast_sodium_current_j_gate__beta_j = ((var_chaste_interface__membrane__V < -40.0) ? (0.1212 * exp(0.01052 * NV_Ith_S(mParameters, 12) - 0.01052 * var_chaste_interface__membrane__V) / (1.0 + exp(-5.5312920000000005 + 0.13780000000000001 * NV_Ith_S(mParameters, 12) - 0.13780000000000001 * var_chaste_interface__membrane__V))) : (0.29999999999999999 * exp(2.5349999999999999e-7 * NV_Ith_S(mParameters, 12) - 2.5349999999999999e-7 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.2000000000000002 + 0.10000000000000001 * NV_Ith_S(mParameters, 12) - 0.10000000000000001 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_fast_sodium_current_j_gate__j_inf = 0.01 * NV_Ith_S(mParameters, 11) + (1.0 - 0.01 * NV_Ith_S(mParameters, 11)) * var_fast_sodium_current_j_gate__alpha_j / (var_fast_sodium_current_j_gate__alpha_j + var_fast_sodium_current_j_gate__beta_j); // dimensionless
        const double var_fast_sodium_current_j_gate__tau_j = 1 / (var_fast_sodium_current_j_gate__alpha_j + var_fast_sodium_current_j_gate__beta_j); // millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_j_gate__j = (-var_chaste_interface__fast_sodium_current_j_gate__j + var_fast_sodium_current_j_gate__j_inf) / var_fast_sodium_current_j_gate__tau_j; // 1 / millisecond
        const double var_fast_sodium_current_m_gate__alpha_m = ((fabs(47.130000000000003 + var_chaste_interface__membrane__V) < 1.0000000000287557e-6) ? (3.200000000092018e-7 / (1.0 - exp(-1.0000000000287557e-7)) - 499999.99998562218 * (47.129999000000005 + var_chaste_interface__membrane__V) * (-3.200000000092018e-7 / (1.0 - exp(1.0000000000287557e-7)) - 3.200000000092018e-7 / (1.0 - exp(-1.0000000000287557e-7)))) : (0.32000000000000001 * (47.130000000000003 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.7130000000000001 - 0.10000000000000001 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_fast_sodium_current_m_gate__beta_m = 0.080000000000000002 * exp(-0.090909090909090912 * var_chaste_interface__membrane__V); // per_millisecond
        const double var_fast_sodium_current_m_gate__m_inf = var_fast_sodium_current_m_gate__alpha_m / (var_fast_sodium_current_m_gate__alpha_m + var_fast_sodium_current_m_gate__beta_m); // dimensionless
        const double var_fast_sodium_current_m_gate__tau_m = 1 / (var_fast_sodium_current_m_gate__alpha_m + var_fast_sodium_current_m_gate__beta_m); // millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_m_gate__m = (-var_chaste_interface__fast_sodium_current_m_gate__m + var_fast_sodium_current_m_gate__m_inf) / var_fast_sodium_current_m_gate__tau_m; // 1 / millisecond
        const double var_rapid_delayed_rectifier_K_current_xr_gate__alpha_xr = ((fabs(14.1 + var_chaste_interface__membrane__V) < 4.9999999999356115e-7) ? (1.4999999999598667e-10 / (1.0 - exp(-9.9999999997324457e-8)) - 1000000.0000128777 * (14.099999499999999 + var_chaste_interface__membrane__V) * (-1.5000000000015e-10 / (1.0 - exp(1.0000000000010001e-7)) - 1.4999999999598667e-10 / (1.0 - exp(-9.9999999997324457e-8)))) : (0.00029999999999999997 * (14.1 + var_chaste_interface__membrane__V) / (1.0 - exp(-2.8199999999999998 - 0.20000000000000001 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_rapid_delayed_rectifier_K_current_xr_gate__beta_xr = ((fabs(-3.3328000000000002 + var_chaste_interface__membrane__V) < 5.1237000000051158e-7) ? (-3.7863118260037805e-11 / (-1.0 + exp(-1.0000000000009984e-7)) + 975857.29062884394 * (-3.33279948763 + var_chaste_interface__membrane__V) * (3.7863118260037805e-11 / (-1.0 + exp(1.0000000000009984e-7)) + 3.7863118260037805e-11 / (-1.0 + exp(-1.0000000000009984e-7)))) : (7.3898000000000003e-5 * (-3.3328000000000002 + var_chaste_interface__membrane__V) / (-1.0 + exp(-0.65046743564221166 + 0.19517145812596365 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_rapid_delayed_rectifier_K_current_xr_gate__tau_xr = 1 / (var_rapid_delayed_rectifier_K_current_xr_gate__alpha_xr + var_rapid_delayed_rectifier_K_current_xr_gate__beta_xr); // millisecond
        const double var_rapid_delayed_rectifier_K_current_xr_gate__xr_infinity = 1 / (1.0 + exp(-2.1692307692307691 - 0.15384615384615385 * var_chaste_interface__membrane__V)); // dimensionless
        const double d_dt_chaste_interface_var_rapid_delayed_rectifier_K_current_xr_gate__xr = (-var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr + var_rapid_delayed_rectifier_K_current_xr_gate__xr_infinity) / var_rapid_delayed_rectifier_K_current_xr_gate__tau_xr; // 1 / millisecond
        const double var_sarcolemmal_calcium_pump_current__i_CaP_max = 0.27500000000000002; // picoA_per_picoF
        const double var_sarcolemmal_calcium_pump_current__i_CaP = var_chaste_interface__intracellular_ion_concentrations__Ca_i * NV_Ith_S(mParameters, 9) * var_sarcolemmal_calcium_pump_current__i_CaP_max / (0.00050000000000000001 + var_chaste_interface__intracellular_ion_concentrations__Ca_i); // picoA
        const double var_slow_delayed_rectifier_K_current_xs_gate__alpha_xs = ((fabs(-19.899999999999999 + var_chaste_interface__membrane__V) < 1.6999999999933735e-6) ? (6.7999999999734951e-11 / (1.0 - exp(-9.9999999999610202e-8)) - 294117.64705997001 * (-19.900001699999997 + var_chaste_interface__membrane__V) * (-6.7999999999734951e-11 / (1.0 - exp(9.9999999999610202e-8)) - 6.7999999999734951e-11 / (1.0 - exp(-9.9999999999610202e-8)))) : (4.0000000000000003e-5 * (-19.899999999999999 + var_chaste_interface__membrane__V) / (1.0 - exp(1.1705882352941175 - 0.058823529411764705 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_slow_delayed_rectifier_K_current_xs_gate__beta_xs = ((fabs(-19.899999999999999 + var_chaste_interface__membrane__V) < 8.9999999999812452e-7) ? (-3.1499999999934357e-11 / (-1.0 + exp(-9.9999999999791612e-8)) + 555555.55555671325 * (-19.899999099999999 + var_chaste_interface__membrane__V) * (3.1499999999934357e-11 / (-1.0 + exp(9.9999999999791612e-8)) + 3.1499999999934357e-11 / (-1.0 + exp(-9.9999999999791612e-8)))) : (3.4999999999999997e-5 * (-19.899999999999999 + var_chaste_interface__membrane__V) / (-1.0 + exp(-2.2111111111111108 + 0.1111111111111111 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_slow_delayed_rectifier_K_current_xs_gate__tau_xs = 0.5 / (var_slow_delayed_rectifier_K_current_xs_gate__alpha_xs + var_slow_delayed_rectifier_K_current_xs_gate__beta_xs); // millisecond
        const double var_slow_delayed_rectifier_K_current_xs_gate__xs_infinity = pow((1.0 + exp(1.5669291338582676 - 0.07874015748031496 * var_chaste_interface__membrane__V)), (-0.5)); // dimensionless
        const double d_dt_chaste_interface_var_slow_delayed_rectifier_K_current_xs_gate__xs = (-var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs + var_slow_delayed_rectifier_K_current_xs_gate__xs_infinity) / var_slow_delayed_rectifier_K_current_xs_gate__tau_xs; // 1 / millisecond
        const double var_sodium_potassium_pump__Km_K_o = 1.5; // millimolar
        const double var_sodium_potassium_pump__Km_Na_i = 10.0; // millimolar
        const double var_sodium_potassium_pump__i_NaK_max = 0.59933873999999998; // picoA_per_picoF
        const double var_background_currents__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__intracellular_ion_concentrations__Ca_i) / var_membrane__F; // millivolt
        const double var_background_currents__i_B_Ca = (-var_background_currents__E_Ca + var_chaste_interface__membrane__V) * var_background_currents__g_B_Ca * NV_Ith_S(mParameters, 9); // picoA
        const double var_Na_Ca_exchanger_current__i_NaCa = (pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * NV_Ith_S(mParameters, 4) * exp(var_Na_Ca_exchanger_current__gamma * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) - pow(NV_Ith_S(mParameters, 6), 3) * var_chaste_interface__intracellular_ion_concentrations__Ca_i * exp((-1.0 + var_Na_Ca_exchanger_current__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * NV_Ith_S(mParameters, 16) * NV_Ith_S(mParameters, 9) / ((1.0 + var_Na_Ca_exchanger_current__K_sat * exp((-1.0 + var_Na_Ca_exchanger_current__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * (pow(var_Na_Ca_exchanger_current__K_mNa, 3) + pow(NV_Ith_S(mParameters, 6), 3)) * (var_Na_Ca_exchanger_current__K_mCa + NV_Ith_S(mParameters, 4))); // picoA
        const double var_Ca_release_current_from_JSR__Fn = 9.9999999999999998e-13 * var_Ca_release_current_from_JSR__i_rel * var_intracellular_ion_concentrations__V_rel - 4.9999999999999999e-13 * (0.5 * var_L_type_Ca_channel__i_Ca_L - 0.20000000000000001 * var_Na_Ca_exchanger_current__i_NaCa) / var_membrane__F; // dimensionless
        const double var_Ca_release_current_from_JSR_u_gate__u_infinity = 1 / (1.0 + exp(250.0 - 731528895391368.0 * var_Ca_release_current_from_JSR__Fn)); // dimensionless
        const double var_Ca_release_current_from_JSR_v_gate__tau_v = 1.9099999999999999 + 2.0899999999999999 / (1.0 + exp(250.0 - 731528895391368.0 * var_Ca_release_current_from_JSR__Fn)); // millisecond
        const double var_Ca_release_current_from_JSR_v_gate__v_infinity = 1.0 - 1 / (1.0 + exp(50.0 - 731528895391368.0 * var_Ca_release_current_from_JSR__Fn)); // dimensionless
        const double d_dt_chaste_interface_var_Ca_release_current_from_JSR_u_gate__u = (-var_chaste_interface__Ca_release_current_from_JSR_u_gate__u + var_Ca_release_current_from_JSR_u_gate__u_infinity) / var_Ca_release_current_from_JSR_u_gate__tau_u; // 1 / millisecond
        const double d_dt_chaste_interface_var_Ca_release_current_from_JSR_v_gate__v = (-var_chaste_interface__Ca_release_current_from_JSR_v_gate__v + var_Ca_release_current_from_JSR_v_gate__v_infinity) / var_Ca_release_current_from_JSR_v_gate__tau_v; // 1 / millisecond
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 6) / var_chaste_interface__intracellular_ion_concentrations__Na_i) / var_membrane__F; // millivolt
        const double var_background_currents__i_B_Na = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_background_currents__g_B_Na * NV_Ith_S(mParameters, 9); // picoA
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 10) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j * NV_Ith_S(mParameters, 9); // picoA
        const double var_intracellular_ion_concentrations__B1 = ((-var_Ca_uptake_current_by_the_NSR__i_up + var_Ca_leak_current_by_the_NSR__i_up_leak) * var_intracellular_ion_concentrations__V_up + var_Ca_release_current_from_JSR__i_rel * var_intracellular_ion_concentrations__V_rel) / var_intracellular_ion_concentrations__V_i + 0.5 * (-var_L_type_Ca_channel__i_Ca_L - var_background_currents__i_B_Ca - var_sarcolemmal_calcium_pump_current__i_CaP + 2.0 * var_Na_Ca_exchanger_current__i_NaCa) / (var_intracellular_ion_concentrations__V_i * var_membrane__F); // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__Ca_i = var_intracellular_ion_concentrations__B1 / var_intracellular_ion_concentrations__B2; // millimolar / millisecond
        const double var_sodium_potassium_pump__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * NV_Ith_S(mParameters, 6)); // dimensionless
        const double var_sodium_potassium_pump__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + 0.036499999999999998 * var_sodium_potassium_pump__sigma * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // dimensionless
        const double var_sodium_potassium_pump__i_NaK = NV_Ith_S(mParameters, 9) * var_sodium_potassium_pump__f_NaK * var_sodium_potassium_pump__i_NaK_max * NV_Ith_S(mParameters, 5) / ((1.0 + pow((var_sodium_potassium_pump__Km_Na_i / var_chaste_interface__intracellular_ion_concentrations__Na_i), 1.5)) * (var_sodium_potassium_pump__Km_K_o + NV_Ith_S(mParameters, 5))); // picoA
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__Na_i = (-var_background_currents__i_B_Na - var_fast_sodium_current__i_Na - 3.0 * var_Na_Ca_exchanger_current__i_NaCa - 3.0 * var_sodium_potassium_pump__i_NaK) * NV_Ith_S(mParameters, 3) / (var_intracellular_ion_concentrations__V_i * var_membrane__F); // millimolar / millisecond
        const double var_time_independent_potassium_current__E_K = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__intracellular_ion_concentrations__K_i) / var_membrane__F; // millivolt
        const double var_background_currents__i_B_K = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_background_currents__g_B_K * NV_Ith_S(mParameters, 9); // picoA
        const double var_rapid_delayed_rectifier_K_current__i_Kr = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 9) * NV_Ith_S(mParameters, 14) * var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr / (1.0 + exp(0.66964285714285721 + 0.044642857142857144 * var_chaste_interface__membrane__V)); // picoA
        const double var_slow_delayed_rectifier_K_current__i_Ks = pow(var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs, 2) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 9) * NV_Ith_S(mParameters, 15); // picoA
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 9) * NV_Ith_S(mParameters, 13) / (1.0 + exp(5.6000000000000005 + 0.070000000000000007 * var_chaste_interface__membrane__V)); // picoA
        const double var_transfer_current_from_NSR_to_JSR__tau_tr = 180.0; // millisecond
        const double var_transfer_current_from_NSR_to_JSR__i_tr = (-var_chaste_interface__intracellular_ion_concentrations__Ca_rel + var_chaste_interface__intracellular_ion_concentrations__Ca_up) / var_transfer_current_from_NSR_to_JSR__tau_tr; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__Ca_rel = (-var_Ca_release_current_from_JSR__i_rel + var_transfer_current_from_NSR_to_JSR__i_tr) / (1.0 + var_Ca_buffers__CSQN_max * var_Ca_buffers__Km_CSQN / pow((var_Ca_buffers__Km_CSQN + var_chaste_interface__intracellular_ion_concentrations__Ca_rel), 2)); // millimolar / millisecond
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__Ca_up = -var_Ca_leak_current_by_the_NSR__i_up_leak - var_intracellular_ion_concentrations__V_rel * var_transfer_current_from_NSR_to_JSR__i_tr / var_intracellular_ion_concentrations__V_up + var_Ca_uptake_current_by_the_NSR__i_up; // millimolar / millisecond
        const double var_transient_outward_K_current__K_Q10 = 3.0; // dimensionless
        const double var_transient_outward_K_current_oa_gate__alpha_oa = 0.65000000000000002 / (exp(0.50847457627118642 - 0.016949152542372881 * var_chaste_interface__membrane__V) + exp(-1.1764705882352942 - 0.11764705882352941 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_transient_outward_K_current_oa_gate__beta_oa = 0.65000000000000002 / (2.5 + exp(4.8235294117647056 + 0.058823529411764705 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_transient_outward_K_current_oa_gate__oa_infinity = 1 / (1.0 + exp(-1.1670467502850628 - 0.057012542759407071 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_transient_outward_K_current_oa_gate__tau_oa = 1 / ((var_transient_outward_K_current_oa_gate__alpha_oa + var_transient_outward_K_current_oa_gate__beta_oa) * var_transient_outward_K_current__K_Q10); // millisecond
        const double d_dt_chaste_interface_var_transient_outward_K_current_oa_gate__oa = (-var_chaste_interface__transient_outward_K_current_oa_gate__oa + var_transient_outward_K_current_oa_gate__oa_infinity) / var_transient_outward_K_current_oa_gate__tau_oa; // 1 / millisecond
        const double var_transient_outward_K_current_oi_gate__alpha_oi = 1 / (18.530000000000001 + exp(10.383561643835618 + 0.091324200913242018 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_transient_outward_K_current_oi_gate__beta_oi = 1 / (35.560000000000002 + exp(-0.16935483870967738 - 0.13440860215053763 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_transient_outward_K_current__i_to = pow(var_chaste_interface__transient_outward_K_current_oa_gate__oa, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 9) * NV_Ith_S(mParameters, 17) * var_chaste_interface__transient_outward_K_current_oi_gate__oi; // picoA
        const double var_transient_outward_K_current_oi_gate__oi_infinity = 1 / (1.0 + exp(8.1320754716981138 + 0.18867924528301888 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_transient_outward_K_current_oi_gate__tau_oi = 1 / ((var_transient_outward_K_current_oi_gate__alpha_oi + var_transient_outward_K_current_oi_gate__beta_oi) * var_transient_outward_K_current__K_Q10); // millisecond
        const double d_dt_chaste_interface_var_transient_outward_K_current_oi_gate__oi = (-var_chaste_interface__transient_outward_K_current_oi_gate__oi + var_transient_outward_K_current_oi_gate__oi_infinity) / var_transient_outward_K_current_oi_gate__tau_oi; // 1 / millisecond
        const double var_ultrarapid_delayed_rectifier_K_current__g_Kur = 0.0050000000000000001 + 0.050000000000000003 / (1.0 + exp(1.1538461538461537 - 0.076923076923076927 * var_chaste_interface__membrane__V)); // nanoS_per_picoF
        const double var_ultrarapid_delayed_rectifier_K_current_ua_gate__alpha_ua = 0.65000000000000002 / (exp(0.50847457627118642 - 0.016949152542372881 * var_chaste_interface__membrane__V) + exp(-1.1764705882352942 - 0.11764705882352941 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_ultrarapid_delayed_rectifier_K_current_ua_gate__beta_ua = 0.65000000000000002 / (2.5 + exp(4.8235294117647056 + 0.058823529411764705 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_ultrarapid_delayed_rectifier_K_current_ua_gate__tau_ua = 1 / ((var_ultrarapid_delayed_rectifier_K_current_ua_gate__alpha_ua + var_ultrarapid_delayed_rectifier_K_current_ua_gate__beta_ua) * var_transient_outward_K_current__K_Q10); // millisecond
        const double var_ultrarapid_delayed_rectifier_K_current_ua_gate__ua_infinity = 1 / (1.0 + exp(-3.15625 - 0.10416666666666667 * var_chaste_interface__membrane__V)); // dimensionless
        const double d_dt_chaste_interface_var_ultrarapid_delayed_rectifier_K_current_ua_gate__ua = (-var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua + var_ultrarapid_delayed_rectifier_K_current_ua_gate__ua_infinity) / var_ultrarapid_delayed_rectifier_K_current_ua_gate__tau_ua; // 1 / millisecond
        const double var_ultrarapid_delayed_rectifier_K_current_ui_gate__alpha_ui = 1 / (21.0 + exp(6.6071428571428568 - 0.035714285714285712 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_ultrarapid_delayed_rectifier_K_current_ui_gate__beta_ui = 1 / exp(9.875 - 0.0625 * var_chaste_interface__membrane__V); // per_millisecond
        const double var_ultrarapid_delayed_rectifier_K_current_ui_gate__tau_ui = 1 / ((var_ultrarapid_delayed_rectifier_K_current_ui_gate__alpha_ui + var_ultrarapid_delayed_rectifier_K_current_ui_gate__beta_ui) * var_transient_outward_K_current__K_Q10); // millisecond
        const double var_ultrarapid_delayed_rectifier_K_current__i_Kur = pow(var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 9) * var_ultrarapid_delayed_rectifier_K_current__g_Kur * var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui; // picoA
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__K_i = (-var_background_currents__i_B_K - var_rapid_delayed_rectifier_K_current__i_Kr - var_slow_delayed_rectifier_K_current__i_Ks - var_time_independent_potassium_current__i_K1 - var_transient_outward_K_current__i_to - var_ultrarapid_delayed_rectifier_K_current__i_Kur + 2.0 * var_sodium_potassium_pump__i_NaK) * NV_Ith_S(mParameters, 3) / (var_intracellular_ion_concentrations__V_i * var_membrane__F); // millimolar / millisecond
        const double var_ultrarapid_delayed_rectifier_K_current_ui_gate__ui_infinity = 1 / (1.0 + exp(-3.6189956331877728 + 0.036390101892285295 * var_chaste_interface__membrane__V)); // dimensionless
        const double d_dt_chaste_interface_var_ultrarapid_delayed_rectifier_K_current_ui_gate__ui = (-var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui + var_ultrarapid_delayed_rectifier_K_current_ui_gate__ui_infinity) / var_ultrarapid_delayed_rectifier_K_current_ui_gate__tau_ui; // 1 / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_membrane__V = 0.0;
        }
        else
        {
            const double var_membrane__Cm_converted = 9.9999999999999995e-7 * NV_Ith_S(mParameters, 9); // uF
            const double var_membrane__i_st_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
            const double var_membrane__i_st = 1000000.0 * var_membrane__Cm_converted * var_membrane__i_st_converted / HeartConfig::Instance()->GetCapacitance(); // picoA
            d_dt_chaste_interface_var_membrane__V = (-var_L_type_Ca_channel__i_Ca_L - var_Na_Ca_exchanger_current__i_NaCa - var_background_currents__i_B_Ca - var_background_currents__i_B_Na - var_fast_sodium_current__i_Na - var_membrane__i_st - var_rapid_delayed_rectifier_K_current__i_Kr - var_sarcolemmal_calcium_pump_current__i_CaP - var_slow_delayed_rectifier_K_current__i_Ks - var_sodium_potassium_pump__i_NaK - var_time_independent_potassium_current__i_K1 - var_transient_outward_K_current__i_to - var_ultrarapid_delayed_rectifier_K_current__i_Kur) / NV_Ith_S(mParameters, 9); // millivolt / millisecond
        }
        
        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_membrane__V;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_intracellular_ion_concentrations__Ca_i;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_fast_sodium_current_m_gate__m;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_fast_sodium_current_h_gate__h;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_fast_sodium_current_j_gate__j;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_transient_outward_K_current_oa_gate__oa;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_transient_outward_K_current_oi_gate__oi;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_ultrarapid_delayed_rectifier_K_current_ua_gate__ua;
        NV_Ith_S(rDY,8) = d_dt_chaste_interface_var_ultrarapid_delayed_rectifier_K_current_ui_gate__ui;
        NV_Ith_S(rDY,9) = d_dt_chaste_interface_var_rapid_delayed_rectifier_K_current_xr_gate__xr;
        NV_Ith_S(rDY,10) = d_dt_chaste_interface_var_slow_delayed_rectifier_K_current_xs_gate__xs;
        NV_Ith_S(rDY,11) = d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d;
        NV_Ith_S(rDY,12) = d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f;
        NV_Ith_S(rDY,13) = d_dt_chaste_interface_var_L_type_Ca_channel_f_Ca_gate__f_Ca;
        NV_Ith_S(rDY,14) = d_dt_chaste_interface_var_Ca_release_current_from_JSR_u_gate__u;
        NV_Ith_S(rDY,15) = d_dt_chaste_interface_var_Ca_release_current_from_JSR_v_gate__v;
        NV_Ith_S(rDY,16) = d_dt_chaste_interface_var_Ca_release_current_from_JSR_w_gate__w;
        NV_Ith_S(rDY,17) = d_dt_chaste_interface_var_intracellular_ion_concentrations__Na_i;
        NV_Ith_S(rDY,18) = d_dt_chaste_interface_var_intracellular_ion_concentrations__K_i;
        NV_Ith_S(rDY,19) = d_dt_chaste_interface_var_intracellular_ion_concentrations__Ca_rel;
        NV_Ith_S(rDY,20) = d_dt_chaste_interface_var_intracellular_ion_concentrations__Ca_up;
    }

    void Cellcourtemanche_ramirez_nattel_1998FromCellMLCvode::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -81.18
        double var_chaste_interface__intracellular_ion_concentrations__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0001013
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.002908
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.9649
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.9775
        double var_chaste_interface__transient_outward_K_current_oa_gate__oa = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.03043
        double var_chaste_interface__transient_outward_K_current_oi_gate__oi = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.9992
        double var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.004966
        double var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.9986
        double var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 3.296e-05
        double var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.01869
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.0001367
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.9996
        double var_chaste_interface__L_type_Ca_channel_f_Ca_gate__f_Ca = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.7755
        double var_chaste_interface__Ca_release_current_from_JSR_u_gate__u = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 2.35e-112
        double var_chaste_interface__Ca_release_current_from_JSR_v_gate__v = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ca_release_current_from_JSR_w_gate__w = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.9992
        double var_chaste_interface__intracellular_ion_concentrations__Na_i = NV_Ith_S(rY, 17);
        // Units: millimolar; Initial value: 11.17
        double var_chaste_interface__intracellular_ion_concentrations__K_i = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 139.0
        double var_chaste_interface__intracellular_ion_concentrations__Ca_rel = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 1.488
        double var_chaste_interface__intracellular_ion_concentrations__Ca_up = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 1.488
        const double var_x0 = 1 / NV_Ith_S(mParameters, 9);
        const double var_x1 = exp(5.6000000000000005 + 0.070000000000000007 * var_chaste_interface__membrane__V);
        const double var_x2 = 1.0 + var_x1;
        const double var_x3 = NV_Ith_S(mParameters, 9) * NV_Ith_S(mParameters, 13);
        const double var_x4 = var_x3 / var_x2;
        const double var_x5 = NV_Ith_S(mParameters, 9) * NV_Ith_S(mParameters, 15);
        const double var_x6 = var_x5 * pow(var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs, 2);
        const double var_x7 = exp(0.66964285714285721 + 0.044642857142857144 * var_chaste_interface__membrane__V);
        const double var_x8 = 1.0 + var_x7;
        const double var_x9 = NV_Ith_S(mParameters, 14) / var_x8;
        const double var_x10 = NV_Ith_S(mParameters, 9) * var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr;
        const double var_x11 = var_x10 * var_x9;
        const double var_x12 = pow(var_chaste_interface__transient_outward_K_current_oa_gate__oa, 3) * NV_Ith_S(mParameters, 17);
        const double var_x13 = NV_Ith_S(mParameters, 9) * var_chaste_interface__transient_outward_K_current_oi_gate__oi;
        const double var_x14 = var_x12 * var_x13;
        const double var_x15 = pow(var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua, 3);
        const double var_x16 = exp(1.1538461538461537 - 0.076923076923076927 * var_chaste_interface__membrane__V);
        const double var_x17 = 1.0 + var_x16;
        const double var_x18 = 0.0050000000000000001 + 0.050000000000000003 / var_x17;
        const double var_x19 = var_x15 * var_x18;
        const double var_x20 = NV_Ith_S(mParameters, 9) * var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui;
        const double var_x21 = var_x19 * var_x20;
        const double var_x22 = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3);
        const double var_x23 = NV_Ith_S(mParameters, 10) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j;
        const double var_x24 = var_x22 * var_x23;
        const double var_x25 = var_x24 * NV_Ith_S(mParameters, 9);
        const double var_x26 = var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f;
        const double var_x27 = NV_Ith_S(mParameters, 7) * var_chaste_interface__L_type_Ca_channel_f_Ca_gate__f_Ca;
        const double var_x28 = var_x27 * NV_Ith_S(mParameters, 9);
        const double var_x29 = var_x26 * var_x28;
        const double var_x30 = 1 / var_chaste_interface__intracellular_ion_concentrations__K_i;
        const double var_x31 = -26.712831923985377 * log(var_x30 * NV_Ith_S(mParameters, 5)) + var_chaste_interface__membrane__V;
        const double var_x32 = var_x1 * var_x3 * var_x31 / pow(var_x2, 2);
        const double var_x33 = exp(-0.024332874996168673 * var_chaste_interface__membrane__V);
        const double var_x34 = pow(NV_Ith_S(mParameters, 6), 3);
        const double var_x35 = var_x33 * var_x34;
        const double var_x36 = var_x35 * var_chaste_interface__intracellular_ion_concentrations__Ca_i;
        const double var_x37 = NV_Ith_S(mParameters, 4) * exp(0.013102317305629283 * var_chaste_interface__membrane__V);
        const double var_x38 = var_x37 * pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3);
        const double var_x39 = 1.0 + 0.10000000000000001 * var_x33;
        const double var_x40 = NV_Ith_S(mParameters, 16) * NV_Ith_S(mParameters, 9) / ((669921.875 + var_x34) * (1.3799999999999999 + NV_Ith_S(mParameters, 4)));
        const double var_x41 = var_x40 / var_x39;
        const double var_x42 = var_x41 * (0.024332874996168673 * var_x36 + 0.013102317305629283 * var_x38);
        const double var_x43 = var_x10 * var_x31 * var_x7 * NV_Ith_S(mParameters, 14) / pow(var_x8, 2);
        const double var_x44 = 1 / var_chaste_interface__intracellular_ion_concentrations__Na_i;
        const double var_x45 = pow(var_x44, 1.5);
        const double var_x46 = exp(-0.0037435192301797956 * var_chaste_interface__membrane__V);
        const double var_x47 = exp(0.01485884101040119 * NV_Ith_S(mParameters, 6));
        const double var_x48 = exp(-0.037435192301797954 * var_chaste_interface__membrane__V);
        const double var_x49 = 1.0 + 0.1245 * var_x46 + 0.036499999999999998 * var_x48 * (-0.14285714285714285 + 0.14285714285714285 * var_x47);
        const double var_x50 = NV_Ith_S(mParameters, 5) / (1.5 + NV_Ith_S(mParameters, 5));
        const double var_x51 = var_x50 * (0.00046606814415738453 * var_x46 + 0.037435192301797954 * var_x48 * (-0.0052142857142857138 + 0.0052142857142857138 * var_x47)) * NV_Ith_S(mParameters, 9) / (pow(var_x49, 2) * (1.0 + 31.622776601683793 * var_x45));
        const double var_x52 = var_x20 * var_x31;
        const double var_x53 = var_x15 * var_x16 * var_x52 / pow(var_x17, 2);
        const double var_x54 = var_x38 - var_x36;
        const double var_x55 = var_x33 * var_x40 * var_x54 / pow(var_x39, 2);
        const double var_x56 = 0.00050000000000000001 + var_chaste_interface__intracellular_ion_concentrations__Ca_i;
        const double var_x57 = NV_Ith_S(mParameters, 9) / var_x56;
        const double var_x58 = 1 / var_chaste_interface__intracellular_ion_concentrations__Ca_i;
        const double var_x59 = var_x58 * NV_Ith_S(mParameters, 9);
        const double var_x60 = pow(var_x56, (-2));
        const double var_x61 = var_x60 * var_chaste_interface__intracellular_ion_concentrations__Ca_i * NV_Ith_S(mParameters, 9);
        const double var_x62 = var_x35 * var_x41;
        const double var_x63 = -26.712831923985377 * log(var_x44 * NV_Ith_S(mParameters, 6)) + var_chaste_interface__membrane__V;
        const double var_x64 = var_x23 * var_x63 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 2);
        const double var_x65 = var_x22 * var_x63 * NV_Ith_S(mParameters, 10);
        const double var_x66 = var_x65 * var_chaste_interface__fast_sodium_current_j_gate__j;
        const double var_x67 = var_x65 * var_chaste_interface__fast_sodium_current_h_gate__h;
        const double var_x68 = 3 * var_x31;
        const double var_x69 = pow(var_chaste_interface__transient_outward_K_current_oa_gate__oa, 2) * NV_Ith_S(mParameters, 17);
        const double var_x70 = var_x12 * var_x31;
        const double var_x71 = var_x18 * pow(var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua, 2);
        const double var_x72 = var_x19 * var_x31;
        const double var_x73 = var_x31 * var_x9;
        const double var_x74 = var_x31 * var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs;
        const double var_x75 = 65.0 - var_chaste_interface__membrane__V;
        const double var_x76 = var_x27 * var_x75;
        const double var_x77 = var_x26 * NV_Ith_S(mParameters, 7);
        const double var_x78 = var_x44 * NV_Ith_S(mParameters, 9);
        const double var_x79 = var_x24 * var_x78;
        const double var_x80 = var_x45 * var_x50 * var_x78 / (var_x49 * pow((0.031622776601683791 + var_x45), 2));
        const double var_x81 = var_x37 * var_x41 * pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 2);
        const double var_x82 = 26.712831923985377 * var_x30;
        const double var_x83 = 0.0023800000000000002 + var_chaste_interface__intracellular_ion_concentrations__Ca_i;
        const double var_x84 = 1.0 + 0.00011900000000000002 / pow(var_x83, 2) + 3.5000000000000004e-5 * var_x60;
        const double var_x85 = 1 / var_x84;
        const double var_x86 = 4.2880534095874102e-10 * NV_Ith_S(mParameters, 9);
        const double var_x87 = 3.7913823250109726e-7 * var_x29;
        const double var_x88 = 1.0426301393780176e-7 * var_x57;
        const double var_x89 = 1.0 + 0.00092000000000000003 * var_x58;
        const double var_x90 = NV_Ith_S(mParameters, 2) / (pow(var_x89, 2) * pow(var_chaste_interface__intracellular_ion_concentrations__Ca_i, 2));
        const double var_x91 = pow(var_chaste_interface__Ca_release_current_from_JSR_u_gate__u, 2);
        const double var_x92 = var_x91 * NV_Ith_S(mParameters, 1) * var_chaste_interface__Ca_release_current_from_JSR_w_gate__w;
        const double var_x93 = var_x92 * var_chaste_interface__Ca_release_current_from_JSR_v_gate__v;
        const double var_x94 = 0.0070588235294117632 * var_x93;
        const double var_x95 = NV_Ith_S(mParameters, 0) * NV_Ith_S(mParameters, 2);
        const double var_x96 = 0.0054117647058823529 * var_x95;
        const double var_x97 = -var_chaste_interface__intracellular_ion_concentrations__Ca_i + var_chaste_interface__intracellular_ion_concentrations__Ca_rel;
        const double var_x98 = var_x41 * var_x54;
        const double var_x99 = -65.0 + var_chaste_interface__membrane__V;
        const double var_x100 = var_x85 * (2.4643985112571321e-5 - 3.7913823250109726e-7 * var_chaste_interface__membrane__V);
        const double var_x101 = var_x28 * var_chaste_interface__L_type_Ca_channel_f_gate__f;
        const double var_x102 = var_x28 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x103 = var_x77 * NV_Ith_S(mParameters, 9);
        const double var_x104 = var_x85 * var_x97;
        const double var_x105 = NV_Ith_S(mParameters, 1) * var_chaste_interface__Ca_release_current_from_JSR_v_gate__v;
        const double var_x106 = var_x105 * var_chaste_interface__Ca_release_current_from_JSR_u_gate__u * var_chaste_interface__Ca_release_current_from_JSR_w_gate__w;
        const double var_x107 = 0.0070588235294117632 * var_x104;
        const double var_x108 = var_x105 * var_x91;
        const double var_x109 = exp(-0.090909090909090912 * var_chaste_interface__membrane__V);
        const double var_x110 = 0.080000000000000002 * var_x109;
        const double var_x111 = 1 / (1.0 - exp(-1.0000000000287557e-7));
        const double var_x112 = 3.200000000092018e-7 * var_x111;
        const double var_x113 = 1 / (1.0 - exp(1.0000000000287557e-7));
        const double var_x114 = 47.130000000000003 + var_chaste_interface__membrane__V;
        const double var_x115 = fabs(var_x114) < 1.0000000000287557e-6;
        const double var_x116 = -0.10000000000000001 * var_chaste_interface__membrane__V;
        const double var_x117 = exp(-4.7130000000000001 + var_x116);
        const double var_x118 = 1.0 - var_x117;
        const double var_x119 = 0.32000000000000001 / var_x118;
        const double var_x120 = ((var_x115) ? (var_x112 - 499999.99998562218 * (47.129999000000005 + var_chaste_interface__membrane__V) * (-var_x112 - 3.200000000092018e-7 * var_x113)) : (var_x114 * var_x119));
        const double var_x121 = var_x110 + var_x120;
        const double var_x122 = 1 / var_x121;
        const double var_x123 = ((var_x115) ? (0.16 * var_x111 + 0.16 * var_x113) : (var_x119 - 0.032000000000000001 * var_x114 * var_x117 / pow(var_x118, 2)));
        const double var_x124 = 0.0072727272727272727 * var_x109;
        const double var_x125 = var_x120;
        const double var_x126 = exp(-11.764705882352942 + 0.14705882352941177 * NV_Ith_S(mParameters, 12) - 0.14705882352941177 * var_chaste_interface__membrane__V);
        const double var_x127 = var_chaste_interface__membrane__V < -40.0;
        const double var_x128 = ((var_x127) ? (0.13500000000000001 * var_x126) : (0));
        const double var_x129 = var_x128;
        const double var_x130 = exp(0.34999999999999998 * var_chaste_interface__membrane__V - 0.34999999999999998 * NV_Ith_S(mParameters, 12));
        const double var_x131 = exp(0.079000000000000001 * var_chaste_interface__membrane__V - 0.079000000000000001 * NV_Ith_S(mParameters, 12));
        const double var_x132 = exp(-0.96036036036036043 + 0.0900900900900901 * NV_Ith_S(mParameters, 12) - 0.0900900900900901 * var_chaste_interface__membrane__V);
        const double var_x133 = 1.0 + var_x132;
        const double var_x134 = ((var_x127) ? (310000.0 * var_x130 + 3.5600000000000001 * var_x131) : (7.6923076923076916 / var_x133));
        const double var_x135 = var_x134;
        const double var_x136 = ((var_x127) ? (-0.019852941176470591 * var_x126) : (0));
        const double var_x137 = var_x128 + var_x134;
        const double var_x138 = 0.01 * NV_Ith_S(mParameters, 11);
        const double var_x139 = 1.0 - var_x138;
        const double var_x140 = var_x139 / var_x137;
        const double var_x141 = ((var_x127) ? (0.28123999999999999 * var_x131 + 108500.0 * var_x130) : (0.693000693000693 * var_x132 / pow(var_x133, 2)));
        const double var_x142 = exp(-5.5312920000000005 + 0.13780000000000001 * NV_Ith_S(mParameters, 12) - 0.13780000000000001 * var_chaste_interface__membrane__V);
        const double var_x143 = 1.0 + var_x142;
        const double var_x144 = exp(0.01052 * NV_Ith_S(mParameters, 12) - 0.01052 * var_chaste_interface__membrane__V);
        const double var_x145 = var_x144 / var_x143;
        const double var_x146 = exp(-3.2000000000000002 + var_x116 + 0.10000000000000001 * NV_Ith_S(mParameters, 12));
        const double var_x147 = 1.0 + var_x146;
        const double var_x148 = exp(2.5349999999999999e-7 * NV_Ith_S(mParameters, 12) - 2.5349999999999999e-7 * var_chaste_interface__membrane__V);
        const double var_x149 = var_x148 / var_x147;
        const double var_x150 = ((var_x127) ? (0.1212 * var_x145) : (0.29999999999999999 * var_x149));
        const double var_x151 = var_x150;
        const double var_x152 = 37.780000000000001 + var_chaste_interface__membrane__V;
        const double var_x153 = exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V - 0.311 * NV_Ith_S(mParameters, 12));
        const double var_x154 = 1.0 + var_x153;
        const double var_x155 = 1 / var_x154;
        const double var_x156 = exp(0.24440000000000001 * var_chaste_interface__membrane__V - 0.24440000000000001 * NV_Ith_S(mParameters, 12));
        const double var_x157 = exp(0.043909999999999998 * NV_Ith_S(mParameters, 12) - 0.043909999999999998 * var_chaste_interface__membrane__V);
        const double var_x158 = -127140.0 * var_x156 - 3.4740000000000003e-5 * var_x157;
        const double var_x159 = var_x155 * var_x158;
        const double var_x160 = ((var_x127) ? (var_x152 * var_x159) : (0));
        const double var_x161 = var_x160;
        const double var_x162 = ((var_x127) ? (var_x159 + var_x152 * var_x155 * (1.5254334000000001e-6 * var_x157 - 31073.016 * var_x156) - 0.311 * var_x152 * var_x153 * var_x158 / pow(var_x154, 2)) : (0));
        const double var_x163 = var_x150 + var_x160;
        const double var_x164 = var_x139 / var_x163;
        const double var_x165 = ((var_x127) ? (-0.001275024 * var_x145 + 0.016701360000000002 * var_x142 * var_x144 / pow(var_x143, 2)) : (-7.6049999999999996e-8 * var_x149 + 0.029999999999999999 * var_x146 * var_x148 / pow(var_x147, 2)));
        const double var_x166 = exp(-1.1670467502850628 - 0.057012542759407071 * var_chaste_interface__membrane__V);
        const double var_x167 = 1.0 + var_x166;
        const double var_x168 = exp(0.50847457627118642 - 0.016949152542372881 * var_chaste_interface__membrane__V);
        const double var_x169 = exp(-1.1764705882352942 - 0.11764705882352941 * var_chaste_interface__membrane__V);
        const double var_x170 = var_x168 + var_x169;
        const double var_x171 = 0.058823529411764705 * var_chaste_interface__membrane__V;
        const double var_x172 = exp(4.8235294117647056 + var_x171);
        const double var_x173 = 1.9500000000000002 * (0.016949152542372881 * var_x168 + 0.11764705882352941 * var_x169) / pow(var_x170, 2) - 0.018352941176470589 * var_x172 / pow((1 + 0.40000000000000002 * var_x172), 2);
        const double var_x174 = 1.9500000000000002 / (2.5 + var_x172);
        const double var_x175 = 1.9500000000000002 / var_x170;
        const double var_x176 = var_x174 + var_x175;
        const double var_x177 = -var_x174 - var_x175;
        const double var_x178 = exp(8.1320754716981138 + 0.18867924528301888 * var_chaste_interface__membrane__V);
        const double var_x179 = 1.0 + var_x178;
        const double var_x180 = exp(-0.16935483870967738 - 0.13440860215053763 * var_chaste_interface__membrane__V);
        const double var_x181 = exp(10.383561643835618 + 0.091324200913242018 * var_chaste_interface__membrane__V);
        const double var_x182 = 3.0 / (35.560000000000002 + var_x180);
        const double var_x183 = 3.0 / (18.530000000000001 + var_x181);
        const double var_x184 = exp(-3.15625 - 0.10416666666666667 * var_chaste_interface__membrane__V);
        const double var_x185 = 1.0 + var_x184;
        const double var_x186 = exp(-3.6189956331877728 + 0.036390101892285295 * var_chaste_interface__membrane__V);
        const double var_x187 = 1.0 + var_x186;
        const double var_x188 = 1 / exp(9.875 - 0.0625 * var_chaste_interface__membrane__V);
        const double var_x189 = exp(6.6071428571428568 - 0.035714285714285712 * var_chaste_interface__membrane__V);
        const double var_x190 = 3.0 / (21.0 + var_x189);
        const double var_x191 = 3.0 * var_x188;
        const double var_x192 = exp(-2.1692307692307691 - 0.15384615384615385 * var_chaste_interface__membrane__V);
        const double var_x193 = 1.0 + var_x192;
        const double var_x194 = 1 / (-1.0 + exp(1.0000000000009984e-7));
        const double var_x195 = 1 / (-1.0 + exp(-1.0000000000009984e-7));
        const double var_x196 = -3.3328000000000002 + var_chaste_interface__membrane__V;
        const double var_x197 = fabs(var_x196) < 5.1237000000051158e-7;
        const double var_x198 = exp(-0.65046743564221166 + 0.19517145812596365 * var_chaste_interface__membrane__V);
        const double var_x199 = -1.0 + var_x198;
        const double var_x200 = 7.3898000000000003e-5 / var_x199;
        const double var_x201 = 1 / (1.0 - exp(-9.9999999997324457e-8));
        const double var_x202 = exp(1.0000000000010001e-7);
        const double var_x203 = 1.0 - var_x202;
        const double var_x204 = 1 / var_x203;
        const double var_x205 = 14.1 + var_chaste_interface__membrane__V;
        const double var_x206 = fabs(var_x205) < 4.9999999999356115e-7;
        const double var_x207 = -0.20000000000000001 * var_chaste_interface__membrane__V;
        const double var_x208 = exp(-2.8199999999999998 + var_x207);
        const double var_x209 = 1.0 - var_x208;
        const double var_x210 = 0.00029999999999999997 / var_x209;
        const double var_x211 = 1.4999999999598667e-10 * var_x201;
        const double var_x212 = ((var_x206) ? (var_x211 - 1000000.0000128777 * (14.099999499999999 + var_chaste_interface__membrane__V) * (-var_x211 - 1.5000000000015e-10 * var_x204)) : (var_x205 * var_x210));
        const double var_x213 = 3.7863118260037805e-11 * var_x195;
        const double var_x214 = ((var_x197) ? (-var_x213 + 975857.29062884394 * (-3.33279948763 + var_chaste_interface__membrane__V) * (var_x213 + 3.7863118260037805e-11 * var_x194)) : (var_x196 * var_x200));
        const double var_x215 = exp(1.5669291338582676 - 0.07874015748031496 * var_chaste_interface__membrane__V);
        const double var_x216 = 1.0 + var_x215;
        const double var_x217 = 1 / (-1.0 + exp(9.9999999999791612e-8));
        const double var_x218 = 1 / (-1.0 + exp(-9.9999999999791612e-8));
        const double var_x219 = -19.899999999999999 + var_chaste_interface__membrane__V;
        const double var_x220 = fabs(var_x219);
        const double var_x221 = var_x220 < 8.9999999999812452e-7;
        const double var_x222 = exp(-2.2111111111111108 + 0.1111111111111111 * var_chaste_interface__membrane__V);
        const double var_x223 = -1.0 + var_x222;
        const double var_x224 = 3.4999999999999997e-5 / var_x223;
        const double var_x225 = 1 / (1.0 - exp(9.9999999999610202e-8));
        const double var_x226 = 1 / (1.0 - exp(-9.9999999999610202e-8));
        const double var_x227 = var_x220 < 1.6999999999933735e-6;
        const double var_x228 = -var_x171;
        const double var_x229 = exp(1.1705882352941175 + var_x228);
        const double var_x230 = 1.0 - var_x229;
        const double var_x231 = 4.0000000000000003e-5 / var_x230;
        const double var_x232 = 6.7999999999734951e-11 * var_x226;
        const double var_x233 = 2.0 * ((var_x227) ? (var_x232 - 294117.64705997001 * (-19.900001699999997 + var_chaste_interface__membrane__V) * (-var_x232 - 6.7999999999734951e-11 * var_x225)) : (var_x219 * var_x231));
        const double var_x234 = 3.1499999999934357e-11 * var_x218;
        const double var_x235 = 2.0 * ((var_x221) ? (-var_x234 + 555555.55555671325 * (-19.899999099999999 + var_chaste_interface__membrane__V) * (var_x234 + 3.1499999999934357e-11 * var_x217)) : (var_x219 * var_x224));
        const double var_x236 = exp(-1.25 - 0.125 * var_chaste_interface__membrane__V);
        const double var_x237 = 1.0 + var_x236;
        const double var_x238 = exp(-9.999999999851651e-8);
        const double var_x239 = (1.0 - var_x238) / (1.0 + var_x238);
        const double var_x240 = exp(9.999999999851651e-8);
        const double var_x241 = (1.0 - var_x240) / (1.0 + var_x240);
        const double var_x242 = 45787545.788225032 * var_x239;
        const double var_x243 = (9.9999993759999999 + var_chaste_interface__membrane__V) * (-var_x242 - 45787545.788225032 * var_x241);
        const double var_x244 = 10.0 + var_chaste_interface__membrane__V;
        const double var_x245 = fabs(var_x244) < 6.2399999999074307e-7;
        const double var_x246 = exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V);
        const double var_x247 = 1.0 - var_x246;
        const double var_x248 = 1 / var_x247;
        const double var_x249 = 1.0 + var_x246;
        const double var_x250 = 0.035000000000000003 * var_x248 * var_x249;
        const double var_x251 = 0.005608974358974359 * var_x244 * var_x246;
        const double var_x252 = ((var_x245) ? (1 / (var_x242 - 801282.05129393819 * var_x243)) : (var_x244 * var_x250));
        const double var_x253 = 0.0021888888888888887 * exp(-0.113569 * pow((1 + 0.10000000000000001 * var_chaste_interface__membrane__V), 2));
        const double var_x254 = exp(-4.057971014492753 - 0.14492753623188406 * var_chaste_interface__membrane__V);
        const double var_x255 = 1.0 + var_x254;
        const double var_x256 = var_x254 / var_x255;
        const double var_x257 = 1 / NV_Ith_S(mParameters, 8);
        const double var_x258 = 1.8954138119330646 * var_x29;
        const double var_x259 = var_x258 - 0.0018448346940711528 * var_x55 - 0.75816552477322585 * var_x42;
        const double var_x260 = 70577.907827359188 * var_x93;
        const double var_x261 = -0.75816552477322585 * var_x98 + var_x258 * var_x99 - var_x260 * var_x97;
        const double var_x262 = exp(250.0 + var_x261);
        const double var_x263 = 1.0 + var_x262;
        const double var_x264 = var_x262 / pow(var_x263, 2);
        const double var_x265 = 0.125 * var_x264;
        const double var_x266 = var_x260 + 0.75816552477322585 * var_x62;
        const double var_x267 = -123.20189777564919 + 1.8954138119330646 * var_chaste_interface__membrane__V;
        const double var_x268 = var_x265 * var_x267;
        const double var_x269 = var_x106 * var_x97;
        const double var_x270 = 8822.2384784198985 * var_x264;
        const double var_x271 = var_x92 * var_x97;
        const double var_x272 = var_x108 * var_x97;
        const double var_x273 = 1 / var_x263;
        const double var_x274 = 1 / (1.9099999999999999 + 2.0899999999999999 * var_x273);
        const double var_x275 = exp(50.0 + var_x261);
        const double var_x276 = 1.0 + var_x275;
        const double var_x277 = var_x275 / pow(var_x276, 2);
        const double var_x278 = var_x274 * var_x277;
        const double var_x279 = var_x264 * (1.0 - 1 / var_x276 - var_chaste_interface__Ca_release_current_from_JSR_v_gate__v) / pow((0.9138755980861244 + var_x273), 2);
        const double var_x280 = 0.47846889952153115 * var_x279;
        const double var_x281 = var_x267 * var_x278;
        const double var_x282 = var_x267 * var_x280;
        const double var_x283 = 33769.333888688605 * var_x279;
        const double var_x284 = exp(2.3529411764705883 + var_x228);
        const double var_x285 = 1.0 + var_x284;
        const double var_x286 = exp(-9.9999999998712227e-8);
        const double var_x287 = (1.0 - var_x286) / (1.0 + 0.29999999999999999 * var_x286);
        const double var_x288 = var_x203 / (1.0 + 0.29999999999999999 * var_x202);
        const double var_x289 = 12000000.000154532 * var_x287;
        const double var_x290 = (-7.9000005 + var_chaste_interface__membrane__V) * (-var_x289 - 11999999.999987999 * var_x288);
        const double var_x291 = -7.9000000000000004 + var_chaste_interface__membrane__V;
        const double var_x292 = fabs(var_x291) < 4.999999999970306e-7;
        const double var_x293 = exp(1.5800000000000001 + var_x207);
        const double var_x294 = 1.0 - var_x293;
        const double var_x295 = 1 / var_x294;
        const double var_x296 = 1.0 + 0.29999999999999999 * var_x293;
        const double var_x297 = 0.16666666666666666 * var_x295 * var_x296;
        const double var_x298 = var_x291 * var_x293;
        const double var_x299 = ((var_x292) ? (1 / (var_x289 - 1000000.0000059388 * var_x290)) : (var_x291 * var_x297));
        const double var_x300 = 2.2748293950065834e-6 * NV_Ith_S(mParameters, 3);
        const double var_x301 = NV_Ith_S(mParameters, 3) * NV_Ith_S(mParameters, 9);
        const double var_x302 = 7.5827646500219453e-7 * var_x301;
        const double var_x303 = 2.0255711761517402e-5 * var_x30;
        const double var_x304 = 0.80000000000000004 + var_chaste_interface__intracellular_ion_concentrations__Ca_rel;
        const double var_x305 = pow(var_x304, (-2));
        const double var_x306 = 1 / (1.0 + 8.0 * var_x305);
        const double var_x307 = var_x306 * var_x97;
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = mSetVoltageDerivativeToZero ? 0.0 : (var_x0 * (-var_x11 - var_x14 - var_x21 - var_x25 - var_x29 - var_x4 - var_x42 - var_x6 + 0.070000000000000007 * var_x32 + 0.044642857142857144 * var_x43 - 0.59933873999999998 * var_x51 - 0.0018054375000000002 * NV_Ith_S(mParameters, 9) - 0.0024332874996168671 * var_x55 - 0.0038461538461538464 * var_x53));
        IJth(rJacobian, 1, 0) = var_x85 * (-var_x86 - var_x87 + 7.5827646500219453e-7 * var_x42 + 1.8451046435435069e-9 * var_x55);
        IJth(rJacobian, 2, 0) = (var_x110 + var_x125) * (var_x122 * var_x123 + var_x120 * (var_x124 - var_x123) / pow(var_x121, 2)) + (-var_x124 + var_x123) * (-var_chaste_interface__fast_sodium_current_m_gate__m + var_x120 * var_x122);
        IJth(rJacobian, 3, 0) = (var_x129 + var_x135) * (var_x136 * var_x140 + var_x128 * var_x139 * (-var_x136 - var_x141) / pow(var_x137, 2)) + (var_x136 + var_x141) * (var_x138 - var_chaste_interface__fast_sodium_current_h_gate__h + var_x128 * var_x140);
        IJth(rJacobian, 4, 0) = (var_x151 + var_x161) * (var_x162 * var_x164 + var_x139 * var_x160 * (-var_x162 - var_x165) / pow(var_x163, 2)) + (var_x162 + var_x165) * (var_x138 - var_chaste_interface__fast_sodium_current_j_gate__j + var_x160 * var_x164);
        IJth(rJacobian, 5, 0) = var_x173 * (1 / var_x167 - var_chaste_interface__transient_outward_K_current_oa_gate__oa) + 0.057012542759407071 * var_x166 * var_x176 / pow(var_x167, 2);
        IJth(rJacobian, 6, 0) = (1 / var_x179 - var_chaste_interface__transient_outward_K_current_oi_gate__oi) * (0.00031887818877678569 * var_x180 / pow((1 + 0.028121484814398197 * var_x180), 2) - 0.00079791438902835471 * var_x181 / pow((1 + 0.053966540744738258 * var_x181), 2)) - 0.18867924528301888 * var_x178 * (var_x182 + var_x183) / pow(var_x179, 2);
        IJth(rJacobian, 7, 0) = var_x173 * (1 / var_x185 - var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ua_gate__ua) + 0.10416666666666667 * var_x176 * var_x184 / pow(var_x185, 2);
        IJth(rJacobian, 8, 0) = (1 / var_x187 - var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui) * (0.1875 * var_x188 + 0.00024295432458697764 * var_x189 / pow((1 + 0.047619047619047616 * var_x189), 2)) - 0.036390101892285295 * var_x186 * (var_x190 + var_x191) / pow(var_x187, 2);
        IJth(rJacobian, 9, 0) = (1 / var_x193 - var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr) * (((var_x197) ? (3.6949000000000001e-5 * var_x194 + 3.6949000000000001e-5 * var_x195) : (var_x200 - 1.4422780412592461e-5 * var_x196 * var_x198 / pow(var_x199, 2))) + ((var_x206) ? (0.00014999999999791832 * var_x201 + 0.00015000000000208166 * var_x204) : (var_x210 - 5.9999999999999995e-5 * var_x205 * var_x208 / pow(var_x209, 2)))) + 0.15384615384615385 * var_x192 * (var_x212 + var_x214) / pow(var_x193, 2);
        IJth(rJacobian, 10, 0) = (pow(var_x216, (-0.5)) - var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs) * (2.0 * ((var_x221) ? (1.7499999999999998e-5 * var_x217 + 1.7499999999999998e-5 * var_x218) : (var_x224 - 3.8888888888888887e-6 * var_x219 * var_x222 / pow(var_x223, 2))) + 2.0 * ((var_x227) ? (2.0000000000000002e-5 * var_x225 + 2.0000000000000002e-5 * var_x226) : (var_x231 - 2.3529411764705885e-6 * var_x219 * var_x229 / pow(var_x230, 2)))) + 0.03937007874015748 * var_x215 * pow(var_x216, (-1.5)) * (var_x233 + var_x235);
        IJth(rJacobian, 11, 0) = (1 / var_x237 - var_chaste_interface__L_type_Ca_channel_d_gate__d) * ((var_x245) ? (4.7698559998584812e-16 * (-36688738612904.07 * var_x239 - 36688738612904.07 * var_x241) / pow((var_x239 - 0.017500000000000002 * var_x243), 2)) : (var_x250 - var_x248 * var_x251 - var_x249 * var_x251 / pow(var_x247, 2))) + 0.125 * var_x236 * var_x252 / pow(var_x237, 2);
        IJth(rJacobian, 12, 0) = (0.0022222222222222222 + var_x253) * (-0.14492753623188406 * var_x256 + 0.14492753623188406 * pow(var_x254, 2) / pow(var_x255, 2)) + var_x253 * (-0.022713800000000003 - 0.0022713799999999999 * var_chaste_interface__membrane__V) * (var_x256 - var_chaste_interface__L_type_Ca_channel_f_gate__f);
        IJth(rJacobian, 14, 0) = -var_x259 * var_x265;
        IJth(rJacobian, 15, 0) = var_x259 * var_x278 + var_x259 * var_x280;
        IJth(rJacobian, 16, 0) = (1.0 - 1 / var_x285 - var_chaste_interface__Ca_release_current_from_JSR_w_gate__w) * ((var_x292) ? (6.9444444442655875e-15 * (-12000000000059.264 * var_x288 - 12000000000225.799 * var_x287) / pow((var_x287 - 0.083333333332755097 * var_x290), 2)) : (var_x297 - 0.01 * var_x295 * var_x298 - 0.033333333333333333 * var_x296 * var_x298 / pow(var_x294, 2))) - 0.058823529411764705 * var_x284 * var_x299 / pow(var_x285, 2);
        IJth(rJacobian, 17, 0) = (-5.5353139306305208e-9 * var_x55 - 5.1141008336491763e-10 * NV_Ith_S(mParameters, 9) - 2.2748293950065834e-6 * var_x42 - 1.363393383318208e-6 * var_x51 - 7.5827646500219453e-7 * var_x25) * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 18, 0) = (5.3079352550153618e-8 * var_x32 + 9.0892892221213864e-7 * var_x51 + 3.3851627901883685e-8 * var_x43 - 2.9164479423161327e-9 * var_x53 - 7.5827646500219453e-7 * var_x11 - 7.5827646500219453e-7 * var_x14 - 7.5827646500219453e-7 * var_x21 - 7.5827646500219453e-7 * var_x4 - 7.5827646500219453e-7 * var_x6) * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 0, 1) = mSetVoltageDerivativeToZero ? 0.0 : (var_x0 * (var_x62 + 0.27500000000000002 * var_x61 - 0.27500000000000002 * var_x57 - 0.015106106453013732 * var_x59));
        IJth(rJacobian, 1, 1) = var_x85 * (-var_x88 - var_x94 + 1.0426301393780176e-7 * var_x61 - 7.4682352941176462e-5 * var_x90 - 5.7273025005690459e-9 * var_x59 - 7.5827646500219453e-7 * var_x62) + (0.00023800000000000004 / pow(var_x83, 3) + 7.0000000000000007e-5 / pow(var_x56, 3)) * (7.5827646500219453e-7 * var_x98 + var_x94 * var_x97 + var_x96 * var_chaste_interface__intracellular_ion_concentrations__Ca_up - var_x86 * (-13.356415961992688 * log(var_x58 * NV_Ith_S(mParameters, 4)) + var_chaste_interface__membrane__V) - var_x87 * var_x99 - var_x88 * var_chaste_interface__intracellular_ion_concentrations__Ca_i - 0.081176470588235281 * NV_Ith_S(mParameters, 2) / var_x89) / pow(var_x84, 2);
        IJth(rJacobian, 13, 1) = -0.00035 * var_x257 / pow((0.00035 + var_chaste_interface__intracellular_ion_concentrations__Ca_i), 2);
        IJth(rJacobian, 14, 1) = -var_x265 * var_x266;
        IJth(rJacobian, 15, 1) = var_x266 * var_x278 + var_x266 * var_x280;
        IJth(rJacobian, 17, 1) = var_x300 * var_x62;
        IJth(rJacobian, 19, 1) = var_x306 * var_x93;
        IJth(rJacobian, 20, 1) = 0.00092000000000000003 * var_x90;
        IJth(rJacobian, 0, 2) = mSetVoltageDerivativeToZero ? 0.0 : (-3 * var_x64);
        IJth(rJacobian, 2, 2) = -var_x110 - var_x125;
        IJth(rJacobian, 17, 2) = -2.2748293950065834e-6 * var_x301 * var_x64;
        IJth(rJacobian, 0, 3) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x66);
        IJth(rJacobian, 3, 3) = -var_x129 - var_x135;
        IJth(rJacobian, 17, 3) = -var_x302 * var_x66;
        IJth(rJacobian, 0, 4) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x67);
        IJth(rJacobian, 4, 4) = -var_x151 - var_x161;
        IJth(rJacobian, 17, 4) = -var_x302 * var_x67;
        IJth(rJacobian, 0, 5) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x68 * var_x69 * var_chaste_interface__transient_outward_K_current_oi_gate__oi);
        IJth(rJacobian, 5, 5) = var_x177;
        IJth(rJacobian, 18, 5) = -var_x13 * var_x300 * var_x31 * var_x69;
        IJth(rJacobian, 0, 6) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x70);
        IJth(rJacobian, 6, 6) = -var_x182 - var_x183;
        IJth(rJacobian, 18, 6) = -var_x302 * var_x70;
        IJth(rJacobian, 0, 7) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x68 * var_x71 * var_chaste_interface__ultrarapid_delayed_rectifier_K_current_ui_gate__ui);
        IJth(rJacobian, 7, 7) = var_x177;
        IJth(rJacobian, 18, 7) = -var_x300 * var_x52 * var_x71;
        IJth(rJacobian, 0, 8) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x72);
        IJth(rJacobian, 8, 8) = -var_x190 - var_x191;
        IJth(rJacobian, 18, 8) = -var_x302 * var_x72;
        IJth(rJacobian, 0, 9) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x73);
        IJth(rJacobian, 9, 9) = -var_x212 - var_x214;
        IJth(rJacobian, 18, 9) = -var_x302 * var_x73;
        IJth(rJacobian, 0, 10) = mSetVoltageDerivativeToZero ? 0.0 : (-2 * var_x74 * NV_Ith_S(mParameters, 15));
        IJth(rJacobian, 10, 10) = -var_x233 - var_x235;
        IJth(rJacobian, 18, 10) = -1.5165529300043891e-6 * var_x5 * var_x74 * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 0, 11) = mSetVoltageDerivativeToZero ? 0.0 : (var_x76 * var_chaste_interface__L_type_Ca_channel_f_gate__f);
        IJth(rJacobian, 1, 11) = var_x100 * var_x101;
        IJth(rJacobian, 11, 11) = -var_x252;
        IJth(rJacobian, 14, 11) = -var_x101 * var_x268;
        IJth(rJacobian, 15, 11) = var_x101 * var_x281 + var_x101 * var_x282;
        IJth(rJacobian, 0, 12) = mSetVoltageDerivativeToZero ? 0.0 : (var_x76 * var_chaste_interface__L_type_Ca_channel_d_gate__d);
        IJth(rJacobian, 1, 12) = var_x100 * var_x102;
        IJth(rJacobian, 12, 12) = -0.0022222222222222222 - var_x253;
        IJth(rJacobian, 14, 12) = -var_x102 * var_x268;
        IJth(rJacobian, 15, 12) = var_x102 * var_x281 + var_x102 * var_x282;
        IJth(rJacobian, 0, 13) = mSetVoltageDerivativeToZero ? 0.0 : (var_x75 * var_x77);
        IJth(rJacobian, 1, 13) = var_x100 * var_x103;
        IJth(rJacobian, 13, 13) = -var_x257;
        IJth(rJacobian, 14, 13) = -var_x103 * var_x268;
        IJth(rJacobian, 15, 13) = var_x103 * var_x281 + var_x103 * var_x282;
        IJth(rJacobian, 1, 14) = 0.014117647058823526 * var_x104 * var_x106;
        IJth(rJacobian, 14, 14) = -0.125 + 17644.476956839797 * var_x264 * var_x269;
        IJth(rJacobian, 15, 14) = -141155.81565471838 * var_x269 * var_x278 - 67538.66777737721 * var_x269 * var_x279;
        IJth(rJacobian, 19, 14) = -2 * var_x106 * var_x307;
        IJth(rJacobian, 1, 15) = var_x107 * var_x92;
        IJth(rJacobian, 14, 15) = var_x270 * var_x271;
        IJth(rJacobian, 15, 15) = var_x274 * (-1 - 70577.907827359188 * var_x271 * var_x277) - var_x271 * var_x283;
        IJth(rJacobian, 19, 15) = -var_x307 * var_x92;
        IJth(rJacobian, 1, 16) = var_x107 * var_x108;
        IJth(rJacobian, 14, 16) = var_x270 * var_x272;
        IJth(rJacobian, 15, 16) = -var_x272 * var_x283 - 70577.907827359188 * var_x272 * var_x278;
        IJth(rJacobian, 16, 16) = -var_x299;
        IJth(rJacobian, 19, 16) = -var_x108 * var_x307;
        IJth(rJacobian, 0, 17) = mSetVoltageDerivativeToZero ? 0.0 : (var_x0 * (-3 * var_x81 - 0.028429132625631969 * var_x80 - 26.712831923985377 * var_x79 - 0.018016135580732888 * var_x78));
        IJth(rJacobian, 1, 17) = 2.2748293950065834e-6 * var_x81 * var_x85;
        IJth(rJacobian, 14, 17) = 0.28431207178995971 * var_x264 * var_x81;
        IJth(rJacobian, 15, 17) = -1.0882758728802286 * var_x279 * var_x81 - 2.2744965743196777 * var_x278 * var_x81;
        IJth(rJacobian, 17, 17) = (-2.0255711761517402e-5 * var_x79 - 6.4671426571328296e-8 * var_x80 - 6.8244881850197506e-6 * var_x81 - 1.3661211601158392e-8 * var_x78) * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 18, 17) = 4.3114284380885533e-8 * var_x80 * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 0, 18) = mSetVoltageDerivativeToZero ? 0.0 : (var_x0 * (-var_x11 * var_x82 - var_x14 * var_x82 - var_x21 * var_x82 - var_x4 * var_x82 - var_x6 * var_x82));
        IJth(rJacobian, 18, 18) = (-var_x11 * var_x303 - var_x14 * var_x303 - var_x21 * var_x303 - var_x303 * var_x4 - var_x303 * var_x6) * NV_Ith_S(mParameters, 3);
        IJth(rJacobian, 1, 19) = var_x85 * var_x94;
        IJth(rJacobian, 14, 19) = var_x270 * var_x93;
        IJth(rJacobian, 15, 19) = -var_x260 * var_x278 - var_x283 * var_x93;
        IJth(rJacobian, 19, 19) = var_x306 * (-0.0055555555555555558 - var_x93) + 0.25 * (0.0055555555555555558 * var_chaste_interface__intracellular_ion_concentrations__Ca_up - 0.0055555555555555558 * var_chaste_interface__intracellular_ion_concentrations__Ca_rel - var_x93 * var_x97) / (pow(var_x304, 3) * pow((0.125 + var_x305), 2));
        IJth(rJacobian, 20, 19) = 0.00048309178743961351;
        IJth(rJacobian, 1, 20) = var_x85 * var_x96;
        IJth(rJacobian, 19, 20) = 0.0055555555555555558 * var_x306;
        IJth(rJacobian, 20, 20) = -0.00048309178743961351 - 0.066666666666666666 * var_x95;
    }

    N_Vector Cellcourtemanche_ramirez_nattel_1998FromCellMLCvode::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -81.18
        double var_chaste_interface__intracellular_ion_concentrations__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0001013
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.002908
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.9649
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.9775
        double var_chaste_interface__transient_outward_K_current_oa_gate__oa = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.03043
        double var_chaste_interface__transient_outward_K_current_oi_gate__oi = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.9992
        double var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 3.296e-05
        double var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.01869
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.0001367
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.9996
        double var_chaste_interface__L_type_Ca_channel_f_Ca_gate__f_Ca = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.7755
        double var_chaste_interface__Ca_release_current_from_JSR_u_gate__u = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 2.35e-112
        double var_chaste_interface__Ca_release_current_from_JSR_v_gate__v = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__Ca_release_current_from_JSR_w_gate__w = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.9992
        double var_chaste_interface__intracellular_ion_concentrations__Na_i = NV_Ith_S(rY, 17);
        // Units: millimolar; Initial value: 11.17
        double var_chaste_interface__intracellular_ion_concentrations__K_i = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 139.0
        double var_chaste_interface__intracellular_ion_concentrations__Ca_rel = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 1.488
        
        // Mathematics
        const double var_Na_Ca_exchanger_current__K_mCa = 1.3799999999999999; // millimolar
        const double var_Na_Ca_exchanger_current__K_mNa = 87.5; // millimolar
        const double var_Na_Ca_exchanger_current__K_sat = 0.10000000000000001; // dimensionless
        const double var_Na_Ca_exchanger_current__gamma = 0.34999999999999998; // dimensionless
        const double var_Ca_release_current_from_JSR__i_rel = pow(var_chaste_interface__Ca_release_current_from_JSR_u_gate__u, 2) * (-var_chaste_interface__intracellular_ion_concentrations__Ca_i + var_chaste_interface__intracellular_ion_concentrations__Ca_rel) * NV_Ith_S(mParameters, 1) * var_chaste_interface__Ca_release_current_from_JSR_v_gate__v * var_chaste_interface__Ca_release_current_from_JSR_w_gate__w; // millimolar_per_millisecond
        const double var_membrane__Cm_converted = 9.9999999999999995e-7 * NV_Ith_S(mParameters, 9); // uF
        const double var_membrane__F = 96.486699999999999; // coulomb_per_millimole
        const double var_membrane__R = 8.3142999999999994; // joule_per_mole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_L_type_Ca_channel__i_Ca_L = (-65.0 + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 7) * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f * NV_Ith_S(mParameters, 9); // picoA
        const double var_L_type_Ca_channel__i_Ca_L_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L / var_membrane__Cm_converted; // uA_per_cm2
        const double var_L_type_Ca_channel_f_gate__tau_f = 9.0 / (0.02 + 0.019699999999999999 * exp(-0.113569 * pow((1 + 0.10000000000000001 * var_chaste_interface__membrane__V), 2))); // millisecond
        const double var_fast_sodium_current_h_gate__alpha_h = ((var_chaste_interface__membrane__V < -40.0) ? (0.13500000000000001 * exp(-11.764705882352942 + 0.14705882352941177 * NV_Ith_S(mParameters, 12) - 0.14705882352941177 * var_chaste_interface__membrane__V)) : (0)); // per_millisecond
        const double var_fast_sodium_current_h_gate__beta_h = ((var_chaste_interface__membrane__V < -40.0) ? (310000.0 * exp(0.34999999999999998 * var_chaste_interface__membrane__V - 0.34999999999999998 * NV_Ith_S(mParameters, 12)) + 3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__membrane__V - 0.079000000000000001 * NV_Ith_S(mParameters, 12))) : (7.6923076923076916 / (1.0 + exp(-0.96036036036036043 + 0.0900900900900901 * NV_Ith_S(mParameters, 12) - 0.0900900900900901 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_fast_sodium_current_h_gate__tau_h = 1 / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h); // millisecond
        const double var_fast_sodium_current_j_gate__alpha_j = ((var_chaste_interface__membrane__V < -40.0) ? ((37.780000000000001 + var_chaste_interface__membrane__V) * (-127140.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__V - 0.24440000000000001 * NV_Ith_S(mParameters, 12)) - 3.4740000000000003e-5 * exp(0.043909999999999998 * NV_Ith_S(mParameters, 12) - 0.043909999999999998 * var_chaste_interface__membrane__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V - 0.311 * NV_Ith_S(mParameters, 12)))) : (0)); // per_millisecond
        const double var_fast_sodium_current_j_gate__beta_j = ((var_chaste_interface__membrane__V < -40.0) ? (0.1212 * exp(0.01052 * NV_Ith_S(mParameters, 12) - 0.01052 * var_chaste_interface__membrane__V) / (1.0 + exp(-5.5312920000000005 + 0.13780000000000001 * NV_Ith_S(mParameters, 12) - 0.13780000000000001 * var_chaste_interface__membrane__V))) : (0.29999999999999999 * exp(2.5349999999999999e-7 * NV_Ith_S(mParameters, 12) - 2.5349999999999999e-7 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.2000000000000002 + 0.10000000000000001 * NV_Ith_S(mParameters, 12) - 0.10000000000000001 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_fast_sodium_current_j_gate__tau_j = 1 / (var_fast_sodium_current_j_gate__alpha_j + var_fast_sodium_current_j_gate__beta_j); // millisecond
        const double var_membrane__i_st_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
        const double var_Na_Ca_exchanger_current__i_NaCa = (pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * NV_Ith_S(mParameters, 4) * exp(var_Na_Ca_exchanger_current__gamma * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) - pow(NV_Ith_S(mParameters, 6), 3) * var_chaste_interface__intracellular_ion_concentrations__Ca_i * exp((-1.0 + var_Na_Ca_exchanger_current__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * NV_Ith_S(mParameters, 16) * NV_Ith_S(mParameters, 9) / ((1.0 + var_Na_Ca_exchanger_current__K_sat * exp((-1.0 + var_Na_Ca_exchanger_current__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * (pow(var_Na_Ca_exchanger_current__K_mNa, 3) + pow(NV_Ith_S(mParameters, 6), 3)) * (var_Na_Ca_exchanger_current__K_mCa + NV_Ith_S(mParameters, 4))); // picoA
        const double var_Na_Ca_exchanger_current__i_NaCa_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_Na_Ca_exchanger_current__i_NaCa / var_membrane__Cm_converted; // uA_per_cm2
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 6) / var_chaste_interface__intracellular_ion_concentrations__Na_i) / var_membrane__F; // millivolt
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 10) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j * NV_Ith_S(mParameters, 9); // picoA
        const double var_fast_sodium_current__i_Na_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na / var_membrane__Cm_converted; // uA_per_cm2
        const double var_time_independent_potassium_current__E_K = var_membrane__R * var_membrane__T * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__intracellular_ion_concentrations__K_i) / var_membrane__F; // millivolt
        const double var_rapid_delayed_rectifier_K_current__i_Kr = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 9) * NV_Ith_S(mParameters, 14) * var_chaste_interface__rapid_delayed_rectifier_K_current_xr_gate__xr / (1.0 + exp(0.66964285714285721 + 0.044642857142857144 * var_chaste_interface__membrane__V)); // picoA
        const double var_rapid_delayed_rectifier_K_current__i_Kr_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_rapid_delayed_rectifier_K_current__i_Kr / var_membrane__Cm_converted; // uA_per_cm2
        const double var_slow_delayed_rectifier_K_current__i_Ks = pow(var_chaste_interface__slow_delayed_rectifier_K_current_xs_gate__xs, 2) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 9) * NV_Ith_S(mParameters, 15); // picoA
        const double var_slow_delayed_rectifier_K_current__i_Ks_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_slow_delayed_rectifier_K_current__i_Ks / var_membrane__Cm_converted; // uA_per_cm2
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 9) * NV_Ith_S(mParameters, 13) / (1.0 + exp(5.6000000000000005 + 0.070000000000000007 * var_chaste_interface__membrane__V)); // picoA
        const double var_time_independent_potassium_current__i_K1_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_time_independent_potassium_current__i_K1 / var_membrane__Cm_converted; // uA_per_cm2
        const double var_transient_outward_K_current__i_to = pow(var_chaste_interface__transient_outward_K_current_oa_gate__oa, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 9) * NV_Ith_S(mParameters, 17) * var_chaste_interface__transient_outward_K_current_oi_gate__oi; // picoA
        const double var_transient_outward_K_current__i_to_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_transient_outward_K_current__i_to / var_membrane__Cm_converted; // uA_per_cm2

        N_Vector dqs = N_VNew_Serial(14);
        NV_Ith_S(dqs, 0) = var_Ca_release_current_from_JSR__i_rel;
        NV_Ith_S(dqs, 1) = var_L_type_Ca_channel__i_Ca_L_converted;
        NV_Ith_S(dqs, 2) = var_L_type_Ca_channel_f_gate__tau_f;
        NV_Ith_S(dqs, 3) = var_membrane__Cm_converted;
        NV_Ith_S(dqs, 4) = var_fast_sodium_current__i_Na_converted;
        NV_Ith_S(dqs, 5) = var_fast_sodium_current_h_gate__tau_h;
        NV_Ith_S(dqs, 6) = var_fast_sodium_current_j_gate__tau_j;
        NV_Ith_S(dqs, 7) = var_time_independent_potassium_current__i_K1_converted;
        NV_Ith_S(dqs, 8) = var_rapid_delayed_rectifier_K_current__i_Kr_converted;
        NV_Ith_S(dqs, 9) = var_slow_delayed_rectifier_K_current__i_Ks_converted;
        NV_Ith_S(dqs, 10) = var_Na_Ca_exchanger_current__i_NaCa_converted;
        NV_Ith_S(dqs, 11) = var_membrane__i_st_converted;
        NV_Ith_S(dqs, 12) = var_transient_outward_K_current__i_to_converted;
        NV_Ith_S(dqs, 13) = var_chaste_interface__environment__time;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellcourtemanche_ramirez_nattel_1998FromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "courtemanche_1998";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // NV_Ith_S(rY, 0):
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-81.18);

    // NV_Ith_S(rY, 1):
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0001013);

    // NV_Ith_S(rY, 2):
    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.002908);

    // NV_Ith_S(rY, 3):
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9649);

    // NV_Ith_S(rY, 4):
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9775);

    // NV_Ith_S(rY, 5):
    this->mVariableNames.push_back("transient_outward_K_current_oa_gate__oa");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.03043);

    // NV_Ith_S(rY, 6):
    this->mVariableNames.push_back("transient_outward_K_current_oi_gate__oi");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9992);

    // NV_Ith_S(rY, 7):
    this->mVariableNames.push_back("ultrarapid_delayed_rectifier_K_current_ua_gate__ua");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.004966);

    // NV_Ith_S(rY, 8):
    this->mVariableNames.push_back("ultrarapid_delayed_rectifier_K_current_ui_gate__ui");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9986);

    // NV_Ith_S(rY, 9):
    this->mVariableNames.push_back("rapid_delayed_rectifier_K_current_xr_gate__xr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.296e-05);

    // NV_Ith_S(rY, 10):
    this->mVariableNames.push_back("slow_delayed_rectifier_K_current_xs_gate__xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.01869);

    // NV_Ith_S(rY, 11):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0001367);

    // NV_Ith_S(rY, 12):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9996);

    // NV_Ith_S(rY, 13):
    this->mVariableNames.push_back("membrane_L_type_calcium_current_fCa_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7755);

    // NV_Ith_S(rY, 14):
    this->mVariableNames.push_back("Ca_release_current_from_JSR_u_gate__u");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.35e-112);

    // NV_Ith_S(rY, 15):
    this->mVariableNames.push_back("Ca_release_current_from_JSR_v_gate__v");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // NV_Ith_S(rY, 16):
    this->mVariableNames.push_back("Ca_release_current_from_JSR_w_gate__w");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9992);

    // NV_Ith_S(rY, 17):
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(11.17);

    // NV_Ith_S(rY, 18):
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(139.0);

    // NV_Ith_S(rY, 19):
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.488);

    // NV_Ith_S(rY, 20):
    this->mVariableNames.push_back("intracellular_ion_concentrations__Ca_up");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.488);

    // mParameters[0]:
    this->mParameterNames.push_back("SR_leak_current_max");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[1]:
    this->mParameterNames.push_back("SR_release_current_max");
    this->mParameterUnits.push_back("per_millisecond");

    // mParameters[2]:
    this->mParameterNames.push_back("SR_uptake_current_max");
    this->mParameterUnits.push_back("millimolar_per_millisecond");

    // mParameters[3]:
    this->mParameterNames.push_back("concentration_clamp_onoff");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[4]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[5]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[6]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("nanoS_per_picoF");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_fCa_gate_tau");
    this->mParameterUnits.push_back("millisecond");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane__Cm");
    this->mParameterUnits.push_back("picoF");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("nanoS_per_picoF");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_reduced_inactivation");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[12]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_shift_inactivation");
    this->mParameterUnits.push_back("millivolt");

    // mParameters[13]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("nanoS_per_picoF");

    // mParameters[14]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("nanoS_per_picoF");

    // mParameters[15]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("nanoS_per_picoF");

    // mParameters[16]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("picoA_per_picoF");

    // mParameters[17]:
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
    this->mParameterUnits.push_back("nanoS_per_picoF");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("SR_release_current");
    this->mDerivedQuantityUnits.push_back("millimolar_per_millisecond");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current_f_gate_tau");
    this->mDerivedQuantityUnits.push_back("millisecond");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_capacitance");
    this->mDerivedQuantityUnits.push_back("uF");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_h_gate_tau");
    this->mDerivedQuantityUnits.push_back("millisecond");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_j_gate_tau");
    this->mDerivedQuantityUnits.push_back("millisecond");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [10]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [11]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [12]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [13]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellcourtemanche_ramirez_nattel_1998FromCellMLCvode)

#endif // CHASTE_CVODE
