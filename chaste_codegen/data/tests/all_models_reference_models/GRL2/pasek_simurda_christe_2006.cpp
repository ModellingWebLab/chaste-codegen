//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: pasek_simurda_christe_2006
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: GeneralizedRushLarsenSecondOrder)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "pasek_simurda_christe_2006.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"


    boost::shared_ptr<RegularStimulus> Cellpasek_simurda_christe_2006FromCellMLGRL2::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__i_Stim__stim_duration_converted = 1.0; // millisecond
        const double var_chaste_interface__i_Stim__stim_offset_converted = 0; // millisecond
        const double var_chaste_interface__i_Stim__stim_period_converted = 1000.0; // millisecond
        const double var_model_parameters__Smtot = 0.0001; // cm2
        const double var_model_parameters__Vc = 0.00012738853503184712 * var_model_parameters__Smtot; // cm3
        const double var_model_parameters__Sms = -4400.0 * var_model_parameters__Vc + var_model_parameters__Smtot; // cm2
        const double var_model_parameters__Cms = var_model_parameters__Sms; // microF
        const double var_chaste_interface__i_Stim__stim_amplitude_converted = 0.0051999999999999998 * HeartConfig::Instance()->GetCapacitance() / var_model_parameters__Cms; // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__i_Stim__stim_amplitude_converted),
                var_chaste_interface__i_Stim__stim_duration_converted,
                var_chaste_interface__i_Stim__stim_period_converted,
                var_chaste_interface__i_Stim__stim_offset_converted
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    Cellpasek_simurda_christe_2006FromCellMLGRL2::Cellpasek_simurda_christe_2006FromCellMLGRL2(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractGeneralizedRushLarsenCardiacCell(
                41,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellpasek_simurda_christe_2006FromCellMLGRL2>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        
        this->mParameters[0] = 10.0; // (var_membrane_permeabilities__gNa) [milliS_per_cm2]
        this->mParameters[1] = 0.23999999999999999; // (var_membrane_permeabilities__gK1) [milliS_per_cm2]
        this->mParameters[2] = 0.00018000000000000001; // (var_membrane_permeabilities__i_NaCa_max) [microA_per_cm2]
        this->mParameters[3] = 0.34999999999999998; // (var_membrane_permeabilities__gKto) [milliS_per_cm2]
    }

    Cellpasek_simurda_christe_2006FromCellMLGRL2::~Cellpasek_simurda_christe_2006FromCellMLGRL2()
    {
    }

    
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -79.709547
        double var_chaste_interface__ion_concentrations__Cai = rY[1];
        // Units: millimolar; Initial value: 3.5486498e-05
        double var_chaste_interface__i_Nas_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 2.1832558e-06
        double var_chaste_interface__i_Nas_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.58232781
        double var_chaste_interface__i_Cas__Co = rY[6];
        // Units: dimensionless; Initial value: 2.5436465e-06
        double var_chaste_interface__i_Cas__C1 = rY[7];
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__i_Cas__C2 = rY[8];
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__i_Cas__Ccast = rY[9];
        // Units: dimensionless; Initial value: 0.99570063
        double var_chaste_interface__i_Ktos_rs_gate__rs = rY[14];
        // Units: dimensionless; Initial value: 0.0023485072
        double var_chaste_interface__i_Ktos_ss_gate__ss = rY[15];
        // Units: dimensionless; Initial value: 0.98315843
        double var_chaste_interface__i_Ktos_sss_gate__sss = rY[16];
        // Units: dimensionless; Initial value: 0.6748337
        double var_chaste_interface__i_Ksts_rsts_gate__rsts = rY[20];
        // Units: dimensionless; Initial value: 0.0031079213
        double var_chaste_interface__i_Ksts_ssts_gate__ssts = rY[21];
        // Units: dimensionless; Initial value: 0.30773393
        double var_chaste_interface__i_Kfs_qs_gate__qs = rY[24];
        // Units: dimensionless; Initial value: 0.0034357356
        double var_chaste_interface__ion_concentrations__Nai = rY[32];
        // Units: millimolar; Initial value: 6.9435814
        double var_chaste_interface__ion_concentrations__Ki = rY[33];
        // Units: millimolar; Initial value: 137.53311
        double var_chaste_interface__ion_concentrations__Cass = rY[37];
        // Units: millimolar; Initial value: 4.3112114e-05
        double var_chaste_interface__Vmt__Vmt = rY[40];
        // Units: millivolt; Initial value: -79.709536
        
        const double var_i_Cas__i_Cas = ((fabs(var_chaste_interface__Vms__Vms) < 1.2701813471502589e-6) ? (393644.57769891288 * (1.2701813471502589e-6 + var_chaste_interface__Vms__Vms) * (5.2689000000000005e-11 * (-0.40920000000000001 + var_chaste_interface__ion_concentrations__Cass * exp(9.9999999999999995e-8)) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C1) * var_chaste_interface__i_Cas__Co / (-1.0 + exp(9.9999999999999995e-8)) + 5.2689000000000005e-11 * (-0.40920000000000001 + var_chaste_interface__ion_concentrations__Cass * exp(-9.9999999999999995e-8)) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C1) * var_chaste_interface__i_Cas__Co / (-1.0 + exp(-9.9999999999999995e-8))) - 5.2689000000000005e-11 * (-0.40920000000000001 + var_chaste_interface__ion_concentrations__Cass * exp(-9.9999999999999995e-8)) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C1) * var_chaste_interface__i_Cas__Co / (-1.0 + exp(-9.9999999999999995e-8))) : (4.1481478308756044e-5 * (-0.40920000000000001 + var_chaste_interface__ion_concentrations__Cass * exp(0.078728915539782576 * var_chaste_interface__Vms__Vms)) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C1) * var_chaste_interface__Vms__Vms * var_chaste_interface__i_Cas__Co / (-1.0 + exp(0.078728915539782576 * var_chaste_interface__Vms__Vms)))); // microA
        const double var_membrane_permeabilities__fCabt = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fK1t = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fKbt = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fKft = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fKstt = 0.76000000000000001; // dimensionless
        const double var_membrane_permeabilities__fKtot = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fNaCat = 0.81000000000000005; // dimensionless
        const double var_membrane_permeabilities__fNaKt = 0.58999999999999997; // dimensionless
        const double var_membrane_permeabilities__fNabt = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fNat = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fpCat = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__gCab = 0.00064800000000000003; // milliS_per_cm2
        const double var_membrane_permeabilities__gKb = 0.0013799999999999999; // milliS_per_cm2
        const double var_membrane_permeabilities__gKf = 0.014500000000000001; // milliS_per_cm2
        const double var_membrane_permeabilities__gKst = 0.070000000000000007; // milliS_per_cm2
        const double var_membrane_permeabilities__gNab = 0.00080150000000000002; // milliS_per_cm2
        const double var_membrane_permeabilities__i_NaK_max = 1.0; // microA_per_cm2
        const double var_membrane_permeabilities__i_pCa_max = 0.84999999999999998; // microA_per_cm2
        const double var_model_parameters__Cae = 1.2; // millimolar
        const double var_model_parameters__F = 96500.0; // coulomb_per_mole
        const double var_model_parameters__Ke = 5.4000000000000004; // millimolar
        const double var_model_parameters__Nae = 140.0; // millimolar
        const double var_model_parameters__R = 8310.0; // joule_per_kilomole_kelvin
        const double var_model_parameters__Rot = 83.329999999999998; // ohm_cm
        const double var_model_parameters__Smtot = 0.0001; // cm2
        const double var_model_parameters__T = 295.0; // kelvin
        const double var_i_Cas__E_Cas = 0.5 * var_model_parameters__R * var_model_parameters__T * log(var_model_parameters__Cae / var_chaste_interface__ion_concentrations__Cai) / var_model_parameters__F; // millivolt
        const double var_i_Ktos__E_Ks = var_model_parameters__R * var_model_parameters__T * log(var_model_parameters__Ke / var_chaste_interface__ion_concentrations__Ki) / var_model_parameters__F; // millivolt
        const double var_i_Nas__E_Nas = var_model_parameters__R * var_model_parameters__T * log(var_model_parameters__Nae / var_chaste_interface__ion_concentrations__Nai) / var_model_parameters__F; // millivolt
        const double var_model_parameters__Vc = 0.00012738853503184712 * var_model_parameters__Smtot; // cm3
        const double var_model_parameters__Sms = -4400.0 * var_model_parameters__Vc + var_model_parameters__Smtot; // cm2
        const double var_model_parameters__Cms = var_model_parameters__Sms; // microF
        const double var_model_parameters__Smt = -var_model_parameters__Sms + var_model_parameters__Smtot; // cm2
        const double var_membrane_permeabilities__gCabs = (1.0 - var_membrane_permeabilities__fCabt) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__gCab; // milliS
        const double var_i_Cabs__i_Cabs = (-var_i_Cas__E_Cas + var_chaste_interface__Vms__Vms) * var_membrane_permeabilities__gCabs; // microA
        const double var_membrane_permeabilities__gK1s = (1.0 - var_membrane_permeabilities__fK1t) * (var_model_parameters__Sms + var_model_parameters__Smt) * mParameters[1]; // milliS
        const double var_i_K1s__i_K1s = (-1.73 - var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * var_membrane_permeabilities__gK1s / (1.0 + (1.0 + exp(8.0548387096774192 - 8.064516129032258 * var_model_parameters__Ke)) * exp(1.613 * (-1.73 - var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))); // microA
        const double var_membrane_permeabilities__gKbs = (1.0 - var_membrane_permeabilities__fKbt) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__gKb; // milliS
        const double var_i_Kbs__i_Kbs = (-var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * var_membrane_permeabilities__gKbs; // microA
        const double var_membrane_permeabilities__gKfs = (1.0 - var_membrane_permeabilities__fKft) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__gKf; // milliS
        const double var_i_Kfs__i_Kfs = (1.0 * var_chaste_interface__Vms__Vms - 0.20000000000000001 * var_i_Nas__E_Nas - 0.80000000000000004 * var_i_Ktos__E_Ks) * var_chaste_interface__i_Kfs_qs_gate__qs * var_membrane_permeabilities__gKfs; // microA
        const double var_membrane_permeabilities__gKsts = (1.0 - var_membrane_permeabilities__fKstt) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__gKst; // milliS
        const double var_i_Ksts__i_Ksts = (-var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * var_chaste_interface__i_Ksts_rsts_gate__rsts * var_chaste_interface__i_Ksts_ssts_gate__ssts * var_membrane_permeabilities__gKsts; // microA
        const double var_membrane_permeabilities__gKtos = (1.0 - var_membrane_permeabilities__fKtot) * (var_model_parameters__Sms + var_model_parameters__Smt) * mParameters[3]; // milliS
        const double var_i_Ktos__i_Ktos = (-var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * (0.88600000000000001 * var_chaste_interface__i_Ktos_ss_gate__ss + 0.114 * var_chaste_interface__i_Ktos_sss_gate__sss) * var_chaste_interface__i_Ktos_rs_gate__rs * var_membrane_permeabilities__gKtos; // microA
        const double var_membrane_permeabilities__gNabs = (1.0 - var_membrane_permeabilities__fNabt) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__gNab; // milliS
        const double var_i_Nabs__i_Nabs = (-var_i_Nas__E_Nas + var_chaste_interface__Vms__Vms) * var_membrane_permeabilities__gNabs; // microA
        const double var_membrane_permeabilities__gNas = (1.0 - var_membrane_permeabilities__fNat) * (var_model_parameters__Sms + var_model_parameters__Smt) * mParameters[0]; // milliS
        const double var_i_Nas__i_Nas = pow(var_chaste_interface__i_Nas_m_gate__m, 3) * (-var_model_parameters__R * var_model_parameters__T * log((var_model_parameters__Nae + 0.12 * var_model_parameters__Ke) / (var_chaste_interface__ion_concentrations__Nai + 0.12 * var_chaste_interface__ion_concentrations__Ki)) / var_model_parameters__F + var_chaste_interface__Vms__Vms) * var_chaste_interface__i_Nas_h_gate__h * var_membrane_permeabilities__gNas; // microA
        const double var_membrane_permeabilities__i_NaCa_maxs = (1.0 - var_membrane_permeabilities__fNaCat) * (var_model_parameters__Sms + var_model_parameters__Smt) * mParameters[2]; // microA
        const double var_i_NaCas__i_NaCas = (pow(var_chaste_interface__ion_concentrations__Nai, 3) * var_model_parameters__Cae * exp(0.018700000000000001 * var_chaste_interface__Vms__Vms) - pow(var_model_parameters__Nae, 3) * var_chaste_interface__ion_concentrations__Cai * exp(-0.018700000000000001 * var_chaste_interface__Vms__Vms)) * var_membrane_permeabilities__i_NaCa_maxs / (1.0 + 0.0001 * pow(var_chaste_interface__ion_concentrations__Nai, 3) * var_model_parameters__Cae + 0.0001 * pow(var_model_parameters__Nae, 3) * var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_membrane_permeabilities__i_NaK_maxs = (1.0 - var_membrane_permeabilities__fNaKt) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__i_NaK_max; // microA
        const double var_i_NaKs__i_NaKs = var_membrane_permeabilities__i_NaK_maxs * var_model_parameters__Ke / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__ion_concentrations__Nai), 1.5)) * (1.5 + var_model_parameters__Ke) * (1.0 + 0.1245 * exp(-0.10000000000000001 * var_chaste_interface__Vms__Vms * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)) + 0.0052142857142857138 * (-1.0 + exp(0.01485884101040119 * var_model_parameters__Nae)) * exp(-var_chaste_interface__Vms__Vms * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)))); // microA
        const double var_membrane_permeabilities__i_pCa_maxs = (1.0 - var_membrane_permeabilities__fpCat) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__i_pCa_max; // microA
        const double var_i_pCas__i_pCas = var_chaste_interface__ion_concentrations__Cai * var_membrane_permeabilities__i_pCa_maxs / (0.00040000000000000002 + var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_model_parameters__ptcm = 30000000.0; // per_cm2
        const double var_model_parameters__pt = var_model_parameters__Sms * var_model_parameters__ptcm; // dimensionless
        const double var_model_parameters__radiust = 1.5e-5; // cm
        const double var_model_parameters__Lt = 0.15915507752443828 * var_model_parameters__Smt / (var_model_parameters__pt * var_model_parameters__radiust); // cm
        const double var_model_parameters__Rst = 0.15915507752443828 * var_model_parameters__Lt * var_model_parameters__Rot / (var_model_parameters__pt * pow(var_model_parameters__radiust, 2)); // ohm
        const double var_i_circ__i_circ = 1000.0 * var_chaste_interface__Vmt__Vmt / var_model_parameters__Rst - 1000.0 * var_chaste_interface__Vms__Vms / var_model_parameters__Rst; // microA
        const double var_chaste_interface__i_ionic = (var_i_Cabs__i_Cabs + var_i_Cas__i_Cas + var_i_K1s__i_K1s + var_i_Kbs__i_Kbs + var_i_Kfs__i_Kfs + var_i_Ksts__i_Ksts + var_i_Ktos__i_Ktos + var_i_NaCas__i_NaCas + var_i_NaKs__i_NaKs + var_i_Nabs__i_Nabs + var_i_Nas__i_Nas + var_i_circ__i_circ + var_i_pCas__i_pCas) * HeartConfig::Instance()->GetCapacitance() / var_model_parameters__Cms; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellpasek_simurda_christe_2006FromCellMLGRL2::UpdateTransmembranePotential(double var_chaste_interface__environment__time_converted)
    {
        std::vector<double>& rY = rGetStateVariables();
        const unsigned v_index = GetVoltageIndex();
        const double delta = 1e-8;
        const double yinit = rY[v_index];

        double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -79.709547
        double var_chaste_interface__ion_concentrations__Cai = rY[1];
        // Units: millimolar; Initial value: 3.5486498e-05
        double var_chaste_interface__i_Nas_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 2.1832558e-06
        double var_chaste_interface__i_Nas_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.58232781
        double var_chaste_interface__i_Cas__Co = rY[6];
        // Units: dimensionless; Initial value: 2.5436465e-06
        double var_chaste_interface__i_Cas__C1 = rY[7];
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__i_Cas__C2 = rY[8];
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__i_Cas__Ccast = rY[9];
        // Units: dimensionless; Initial value: 0.99570063
        double var_chaste_interface__i_Ktos_rs_gate__rs = rY[14];
        // Units: dimensionless; Initial value: 0.0023485072
        double var_chaste_interface__i_Ktos_ss_gate__ss = rY[15];
        // Units: dimensionless; Initial value: 0.98315843
        double var_chaste_interface__i_Ktos_sss_gate__sss = rY[16];
        // Units: dimensionless; Initial value: 0.6748337
        double var_chaste_interface__i_Ksts_rsts_gate__rsts = rY[20];
        // Units: dimensionless; Initial value: 0.0031079213
        double var_chaste_interface__i_Ksts_ssts_gate__ssts = rY[21];
        // Units: dimensionless; Initial value: 0.30773393
        double var_chaste_interface__i_Kfs_qs_gate__qs = rY[24];
        // Units: dimensionless; Initial value: 0.0034357356
        double var_chaste_interface__ion_concentrations__Nai = rY[32];
        // Units: millimolar; Initial value: 6.9435814
        double var_chaste_interface__ion_concentrations__Ki = rY[33];
        // Units: millimolar; Initial value: 137.53311
        double var_chaste_interface__ion_concentrations__Cass = rY[37];
        // Units: millimolar; Initial value: 4.3112114e-05
        double var_chaste_interface__Vmt__Vmt = rY[40];
        // Units: millivolt; Initial value: -79.709536
        

        // Mathematics
        double d_dt_chaste_interface_var_Vms__Vms;
        const double var_i_Stim__i_Stim_converted = -GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_i_Cas__i_Cas = ((fabs(var_chaste_interface__Vms__Vms) < 1.2701813471502589e-6) ? (393644.57769891288 * (1.2701813471502589e-6 + var_chaste_interface__Vms__Vms) * (5.2689000000000005e-11 * (-0.40920000000000001 + var_chaste_interface__ion_concentrations__Cass * exp(9.9999999999999995e-8)) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C1) * var_chaste_interface__i_Cas__Co / (-1.0 + exp(9.9999999999999995e-8)) + 5.2689000000000005e-11 * (-0.40920000000000001 + var_chaste_interface__ion_concentrations__Cass * exp(-9.9999999999999995e-8)) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C1) * var_chaste_interface__i_Cas__Co / (-1.0 + exp(-9.9999999999999995e-8))) - 5.2689000000000005e-11 * (-0.40920000000000001 + var_chaste_interface__ion_concentrations__Cass * exp(-9.9999999999999995e-8)) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C1) * var_chaste_interface__i_Cas__Co / (-1.0 + exp(-9.9999999999999995e-8))) : (4.1481478308756044e-5 * (-0.40920000000000001 + var_chaste_interface__ion_concentrations__Cass * exp(0.078728915539782576 * var_chaste_interface__Vms__Vms)) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C1) * var_chaste_interface__Vms__Vms * var_chaste_interface__i_Cas__Co / (-1.0 + exp(0.078728915539782576 * var_chaste_interface__Vms__Vms)))); // microA
        const double var_membrane_permeabilities__fCabt = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fK1t = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fKbt = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fKft = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fKstt = 0.76000000000000001; // dimensionless
        const double var_membrane_permeabilities__fKtot = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fNaCat = 0.81000000000000005; // dimensionless
        const double var_membrane_permeabilities__fNaKt = 0.58999999999999997; // dimensionless
        const double var_membrane_permeabilities__fNabt = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fNat = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fpCat = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__gCab = 0.00064800000000000003; // milliS_per_cm2
        const double var_membrane_permeabilities__gKb = 0.0013799999999999999; // milliS_per_cm2
        const double var_membrane_permeabilities__gKf = 0.014500000000000001; // milliS_per_cm2
        const double var_membrane_permeabilities__gKst = 0.070000000000000007; // milliS_per_cm2
        const double var_membrane_permeabilities__gNab = 0.00080150000000000002; // milliS_per_cm2
        const double var_membrane_permeabilities__i_NaK_max = 1.0; // microA_per_cm2
        const double var_membrane_permeabilities__i_pCa_max = 0.84999999999999998; // microA_per_cm2
        const double var_model_parameters__Cae = 1.2; // millimolar
        const double var_model_parameters__F = 96500.0; // coulomb_per_mole
        const double var_model_parameters__Ke = 5.4000000000000004; // millimolar
        const double var_model_parameters__Nae = 140.0; // millimolar
        const double var_model_parameters__R = 8310.0; // joule_per_kilomole_kelvin
        const double var_model_parameters__Rot = 83.329999999999998; // ohm_cm
        const double var_model_parameters__Smtot = 0.0001; // cm2
        const double var_model_parameters__T = 295.0; // kelvin
        const double var_i_Cas__E_Cas = 0.5 * var_model_parameters__R * var_model_parameters__T * log(var_model_parameters__Cae / var_chaste_interface__ion_concentrations__Cai) / var_model_parameters__F; // millivolt
        const double var_i_Ktos__E_Ks = var_model_parameters__R * var_model_parameters__T * log(var_model_parameters__Ke / var_chaste_interface__ion_concentrations__Ki) / var_model_parameters__F; // millivolt
        const double var_i_Nas__E_Nas = var_model_parameters__R * var_model_parameters__T * log(var_model_parameters__Nae / var_chaste_interface__ion_concentrations__Nai) / var_model_parameters__F; // millivolt
        const double var_model_parameters__Vc = 0.00012738853503184712 * var_model_parameters__Smtot; // cm3
        const double var_model_parameters__Sms = -4400.0 * var_model_parameters__Vc + var_model_parameters__Smtot; // cm2
        const double var_model_parameters__Cms = var_model_parameters__Sms; // microF
        const double var_i_Stim__i_Stim = var_i_Stim__i_Stim_converted * var_model_parameters__Cms / HeartConfig::Instance()->GetCapacitance(); // microA
        const double var_model_parameters__Smt = -var_model_parameters__Sms + var_model_parameters__Smtot; // cm2
        const double var_membrane_permeabilities__gCabs = (1.0 - var_membrane_permeabilities__fCabt) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__gCab; // milliS
        const double var_i_Cabs__i_Cabs = (-var_i_Cas__E_Cas + var_chaste_interface__Vms__Vms) * var_membrane_permeabilities__gCabs; // microA
        const double var_membrane_permeabilities__gK1s = (1.0 - var_membrane_permeabilities__fK1t) * (var_model_parameters__Sms + var_model_parameters__Smt) * mParameters[1]; // milliS
        const double var_i_K1s__i_K1s = (-1.73 - var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * var_membrane_permeabilities__gK1s / (1.0 + (1.0 + exp(8.0548387096774192 - 8.064516129032258 * var_model_parameters__Ke)) * exp(1.613 * (-1.73 - var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))); // microA
        const double var_membrane_permeabilities__gKbs = (1.0 - var_membrane_permeabilities__fKbt) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__gKb; // milliS
        const double var_i_Kbs__i_Kbs = (-var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * var_membrane_permeabilities__gKbs; // microA
        const double var_membrane_permeabilities__gKfs = (1.0 - var_membrane_permeabilities__fKft) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__gKf; // milliS
        const double var_i_Kfs__i_Kfs = (1.0 * var_chaste_interface__Vms__Vms - 0.20000000000000001 * var_i_Nas__E_Nas - 0.80000000000000004 * var_i_Ktos__E_Ks) * var_chaste_interface__i_Kfs_qs_gate__qs * var_membrane_permeabilities__gKfs; // microA
        const double var_membrane_permeabilities__gKsts = (1.0 - var_membrane_permeabilities__fKstt) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__gKst; // milliS
        const double var_i_Ksts__i_Ksts = (-var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * var_chaste_interface__i_Ksts_rsts_gate__rsts * var_chaste_interface__i_Ksts_ssts_gate__ssts * var_membrane_permeabilities__gKsts; // microA
        const double var_membrane_permeabilities__gKtos = (1.0 - var_membrane_permeabilities__fKtot) * (var_model_parameters__Sms + var_model_parameters__Smt) * mParameters[3]; // milliS
        const double var_i_Ktos__i_Ktos = (-var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * (0.88600000000000001 * var_chaste_interface__i_Ktos_ss_gate__ss + 0.114 * var_chaste_interface__i_Ktos_sss_gate__sss) * var_chaste_interface__i_Ktos_rs_gate__rs * var_membrane_permeabilities__gKtos; // microA
        const double var_membrane_permeabilities__gNabs = (1.0 - var_membrane_permeabilities__fNabt) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__gNab; // milliS
        const double var_i_Nabs__i_Nabs = (-var_i_Nas__E_Nas + var_chaste_interface__Vms__Vms) * var_membrane_permeabilities__gNabs; // microA
        const double var_membrane_permeabilities__gNas = (1.0 - var_membrane_permeabilities__fNat) * (var_model_parameters__Sms + var_model_parameters__Smt) * mParameters[0]; // milliS
        const double var_i_Nas__i_Nas = pow(var_chaste_interface__i_Nas_m_gate__m, 3) * (-var_model_parameters__R * var_model_parameters__T * log((var_model_parameters__Nae + 0.12 * var_model_parameters__Ke) / (var_chaste_interface__ion_concentrations__Nai + 0.12 * var_chaste_interface__ion_concentrations__Ki)) / var_model_parameters__F + var_chaste_interface__Vms__Vms) * var_chaste_interface__i_Nas_h_gate__h * var_membrane_permeabilities__gNas; // microA
        const double var_membrane_permeabilities__i_NaCa_maxs = (1.0 - var_membrane_permeabilities__fNaCat) * (var_model_parameters__Sms + var_model_parameters__Smt) * mParameters[2]; // microA
        const double var_i_NaCas__i_NaCas = (pow(var_chaste_interface__ion_concentrations__Nai, 3) * var_model_parameters__Cae * exp(0.018700000000000001 * var_chaste_interface__Vms__Vms) - pow(var_model_parameters__Nae, 3) * var_chaste_interface__ion_concentrations__Cai * exp(-0.018700000000000001 * var_chaste_interface__Vms__Vms)) * var_membrane_permeabilities__i_NaCa_maxs / (1.0 + 0.0001 * pow(var_chaste_interface__ion_concentrations__Nai, 3) * var_model_parameters__Cae + 0.0001 * pow(var_model_parameters__Nae, 3) * var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_membrane_permeabilities__i_NaK_maxs = (1.0 - var_membrane_permeabilities__fNaKt) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__i_NaK_max; // microA
        const double var_i_NaKs__i_NaKs = var_membrane_permeabilities__i_NaK_maxs * var_model_parameters__Ke / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__ion_concentrations__Nai), 1.5)) * (1.5 + var_model_parameters__Ke) * (1.0 + 0.1245 * exp(-0.10000000000000001 * var_chaste_interface__Vms__Vms * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)) + 0.0052142857142857138 * (-1.0 + exp(0.01485884101040119 * var_model_parameters__Nae)) * exp(-var_chaste_interface__Vms__Vms * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)))); // microA
        const double var_membrane_permeabilities__i_pCa_maxs = (1.0 - var_membrane_permeabilities__fpCat) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__i_pCa_max; // microA
        const double var_i_pCas__i_pCas = var_chaste_interface__ion_concentrations__Cai * var_membrane_permeabilities__i_pCa_maxs / (0.00040000000000000002 + var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_model_parameters__ptcm = 30000000.0; // per_cm2
        const double var_model_parameters__pt = var_model_parameters__Sms * var_model_parameters__ptcm; // dimensionless
        const double var_model_parameters__radiust = 1.5e-5; // cm
        const double var_model_parameters__Lt = 0.15915507752443828 * var_model_parameters__Smt / (var_model_parameters__pt * var_model_parameters__radiust); // cm
        const double var_model_parameters__Rst = 0.15915507752443828 * var_model_parameters__Lt * var_model_parameters__Rot / (var_model_parameters__pt * pow(var_model_parameters__radiust, 2)); // ohm
        const double var_i_circ__i_circ = 1000.0 * var_chaste_interface__Vmt__Vmt / var_model_parameters__Rst - 1000.0 * var_chaste_interface__Vms__Vms / var_model_parameters__Rst; // microA
        const double var_Vms__Vms_orig_deriv = 1000.0 * (-var_i_Cabs__i_Cabs - var_i_Cas__i_Cas - var_i_K1s__i_K1s - var_i_Kbs__i_Kbs - var_i_Kfs__i_Kfs - var_i_Ksts__i_Ksts - var_i_Ktos__i_Ktos - var_i_NaCas__i_NaCas - var_i_NaKs__i_NaKs - var_i_Nabs__i_Nabs - var_i_Nas__i_Nas - var_i_pCas__i_pCas + var_i_Stim__i_Stim + var_i_circ__i_circ) / var_model_parameters__Cms; // millivolt / second
        d_dt_chaste_interface_var_Vms__Vms = 0.001 * var_Vms__Vms_orig_deriv; // millivolt / millisecond

        double evalF = d_dt_chaste_interface_var_Vms__Vms;
        mEvalF[0] = d_dt_chaste_interface_var_Vms__Vms;
        double partialF = EvaluatePartialDerivative0(var_chaste_interface__environment__time_converted, rY, delta, true);
        if (fabs(partialF) < delta)
        {
            rY[v_index] += 0.5*evalF*mDt;
        }
        else
        {
            rY[v_index] += (evalF/partialF)*(exp(partialF*0.5*mDt)-1.0);
        }

        rY[v_index] = yinit;
        evalF = EvaluateYDerivative0(var_chaste_interface__environment__time_converted, rY);
        mEvalF[0] = evalF;
        partialF = EvaluatePartialDerivative0(var_chaste_interface__environment__time_converted, rY, delta, true);
        if (fabs(partialF) < delta)
        {
            rY[v_index] = yinit + evalF*mDt;
        }
        else
        {
            rY[v_index] = yinit + (evalF/partialF)*(exp(partialF*mDt)-1.0);
        }
    }

    void Cellpasek_simurda_christe_2006FromCellMLGRL2::ComputeOneStepExceptVoltage(double var_chaste_interface__environment__time_converted)
    {
        std::vector<double>& rY = rGetStateVariables();
        const double delta=1e-8;
        const unsigned size = GetNumberOfStateVariables();
        mYInit = rY;
        double y_save;

        double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -79.709547
        double var_chaste_interface__ion_concentrations__Cai = rY[1];
        // Units: millimolar; Initial value: 3.5486498e-05
        double var_chaste_interface__i_Nas_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 2.1832558e-06
        double var_chaste_interface__i_Nas_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.58232781
        double var_chaste_interface__i_Nat_m_gate__m = rY[4];
        // Units: dimensionless; Initial value: 2.1832694e-06
        double var_chaste_interface__i_Nat_h_gate__h = rY[5];
        // Units: dimensionless; Initial value: 0.58232717
        double var_chaste_interface__i_Cas__Co = rY[6];
        // Units: dimensionless; Initial value: 2.5436465e-06
        double var_chaste_interface__i_Cas__C1 = rY[7];
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__i_Cas__C2 = rY[8];
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__i_Cas__Ccast = rY[9];
        // Units: dimensionless; Initial value: 0.99570063
        double var_chaste_interface__i_Cat__Co = rY[10];
        // Units: dimensionless; Initial value: 2.543652e-06
        double var_chaste_interface__i_Cat__C1 = rY[11];
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__i_Cat__C2 = rY[12];
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__i_Cat__Ccast = rY[13];
        // Units: dimensionless; Initial value: 0.99570063
        double var_chaste_interface__i_Ktos_rs_gate__rs = rY[14];
        // Units: dimensionless; Initial value: 0.0023485072
        double var_chaste_interface__i_Ktos_ss_gate__ss = rY[15];
        // Units: dimensionless; Initial value: 0.98315843
        double var_chaste_interface__i_Ktos_sss_gate__sss = rY[16];
        // Units: dimensionless; Initial value: 0.6748337
        double var_chaste_interface__i_Ktot_rt_gate__rt = rY[17];
        // Units: dimensionless; Initial value: 0.0023485094
        double var_chaste_interface__i_Ktot_st_gate__st = rY[18];
        // Units: dimensionless; Initial value: 0.98315865
        double var_chaste_interface__i_Ktot_sst_gate__sst = rY[19];
        // Units: dimensionless; Initial value: 0.67478532
        double var_chaste_interface__i_Ksts_rsts_gate__rsts = rY[20];
        // Units: dimensionless; Initial value: 0.0031079213
        double var_chaste_interface__i_Ksts_ssts_gate__ssts = rY[21];
        // Units: dimensionless; Initial value: 0.30773393
        double var_chaste_interface__i_Kstt_rstt_gate__rstt = rY[22];
        // Units: dimensionless; Initial value: 0.0031079241
        double var_chaste_interface__i_Kstt_sstt_gate__sstt = rY[23];
        // Units: dimensionless; Initial value: 0.30773368
        double var_chaste_interface__i_Kfs_qs_gate__qs = rY[24];
        // Units: dimensionless; Initial value: 0.0034357356
        double var_chaste_interface__i_Kft_qt_gate__qt = rY[25];
        // Units: dimensionless; Initial value: 0.0034357175
        double var_chaste_interface__JCaSRrel__F1 = rY[26];
        // Units: dimensionless; Initial value: 0.67606483
        double var_chaste_interface__JCaSRrel__F2 = rY[27];
        // Units: dimensionless; Initial value: 0.00038333331
        double var_chaste_interface__JCaSRrel__F3 = rY[28];
        // Units: dimensionless; Initial value: 6.4516879e-11
        double var_chaste_interface__JCaSRrel__F4 = rY[29];
        // Units: dimensionless; Initial value: 0.32355462
        double var_chaste_interface__CaSRup__CaSRup = rY[30];
        // Units: millimolar; Initial value: 0.22755058
        double var_chaste_interface__CaSRrel__CaSRrel = rY[31];
        // Units: millimolar; Initial value: 0.22638169
        double var_chaste_interface__ion_concentrations__Nai = rY[32];
        // Units: millimolar; Initial value: 6.9435814
        double var_chaste_interface__ion_concentrations__Ki = rY[33];
        // Units: millimolar; Initial value: 137.53311
        double var_chaste_interface__ion_concentrations__Nat = rY[34];
        // Units: millimolar; Initial value: 140.01386
        double var_chaste_interface__ion_concentrations__Cat = rY[35];
        // Units: millimolar; Initial value: 1.2271399
        double var_chaste_interface__ion_concentrations__Kt = rY[36];
        // Units: millimolar; Initial value: 5.3627676
        double var_chaste_interface__ion_concentrations__Cass = rY[37];
        // Units: millimolar; Initial value: 4.3112114e-05
        double var_chaste_interface__ion_concentrations__BTRH = rY[38];
        // Units: millimolar; Initial value: 0.92804169
        double var_chaste_interface__ion_concentrations__BTRL = rY[39];
        // Units: millimolar; Initial value: 0.034317829
        double var_chaste_interface__Vmt__Vmt = rY[40];
        // Units: millivolt; Initial value: -79.709536
        

        // Mathematics
        double d_dt_chaste_interface_var_Vms__Vms;
        const double var_JCaSRrel__kam = 576.0; // per_second
        const double var_JCaSRrel__kap = 12150000000000.0; // per_millimolar4_per_second
        const double var_JCaSRrel__kbm = 1930.0; // per_second
        const double var_JCaSRrel__kbp = 4050000000.0; // per_millimolar3_per_second
        const double var_JCaSRrel__kcm = 0.80000000000000004; // per_second
        const double var_JCaSRrel__kcp = 18.0; // per_second
        const double var_JCaSRrel__F4_orig_deriv = var_chaste_interface__JCaSRrel__F2 * var_JCaSRrel__kcp - var_chaste_interface__JCaSRrel__F4 * var_JCaSRrel__kcm; // 1 / second
        const double d_dt_chaste_interface_var_JCaSRrel__F4 = 0.001 * var_JCaSRrel__F4_orig_deriv; // 1 / millisecond
        const double var_JCad__taud = 0.0031250000000000002; // second
        const double var_Jtr__tautr = 0.034479999999999997; // second
        const double var_i_Cas__C1inf = 1 / (1.0 + exp(4.9444444444444438 + 0.18518518518518517 * var_chaste_interface__Vms__Vms)); // dimensionless
        const double var_i_Cas__C2inf = var_i_Cas__C1inf; // dimensionless
        const double var_i_Cas__Coinf = 1 / (1.0 + exp(-3.0600000000000001 - 0.20000000000000001 * var_chaste_interface__Vms__Vms)); // dimensionless
        const double var_i_Cas__tauC1 = 0.014999999999999999 / (1.0 + exp(3.0 + 0.040000000000000001 * var_chaste_interface__Vms__Vms)) + 0.040000000000000001 / (1.0 + exp(1.0 - 0.040000000000000001 * var_chaste_interface__Vms__Vms)) + 0.105 * exp(-14.0625 * pow((1 + 0.022222222222222223 * var_chaste_interface__Vms__Vms), 2)); // second
        const double var_i_Cas__C1_orig_deriv = (-var_chaste_interface__i_Cas__C1 + var_i_Cas__C1inf) / var_i_Cas__tauC1; // 1 / second
        const double d_dt_chaste_interface_var_i_Cas__C1 = 0.001 * var_i_Cas__C1_orig_deriv; // 1 / millisecond
        const double var_i_Cas__tauC2 = 0.014999999999999999 / (1.0 + exp(3.0 + 0.040000000000000001 * var_chaste_interface__Vms__Vms)) + 0.080000000000000002 / (1.0 + exp(-11.0 - 0.20000000000000001 * var_chaste_interface__Vms__Vms)) + 0.041000000000000002 * exp(-15.340277777777779 * pow((1 + 0.021276595744680851 * var_chaste_interface__Vms__Vms), 2)); // second
        const double var_i_Cas__C2_orig_deriv = (-var_chaste_interface__i_Cas__C2 + var_i_Cas__C2inf) / var_i_Cas__tauC2; // 1 / second
        const double d_dt_chaste_interface_var_i_Cas__C2 = 0.001 * var_i_Cas__C2_orig_deriv; // 1 / millisecond
        const double var_i_Cas__tauCcast = 0.0089999999999999993; // second
        const double var_i_Cas__tauCo = 0.00025000000000000001 + 0.0010499999999999999 * exp(-0.64800000000000002 * pow((-1 + 0.055555555555555552 * var_chaste_interface__Vms__Vms), 2)) + 0.0030500000000000002 * exp(-0.22049999999999997 * pow((1 + 0.14285714285714285 * var_chaste_interface__Vms__Vms), 2)); // second
        const double var_i_Cas__Co_orig_deriv = (-var_chaste_interface__i_Cas__Co + var_i_Cas__Coinf) / var_i_Cas__tauCo; // 1 / second
        const double d_dt_chaste_interface_var_i_Cas__Co = 0.001 * var_i_Cas__Co_orig_deriv; // 1 / millisecond
        const double var_i_Cat__C1inf = 1 / (1.0 + exp(4.9444444444444438 + 0.18518518518518517 * var_chaste_interface__Vmt__Vmt)); // dimensionless
        const double var_i_Cat__C2inf = var_i_Cat__C1inf; // dimensionless
        const double var_i_Cat__Coinf = 1 / (1.0 + exp(-3.0600000000000001 - 0.20000000000000001 * var_chaste_interface__Vmt__Vmt)); // dimensionless
        const double var_i_Cat__tauC1 = 0.014999999999999999 / (1.0 + exp(3.0 + 0.040000000000000001 * var_chaste_interface__Vmt__Vmt)) + 0.040000000000000001 / (1.0 + exp(1.0 - 0.040000000000000001 * var_chaste_interface__Vmt__Vmt)) + 0.105 * exp(-14.0625 * pow((1 + 0.022222222222222223 * var_chaste_interface__Vmt__Vmt), 2)); // second
        const double var_i_Cat__C1_orig_deriv = (-var_chaste_interface__i_Cat__C1 + var_i_Cat__C1inf) / var_i_Cat__tauC1; // 1 / second
        const double d_dt_chaste_interface_var_i_Cat__C1 = 0.001 * var_i_Cat__C1_orig_deriv; // 1 / millisecond
        const double var_i_Cat__tauC2 = 0.014999999999999999 / (1.0 + exp(3.0 + 0.040000000000000001 * var_chaste_interface__Vmt__Vmt)) + 0.080000000000000002 / (1.0 + exp(-11.0 - 0.20000000000000001 * var_chaste_interface__Vmt__Vmt)) + 0.041000000000000002 * exp(-15.340277777777779 * pow((1 + 0.021276595744680851 * var_chaste_interface__Vmt__Vmt), 2)); // second
        const double var_i_Cat__C2_orig_deriv = (-var_chaste_interface__i_Cat__C2 + var_i_Cat__C2inf) / var_i_Cat__tauC2; // 1 / second
        const double d_dt_chaste_interface_var_i_Cat__C2 = 0.001 * var_i_Cat__C2_orig_deriv; // 1 / millisecond
        const double var_i_Cat__tauCcast = 0.0089999999999999993; // second
        const double var_i_Cat__tauCo = 0.00025000000000000001 + 0.0010499999999999999 * exp(-0.64800000000000002 * pow((-1 + 0.055555555555555552 * var_chaste_interface__Vmt__Vmt), 2)) + 0.0030500000000000002 * exp(-0.22049999999999997 * pow((1 + 0.14285714285714285 * var_chaste_interface__Vmt__Vmt), 2)); // second
        const double var_i_Cat__Co_orig_deriv = (-var_chaste_interface__i_Cat__Co + var_i_Cat__Coinf) / var_i_Cat__tauCo; // 1 / second
        const double d_dt_chaste_interface_var_i_Cat__Co = 0.001 * var_i_Cat__Co_orig_deriv; // 1 / millisecond
        const double var_i_Kfs_qs_gate__qinfs = 1 / (1.0 + exp(13.225190839694655 + 0.095419847328244267 * var_chaste_interface__Vms__Vms)); // dimensionless
        const double var_i_Kfs_qs_gate__tauqs = 1 / (0.56230000000000002 * exp(-5.6377730796335452 - 0.070472163495419307 * var_chaste_interface__Vms__Vms) + 0.11885 * exp(2.8198801550934083 + 0.035248501938667604 * var_chaste_interface__Vms__Vms)); // second
        const double var_i_Kfs_qs_gate__qs_orig_deriv = (-var_chaste_interface__i_Kfs_qs_gate__qs + var_i_Kfs_qs_gate__qinfs) / var_i_Kfs_qs_gate__tauqs; // 1 / second
        const double d_dt_chaste_interface_var_i_Kfs_qs_gate__qs = 0.001 * var_i_Kfs_qs_gate__qs_orig_deriv; // 1 / millisecond
        const double var_i_Kft_qt_gate__qinft = 1 / (1.0 + exp(13.225190839694655 + 0.095419847328244267 * var_chaste_interface__Vmt__Vmt)); // dimensionless
        const double var_i_Kft_qt_gate__tauqt = 1 / (0.56230000000000002 * exp(-5.6377730796335452 - 0.070472163495419307 * var_chaste_interface__Vmt__Vmt) + 0.11885 * exp(2.8198801550934083 + 0.035248501938667604 * var_chaste_interface__Vmt__Vmt)); // second
        const double var_i_Kft_qt_gate__qt_orig_deriv = (-var_chaste_interface__i_Kft_qt_gate__qt + var_i_Kft_qt_gate__qinft) / var_i_Kft_qt_gate__tauqt; // 1 / second
        const double d_dt_chaste_interface_var_i_Kft_qt_gate__qt = 0.001 * var_i_Kft_qt_gate__qt_orig_deriv; // 1 / millisecond
        const double var_i_Ksts_rsts_gate__rstinfs = 1 / (1.0 + exp(-0.97292724196277491 - 0.084602368866328256 * var_chaste_interface__Vms__Vms)); // dimensionless
        const double var_i_Ksts_rsts_gate__taursts = 10.0 / (45.159999999999997 * exp(1.7885000000000002 + 0.035770000000000003 * var_chaste_interface__Vms__Vms) + 98.900000000000006 * exp(-3.8000000000000003 - 0.10000000000000001 * var_chaste_interface__Vms__Vms)); // second
        const double var_i_Ksts_rsts_gate__rsts_orig_deriv = (-var_chaste_interface__i_Ksts_rsts_gate__rsts + var_i_Ksts_rsts_gate__rstinfs) / var_i_Ksts_rsts_gate__taursts; // 1 / second
        const double d_dt_chaste_interface_var_i_Ksts_rsts_gate__rsts = 0.001 * var_i_Ksts_rsts_gate__rsts_orig_deriv; // 1 / millisecond
        const double var_i_Ksts_ssts_gate__sstinfs = 1 / (1.0 + exp(8.4951456310679614 + 0.097087378640776698 * var_chaste_interface__Vms__Vms)); // dimensionless
        const double var_i_Ksts_ssts_gate__taussts = 2.1000000000000001; // second
        const double var_i_Ksts_ssts_gate__ssts_orig_deriv = (-var_chaste_interface__i_Ksts_ssts_gate__ssts + var_i_Ksts_ssts_gate__sstinfs) / var_i_Ksts_ssts_gate__taussts; // 1 / second
        const double d_dt_chaste_interface_var_i_Ksts_ssts_gate__ssts = 0.001 * var_i_Ksts_ssts_gate__ssts_orig_deriv; // 1 / millisecond
        const double var_i_Kstt_rstt_gate__rstinft = 1 / (1.0 + exp(-0.97292724196277491 - 0.084602368866328256 * var_chaste_interface__Vmt__Vmt)); // dimensionless
        const double var_i_Kstt_rstt_gate__taurstt = 10.0 / (45.159999999999997 * exp(1.7885000000000002 + 0.035770000000000003 * var_chaste_interface__Vmt__Vmt) + 98.900000000000006 * exp(-3.8000000000000003 - 0.10000000000000001 * var_chaste_interface__Vmt__Vmt)); // second
        const double var_i_Kstt_rstt_gate__rstt_orig_deriv = (-var_chaste_interface__i_Kstt_rstt_gate__rstt + var_i_Kstt_rstt_gate__rstinft) / var_i_Kstt_rstt_gate__taurstt; // 1 / second
        const double d_dt_chaste_interface_var_i_Kstt_rstt_gate__rstt = 0.001 * var_i_Kstt_rstt_gate__rstt_orig_deriv; // 1 / millisecond
        const double var_i_Kstt_sstt_gate__sstinft = 1 / (1.0 + exp(8.4951456310679614 + 0.097087378640776698 * var_chaste_interface__Vmt__Vmt)); // dimensionless
        const double var_i_Kstt_sstt_gate__tausstt = 2.1000000000000001; // second
        const double var_i_Kstt_sstt_gate__sstt_orig_deriv = (-var_chaste_interface__i_Kstt_sstt_gate__sstt + var_i_Kstt_sstt_gate__sstinft) / var_i_Kstt_sstt_gate__tausstt; // 1 / second
        const double d_dt_chaste_interface_var_i_Kstt_sstt_gate__sstt = 0.001 * var_i_Kstt_sstt_gate__sstt_orig_deriv; // 1 / millisecond
        const double var_i_Ktos_rs_gate__rinfs = 1 / (1.0 + exp(-0.92819614711033271 - 0.087565674255691769 * var_chaste_interface__Vms__Vms)); // dimensionless
        const double var_i_Ktos_rs_gate__taurs = 1 / (45.159999999999997 * exp(1.7885000000000002 + 0.035770000000000003 * var_chaste_interface__Vms__Vms) + 98.900000000000006 * exp(-3.8000000000000003 - 0.10000000000000001 * var_chaste_interface__Vms__Vms)); // second
        const double var_i_Ktos_rs_gate__rs_orig_deriv = (-var_chaste_interface__i_Ktos_rs_gate__rs + var_i_Ktos_rs_gate__rinfs) / var_i_Ktos_rs_gate__taurs; // 1 / second
        const double d_dt_chaste_interface_var_i_Ktos_rs_gate__rs = 0.001 * var_i_Ktos_rs_gate__rs_orig_deriv; // 1 / millisecond
        const double var_i_Ktos_ss_gate__sinfs = 1 / (1.0 + exp(6.5803808776746413 + 0.14526227103034528 * var_chaste_interface__Vms__Vms)); // dimensionless
        const double var_i_Ktos_ss_gate__tauss = 0.035000000000000003 + 0.34999999999999998 * exp(-21.734244000000004 * pow((1 + 0.014285714285714285 * var_chaste_interface__Vms__Vms), 2)); // second
        const double var_i_Ktos_ss_gate__ss_orig_deriv = (-var_chaste_interface__i_Ktos_ss_gate__ss + var_i_Ktos_ss_gate__sinfs) / var_i_Ktos_ss_gate__tauss; // 1 / second
        const double d_dt_chaste_interface_var_i_Ktos_ss_gate__ss = 0.001 * var_i_Ktos_ss_gate__ss_orig_deriv; // 1 / millisecond
        const double var_i_Ktos_sss_gate__ssinfs = 1 / (1.0 + exp(6.5803808776746413 + 0.14526227103034528 * var_chaste_interface__Vms__Vms)); // dimensionless
        const double var_i_Ktos_sss_gate__tausss = 0.035000000000000003 + 3.7000000000000002 * exp(-5.433561000000001 * pow((1 + 0.014285714285714285 * var_chaste_interface__Vms__Vms), 2)); // second
        const double var_i_Ktos_sss_gate__sss_orig_deriv = (-var_chaste_interface__i_Ktos_sss_gate__sss + var_i_Ktos_sss_gate__ssinfs) / var_i_Ktos_sss_gate__tausss; // 1 / second
        const double d_dt_chaste_interface_var_i_Ktos_sss_gate__sss = 0.001 * var_i_Ktos_sss_gate__sss_orig_deriv; // 1 / millisecond
        const double var_i_Ktot_rt_gate__rinft = 1 / (1.0 + exp(-0.92819614711033271 - 0.087565674255691769 * var_chaste_interface__Vmt__Vmt)); // dimensionless
        const double var_i_Ktot_rt_gate__taurt = 1 / (45.159999999999997 * exp(1.7885000000000002 + 0.035770000000000003 * var_chaste_interface__Vmt__Vmt) + 98.900000000000006 * exp(-3.8000000000000003 - 0.10000000000000001 * var_chaste_interface__Vmt__Vmt)); // second
        const double var_i_Ktot_rt_gate__rt_orig_deriv = (-var_chaste_interface__i_Ktot_rt_gate__rt + var_i_Ktot_rt_gate__rinft) / var_i_Ktot_rt_gate__taurt; // 1 / second
        const double d_dt_chaste_interface_var_i_Ktot_rt_gate__rt = 0.001 * var_i_Ktot_rt_gate__rt_orig_deriv; // 1 / millisecond
        const double var_i_Ktot_sst_gate__ssinft = 1 / (1.0 + exp(6.5803808776746413 + 0.14526227103034528 * var_chaste_interface__Vmt__Vmt)); // dimensionless
        const double var_i_Ktot_sst_gate__tausst = 0.035000000000000003 + 3.7000000000000002 * exp(-5.433561000000001 * pow((1 + 0.014285714285714285 * var_chaste_interface__Vmt__Vmt), 2)); // second
        const double var_i_Ktot_sst_gate__sst_orig_deriv = (-var_chaste_interface__i_Ktot_sst_gate__sst + var_i_Ktot_sst_gate__ssinft) / var_i_Ktot_sst_gate__tausst; // 1 / second
        const double d_dt_chaste_interface_var_i_Ktot_sst_gate__sst = 0.001 * var_i_Ktot_sst_gate__sst_orig_deriv; // 1 / millisecond
        const double var_i_Ktot_st_gate__sinft = 1 / (1.0 + exp(6.5803808776746413 + 0.14526227103034528 * var_chaste_interface__Vmt__Vmt)); // dimensionless
        const double var_i_Ktot_st_gate__taust = 0.035000000000000003 + 0.34999999999999998 * exp(-21.734244000000004 * pow((1 + 0.014285714285714285 * var_chaste_interface__Vmt__Vmt), 2)); // second
        const double var_i_Ktot_st_gate__st_orig_deriv = (-var_chaste_interface__i_Ktot_st_gate__st + var_i_Ktot_st_gate__sinft) / var_i_Ktot_st_gate__taust; // 1 / second
        const double d_dt_chaste_interface_var_i_Ktot_st_gate__st = 0.001 * var_i_Ktot_st_gate__st_orig_deriv; // 1 / millisecond
        const double var_i_Nas_h_gate__alpha_h = 284.39999999999998 / (1.0 + exp(9.4110800000000001 + 0.081199999999999994 * var_chaste_interface__Vms__Vms)); // per_second
        const double var_i_Nas_h_gate__beta_h = ((fabs(64.400000000000006 + var_chaste_interface__Vms__Vms) < 4.5454545455347883e-7) ? (8.5318181809268536e-6 / (1.0 - exp(-9.999999998955289e-8)) - 1099999.9999805812 * (64.399999545454548 + var_chaste_interface__Vms__Vms) * (-8.5318181809268536e-6 / (1.0 - exp(-9.999999998955289e-8)) - 8.531818183010741e-6 / (1.0 - exp(1.000000000139778e-7)))) : (18.77 * (64.400000000000006 + var_chaste_interface__Vms__Vms) / (1.0 - exp(-14.168000000000001 - 0.22 * var_chaste_interface__Vms__Vms)))); // per_second
        const double var_i_Nas_h_gate__h_orig_deriv = (1.0 - var_chaste_interface__i_Nas_h_gate__h) * var_i_Nas_h_gate__alpha_h - var_i_Nas_h_gate__beta_h * var_chaste_interface__i_Nas_h_gate__h; // 1 / second
        const double d_dt_chaste_interface_var_i_Nas_h_gate__h = 0.001 * var_i_Nas_h_gate__h_orig_deriv; // 1 / millisecond
        const double var_i_Nas_m_gate__alpha_m = ((fabs(59.299999999999997 + var_chaste_interface__Vms__Vms) < 1.8181818181584042e-7) ? (2.1320000002980068e-5 / (1.0 - exp(-1.000000000139778e-7)) - 2750000.0000354135 * (59.299999818181817 + var_chaste_interface__Vms__Vms) * (-2.131999999647083e-5 / (1.0 - exp(9.9999999983446669e-8)) - 2.1320000002980068e-5 / (1.0 - exp(-1.000000000139778e-7)))) : (117.26000000000001 * (59.299999999999997 + var_chaste_interface__Vms__Vms) / (1.0 - exp(-32.615000000000002 - 0.55000000000000004 * var_chaste_interface__Vms__Vms)))); // per_second
        const double var_i_Nas_m_gate__beta_m = 3800.0 * exp(-4.3919999999999995 - 0.071999999999999995 * var_chaste_interface__Vms__Vms); // per_second
        const double var_i_Nas_m_gate__m_orig_deriv = (1.0 - var_chaste_interface__i_Nas_m_gate__m) * var_i_Nas_m_gate__alpha_m - var_i_Nas_m_gate__beta_m * var_chaste_interface__i_Nas_m_gate__m; // 1 / second
        const double d_dt_chaste_interface_var_i_Nas_m_gate__m = 0.001 * var_i_Nas_m_gate__m_orig_deriv; // 1 / millisecond
        const double var_i_Nat_h_gate__alpha_h = 284.39999999999998 / (1.0 + exp(9.4110800000000001 + 0.081199999999999994 * var_chaste_interface__Vmt__Vmt)); // per_second
        const double var_i_Nat_h_gate__beta_h = 18.77 * (64.400000000000006 + var_chaste_interface__Vmt__Vmt) / (1.0 - exp(-14.168000000000001 - 0.22 * var_chaste_interface__Vmt__Vmt)); // per_second
        const double var_i_Nat_h_gate__h_orig_deriv = (1.0 - var_chaste_interface__i_Nat_h_gate__h) * var_i_Nat_h_gate__alpha_h - var_i_Nat_h_gate__beta_h * var_chaste_interface__i_Nat_h_gate__h; // 1 / second
        const double d_dt_chaste_interface_var_i_Nat_h_gate__h = 0.001 * var_i_Nat_h_gate__h_orig_deriv; // 1 / millisecond
        const double var_i_Nat_m_gate__alpha_m = 117.26000000000001 * (59.299999999999997 + var_chaste_interface__Vmt__Vmt) / (1.0 - exp(-32.615000000000002 - 0.55000000000000004 * var_chaste_interface__Vmt__Vmt)); // per_second
        const double var_i_Nat_m_gate__beta_m = 3800.0 * exp(-4.3919999999999995 - 0.071999999999999995 * var_chaste_interface__Vmt__Vmt); // per_second
        const double var_i_Nat_m_gate__m_orig_deriv = (1.0 - var_chaste_interface__i_Nat_m_gate__m) * var_i_Nat_m_gate__alpha_m - var_i_Nat_m_gate__beta_m * var_chaste_interface__i_Nat_m_gate__m; // 1 / second
        const double d_dt_chaste_interface_var_i_Nat_m_gate__m = 0.001 * var_i_Nat_m_gate__m_orig_deriv; // 1 / millisecond
        const double var_i_Stim__i_Stim_converted = -GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_JCaSRrel__F1_orig_deriv = var_chaste_interface__JCaSRrel__F2 * var_JCaSRrel__kam - pow(var_chaste_interface__ion_concentrations__Cass, 4) * var_chaste_interface__JCaSRrel__F1 * var_JCaSRrel__kap; // 1 / second
        const double d_dt_chaste_interface_var_JCaSRrel__F1 = 0.001 * var_JCaSRrel__F1_orig_deriv; // 1 / millisecond
        const double var_JCaSRrel__F2_orig_deriv = var_chaste_interface__JCaSRrel__F3 * var_JCaSRrel__kbm + var_chaste_interface__JCaSRrel__F4 * var_JCaSRrel__kcm - (pow(var_chaste_interface__ion_concentrations__Cass, 3) * var_JCaSRrel__kbp + var_JCaSRrel__kam + var_JCaSRrel__kcp) * var_chaste_interface__JCaSRrel__F2 + pow(var_chaste_interface__ion_concentrations__Cass, 4) * var_chaste_interface__JCaSRrel__F1 * var_JCaSRrel__kap; // 1 / second
        const double d_dt_chaste_interface_var_JCaSRrel__F2 = 0.001 * var_JCaSRrel__F2_orig_deriv; // 1 / millisecond
        const double var_JCaSRrel__F3_orig_deriv = -var_chaste_interface__JCaSRrel__F3 * var_JCaSRrel__kbm + pow(var_chaste_interface__ion_concentrations__Cass, 3) * var_chaste_interface__JCaSRrel__F2 * var_JCaSRrel__kbp; // 1 / second
        const double d_dt_chaste_interface_var_JCaSRrel__F3 = 0.001 * var_JCaSRrel__F3_orig_deriv; // 1 / millisecond
        const double var_i_Cas__Ccastinf = 1 / (1.0 + 100.0 * var_chaste_interface__ion_concentrations__Cass); // dimensionless
        const double var_i_Cas__Ccast_orig_deriv = (-var_chaste_interface__i_Cas__Ccast + var_i_Cas__Ccastinf) / var_i_Cas__tauCcast; // 1 / second
        const double d_dt_chaste_interface_var_i_Cas__Ccast = 0.001 * var_i_Cas__Ccast_orig_deriv; // 1 / millisecond
        const double var_i_Cas__i_Cas = ((fabs(var_chaste_interface__Vms__Vms) < 1.2701813471502589e-6) ? (393644.57769891288 * (1.2701813471502589e-6 + var_chaste_interface__Vms__Vms) * (5.2689000000000005e-11 * (-0.40920000000000001 + var_chaste_interface__ion_concentrations__Cass * exp(9.9999999999999995e-8)) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C1) * var_chaste_interface__i_Cas__Co / (-1.0 + exp(9.9999999999999995e-8)) + 5.2689000000000005e-11 * (-0.40920000000000001 + var_chaste_interface__ion_concentrations__Cass * exp(-9.9999999999999995e-8)) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C1) * var_chaste_interface__i_Cas__Co / (-1.0 + exp(-9.9999999999999995e-8))) - 5.2689000000000005e-11 * (-0.40920000000000001 + var_chaste_interface__ion_concentrations__Cass * exp(-9.9999999999999995e-8)) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C1) * var_chaste_interface__i_Cas__Co / (-1.0 + exp(-9.9999999999999995e-8))) : (4.1481478308756044e-5 * (-0.40920000000000001 + var_chaste_interface__ion_concentrations__Cass * exp(0.078728915539782576 * var_chaste_interface__Vms__Vms)) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C1) * var_chaste_interface__Vms__Vms * var_chaste_interface__i_Cas__Co / (-1.0 + exp(0.078728915539782576 * var_chaste_interface__Vms__Vms)))); // microA
        const double var_i_Cat__Ccastinf = 1 / (1.0 + 100.0 * var_chaste_interface__ion_concentrations__Cass); // dimensionless
        const double var_i_Cat__Ccast_orig_deriv = (-var_chaste_interface__i_Cat__Ccast + var_i_Cat__Ccastinf) / var_i_Cat__tauCcast; // 1 / second
        const double d_dt_chaste_interface_var_i_Cat__Ccast = 0.001 * var_i_Cat__Ccast_orig_deriv; // 1 / millisecond
        const double var_ion_concentrations__dBTRH = -0.070000000000000007 * var_chaste_interface__ion_concentrations__BTRH + 20000.0 * (1.0 - var_chaste_interface__ion_concentrations__BTRH) * var_chaste_interface__ion_concentrations__Cai; // millimolar_per_second
        const double var_ion_concentrations__BTRH_orig_deriv = var_ion_concentrations__dBTRH; // millimolar / second
        const double d_dt_chaste_interface_var_ion_concentrations__BTRH = 0.001 * var_ion_concentrations__BTRH_orig_deriv; // millimolar / millisecond
        const double var_ion_concentrations__dBTRL = -40.0 * var_chaste_interface__ion_concentrations__BTRL + 40000.0 * (1.0 - var_chaste_interface__ion_concentrations__BTRL) * var_chaste_interface__ion_concentrations__Cai; // millimolar_per_second
        const double var_ion_concentrations__BTRL_orig_deriv = var_ion_concentrations__dBTRL; // millimolar / second
        const double d_dt_chaste_interface_var_ion_concentrations__BTRL = 0.001 * var_ion_concentrations__BTRL_orig_deriv; // millimolar / millisecond
        const double var_membrane_permeabilities__fCabt = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fCat = 0.87; // dimensionless
        const double var_membrane_permeabilities__fK1t = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fKbt = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fKft = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fKstt = 0.76000000000000001; // dimensionless
        const double var_membrane_permeabilities__fKtot = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fNaCat = 0.81000000000000005; // dimensionless
        const double var_membrane_permeabilities__fNaKt = 0.58999999999999997; // dimensionless
        const double var_membrane_permeabilities__fNabt = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fNat = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fpCat = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__gCa = 0.00021000000000000001; // cm_per_second
        const double var_membrane_permeabilities__gCab = 0.00064800000000000003; // milliS_per_cm2
        const double var_membrane_permeabilities__gKb = 0.0013799999999999999; // milliS_per_cm2
        const double var_membrane_permeabilities__gKf = 0.014500000000000001; // milliS_per_cm2
        const double var_membrane_permeabilities__gKst = 0.070000000000000007; // milliS_per_cm2
        const double var_membrane_permeabilities__gNab = 0.00080150000000000002; // milliS_per_cm2
        const double var_membrane_permeabilities__i_NaK_max = 1.0; // microA_per_cm2
        const double var_membrane_permeabilities__i_pCa_max = 0.84999999999999998; // microA_per_cm2
        const double var_model_parameters__Cae = 1.2; // millimolar
        const double var_model_parameters__F = 96500.0; // coulomb_per_mole
        const double var_model_parameters__Ke = 5.4000000000000004; // millimolar
        const double var_model_parameters__Nae = 140.0; // millimolar
        const double var_model_parameters__R = 8310.0; // joule_per_kilomole_kelvin
        const double var_model_parameters__Rot = 83.329999999999998; // ohm_cm
        const double var_model_parameters__Smtot = 0.0001; // cm2
        const double var_model_parameters__T = 295.0; // kelvin
        const double var_i_Cas__E_Cas = 0.5 * var_model_parameters__R * var_model_parameters__T * log(var_model_parameters__Cae / var_chaste_interface__ion_concentrations__Cai) / var_model_parameters__F; // millivolt
        const double var_i_Cat__E_Cat = 0.5 * var_model_parameters__R * var_model_parameters__T * log(var_chaste_interface__ion_concentrations__Cat / var_chaste_interface__ion_concentrations__Cai) / var_model_parameters__F; // millivolt
        const double var_i_Ktos__E_Ks = var_model_parameters__R * var_model_parameters__T * log(var_model_parameters__Ke / var_chaste_interface__ion_concentrations__Ki) / var_model_parameters__F; // millivolt
        const double var_i_Ktot__E_Kt = var_model_parameters__R * var_model_parameters__T * log(var_chaste_interface__ion_concentrations__Kt / var_chaste_interface__ion_concentrations__Ki) / var_model_parameters__F; // millivolt
        const double var_i_Nas__E_Nas = var_model_parameters__R * var_model_parameters__T * log(var_model_parameters__Nae / var_chaste_interface__ion_concentrations__Nai) / var_model_parameters__F; // millivolt
        const double var_i_Nat__E_Nat = var_model_parameters__R * var_model_parameters__T * log(var_chaste_interface__ion_concentrations__Nat / var_chaste_interface__ion_concentrations__Nai) / var_model_parameters__F; // millivolt
        const double var_model_parameters__Vc = 0.00012738853503184712 * var_model_parameters__Smtot; // cm3
        const double var_model_parameters__Sms = -4400.0 * var_model_parameters__Vc + var_model_parameters__Smtot; // cm2
        const double var_model_parameters__Cms = var_model_parameters__Sms; // microF
        const double var_i_Stim__i_Stim = var_i_Stim__i_Stim_converted * var_model_parameters__Cms / HeartConfig::Instance()->GetCapacitance(); // microA
        const double var_model_parameters__Smt = -var_model_parameters__Sms + var_model_parameters__Smtot; // cm2
        const double var_membrane_permeabilities__gCabs = (1.0 - var_membrane_permeabilities__fCabt) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__gCab; // milliS
        const double var_i_Cabs__i_Cabs = (-var_i_Cas__E_Cas + var_chaste_interface__Vms__Vms) * var_membrane_permeabilities__gCabs; // microA
        const double var_membrane_permeabilities__gCabt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fCabt * var_membrane_permeabilities__gCab; // milliS
        const double var_i_Cabt__i_Cabt = (-var_i_Cat__E_Cat + var_chaste_interface__Vmt__Vmt) * var_membrane_permeabilities__gCabt; // microA
        const double var_membrane_permeabilities__gCat = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fCat * var_membrane_permeabilities__gCa; // cm3_per_second
        const double var_i_Cat__i_Cat = 4.0 * pow(var_model_parameters__F, 2) * (-0.34100000000000003 * var_chaste_interface__ion_concentrations__Cat + var_chaste_interface__ion_concentrations__Cass * exp(2.0 * var_chaste_interface__Vmt__Vmt * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cat__Ccast) * var_chaste_interface__i_Cat__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cat__Ccast) * var_chaste_interface__i_Cat__C1) * var_chaste_interface__Vmt__Vmt * var_chaste_interface__i_Cat__Co * var_membrane_permeabilities__gCat / ((-1.0 + exp(2.0 * var_chaste_interface__Vmt__Vmt * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))) * var_model_parameters__R * var_model_parameters__T); // microA
        const double var_membrane_permeabilities__gK1s = (1.0 - var_membrane_permeabilities__fK1t) * (var_model_parameters__Sms + var_model_parameters__Smt) * mParameters[1]; // milliS
        const double var_i_K1s__i_K1s = (-1.73 - var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * var_membrane_permeabilities__gK1s / (1.0 + (1.0 + exp(8.0548387096774192 - 8.064516129032258 * var_model_parameters__Ke)) * exp(1.613 * (-1.73 - var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))); // microA
        const double var_membrane_permeabilities__gK1t = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fK1t * mParameters[1]; // milliS
        const double var_i_K1t__i_K1t = (-1.73 - var_i_Ktot__E_Kt + var_chaste_interface__Vmt__Vmt) * var_membrane_permeabilities__gK1t / (1.0 + (1.0 + exp(8.0548387096774192 - 8.064516129032258 * var_chaste_interface__ion_concentrations__Kt)) * exp(1.613 * (-1.73 - var_i_Ktot__E_Kt + var_chaste_interface__Vmt__Vmt) * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))); // microA
        const double var_membrane_permeabilities__gKbs = (1.0 - var_membrane_permeabilities__fKbt) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__gKb; // milliS
        const double var_i_Kbs__i_Kbs = (-var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * var_membrane_permeabilities__gKbs; // microA
        const double var_membrane_permeabilities__gKbt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fKbt * var_membrane_permeabilities__gKb; // milliS
        const double var_i_Kbt__i_Kbt = (-var_i_Ktot__E_Kt + var_chaste_interface__Vmt__Vmt) * var_membrane_permeabilities__gKbt; // microA
        const double var_membrane_permeabilities__gKfs = (1.0 - var_membrane_permeabilities__fKft) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__gKf; // milliS
        const double var_i_Kfs__i_Kfs = (1.0 * var_chaste_interface__Vms__Vms - 0.20000000000000001 * var_i_Nas__E_Nas - 0.80000000000000004 * var_i_Ktos__E_Ks) * var_chaste_interface__i_Kfs_qs_gate__qs * var_membrane_permeabilities__gKfs; // microA
        const double var_membrane_permeabilities__gKft = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fKft * var_membrane_permeabilities__gKf; // milliS
        const double var_i_Kft__i_Kft = (1.0 * var_chaste_interface__Vmt__Vmt - 0.20000000000000001 * var_i_Nat__E_Nat - 0.80000000000000004 * var_i_Ktot__E_Kt) * var_chaste_interface__i_Kft_qt_gate__qt * var_membrane_permeabilities__gKft; // microA
        const double var_membrane_permeabilities__gKsts = (1.0 - var_membrane_permeabilities__fKstt) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__gKst; // milliS
        const double var_i_Ksts__i_Ksts = (-var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * var_chaste_interface__i_Ksts_rsts_gate__rsts * var_chaste_interface__i_Ksts_ssts_gate__ssts * var_membrane_permeabilities__gKsts; // microA
        const double var_membrane_permeabilities__gKstt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fKstt * var_membrane_permeabilities__gKst; // milliS
        const double var_i_Kstt__i_Kstt = (-var_i_Ktot__E_Kt + var_chaste_interface__Vmt__Vmt) * var_chaste_interface__i_Kstt_rstt_gate__rstt * var_chaste_interface__i_Kstt_sstt_gate__sstt * var_membrane_permeabilities__gKstt; // microA
        const double var_membrane_permeabilities__gKtos = (1.0 - var_membrane_permeabilities__fKtot) * (var_model_parameters__Sms + var_model_parameters__Smt) * mParameters[3]; // milliS
        const double var_i_Ktos__i_Ktos = (-var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * (0.88600000000000001 * var_chaste_interface__i_Ktos_ss_gate__ss + 0.114 * var_chaste_interface__i_Ktos_sss_gate__sss) * var_chaste_interface__i_Ktos_rs_gate__rs * var_membrane_permeabilities__gKtos; // microA
        const double var_membrane_permeabilities__gKtot = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fKtot * mParameters[3]; // milliS
        const double var_i_Ktot__i_Ktot = (-var_i_Ktot__E_Kt + var_chaste_interface__Vmt__Vmt) * (0.88600000000000001 * var_chaste_interface__i_Ktot_st_gate__st + 0.114 * var_chaste_interface__i_Ktot_sst_gate__sst) * var_chaste_interface__i_Ktot_rt_gate__rt * var_membrane_permeabilities__gKtot; // microA
        const double var_membrane_permeabilities__gNabs = (1.0 - var_membrane_permeabilities__fNabt) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__gNab; // milliS
        const double var_i_Nabs__i_Nabs = (-var_i_Nas__E_Nas + var_chaste_interface__Vms__Vms) * var_membrane_permeabilities__gNabs; // microA
        const double var_membrane_permeabilities__gNabt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fNabt * var_membrane_permeabilities__gNab; // milliS
        const double var_i_Nabt__i_Nabt = (-var_i_Nat__E_Nat + var_chaste_interface__Vmt__Vmt) * var_membrane_permeabilities__gNabt; // microA
        const double var_membrane_permeabilities__gNas = (1.0 - var_membrane_permeabilities__fNat) * (var_model_parameters__Sms + var_model_parameters__Smt) * mParameters[0]; // milliS
        const double var_i_Nas__i_Nas = pow(var_chaste_interface__i_Nas_m_gate__m, 3) * (-var_model_parameters__R * var_model_parameters__T * log((var_model_parameters__Nae + 0.12 * var_model_parameters__Ke) / (var_chaste_interface__ion_concentrations__Nai + 0.12 * var_chaste_interface__ion_concentrations__Ki)) / var_model_parameters__F + var_chaste_interface__Vms__Vms) * var_chaste_interface__i_Nas_h_gate__h * var_membrane_permeabilities__gNas; // microA
        const double var_membrane_permeabilities__gNat = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fNat * mParameters[0]; // milliS
        const double var_i_Nat__i_Nat = pow(var_chaste_interface__i_Nat_m_gate__m, 3) * (-var_model_parameters__R * var_model_parameters__T * log((var_chaste_interface__ion_concentrations__Nat + 0.12 * var_chaste_interface__ion_concentrations__Kt) / (var_chaste_interface__ion_concentrations__Nai + 0.12 * var_chaste_interface__ion_concentrations__Ki)) / var_model_parameters__F + var_chaste_interface__Vmt__Vmt) * var_chaste_interface__i_Nat_h_gate__h * var_membrane_permeabilities__gNat; // microA
        const double var_membrane_permeabilities__i_NaCa_maxs = (1.0 - var_membrane_permeabilities__fNaCat) * (var_model_parameters__Sms + var_model_parameters__Smt) * mParameters[2]; // microA
        const double var_i_NaCas__i_NaCas = (pow(var_chaste_interface__ion_concentrations__Nai, 3) * var_model_parameters__Cae * exp(0.018700000000000001 * var_chaste_interface__Vms__Vms) - pow(var_model_parameters__Nae, 3) * var_chaste_interface__ion_concentrations__Cai * exp(-0.018700000000000001 * var_chaste_interface__Vms__Vms)) * var_membrane_permeabilities__i_NaCa_maxs / (1.0 + 0.0001 * pow(var_chaste_interface__ion_concentrations__Nai, 3) * var_model_parameters__Cae + 0.0001 * pow(var_model_parameters__Nae, 3) * var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_membrane_permeabilities__i_NaCa_maxt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fNaCat * mParameters[2]; // microA
        const double var_i_NaCat__i_NaCat = (pow(var_chaste_interface__ion_concentrations__Nai, 3) * var_chaste_interface__ion_concentrations__Cat * exp(0.018700000000000001 * var_chaste_interface__Vmt__Vmt) - pow(var_chaste_interface__ion_concentrations__Nat, 3) * var_chaste_interface__ion_concentrations__Cai * exp(-0.018700000000000001 * var_chaste_interface__Vmt__Vmt)) * var_membrane_permeabilities__i_NaCa_maxt / (1.0 + 0.0001 * pow(var_chaste_interface__ion_concentrations__Nai, 3) * var_chaste_interface__ion_concentrations__Cat + 0.0001 * pow(var_chaste_interface__ion_concentrations__Nat, 3) * var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_membrane_permeabilities__i_NaK_maxs = (1.0 - var_membrane_permeabilities__fNaKt) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__i_NaK_max; // microA
        const double var_i_NaKs__i_NaKs = var_membrane_permeabilities__i_NaK_maxs * var_model_parameters__Ke / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__ion_concentrations__Nai), 1.5)) * (1.5 + var_model_parameters__Ke) * (1.0 + 0.1245 * exp(-0.10000000000000001 * var_chaste_interface__Vms__Vms * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)) + 0.0052142857142857138 * (-1.0 + exp(0.01485884101040119 * var_model_parameters__Nae)) * exp(-var_chaste_interface__Vms__Vms * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)))); // microA
        const double var_membrane_permeabilities__i_NaK_maxt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fNaKt * var_membrane_permeabilities__i_NaK_max; // microA
        const double var_i_NaKt__i_NaKt = var_chaste_interface__ion_concentrations__Kt * var_membrane_permeabilities__i_NaK_maxt / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__ion_concentrations__Nai), 1.5)) * (1.5 + var_chaste_interface__ion_concentrations__Kt) * (1.0 + 0.1245 * exp(-0.10000000000000001 * var_chaste_interface__Vmt__Vmt * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)) + 0.0052142857142857138 * (-1.0 + exp(0.01485884101040119 * var_chaste_interface__ion_concentrations__Nat)) * exp(-var_chaste_interface__Vmt__Vmt * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)))); // microA
        const double var_membrane_permeabilities__i_pCa_maxs = (1.0 - var_membrane_permeabilities__fpCat) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__i_pCa_max; // microA
        const double var_i_pCas__i_pCas = var_chaste_interface__ion_concentrations__Cai * var_membrane_permeabilities__i_pCa_maxs / (0.00040000000000000002 + var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_membrane_permeabilities__i_pCa_maxt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fpCat * var_membrane_permeabilities__i_pCa_max; // microA
        const double var_i_pCat__i_pCat = var_chaste_interface__ion_concentrations__Cai * var_membrane_permeabilities__i_pCa_maxt / (0.00040000000000000002 + var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_model_parameters__Cmt = var_model_parameters__Smt; // microF
        const double var_model_parameters__VSRrel = 0.0035000000000000001 * var_model_parameters__Vc; // cm3
        const double var_JCaSRrel__JCaSRrel = 1800.0 * (-var_chaste_interface__ion_concentrations__Cass + var_chaste_interface__CaSRrel__CaSRrel) * (var_chaste_interface__JCaSRrel__F2 + var_chaste_interface__JCaSRrel__F3) * var_model_parameters__VSRrel; // millimolar_per_second
        const double var_Jtr__Jtr = (-var_chaste_interface__CaSRrel__CaSRrel + var_chaste_interface__CaSRup__CaSRup) * var_model_parameters__VSRrel / var_Jtr__tautr; // millimolar_per_second
        const double var_CaSRrel__CaSRrel_orig_deriv = (-var_JCaSRrel__JCaSRrel + var_Jtr__Jtr) / ((1.0 + 12.0 / pow((0.80000000000000004 + var_chaste_interface__CaSRrel__CaSRrel), 2)) * var_model_parameters__VSRrel); // millimolar / second
        const double d_dt_chaste_interface_var_CaSRrel__CaSRrel = 0.001 * var_CaSRrel__CaSRrel_orig_deriv; // millimolar / millisecond
        const double var_model_parameters__VSRup = 0.0315 * var_model_parameters__Vc; // cm3
        const double var_model_parameters__Vd = 7.4999999999999993e-5 * var_model_parameters__Vc; // cm3
        const double var_model_parameters__Vmyo = 0.58499999999999996 * var_model_parameters__Vc; // cm3
        const double var_JCaSRup__JCaSRup = (13542.188456570031 * pow(var_chaste_interface__ion_concentrations__Cai, 1.2) - 0.2735562310030395 * var_chaste_interface__CaSRup__CaSRup) * var_model_parameters__Vmyo / (1.0 + 33855.471141425078 * pow(var_chaste_interface__ion_concentrations__Cai, 1.2) + 0.303951367781155 * var_chaste_interface__CaSRup__CaSRup); // millimolar_per_second
        const double var_CaSRup__CaSRup_orig_deriv = (-var_Jtr__Jtr + var_JCaSRup__JCaSRup) / var_model_parameters__VSRup; // millimolar / second
        const double d_dt_chaste_interface_var_CaSRup__CaSRup = 0.001 * var_CaSRup__CaSRup_orig_deriv; // millimolar / millisecond
        const double var_JCad__JCad = (-var_chaste_interface__ion_concentrations__Cai + var_chaste_interface__ion_concentrations__Cass) * var_model_parameters__Vmyo / var_JCad__taud; // millimolar_per_second
        const double var_ion_concentrations__Cai_orig_deriv = (-0.070000000000000007 * var_ion_concentrations__dBTRL - 0.14000000000000001 * var_ion_concentrations__dBTRH + (-var_JCaSRup__JCaSRup + var_JCad__JCad) / var_model_parameters__Vmyo - 0.5 * (-2.0 * var_i_NaCas__i_NaCas - 2.0 * var_i_NaCat__i_NaCat + var_i_Cabs__i_Cabs + var_i_Cabt__i_Cabt + var_i_pCas__i_pCas + var_i_pCat__i_pCat) / (var_model_parameters__F * var_model_parameters__Vmyo)) / (1.0 + 0.00011900000000000002 / pow((0.0023800000000000002 + var_chaste_interface__ion_concentrations__Cai), 2)); // millimolar / second
        const double d_dt_chaste_interface_var_ion_concentrations__Cai = 0.001 * var_ion_concentrations__Cai_orig_deriv; // millimolar / millisecond
        const double var_ion_concentrations__Cass_orig_deriv = (var_JCaSRrel__JCaSRrel / var_model_parameters__Vd - var_JCad__JCad / var_model_parameters__Vd + 0.5 * (-var_i_Cas__i_Cas - var_i_Cat__i_Cat) / (var_model_parameters__F * var_model_parameters__Vd)) / (1.0 + 0.00011900000000000002 / pow((0.0023800000000000002 + var_chaste_interface__ion_concentrations__Cass), 2)); // millimolar / second
        const double d_dt_chaste_interface_var_ion_concentrations__Cass = 0.001 * var_ion_concentrations__Cass_orig_deriv; // millimolar / millisecond
        const double var_ion_concentrations__Ki_orig_deriv = (-var_i_K1s__i_K1s - var_i_K1t__i_K1t - var_i_Kbs__i_Kbs - var_i_Kbt__i_Kbt - var_i_Kfs__i_Kfs - var_i_Kft__i_Kft - var_i_Ksts__i_Ksts - var_i_Kstt__i_Kstt - var_i_Ktos__i_Ktos - var_i_Ktot__i_Ktot + 2.0 * var_i_NaKs__i_NaKs + 2.0 * var_i_NaKt__i_NaKt + var_i_Stim__i_Stim) / (var_model_parameters__F * var_model_parameters__Vmyo); // millimolar / second
        const double d_dt_chaste_interface_var_ion_concentrations__Ki = 0.001 * var_ion_concentrations__Ki_orig_deriv; // millimolar / millisecond
        const double var_ion_concentrations__Nai_orig_deriv = (-var_i_Nabs__i_Nabs - var_i_Nabt__i_Nabt - var_i_Nas__i_Nas - var_i_Nat__i_Nat - 3.0 * var_i_NaCas__i_NaCas - 3.0 * var_i_NaCat__i_NaCat - 3.0 * var_i_NaKs__i_NaKs - 3.0 * var_i_NaKt__i_NaKt) / (var_model_parameters__F * var_model_parameters__Vmyo); // millimolar / second
        const double d_dt_chaste_interface_var_ion_concentrations__Nai = 0.001 * var_ion_concentrations__Nai_orig_deriv; // millimolar / millisecond
        const double var_model_parameters__ptcm = 30000000.0; // per_cm2
        const double var_model_parameters__pt = var_model_parameters__Sms * var_model_parameters__ptcm; // dimensionless
        const double var_model_parameters__radiust = 1.5e-5; // cm
        const double var_model_parameters__Lt = 0.15915507752443828 * var_model_parameters__Smt / (var_model_parameters__pt * var_model_parameters__radiust); // cm
        const double var_model_parameters__Rst = 0.15915507752443828 * var_model_parameters__Lt * var_model_parameters__Rot / (var_model_parameters__pt * pow(var_model_parameters__radiust, 2)); // ohm
        const double var_i_circ__i_circ = 1000.0 * var_chaste_interface__Vmt__Vmt / var_model_parameters__Rst - 1000.0 * var_chaste_interface__Vms__Vms / var_model_parameters__Rst; // microA
        const double var_Vmt__Vmt_orig_deriv = 1000.0 * (-var_i_Cabt__i_Cabt - var_i_Cat__i_Cat - var_i_K1t__i_K1t - var_i_Kbt__i_Kbt - var_i_Kft__i_Kft - var_i_Kstt__i_Kstt - var_i_Ktot__i_Ktot - var_i_NaCat__i_NaCat - var_i_NaKt__i_NaKt - var_i_Nabt__i_Nabt - var_i_Nat__i_Nat - var_i_circ__i_circ - var_i_pCat__i_pCat) / var_model_parameters__Cmt; // millivolt / second
        const double d_dt_chaste_interface_var_Vmt__Vmt = 0.001 * var_Vmt__Vmt_orig_deriv; // millivolt / millisecond
        const double var_model_parameters__Vt = 3.1415899999999999 * pow(var_model_parameters__radiust, 2) * var_model_parameters__Lt * var_model_parameters__pt; // cm3
        const double var_t_tubular_ion_fluxes__tauCa = 0.5; // second
        const double var_t_tubular_ion_fluxes__JteCa = (-var_model_parameters__Cae + var_chaste_interface__ion_concentrations__Cat) * var_model_parameters__Vt / var_t_tubular_ion_fluxes__tauCa; // millimolar_per_second
        const double var_ion_concentrations__Cat_orig_deriv = (-var_t_tubular_ion_fluxes__JteCa + 0.5 * (-2.0 * var_i_NaCat__i_NaCat + var_i_Cabt__i_Cabt + var_i_Cat__i_Cat + var_i_pCat__i_pCat) / var_model_parameters__F) / var_model_parameters__Vt; // millimolar / second
        const double d_dt_chaste_interface_var_ion_concentrations__Cat = 0.001 * var_ion_concentrations__Cat_orig_deriv; // millimolar / millisecond
        const double var_t_tubular_ion_fluxes__tauK = 0.14999999999999999; // second
        const double var_t_tubular_ion_fluxes__JteK = (-var_model_parameters__Ke + var_chaste_interface__ion_concentrations__Kt) * var_model_parameters__Vt / var_t_tubular_ion_fluxes__tauK; // millimolar_per_second
        const double var_ion_concentrations__Kt_orig_deriv = (-var_t_tubular_ion_fluxes__JteK + (-2.0 * var_i_NaKt__i_NaKt + var_i_K1t__i_K1t + var_i_Kbt__i_Kbt + var_i_Kft__i_Kft + var_i_Kstt__i_Kstt + var_i_Ktot__i_Ktot) / var_model_parameters__F) / var_model_parameters__Vt; // millimolar / second
        const double d_dt_chaste_interface_var_ion_concentrations__Kt = 0.001 * var_ion_concentrations__Kt_orig_deriv; // millimolar / millisecond
        const double var_t_tubular_ion_fluxes__tauNa = 0.14999999999999999; // second
        const double var_t_tubular_ion_fluxes__JteNa = (-var_model_parameters__Nae + var_chaste_interface__ion_concentrations__Nat) * var_model_parameters__Vt / var_t_tubular_ion_fluxes__tauNa; // millimolar_per_second
        const double var_ion_concentrations__Nat_orig_deriv = (-var_t_tubular_ion_fluxes__JteNa + (3.0 * var_i_NaCat__i_NaCat + 3.0 * var_i_NaKt__i_NaKt + var_i_Nabt__i_Nabt + var_i_Nat__i_Nat) / var_model_parameters__F) / var_model_parameters__Vt; // millimolar / second
        const double d_dt_chaste_interface_var_ion_concentrations__Nat = 0.001 * var_ion_concentrations__Nat_orig_deriv; // millimolar / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_Vms__Vms = 0.0;
        }
        else
        {
            const double var_Vms__Vms_orig_deriv = 1000.0 * (-var_i_Cabs__i_Cabs - var_i_Cas__i_Cas - var_i_K1s__i_K1s - var_i_Kbs__i_Kbs - var_i_Kfs__i_Kfs - var_i_Ksts__i_Ksts - var_i_Ktos__i_Ktos - var_i_NaCas__i_NaCas - var_i_NaKs__i_NaKs - var_i_Nabs__i_Nabs - var_i_Nas__i_Nas - var_i_pCas__i_pCas + var_i_Stim__i_Stim + var_i_circ__i_circ) / var_model_parameters__Cms; // millivolt / second
            d_dt_chaste_interface_var_Vms__Vms = 0.001 * var_Vms__Vms_orig_deriv; // millivolt / millisecond
        }
        
        mEvalF[0] = d_dt_chaste_interface_var_Vms__Vms;
        mEvalF[1] = d_dt_chaste_interface_var_ion_concentrations__Cai;
        mEvalF[2] = d_dt_chaste_interface_var_i_Nas_m_gate__m;
        mEvalF[3] = d_dt_chaste_interface_var_i_Nas_h_gate__h;
        mEvalF[4] = d_dt_chaste_interface_var_i_Nat_m_gate__m;
        mEvalF[5] = d_dt_chaste_interface_var_i_Nat_h_gate__h;
        mEvalF[6] = d_dt_chaste_interface_var_i_Cas__Co;
        mEvalF[7] = d_dt_chaste_interface_var_i_Cas__C1;
        mEvalF[8] = d_dt_chaste_interface_var_i_Cas__C2;
        mEvalF[9] = d_dt_chaste_interface_var_i_Cas__Ccast;
        mEvalF[10] = d_dt_chaste_interface_var_i_Cat__Co;
        mEvalF[11] = d_dt_chaste_interface_var_i_Cat__C1;
        mEvalF[12] = d_dt_chaste_interface_var_i_Cat__C2;
        mEvalF[13] = d_dt_chaste_interface_var_i_Cat__Ccast;
        mEvalF[14] = d_dt_chaste_interface_var_i_Ktos_rs_gate__rs;
        mEvalF[15] = d_dt_chaste_interface_var_i_Ktos_ss_gate__ss;
        mEvalF[16] = d_dt_chaste_interface_var_i_Ktos_sss_gate__sss;
        mEvalF[17] = d_dt_chaste_interface_var_i_Ktot_rt_gate__rt;
        mEvalF[18] = d_dt_chaste_interface_var_i_Ktot_st_gate__st;
        mEvalF[19] = d_dt_chaste_interface_var_i_Ktot_sst_gate__sst;
        mEvalF[20] = d_dt_chaste_interface_var_i_Ksts_rsts_gate__rsts;
        mEvalF[21] = d_dt_chaste_interface_var_i_Ksts_ssts_gate__ssts;
        mEvalF[22] = d_dt_chaste_interface_var_i_Kstt_rstt_gate__rstt;
        mEvalF[23] = d_dt_chaste_interface_var_i_Kstt_sstt_gate__sstt;
        mEvalF[24] = d_dt_chaste_interface_var_i_Kfs_qs_gate__qs;
        mEvalF[25] = d_dt_chaste_interface_var_i_Kft_qt_gate__qt;
        mEvalF[26] = d_dt_chaste_interface_var_JCaSRrel__F1;
        mEvalF[27] = d_dt_chaste_interface_var_JCaSRrel__F2;
        mEvalF[28] = d_dt_chaste_interface_var_JCaSRrel__F3;
        mEvalF[29] = d_dt_chaste_interface_var_JCaSRrel__F4;
        mEvalF[30] = d_dt_chaste_interface_var_CaSRup__CaSRup;
        mEvalF[31] = d_dt_chaste_interface_var_CaSRrel__CaSRrel;
        mEvalF[32] = d_dt_chaste_interface_var_ion_concentrations__Nai;
        mEvalF[33] = d_dt_chaste_interface_var_ion_concentrations__Ki;
        mEvalF[34] = d_dt_chaste_interface_var_ion_concentrations__Nat;
        mEvalF[35] = d_dt_chaste_interface_var_ion_concentrations__Cat;
        mEvalF[36] = d_dt_chaste_interface_var_ion_concentrations__Kt;
        mEvalF[37] = d_dt_chaste_interface_var_ion_concentrations__Cass;
        mEvalF[38] = d_dt_chaste_interface_var_ion_concentrations__BTRH;
        mEvalF[39] = d_dt_chaste_interface_var_ion_concentrations__BTRL;
        mEvalF[40] = d_dt_chaste_interface_var_Vmt__Vmt;

        
        mPartialF[0] = EvaluatePartialDerivative0(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[1] = EvaluatePartialDerivative1(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[2] = EvaluatePartialDerivative2(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[3] = EvaluatePartialDerivative3(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[4] = EvaluatePartialDerivative4(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[5] = EvaluatePartialDerivative5(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[6] = EvaluatePartialDerivative6(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[7] = EvaluatePartialDerivative7(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[8] = EvaluatePartialDerivative8(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[9] = EvaluatePartialDerivative9(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[10] = EvaluatePartialDerivative10(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[11] = EvaluatePartialDerivative11(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[12] = EvaluatePartialDerivative12(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[13] = EvaluatePartialDerivative13(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[14] = EvaluatePartialDerivative14(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[15] = EvaluatePartialDerivative15(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[16] = EvaluatePartialDerivative16(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[17] = EvaluatePartialDerivative17(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[18] = EvaluatePartialDerivative18(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[19] = EvaluatePartialDerivative19(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[20] = EvaluatePartialDerivative20(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[21] = EvaluatePartialDerivative21(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[22] = EvaluatePartialDerivative22(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[23] = EvaluatePartialDerivative23(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[24] = EvaluatePartialDerivative24(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[25] = EvaluatePartialDerivative25(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[26] = EvaluatePartialDerivative26(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[27] = EvaluatePartialDerivative27(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[28] = EvaluatePartialDerivative28(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[29] = EvaluatePartialDerivative29(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[30] = EvaluatePartialDerivative30(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[31] = EvaluatePartialDerivative31(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[32] = EvaluatePartialDerivative32(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[33] = EvaluatePartialDerivative33(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[34] = EvaluatePartialDerivative34(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[35] = EvaluatePartialDerivative35(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[36] = EvaluatePartialDerivative36(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[37] = EvaluatePartialDerivative37(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[38] = EvaluatePartialDerivative38(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[39] = EvaluatePartialDerivative39(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[40] = EvaluatePartialDerivative40(var_chaste_interface__environment__time_converted, rY, delta);
        for (unsigned var=0; var<size; var++)
        {
            if (var == 0) continue;
            if (fabs(mPartialF[var]) < delta)
            {
                rY[var] = mYInit[var] + 0.5*mDt*mEvalF[var];
            }
            else
            {
                rY[var] = mYInit[var] + (mEvalF[var]/mPartialF[var])*(exp(mPartialF[var]*0.5*mDt)-1.0);
            }
            
        }
        
        
        y_save = rY[1];
        rY[1] = mYInit[1];
        mEvalF[1] = EvaluateYDerivative1(var_chaste_interface__environment__time_converted, rY);
        mPartialF[1] = EvaluatePartialDerivative1(var_chaste_interface__environment__time_converted, rY, delta);
        rY[1] = y_save;
        
        
        y_save = rY[2];
        rY[2] = mYInit[2];
        mEvalF[2] = EvaluateYDerivative2(var_chaste_interface__environment__time_converted, rY);
        mPartialF[2] = EvaluatePartialDerivative2(var_chaste_interface__environment__time_converted, rY, delta);
        rY[2] = y_save;
        
        
        y_save = rY[3];
        rY[3] = mYInit[3];
        mEvalF[3] = EvaluateYDerivative3(var_chaste_interface__environment__time_converted, rY);
        mPartialF[3] = EvaluatePartialDerivative3(var_chaste_interface__environment__time_converted, rY, delta);
        rY[3] = y_save;
        
        
        y_save = rY[4];
        rY[4] = mYInit[4];
        mEvalF[4] = EvaluateYDerivative4(var_chaste_interface__environment__time_converted, rY);
        mPartialF[4] = EvaluatePartialDerivative4(var_chaste_interface__environment__time_converted, rY, delta);
        rY[4] = y_save;
        
        
        y_save = rY[5];
        rY[5] = mYInit[5];
        mEvalF[5] = EvaluateYDerivative5(var_chaste_interface__environment__time_converted, rY);
        mPartialF[5] = EvaluatePartialDerivative5(var_chaste_interface__environment__time_converted, rY, delta);
        rY[5] = y_save;
        
        
        y_save = rY[6];
        rY[6] = mYInit[6];
        mEvalF[6] = EvaluateYDerivative6(var_chaste_interface__environment__time_converted, rY);
        mPartialF[6] = EvaluatePartialDerivative6(var_chaste_interface__environment__time_converted, rY, delta);
        rY[6] = y_save;
        
        
        y_save = rY[7];
        rY[7] = mYInit[7];
        mEvalF[7] = EvaluateYDerivative7(var_chaste_interface__environment__time_converted, rY);
        mPartialF[7] = EvaluatePartialDerivative7(var_chaste_interface__environment__time_converted, rY, delta);
        rY[7] = y_save;
        
        
        y_save = rY[8];
        rY[8] = mYInit[8];
        mEvalF[8] = EvaluateYDerivative8(var_chaste_interface__environment__time_converted, rY);
        mPartialF[8] = EvaluatePartialDerivative8(var_chaste_interface__environment__time_converted, rY, delta);
        rY[8] = y_save;
        
        
        y_save = rY[9];
        rY[9] = mYInit[9];
        mEvalF[9] = EvaluateYDerivative9(var_chaste_interface__environment__time_converted, rY);
        mPartialF[9] = EvaluatePartialDerivative9(var_chaste_interface__environment__time_converted, rY, delta);
        rY[9] = y_save;
        
        
        y_save = rY[10];
        rY[10] = mYInit[10];
        mEvalF[10] = EvaluateYDerivative10(var_chaste_interface__environment__time_converted, rY);
        mPartialF[10] = EvaluatePartialDerivative10(var_chaste_interface__environment__time_converted, rY, delta);
        rY[10] = y_save;
        
        
        y_save = rY[11];
        rY[11] = mYInit[11];
        mEvalF[11] = EvaluateYDerivative11(var_chaste_interface__environment__time_converted, rY);
        mPartialF[11] = EvaluatePartialDerivative11(var_chaste_interface__environment__time_converted, rY, delta);
        rY[11] = y_save;
        
        
        y_save = rY[12];
        rY[12] = mYInit[12];
        mEvalF[12] = EvaluateYDerivative12(var_chaste_interface__environment__time_converted, rY);
        mPartialF[12] = EvaluatePartialDerivative12(var_chaste_interface__environment__time_converted, rY, delta);
        rY[12] = y_save;
        
        
        y_save = rY[13];
        rY[13] = mYInit[13];
        mEvalF[13] = EvaluateYDerivative13(var_chaste_interface__environment__time_converted, rY);
        mPartialF[13] = EvaluatePartialDerivative13(var_chaste_interface__environment__time_converted, rY, delta);
        rY[13] = y_save;
        
        
        y_save = rY[14];
        rY[14] = mYInit[14];
        mEvalF[14] = EvaluateYDerivative14(var_chaste_interface__environment__time_converted, rY);
        mPartialF[14] = EvaluatePartialDerivative14(var_chaste_interface__environment__time_converted, rY, delta);
        rY[14] = y_save;
        
        
        y_save = rY[15];
        rY[15] = mYInit[15];
        mEvalF[15] = EvaluateYDerivative15(var_chaste_interface__environment__time_converted, rY);
        mPartialF[15] = EvaluatePartialDerivative15(var_chaste_interface__environment__time_converted, rY, delta);
        rY[15] = y_save;
        
        
        y_save = rY[16];
        rY[16] = mYInit[16];
        mEvalF[16] = EvaluateYDerivative16(var_chaste_interface__environment__time_converted, rY);
        mPartialF[16] = EvaluatePartialDerivative16(var_chaste_interface__environment__time_converted, rY, delta);
        rY[16] = y_save;
        
        
        y_save = rY[17];
        rY[17] = mYInit[17];
        mEvalF[17] = EvaluateYDerivative17(var_chaste_interface__environment__time_converted, rY);
        mPartialF[17] = EvaluatePartialDerivative17(var_chaste_interface__environment__time_converted, rY, delta);
        rY[17] = y_save;
        
        
        y_save = rY[18];
        rY[18] = mYInit[18];
        mEvalF[18] = EvaluateYDerivative18(var_chaste_interface__environment__time_converted, rY);
        mPartialF[18] = EvaluatePartialDerivative18(var_chaste_interface__environment__time_converted, rY, delta);
        rY[18] = y_save;
        
        
        y_save = rY[19];
        rY[19] = mYInit[19];
        mEvalF[19] = EvaluateYDerivative19(var_chaste_interface__environment__time_converted, rY);
        mPartialF[19] = EvaluatePartialDerivative19(var_chaste_interface__environment__time_converted, rY, delta);
        rY[19] = y_save;
        
        
        y_save = rY[20];
        rY[20] = mYInit[20];
        mEvalF[20] = EvaluateYDerivative20(var_chaste_interface__environment__time_converted, rY);
        mPartialF[20] = EvaluatePartialDerivative20(var_chaste_interface__environment__time_converted, rY, delta);
        rY[20] = y_save;
        
        
        y_save = rY[21];
        rY[21] = mYInit[21];
        mEvalF[21] = EvaluateYDerivative21(var_chaste_interface__environment__time_converted, rY);
        mPartialF[21] = EvaluatePartialDerivative21(var_chaste_interface__environment__time_converted, rY, delta);
        rY[21] = y_save;
        
        
        y_save = rY[22];
        rY[22] = mYInit[22];
        mEvalF[22] = EvaluateYDerivative22(var_chaste_interface__environment__time_converted, rY);
        mPartialF[22] = EvaluatePartialDerivative22(var_chaste_interface__environment__time_converted, rY, delta);
        rY[22] = y_save;
        
        
        y_save = rY[23];
        rY[23] = mYInit[23];
        mEvalF[23] = EvaluateYDerivative23(var_chaste_interface__environment__time_converted, rY);
        mPartialF[23] = EvaluatePartialDerivative23(var_chaste_interface__environment__time_converted, rY, delta);
        rY[23] = y_save;
        
        
        y_save = rY[24];
        rY[24] = mYInit[24];
        mEvalF[24] = EvaluateYDerivative24(var_chaste_interface__environment__time_converted, rY);
        mPartialF[24] = EvaluatePartialDerivative24(var_chaste_interface__environment__time_converted, rY, delta);
        rY[24] = y_save;
        
        
        y_save = rY[25];
        rY[25] = mYInit[25];
        mEvalF[25] = EvaluateYDerivative25(var_chaste_interface__environment__time_converted, rY);
        mPartialF[25] = EvaluatePartialDerivative25(var_chaste_interface__environment__time_converted, rY, delta);
        rY[25] = y_save;
        
        
        y_save = rY[26];
        rY[26] = mYInit[26];
        mEvalF[26] = EvaluateYDerivative26(var_chaste_interface__environment__time_converted, rY);
        mPartialF[26] = EvaluatePartialDerivative26(var_chaste_interface__environment__time_converted, rY, delta);
        rY[26] = y_save;
        
        
        y_save = rY[27];
        rY[27] = mYInit[27];
        mEvalF[27] = EvaluateYDerivative27(var_chaste_interface__environment__time_converted, rY);
        mPartialF[27] = EvaluatePartialDerivative27(var_chaste_interface__environment__time_converted, rY, delta);
        rY[27] = y_save;
        
        
        y_save = rY[28];
        rY[28] = mYInit[28];
        mEvalF[28] = EvaluateYDerivative28(var_chaste_interface__environment__time_converted, rY);
        mPartialF[28] = EvaluatePartialDerivative28(var_chaste_interface__environment__time_converted, rY, delta);
        rY[28] = y_save;
        
        
        y_save = rY[29];
        rY[29] = mYInit[29];
        mEvalF[29] = EvaluateYDerivative29(var_chaste_interface__environment__time_converted, rY);
        mPartialF[29] = EvaluatePartialDerivative29(var_chaste_interface__environment__time_converted, rY, delta);
        rY[29] = y_save;
        
        
        y_save = rY[30];
        rY[30] = mYInit[30];
        mEvalF[30] = EvaluateYDerivative30(var_chaste_interface__environment__time_converted, rY);
        mPartialF[30] = EvaluatePartialDerivative30(var_chaste_interface__environment__time_converted, rY, delta);
        rY[30] = y_save;
        
        
        y_save = rY[31];
        rY[31] = mYInit[31];
        mEvalF[31] = EvaluateYDerivative31(var_chaste_interface__environment__time_converted, rY);
        mPartialF[31] = EvaluatePartialDerivative31(var_chaste_interface__environment__time_converted, rY, delta);
        rY[31] = y_save;
        
        
        y_save = rY[32];
        rY[32] = mYInit[32];
        mEvalF[32] = EvaluateYDerivative32(var_chaste_interface__environment__time_converted, rY);
        mPartialF[32] = EvaluatePartialDerivative32(var_chaste_interface__environment__time_converted, rY, delta);
        rY[32] = y_save;
        
        
        y_save = rY[33];
        rY[33] = mYInit[33];
        mEvalF[33] = EvaluateYDerivative33(var_chaste_interface__environment__time_converted, rY);
        mPartialF[33] = EvaluatePartialDerivative33(var_chaste_interface__environment__time_converted, rY, delta);
        rY[33] = y_save;
        
        
        y_save = rY[34];
        rY[34] = mYInit[34];
        mEvalF[34] = EvaluateYDerivative34(var_chaste_interface__environment__time_converted, rY);
        mPartialF[34] = EvaluatePartialDerivative34(var_chaste_interface__environment__time_converted, rY, delta);
        rY[34] = y_save;
        
        
        y_save = rY[35];
        rY[35] = mYInit[35];
        mEvalF[35] = EvaluateYDerivative35(var_chaste_interface__environment__time_converted, rY);
        mPartialF[35] = EvaluatePartialDerivative35(var_chaste_interface__environment__time_converted, rY, delta);
        rY[35] = y_save;
        
        
        y_save = rY[36];
        rY[36] = mYInit[36];
        mEvalF[36] = EvaluateYDerivative36(var_chaste_interface__environment__time_converted, rY);
        mPartialF[36] = EvaluatePartialDerivative36(var_chaste_interface__environment__time_converted, rY, delta);
        rY[36] = y_save;
        
        
        y_save = rY[37];
        rY[37] = mYInit[37];
        mEvalF[37] = EvaluateYDerivative37(var_chaste_interface__environment__time_converted, rY);
        mPartialF[37] = EvaluatePartialDerivative37(var_chaste_interface__environment__time_converted, rY, delta);
        rY[37] = y_save;
        
        
        y_save = rY[38];
        rY[38] = mYInit[38];
        mEvalF[38] = EvaluateYDerivative38(var_chaste_interface__environment__time_converted, rY);
        mPartialF[38] = EvaluatePartialDerivative38(var_chaste_interface__environment__time_converted, rY, delta);
        rY[38] = y_save;
        
        
        y_save = rY[39];
        rY[39] = mYInit[39];
        mEvalF[39] = EvaluateYDerivative39(var_chaste_interface__environment__time_converted, rY);
        mPartialF[39] = EvaluatePartialDerivative39(var_chaste_interface__environment__time_converted, rY, delta);
        rY[39] = y_save;
        
        
        y_save = rY[40];
        rY[40] = mYInit[40];
        mEvalF[40] = EvaluateYDerivative40(var_chaste_interface__environment__time_converted, rY);
        mPartialF[40] = EvaluatePartialDerivative40(var_chaste_interface__environment__time_converted, rY, delta);
        rY[40] = y_save;
                
        for (unsigned var=0; var<size; var++)
        {
            if (var == 0) continue;
            if (fabs(mPartialF[var]) < delta)
            {
                rY[var] = mYInit[var] + mDt*mEvalF[var];
            }
            else
            {
                rY[var] = mYInit[var] + (mEvalF[var]/mPartialF[var])*(exp(mPartialF[var]*mDt)-1.0);
            }
            
        }


    }
   
    
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative0(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        double d_dt_chaste_interface_var_Vms__Vms;
        double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -79.709547
        double var_chaste_interface__ion_concentrations__Cai = rY[1];
        // Units: millimolar; Initial value: 3.5486498e-05
        double var_chaste_interface__i_Nas_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 2.1832558e-06
        double var_chaste_interface__i_Nas_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.58232781
        double var_chaste_interface__i_Cas__Co = rY[6];
        // Units: dimensionless; Initial value: 2.5436465e-06
        double var_chaste_interface__i_Cas__C1 = rY[7];
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__i_Cas__C2 = rY[8];
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__i_Cas__Ccast = rY[9];
        // Units: dimensionless; Initial value: 0.99570063
        double var_chaste_interface__i_Ktos_rs_gate__rs = rY[14];
        // Units: dimensionless; Initial value: 0.0023485072
        double var_chaste_interface__i_Ktos_ss_gate__ss = rY[15];
        // Units: dimensionless; Initial value: 0.98315843
        double var_chaste_interface__i_Ktos_sss_gate__sss = rY[16];
        // Units: dimensionless; Initial value: 0.6748337
        double var_chaste_interface__i_Ksts_rsts_gate__rsts = rY[20];
        // Units: dimensionless; Initial value: 0.0031079213
        double var_chaste_interface__i_Ksts_ssts_gate__ssts = rY[21];
        // Units: dimensionless; Initial value: 0.30773393
        double var_chaste_interface__i_Kfs_qs_gate__qs = rY[24];
        // Units: dimensionless; Initial value: 0.0034357356
        double var_chaste_interface__ion_concentrations__Nai = rY[32];
        // Units: millimolar; Initial value: 6.9435814
        double var_chaste_interface__ion_concentrations__Ki = rY[33];
        // Units: millimolar; Initial value: 137.53311
        double var_chaste_interface__ion_concentrations__Cass = rY[37];
        // Units: millimolar; Initial value: 4.3112114e-05
        double var_chaste_interface__Vmt__Vmt = rY[40];
        // Units: millivolt; Initial value: -79.709536
        

        // Mathematics
        const double var_i_Stim__i_Stim_converted = -GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_i_Cas__i_Cas = ((fabs(var_chaste_interface__Vms__Vms) < 1.2701813471502589e-6) ? (393644.57769891288 * (1.2701813471502589e-6 + var_chaste_interface__Vms__Vms) * (5.2689000000000005e-11 * (-0.40920000000000001 + var_chaste_interface__ion_concentrations__Cass * exp(9.9999999999999995e-8)) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C1) * var_chaste_interface__i_Cas__Co / (-1.0 + exp(9.9999999999999995e-8)) + 5.2689000000000005e-11 * (-0.40920000000000001 + var_chaste_interface__ion_concentrations__Cass * exp(-9.9999999999999995e-8)) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C1) * var_chaste_interface__i_Cas__Co / (-1.0 + exp(-9.9999999999999995e-8))) - 5.2689000000000005e-11 * (-0.40920000000000001 + var_chaste_interface__ion_concentrations__Cass * exp(-9.9999999999999995e-8)) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C1) * var_chaste_interface__i_Cas__Co / (-1.0 + exp(-9.9999999999999995e-8))) : (4.1481478308756044e-5 * (-0.40920000000000001 + var_chaste_interface__ion_concentrations__Cass * exp(0.078728915539782576 * var_chaste_interface__Vms__Vms)) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C1) * var_chaste_interface__Vms__Vms * var_chaste_interface__i_Cas__Co / (-1.0 + exp(0.078728915539782576 * var_chaste_interface__Vms__Vms)))); // microA
        const double var_membrane_permeabilities__fCabt = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fK1t = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fKbt = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fKft = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fKstt = 0.76000000000000001; // dimensionless
        const double var_membrane_permeabilities__fKtot = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fNaCat = 0.81000000000000005; // dimensionless
        const double var_membrane_permeabilities__fNaKt = 0.58999999999999997; // dimensionless
        const double var_membrane_permeabilities__fNabt = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fNat = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fpCat = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__gCab = 0.00064800000000000003; // milliS_per_cm2
        const double var_membrane_permeabilities__gKb = 0.0013799999999999999; // milliS_per_cm2
        const double var_membrane_permeabilities__gKf = 0.014500000000000001; // milliS_per_cm2
        const double var_membrane_permeabilities__gKst = 0.070000000000000007; // milliS_per_cm2
        const double var_membrane_permeabilities__gNab = 0.00080150000000000002; // milliS_per_cm2
        const double var_membrane_permeabilities__i_NaK_max = 1.0; // microA_per_cm2
        const double var_membrane_permeabilities__i_pCa_max = 0.84999999999999998; // microA_per_cm2
        const double var_model_parameters__Cae = 1.2; // millimolar
        const double var_model_parameters__F = 96500.0; // coulomb_per_mole
        const double var_model_parameters__Ke = 5.4000000000000004; // millimolar
        const double var_model_parameters__Nae = 140.0; // millimolar
        const double var_model_parameters__R = 8310.0; // joule_per_kilomole_kelvin
        const double var_model_parameters__Rot = 83.329999999999998; // ohm_cm
        const double var_model_parameters__Smtot = 0.0001; // cm2
        const double var_model_parameters__T = 295.0; // kelvin
        const double var_i_Cas__E_Cas = 0.5 * var_model_parameters__R * var_model_parameters__T * log(var_model_parameters__Cae / var_chaste_interface__ion_concentrations__Cai) / var_model_parameters__F; // millivolt
        const double var_i_Ktos__E_Ks = var_model_parameters__R * var_model_parameters__T * log(var_model_parameters__Ke / var_chaste_interface__ion_concentrations__Ki) / var_model_parameters__F; // millivolt
        const double var_i_Nas__E_Nas = var_model_parameters__R * var_model_parameters__T * log(var_model_parameters__Nae / var_chaste_interface__ion_concentrations__Nai) / var_model_parameters__F; // millivolt
        const double var_model_parameters__Vc = 0.00012738853503184712 * var_model_parameters__Smtot; // cm3
        const double var_model_parameters__Sms = -4400.0 * var_model_parameters__Vc + var_model_parameters__Smtot; // cm2
        const double var_model_parameters__Cms = var_model_parameters__Sms; // microF
        const double var_i_Stim__i_Stim = var_i_Stim__i_Stim_converted * var_model_parameters__Cms / HeartConfig::Instance()->GetCapacitance(); // microA
        const double var_model_parameters__Smt = -var_model_parameters__Sms + var_model_parameters__Smtot; // cm2
        const double var_membrane_permeabilities__gCabs = (1.0 - var_membrane_permeabilities__fCabt) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__gCab; // milliS
        const double var_i_Cabs__i_Cabs = (-var_i_Cas__E_Cas + var_chaste_interface__Vms__Vms) * var_membrane_permeabilities__gCabs; // microA
        const double var_membrane_permeabilities__gK1s = (1.0 - var_membrane_permeabilities__fK1t) * (var_model_parameters__Sms + var_model_parameters__Smt) * mParameters[1]; // milliS
        const double var_i_K1s__i_K1s = (-1.73 - var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * var_membrane_permeabilities__gK1s / (1.0 + (1.0 + exp(8.0548387096774192 - 8.064516129032258 * var_model_parameters__Ke)) * exp(1.613 * (-1.73 - var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))); // microA
        const double var_membrane_permeabilities__gKbs = (1.0 - var_membrane_permeabilities__fKbt) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__gKb; // milliS
        const double var_i_Kbs__i_Kbs = (-var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * var_membrane_permeabilities__gKbs; // microA
        const double var_membrane_permeabilities__gKfs = (1.0 - var_membrane_permeabilities__fKft) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__gKf; // milliS
        const double var_i_Kfs__i_Kfs = (1.0 * var_chaste_interface__Vms__Vms - 0.20000000000000001 * var_i_Nas__E_Nas - 0.80000000000000004 * var_i_Ktos__E_Ks) * var_chaste_interface__i_Kfs_qs_gate__qs * var_membrane_permeabilities__gKfs; // microA
        const double var_membrane_permeabilities__gKsts = (1.0 - var_membrane_permeabilities__fKstt) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__gKst; // milliS
        const double var_i_Ksts__i_Ksts = (-var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * var_chaste_interface__i_Ksts_rsts_gate__rsts * var_chaste_interface__i_Ksts_ssts_gate__ssts * var_membrane_permeabilities__gKsts; // microA
        const double var_membrane_permeabilities__gKtos = (1.0 - var_membrane_permeabilities__fKtot) * (var_model_parameters__Sms + var_model_parameters__Smt) * mParameters[3]; // milliS
        const double var_i_Ktos__i_Ktos = (-var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * (0.88600000000000001 * var_chaste_interface__i_Ktos_ss_gate__ss + 0.114 * var_chaste_interface__i_Ktos_sss_gate__sss) * var_chaste_interface__i_Ktos_rs_gate__rs * var_membrane_permeabilities__gKtos; // microA
        const double var_membrane_permeabilities__gNabs = (1.0 - var_membrane_permeabilities__fNabt) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__gNab; // milliS
        const double var_i_Nabs__i_Nabs = (-var_i_Nas__E_Nas + var_chaste_interface__Vms__Vms) * var_membrane_permeabilities__gNabs; // microA
        const double var_membrane_permeabilities__gNas = (1.0 - var_membrane_permeabilities__fNat) * (var_model_parameters__Sms + var_model_parameters__Smt) * mParameters[0]; // milliS
        const double var_i_Nas__i_Nas = pow(var_chaste_interface__i_Nas_m_gate__m, 3) * (-var_model_parameters__R * var_model_parameters__T * log((var_model_parameters__Nae + 0.12 * var_model_parameters__Ke) / (var_chaste_interface__ion_concentrations__Nai + 0.12 * var_chaste_interface__ion_concentrations__Ki)) / var_model_parameters__F + var_chaste_interface__Vms__Vms) * var_chaste_interface__i_Nas_h_gate__h * var_membrane_permeabilities__gNas; // microA
        const double var_membrane_permeabilities__i_NaCa_maxs = (1.0 - var_membrane_permeabilities__fNaCat) * (var_model_parameters__Sms + var_model_parameters__Smt) * mParameters[2]; // microA
        const double var_i_NaCas__i_NaCas = (pow(var_chaste_interface__ion_concentrations__Nai, 3) * var_model_parameters__Cae * exp(0.018700000000000001 * var_chaste_interface__Vms__Vms) - pow(var_model_parameters__Nae, 3) * var_chaste_interface__ion_concentrations__Cai * exp(-0.018700000000000001 * var_chaste_interface__Vms__Vms)) * var_membrane_permeabilities__i_NaCa_maxs / (1.0 + 0.0001 * pow(var_chaste_interface__ion_concentrations__Nai, 3) * var_model_parameters__Cae + 0.0001 * pow(var_model_parameters__Nae, 3) * var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_membrane_permeabilities__i_NaK_maxs = (1.0 - var_membrane_permeabilities__fNaKt) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__i_NaK_max; // microA
        const double var_i_NaKs__i_NaKs = var_membrane_permeabilities__i_NaK_maxs * var_model_parameters__Ke / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__ion_concentrations__Nai), 1.5)) * (1.5 + var_model_parameters__Ke) * (1.0 + 0.1245 * exp(-0.10000000000000001 * var_chaste_interface__Vms__Vms * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)) + 0.0052142857142857138 * (-1.0 + exp(0.01485884101040119 * var_model_parameters__Nae)) * exp(-var_chaste_interface__Vms__Vms * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)))); // microA
        const double var_membrane_permeabilities__i_pCa_maxs = (1.0 - var_membrane_permeabilities__fpCat) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__i_pCa_max; // microA
        const double var_i_pCas__i_pCas = var_chaste_interface__ion_concentrations__Cai * var_membrane_permeabilities__i_pCa_maxs / (0.00040000000000000002 + var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_model_parameters__ptcm = 30000000.0; // per_cm2
        const double var_model_parameters__pt = var_model_parameters__Sms * var_model_parameters__ptcm; // dimensionless
        const double var_model_parameters__radiust = 1.5e-5; // cm
        const double var_model_parameters__Lt = 0.15915507752443828 * var_model_parameters__Smt / (var_model_parameters__pt * var_model_parameters__radiust); // cm
        const double var_model_parameters__Rst = 0.15915507752443828 * var_model_parameters__Lt * var_model_parameters__Rot / (var_model_parameters__pt * pow(var_model_parameters__radiust, 2)); // ohm
        const double var_i_circ__i_circ = 1000.0 * var_chaste_interface__Vmt__Vmt / var_model_parameters__Rst - 1000.0 * var_chaste_interface__Vms__Vms / var_model_parameters__Rst; // microA
        const double var_Vms__Vms_orig_deriv = 1000.0 * (-var_i_Cabs__i_Cabs - var_i_Cas__i_Cas - var_i_K1s__i_K1s - var_i_Kbs__i_Kbs - var_i_Kfs__i_Kfs - var_i_Ksts__i_Ksts - var_i_Ktos__i_Ktos - var_i_NaCas__i_NaCas - var_i_NaKs__i_NaKs - var_i_Nabs__i_Nabs - var_i_Nas__i_Nas - var_i_pCas__i_pCas + var_i_Stim__i_Stim + var_i_circ__i_circ) / var_model_parameters__Cms; // millivolt / second
        d_dt_chaste_interface_var_Vms__Vms = 0.001 * var_Vms__Vms_orig_deriv; // millivolt / millisecond

        return d_dt_chaste_interface_var_Vms__Vms;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative0(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -79.709547
            double var_chaste_interface__ion_concentrations__Cai = rY[1];
            // Units: millimolar; Initial value: 3.5486498e-05
            double var_chaste_interface__i_Nas_m_gate__m = rY[2];
            // Units: dimensionless; Initial value: 2.1832558e-06
            double var_chaste_interface__i_Nas_h_gate__h = rY[3];
            // Units: dimensionless; Initial value: 0.58232781
            double var_chaste_interface__i_Cas__Co = rY[6];
            // Units: dimensionless; Initial value: 2.5436465e-06
            double var_chaste_interface__i_Cas__C1 = rY[7];
            // Units: dimensionless; Initial value: 0.99994546
            double var_chaste_interface__i_Cas__C2 = rY[8];
            // Units: dimensionless; Initial value: 0.99994546
            double var_chaste_interface__i_Cas__Ccast = rY[9];
            // Units: dimensionless; Initial value: 0.99570063
            double var_chaste_interface__i_Ktos_rs_gate__rs = rY[14];
            // Units: dimensionless; Initial value: 0.0023485072
            double var_chaste_interface__i_Ktos_ss_gate__ss = rY[15];
            // Units: dimensionless; Initial value: 0.98315843
            double var_chaste_interface__i_Ktos_sss_gate__sss = rY[16];
            // Units: dimensionless; Initial value: 0.6748337
            double var_chaste_interface__i_Ksts_rsts_gate__rsts = rY[20];
            // Units: dimensionless; Initial value: 0.0031079213
            double var_chaste_interface__i_Ksts_ssts_gate__ssts = rY[21];
            // Units: dimensionless; Initial value: 0.30773393
            double var_chaste_interface__i_Kfs_qs_gate__qs = rY[24];
            // Units: dimensionless; Initial value: 0.0034357356
            double var_chaste_interface__ion_concentrations__Nai = rY[32];
            // Units: millimolar; Initial value: 6.9435814
            double var_chaste_interface__ion_concentrations__Ki = rY[33];
            // Units: millimolar; Initial value: 137.53311
            double var_chaste_interface__ion_concentrations__Cass = rY[37];
            // Units: millimolar; Initial value: 4.3112114e-05
            

            const double var_x0 = exp(9.9999999999999995e-8);
            const double var_x1 = 1 / (-1.0 + var_x0);
            const double var_x2 = var_x1 * (-0.40920000000000001 + var_x0 * var_chaste_interface__ion_concentrations__Cass);
            const double var_x3 = 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast;
            const double var_x4 = 0.10000000000000001 - var_x3;
            const double var_x5 = 0.90000000000000002 + var_x3;
            const double var_x6 = var_x4 * var_chaste_interface__i_Cas__C2 + var_x5 * var_chaste_interface__i_Cas__C1;
            const double var_x7 = var_x6 * var_chaste_interface__i_Cas__Co;
            const double var_x8 = 2.0740739154378022e-5 * var_x7;
            const double var_x9 = exp(-9.9999999999999995e-8);
            const double var_x10 = 1 / (-1.0 + var_x9);
            const double var_x11 = var_x10 * (-0.40920000000000001 + var_x9 * var_chaste_interface__ion_concentrations__Cass);
            const double var_x12 = fabs(var_chaste_interface__Vms__Vms) < 1.2701813471502589e-6;
            const double var_x13 = exp(0.078728915539782576 * var_chaste_interface__Vms__Vms);
            const double var_x14 = -1.0 + var_x13;
            const double var_x15 = 1 / var_x14;
            const double var_x16 = var_x15 * var_x7;
            const double var_x17 = var_x13 * var_chaste_interface__ion_concentrations__Cass;
            const double var_x18 = -0.40920000000000001 + var_x17;
            const double var_x19 = 4.1481478308756044e-5 * var_x18;
            const double var_x20 = var_x16 * var_x19;
            const double var_x21 = var_x16 * var_chaste_interface__Vms__Vms;
            const double var_x22 = ((var_x12) ? (var_x11 * var_x8 + var_x2 * var_x8) : (var_x20 + 3.265791802235378e-6 * var_x17 * var_x21 - 3.265791802235378e-6 * var_x13 * var_x18 * var_x7 * var_chaste_interface__Vms__Vms / pow(var_x14, 2)));
            const double var_x23 = var_chaste_interface__i_Ksts_rsts_gate__rsts * var_chaste_interface__i_Ksts_ssts_gate__ssts;
            const double var_x24 = 1 / var_chaste_interface__ion_concentrations__Ki;
            const double var_x25 = log(5.4000000000000004 * var_x24);
            const double var_x26 = (1.0 + exp(-35.49354838709678)) * exp(-0.10984612576230394 + 0.063494870382834648 * var_chaste_interface__Vms__Vms - 1.613 * var_x25);
            const double var_x27 = 1.0 + var_x26;
            const double var_x28 = mParameters[1] / var_x27;
            const double var_x29 = (-0.88702724637681152 * var_chaste_interface__i_Ktos_ss_gate__ss - 0.11413217391304346 * var_chaste_interface__i_Ktos_sss_gate__sss) * mParameters[3];
            const double var_x30 = var_x29 * var_chaste_interface__i_Ktos_rs_gate__rs;
            const double var_x31 = 0.018700000000000001 * var_chaste_interface__Vms__Vms;
            const double var_x32 = exp(-var_x31);
            const double var_x33 = var_x32 * var_chaste_interface__ion_concentrations__Cai;
            const double var_x34 = pow(var_chaste_interface__ion_concentrations__Nai, 3);
            const double var_x35 = exp(var_x31);
            const double var_x36 = var_x34 * var_x35;
            const double var_x37 = mParameters[2] / (1.0 + 0.00012 * var_x34 + 274.40000000000003 * var_chaste_interface__ion_concentrations__Cai);
            const double var_x38 = var_x37 * (51312.800000000003 * var_x33 + 0.022440000000000002 * var_x36);
            const double var_x39 = pow(var_chaste_interface__i_Nas_m_gate__m, 3) * mParameters[0];
            const double var_x40 = 1.0011594202898551 * var_x39;
            const double var_x41 = 1 / var_chaste_interface__ion_concentrations__Nai;
            const double var_x42 = pow(var_x41, 1.5);
            const double var_x43 = 1 / (1.0 + 31.622776601683793 * var_x42);
            const double var_x44 = exp(-0.0039364457769891295 * var_chaste_interface__Vms__Vms);
            const double var_x45 = exp(2.0802377414561666);
            const double var_x46 = exp(-0.039364457769891288 * var_chaste_interface__Vms__Vms);
            const double var_x47 = 1.0 + 0.1245 * var_x44 + 0.0052142857142857138 * var_x46 * (-1.0 + var_x45);
            const double var_x48 = var_x43 * (0.00049008749923514655 * var_x44 + 0.039364457769891288 * var_x46 * (-0.0052142857142857138 + 0.0052142857142857138 * var_x45)) / pow(var_x47, 2);
            const double var_x49 = -25.403626943005182 * var_x25 + var_chaste_interface__Vms__Vms;
            const double var_x50 = var_x26 * (-1.73 + var_x49) * mParameters[1] / pow(var_x27, 2);
            
            partialF = -1128.3437216687673 + var_x30 + 0.063568487623858222 * var_x50 - 0.038226086956521743 * var_x23 - 0.43231884057971004 * var_x38 - 1.0011594202898551 * var_x28 - 22753.623188405796 * var_x22 - 0.73009451795841218 * var_x48 - 0.014516811594202898 * var_chaste_interface__i_Kfs_qs_gate__qs - var_x40 * var_chaste_interface__i_Nas_h_gate__h;
        }
        else
        {
            const double y_save = rY[0];
            rY[0] += delta;
            const double temp = EvaluateYDerivative0(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[0])/delta;
            rY[0] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative1(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -79.709547
        double var_chaste_interface__ion_concentrations__Cai = rY[1];
        // Units: millimolar; Initial value: 3.5486498e-05
        double var_chaste_interface__CaSRup__CaSRup = rY[30];
        // Units: millimolar; Initial value: 0.22755058
        double var_chaste_interface__ion_concentrations__Nai = rY[32];
        // Units: millimolar; Initial value: 6.9435814
        double var_chaste_interface__ion_concentrations__Nat = rY[34];
        // Units: millimolar; Initial value: 140.01386
        double var_chaste_interface__ion_concentrations__Cat = rY[35];
        // Units: millimolar; Initial value: 1.2271399
        double var_chaste_interface__ion_concentrations__Cass = rY[37];
        // Units: millimolar; Initial value: 4.3112114e-05
        double var_chaste_interface__ion_concentrations__BTRH = rY[38];
        // Units: millimolar; Initial value: 0.92804169
        double var_chaste_interface__ion_concentrations__BTRL = rY[39];
        // Units: millimolar; Initial value: 0.034317829
        double var_chaste_interface__Vmt__Vmt = rY[40];
        // Units: millivolt; Initial value: -79.709536
        

        // Mathematics
        const double var_JCad__taud = 0.0031250000000000002; // second
        const double var_ion_concentrations__dBTRH = -0.070000000000000007 * var_chaste_interface__ion_concentrations__BTRH + 20000.0 * (1.0 - var_chaste_interface__ion_concentrations__BTRH) * var_chaste_interface__ion_concentrations__Cai; // millimolar_per_second
        const double var_ion_concentrations__dBTRL = -40.0 * var_chaste_interface__ion_concentrations__BTRL + 40000.0 * (1.0 - var_chaste_interface__ion_concentrations__BTRL) * var_chaste_interface__ion_concentrations__Cai; // millimolar_per_second
        const double var_membrane_permeabilities__fCabt = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fNaCat = 0.81000000000000005; // dimensionless
        const double var_membrane_permeabilities__fpCat = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__gCab = 0.00064800000000000003; // milliS_per_cm2
        const double var_membrane_permeabilities__i_pCa_max = 0.84999999999999998; // microA_per_cm2
        const double var_model_parameters__Cae = 1.2; // millimolar
        const double var_model_parameters__F = 96500.0; // coulomb_per_mole
        const double var_model_parameters__Nae = 140.0; // millimolar
        const double var_model_parameters__R = 8310.0; // joule_per_kilomole_kelvin
        const double var_model_parameters__Smtot = 0.0001; // cm2
        const double var_model_parameters__T = 295.0; // kelvin
        const double var_i_Cas__E_Cas = 0.5 * var_model_parameters__R * var_model_parameters__T * log(var_model_parameters__Cae / var_chaste_interface__ion_concentrations__Cai) / var_model_parameters__F; // millivolt
        const double var_i_Cat__E_Cat = 0.5 * var_model_parameters__R * var_model_parameters__T * log(var_chaste_interface__ion_concentrations__Cat / var_chaste_interface__ion_concentrations__Cai) / var_model_parameters__F; // millivolt
        const double var_model_parameters__Vc = 0.00012738853503184712 * var_model_parameters__Smtot; // cm3
        const double var_model_parameters__Sms = -4400.0 * var_model_parameters__Vc + var_model_parameters__Smtot; // cm2
        const double var_model_parameters__Smt = -var_model_parameters__Sms + var_model_parameters__Smtot; // cm2
        const double var_membrane_permeabilities__gCabs = (1.0 - var_membrane_permeabilities__fCabt) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__gCab; // milliS
        const double var_i_Cabs__i_Cabs = (-var_i_Cas__E_Cas + var_chaste_interface__Vms__Vms) * var_membrane_permeabilities__gCabs; // microA
        const double var_membrane_permeabilities__gCabt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fCabt * var_membrane_permeabilities__gCab; // milliS
        const double var_i_Cabt__i_Cabt = (-var_i_Cat__E_Cat + var_chaste_interface__Vmt__Vmt) * var_membrane_permeabilities__gCabt; // microA
        const double var_membrane_permeabilities__i_NaCa_maxs = (1.0 - var_membrane_permeabilities__fNaCat) * (var_model_parameters__Sms + var_model_parameters__Smt) * mParameters[2]; // microA
        const double var_i_NaCas__i_NaCas = (pow(var_chaste_interface__ion_concentrations__Nai, 3) * var_model_parameters__Cae * exp(0.018700000000000001 * var_chaste_interface__Vms__Vms) - pow(var_model_parameters__Nae, 3) * var_chaste_interface__ion_concentrations__Cai * exp(-0.018700000000000001 * var_chaste_interface__Vms__Vms)) * var_membrane_permeabilities__i_NaCa_maxs / (1.0 + 0.0001 * pow(var_chaste_interface__ion_concentrations__Nai, 3) * var_model_parameters__Cae + 0.0001 * pow(var_model_parameters__Nae, 3) * var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_membrane_permeabilities__i_NaCa_maxt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fNaCat * mParameters[2]; // microA
        const double var_i_NaCat__i_NaCat = (pow(var_chaste_interface__ion_concentrations__Nai, 3) * var_chaste_interface__ion_concentrations__Cat * exp(0.018700000000000001 * var_chaste_interface__Vmt__Vmt) - pow(var_chaste_interface__ion_concentrations__Nat, 3) * var_chaste_interface__ion_concentrations__Cai * exp(-0.018700000000000001 * var_chaste_interface__Vmt__Vmt)) * var_membrane_permeabilities__i_NaCa_maxt / (1.0 + 0.0001 * pow(var_chaste_interface__ion_concentrations__Nai, 3) * var_chaste_interface__ion_concentrations__Cat + 0.0001 * pow(var_chaste_interface__ion_concentrations__Nat, 3) * var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_membrane_permeabilities__i_pCa_maxs = (1.0 - var_membrane_permeabilities__fpCat) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__i_pCa_max; // microA
        const double var_i_pCas__i_pCas = var_chaste_interface__ion_concentrations__Cai * var_membrane_permeabilities__i_pCa_maxs / (0.00040000000000000002 + var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_membrane_permeabilities__i_pCa_maxt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fpCat * var_membrane_permeabilities__i_pCa_max; // microA
        const double var_i_pCat__i_pCat = var_chaste_interface__ion_concentrations__Cai * var_membrane_permeabilities__i_pCa_maxt / (0.00040000000000000002 + var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_model_parameters__Vmyo = 0.58499999999999996 * var_model_parameters__Vc; // cm3
        const double var_JCaSRup__JCaSRup = (13542.188456570031 * pow(var_chaste_interface__ion_concentrations__Cai, 1.2) - 0.2735562310030395 * var_chaste_interface__CaSRup__CaSRup) * var_model_parameters__Vmyo / (1.0 + 33855.471141425078 * pow(var_chaste_interface__ion_concentrations__Cai, 1.2) + 0.303951367781155 * var_chaste_interface__CaSRup__CaSRup); // millimolar_per_second
        const double var_JCad__JCad = (-var_chaste_interface__ion_concentrations__Cai + var_chaste_interface__ion_concentrations__Cass) * var_model_parameters__Vmyo / var_JCad__taud; // millimolar_per_second
        const double var_ion_concentrations__Cai_orig_deriv = (-0.070000000000000007 * var_ion_concentrations__dBTRL - 0.14000000000000001 * var_ion_concentrations__dBTRH + (-var_JCaSRup__JCaSRup + var_JCad__JCad) / var_model_parameters__Vmyo - 0.5 * (-2.0 * var_i_NaCas__i_NaCas - 2.0 * var_i_NaCat__i_NaCat + var_i_Cabs__i_Cabs + var_i_Cabt__i_Cabt + var_i_pCas__i_pCas + var_i_pCat__i_pCat) / (var_model_parameters__F * var_model_parameters__Vmyo)) / (1.0 + 0.00011900000000000002 / pow((0.0023800000000000002 + var_chaste_interface__ion_concentrations__Cai), 2)); // millimolar / second
        const double d_dt_chaste_interface_var_ion_concentrations__Cai = 0.001 * var_ion_concentrations__Cai_orig_deriv; // millimolar / millisecond

        return d_dt_chaste_interface_var_ion_concentrations__Cai;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative1(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -79.709547
            double var_chaste_interface__ion_concentrations__Cai = rY[1];
            // Units: millimolar; Initial value: 3.5486498e-05
            double var_chaste_interface__CaSRup__CaSRup = rY[30];
            // Units: millimolar; Initial value: 0.22755058
            double var_chaste_interface__ion_concentrations__Nai = rY[32];
            // Units: millimolar; Initial value: 6.9435814
            double var_chaste_interface__ion_concentrations__Nat = rY[34];
            // Units: millimolar; Initial value: 140.01386
            double var_chaste_interface__ion_concentrations__Cat = rY[35];
            // Units: millimolar; Initial value: 1.2271399
            double var_chaste_interface__ion_concentrations__Cass = rY[37];
            // Units: millimolar; Initial value: 4.3112114e-05
            double var_chaste_interface__ion_concentrations__BTRH = rY[38];
            // Units: millimolar; Initial value: 0.92804169
            double var_chaste_interface__ion_concentrations__BTRL = rY[39];
            // Units: millimolar; Initial value: 0.034317829
            double var_chaste_interface__Vmt__Vmt = rY[40];
            // Units: millivolt; Initial value: -79.709536
            

            const double var_x31 = 0.018700000000000001 * var_chaste_interface__Vms__Vms;
            const double var_x32 = exp(-var_x31);
            const double var_x33 = var_x32 * var_chaste_interface__ion_concentrations__Cai;
            const double var_x34 = pow(var_chaste_interface__ion_concentrations__Nai, 3);
            const double var_x35 = exp(var_x31);
            const double var_x36 = var_x34 * var_x35;
            const double var_x37 = mParameters[2] / (1.0 + 0.00012 * var_x34 + 274.40000000000003 * var_chaste_interface__ion_concentrations__Cai);
            const double var_x51 = 1 / var_chaste_interface__ion_concentrations__Cai;
            const double var_x52 = 0.00040000000000000002 + var_chaste_interface__ion_concentrations__Cai;
            const double var_x53 = 1 / var_x52;
            const double var_x54 = var_chaste_interface__ion_concentrations__Cai / pow(var_x52, 2);
            const double var_x55 = var_x32 * var_x37;
            const double var_x56 = 1.2 * var_x36 - 2744000.0 * var_x33;
            const double var_x57 = var_x56 * mParameters[2] / pow((0.0036443148688046646 + 4.3731778425655972e-7 * var_x34 + var_chaste_interface__ion_concentrations__Cai), 2);
            const double var_x98 = 0.0023800000000000002 + var_chaste_interface__ion_concentrations__Cai;
            const double var_x99 = 1.0 + 0.00011900000000000002 / pow(var_x98, 2);
            const double var_x100 = 1 / var_x99;
            const double var_x101 = 0.001 * var_x100;
            const double var_x102 = 0.059098357025818171 * var_x53;
            const double var_x103 = pow(var_chaste_interface__ion_concentrations__Cai, 1.2);
            const double var_x104 = 1 / (1.0 + 33855.471141425078 * var_x103 + 0.303951367781155 * var_chaste_interface__CaSRup__CaSRup);
            const double var_x105 = pow(var_chaste_interface__ion_concentrations__Cai, 0.19999999999999996);
            const double var_x106 = var_x104 * var_x105;
            const double var_x107 = 13542.188456570031 * var_x103 - 0.2735562310030395 * var_chaste_interface__CaSRup__CaSRup;
            const double var_x108 = var_x107 / pow((2.9537323401073989e-5 + var_x103 + 8.9779098483507565e-6 * var_chaste_interface__CaSRup__CaSRup), 2);
            const double var_x109 = var_x105 * var_x108;
            const double var_x110 = var_x34 * var_chaste_interface__ion_concentrations__Cat;
            const double var_x111 = pow(var_chaste_interface__ion_concentrations__Nat, 3);
            const double var_x112 = var_x111 * var_chaste_interface__ion_concentrations__Cai;
            const double var_x113 = 1.0 + 0.0001 * var_x110 + 0.0001 * var_x112;
            const double var_x114 = mParameters[2] / var_x113;
            const double var_x115 = 0.11263451574332405 * var_x114;
            const double var_x116 = 0.018700000000000001 * var_chaste_interface__Vmt__Vmt;
            const double var_x117 = exp(-var_x116);
            const double var_x118 = var_x111 * var_x117;
            const double var_x119 = exp(var_x116);
            const double var_x120 = var_x110 * var_x119;
            const double var_x121 = var_x112 * var_x117;
            const double var_x122 = var_x120 - var_x121;
            const double var_x123 = var_x122 * mParameters[2] / pow(var_x113, 2);
            const double var_x124 = 1.1263451574332405e-5 * var_x123;
            const double var_x125 = 2800.0000000000005 * var_chaste_interface__ion_concentrations__Cai;
            
            partialF = var_x101 * (-5920.0000000000009 - var_x102 + 3.5444788081288787e-5 * var_x109 + 0.059098357025818171 * var_x54 + 2800.0000000000005 * var_chaste_interface__ion_concentrations__BTRH + 2800.0000000000005 * var_chaste_interface__ion_concentrations__BTRL - 0.00057226504376988959 * var_x51 - 9.6284409491557608e-5 * var_x57 - 16250.626147884037 * var_x106 - 72497.692750542483 * var_x55 - var_x111 * var_x124 - var_x115 * var_x118) + 2.3800000000000004e-7 * (2.8000000000000003 * var_chaste_interface__ion_concentrations__BTRL + 320.0 * var_chaste_interface__ion_concentrations__Cass + 0.00032046842451113823 * log(var_x51 * var_chaste_interface__ion_concentrations__Cat) + 0.00025179661925875141 * log(1.2 * var_x51) + 0.0098000000000000014 * var_chaste_interface__ion_concentrations__BTRH - 320.0 * var_chaste_interface__ion_concentrations__Cai - 1.9823674770825031e-5 * var_chaste_interface__Vms__Vms - 2.523013152650459e-5 * var_chaste_interface__Vmt__Vmt + var_x115 * var_x122 - var_x102 * var_chaste_interface__ion_concentrations__Cai - var_x125 * (1.0 - var_chaste_interface__ion_concentrations__BTRH) - var_x125 * (1.0 - var_chaste_interface__ion_concentrations__BTRL) + 0.026420441964483409 * var_x37 * var_x56 - var_x104 * var_x107) / (pow(var_x98, 3) * pow(var_x99, 2));
        }
        else
        {
            const double y_save = rY[1];
            rY[1] += delta;
            const double temp = EvaluateYDerivative1(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[1])/delta;
            rY[1] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative2(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -79.709547
        double var_chaste_interface__i_Nas_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 2.1832558e-06
        

        // Mathematics
        const double var_i_Nas_m_gate__alpha_m = ((fabs(59.299999999999997 + var_chaste_interface__Vms__Vms) < 1.8181818181584042e-7) ? (2.1320000002980068e-5 / (1.0 - exp(-1.000000000139778e-7)) - 2750000.0000354135 * (59.299999818181817 + var_chaste_interface__Vms__Vms) * (-2.131999999647083e-5 / (1.0 - exp(9.9999999983446669e-8)) - 2.1320000002980068e-5 / (1.0 - exp(-1.000000000139778e-7)))) : (117.26000000000001 * (59.299999999999997 + var_chaste_interface__Vms__Vms) / (1.0 - exp(-32.615000000000002 - 0.55000000000000004 * var_chaste_interface__Vms__Vms)))); // per_second
        const double var_i_Nas_m_gate__beta_m = 3800.0 * exp(-4.3919999999999995 - 0.071999999999999995 * var_chaste_interface__Vms__Vms); // per_second
        const double var_i_Nas_m_gate__m_orig_deriv = (1.0 - var_chaste_interface__i_Nas_m_gate__m) * var_i_Nas_m_gate__alpha_m - var_i_Nas_m_gate__beta_m * var_chaste_interface__i_Nas_m_gate__m; // 1 / second
        const double d_dt_chaste_interface_var_i_Nas_m_gate__m = 0.001 * var_i_Nas_m_gate__m_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Nas_m_gate__m;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative2(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -79.709547
            

            const double var_x135 = 1 / (1.0 - exp(9.9999999983446669e-8));
            const double var_x136 = 1 / (1.0 - exp(-1.000000000139778e-7));
            const double var_x137 = fabs(59.299999999999997 + var_chaste_interface__Vms__Vms) < 1.8181818181584042e-7;
            const double var_x138 = exp(-32.615000000000002 - 0.55000000000000004 * var_chaste_interface__Vms__Vms);
            const double var_x139 = 1.0 - var_x138;
            const double var_x140 = 117.26000000000001 / var_x139;
            const double var_x141 = 59.299999999999997 + var_chaste_interface__Vms__Vms;
            const double var_x142 = exp(-4.3919999999999995 - 0.071999999999999995 * var_chaste_interface__Vms__Vms);
            const double var_x143 = 2.1320000002980068e-5 * var_x136;
            
            partialF = -0.001 * ((var_x137) ? (var_x143 - 2750000.0000354135 * (59.299999818181817 + var_chaste_interface__Vms__Vms) * (-var_x143 - 2.131999999647083e-5 * var_x135)) : (var_x140 * var_x141)) - 3.7999999999999998 * var_x142;
        }
        else
        {
            const double y_save = rY[2];
            rY[2] += delta;
            const double temp = EvaluateYDerivative2(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[2])/delta;
            rY[2] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative3(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -79.709547
        double var_chaste_interface__i_Nas_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.58232781
        

        // Mathematics
        const double var_i_Nas_h_gate__alpha_h = 284.39999999999998 / (1.0 + exp(9.4110800000000001 + 0.081199999999999994 * var_chaste_interface__Vms__Vms)); // per_second
        const double var_i_Nas_h_gate__beta_h = ((fabs(64.400000000000006 + var_chaste_interface__Vms__Vms) < 4.5454545455347883e-7) ? (8.5318181809268536e-6 / (1.0 - exp(-9.999999998955289e-8)) - 1099999.9999805812 * (64.399999545454548 + var_chaste_interface__Vms__Vms) * (-8.5318181809268536e-6 / (1.0 - exp(-9.999999998955289e-8)) - 8.531818183010741e-6 / (1.0 - exp(1.000000000139778e-7)))) : (18.77 * (64.400000000000006 + var_chaste_interface__Vms__Vms) / (1.0 - exp(-14.168000000000001 - 0.22 * var_chaste_interface__Vms__Vms)))); // per_second
        const double var_i_Nas_h_gate__h_orig_deriv = (1.0 - var_chaste_interface__i_Nas_h_gate__h) * var_i_Nas_h_gate__alpha_h - var_i_Nas_h_gate__beta_h * var_chaste_interface__i_Nas_h_gate__h; // 1 / second
        const double d_dt_chaste_interface_var_i_Nas_h_gate__h = 0.001 * var_i_Nas_h_gate__h_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Nas_h_gate__h;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative3(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -79.709547
            

            const double var_x144 = 1 / (1.0 - exp(-9.999999998955289e-8));
            const double var_x145 = 1 / (1.0 - exp(1.000000000139778e-7));
            const double var_x146 = 64.400000000000006 + var_chaste_interface__Vms__Vms;
            const double var_x147 = fabs(var_x146) < 4.5454545455347883e-7;
            const double var_x148 = exp(-14.168000000000001 - 0.22 * var_chaste_interface__Vms__Vms);
            const double var_x149 = 1.0 - var_x148;
            const double var_x150 = 18.77 / var_x149;
            const double var_x151 = exp(9.4110800000000001 + 0.081199999999999994 * var_chaste_interface__Vms__Vms);
            const double var_x152 = 1.0 + var_x151;
            const double var_x153 = 8.5318181809268536e-6 * var_x144;
            
            partialF = -0.001 * ((var_x147) ? (var_x153 - 1099999.9999805812 * (64.399999545454548 + var_chaste_interface__Vms__Vms) * (-var_x153 - 8.531818183010741e-6 * var_x145)) : (var_x146 * var_x150)) - 0.28439999999999999 / var_x152;
        }
        else
        {
            const double y_save = rY[3];
            rY[3] += delta;
            const double temp = EvaluateYDerivative3(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[3])/delta;
            rY[3] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative4(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_Nat_m_gate__m = rY[4];
        // Units: dimensionless; Initial value: 2.1832694e-06
        double var_chaste_interface__Vmt__Vmt = rY[40];
        // Units: millivolt; Initial value: -79.709536
        

        // Mathematics
        const double var_i_Nat_m_gate__alpha_m = 117.26000000000001 * (59.299999999999997 + var_chaste_interface__Vmt__Vmt) / (1.0 - exp(-32.615000000000002 - 0.55000000000000004 * var_chaste_interface__Vmt__Vmt)); // per_second
        const double var_i_Nat_m_gate__beta_m = 3800.0 * exp(-4.3919999999999995 - 0.071999999999999995 * var_chaste_interface__Vmt__Vmt); // per_second
        const double var_i_Nat_m_gate__m_orig_deriv = (1.0 - var_chaste_interface__i_Nat_m_gate__m) * var_i_Nat_m_gate__alpha_m - var_i_Nat_m_gate__beta_m * var_chaste_interface__i_Nat_m_gate__m; // 1 / second
        const double d_dt_chaste_interface_var_i_Nat_m_gate__m = 0.001 * var_i_Nat_m_gate__m_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Nat_m_gate__m;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative4(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vmt__Vmt = rY[40];
            // Units: millivolt; Initial value: -79.709536
            

            const double var_x154 = exp(-4.3919999999999995 - 0.071999999999999995 * var_chaste_interface__Vmt__Vmt);
            const double var_x155 = 59.299999999999997 + var_chaste_interface__Vmt__Vmt;
            const double var_x156 = exp(-32.615000000000002 - 0.55000000000000004 * var_chaste_interface__Vmt__Vmt);
            const double var_x157 = 1.0 - var_x156;
            const double var_x158 = 0.11726 / var_x157;
            
            partialF = -3.7999999999999998 * var_x154 - var_x155 * var_x158;
        }
        else
        {
            const double y_save = rY[4];
            rY[4] += delta;
            const double temp = EvaluateYDerivative4(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[4])/delta;
            rY[4] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative5(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_Nat_h_gate__h = rY[5];
        // Units: dimensionless; Initial value: 0.58232717
        double var_chaste_interface__Vmt__Vmt = rY[40];
        // Units: millivolt; Initial value: -79.709536
        

        // Mathematics
        const double var_i_Nat_h_gate__alpha_h = 284.39999999999998 / (1.0 + exp(9.4110800000000001 + 0.081199999999999994 * var_chaste_interface__Vmt__Vmt)); // per_second
        const double var_i_Nat_h_gate__beta_h = 18.77 * (64.400000000000006 + var_chaste_interface__Vmt__Vmt) / (1.0 - exp(-14.168000000000001 - 0.22 * var_chaste_interface__Vmt__Vmt)); // per_second
        const double var_i_Nat_h_gate__h_orig_deriv = (1.0 - var_chaste_interface__i_Nat_h_gate__h) * var_i_Nat_h_gate__alpha_h - var_i_Nat_h_gate__beta_h * var_chaste_interface__i_Nat_h_gate__h; // 1 / second
        const double d_dt_chaste_interface_var_i_Nat_h_gate__h = 0.001 * var_i_Nat_h_gate__h_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Nat_h_gate__h;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative5(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vmt__Vmt = rY[40];
            // Units: millivolt; Initial value: -79.709536
            

            const double var_x160 = exp(9.4110800000000001 + 0.081199999999999994 * var_chaste_interface__Vmt__Vmt);
            const double var_x161 = 1.0 + var_x160;
            const double var_x162 = 64.400000000000006 + var_chaste_interface__Vmt__Vmt;
            const double var_x163 = exp(-14.168000000000001 - 0.22 * var_chaste_interface__Vmt__Vmt);
            const double var_x164 = 1.0 - var_x163;
            const double var_x165 = 0.018769999999999998 / var_x164;
            
            partialF = -0.28439999999999999 / var_x161 - var_x162 * var_x165;
        }
        else
        {
            const double y_save = rY[5];
            rY[5] += delta;
            const double temp = EvaluateYDerivative5(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[5])/delta;
            rY[5] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative6(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -79.709547
        double var_chaste_interface__i_Cas__Co = rY[6];
        // Units: dimensionless; Initial value: 2.5436465e-06
        

        // Mathematics
        const double var_i_Cas__Coinf = 1 / (1.0 + exp(-3.0600000000000001 - 0.20000000000000001 * var_chaste_interface__Vms__Vms)); // dimensionless
        const double var_i_Cas__tauCo = 0.00025000000000000001 + 0.0010499999999999999 * exp(-0.64800000000000002 * pow((-1 + 0.055555555555555552 * var_chaste_interface__Vms__Vms), 2)) + 0.0030500000000000002 * exp(-0.22049999999999997 * pow((1 + 0.14285714285714285 * var_chaste_interface__Vms__Vms), 2)); // second
        const double var_i_Cas__Co_orig_deriv = (-var_chaste_interface__i_Cas__Co + var_i_Cas__Coinf) / var_i_Cas__tauCo; // 1 / second
        const double d_dt_chaste_interface_var_i_Cas__Co = 0.001 * var_i_Cas__Co_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Cas__Co;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative6(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -79.709547
            

            const double var_x166 = exp(-0.64800000000000002 * pow((-1 + 0.055555555555555552 * var_chaste_interface__Vms__Vms), 2));
            const double var_x167 = exp(-0.22049999999999997 * pow((1 + 0.14285714285714285 * var_chaste_interface__Vms__Vms), 2));
            const double var_x171 = 0.0010499999999999999 * var_x166;
            const double var_x172 = 0.0030500000000000002 * var_x167;
            const double var_x173 = 1 / (0.00025000000000000001 + var_x171 + var_x172);
            
            partialF = -0.001 * var_x173;
        }
        else
        {
            const double y_save = rY[6];
            rY[6] += delta;
            const double temp = EvaluateYDerivative6(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[6])/delta;
            rY[6] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative7(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -79.709547
        double var_chaste_interface__i_Cas__C1 = rY[7];
        // Units: dimensionless; Initial value: 0.99994546
        

        // Mathematics
        const double var_i_Cas__C1inf = 1 / (1.0 + exp(4.9444444444444438 + 0.18518518518518517 * var_chaste_interface__Vms__Vms)); // dimensionless
        const double var_i_Cas__tauC1 = 0.014999999999999999 / (1.0 + exp(3.0 + 0.040000000000000001 * var_chaste_interface__Vms__Vms)) + 0.040000000000000001 / (1.0 + exp(1.0 - 0.040000000000000001 * var_chaste_interface__Vms__Vms)) + 0.105 * exp(-14.0625 * pow((1 + 0.022222222222222223 * var_chaste_interface__Vms__Vms), 2)); // second
        const double var_i_Cas__C1_orig_deriv = (-var_chaste_interface__i_Cas__C1 + var_i_Cas__C1inf) / var_i_Cas__tauC1; // 1 / second
        const double d_dt_chaste_interface_var_i_Cas__C1 = 0.001 * var_i_Cas__C1_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Cas__C1;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative7(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -79.709547
            

            const double var_x174 = 0.040000000000000001 * var_chaste_interface__Vms__Vms;
            const double var_x175 = exp(1.0 - var_x174);
            const double var_x176 = 1.0 + var_x175;
            const double var_x177 = 1 / var_x176;
            const double var_x178 = exp(3.0 + var_x174);
            const double var_x179 = 1.0 + var_x178;
            const double var_x180 = 1 / var_x179;
            const double var_x181 = exp(-14.0625 * pow((1 + 0.022222222222222223 * var_chaste_interface__Vms__Vms), 2));
            const double var_x186 = 0.105 * var_x181;
            const double var_x187 = 0.014999999999999999 * var_x180;
            const double var_x188 = 1 / (var_x186 + var_x187 + 0.040000000000000001 * var_x177);
            
            partialF = -0.001 * var_x188;
        }
        else
        {
            const double y_save = rY[7];
            rY[7] += delta;
            const double temp = EvaluateYDerivative7(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[7])/delta;
            rY[7] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative8(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -79.709547
        double var_chaste_interface__i_Cas__C2 = rY[8];
        // Units: dimensionless; Initial value: 0.99994546
        

        // Mathematics
        const double var_i_Cas__C1inf = 1 / (1.0 + exp(4.9444444444444438 + 0.18518518518518517 * var_chaste_interface__Vms__Vms)); // dimensionless
        const double var_i_Cas__C2inf = var_i_Cas__C1inf; // dimensionless
        const double var_i_Cas__tauC2 = 0.014999999999999999 / (1.0 + exp(3.0 + 0.040000000000000001 * var_chaste_interface__Vms__Vms)) + 0.080000000000000002 / (1.0 + exp(-11.0 - 0.20000000000000001 * var_chaste_interface__Vms__Vms)) + 0.041000000000000002 * exp(-15.340277777777779 * pow((1 + 0.021276595744680851 * var_chaste_interface__Vms__Vms), 2)); // second
        const double var_i_Cas__C2_orig_deriv = (-var_chaste_interface__i_Cas__C2 + var_i_Cas__C2inf) / var_i_Cas__tauC2; // 1 / second
        const double d_dt_chaste_interface_var_i_Cas__C2 = 0.001 * var_i_Cas__C2_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Cas__C2;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative8(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -79.709547
            

            const double var_x168 = -0.20000000000000001 * var_chaste_interface__Vms__Vms;
            const double var_x174 = 0.040000000000000001 * var_chaste_interface__Vms__Vms;
            const double var_x178 = exp(3.0 + var_x174);
            const double var_x179 = 1.0 + var_x178;
            const double var_x180 = 1 / var_x179;
            const double var_x187 = 0.014999999999999999 * var_x180;
            const double var_x190 = exp(-11.0 + var_x168);
            const double var_x191 = 1.0 + var_x190;
            const double var_x192 = 1 / var_x191;
            const double var_x193 = exp(-15.340277777777779 * pow((1 + 0.021276595744680851 * var_chaste_interface__Vms__Vms), 2));
            const double var_x194 = 0.041000000000000002 * var_x193;
            const double var_x195 = 1 / (var_x187 + var_x194 + 0.080000000000000002 * var_x192);
            
            partialF = -0.001 * var_x195;
        }
        else
        {
            const double y_save = rY[8];
            rY[8] += delta;
            const double temp = EvaluateYDerivative8(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[8])/delta;
            rY[8] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative9(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_Cas__Ccast = rY[9];
        // Units: dimensionless; Initial value: 0.99570063
        double var_chaste_interface__ion_concentrations__Cass = rY[37];
        // Units: millimolar; Initial value: 4.3112114e-05
        

        // Mathematics
        const double var_i_Cas__tauCcast = 0.0089999999999999993; // second
        const double var_i_Cas__Ccastinf = 1 / (1.0 + 100.0 * var_chaste_interface__ion_concentrations__Cass); // dimensionless
        const double var_i_Cas__Ccast_orig_deriv = (-var_chaste_interface__i_Cas__Ccast + var_i_Cas__Ccastinf) / var_i_Cas__tauCcast; // 1 / second
        const double d_dt_chaste_interface_var_i_Cas__Ccast = 0.001 * var_i_Cas__Ccast_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Cas__Ccast;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative9(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            

            
            partialF = -0.11111111111111112;
        }
        else
        {
            const double y_save = rY[9];
            rY[9] += delta;
            const double temp = EvaluateYDerivative9(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[9])/delta;
            rY[9] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative10(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_Cat__Co = rY[10];
        // Units: dimensionless; Initial value: 2.543652e-06
        double var_chaste_interface__Vmt__Vmt = rY[40];
        // Units: millivolt; Initial value: -79.709536
        

        // Mathematics
        const double var_i_Cat__Coinf = 1 / (1.0 + exp(-3.0600000000000001 - 0.20000000000000001 * var_chaste_interface__Vmt__Vmt)); // dimensionless
        const double var_i_Cat__tauCo = 0.00025000000000000001 + 0.0010499999999999999 * exp(-0.64800000000000002 * pow((-1 + 0.055555555555555552 * var_chaste_interface__Vmt__Vmt), 2)) + 0.0030500000000000002 * exp(-0.22049999999999997 * pow((1 + 0.14285714285714285 * var_chaste_interface__Vmt__Vmt), 2)); // second
        const double var_i_Cat__Co_orig_deriv = (-var_chaste_interface__i_Cat__Co + var_i_Cat__Coinf) / var_i_Cat__tauCo; // 1 / second
        const double d_dt_chaste_interface_var_i_Cat__Co = 0.001 * var_i_Cat__Co_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Cat__Co;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative10(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vmt__Vmt = rY[40];
            // Units: millivolt; Initial value: -79.709536
            

            const double var_x197 = exp(-0.64800000000000002 * pow((-1 + 0.055555555555555552 * var_chaste_interface__Vmt__Vmt), 2));
            const double var_x198 = 0.0010499999999999999 * var_x197;
            const double var_x199 = exp(-0.22049999999999997 * pow((1 + 0.14285714285714285 * var_chaste_interface__Vmt__Vmt), 2));
            const double var_x200 = 0.0030500000000000002 * var_x199;
            const double var_x201 = 1 / (0.00025000000000000001 + var_x198 + var_x200);
            
            partialF = -0.001 * var_x201;
        }
        else
        {
            const double y_save = rY[10];
            rY[10] += delta;
            const double temp = EvaluateYDerivative10(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[10])/delta;
            rY[10] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative11(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_Cat__C1 = rY[11];
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__Vmt__Vmt = rY[40];
        // Units: millivolt; Initial value: -79.709536
        

        // Mathematics
        const double var_i_Cat__C1inf = 1 / (1.0 + exp(4.9444444444444438 + 0.18518518518518517 * var_chaste_interface__Vmt__Vmt)); // dimensionless
        const double var_i_Cat__tauC1 = 0.014999999999999999 / (1.0 + exp(3.0 + 0.040000000000000001 * var_chaste_interface__Vmt__Vmt)) + 0.040000000000000001 / (1.0 + exp(1.0 - 0.040000000000000001 * var_chaste_interface__Vmt__Vmt)) + 0.105 * exp(-14.0625 * pow((1 + 0.022222222222222223 * var_chaste_interface__Vmt__Vmt), 2)); // second
        const double var_i_Cat__C1_orig_deriv = (-var_chaste_interface__i_Cat__C1 + var_i_Cat__C1inf) / var_i_Cat__tauC1; // 1 / second
        const double d_dt_chaste_interface_var_i_Cat__C1 = 0.001 * var_i_Cat__C1_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Cat__C1;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative11(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vmt__Vmt = rY[40];
            // Units: millivolt; Initial value: -79.709536
            

            const double var_x205 = 0.040000000000000001 * var_chaste_interface__Vmt__Vmt;
            const double var_x206 = exp(3.0 + var_x205);
            const double var_x207 = 1.0 + var_x206;
            const double var_x208 = 1 / var_x207;
            const double var_x209 = 0.014999999999999999 * var_x208;
            const double var_x210 = exp(1.0 - var_x205);
            const double var_x211 = 1.0 + var_x210;
            const double var_x212 = 1 / var_x211;
            const double var_x213 = exp(-14.0625 * pow((1 + 0.022222222222222223 * var_chaste_interface__Vmt__Vmt), 2));
            const double var_x214 = 0.105 * var_x213;
            const double var_x215 = 1 / (var_x209 + var_x214 + 0.040000000000000001 * var_x212);
            
            partialF = -0.001 * var_x215;
        }
        else
        {
            const double y_save = rY[11];
            rY[11] += delta;
            const double temp = EvaluateYDerivative11(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[11])/delta;
            rY[11] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative12(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_Cat__C2 = rY[12];
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__Vmt__Vmt = rY[40];
        // Units: millivolt; Initial value: -79.709536
        

        // Mathematics
        const double var_i_Cat__C1inf = 1 / (1.0 + exp(4.9444444444444438 + 0.18518518518518517 * var_chaste_interface__Vmt__Vmt)); // dimensionless
        const double var_i_Cat__C2inf = var_i_Cat__C1inf; // dimensionless
        const double var_i_Cat__tauC2 = 0.014999999999999999 / (1.0 + exp(3.0 + 0.040000000000000001 * var_chaste_interface__Vmt__Vmt)) + 0.080000000000000002 / (1.0 + exp(-11.0 - 0.20000000000000001 * var_chaste_interface__Vmt__Vmt)) + 0.041000000000000002 * exp(-15.340277777777779 * pow((1 + 0.021276595744680851 * var_chaste_interface__Vmt__Vmt), 2)); // second
        const double var_i_Cat__C2_orig_deriv = (-var_chaste_interface__i_Cat__C2 + var_i_Cat__C2inf) / var_i_Cat__tauC2; // 1 / second
        const double d_dt_chaste_interface_var_i_Cat__C2 = 0.001 * var_i_Cat__C2_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Cat__C2;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative12(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vmt__Vmt = rY[40];
            // Units: millivolt; Initial value: -79.709536
            

            const double var_x202 = -0.20000000000000001 * var_chaste_interface__Vmt__Vmt;
            const double var_x205 = 0.040000000000000001 * var_chaste_interface__Vmt__Vmt;
            const double var_x206 = exp(3.0 + var_x205);
            const double var_x207 = 1.0 + var_x206;
            const double var_x208 = 1 / var_x207;
            const double var_x209 = 0.014999999999999999 * var_x208;
            const double var_x221 = exp(-11.0 + var_x202);
            const double var_x222 = 1.0 + var_x221;
            const double var_x223 = 1 / var_x222;
            const double var_x224 = exp(-15.340277777777779 * pow((1 + 0.021276595744680851 * var_chaste_interface__Vmt__Vmt), 2));
            const double var_x225 = 0.041000000000000002 * var_x224;
            const double var_x226 = 1 / (var_x209 + var_x225 + 0.080000000000000002 * var_x223);
            
            partialF = -0.001 * var_x226;
        }
        else
        {
            const double y_save = rY[12];
            rY[12] += delta;
            const double temp = EvaluateYDerivative12(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[12])/delta;
            rY[12] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative13(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_Cat__Ccast = rY[13];
        // Units: dimensionless; Initial value: 0.99570063
        double var_chaste_interface__ion_concentrations__Cass = rY[37];
        // Units: millimolar; Initial value: 4.3112114e-05
        

        // Mathematics
        const double var_i_Cat__tauCcast = 0.0089999999999999993; // second
        const double var_i_Cat__Ccastinf = 1 / (1.0 + 100.0 * var_chaste_interface__ion_concentrations__Cass); // dimensionless
        const double var_i_Cat__Ccast_orig_deriv = (-var_chaste_interface__i_Cat__Ccast + var_i_Cat__Ccastinf) / var_i_Cat__tauCcast; // 1 / second
        const double d_dt_chaste_interface_var_i_Cat__Ccast = 0.001 * var_i_Cat__Ccast_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Cat__Ccast;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative13(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            

            
            partialF = -0.11111111111111112;
        }
        else
        {
            const double y_save = rY[13];
            rY[13] += delta;
            const double temp = EvaluateYDerivative13(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[13])/delta;
            rY[13] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative14(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -79.709547
        double var_chaste_interface__i_Ktos_rs_gate__rs = rY[14];
        // Units: dimensionless; Initial value: 0.0023485072
        

        // Mathematics
        const double var_i_Ktos_rs_gate__rinfs = 1 / (1.0 + exp(-0.92819614711033271 - 0.087565674255691769 * var_chaste_interface__Vms__Vms)); // dimensionless
        const double var_i_Ktos_rs_gate__taurs = 1 / (45.159999999999997 * exp(1.7885000000000002 + 0.035770000000000003 * var_chaste_interface__Vms__Vms) + 98.900000000000006 * exp(-3.8000000000000003 - 0.10000000000000001 * var_chaste_interface__Vms__Vms)); // second
        const double var_i_Ktos_rs_gate__rs_orig_deriv = (-var_chaste_interface__i_Ktos_rs_gate__rs + var_i_Ktos_rs_gate__rinfs) / var_i_Ktos_rs_gate__taurs; // 1 / second
        const double d_dt_chaste_interface_var_i_Ktos_rs_gate__rs = 0.001 * var_i_Ktos_rs_gate__rs_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Ktos_rs_gate__rs;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative14(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -79.709547
            

            const double var_x229 = exp(1.7885000000000002 + 0.035770000000000003 * var_chaste_interface__Vms__Vms);
            const double var_x230 = exp(-3.8000000000000003 - 0.10000000000000001 * var_chaste_interface__Vms__Vms);
            
            partialF = -0.045159999999999999 * var_x229 - 0.098900000000000002 * var_x230;
        }
        else
        {
            const double y_save = rY[14];
            rY[14] += delta;
            const double temp = EvaluateYDerivative14(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[14])/delta;
            rY[14] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative15(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -79.709547
        double var_chaste_interface__i_Ktos_ss_gate__ss = rY[15];
        // Units: dimensionless; Initial value: 0.98315843
        

        // Mathematics
        const double var_i_Ktos_ss_gate__sinfs = 1 / (1.0 + exp(6.5803808776746413 + 0.14526227103034528 * var_chaste_interface__Vms__Vms)); // dimensionless
        const double var_i_Ktos_ss_gate__tauss = 0.035000000000000003 + 0.34999999999999998 * exp(-21.734244000000004 * pow((1 + 0.014285714285714285 * var_chaste_interface__Vms__Vms), 2)); // second
        const double var_i_Ktos_ss_gate__ss_orig_deriv = (-var_chaste_interface__i_Ktos_ss_gate__ss + var_i_Ktos_ss_gate__sinfs) / var_i_Ktos_ss_gate__tauss; // 1 / second
        const double d_dt_chaste_interface_var_i_Ktos_ss_gate__ss = 0.001 * var_i_Ktos_ss_gate__ss_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Ktos_ss_gate__ss;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative15(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -79.709547
            

            const double var_x231 = pow((1 + 0.014285714285714285 * var_chaste_interface__Vms__Vms), 2);
            const double var_x232 = exp(-21.734244000000004 * var_x231);
            const double var_x233 = 1 / (0.035000000000000003 + 0.34999999999999998 * var_x232);
            
            partialF = -0.001 * var_x233;
        }
        else
        {
            const double y_save = rY[15];
            rY[15] += delta;
            const double temp = EvaluateYDerivative15(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[15])/delta;
            rY[15] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative16(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -79.709547
        double var_chaste_interface__i_Ktos_sss_gate__sss = rY[16];
        // Units: dimensionless; Initial value: 0.6748337
        

        // Mathematics
        const double var_i_Ktos_sss_gate__ssinfs = 1 / (1.0 + exp(6.5803808776746413 + 0.14526227103034528 * var_chaste_interface__Vms__Vms)); // dimensionless
        const double var_i_Ktos_sss_gate__tausss = 0.035000000000000003 + 3.7000000000000002 * exp(-5.433561000000001 * pow((1 + 0.014285714285714285 * var_chaste_interface__Vms__Vms), 2)); // second
        const double var_i_Ktos_sss_gate__sss_orig_deriv = (-var_chaste_interface__i_Ktos_sss_gate__sss + var_i_Ktos_sss_gate__ssinfs) / var_i_Ktos_sss_gate__tausss; // 1 / second
        const double d_dt_chaste_interface_var_i_Ktos_sss_gate__sss = 0.001 * var_i_Ktos_sss_gate__sss_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Ktos_sss_gate__sss;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative16(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -79.709547
            

            const double var_x231 = pow((1 + 0.014285714285714285 * var_chaste_interface__Vms__Vms), 2);
            const double var_x238 = exp(-5.433561000000001 * var_x231);
            const double var_x239 = 1 / (0.035000000000000003 + 3.7000000000000002 * var_x238);
            
            partialF = -0.001 * var_x239;
        }
        else
        {
            const double y_save = rY[16];
            rY[16] += delta;
            const double temp = EvaluateYDerivative16(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[16])/delta;
            rY[16] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative17(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_Ktot_rt_gate__rt = rY[17];
        // Units: dimensionless; Initial value: 0.0023485094
        double var_chaste_interface__Vmt__Vmt = rY[40];
        // Units: millivolt; Initial value: -79.709536
        

        // Mathematics
        const double var_i_Ktot_rt_gate__rinft = 1 / (1.0 + exp(-0.92819614711033271 - 0.087565674255691769 * var_chaste_interface__Vmt__Vmt)); // dimensionless
        const double var_i_Ktot_rt_gate__taurt = 1 / (45.159999999999997 * exp(1.7885000000000002 + 0.035770000000000003 * var_chaste_interface__Vmt__Vmt) + 98.900000000000006 * exp(-3.8000000000000003 - 0.10000000000000001 * var_chaste_interface__Vmt__Vmt)); // second
        const double var_i_Ktot_rt_gate__rt_orig_deriv = (-var_chaste_interface__i_Ktot_rt_gate__rt + var_i_Ktot_rt_gate__rinft) / var_i_Ktot_rt_gate__taurt; // 1 / second
        const double d_dt_chaste_interface_var_i_Ktot_rt_gate__rt = 0.001 * var_i_Ktot_rt_gate__rt_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Ktot_rt_gate__rt;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative17(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vmt__Vmt = rY[40];
            // Units: millivolt; Initial value: -79.709536
            

            const double var_x240 = exp(1.7885000000000002 + 0.035770000000000003 * var_chaste_interface__Vmt__Vmt);
            const double var_x241 = exp(-3.8000000000000003 - 0.10000000000000001 * var_chaste_interface__Vmt__Vmt);
            
            partialF = -0.045159999999999999 * var_x240 - 0.098900000000000002 * var_x241;
        }
        else
        {
            const double y_save = rY[17];
            rY[17] += delta;
            const double temp = EvaluateYDerivative17(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[17])/delta;
            rY[17] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative18(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_Ktot_st_gate__st = rY[18];
        // Units: dimensionless; Initial value: 0.98315865
        double var_chaste_interface__Vmt__Vmt = rY[40];
        // Units: millivolt; Initial value: -79.709536
        

        // Mathematics
        const double var_i_Ktot_st_gate__sinft = 1 / (1.0 + exp(6.5803808776746413 + 0.14526227103034528 * var_chaste_interface__Vmt__Vmt)); // dimensionless
        const double var_i_Ktot_st_gate__taust = 0.035000000000000003 + 0.34999999999999998 * exp(-21.734244000000004 * pow((1 + 0.014285714285714285 * var_chaste_interface__Vmt__Vmt), 2)); // second
        const double var_i_Ktot_st_gate__st_orig_deriv = (-var_chaste_interface__i_Ktot_st_gate__st + var_i_Ktot_st_gate__sinft) / var_i_Ktot_st_gate__taust; // 1 / second
        const double d_dt_chaste_interface_var_i_Ktot_st_gate__st = 0.001 * var_i_Ktot_st_gate__st_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Ktot_st_gate__st;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative18(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vmt__Vmt = rY[40];
            // Units: millivolt; Initial value: -79.709536
            

            const double var_x244 = pow((1 + 0.014285714285714285 * var_chaste_interface__Vmt__Vmt), 2);
            const double var_x245 = exp(-21.734244000000004 * var_x244);
            const double var_x246 = 1 / (0.035000000000000003 + 0.34999999999999998 * var_x245);
            
            partialF = -0.001 * var_x246;
        }
        else
        {
            const double y_save = rY[18];
            rY[18] += delta;
            const double temp = EvaluateYDerivative18(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[18])/delta;
            rY[18] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative19(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_Ktot_sst_gate__sst = rY[19];
        // Units: dimensionless; Initial value: 0.67478532
        double var_chaste_interface__Vmt__Vmt = rY[40];
        // Units: millivolt; Initial value: -79.709536
        

        // Mathematics
        const double var_i_Ktot_sst_gate__ssinft = 1 / (1.0 + exp(6.5803808776746413 + 0.14526227103034528 * var_chaste_interface__Vmt__Vmt)); // dimensionless
        const double var_i_Ktot_sst_gate__tausst = 0.035000000000000003 + 3.7000000000000002 * exp(-5.433561000000001 * pow((1 + 0.014285714285714285 * var_chaste_interface__Vmt__Vmt), 2)); // second
        const double var_i_Ktot_sst_gate__sst_orig_deriv = (-var_chaste_interface__i_Ktot_sst_gate__sst + var_i_Ktot_sst_gate__ssinft) / var_i_Ktot_sst_gate__tausst; // 1 / second
        const double d_dt_chaste_interface_var_i_Ktot_sst_gate__sst = 0.001 * var_i_Ktot_sst_gate__sst_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Ktot_sst_gate__sst;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative19(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vmt__Vmt = rY[40];
            // Units: millivolt; Initial value: -79.709536
            

            const double var_x244 = pow((1 + 0.014285714285714285 * var_chaste_interface__Vmt__Vmt), 2);
            const double var_x251 = exp(-5.433561000000001 * var_x244);
            const double var_x252 = 1 / (0.035000000000000003 + 3.7000000000000002 * var_x251);
            
            partialF = -0.001 * var_x252;
        }
        else
        {
            const double y_save = rY[19];
            rY[19] += delta;
            const double temp = EvaluateYDerivative19(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[19])/delta;
            rY[19] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative20(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -79.709547
        double var_chaste_interface__i_Ksts_rsts_gate__rsts = rY[20];
        // Units: dimensionless; Initial value: 0.0031079213
        

        // Mathematics
        const double var_i_Ksts_rsts_gate__rstinfs = 1 / (1.0 + exp(-0.97292724196277491 - 0.084602368866328256 * var_chaste_interface__Vms__Vms)); // dimensionless
        const double var_i_Ksts_rsts_gate__taursts = 10.0 / (45.159999999999997 * exp(1.7885000000000002 + 0.035770000000000003 * var_chaste_interface__Vms__Vms) + 98.900000000000006 * exp(-3.8000000000000003 - 0.10000000000000001 * var_chaste_interface__Vms__Vms)); // second
        const double var_i_Ksts_rsts_gate__rsts_orig_deriv = (-var_chaste_interface__i_Ksts_rsts_gate__rsts + var_i_Ksts_rsts_gate__rstinfs) / var_i_Ksts_rsts_gate__taursts; // 1 / second
        const double d_dt_chaste_interface_var_i_Ksts_rsts_gate__rsts = 0.001 * var_i_Ksts_rsts_gate__rsts_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Ksts_rsts_gate__rsts;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative20(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -79.709547
            

            const double var_x229 = exp(1.7885000000000002 + 0.035770000000000003 * var_chaste_interface__Vms__Vms);
            const double var_x230 = exp(-3.8000000000000003 - 0.10000000000000001 * var_chaste_interface__Vms__Vms);
            
            partialF = -0.0098900000000000012 * var_x230 - 0.004516 * var_x229;
        }
        else
        {
            const double y_save = rY[20];
            rY[20] += delta;
            const double temp = EvaluateYDerivative20(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[20])/delta;
            rY[20] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative21(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -79.709547
        double var_chaste_interface__i_Ksts_ssts_gate__ssts = rY[21];
        // Units: dimensionless; Initial value: 0.30773393
        

        // Mathematics
        const double var_i_Ksts_ssts_gate__sstinfs = 1 / (1.0 + exp(8.4951456310679614 + 0.097087378640776698 * var_chaste_interface__Vms__Vms)); // dimensionless
        const double var_i_Ksts_ssts_gate__taussts = 2.1000000000000001; // second
        const double var_i_Ksts_ssts_gate__ssts_orig_deriv = (-var_chaste_interface__i_Ksts_ssts_gate__ssts + var_i_Ksts_ssts_gate__sstinfs) / var_i_Ksts_ssts_gate__taussts; // 1 / second
        const double d_dt_chaste_interface_var_i_Ksts_ssts_gate__ssts = 0.001 * var_i_Ksts_ssts_gate__ssts_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Ksts_ssts_gate__ssts;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative21(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            

            
            partialF = -0.00047619047619047619;
        }
        else
        {
            const double y_save = rY[21];
            rY[21] += delta;
            const double temp = EvaluateYDerivative21(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[21])/delta;
            rY[21] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative22(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_Kstt_rstt_gate__rstt = rY[22];
        // Units: dimensionless; Initial value: 0.0031079241
        double var_chaste_interface__Vmt__Vmt = rY[40];
        // Units: millivolt; Initial value: -79.709536
        

        // Mathematics
        const double var_i_Kstt_rstt_gate__rstinft = 1 / (1.0 + exp(-0.97292724196277491 - 0.084602368866328256 * var_chaste_interface__Vmt__Vmt)); // dimensionless
        const double var_i_Kstt_rstt_gate__taurstt = 10.0 / (45.159999999999997 * exp(1.7885000000000002 + 0.035770000000000003 * var_chaste_interface__Vmt__Vmt) + 98.900000000000006 * exp(-3.8000000000000003 - 0.10000000000000001 * var_chaste_interface__Vmt__Vmt)); // second
        const double var_i_Kstt_rstt_gate__rstt_orig_deriv = (-var_chaste_interface__i_Kstt_rstt_gate__rstt + var_i_Kstt_rstt_gate__rstinft) / var_i_Kstt_rstt_gate__taurstt; // 1 / second
        const double d_dt_chaste_interface_var_i_Kstt_rstt_gate__rstt = 0.001 * var_i_Kstt_rstt_gate__rstt_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Kstt_rstt_gate__rstt;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative22(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vmt__Vmt = rY[40];
            // Units: millivolt; Initial value: -79.709536
            

            const double var_x240 = exp(1.7885000000000002 + 0.035770000000000003 * var_chaste_interface__Vmt__Vmt);
            const double var_x241 = exp(-3.8000000000000003 - 0.10000000000000001 * var_chaste_interface__Vmt__Vmt);
            
            partialF = -0.0098900000000000012 * var_x241 - 0.004516 * var_x240;
        }
        else
        {
            const double y_save = rY[22];
            rY[22] += delta;
            const double temp = EvaluateYDerivative22(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[22])/delta;
            rY[22] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative23(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_Kstt_sstt_gate__sstt = rY[23];
        // Units: dimensionless; Initial value: 0.30773368
        double var_chaste_interface__Vmt__Vmt = rY[40];
        // Units: millivolt; Initial value: -79.709536
        

        // Mathematics
        const double var_i_Kstt_sstt_gate__sstinft = 1 / (1.0 + exp(8.4951456310679614 + 0.097087378640776698 * var_chaste_interface__Vmt__Vmt)); // dimensionless
        const double var_i_Kstt_sstt_gate__tausstt = 2.1000000000000001; // second
        const double var_i_Kstt_sstt_gate__sstt_orig_deriv = (-var_chaste_interface__i_Kstt_sstt_gate__sstt + var_i_Kstt_sstt_gate__sstinft) / var_i_Kstt_sstt_gate__tausstt; // 1 / second
        const double d_dt_chaste_interface_var_i_Kstt_sstt_gate__sstt = 0.001 * var_i_Kstt_sstt_gate__sstt_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Kstt_sstt_gate__sstt;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative23(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            

            
            partialF = -0.00047619047619047619;
        }
        else
        {
            const double y_save = rY[23];
            rY[23] += delta;
            const double temp = EvaluateYDerivative23(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[23])/delta;
            rY[23] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative24(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -79.709547
        double var_chaste_interface__i_Kfs_qs_gate__qs = rY[24];
        // Units: dimensionless; Initial value: 0.0034357356
        

        // Mathematics
        const double var_i_Kfs_qs_gate__qinfs = 1 / (1.0 + exp(13.225190839694655 + 0.095419847328244267 * var_chaste_interface__Vms__Vms)); // dimensionless
        const double var_i_Kfs_qs_gate__tauqs = 1 / (0.56230000000000002 * exp(-5.6377730796335452 - 0.070472163495419307 * var_chaste_interface__Vms__Vms) + 0.11885 * exp(2.8198801550934083 + 0.035248501938667604 * var_chaste_interface__Vms__Vms)); // second
        const double var_i_Kfs_qs_gate__qs_orig_deriv = (-var_chaste_interface__i_Kfs_qs_gate__qs + var_i_Kfs_qs_gate__qinfs) / var_i_Kfs_qs_gate__tauqs; // 1 / second
        const double d_dt_chaste_interface_var_i_Kfs_qs_gate__qs = 0.001 * var_i_Kfs_qs_gate__qs_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Kfs_qs_gate__qs;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative24(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -79.709547
            

            const double var_x261 = exp(2.8198801550934083 + 0.035248501938667604 * var_chaste_interface__Vms__Vms);
            const double var_x262 = exp(-5.6377730796335452 - 0.070472163495419307 * var_chaste_interface__Vms__Vms);
            
            partialF = -0.00056230000000000006 * var_x262 - 0.00011885 * var_x261;
        }
        else
        {
            const double y_save = rY[24];
            rY[24] += delta;
            const double temp = EvaluateYDerivative24(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[24])/delta;
            rY[24] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative25(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_Kft_qt_gate__qt = rY[25];
        // Units: dimensionless; Initial value: 0.0034357175
        double var_chaste_interface__Vmt__Vmt = rY[40];
        // Units: millivolt; Initial value: -79.709536
        

        // Mathematics
        const double var_i_Kft_qt_gate__qinft = 1 / (1.0 + exp(13.225190839694655 + 0.095419847328244267 * var_chaste_interface__Vmt__Vmt)); // dimensionless
        const double var_i_Kft_qt_gate__tauqt = 1 / (0.56230000000000002 * exp(-5.6377730796335452 - 0.070472163495419307 * var_chaste_interface__Vmt__Vmt) + 0.11885 * exp(2.8198801550934083 + 0.035248501938667604 * var_chaste_interface__Vmt__Vmt)); // second
        const double var_i_Kft_qt_gate__qt_orig_deriv = (-var_chaste_interface__i_Kft_qt_gate__qt + var_i_Kft_qt_gate__qinft) / var_i_Kft_qt_gate__tauqt; // 1 / second
        const double d_dt_chaste_interface_var_i_Kft_qt_gate__qt = 0.001 * var_i_Kft_qt_gate__qt_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Kft_qt_gate__qt;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative25(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vmt__Vmt = rY[40];
            // Units: millivolt; Initial value: -79.709536
            

            const double var_x263 = exp(-5.6377730796335452 - 0.070472163495419307 * var_chaste_interface__Vmt__Vmt);
            const double var_x264 = exp(2.8198801550934083 + 0.035248501938667604 * var_chaste_interface__Vmt__Vmt);
            
            partialF = -0.00056230000000000006 * var_x263 - 0.00011885 * var_x264;
        }
        else
        {
            const double y_save = rY[25];
            rY[25] += delta;
            const double temp = EvaluateYDerivative25(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[25])/delta;
            rY[25] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative26(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__JCaSRrel__F1 = rY[26];
        // Units: dimensionless; Initial value: 0.67606483
        double var_chaste_interface__JCaSRrel__F2 = rY[27];
        // Units: dimensionless; Initial value: 0.00038333331
        double var_chaste_interface__ion_concentrations__Cass = rY[37];
        // Units: millimolar; Initial value: 4.3112114e-05
        

        // Mathematics
        const double var_JCaSRrel__kam = 576.0; // per_second
        const double var_JCaSRrel__kap = 12150000000000.0; // per_millimolar4_per_second
        const double var_JCaSRrel__F1_orig_deriv = var_chaste_interface__JCaSRrel__F2 * var_JCaSRrel__kam - pow(var_chaste_interface__ion_concentrations__Cass, 4) * var_chaste_interface__JCaSRrel__F1 * var_JCaSRrel__kap; // 1 / second
        const double d_dt_chaste_interface_var_JCaSRrel__F1 = 0.001 * var_JCaSRrel__F1_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_JCaSRrel__F1;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative26(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__ion_concentrations__Cass = rY[37];
            // Units: millimolar; Initial value: 4.3112114e-05
            

            const double var_x267 = 12150000000.0 * pow(var_chaste_interface__ion_concentrations__Cass, 4);
            
            partialF = -var_x267;
        }
        else
        {
            const double y_save = rY[26];
            rY[26] += delta;
            const double temp = EvaluateYDerivative26(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[26])/delta;
            rY[26] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative27(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__JCaSRrel__F1 = rY[26];
        // Units: dimensionless; Initial value: 0.67606483
        double var_chaste_interface__JCaSRrel__F2 = rY[27];
        // Units: dimensionless; Initial value: 0.00038333331
        double var_chaste_interface__JCaSRrel__F3 = rY[28];
        // Units: dimensionless; Initial value: 6.4516879e-11
        double var_chaste_interface__JCaSRrel__F4 = rY[29];
        // Units: dimensionless; Initial value: 0.32355462
        double var_chaste_interface__ion_concentrations__Cass = rY[37];
        // Units: millimolar; Initial value: 4.3112114e-05
        

        // Mathematics
        const double var_JCaSRrel__kam = 576.0; // per_second
        const double var_JCaSRrel__kap = 12150000000000.0; // per_millimolar4_per_second
        const double var_JCaSRrel__kbm = 1930.0; // per_second
        const double var_JCaSRrel__kbp = 4050000000.0; // per_millimolar3_per_second
        const double var_JCaSRrel__kcm = 0.80000000000000004; // per_second
        const double var_JCaSRrel__kcp = 18.0; // per_second
        const double var_JCaSRrel__F2_orig_deriv = var_chaste_interface__JCaSRrel__F3 * var_JCaSRrel__kbm + var_chaste_interface__JCaSRrel__F4 * var_JCaSRrel__kcm - (pow(var_chaste_interface__ion_concentrations__Cass, 3) * var_JCaSRrel__kbp + var_JCaSRrel__kam + var_JCaSRrel__kcp) * var_chaste_interface__JCaSRrel__F2 + pow(var_chaste_interface__ion_concentrations__Cass, 4) * var_chaste_interface__JCaSRrel__F1 * var_JCaSRrel__kap; // 1 / second
        const double d_dt_chaste_interface_var_JCaSRrel__F2 = 0.001 * var_JCaSRrel__F2_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_JCaSRrel__F2;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative27(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__ion_concentrations__Cass = rY[37];
            // Units: millimolar; Initial value: 4.3112114e-05
            

            const double var_x268 = pow(var_chaste_interface__ion_concentrations__Cass, 3);
            const double var_x270 = 4050000.0 * var_x268;
            
            partialF = -0.59399999999999997 - var_x270;
        }
        else
        {
            const double y_save = rY[27];
            rY[27] += delta;
            const double temp = EvaluateYDerivative27(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[27])/delta;
            rY[27] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative28(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__JCaSRrel__F2 = rY[27];
        // Units: dimensionless; Initial value: 0.00038333331
        double var_chaste_interface__JCaSRrel__F3 = rY[28];
        // Units: dimensionless; Initial value: 6.4516879e-11
        double var_chaste_interface__ion_concentrations__Cass = rY[37];
        // Units: millimolar; Initial value: 4.3112114e-05
        

        // Mathematics
        const double var_JCaSRrel__kbm = 1930.0; // per_second
        const double var_JCaSRrel__kbp = 4050000000.0; // per_millimolar3_per_second
        const double var_JCaSRrel__F3_orig_deriv = -var_chaste_interface__JCaSRrel__F3 * var_JCaSRrel__kbm + pow(var_chaste_interface__ion_concentrations__Cass, 3) * var_chaste_interface__JCaSRrel__F2 * var_JCaSRrel__kbp; // 1 / second
        const double d_dt_chaste_interface_var_JCaSRrel__F3 = 0.001 * var_JCaSRrel__F3_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_JCaSRrel__F3;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative28(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            

            
            partialF = -1.9299999999999999;
        }
        else
        {
            const double y_save = rY[28];
            rY[28] += delta;
            const double temp = EvaluateYDerivative28(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[28])/delta;
            rY[28] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative29(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__JCaSRrel__F2 = rY[27];
        // Units: dimensionless; Initial value: 0.00038333331
        double var_chaste_interface__JCaSRrel__F4 = rY[29];
        // Units: dimensionless; Initial value: 0.32355462
        

        // Mathematics
        const double var_JCaSRrel__kcm = 0.80000000000000004; // per_second
        const double var_JCaSRrel__kcp = 18.0; // per_second
        const double var_JCaSRrel__F4_orig_deriv = var_chaste_interface__JCaSRrel__F2 * var_JCaSRrel__kcp - var_chaste_interface__JCaSRrel__F4 * var_JCaSRrel__kcm; // 1 / second
        const double d_dt_chaste_interface_var_JCaSRrel__F4 = 0.001 * var_JCaSRrel__F4_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_JCaSRrel__F4;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative29(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            

            
            partialF = -0.00080000000000000004;
        }
        else
        {
            const double y_save = rY[29];
            rY[29] += delta;
            const double temp = EvaluateYDerivative29(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[29])/delta;
            rY[29] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative30(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__ion_concentrations__Cai = rY[1];
        // Units: millimolar; Initial value: 3.5486498e-05
        double var_chaste_interface__CaSRup__CaSRup = rY[30];
        // Units: millimolar; Initial value: 0.22755058
        double var_chaste_interface__CaSRrel__CaSRrel = rY[31];
        // Units: millimolar; Initial value: 0.22638169
        

        // Mathematics
        const double var_Jtr__tautr = 0.034479999999999997; // second
        const double var_model_parameters__Smtot = 0.0001; // cm2
        const double var_model_parameters__Vc = 0.00012738853503184712 * var_model_parameters__Smtot; // cm3
        const double var_model_parameters__VSRrel = 0.0035000000000000001 * var_model_parameters__Vc; // cm3
        const double var_Jtr__Jtr = (-var_chaste_interface__CaSRrel__CaSRrel + var_chaste_interface__CaSRup__CaSRup) * var_model_parameters__VSRrel / var_Jtr__tautr; // millimolar_per_second
        const double var_model_parameters__VSRup = 0.0315 * var_model_parameters__Vc; // cm3
        const double var_model_parameters__Vmyo = 0.58499999999999996 * var_model_parameters__Vc; // cm3
        const double var_JCaSRup__JCaSRup = (13542.188456570031 * pow(var_chaste_interface__ion_concentrations__Cai, 1.2) - 0.2735562310030395 * var_chaste_interface__CaSRup__CaSRup) * var_model_parameters__Vmyo / (1.0 + 33855.471141425078 * pow(var_chaste_interface__ion_concentrations__Cai, 1.2) + 0.303951367781155 * var_chaste_interface__CaSRup__CaSRup); // millimolar_per_second
        const double var_CaSRup__CaSRup_orig_deriv = (-var_Jtr__Jtr + var_JCaSRup__JCaSRup) / var_model_parameters__VSRup; // millimolar / second
        const double d_dt_chaste_interface_var_CaSRup__CaSRup = 0.001 * var_CaSRup__CaSRup_orig_deriv; // millimolar / millisecond

        return d_dt_chaste_interface_var_CaSRup__CaSRup;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative30(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__ion_concentrations__Cai = rY[1];
            // Units: millimolar; Initial value: 3.5486498e-05
            double var_chaste_interface__CaSRup__CaSRup = rY[30];
            // Units: millimolar; Initial value: 0.22755058
            

            const double var_x103 = pow(var_chaste_interface__ion_concentrations__Cai, 1.2);
            const double var_x104 = 1 / (1.0 + 33855.471141425078 * var_x103 + 0.303951367781155 * var_chaste_interface__CaSRup__CaSRup);
            const double var_x107 = 13542.188456570031 * var_x103 - 0.2735562310030395 * var_chaste_interface__CaSRup__CaSRup;
            const double var_x108 = var_x107 / pow((2.9537323401073989e-5 + var_x103 + 8.9779098483507565e-6 * var_chaste_interface__CaSRup__CaSRup), 2);
            
            partialF = -0.0032224800206238726 - 4.9248350664764347e-12 * var_x108 - 0.0050803300043421621 * var_x104;
        }
        else
        {
            const double y_save = rY[30];
            rY[30] += delta;
            const double temp = EvaluateYDerivative30(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[30])/delta;
            rY[30] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative31(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__JCaSRrel__F2 = rY[27];
        // Units: dimensionless; Initial value: 0.00038333331
        double var_chaste_interface__JCaSRrel__F3 = rY[28];
        // Units: dimensionless; Initial value: 6.4516879e-11
        double var_chaste_interface__CaSRup__CaSRup = rY[30];
        // Units: millimolar; Initial value: 0.22755058
        double var_chaste_interface__CaSRrel__CaSRrel = rY[31];
        // Units: millimolar; Initial value: 0.22638169
        double var_chaste_interface__ion_concentrations__Cass = rY[37];
        // Units: millimolar; Initial value: 4.3112114e-05
        

        // Mathematics
        const double var_Jtr__tautr = 0.034479999999999997; // second
        const double var_model_parameters__Smtot = 0.0001; // cm2
        const double var_model_parameters__Vc = 0.00012738853503184712 * var_model_parameters__Smtot; // cm3
        const double var_model_parameters__VSRrel = 0.0035000000000000001 * var_model_parameters__Vc; // cm3
        const double var_JCaSRrel__JCaSRrel = 1800.0 * (-var_chaste_interface__ion_concentrations__Cass + var_chaste_interface__CaSRrel__CaSRrel) * (var_chaste_interface__JCaSRrel__F2 + var_chaste_interface__JCaSRrel__F3) * var_model_parameters__VSRrel; // millimolar_per_second
        const double var_Jtr__Jtr = (-var_chaste_interface__CaSRrel__CaSRrel + var_chaste_interface__CaSRup__CaSRup) * var_model_parameters__VSRrel / var_Jtr__tautr; // millimolar_per_second
        const double var_CaSRrel__CaSRrel_orig_deriv = (-var_JCaSRrel__JCaSRrel + var_Jtr__Jtr) / ((1.0 + 12.0 / pow((0.80000000000000004 + var_chaste_interface__CaSRrel__CaSRrel), 2)) * var_model_parameters__VSRrel); // millimolar / second
        const double d_dt_chaste_interface_var_CaSRrel__CaSRrel = 0.001 * var_CaSRrel__CaSRrel_orig_deriv; // millimolar / millisecond

        return d_dt_chaste_interface_var_CaSRrel__CaSRrel;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative31(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__JCaSRrel__F2 = rY[27];
            // Units: dimensionless; Initial value: 0.00038333331
            double var_chaste_interface__JCaSRrel__F3 = rY[28];
            // Units: dimensionless; Initial value: 6.4516879e-11
            double var_chaste_interface__CaSRup__CaSRup = rY[30];
            // Units: millimolar; Initial value: 0.22755058
            double var_chaste_interface__CaSRrel__CaSRrel = rY[31];
            // Units: millimolar; Initial value: 0.22638169
            double var_chaste_interface__ion_concentrations__Cass = rY[37];
            // Units: millimolar; Initial value: 4.3112114e-05
            

            const double var_x272 = 0.80000000000000004 + var_chaste_interface__CaSRrel__CaSRrel;
            const double var_x273 = pow(var_x272, (-2));
            const double var_x274 = 1 / (1.0 + 12.0 * var_x273);
            const double var_x275 = 22428571.428571425 * var_x274;
            const double var_x277 = 8.0254777070063705e-8 * var_chaste_interface__JCaSRrel__F2;
            const double var_x278 = 8.0254777070063705e-8 * var_chaste_interface__JCaSRrel__F3;
            const double var_x279 = (-var_chaste_interface__ion_concentrations__Cass + var_chaste_interface__CaSRrel__CaSRrel) * (var_chaste_interface__JCaSRrel__F2 + var_chaste_interface__JCaSRrel__F3);
            
            partialF = var_x275 * (-1.2930970783395158e-9 - var_x277 - var_x278) + 3738095.2380952374 * (1.2930970783395158e-9 * var_chaste_interface__CaSRup__CaSRup - 1.2930970783395158e-9 * var_chaste_interface__CaSRrel__CaSRrel - 8.0254777070063705e-8 * var_x279) / (pow(var_x272, 3) * pow((0.083333333333333329 + var_x273), 2));
        }
        else
        {
            const double y_save = rY[31];
            rY[31] += delta;
            const double temp = EvaluateYDerivative31(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[31])/delta;
            rY[31] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative32(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -79.709547
        double var_chaste_interface__ion_concentrations__Cai = rY[1];
        // Units: millimolar; Initial value: 3.5486498e-05
        double var_chaste_interface__i_Nas_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 2.1832558e-06
        double var_chaste_interface__i_Nas_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.58232781
        double var_chaste_interface__i_Nat_m_gate__m = rY[4];
        // Units: dimensionless; Initial value: 2.1832694e-06
        double var_chaste_interface__i_Nat_h_gate__h = rY[5];
        // Units: dimensionless; Initial value: 0.58232717
        double var_chaste_interface__ion_concentrations__Nai = rY[32];
        // Units: millimolar; Initial value: 6.9435814
        double var_chaste_interface__ion_concentrations__Ki = rY[33];
        // Units: millimolar; Initial value: 137.53311
        double var_chaste_interface__ion_concentrations__Nat = rY[34];
        // Units: millimolar; Initial value: 140.01386
        double var_chaste_interface__ion_concentrations__Cat = rY[35];
        // Units: millimolar; Initial value: 1.2271399
        double var_chaste_interface__ion_concentrations__Kt = rY[36];
        // Units: millimolar; Initial value: 5.3627676
        double var_chaste_interface__Vmt__Vmt = rY[40];
        // Units: millivolt; Initial value: -79.709536
        

        // Mathematics
        const double var_membrane_permeabilities__fNaCat = 0.81000000000000005; // dimensionless
        const double var_membrane_permeabilities__fNaKt = 0.58999999999999997; // dimensionless
        const double var_membrane_permeabilities__fNabt = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fNat = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__gNab = 0.00080150000000000002; // milliS_per_cm2
        const double var_membrane_permeabilities__i_NaK_max = 1.0; // microA_per_cm2
        const double var_model_parameters__Cae = 1.2; // millimolar
        const double var_model_parameters__F = 96500.0; // coulomb_per_mole
        const double var_model_parameters__Ke = 5.4000000000000004; // millimolar
        const double var_model_parameters__Nae = 140.0; // millimolar
        const double var_model_parameters__R = 8310.0; // joule_per_kilomole_kelvin
        const double var_model_parameters__Smtot = 0.0001; // cm2
        const double var_model_parameters__T = 295.0; // kelvin
        const double var_i_Nas__E_Nas = var_model_parameters__R * var_model_parameters__T * log(var_model_parameters__Nae / var_chaste_interface__ion_concentrations__Nai) / var_model_parameters__F; // millivolt
        const double var_i_Nat__E_Nat = var_model_parameters__R * var_model_parameters__T * log(var_chaste_interface__ion_concentrations__Nat / var_chaste_interface__ion_concentrations__Nai) / var_model_parameters__F; // millivolt
        const double var_model_parameters__Vc = 0.00012738853503184712 * var_model_parameters__Smtot; // cm3
        const double var_model_parameters__Sms = -4400.0 * var_model_parameters__Vc + var_model_parameters__Smtot; // cm2
        const double var_model_parameters__Smt = -var_model_parameters__Sms + var_model_parameters__Smtot; // cm2
        const double var_membrane_permeabilities__gNabs = (1.0 - var_membrane_permeabilities__fNabt) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__gNab; // milliS
        const double var_i_Nabs__i_Nabs = (-var_i_Nas__E_Nas + var_chaste_interface__Vms__Vms) * var_membrane_permeabilities__gNabs; // microA
        const double var_membrane_permeabilities__gNabt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fNabt * var_membrane_permeabilities__gNab; // milliS
        const double var_i_Nabt__i_Nabt = (-var_i_Nat__E_Nat + var_chaste_interface__Vmt__Vmt) * var_membrane_permeabilities__gNabt; // microA
        const double var_membrane_permeabilities__gNas = (1.0 - var_membrane_permeabilities__fNat) * (var_model_parameters__Sms + var_model_parameters__Smt) * mParameters[0]; // milliS
        const double var_i_Nas__i_Nas = pow(var_chaste_interface__i_Nas_m_gate__m, 3) * (-var_model_parameters__R * var_model_parameters__T * log((var_model_parameters__Nae + 0.12 * var_model_parameters__Ke) / (var_chaste_interface__ion_concentrations__Nai + 0.12 * var_chaste_interface__ion_concentrations__Ki)) / var_model_parameters__F + var_chaste_interface__Vms__Vms) * var_chaste_interface__i_Nas_h_gate__h * var_membrane_permeabilities__gNas; // microA
        const double var_membrane_permeabilities__gNat = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fNat * mParameters[0]; // milliS
        const double var_i_Nat__i_Nat = pow(var_chaste_interface__i_Nat_m_gate__m, 3) * (-var_model_parameters__R * var_model_parameters__T * log((var_chaste_interface__ion_concentrations__Nat + 0.12 * var_chaste_interface__ion_concentrations__Kt) / (var_chaste_interface__ion_concentrations__Nai + 0.12 * var_chaste_interface__ion_concentrations__Ki)) / var_model_parameters__F + var_chaste_interface__Vmt__Vmt) * var_chaste_interface__i_Nat_h_gate__h * var_membrane_permeabilities__gNat; // microA
        const double var_membrane_permeabilities__i_NaCa_maxs = (1.0 - var_membrane_permeabilities__fNaCat) * (var_model_parameters__Sms + var_model_parameters__Smt) * mParameters[2]; // microA
        const double var_i_NaCas__i_NaCas = (pow(var_chaste_interface__ion_concentrations__Nai, 3) * var_model_parameters__Cae * exp(0.018700000000000001 * var_chaste_interface__Vms__Vms) - pow(var_model_parameters__Nae, 3) * var_chaste_interface__ion_concentrations__Cai * exp(-0.018700000000000001 * var_chaste_interface__Vms__Vms)) * var_membrane_permeabilities__i_NaCa_maxs / (1.0 + 0.0001 * pow(var_chaste_interface__ion_concentrations__Nai, 3) * var_model_parameters__Cae + 0.0001 * pow(var_model_parameters__Nae, 3) * var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_membrane_permeabilities__i_NaCa_maxt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fNaCat * mParameters[2]; // microA
        const double var_i_NaCat__i_NaCat = (pow(var_chaste_interface__ion_concentrations__Nai, 3) * var_chaste_interface__ion_concentrations__Cat * exp(0.018700000000000001 * var_chaste_interface__Vmt__Vmt) - pow(var_chaste_interface__ion_concentrations__Nat, 3) * var_chaste_interface__ion_concentrations__Cai * exp(-0.018700000000000001 * var_chaste_interface__Vmt__Vmt)) * var_membrane_permeabilities__i_NaCa_maxt / (1.0 + 0.0001 * pow(var_chaste_interface__ion_concentrations__Nai, 3) * var_chaste_interface__ion_concentrations__Cat + 0.0001 * pow(var_chaste_interface__ion_concentrations__Nat, 3) * var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_membrane_permeabilities__i_NaK_maxs = (1.0 - var_membrane_permeabilities__fNaKt) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__i_NaK_max; // microA
        const double var_i_NaKs__i_NaKs = var_membrane_permeabilities__i_NaK_maxs * var_model_parameters__Ke / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__ion_concentrations__Nai), 1.5)) * (1.5 + var_model_parameters__Ke) * (1.0 + 0.1245 * exp(-0.10000000000000001 * var_chaste_interface__Vms__Vms * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)) + 0.0052142857142857138 * (-1.0 + exp(0.01485884101040119 * var_model_parameters__Nae)) * exp(-var_chaste_interface__Vms__Vms * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)))); // microA
        const double var_membrane_permeabilities__i_NaK_maxt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fNaKt * var_membrane_permeabilities__i_NaK_max; // microA
        const double var_i_NaKt__i_NaKt = var_chaste_interface__ion_concentrations__Kt * var_membrane_permeabilities__i_NaK_maxt / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__ion_concentrations__Nai), 1.5)) * (1.5 + var_chaste_interface__ion_concentrations__Kt) * (1.0 + 0.1245 * exp(-0.10000000000000001 * var_chaste_interface__Vmt__Vmt * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)) + 0.0052142857142857138 * (-1.0 + exp(0.01485884101040119 * var_chaste_interface__ion_concentrations__Nat)) * exp(-var_chaste_interface__Vmt__Vmt * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)))); // microA
        const double var_model_parameters__Vmyo = 0.58499999999999996 * var_model_parameters__Vc; // cm3
        const double var_ion_concentrations__Nai_orig_deriv = (-var_i_Nabs__i_Nabs - var_i_Nabt__i_Nabt - var_i_Nas__i_Nas - var_i_Nat__i_Nat - 3.0 * var_i_NaCas__i_NaCas - 3.0 * var_i_NaCat__i_NaCat - 3.0 * var_i_NaKs__i_NaKs - 3.0 * var_i_NaKt__i_NaKt) / (var_model_parameters__F * var_model_parameters__Vmyo); // millimolar / second
        const double d_dt_chaste_interface_var_ion_concentrations__Nai = 0.001 * var_ion_concentrations__Nai_orig_deriv; // millimolar / millisecond

        return d_dt_chaste_interface_var_ion_concentrations__Nai;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative32(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -79.709547
            double var_chaste_interface__ion_concentrations__Cai = rY[1];
            // Units: millimolar; Initial value: 3.5486498e-05
            double var_chaste_interface__i_Nas_m_gate__m = rY[2];
            // Units: dimensionless; Initial value: 2.1832558e-06
            double var_chaste_interface__i_Nas_h_gate__h = rY[3];
            // Units: dimensionless; Initial value: 0.58232781
            double var_chaste_interface__i_Nat_m_gate__m = rY[4];
            // Units: dimensionless; Initial value: 2.1832694e-06
            double var_chaste_interface__i_Nat_h_gate__h = rY[5];
            // Units: dimensionless; Initial value: 0.58232717
            double var_chaste_interface__ion_concentrations__Nai = rY[32];
            // Units: millimolar; Initial value: 6.9435814
            double var_chaste_interface__ion_concentrations__Ki = rY[33];
            // Units: millimolar; Initial value: 137.53311
            double var_chaste_interface__ion_concentrations__Nat = rY[34];
            // Units: millimolar; Initial value: 140.01386
            double var_chaste_interface__ion_concentrations__Cat = rY[35];
            // Units: millimolar; Initial value: 1.2271399
            double var_chaste_interface__ion_concentrations__Kt = rY[36];
            // Units: millimolar; Initial value: 5.3627676
            double var_chaste_interface__Vmt__Vmt = rY[40];
            // Units: millivolt; Initial value: -79.709536
            

            const double var_x31 = 0.018700000000000001 * var_chaste_interface__Vms__Vms;
            const double var_x32 = exp(-var_x31);
            const double var_x33 = var_x32 * var_chaste_interface__ion_concentrations__Cai;
            const double var_x34 = pow(var_chaste_interface__ion_concentrations__Nai, 3);
            const double var_x35 = exp(var_x31);
            const double var_x36 = var_x34 * var_x35;
            const double var_x37 = mParameters[2] / (1.0 + 0.00012 * var_x34 + 274.40000000000003 * var_chaste_interface__ion_concentrations__Cai);
            const double var_x39 = pow(var_chaste_interface__i_Nas_m_gate__m, 3) * mParameters[0];
            const double var_x41 = 1 / var_chaste_interface__ion_concentrations__Nai;
            const double var_x42 = pow(var_x41, 1.5);
            const double var_x44 = exp(-0.0039364457769891295 * var_chaste_interface__Vms__Vms);
            const double var_x45 = exp(2.0802377414561666);
            const double var_x46 = exp(-0.039364457769891288 * var_chaste_interface__Vms__Vms);
            const double var_x47 = 1.0 + 0.1245 * var_x44 + 0.0052142857142857138 * var_x46 * (-1.0 + var_x45);
            const double var_x56 = 1.2 * var_x36 - 2744000.0 * var_x33;
            const double var_x57 = var_x56 * mParameters[2] / pow((0.0036443148688046646 + 4.3731778425655972e-7 * var_x34 + var_chaste_interface__ion_concentrations__Cai), 2);
            const double var_x58 = var_chaste_interface__ion_concentrations__Nai + 0.12 * var_chaste_interface__ion_concentrations__Ki;
            const double var_x59 = 1 / var_x58;
            const double var_x84 = pow(var_chaste_interface__ion_concentrations__Nai, 2);
            const double var_x85 = var_x57 * var_x84;
            const double var_x86 = var_x35 * var_x37 * var_x84;
            const double var_x87 = var_x41 * var_x42 / pow((0.031622776601683791 + var_x42), 2);
            const double var_x88 = var_x87 / var_x47;
            const double var_x89 = var_x39 * (0.00085319378874921788 * var_chaste_interface__ion_concentrations__Ki + 0.0071099482395768155 * var_chaste_interface__ion_concentrations__Nai) * var_chaste_interface__i_Nas_h_gate__h / pow(var_x58, 2);
            const double var_x110 = var_x34 * var_chaste_interface__ion_concentrations__Cat;
            const double var_x111 = pow(var_chaste_interface__ion_concentrations__Nat, 3);
            const double var_x112 = var_x111 * var_chaste_interface__ion_concentrations__Cai;
            const double var_x113 = 1.0 + 0.0001 * var_x110 + 0.0001 * var_x112;
            const double var_x114 = mParameters[2] / var_x113;
            const double var_x116 = 0.018700000000000001 * var_chaste_interface__Vmt__Vmt;
            const double var_x117 = exp(-var_x116);
            const double var_x119 = exp(var_x116);
            const double var_x120 = var_x110 * var_x119;
            const double var_x121 = var_x112 * var_x117;
            const double var_x122 = var_x120 - var_x121;
            const double var_x123 = var_x122 * mParameters[2] / pow(var_x113, 2);
            const double var_x127 = var_x84 * var_chaste_interface__ion_concentrations__Cat;
            const double var_x128 = var_x119 * var_x127;
            const double var_x286 = pow(var_chaste_interface__i_Nat_m_gate__m, 3) * mParameters[0];
            const double var_x288 = var_x286 * var_chaste_interface__i_Nat_h_gate__h;
            const double var_x289 = var_x288 * var_x59;
            const double var_x290 = 1.0137106416899164e-7 * var_x123;
            const double var_x291 = 0.0010137106416899164 * var_x114;
            const double var_x292 = exp(-0.0039364457769891295 * var_chaste_interface__Vmt__Vmt);
            const double var_x293 = exp(0.01485884101040119 * var_chaste_interface__ion_concentrations__Nat);
            const double var_x294 = exp(-0.039364457769891288 * var_chaste_interface__Vmt__Vmt);
            const double var_x295 = 1.0 + 0.1245 * var_x292 + 0.0052142857142857138 * var_x294 * (-1.0 + var_x293);
            const double var_x296 = 1 / var_x295;
            const double var_x297 = 1 / (1.5 + var_chaste_interface__ion_concentrations__Kt);
            const double var_x298 = var_x297 * var_chaste_interface__ion_concentrations__Kt;
            const double var_x299 = var_x296 * var_x298 * var_x87;
            
            partialF = 3.7896196155569321e-13 * var_x85 - 2.8312989665528797e-6 * var_x41 - 1.1674841756133797e-5 * var_x299 - 6.34932440385169e-6 * var_x88 - 0.21860920312040039 * var_x89 - 0.0019782001513033221 * var_x289 - 0.00028534077321642082 * var_x86 + var_x127 * var_x290 - var_x128 * var_x291;
        }
        else
        {
            const double y_save = rY[32];
            rY[32] += delta;
            const double temp = EvaluateYDerivative32(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[32])/delta;
            rY[32] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative33(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -79.709547
        double var_chaste_interface__i_Ktos_rs_gate__rs = rY[14];
        // Units: dimensionless; Initial value: 0.0023485072
        double var_chaste_interface__i_Ktos_ss_gate__ss = rY[15];
        // Units: dimensionless; Initial value: 0.98315843
        double var_chaste_interface__i_Ktos_sss_gate__sss = rY[16];
        // Units: dimensionless; Initial value: 0.6748337
        double var_chaste_interface__i_Ktot_rt_gate__rt = rY[17];
        // Units: dimensionless; Initial value: 0.0023485094
        double var_chaste_interface__i_Ktot_st_gate__st = rY[18];
        // Units: dimensionless; Initial value: 0.98315865
        double var_chaste_interface__i_Ktot_sst_gate__sst = rY[19];
        // Units: dimensionless; Initial value: 0.67478532
        double var_chaste_interface__i_Ksts_rsts_gate__rsts = rY[20];
        // Units: dimensionless; Initial value: 0.0031079213
        double var_chaste_interface__i_Ksts_ssts_gate__ssts = rY[21];
        // Units: dimensionless; Initial value: 0.30773393
        double var_chaste_interface__i_Kstt_rstt_gate__rstt = rY[22];
        // Units: dimensionless; Initial value: 0.0031079241
        double var_chaste_interface__i_Kstt_sstt_gate__sstt = rY[23];
        // Units: dimensionless; Initial value: 0.30773368
        double var_chaste_interface__i_Kfs_qs_gate__qs = rY[24];
        // Units: dimensionless; Initial value: 0.0034357356
        double var_chaste_interface__i_Kft_qt_gate__qt = rY[25];
        // Units: dimensionless; Initial value: 0.0034357175
        double var_chaste_interface__ion_concentrations__Nai = rY[32];
        // Units: millimolar; Initial value: 6.9435814
        double var_chaste_interface__ion_concentrations__Ki = rY[33];
        // Units: millimolar; Initial value: 137.53311
        double var_chaste_interface__ion_concentrations__Nat = rY[34];
        // Units: millimolar; Initial value: 140.01386
        double var_chaste_interface__ion_concentrations__Kt = rY[36];
        // Units: millimolar; Initial value: 5.3627676
        double var_chaste_interface__Vmt__Vmt = rY[40];
        // Units: millivolt; Initial value: -79.709536
        

        // Mathematics
        const double var_i_Stim__i_Stim_converted = -GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_membrane_permeabilities__fK1t = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fKbt = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fKft = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fKstt = 0.76000000000000001; // dimensionless
        const double var_membrane_permeabilities__fKtot = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fNaKt = 0.58999999999999997; // dimensionless
        const double var_membrane_permeabilities__gKb = 0.0013799999999999999; // milliS_per_cm2
        const double var_membrane_permeabilities__gKf = 0.014500000000000001; // milliS_per_cm2
        const double var_membrane_permeabilities__gKst = 0.070000000000000007; // milliS_per_cm2
        const double var_membrane_permeabilities__i_NaK_max = 1.0; // microA_per_cm2
        const double var_model_parameters__F = 96500.0; // coulomb_per_mole
        const double var_model_parameters__Ke = 5.4000000000000004; // millimolar
        const double var_model_parameters__Nae = 140.0; // millimolar
        const double var_model_parameters__R = 8310.0; // joule_per_kilomole_kelvin
        const double var_model_parameters__Smtot = 0.0001; // cm2
        const double var_model_parameters__T = 295.0; // kelvin
        const double var_i_Ktos__E_Ks = var_model_parameters__R * var_model_parameters__T * log(var_model_parameters__Ke / var_chaste_interface__ion_concentrations__Ki) / var_model_parameters__F; // millivolt
        const double var_i_Ktot__E_Kt = var_model_parameters__R * var_model_parameters__T * log(var_chaste_interface__ion_concentrations__Kt / var_chaste_interface__ion_concentrations__Ki) / var_model_parameters__F; // millivolt
        const double var_i_Nas__E_Nas = var_model_parameters__R * var_model_parameters__T * log(var_model_parameters__Nae / var_chaste_interface__ion_concentrations__Nai) / var_model_parameters__F; // millivolt
        const double var_i_Nat__E_Nat = var_model_parameters__R * var_model_parameters__T * log(var_chaste_interface__ion_concentrations__Nat / var_chaste_interface__ion_concentrations__Nai) / var_model_parameters__F; // millivolt
        const double var_model_parameters__Vc = 0.00012738853503184712 * var_model_parameters__Smtot; // cm3
        const double var_model_parameters__Sms = -4400.0 * var_model_parameters__Vc + var_model_parameters__Smtot; // cm2
        const double var_model_parameters__Cms = var_model_parameters__Sms; // microF
        const double var_i_Stim__i_Stim = var_i_Stim__i_Stim_converted * var_model_parameters__Cms / HeartConfig::Instance()->GetCapacitance(); // microA
        const double var_model_parameters__Smt = -var_model_parameters__Sms + var_model_parameters__Smtot; // cm2
        const double var_membrane_permeabilities__gK1s = (1.0 - var_membrane_permeabilities__fK1t) * (var_model_parameters__Sms + var_model_parameters__Smt) * mParameters[1]; // milliS
        const double var_i_K1s__i_K1s = (-1.73 - var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * var_membrane_permeabilities__gK1s / (1.0 + (1.0 + exp(8.0548387096774192 - 8.064516129032258 * var_model_parameters__Ke)) * exp(1.613 * (-1.73 - var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))); // microA
        const double var_membrane_permeabilities__gK1t = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fK1t * mParameters[1]; // milliS
        const double var_i_K1t__i_K1t = (-1.73 - var_i_Ktot__E_Kt + var_chaste_interface__Vmt__Vmt) * var_membrane_permeabilities__gK1t / (1.0 + (1.0 + exp(8.0548387096774192 - 8.064516129032258 * var_chaste_interface__ion_concentrations__Kt)) * exp(1.613 * (-1.73 - var_i_Ktot__E_Kt + var_chaste_interface__Vmt__Vmt) * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))); // microA
        const double var_membrane_permeabilities__gKbs = (1.0 - var_membrane_permeabilities__fKbt) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__gKb; // milliS
        const double var_i_Kbs__i_Kbs = (-var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * var_membrane_permeabilities__gKbs; // microA
        const double var_membrane_permeabilities__gKbt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fKbt * var_membrane_permeabilities__gKb; // milliS
        const double var_i_Kbt__i_Kbt = (-var_i_Ktot__E_Kt + var_chaste_interface__Vmt__Vmt) * var_membrane_permeabilities__gKbt; // microA
        const double var_membrane_permeabilities__gKfs = (1.0 - var_membrane_permeabilities__fKft) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__gKf; // milliS
        const double var_i_Kfs__i_Kfs = (1.0 * var_chaste_interface__Vms__Vms - 0.20000000000000001 * var_i_Nas__E_Nas - 0.80000000000000004 * var_i_Ktos__E_Ks) * var_chaste_interface__i_Kfs_qs_gate__qs * var_membrane_permeabilities__gKfs; // microA
        const double var_membrane_permeabilities__gKft = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fKft * var_membrane_permeabilities__gKf; // milliS
        const double var_i_Kft__i_Kft = (1.0 * var_chaste_interface__Vmt__Vmt - 0.20000000000000001 * var_i_Nat__E_Nat - 0.80000000000000004 * var_i_Ktot__E_Kt) * var_chaste_interface__i_Kft_qt_gate__qt * var_membrane_permeabilities__gKft; // microA
        const double var_membrane_permeabilities__gKsts = (1.0 - var_membrane_permeabilities__fKstt) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__gKst; // milliS
        const double var_i_Ksts__i_Ksts = (-var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * var_chaste_interface__i_Ksts_rsts_gate__rsts * var_chaste_interface__i_Ksts_ssts_gate__ssts * var_membrane_permeabilities__gKsts; // microA
        const double var_membrane_permeabilities__gKstt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fKstt * var_membrane_permeabilities__gKst; // milliS
        const double var_i_Kstt__i_Kstt = (-var_i_Ktot__E_Kt + var_chaste_interface__Vmt__Vmt) * var_chaste_interface__i_Kstt_rstt_gate__rstt * var_chaste_interface__i_Kstt_sstt_gate__sstt * var_membrane_permeabilities__gKstt; // microA
        const double var_membrane_permeabilities__gKtos = (1.0 - var_membrane_permeabilities__fKtot) * (var_model_parameters__Sms + var_model_parameters__Smt) * mParameters[3]; // milliS
        const double var_i_Ktos__i_Ktos = (-var_i_Ktos__E_Ks + var_chaste_interface__Vms__Vms) * (0.88600000000000001 * var_chaste_interface__i_Ktos_ss_gate__ss + 0.114 * var_chaste_interface__i_Ktos_sss_gate__sss) * var_chaste_interface__i_Ktos_rs_gate__rs * var_membrane_permeabilities__gKtos; // microA
        const double var_membrane_permeabilities__gKtot = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fKtot * mParameters[3]; // milliS
        const double var_i_Ktot__i_Ktot = (-var_i_Ktot__E_Kt + var_chaste_interface__Vmt__Vmt) * (0.88600000000000001 * var_chaste_interface__i_Ktot_st_gate__st + 0.114 * var_chaste_interface__i_Ktot_sst_gate__sst) * var_chaste_interface__i_Ktot_rt_gate__rt * var_membrane_permeabilities__gKtot; // microA
        const double var_membrane_permeabilities__i_NaK_maxs = (1.0 - var_membrane_permeabilities__fNaKt) * (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__i_NaK_max; // microA
        const double var_i_NaKs__i_NaKs = var_membrane_permeabilities__i_NaK_maxs * var_model_parameters__Ke / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__ion_concentrations__Nai), 1.5)) * (1.5 + var_model_parameters__Ke) * (1.0 + 0.1245 * exp(-0.10000000000000001 * var_chaste_interface__Vms__Vms * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)) + 0.0052142857142857138 * (-1.0 + exp(0.01485884101040119 * var_model_parameters__Nae)) * exp(-var_chaste_interface__Vms__Vms * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)))); // microA
        const double var_membrane_permeabilities__i_NaK_maxt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fNaKt * var_membrane_permeabilities__i_NaK_max; // microA
        const double var_i_NaKt__i_NaKt = var_chaste_interface__ion_concentrations__Kt * var_membrane_permeabilities__i_NaK_maxt / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__ion_concentrations__Nai), 1.5)) * (1.5 + var_chaste_interface__ion_concentrations__Kt) * (1.0 + 0.1245 * exp(-0.10000000000000001 * var_chaste_interface__Vmt__Vmt * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)) + 0.0052142857142857138 * (-1.0 + exp(0.01485884101040119 * var_chaste_interface__ion_concentrations__Nat)) * exp(-var_chaste_interface__Vmt__Vmt * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)))); // microA
        const double var_model_parameters__Vmyo = 0.58499999999999996 * var_model_parameters__Vc; // cm3
        const double var_ion_concentrations__Ki_orig_deriv = (-var_i_K1s__i_K1s - var_i_K1t__i_K1t - var_i_Kbs__i_Kbs - var_i_Kbt__i_Kbt - var_i_Kfs__i_Kfs - var_i_Kft__i_Kft - var_i_Ksts__i_Ksts - var_i_Kstt__i_Kstt - var_i_Ktos__i_Ktos - var_i_Ktot__i_Ktot + 2.0 * var_i_NaKs__i_NaKs + 2.0 * var_i_NaKt__i_NaKt + var_i_Stim__i_Stim) / (var_model_parameters__F * var_model_parameters__Vmyo); // millimolar / second
        const double d_dt_chaste_interface_var_ion_concentrations__Ki = 0.001 * var_ion_concentrations__Ki_orig_deriv; // millimolar / millisecond

        return d_dt_chaste_interface_var_ion_concentrations__Ki;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative33(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -79.709547
            double var_chaste_interface__i_Ktos_rs_gate__rs = rY[14];
            // Units: dimensionless; Initial value: 0.0023485072
            double var_chaste_interface__i_Ktos_ss_gate__ss = rY[15];
            // Units: dimensionless; Initial value: 0.98315843
            double var_chaste_interface__i_Ktos_sss_gate__sss = rY[16];
            // Units: dimensionless; Initial value: 0.6748337
            double var_chaste_interface__i_Ktot_rt_gate__rt = rY[17];
            // Units: dimensionless; Initial value: 0.0023485094
            double var_chaste_interface__i_Ktot_st_gate__st = rY[18];
            // Units: dimensionless; Initial value: 0.98315865
            double var_chaste_interface__i_Ktot_sst_gate__sst = rY[19];
            // Units: dimensionless; Initial value: 0.67478532
            double var_chaste_interface__i_Ksts_rsts_gate__rsts = rY[20];
            // Units: dimensionless; Initial value: 0.0031079213
            double var_chaste_interface__i_Ksts_ssts_gate__ssts = rY[21];
            // Units: dimensionless; Initial value: 0.30773393
            double var_chaste_interface__i_Kstt_rstt_gate__rstt = rY[22];
            // Units: dimensionless; Initial value: 0.0031079241
            double var_chaste_interface__i_Kstt_sstt_gate__sstt = rY[23];
            // Units: dimensionless; Initial value: 0.30773368
            double var_chaste_interface__i_Kfs_qs_gate__qs = rY[24];
            // Units: dimensionless; Initial value: 0.0034357356
            double var_chaste_interface__i_Kft_qt_gate__qt = rY[25];
            // Units: dimensionless; Initial value: 0.0034357175
            double var_chaste_interface__ion_concentrations__Ki = rY[33];
            // Units: millimolar; Initial value: 137.53311
            double var_chaste_interface__ion_concentrations__Kt = rY[36];
            // Units: millimolar; Initial value: 5.3627676
            double var_chaste_interface__Vmt__Vmt = rY[40];
            // Units: millivolt; Initial value: -79.709536
            

            const double var_x23 = var_chaste_interface__i_Ksts_rsts_gate__rsts * var_chaste_interface__i_Ksts_ssts_gate__ssts;
            const double var_x24 = 1 / var_chaste_interface__ion_concentrations__Ki;
            const double var_x25 = log(5.4000000000000004 * var_x24);
            const double var_x26 = (1.0 + exp(-35.49354838709678)) * exp(-0.10984612576230394 + 0.063494870382834648 * var_chaste_interface__Vms__Vms - 1.613 * var_x25);
            const double var_x27 = 1.0 + var_x26;
            const double var_x28 = mParameters[1] / var_x27;
            const double var_x49 = -25.403626943005182 * var_x25 + var_chaste_interface__Vms__Vms;
            const double var_x50 = var_x26 * (-1.73 + var_x49) * mParameters[1] / pow(var_x27, 2);
            const double var_x80 = var_chaste_interface__i_Ktos_rs_gate__rs * mParameters[3];
            const double var_x90 = var_x24 * var_chaste_interface__i_Kfs_qs_gate__qs;
            const double var_x91 = var_x24 * var_x28;
            const double var_x92 = var_x23 * var_x24;
            const double var_x93 = 25.403626943005182 * var_x24;
            const double var_x94 = var_x24 * var_x50;
            const double var_x309 = -5.4209184712811651e-5 * var_chaste_interface__i_Ktos_ss_gate__ss - 6.9749966786236214e-6 * var_chaste_interface__i_Ktos_sss_gate__sss;
            const double var_x310 = var_x309 * var_x80;
            const double var_x311 = log(var_x24 * var_chaste_interface__ion_concentrations__Kt);
            const double var_x312 = -25.403626943005182 * var_x311 + var_chaste_interface__Vmt__Vmt;
            const double var_x313 = (-6.8993507816305752e-5 * var_chaste_interface__i_Ktot_st_gate__st - 8.8772685000664288e-6 * var_chaste_interface__i_Ktot_sst_gate__sst) * mParameters[3];
            const double var_x319 = 2.2947121755118539e-5 * var_chaste_interface__i_Kft_qt_gate__qt;
            const double var_x320 = var_chaste_interface__i_Kstt_rstt_gate__rstt * var_chaste_interface__i_Kstt_sstt_gate__sstt;
            const double var_x321 = 0.0001879290143738156 * var_x320;
            const double var_x322 = exp(8.0548387096774192 - 8.064516129032258 * var_chaste_interface__ion_concentrations__Kt);
            const double var_x323 = exp(-0.10984612576230394 + 0.063494870382834648 * var_chaste_interface__Vmt__Vmt - 1.613 * var_x311);
            const double var_x324 = var_x323 * (1.0 + var_x322);
            const double var_x325 = 1.0 + var_x324;
            const double var_x326 = mParameters[1] / var_x325;
            const double var_x327 = 0.0019782001513033221 * var_x326;
            const double var_x328 = var_x313 * var_chaste_interface__i_Ktot_rt_gate__rt;
            const double var_x329 = (-1.73 + var_x312) * mParameters[1] / pow(var_x325, 2);
            const double var_x330 = var_x324 * var_x329;
            const double var_x331 = var_x24 * var_x330;
            
            partialF = 9.8690084584385102e-5 * var_x94 + 0.00012560556219830832 * var_x331 - 1.8029881379021707e-5 * var_x90 - 0.0015543001188811814 * var_x91 - 5.9346004539099664e-5 * var_x92 - 4.8748503728546144e-6 * var_x24 + var_x310 * var_x93 + var_x328 * var_x93 - var_x24 * var_x319 - var_x24 * var_x321 - var_x24 * var_x327;
        }
        else
        {
            const double y_save = rY[33];
            rY[33] += delta;
            const double temp = EvaluateYDerivative33(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[33])/delta;
            rY[33] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative34(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__ion_concentrations__Cai = rY[1];
        // Units: millimolar; Initial value: 3.5486498e-05
        double var_chaste_interface__i_Nat_m_gate__m = rY[4];
        // Units: dimensionless; Initial value: 2.1832694e-06
        double var_chaste_interface__i_Nat_h_gate__h = rY[5];
        // Units: dimensionless; Initial value: 0.58232717
        double var_chaste_interface__ion_concentrations__Nai = rY[32];
        // Units: millimolar; Initial value: 6.9435814
        double var_chaste_interface__ion_concentrations__Ki = rY[33];
        // Units: millimolar; Initial value: 137.53311
        double var_chaste_interface__ion_concentrations__Nat = rY[34];
        // Units: millimolar; Initial value: 140.01386
        double var_chaste_interface__ion_concentrations__Cat = rY[35];
        // Units: millimolar; Initial value: 1.2271399
        double var_chaste_interface__ion_concentrations__Kt = rY[36];
        // Units: millimolar; Initial value: 5.3627676
        double var_chaste_interface__Vmt__Vmt = rY[40];
        // Units: millivolt; Initial value: -79.709536
        

        // Mathematics
        const double var_membrane_permeabilities__fNaCat = 0.81000000000000005; // dimensionless
        const double var_membrane_permeabilities__fNaKt = 0.58999999999999997; // dimensionless
        const double var_membrane_permeabilities__fNabt = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fNat = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__gNab = 0.00080150000000000002; // milliS_per_cm2
        const double var_membrane_permeabilities__i_NaK_max = 1.0; // microA_per_cm2
        const double var_model_parameters__F = 96500.0; // coulomb_per_mole
        const double var_model_parameters__Nae = 140.0; // millimolar
        const double var_model_parameters__R = 8310.0; // joule_per_kilomole_kelvin
        const double var_model_parameters__Smtot = 0.0001; // cm2
        const double var_model_parameters__T = 295.0; // kelvin
        const double var_i_Nat__E_Nat = var_model_parameters__R * var_model_parameters__T * log(var_chaste_interface__ion_concentrations__Nat / var_chaste_interface__ion_concentrations__Nai) / var_model_parameters__F; // millivolt
        const double var_model_parameters__Vc = 0.00012738853503184712 * var_model_parameters__Smtot; // cm3
        const double var_model_parameters__Sms = -4400.0 * var_model_parameters__Vc + var_model_parameters__Smtot; // cm2
        const double var_model_parameters__Smt = -var_model_parameters__Sms + var_model_parameters__Smtot; // cm2
        const double var_membrane_permeabilities__gNabt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fNabt * var_membrane_permeabilities__gNab; // milliS
        const double var_i_Nabt__i_Nabt = (-var_i_Nat__E_Nat + var_chaste_interface__Vmt__Vmt) * var_membrane_permeabilities__gNabt; // microA
        const double var_membrane_permeabilities__gNat = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fNat * mParameters[0]; // milliS
        const double var_i_Nat__i_Nat = pow(var_chaste_interface__i_Nat_m_gate__m, 3) * (-var_model_parameters__R * var_model_parameters__T * log((var_chaste_interface__ion_concentrations__Nat + 0.12 * var_chaste_interface__ion_concentrations__Kt) / (var_chaste_interface__ion_concentrations__Nai + 0.12 * var_chaste_interface__ion_concentrations__Ki)) / var_model_parameters__F + var_chaste_interface__Vmt__Vmt) * var_chaste_interface__i_Nat_h_gate__h * var_membrane_permeabilities__gNat; // microA
        const double var_membrane_permeabilities__i_NaCa_maxt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fNaCat * mParameters[2]; // microA
        const double var_i_NaCat__i_NaCat = (pow(var_chaste_interface__ion_concentrations__Nai, 3) * var_chaste_interface__ion_concentrations__Cat * exp(0.018700000000000001 * var_chaste_interface__Vmt__Vmt) - pow(var_chaste_interface__ion_concentrations__Nat, 3) * var_chaste_interface__ion_concentrations__Cai * exp(-0.018700000000000001 * var_chaste_interface__Vmt__Vmt)) * var_membrane_permeabilities__i_NaCa_maxt / (1.0 + 0.0001 * pow(var_chaste_interface__ion_concentrations__Nai, 3) * var_chaste_interface__ion_concentrations__Cat + 0.0001 * pow(var_chaste_interface__ion_concentrations__Nat, 3) * var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_membrane_permeabilities__i_NaK_maxt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fNaKt * var_membrane_permeabilities__i_NaK_max; // microA
        const double var_i_NaKt__i_NaKt = var_chaste_interface__ion_concentrations__Kt * var_membrane_permeabilities__i_NaK_maxt / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__ion_concentrations__Nai), 1.5)) * (1.5 + var_chaste_interface__ion_concentrations__Kt) * (1.0 + 0.1245 * exp(-0.10000000000000001 * var_chaste_interface__Vmt__Vmt * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)) + 0.0052142857142857138 * (-1.0 + exp(0.01485884101040119 * var_chaste_interface__ion_concentrations__Nat)) * exp(-var_chaste_interface__Vmt__Vmt * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)))); // microA
        const double var_model_parameters__ptcm = 30000000.0; // per_cm2
        const double var_model_parameters__pt = var_model_parameters__Sms * var_model_parameters__ptcm; // dimensionless
        const double var_model_parameters__radiust = 1.5e-5; // cm
        const double var_model_parameters__Lt = 0.15915507752443828 * var_model_parameters__Smt / (var_model_parameters__pt * var_model_parameters__radiust); // cm
        const double var_model_parameters__Vt = 3.1415899999999999 * pow(var_model_parameters__radiust, 2) * var_model_parameters__Lt * var_model_parameters__pt; // cm3
        const double var_t_tubular_ion_fluxes__tauNa = 0.14999999999999999; // second
        const double var_t_tubular_ion_fluxes__JteNa = (-var_model_parameters__Nae + var_chaste_interface__ion_concentrations__Nat) * var_model_parameters__Vt / var_t_tubular_ion_fluxes__tauNa; // millimolar_per_second
        const double var_ion_concentrations__Nat_orig_deriv = (-var_t_tubular_ion_fluxes__JteNa + (3.0 * var_i_NaCat__i_NaCat + 3.0 * var_i_NaKt__i_NaKt + var_i_Nabt__i_Nabt + var_i_Nat__i_Nat) / var_model_parameters__F) / var_model_parameters__Vt; // millimolar / second
        const double d_dt_chaste_interface_var_ion_concentrations__Nat = 0.001 * var_ion_concentrations__Nat_orig_deriv; // millimolar / millisecond

        return d_dt_chaste_interface_var_ion_concentrations__Nat;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative34(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__ion_concentrations__Cai = rY[1];
            // Units: millimolar; Initial value: 3.5486498e-05
            double var_chaste_interface__i_Nat_m_gate__m = rY[4];
            // Units: dimensionless; Initial value: 2.1832694e-06
            double var_chaste_interface__i_Nat_h_gate__h = rY[5];
            // Units: dimensionless; Initial value: 0.58232717
            double var_chaste_interface__ion_concentrations__Nai = rY[32];
            // Units: millimolar; Initial value: 6.9435814
            double var_chaste_interface__ion_concentrations__Nat = rY[34];
            // Units: millimolar; Initial value: 140.01386
            double var_chaste_interface__ion_concentrations__Cat = rY[35];
            // Units: millimolar; Initial value: 1.2271399
            double var_chaste_interface__ion_concentrations__Kt = rY[36];
            // Units: millimolar; Initial value: 5.3627676
            double var_chaste_interface__Vmt__Vmt = rY[40];
            // Units: millivolt; Initial value: -79.709536
            

            const double var_x34 = pow(var_chaste_interface__ion_concentrations__Nai, 3);
            const double var_x41 = 1 / var_chaste_interface__ion_concentrations__Nai;
            const double var_x42 = pow(var_x41, 1.5);
            const double var_x43 = 1 / (1.0 + 31.622776601683793 * var_x42);
            const double var_x110 = var_x34 * var_chaste_interface__ion_concentrations__Cat;
            const double var_x111 = pow(var_chaste_interface__ion_concentrations__Nat, 3);
            const double var_x112 = var_x111 * var_chaste_interface__ion_concentrations__Cai;
            const double var_x113 = 1.0 + 0.0001 * var_x110 + 0.0001 * var_x112;
            const double var_x114 = mParameters[2] / var_x113;
            const double var_x116 = 0.018700000000000001 * var_chaste_interface__Vmt__Vmt;
            const double var_x117 = exp(-var_x116);
            const double var_x119 = exp(var_x116);
            const double var_x120 = var_x110 * var_x119;
            const double var_x121 = var_x112 * var_x117;
            const double var_x122 = var_x120 - var_x121;
            const double var_x123 = var_x122 * mParameters[2] / pow(var_x113, 2);
            const double var_x130 = pow(var_chaste_interface__ion_concentrations__Nat, 2) * var_chaste_interface__ion_concentrations__Cai;
            const double var_x131 = var_x117 * var_x130;
            const double var_x283 = var_chaste_interface__ion_concentrations__Nat + 0.12 * var_chaste_interface__ion_concentrations__Kt;
            const double var_x286 = pow(var_chaste_interface__i_Nat_m_gate__m, 3) * mParameters[0];
            const double var_x288 = var_x286 * var_chaste_interface__i_Nat_h_gate__h;
            const double var_x292 = exp(-0.0039364457769891295 * var_chaste_interface__Vmt__Vmt);
            const double var_x293 = exp(0.01485884101040119 * var_chaste_interface__ion_concentrations__Nat);
            const double var_x294 = exp(-0.039364457769891288 * var_chaste_interface__Vmt__Vmt);
            const double var_x295 = 1.0 + 0.1245 * var_x292 + 0.0052142857142857138 * var_x294 * (-1.0 + var_x293);
            const double var_x297 = 1 / (1.5 + var_chaste_interface__ion_concentrations__Kt);
            const double var_x298 = var_x297 * var_chaste_interface__ion_concentrations__Kt;
            const double var_x300 = 1 / var_chaste_interface__ion_concentrations__Nat;
            const double var_x301 = var_x288 / var_x283;
            const double var_x302 = var_x298 * var_x43 / pow(var_x295, 2);
            const double var_x303 = var_x293 * var_x294 * var_x302;
            const double var_x338 = 0.017970325011775791 * var_x114;
            const double var_x339 = 1.7970325011775791e-6 * var_x123;
            
            partialF = -0.0066666666666666671 - 0.03506809359128616 * var_x301 - 2.8107077013415861e-5 * var_x300 - 3.3805038127960006e-7 * var_x303 - var_x130 * var_x339 - var_x131 * var_x338;
        }
        else
        {
            const double y_save = rY[34];
            rY[34] += delta;
            const double temp = EvaluateYDerivative34(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[34])/delta;
            rY[34] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative35(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__ion_concentrations__Cai = rY[1];
        // Units: millimolar; Initial value: 3.5486498e-05
        double var_chaste_interface__i_Cat__Co = rY[10];
        // Units: dimensionless; Initial value: 2.543652e-06
        double var_chaste_interface__i_Cat__C1 = rY[11];
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__i_Cat__C2 = rY[12];
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__i_Cat__Ccast = rY[13];
        // Units: dimensionless; Initial value: 0.99570063
        double var_chaste_interface__ion_concentrations__Nai = rY[32];
        // Units: millimolar; Initial value: 6.9435814
        double var_chaste_interface__ion_concentrations__Nat = rY[34];
        // Units: millimolar; Initial value: 140.01386
        double var_chaste_interface__ion_concentrations__Cat = rY[35];
        // Units: millimolar; Initial value: 1.2271399
        double var_chaste_interface__ion_concentrations__Cass = rY[37];
        // Units: millimolar; Initial value: 4.3112114e-05
        double var_chaste_interface__Vmt__Vmt = rY[40];
        // Units: millivolt; Initial value: -79.709536
        

        // Mathematics
        const double var_membrane_permeabilities__fCabt = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fCat = 0.87; // dimensionless
        const double var_membrane_permeabilities__fNaCat = 0.81000000000000005; // dimensionless
        const double var_membrane_permeabilities__fpCat = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__gCa = 0.00021000000000000001; // cm_per_second
        const double var_membrane_permeabilities__gCab = 0.00064800000000000003; // milliS_per_cm2
        const double var_membrane_permeabilities__i_pCa_max = 0.84999999999999998; // microA_per_cm2
        const double var_model_parameters__Cae = 1.2; // millimolar
        const double var_model_parameters__F = 96500.0; // coulomb_per_mole
        const double var_model_parameters__R = 8310.0; // joule_per_kilomole_kelvin
        const double var_model_parameters__Smtot = 0.0001; // cm2
        const double var_model_parameters__T = 295.0; // kelvin
        const double var_i_Cat__E_Cat = 0.5 * var_model_parameters__R * var_model_parameters__T * log(var_chaste_interface__ion_concentrations__Cat / var_chaste_interface__ion_concentrations__Cai) / var_model_parameters__F; // millivolt
        const double var_model_parameters__Vc = 0.00012738853503184712 * var_model_parameters__Smtot; // cm3
        const double var_model_parameters__Sms = -4400.0 * var_model_parameters__Vc + var_model_parameters__Smtot; // cm2
        const double var_model_parameters__Smt = -var_model_parameters__Sms + var_model_parameters__Smtot; // cm2
        const double var_membrane_permeabilities__gCabt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fCabt * var_membrane_permeabilities__gCab; // milliS
        const double var_i_Cabt__i_Cabt = (-var_i_Cat__E_Cat + var_chaste_interface__Vmt__Vmt) * var_membrane_permeabilities__gCabt; // microA
        const double var_membrane_permeabilities__gCat = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fCat * var_membrane_permeabilities__gCa; // cm3_per_second
        const double var_i_Cat__i_Cat = 4.0 * pow(var_model_parameters__F, 2) * (-0.34100000000000003 * var_chaste_interface__ion_concentrations__Cat + var_chaste_interface__ion_concentrations__Cass * exp(2.0 * var_chaste_interface__Vmt__Vmt * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cat__Ccast) * var_chaste_interface__i_Cat__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cat__Ccast) * var_chaste_interface__i_Cat__C1) * var_chaste_interface__Vmt__Vmt * var_chaste_interface__i_Cat__Co * var_membrane_permeabilities__gCat / ((-1.0 + exp(2.0 * var_chaste_interface__Vmt__Vmt * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))) * var_model_parameters__R * var_model_parameters__T); // microA
        const double var_membrane_permeabilities__i_NaCa_maxt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fNaCat * mParameters[2]; // microA
        const double var_i_NaCat__i_NaCat = (pow(var_chaste_interface__ion_concentrations__Nai, 3) * var_chaste_interface__ion_concentrations__Cat * exp(0.018700000000000001 * var_chaste_interface__Vmt__Vmt) - pow(var_chaste_interface__ion_concentrations__Nat, 3) * var_chaste_interface__ion_concentrations__Cai * exp(-0.018700000000000001 * var_chaste_interface__Vmt__Vmt)) * var_membrane_permeabilities__i_NaCa_maxt / (1.0 + 0.0001 * pow(var_chaste_interface__ion_concentrations__Nai, 3) * var_chaste_interface__ion_concentrations__Cat + 0.0001 * pow(var_chaste_interface__ion_concentrations__Nat, 3) * var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_membrane_permeabilities__i_pCa_maxt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fpCat * var_membrane_permeabilities__i_pCa_max; // microA
        const double var_i_pCat__i_pCat = var_chaste_interface__ion_concentrations__Cai * var_membrane_permeabilities__i_pCa_maxt / (0.00040000000000000002 + var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_model_parameters__ptcm = 30000000.0; // per_cm2
        const double var_model_parameters__pt = var_model_parameters__Sms * var_model_parameters__ptcm; // dimensionless
        const double var_model_parameters__radiust = 1.5e-5; // cm
        const double var_model_parameters__Lt = 0.15915507752443828 * var_model_parameters__Smt / (var_model_parameters__pt * var_model_parameters__radiust); // cm
        const double var_model_parameters__Vt = 3.1415899999999999 * pow(var_model_parameters__radiust, 2) * var_model_parameters__Lt * var_model_parameters__pt; // cm3
        const double var_t_tubular_ion_fluxes__tauCa = 0.5; // second
        const double var_t_tubular_ion_fluxes__JteCa = (-var_model_parameters__Cae + var_chaste_interface__ion_concentrations__Cat) * var_model_parameters__Vt / var_t_tubular_ion_fluxes__tauCa; // millimolar_per_second
        const double var_ion_concentrations__Cat_orig_deriv = (-var_t_tubular_ion_fluxes__JteCa + 0.5 * (-2.0 * var_i_NaCat__i_NaCat + var_i_Cabt__i_Cabt + var_i_Cat__i_Cat + var_i_pCat__i_pCat) / var_model_parameters__F) / var_model_parameters__Vt; // millimolar / second
        const double d_dt_chaste_interface_var_ion_concentrations__Cat = 0.001 * var_ion_concentrations__Cat_orig_deriv; // millimolar / millisecond

        return d_dt_chaste_interface_var_ion_concentrations__Cat;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative35(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__ion_concentrations__Cai = rY[1];
            // Units: millimolar; Initial value: 3.5486498e-05
            double var_chaste_interface__i_Cat__Co = rY[10];
            // Units: dimensionless; Initial value: 2.543652e-06
            double var_chaste_interface__i_Cat__C1 = rY[11];
            // Units: dimensionless; Initial value: 0.99994546
            double var_chaste_interface__i_Cat__C2 = rY[12];
            // Units: dimensionless; Initial value: 0.99994546
            double var_chaste_interface__i_Cat__Ccast = rY[13];
            // Units: dimensionless; Initial value: 0.99570063
            double var_chaste_interface__ion_concentrations__Nai = rY[32];
            // Units: millimolar; Initial value: 6.9435814
            double var_chaste_interface__ion_concentrations__Nat = rY[34];
            // Units: millimolar; Initial value: 140.01386
            double var_chaste_interface__ion_concentrations__Cat = rY[35];
            // Units: millimolar; Initial value: 1.2271399
            double var_chaste_interface__Vmt__Vmt = rY[40];
            // Units: millivolt; Initial value: -79.709536
            

            const double var_x34 = pow(var_chaste_interface__ion_concentrations__Nai, 3);
            const double var_x110 = var_x34 * var_chaste_interface__ion_concentrations__Cat;
            const double var_x111 = pow(var_chaste_interface__ion_concentrations__Nat, 3);
            const double var_x112 = var_x111 * var_chaste_interface__ion_concentrations__Cai;
            const double var_x113 = 1.0 + 0.0001 * var_x110 + 0.0001 * var_x112;
            const double var_x114 = mParameters[2] / var_x113;
            const double var_x116 = 0.018700000000000001 * var_chaste_interface__Vmt__Vmt;
            const double var_x117 = exp(-var_x116);
            const double var_x119 = exp(var_x116);
            const double var_x120 = var_x110 * var_x119;
            const double var_x121 = var_x112 * var_x117;
            const double var_x122 = var_x120 - var_x121;
            const double var_x123 = var_x122 * mParameters[2] / pow(var_x113, 2);
            const double var_x132 = 1 / var_chaste_interface__ion_concentrations__Cat;
            const double var_x133 = var_x119 * var_x34;
            const double var_x340 = 0.0019967027790861987 * var_x114;
            const double var_x341 = 1.9967027790861991e-7 * var_x123;
            const double var_x342 = exp(0.078728915539782576 * var_chaste_interface__Vmt__Vmt);
            const double var_x343 = -1.0 + var_x342;
            const double var_x344 = 1 / var_x343;
            const double var_x345 = 0.10000000000000001 * var_chaste_interface__i_Cat__Ccast;
            const double var_x346 = 0.10000000000000001 - var_x345;
            const double var_x347 = 0.90000000000000002 + var_x345;
            const double var_x348 = var_x346 * var_chaste_interface__i_Cat__C2 + var_x347 * var_chaste_interface__i_Cat__C1;
            const double var_x349 = var_x344 * var_x348 * var_chaste_interface__Vmt__Vmt;
            const double var_x359 = var_x349 * var_chaste_interface__i_Cat__Co;
            
            partialF = -0.002 - 5.6810311617883583e-6 * var_x132 - 0.0011667637092333111 * var_x359 + var_x34 * var_x341 - var_x133 * var_x340;
        }
        else
        {
            const double y_save = rY[35];
            rY[35] += delta;
            const double temp = EvaluateYDerivative35(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[35])/delta;
            rY[35] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative36(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_Ktot_rt_gate__rt = rY[17];
        // Units: dimensionless; Initial value: 0.0023485094
        double var_chaste_interface__i_Ktot_st_gate__st = rY[18];
        // Units: dimensionless; Initial value: 0.98315865
        double var_chaste_interface__i_Ktot_sst_gate__sst = rY[19];
        // Units: dimensionless; Initial value: 0.67478532
        double var_chaste_interface__i_Kstt_rstt_gate__rstt = rY[22];
        // Units: dimensionless; Initial value: 0.0031079241
        double var_chaste_interface__i_Kstt_sstt_gate__sstt = rY[23];
        // Units: dimensionless; Initial value: 0.30773368
        double var_chaste_interface__i_Kft_qt_gate__qt = rY[25];
        // Units: dimensionless; Initial value: 0.0034357175
        double var_chaste_interface__ion_concentrations__Nai = rY[32];
        // Units: millimolar; Initial value: 6.9435814
        double var_chaste_interface__ion_concentrations__Ki = rY[33];
        // Units: millimolar; Initial value: 137.53311
        double var_chaste_interface__ion_concentrations__Nat = rY[34];
        // Units: millimolar; Initial value: 140.01386
        double var_chaste_interface__ion_concentrations__Kt = rY[36];
        // Units: millimolar; Initial value: 5.3627676
        double var_chaste_interface__Vmt__Vmt = rY[40];
        // Units: millivolt; Initial value: -79.709536
        

        // Mathematics
        const double var_membrane_permeabilities__fK1t = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fKbt = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fKft = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fKstt = 0.76000000000000001; // dimensionless
        const double var_membrane_permeabilities__fKtot = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fNaKt = 0.58999999999999997; // dimensionless
        const double var_membrane_permeabilities__gKb = 0.0013799999999999999; // milliS_per_cm2
        const double var_membrane_permeabilities__gKf = 0.014500000000000001; // milliS_per_cm2
        const double var_membrane_permeabilities__gKst = 0.070000000000000007; // milliS_per_cm2
        const double var_membrane_permeabilities__i_NaK_max = 1.0; // microA_per_cm2
        const double var_model_parameters__F = 96500.0; // coulomb_per_mole
        const double var_model_parameters__Ke = 5.4000000000000004; // millimolar
        const double var_model_parameters__R = 8310.0; // joule_per_kilomole_kelvin
        const double var_model_parameters__Smtot = 0.0001; // cm2
        const double var_model_parameters__T = 295.0; // kelvin
        const double var_i_Ktot__E_Kt = var_model_parameters__R * var_model_parameters__T * log(var_chaste_interface__ion_concentrations__Kt / var_chaste_interface__ion_concentrations__Ki) / var_model_parameters__F; // millivolt
        const double var_i_Nat__E_Nat = var_model_parameters__R * var_model_parameters__T * log(var_chaste_interface__ion_concentrations__Nat / var_chaste_interface__ion_concentrations__Nai) / var_model_parameters__F; // millivolt
        const double var_model_parameters__Vc = 0.00012738853503184712 * var_model_parameters__Smtot; // cm3
        const double var_model_parameters__Sms = -4400.0 * var_model_parameters__Vc + var_model_parameters__Smtot; // cm2
        const double var_model_parameters__Smt = -var_model_parameters__Sms + var_model_parameters__Smtot; // cm2
        const double var_membrane_permeabilities__gK1t = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fK1t * mParameters[1]; // milliS
        const double var_i_K1t__i_K1t = (-1.73 - var_i_Ktot__E_Kt + var_chaste_interface__Vmt__Vmt) * var_membrane_permeabilities__gK1t / (1.0 + (1.0 + exp(8.0548387096774192 - 8.064516129032258 * var_chaste_interface__ion_concentrations__Kt)) * exp(1.613 * (-1.73 - var_i_Ktot__E_Kt + var_chaste_interface__Vmt__Vmt) * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))); // microA
        const double var_membrane_permeabilities__gKbt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fKbt * var_membrane_permeabilities__gKb; // milliS
        const double var_i_Kbt__i_Kbt = (-var_i_Ktot__E_Kt + var_chaste_interface__Vmt__Vmt) * var_membrane_permeabilities__gKbt; // microA
        const double var_membrane_permeabilities__gKft = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fKft * var_membrane_permeabilities__gKf; // milliS
        const double var_i_Kft__i_Kft = (1.0 * var_chaste_interface__Vmt__Vmt - 0.20000000000000001 * var_i_Nat__E_Nat - 0.80000000000000004 * var_i_Ktot__E_Kt) * var_chaste_interface__i_Kft_qt_gate__qt * var_membrane_permeabilities__gKft; // microA
        const double var_membrane_permeabilities__gKstt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fKstt * var_membrane_permeabilities__gKst; // milliS
        const double var_i_Kstt__i_Kstt = (-var_i_Ktot__E_Kt + var_chaste_interface__Vmt__Vmt) * var_chaste_interface__i_Kstt_rstt_gate__rstt * var_chaste_interface__i_Kstt_sstt_gate__sstt * var_membrane_permeabilities__gKstt; // microA
        const double var_membrane_permeabilities__gKtot = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fKtot * mParameters[3]; // milliS
        const double var_i_Ktot__i_Ktot = (-var_i_Ktot__E_Kt + var_chaste_interface__Vmt__Vmt) * (0.88600000000000001 * var_chaste_interface__i_Ktot_st_gate__st + 0.114 * var_chaste_interface__i_Ktot_sst_gate__sst) * var_chaste_interface__i_Ktot_rt_gate__rt * var_membrane_permeabilities__gKtot; // microA
        const double var_membrane_permeabilities__i_NaK_maxt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fNaKt * var_membrane_permeabilities__i_NaK_max; // microA
        const double var_i_NaKt__i_NaKt = var_chaste_interface__ion_concentrations__Kt * var_membrane_permeabilities__i_NaK_maxt / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__ion_concentrations__Nai), 1.5)) * (1.5 + var_chaste_interface__ion_concentrations__Kt) * (1.0 + 0.1245 * exp(-0.10000000000000001 * var_chaste_interface__Vmt__Vmt * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)) + 0.0052142857142857138 * (-1.0 + exp(0.01485884101040119 * var_chaste_interface__ion_concentrations__Nat)) * exp(-var_chaste_interface__Vmt__Vmt * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)))); // microA
        const double var_model_parameters__ptcm = 30000000.0; // per_cm2
        const double var_model_parameters__pt = var_model_parameters__Sms * var_model_parameters__ptcm; // dimensionless
        const double var_model_parameters__radiust = 1.5e-5; // cm
        const double var_model_parameters__Lt = 0.15915507752443828 * var_model_parameters__Smt / (var_model_parameters__pt * var_model_parameters__radiust); // cm
        const double var_model_parameters__Vt = 3.1415899999999999 * pow(var_model_parameters__radiust, 2) * var_model_parameters__Lt * var_model_parameters__pt; // cm3
        const double var_t_tubular_ion_fluxes__tauK = 0.14999999999999999; // second
        const double var_t_tubular_ion_fluxes__JteK = (-var_model_parameters__Ke + var_chaste_interface__ion_concentrations__Kt) * var_model_parameters__Vt / var_t_tubular_ion_fluxes__tauK; // millimolar_per_second
        const double var_ion_concentrations__Kt_orig_deriv = (-var_t_tubular_ion_fluxes__JteK + (-2.0 * var_i_NaKt__i_NaKt + var_i_K1t__i_K1t + var_i_Kbt__i_Kbt + var_i_Kft__i_Kft + var_i_Kstt__i_Kstt + var_i_Ktot__i_Ktot) / var_model_parameters__F) / var_model_parameters__Vt; // millimolar / second
        const double d_dt_chaste_interface_var_ion_concentrations__Kt = 0.001 * var_ion_concentrations__Kt_orig_deriv; // millimolar / millisecond

        return d_dt_chaste_interface_var_ion_concentrations__Kt;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative36(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__i_Ktot_rt_gate__rt = rY[17];
            // Units: dimensionless; Initial value: 0.0023485094
            double var_chaste_interface__i_Ktot_st_gate__st = rY[18];
            // Units: dimensionless; Initial value: 0.98315865
            double var_chaste_interface__i_Ktot_sst_gate__sst = rY[19];
            // Units: dimensionless; Initial value: 0.67478532
            double var_chaste_interface__i_Kstt_rstt_gate__rstt = rY[22];
            // Units: dimensionless; Initial value: 0.0031079241
            double var_chaste_interface__i_Kstt_sstt_gate__sstt = rY[23];
            // Units: dimensionless; Initial value: 0.30773368
            double var_chaste_interface__i_Kft_qt_gate__qt = rY[25];
            // Units: dimensionless; Initial value: 0.0034357175
            double var_chaste_interface__ion_concentrations__Nai = rY[32];
            // Units: millimolar; Initial value: 6.9435814
            double var_chaste_interface__ion_concentrations__Ki = rY[33];
            // Units: millimolar; Initial value: 137.53311
            double var_chaste_interface__ion_concentrations__Nat = rY[34];
            // Units: millimolar; Initial value: 140.01386
            double var_chaste_interface__ion_concentrations__Kt = rY[36];
            // Units: millimolar; Initial value: 5.3627676
            double var_chaste_interface__Vmt__Vmt = rY[40];
            // Units: millivolt; Initial value: -79.709536
            

            const double var_x24 = 1 / var_chaste_interface__ion_concentrations__Ki;
            const double var_x41 = 1 / var_chaste_interface__ion_concentrations__Nai;
            const double var_x42 = pow(var_x41, 1.5);
            const double var_x43 = 1 / (1.0 + 31.622776601683793 * var_x42);
            const double var_x292 = exp(-0.0039364457769891295 * var_chaste_interface__Vmt__Vmt);
            const double var_x293 = exp(0.01485884101040119 * var_chaste_interface__ion_concentrations__Nat);
            const double var_x294 = exp(-0.039364457769891288 * var_chaste_interface__Vmt__Vmt);
            const double var_x295 = 1.0 + 0.1245 * var_x292 + 0.0052142857142857138 * var_x294 * (-1.0 + var_x293);
            const double var_x296 = 1 / var_x295;
            const double var_x297 = 1 / (1.5 + var_chaste_interface__ion_concentrations__Kt);
            const double var_x304 = var_x296 * var_x43;
            const double var_x305 = var_x297 * var_x304;
            const double var_x306 = var_x304 * var_chaste_interface__ion_concentrations__Kt / pow((1 + 0.66666666666666663 * var_chaste_interface__ion_concentrations__Kt), 2);
            const double var_x311 = log(var_x24 * var_chaste_interface__ion_concentrations__Kt);
            const double var_x312 = -25.403626943005182 * var_x311 + var_chaste_interface__Vmt__Vmt;
            const double var_x314 = var_chaste_interface__i_Ktot_rt_gate__rt * mParameters[3];
            const double var_x320 = var_chaste_interface__i_Kstt_rstt_gate__rstt * var_chaste_interface__i_Kstt_sstt_gate__sstt;
            const double var_x322 = exp(8.0548387096774192 - 8.064516129032258 * var_chaste_interface__ion_concentrations__Kt);
            const double var_x323 = exp(-0.10984612576230394 + 0.063494870382834648 * var_chaste_interface__Vmt__Vmt - 1.613 * var_x311);
            const double var_x324 = var_x323 * (1.0 + var_x322);
            const double var_x325 = 1.0 + var_x324;
            const double var_x326 = mParameters[1] / var_x325;
            const double var_x329 = (-1.73 + var_x312) * mParameters[1] / pow(var_x325, 2);
            const double var_x332 = 1 / var_chaste_interface__ion_concentrations__Kt;
            const double var_x333 = var_x329 * (1.613 * var_x324 * var_x332 + 8.064516129032258 * var_x322 * var_x323);
            const double var_x334 = 25.403626943005182 * var_x332;
            const double var_x364 = 0.0012230667294708746 * var_chaste_interface__i_Ktot_st_gate__st + 0.00015736975977390487 * var_chaste_interface__i_Ktot_sst_gate__sst;
            const double var_x368 = 0.00040678988565891953 * var_chaste_interface__i_Kft_qt_gate__qt;
            const double var_x369 = 0.03506809359128616 * var_x326;
            const double var_x370 = 0.0033314688911721853 * var_x320;
            const double var_x371 = var_x314 * var_x364;
            
            partialF = -0.0066666666666666671 + 0.0013804364892447795 * var_x333 + 0.0012927897280228886 * var_x306 - 4.8393969155974903e-5 * var_x332 - 0.0029087768880514992 * var_x305 - var_x332 * var_x368 - var_x332 * var_x369 - var_x332 * var_x370 - var_x334 * var_x371;
        }
        else
        {
            const double y_save = rY[36];
            rY[36] += delta;
            const double temp = EvaluateYDerivative36(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[36])/delta;
            rY[36] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative37(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -79.709547
        double var_chaste_interface__ion_concentrations__Cai = rY[1];
        // Units: millimolar; Initial value: 3.5486498e-05
        double var_chaste_interface__i_Cas__Co = rY[6];
        // Units: dimensionless; Initial value: 2.5436465e-06
        double var_chaste_interface__i_Cas__C1 = rY[7];
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__i_Cas__C2 = rY[8];
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__i_Cas__Ccast = rY[9];
        // Units: dimensionless; Initial value: 0.99570063
        double var_chaste_interface__i_Cat__Co = rY[10];
        // Units: dimensionless; Initial value: 2.543652e-06
        double var_chaste_interface__i_Cat__C1 = rY[11];
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__i_Cat__C2 = rY[12];
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__i_Cat__Ccast = rY[13];
        // Units: dimensionless; Initial value: 0.99570063
        double var_chaste_interface__JCaSRrel__F2 = rY[27];
        // Units: dimensionless; Initial value: 0.00038333331
        double var_chaste_interface__JCaSRrel__F3 = rY[28];
        // Units: dimensionless; Initial value: 6.4516879e-11
        double var_chaste_interface__CaSRrel__CaSRrel = rY[31];
        // Units: millimolar; Initial value: 0.22638169
        double var_chaste_interface__ion_concentrations__Cat = rY[35];
        // Units: millimolar; Initial value: 1.2271399
        double var_chaste_interface__ion_concentrations__Cass = rY[37];
        // Units: millimolar; Initial value: 4.3112114e-05
        double var_chaste_interface__Vmt__Vmt = rY[40];
        // Units: millivolt; Initial value: -79.709536
        

        // Mathematics
        const double var_JCad__taud = 0.0031250000000000002; // second
        const double var_i_Cas__i_Cas = ((fabs(var_chaste_interface__Vms__Vms) < 1.2701813471502589e-6) ? (393644.57769891288 * (1.2701813471502589e-6 + var_chaste_interface__Vms__Vms) * (5.2689000000000005e-11 * (-0.40920000000000001 + var_chaste_interface__ion_concentrations__Cass * exp(9.9999999999999995e-8)) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C1) * var_chaste_interface__i_Cas__Co / (-1.0 + exp(9.9999999999999995e-8)) + 5.2689000000000005e-11 * (-0.40920000000000001 + var_chaste_interface__ion_concentrations__Cass * exp(-9.9999999999999995e-8)) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C1) * var_chaste_interface__i_Cas__Co / (-1.0 + exp(-9.9999999999999995e-8))) - 5.2689000000000005e-11 * (-0.40920000000000001 + var_chaste_interface__ion_concentrations__Cass * exp(-9.9999999999999995e-8)) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C1) * var_chaste_interface__i_Cas__Co / (-1.0 + exp(-9.9999999999999995e-8))) : (4.1481478308756044e-5 * (-0.40920000000000001 + var_chaste_interface__ion_concentrations__Cass * exp(0.078728915539782576 * var_chaste_interface__Vms__Vms)) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast) * var_chaste_interface__i_Cas__C1) * var_chaste_interface__Vms__Vms * var_chaste_interface__i_Cas__Co / (-1.0 + exp(0.078728915539782576 * var_chaste_interface__Vms__Vms)))); // microA
        const double var_membrane_permeabilities__fCat = 0.87; // dimensionless
        const double var_membrane_permeabilities__gCa = 0.00021000000000000001; // cm_per_second
        const double var_model_parameters__F = 96500.0; // coulomb_per_mole
        const double var_model_parameters__R = 8310.0; // joule_per_kilomole_kelvin
        const double var_model_parameters__Smtot = 0.0001; // cm2
        const double var_model_parameters__T = 295.0; // kelvin
        const double var_model_parameters__Vc = 0.00012738853503184712 * var_model_parameters__Smtot; // cm3
        const double var_model_parameters__Sms = -4400.0 * var_model_parameters__Vc + var_model_parameters__Smtot; // cm2
        const double var_model_parameters__Smt = -var_model_parameters__Sms + var_model_parameters__Smtot; // cm2
        const double var_membrane_permeabilities__gCat = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fCat * var_membrane_permeabilities__gCa; // cm3_per_second
        const double var_i_Cat__i_Cat = 4.0 * pow(var_model_parameters__F, 2) * (-0.34100000000000003 * var_chaste_interface__ion_concentrations__Cat + var_chaste_interface__ion_concentrations__Cass * exp(2.0 * var_chaste_interface__Vmt__Vmt * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cat__Ccast) * var_chaste_interface__i_Cat__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cat__Ccast) * var_chaste_interface__i_Cat__C1) * var_chaste_interface__Vmt__Vmt * var_chaste_interface__i_Cat__Co * var_membrane_permeabilities__gCat / ((-1.0 + exp(2.0 * var_chaste_interface__Vmt__Vmt * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))) * var_model_parameters__R * var_model_parameters__T); // microA
        const double var_model_parameters__VSRrel = 0.0035000000000000001 * var_model_parameters__Vc; // cm3
        const double var_JCaSRrel__JCaSRrel = 1800.0 * (-var_chaste_interface__ion_concentrations__Cass + var_chaste_interface__CaSRrel__CaSRrel) * (var_chaste_interface__JCaSRrel__F2 + var_chaste_interface__JCaSRrel__F3) * var_model_parameters__VSRrel; // millimolar_per_second
        const double var_model_parameters__Vd = 7.4999999999999993e-5 * var_model_parameters__Vc; // cm3
        const double var_model_parameters__Vmyo = 0.58499999999999996 * var_model_parameters__Vc; // cm3
        const double var_JCad__JCad = (-var_chaste_interface__ion_concentrations__Cai + var_chaste_interface__ion_concentrations__Cass) * var_model_parameters__Vmyo / var_JCad__taud; // millimolar_per_second
        const double var_ion_concentrations__Cass_orig_deriv = (var_JCaSRrel__JCaSRrel / var_model_parameters__Vd - var_JCad__JCad / var_model_parameters__Vd + 0.5 * (-var_i_Cas__i_Cas - var_i_Cat__i_Cat) / (var_model_parameters__F * var_model_parameters__Vd)) / (1.0 + 0.00011900000000000002 / pow((0.0023800000000000002 + var_chaste_interface__ion_concentrations__Cass), 2)); // millimolar / second
        const double d_dt_chaste_interface_var_ion_concentrations__Cass = 0.001 * var_ion_concentrations__Cass_orig_deriv; // millimolar / millisecond

        return d_dt_chaste_interface_var_ion_concentrations__Cass;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative37(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -79.709547
            double var_chaste_interface__ion_concentrations__Cai = rY[1];
            // Units: millimolar; Initial value: 3.5486498e-05
            double var_chaste_interface__i_Cas__Co = rY[6];
            // Units: dimensionless; Initial value: 2.5436465e-06
            double var_chaste_interface__i_Cas__C1 = rY[7];
            // Units: dimensionless; Initial value: 0.99994546
            double var_chaste_interface__i_Cas__C2 = rY[8];
            // Units: dimensionless; Initial value: 0.99994546
            double var_chaste_interface__i_Cas__Ccast = rY[9];
            // Units: dimensionless; Initial value: 0.99570063
            double var_chaste_interface__i_Cat__Co = rY[10];
            // Units: dimensionless; Initial value: 2.543652e-06
            double var_chaste_interface__i_Cat__C1 = rY[11];
            // Units: dimensionless; Initial value: 0.99994546
            double var_chaste_interface__i_Cat__C2 = rY[12];
            // Units: dimensionless; Initial value: 0.99994546
            double var_chaste_interface__i_Cat__Ccast = rY[13];
            // Units: dimensionless; Initial value: 0.99570063
            double var_chaste_interface__JCaSRrel__F2 = rY[27];
            // Units: dimensionless; Initial value: 0.00038333331
            double var_chaste_interface__JCaSRrel__F3 = rY[28];
            // Units: dimensionless; Initial value: 6.4516879e-11
            double var_chaste_interface__CaSRrel__CaSRrel = rY[31];
            // Units: millimolar; Initial value: 0.22638169
            double var_chaste_interface__ion_concentrations__Cat = rY[35];
            // Units: millimolar; Initial value: 1.2271399
            double var_chaste_interface__ion_concentrations__Cass = rY[37];
            // Units: millimolar; Initial value: 4.3112114e-05
            double var_chaste_interface__Vmt__Vmt = rY[40];
            // Units: millivolt; Initial value: -79.709536
            

            const double var_x0 = exp(9.9999999999999995e-8);
            const double var_x1 = 1 / (-1.0 + var_x0);
            const double var_x2 = var_x1 * (-0.40920000000000001 + var_x0 * var_chaste_interface__ion_concentrations__Cass);
            const double var_x3 = 0.10000000000000001 * var_chaste_interface__i_Cas__Ccast;
            const double var_x4 = 0.10000000000000001 - var_x3;
            const double var_x5 = 0.90000000000000002 + var_x3;
            const double var_x6 = var_x4 * var_chaste_interface__i_Cas__C2 + var_x5 * var_chaste_interface__i_Cas__C1;
            const double var_x7 = var_x6 * var_chaste_interface__i_Cas__Co;
            const double var_x9 = exp(-9.9999999999999995e-8);
            const double var_x10 = 1 / (-1.0 + var_x9);
            const double var_x11 = var_x10 * (-0.40920000000000001 + var_x9 * var_chaste_interface__ion_concentrations__Cass);
            const double var_x12 = fabs(var_chaste_interface__Vms__Vms) < 1.2701813471502589e-6;
            const double var_x13 = exp(0.078728915539782576 * var_chaste_interface__Vms__Vms);
            const double var_x14 = -1.0 + var_x13;
            const double var_x15 = 1 / var_x14;
            const double var_x16 = var_x15 * var_x7;
            const double var_x17 = var_x13 * var_chaste_interface__ion_concentrations__Cass;
            const double var_x18 = -0.40920000000000001 + var_x17;
            const double var_x19 = 4.1481478308756044e-5 * var_x18;
            const double var_x20 = var_x16 * var_x19;
            const double var_x21 = var_x16 * var_chaste_interface__Vms__Vms;
            const double var_x62 = 0.5 + 393644.57769891288 * var_chaste_interface__Vms__Vms;
            const double var_x63 = 5.2689000000000005e-11 * var_x6;
            const double var_x64 = var_x2 * var_x63;
            const double var_x65 = var_x11 * var_x63;
            const double var_x95 = var_x63 * var_chaste_interface__i_Cas__Co;
            const double var_x96 = var_x10 * var_x9 * var_x95;
            const double var_x97 = ((var_x12) ? (-var_x96 + var_x62 * (var_x96 + var_x0 * var_x1 * var_x95)) : (4.1481478308756044e-5 * var_x13 * var_x21));
            const double var_x279 = (-var_chaste_interface__ion_concentrations__Cass + var_chaste_interface__CaSRrel__CaSRrel) * (var_chaste_interface__JCaSRrel__F2 + var_chaste_interface__JCaSRrel__F3);
            const double var_x342 = exp(0.078728915539782576 * var_chaste_interface__Vmt__Vmt);
            const double var_x343 = -1.0 + var_x342;
            const double var_x344 = 1 / var_x343;
            const double var_x345 = 0.10000000000000001 * var_chaste_interface__i_Cat__Ccast;
            const double var_x346 = 0.10000000000000001 - var_x345;
            const double var_x347 = 0.90000000000000002 + var_x345;
            const double var_x348 = var_x346 * var_chaste_interface__i_Cat__C2 + var_x347 * var_chaste_interface__i_Cat__C1;
            const double var_x349 = var_x344 * var_x348 * var_chaste_interface__Vmt__Vmt;
            const double var_x350 = var_x342 * var_chaste_interface__ion_concentrations__Cass;
            const double var_x351 = var_x350 - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Cat;
            const double var_x359 = var_x349 * var_chaste_interface__i_Cat__Co;
            const double var_x360 = var_x342 * var_x359;
            const double var_x372 = 0.0023800000000000002 + var_chaste_interface__ion_concentrations__Cass;
            const double var_x373 = 1.0 + 0.00011900000000000002 / pow(var_x372, 2);
            const double var_x374 = 1 / var_x373;
            const double var_x380 = 0.001 * var_x374;
            const double var_x382 = 84000.000000000015 * var_chaste_interface__JCaSRrel__F2;
            const double var_x383 = 84000.000000000015 * var_chaste_interface__JCaSRrel__F3;
            const double var_x384 = var_x65 * var_chaste_interface__i_Cas__Co;
            
            partialF = var_x380 * (-2496000.0 - var_x382 - var_x383 - 5423143.3506044904 * var_x97 - 1505.5015603010465 * var_x360) + 2.3800000000000004e-7 * (84000.000000000015 * var_x279 + 2496000.0 * var_chaste_interface__ion_concentrations__Cai - 2496000.0 * var_chaste_interface__ion_concentrations__Cass - 5423143.3506044904 * ((var_x12) ? (-var_x384 + 393644.57769891288 * (1.2701813471502589e-6 + var_chaste_interface__Vms__Vms) * (var_x384 + var_x64 * var_chaste_interface__i_Cas__Co)) : (var_x20 * var_chaste_interface__Vms__Vms)) - 1505.5015603010465 * var_x351 * var_x359) / (pow(var_x372, 3) * pow(var_x373, 2));
        }
        else
        {
            const double y_save = rY[37];
            rY[37] += delta;
            const double temp = EvaluateYDerivative37(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[37])/delta;
            rY[37] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative38(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__ion_concentrations__Cai = rY[1];
        // Units: millimolar; Initial value: 3.5486498e-05
        double var_chaste_interface__ion_concentrations__BTRH = rY[38];
        // Units: millimolar; Initial value: 0.92804169
        

        // Mathematics
        const double var_ion_concentrations__dBTRH = -0.070000000000000007 * var_chaste_interface__ion_concentrations__BTRH + 20000.0 * (1.0 - var_chaste_interface__ion_concentrations__BTRH) * var_chaste_interface__ion_concentrations__Cai; // millimolar_per_second
        const double var_ion_concentrations__BTRH_orig_deriv = var_ion_concentrations__dBTRH; // millimolar / second
        const double d_dt_chaste_interface_var_ion_concentrations__BTRH = 0.001 * var_ion_concentrations__BTRH_orig_deriv; // millimolar / millisecond

        return d_dt_chaste_interface_var_ion_concentrations__BTRH;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative38(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__ion_concentrations__Cai = rY[1];
            // Units: millimolar; Initial value: 3.5486498e-05
            

            
            partialF = -7.0000000000000007e-5 - 20.0 * var_chaste_interface__ion_concentrations__Cai;
        }
        else
        {
            const double y_save = rY[38];
            rY[38] += delta;
            const double temp = EvaluateYDerivative38(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[38])/delta;
            rY[38] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative39(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__ion_concentrations__Cai = rY[1];
        // Units: millimolar; Initial value: 3.5486498e-05
        double var_chaste_interface__ion_concentrations__BTRL = rY[39];
        // Units: millimolar; Initial value: 0.034317829
        

        // Mathematics
        const double var_ion_concentrations__dBTRL = -40.0 * var_chaste_interface__ion_concentrations__BTRL + 40000.0 * (1.0 - var_chaste_interface__ion_concentrations__BTRL) * var_chaste_interface__ion_concentrations__Cai; // millimolar_per_second
        const double var_ion_concentrations__BTRL_orig_deriv = var_ion_concentrations__dBTRL; // millimolar / second
        const double d_dt_chaste_interface_var_ion_concentrations__BTRL = 0.001 * var_ion_concentrations__BTRL_orig_deriv; // millimolar / millisecond

        return d_dt_chaste_interface_var_ion_concentrations__BTRL;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative39(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__ion_concentrations__Cai = rY[1];
            // Units: millimolar; Initial value: 3.5486498e-05
            

            
            partialF = -0.040000000000000001 - 40.0 * var_chaste_interface__ion_concentrations__Cai;
        }
        else
        {
            const double y_save = rY[39];
            rY[39] += delta;
            const double temp = EvaluateYDerivative39(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[39])/delta;
            rY[39] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluateYDerivative40(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vms__Vms = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -79.709547
        double var_chaste_interface__ion_concentrations__Cai = rY[1];
        // Units: millimolar; Initial value: 3.5486498e-05
        double var_chaste_interface__i_Nat_m_gate__m = rY[4];
        // Units: dimensionless; Initial value: 2.1832694e-06
        double var_chaste_interface__i_Nat_h_gate__h = rY[5];
        // Units: dimensionless; Initial value: 0.58232717
        double var_chaste_interface__i_Cat__Co = rY[10];
        // Units: dimensionless; Initial value: 2.543652e-06
        double var_chaste_interface__i_Cat__C1 = rY[11];
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__i_Cat__C2 = rY[12];
        // Units: dimensionless; Initial value: 0.99994546
        double var_chaste_interface__i_Cat__Ccast = rY[13];
        // Units: dimensionless; Initial value: 0.99570063
        double var_chaste_interface__i_Ktot_rt_gate__rt = rY[17];
        // Units: dimensionless; Initial value: 0.0023485094
        double var_chaste_interface__i_Ktot_st_gate__st = rY[18];
        // Units: dimensionless; Initial value: 0.98315865
        double var_chaste_interface__i_Ktot_sst_gate__sst = rY[19];
        // Units: dimensionless; Initial value: 0.67478532
        double var_chaste_interface__i_Kstt_rstt_gate__rstt = rY[22];
        // Units: dimensionless; Initial value: 0.0031079241
        double var_chaste_interface__i_Kstt_sstt_gate__sstt = rY[23];
        // Units: dimensionless; Initial value: 0.30773368
        double var_chaste_interface__i_Kft_qt_gate__qt = rY[25];
        // Units: dimensionless; Initial value: 0.0034357175
        double var_chaste_interface__ion_concentrations__Nai = rY[32];
        // Units: millimolar; Initial value: 6.9435814
        double var_chaste_interface__ion_concentrations__Ki = rY[33];
        // Units: millimolar; Initial value: 137.53311
        double var_chaste_interface__ion_concentrations__Nat = rY[34];
        // Units: millimolar; Initial value: 140.01386
        double var_chaste_interface__ion_concentrations__Cat = rY[35];
        // Units: millimolar; Initial value: 1.2271399
        double var_chaste_interface__ion_concentrations__Kt = rY[36];
        // Units: millimolar; Initial value: 5.3627676
        double var_chaste_interface__ion_concentrations__Cass = rY[37];
        // Units: millimolar; Initial value: 4.3112114e-05
        double var_chaste_interface__Vmt__Vmt = rY[40];
        // Units: millivolt; Initial value: -79.709536
        

        // Mathematics
        const double var_membrane_permeabilities__fCabt = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fCat = 0.87; // dimensionless
        const double var_membrane_permeabilities__fK1t = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fKbt = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fKft = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fKstt = 0.76000000000000001; // dimensionless
        const double var_membrane_permeabilities__fKtot = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fNaCat = 0.81000000000000005; // dimensionless
        const double var_membrane_permeabilities__fNaKt = 0.58999999999999997; // dimensionless
        const double var_membrane_permeabilities__fNabt = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fNat = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__fpCat = 0.56000000000000005; // dimensionless
        const double var_membrane_permeabilities__gCa = 0.00021000000000000001; // cm_per_second
        const double var_membrane_permeabilities__gCab = 0.00064800000000000003; // milliS_per_cm2
        const double var_membrane_permeabilities__gKb = 0.0013799999999999999; // milliS_per_cm2
        const double var_membrane_permeabilities__gKf = 0.014500000000000001; // milliS_per_cm2
        const double var_membrane_permeabilities__gKst = 0.070000000000000007; // milliS_per_cm2
        const double var_membrane_permeabilities__gNab = 0.00080150000000000002; // milliS_per_cm2
        const double var_membrane_permeabilities__i_NaK_max = 1.0; // microA_per_cm2
        const double var_membrane_permeabilities__i_pCa_max = 0.84999999999999998; // microA_per_cm2
        const double var_model_parameters__F = 96500.0; // coulomb_per_mole
        const double var_model_parameters__R = 8310.0; // joule_per_kilomole_kelvin
        const double var_model_parameters__Rot = 83.329999999999998; // ohm_cm
        const double var_model_parameters__Smtot = 0.0001; // cm2
        const double var_model_parameters__T = 295.0; // kelvin
        const double var_i_Cat__E_Cat = 0.5 * var_model_parameters__R * var_model_parameters__T * log(var_chaste_interface__ion_concentrations__Cat / var_chaste_interface__ion_concentrations__Cai) / var_model_parameters__F; // millivolt
        const double var_i_Ktot__E_Kt = var_model_parameters__R * var_model_parameters__T * log(var_chaste_interface__ion_concentrations__Kt / var_chaste_interface__ion_concentrations__Ki) / var_model_parameters__F; // millivolt
        const double var_i_Nat__E_Nat = var_model_parameters__R * var_model_parameters__T * log(var_chaste_interface__ion_concentrations__Nat / var_chaste_interface__ion_concentrations__Nai) / var_model_parameters__F; // millivolt
        const double var_model_parameters__Vc = 0.00012738853503184712 * var_model_parameters__Smtot; // cm3
        const double var_model_parameters__Sms = -4400.0 * var_model_parameters__Vc + var_model_parameters__Smtot; // cm2
        const double var_model_parameters__Smt = -var_model_parameters__Sms + var_model_parameters__Smtot; // cm2
        const double var_membrane_permeabilities__gCabt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fCabt * var_membrane_permeabilities__gCab; // milliS
        const double var_i_Cabt__i_Cabt = (-var_i_Cat__E_Cat + var_chaste_interface__Vmt__Vmt) * var_membrane_permeabilities__gCabt; // microA
        const double var_membrane_permeabilities__gCat = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fCat * var_membrane_permeabilities__gCa; // cm3_per_second
        const double var_i_Cat__i_Cat = 4.0 * pow(var_model_parameters__F, 2) * (-0.34100000000000003 * var_chaste_interface__ion_concentrations__Cat + var_chaste_interface__ion_concentrations__Cass * exp(2.0 * var_chaste_interface__Vmt__Vmt * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))) * ((0.10000000000000001 - 0.10000000000000001 * var_chaste_interface__i_Cat__Ccast) * var_chaste_interface__i_Cat__C2 + (0.90000000000000002 + 0.10000000000000001 * var_chaste_interface__i_Cat__Ccast) * var_chaste_interface__i_Cat__C1) * var_chaste_interface__Vmt__Vmt * var_chaste_interface__i_Cat__Co * var_membrane_permeabilities__gCat / ((-1.0 + exp(2.0 * var_chaste_interface__Vmt__Vmt * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))) * var_model_parameters__R * var_model_parameters__T); // microA
        const double var_membrane_permeabilities__gK1t = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fK1t * mParameters[1]; // milliS
        const double var_i_K1t__i_K1t = (-1.73 - var_i_Ktot__E_Kt + var_chaste_interface__Vmt__Vmt) * var_membrane_permeabilities__gK1t / (1.0 + (1.0 + exp(8.0548387096774192 - 8.064516129032258 * var_chaste_interface__ion_concentrations__Kt)) * exp(1.613 * (-1.73 - var_i_Ktot__E_Kt + var_chaste_interface__Vmt__Vmt) * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))); // microA
        const double var_membrane_permeabilities__gKbt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fKbt * var_membrane_permeabilities__gKb; // milliS
        const double var_i_Kbt__i_Kbt = (-var_i_Ktot__E_Kt + var_chaste_interface__Vmt__Vmt) * var_membrane_permeabilities__gKbt; // microA
        const double var_membrane_permeabilities__gKft = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fKft * var_membrane_permeabilities__gKf; // milliS
        const double var_i_Kft__i_Kft = (1.0 * var_chaste_interface__Vmt__Vmt - 0.20000000000000001 * var_i_Nat__E_Nat - 0.80000000000000004 * var_i_Ktot__E_Kt) * var_chaste_interface__i_Kft_qt_gate__qt * var_membrane_permeabilities__gKft; // microA
        const double var_membrane_permeabilities__gKstt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fKstt * var_membrane_permeabilities__gKst; // milliS
        const double var_i_Kstt__i_Kstt = (-var_i_Ktot__E_Kt + var_chaste_interface__Vmt__Vmt) * var_chaste_interface__i_Kstt_rstt_gate__rstt * var_chaste_interface__i_Kstt_sstt_gate__sstt * var_membrane_permeabilities__gKstt; // microA
        const double var_membrane_permeabilities__gKtot = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fKtot * mParameters[3]; // milliS
        const double var_i_Ktot__i_Ktot = (-var_i_Ktot__E_Kt + var_chaste_interface__Vmt__Vmt) * (0.88600000000000001 * var_chaste_interface__i_Ktot_st_gate__st + 0.114 * var_chaste_interface__i_Ktot_sst_gate__sst) * var_chaste_interface__i_Ktot_rt_gate__rt * var_membrane_permeabilities__gKtot; // microA
        const double var_membrane_permeabilities__gNabt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fNabt * var_membrane_permeabilities__gNab; // milliS
        const double var_i_Nabt__i_Nabt = (-var_i_Nat__E_Nat + var_chaste_interface__Vmt__Vmt) * var_membrane_permeabilities__gNabt; // microA
        const double var_membrane_permeabilities__gNat = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fNat * mParameters[0]; // milliS
        const double var_i_Nat__i_Nat = pow(var_chaste_interface__i_Nat_m_gate__m, 3) * (-var_model_parameters__R * var_model_parameters__T * log((var_chaste_interface__ion_concentrations__Nat + 0.12 * var_chaste_interface__ion_concentrations__Kt) / (var_chaste_interface__ion_concentrations__Nai + 0.12 * var_chaste_interface__ion_concentrations__Ki)) / var_model_parameters__F + var_chaste_interface__Vmt__Vmt) * var_chaste_interface__i_Nat_h_gate__h * var_membrane_permeabilities__gNat; // microA
        const double var_membrane_permeabilities__i_NaCa_maxt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fNaCat * mParameters[2]; // microA
        const double var_i_NaCat__i_NaCat = (pow(var_chaste_interface__ion_concentrations__Nai, 3) * var_chaste_interface__ion_concentrations__Cat * exp(0.018700000000000001 * var_chaste_interface__Vmt__Vmt) - pow(var_chaste_interface__ion_concentrations__Nat, 3) * var_chaste_interface__ion_concentrations__Cai * exp(-0.018700000000000001 * var_chaste_interface__Vmt__Vmt)) * var_membrane_permeabilities__i_NaCa_maxt / (1.0 + 0.0001 * pow(var_chaste_interface__ion_concentrations__Nai, 3) * var_chaste_interface__ion_concentrations__Cat + 0.0001 * pow(var_chaste_interface__ion_concentrations__Nat, 3) * var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_membrane_permeabilities__i_NaK_maxt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fNaKt * var_membrane_permeabilities__i_NaK_max; // microA
        const double var_i_NaKt__i_NaKt = var_chaste_interface__ion_concentrations__Kt * var_membrane_permeabilities__i_NaK_maxt / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__ion_concentrations__Nai), 1.5)) * (1.5 + var_chaste_interface__ion_concentrations__Kt) * (1.0 + 0.1245 * exp(-0.10000000000000001 * var_chaste_interface__Vmt__Vmt * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)) + 0.0052142857142857138 * (-1.0 + exp(0.01485884101040119 * var_chaste_interface__ion_concentrations__Nat)) * exp(-var_chaste_interface__Vmt__Vmt * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)))); // microA
        const double var_membrane_permeabilities__i_pCa_maxt = (var_model_parameters__Sms + var_model_parameters__Smt) * var_membrane_permeabilities__fpCat * var_membrane_permeabilities__i_pCa_max; // microA
        const double var_i_pCat__i_pCat = var_chaste_interface__ion_concentrations__Cai * var_membrane_permeabilities__i_pCa_maxt / (0.00040000000000000002 + var_chaste_interface__ion_concentrations__Cai); // microA
        const double var_model_parameters__Cmt = var_model_parameters__Smt; // microF
        const double var_model_parameters__ptcm = 30000000.0; // per_cm2
        const double var_model_parameters__pt = var_model_parameters__Sms * var_model_parameters__ptcm; // dimensionless
        const double var_model_parameters__radiust = 1.5e-5; // cm
        const double var_model_parameters__Lt = 0.15915507752443828 * var_model_parameters__Smt / (var_model_parameters__pt * var_model_parameters__radiust); // cm
        const double var_model_parameters__Rst = 0.15915507752443828 * var_model_parameters__Lt * var_model_parameters__Rot / (var_model_parameters__pt * pow(var_model_parameters__radiust, 2)); // ohm
        const double var_i_circ__i_circ = 1000.0 * var_chaste_interface__Vmt__Vmt / var_model_parameters__Rst - 1000.0 * var_chaste_interface__Vms__Vms / var_model_parameters__Rst; // microA
        const double var_Vmt__Vmt_orig_deriv = 1000.0 * (-var_i_Cabt__i_Cabt - var_i_Cat__i_Cat - var_i_K1t__i_K1t - var_i_Kbt__i_Kbt - var_i_Kft__i_Kft - var_i_Kstt__i_Kstt - var_i_Ktot__i_Ktot - var_i_NaCat__i_NaCat - var_i_NaKt__i_NaKt - var_i_Nabt__i_Nabt - var_i_Nat__i_Nat - var_i_circ__i_circ - var_i_pCat__i_pCat) / var_model_parameters__Cmt; // millivolt / second
        const double d_dt_chaste_interface_var_Vmt__Vmt = 0.001 * var_Vmt__Vmt_orig_deriv; // millivolt / millisecond

        return d_dt_chaste_interface_var_Vmt__Vmt;
    }

    double Cellpasek_simurda_christe_2006FromCellMLGRL2::EvaluatePartialDerivative40(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__ion_concentrations__Cai = rY[1];
            // Units: millimolar; Initial value: 3.5486498e-05
            double var_chaste_interface__i_Nat_m_gate__m = rY[4];
            // Units: dimensionless; Initial value: 2.1832694e-06
            double var_chaste_interface__i_Nat_h_gate__h = rY[5];
            // Units: dimensionless; Initial value: 0.58232717
            double var_chaste_interface__i_Cat__Co = rY[10];
            // Units: dimensionless; Initial value: 2.543652e-06
            double var_chaste_interface__i_Cat__C1 = rY[11];
            // Units: dimensionless; Initial value: 0.99994546
            double var_chaste_interface__i_Cat__C2 = rY[12];
            // Units: dimensionless; Initial value: 0.99994546
            double var_chaste_interface__i_Cat__Ccast = rY[13];
            // Units: dimensionless; Initial value: 0.99570063
            double var_chaste_interface__i_Ktot_rt_gate__rt = rY[17];
            // Units: dimensionless; Initial value: 0.0023485094
            double var_chaste_interface__i_Ktot_st_gate__st = rY[18];
            // Units: dimensionless; Initial value: 0.98315865
            double var_chaste_interface__i_Ktot_sst_gate__sst = rY[19];
            // Units: dimensionless; Initial value: 0.67478532
            double var_chaste_interface__i_Kstt_rstt_gate__rstt = rY[22];
            // Units: dimensionless; Initial value: 0.0031079241
            double var_chaste_interface__i_Kstt_sstt_gate__sstt = rY[23];
            // Units: dimensionless; Initial value: 0.30773368
            double var_chaste_interface__i_Kft_qt_gate__qt = rY[25];
            // Units: dimensionless; Initial value: 0.0034357175
            double var_chaste_interface__ion_concentrations__Nai = rY[32];
            // Units: millimolar; Initial value: 6.9435814
            double var_chaste_interface__ion_concentrations__Ki = rY[33];
            // Units: millimolar; Initial value: 137.53311
            double var_chaste_interface__ion_concentrations__Nat = rY[34];
            // Units: millimolar; Initial value: 140.01386
            double var_chaste_interface__ion_concentrations__Cat = rY[35];
            // Units: millimolar; Initial value: 1.2271399
            double var_chaste_interface__ion_concentrations__Kt = rY[36];
            // Units: millimolar; Initial value: 5.3627676
            double var_chaste_interface__ion_concentrations__Cass = rY[37];
            // Units: millimolar; Initial value: 4.3112114e-05
            double var_chaste_interface__Vmt__Vmt = rY[40];
            // Units: millivolt; Initial value: -79.709536
            

            const double var_x24 = 1 / var_chaste_interface__ion_concentrations__Ki;
            const double var_x34 = pow(var_chaste_interface__ion_concentrations__Nai, 3);
            const double var_x41 = 1 / var_chaste_interface__ion_concentrations__Nai;
            const double var_x42 = pow(var_x41, 1.5);
            const double var_x43 = 1 / (1.0 + 31.622776601683793 * var_x42);
            const double var_x110 = var_x34 * var_chaste_interface__ion_concentrations__Cat;
            const double var_x111 = pow(var_chaste_interface__ion_concentrations__Nat, 3);
            const double var_x112 = var_x111 * var_chaste_interface__ion_concentrations__Cai;
            const double var_x113 = 1.0 + 0.0001 * var_x110 + 0.0001 * var_x112;
            const double var_x114 = mParameters[2] / var_x113;
            const double var_x116 = 0.018700000000000001 * var_chaste_interface__Vmt__Vmt;
            const double var_x117 = exp(-var_x116);
            const double var_x119 = exp(var_x116);
            const double var_x120 = var_x110 * var_x119;
            const double var_x121 = var_x112 * var_x117;
            const double var_x134 = 0.018700000000000001 * var_x120 + 0.018700000000000001 * var_x121;
            const double var_x286 = pow(var_chaste_interface__i_Nat_m_gate__m, 3) * mParameters[0];
            const double var_x292 = exp(-0.0039364457769891295 * var_chaste_interface__Vmt__Vmt);
            const double var_x293 = exp(0.01485884101040119 * var_chaste_interface__ion_concentrations__Nat);
            const double var_x294 = exp(-0.039364457769891288 * var_chaste_interface__Vmt__Vmt);
            const double var_x295 = 1.0 + 0.1245 * var_x292 + 0.0052142857142857138 * var_x294 * (-1.0 + var_x293);
            const double var_x297 = 1 / (1.5 + var_chaste_interface__ion_concentrations__Kt);
            const double var_x298 = var_x297 * var_chaste_interface__ion_concentrations__Kt;
            const double var_x302 = var_x298 * var_x43 / pow(var_x295, 2);
            const double var_x307 = var_x114 * var_x134;
            const double var_x308 = var_x302 * (0.00049008749923514655 * var_x292 + 0.039364457769891288 * var_x294 * (-0.0052142857142857138 + 0.0052142857142857138 * var_x293));
            const double var_x311 = log(var_x24 * var_chaste_interface__ion_concentrations__Kt);
            const double var_x312 = -25.403626943005182 * var_x311 + var_chaste_interface__Vmt__Vmt;
            const double var_x314 = var_chaste_interface__i_Ktot_rt_gate__rt * mParameters[3];
            const double var_x320 = var_chaste_interface__i_Kstt_rstt_gate__rstt * var_chaste_interface__i_Kstt_sstt_gate__sstt;
            const double var_x322 = exp(8.0548387096774192 - 8.064516129032258 * var_chaste_interface__ion_concentrations__Kt);
            const double var_x323 = exp(-0.10984612576230394 + 0.063494870382834648 * var_chaste_interface__Vmt__Vmt - 1.613 * var_x311);
            const double var_x324 = var_x323 * (1.0 + var_x322);
            const double var_x325 = 1.0 + var_x324;
            const double var_x326 = mParameters[1] / var_x325;
            const double var_x329 = (-1.73 + var_x312) * mParameters[1] / pow(var_x325, 2);
            const double var_x330 = var_x324 * var_x329;
            const double var_x342 = exp(0.078728915539782576 * var_chaste_interface__Vmt__Vmt);
            const double var_x343 = -1.0 + var_x342;
            const double var_x344 = 1 / var_x343;
            const double var_x345 = 0.10000000000000001 * var_chaste_interface__i_Cat__Ccast;
            const double var_x346 = 0.10000000000000001 - var_x345;
            const double var_x347 = 0.90000000000000002 + var_x345;
            const double var_x348 = var_x346 * var_chaste_interface__i_Cat__C2 + var_x347 * var_chaste_interface__i_Cat__C1;
            const double var_x349 = var_x344 * var_x348 * var_chaste_interface__Vmt__Vmt;
            const double var_x350 = var_x342 * var_chaste_interface__ion_concentrations__Cass;
            const double var_x351 = var_x350 - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Cat;
            const double var_x353 = var_x344 * var_chaste_interface__i_Cat__Co;
            const double var_x359 = var_x349 * var_chaste_interface__i_Cat__Co;
            const double var_x361 = var_x348 * var_x353;
            const double var_x362 = var_x350 * var_x359;
            const double var_x363 = var_x342 * var_x348 * var_x351 * var_chaste_interface__Vmt__Vmt * var_chaste_interface__i_Cat__Co / pow(var_x343, 2);
            const double var_x385 = var_x351 * var_x361;
            const double var_x388 = 0.99909090909090914 * var_x286;
            const double var_x390 = -0.11389636363636366 * var_chaste_interface__i_Ktot_sst_gate__sst - 0.88519454545454557 * var_chaste_interface__i_Ktot_st_gate__st;
            const double var_x398 = var_x314 * var_x390;
            
            partialF = -884.72466026051075 + var_x398 + 0.38992526421969426 * var_x363 + 0.063437147773395708 * var_x330 - 0.38992526421969426 * var_x362 - 1.4451136363636365 * var_x307 - 0.014486818181818184 * var_chaste_interface__i_Kft_qt_gate__qt - 4.9527579739449195 * var_x385 - 0.094913636363636381 * var_x320 - 0.99909090909090914 * var_x326 - 1.0526136363636363 * var_x308 - var_x388 * var_chaste_interface__i_Nat_h_gate__h;
        }
        else
        {
            const double y_save = rY[40];
            rY[40] += delta;
            const double temp = EvaluateYDerivative40(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[40])/delta;
            rY[40] = y_save;
        }
        return partialF;
    }

    std::vector<double> Cellpasek_simurda_christe_2006FromCellMLGRL2::ComputeDerivedQuantities(double var_chaste_interface__environment__time_converted, const std::vector<double> & rY)
    {
        // Inputs:
        // Time units: millisecond
        
        // Mathematics
        const double var_i_Stim__i_Stim_converted = -GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_model_parameters__Smtot = 0.0001; // cm2
        const double var_model_parameters__Vc = 0.00012738853503184712 * var_model_parameters__Smtot; // cm3
        const double var_model_parameters__Sms = -4400.0 * var_model_parameters__Vc + var_model_parameters__Smtot; // cm2
        const double var_model_parameters__Cms = var_model_parameters__Sms; // microF

        std::vector<double> dqs(3);
        dqs[0] = var_model_parameters__Cms;
        dqs[1] = var_i_Stim__i_Stim_converted;
        dqs[2] = var_chaste_interface__environment__time_converted;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellpasek_simurda_christe_2006FromCellMLGRL2>::Initialise(void)
{
    this->mSystemName = "pasek_simurda_christe_2006";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-79.709547);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(3.5486498e-05);

    // rY[2]:
    this->mVariableNames.push_back("i_Nas_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.1832558e-06);

    // rY[3]:
    this->mVariableNames.push_back("i_Nas_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.58232781);

    // rY[4]:
    this->mVariableNames.push_back("i_Nat_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.1832694e-06);

    // rY[5]:
    this->mVariableNames.push_back("i_Nat_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.58232717);

    // rY[6]:
    this->mVariableNames.push_back("i_Cas__Co");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.5436465e-06);

    // rY[7]:
    this->mVariableNames.push_back("i_Cas__C1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99994546);

    // rY[8]:
    this->mVariableNames.push_back("i_Cas__C2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99994546);

    // rY[9]:
    this->mVariableNames.push_back("i_Cas__Ccast");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99570063);

    // rY[10]:
    this->mVariableNames.push_back("i_Cat__Co");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.543652e-06);

    // rY[11]:
    this->mVariableNames.push_back("i_Cat__C1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99994546);

    // rY[12]:
    this->mVariableNames.push_back("i_Cat__C2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99994546);

    // rY[13]:
    this->mVariableNames.push_back("i_Cat__Ccast");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99570063);

    // rY[14]:
    this->mVariableNames.push_back("i_Ktos_rs_gate__rs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0023485072);

    // rY[15]:
    this->mVariableNames.push_back("i_Ktos_ss_gate__ss");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.98315843);

    // rY[16]:
    this->mVariableNames.push_back("i_Ktos_sss_gate__sss");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.6748337);

    // rY[17]:
    this->mVariableNames.push_back("i_Ktot_rt_gate__rt");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0023485094);

    // rY[18]:
    this->mVariableNames.push_back("i_Ktot_st_gate__st");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.98315865);

    // rY[19]:
    this->mVariableNames.push_back("i_Ktot_sst_gate__sst");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.67478532);

    // rY[20]:
    this->mVariableNames.push_back("i_Ksts_rsts_gate__rsts");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0031079213);

    // rY[21]:
    this->mVariableNames.push_back("i_Ksts_ssts_gate__ssts");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.30773393);

    // rY[22]:
    this->mVariableNames.push_back("i_Kstt_rstt_gate__rstt");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0031079241);

    // rY[23]:
    this->mVariableNames.push_back("i_Kstt_sstt_gate__sstt");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.30773368);

    // rY[24]:
    this->mVariableNames.push_back("i_Kfs_qs_gate__qs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0034357356);

    // rY[25]:
    this->mVariableNames.push_back("i_Kft_qt_gate__qt");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0034357175);

    // rY[26]:
    this->mVariableNames.push_back("JCaSRrel__F1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.67606483);

    // rY[27]:
    this->mVariableNames.push_back("JCaSRrel__F2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00038333331);

    // rY[28]:
    this->mVariableNames.push_back("JCaSRrel__F3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(6.4516879e-11);

    // rY[29]:
    this->mVariableNames.push_back("JCaSRrel__F4");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.32355462);

    // rY[30]:
    this->mVariableNames.push_back("CaSRup__CaSRup");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.22755058);

    // rY[31]:
    this->mVariableNames.push_back("CaSRrel__CaSRrel");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.22638169);

    // rY[32]:
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(6.9435814);

    // rY[33]:
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(137.53311);

    // rY[34]:
    this->mVariableNames.push_back("extracellular_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(140.01386);

    // rY[35]:
    this->mVariableNames.push_back("extracellular_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.2271399);

    // rY[36]:
    this->mVariableNames.push_back("extracellular_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(5.3627676);

    // rY[37]:
    this->mVariableNames.push_back("dyadic_space_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(4.3112114e-05);

    // rY[38]:
    this->mVariableNames.push_back("ion_concentrations__BTRH");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.92804169);

    // rY[39]:
    this->mVariableNames.push_back("ion_concentrations__BTRL");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.034317829);

    // rY[40]:
    this->mVariableNames.push_back("Vmt__Vmt");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-79.709536);

    // mParameters[0]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_cm2");

    // mParameters[1]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_cm2");

    // mParameters[2]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("microA_per_cm2");

    // mParameters[3]:
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
    this->mParameterUnits.push_back("milliS_per_cm2");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("membrane_capacitance");
    this->mDerivedQuantityUnits.push_back("microF");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellpasek_simurda_christe_2006FromCellMLGRL2)

