//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: clancy_rudy_2002
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: GeneralizedRushLarsenSecondOrder)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "clancy_rudy_2002.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"


    boost::shared_ptr<RegularStimulus> Cellclancy_rudy_2002FromCellMLGRL2::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__stim_amplitude_converted = -50.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        const double var_chaste_interface__membrane__stim_duration_converted = 2.0; // millisecond
        const double var_chaste_interface__membrane__stim_period_converted = 1000.0; // millisecond
        const double var_chaste_interface__membrane__stim_start_converted = 3000.0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__stim_amplitude_converted),
                var_chaste_interface__membrane__stim_duration_converted,
                var_chaste_interface__membrane__stim_period_converted,
                var_chaste_interface__membrane__stim_start_converted
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    Cellclancy_rudy_2002FromCellMLGRL2::Cellclancy_rudy_2002FromCellMLGRL2(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractGeneralizedRushLarsenCardiacCell(
                35,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellclancy_rudy_2002FromCellMLGRL2>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        
        this->mParameters[0] = 60000.0; // (var_calcium_dynamics__G_rel_max) [per_second]
        this->mParameters[1] = 1.8; // (var_calcium_dynamics__Cao) [millimolar]
        this->mParameters[2] = 4.5; // (var_ionic_concentrations__Ko) [millimolar]
        this->mParameters[3] = 132.0; // (var_ionic_concentrations__Nao) [millimolar]
        this->mParameters[4] = 1.0; // (var_L_type_Ca_channel__P_scale) [dimensionless]
        this->mParameters[5] = 0.001; // (var_membrane__Cm) [microF]
        this->mParameters[6] = 23.5; // (var_fast_sodium_current__g_Na) [milliS_per_microF]
        this->mParameters[7] = 0.75; // (var_time_independent_potassium_current__g_K1_max) [milliS_per_cm2]
        this->mParameters[8] = 0.0135; // (var_rapid_delayed_rectifier_potassium_current__g_Kr_max) [milliS_per_microF]
        this->mParameters[9] = 1.1699999999999999; // (var_slow_delayed_rectifier_potassium_current__g_Ks_max) [dimensionless]
        this->mParameters[10] = 0.00025000000000000001; // (var_Na_Ca_exchanger__c1) [microA_per_microF]
        this->mParameters[11] = 1.0; // (var_transient_outward_current__g_to_max) [dimensionless]
    }

    Cellclancy_rudy_2002FromCellMLGRL2::~Cellclancy_rudy_2002FromCellMLGRL2()
    {
    }

    
    double Cellclancy_rudy_2002FromCellMLGRL2::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000104
        double var_chaste_interface__Na_channel_states__P_O_Na = rY[2];
        // Units: dimensionless; Initial value: 3.756e-13
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[11];
        // Units: dimensionless; Initial value: 3.289e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[12];
        // Units: dimensionless; Initial value: 0.99975
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = rY[13];
        // Units: dimensionless; Initial value: 0.000983
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = rY[14];
        // Units: dimensionless; Initial value: 0.9942
        double var_chaste_interface__Kr_channel_states__P_O = rY[15];
        // Units: dimensionless; Initial value: 1.104e-10
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = rY[20];
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = rY[21];
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = rY[22];
        // Units: dimensionless; Initial value: 0.01167
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = rY[23];
        // Units: dimensionless; Initial value: 0.99998
        double var_chaste_interface__ionic_concentrations__Nai = rY[33];
        // Units: millimolar; Initial value: 10.532
        double var_chaste_interface__ionic_concentrations__Ki = rY[34];
        // Units: millimolar; Initial value: 140.557
        
        const double var_ATP_sensitive_potassium_current__ATPi = 3.0; // millimolar
        const double var_ATP_sensitive_potassium_current__hATP = 2.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__i_K_ATP_on = 1.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__kATP = 0.00025000000000000001; // millimolar
        const double var_ATP_sensitive_potassium_current__nATP = 0.23999999999999999; // dimensionless
        const double var_ATP_sensitive_potassium_current__nicholsarea = 5.0000000000000002e-5; // dimensionless
        const double var_ATP_sensitive_potassium_current__g_K_ATP = 0.000193 * var_ATP_sensitive_potassium_current__i_K_ATP_on / var_ATP_sensitive_potassium_current__nicholsarea; // milliS_per_microF
        const double var_ATP_sensitive_potassium_current__pATP = 1 / (1.0 + pow((var_ATP_sensitive_potassium_current__ATPi / var_ATP_sensitive_potassium_current__kATP), var_ATP_sensitive_potassium_current__hATP)); // dimensionless
        const double var_L_type_Ca_channel__P_Ca = 0.00054000000000000001; // cm_per_second
        const double var_L_type_Ca_channel__P_K = 1.9299999999999999e-7; // cm_per_second
        const double var_L_type_Ca_channel__P_Na = 6.75e-7; // cm_per_second
        const double var_L_type_Ca_channel__gamma_Cai = 1.0; // dimensionless
        const double var_L_type_Ca_channel__gamma_Cao = 0.34100000000000003; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ki = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ko = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nai = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nao = 0.75; // dimensionless
        const double var_L_type_Ca_channel_f_Ca_gate__Km_Ca = 0.00059999999999999995; // millimolar
        const double var_Na_Ca_exchanger__c2 = 0.0001; // millimolar
        const double var_Na_Ca_exchanger__gamma = 0.14999999999999999; // dimensionless
        const double var_T_type_Ca_channel__g_CaT = 0.050000000000000003; // milliS_per_microF
        const double var_calcium_background_current__g_Cab = 0.003016; // milliS_per_microF
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + var_chaste_interface__calcium_dynamics__Cai / var_L_type_Ca_channel_f_Ca_gate__Km_Ca); // dimensionless
        const double var_ATP_sensitive_potassium_current__GKbaraATP = pow((0.25 * mParameters[2]), var_ATP_sensitive_potassium_current__nATP) * var_ATP_sensitive_potassium_current__g_K_ATP * var_ATP_sensitive_potassium_current__pATP; // milliS_per_microF
        const double var_membrane__F = 96485.0; // coulomb_per_mole
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_calcium_background_current__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(mParameters[1] / var_chaste_interface__calcium_dynamics__Cai) / var_membrane__F; // millivolt
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(mParameters[3] / var_chaste_interface__ionic_concentrations__Nai) / var_membrane__F; // millivolt
        const double var_L_type_Ca_channel__I_CaCa = 4.0 * pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Cao * mParameters[1] + var_L_type_Ca_channel__gamma_Cai * var_chaste_interface__calcium_dynamics__Cai * exp(2.0 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_Ca * mParameters[4] * var_chaste_interface__membrane__V / ((-1.0 + exp(2.0 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaK = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * mParameters[2] + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_K * mParameters[4] * var_chaste_interface__membrane__V / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaNa = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * mParameters[3] + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_Na * mParameters[4] * var_chaste_interface__membrane__V / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaCa = var_L_type_Ca_channel__I_CaCa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaK = var_L_type_Ca_channel__I_CaK * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaNa = var_L_type_Ca_channel__I_CaNa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_CaCa + var_L_type_Ca_channel__i_CaK + var_L_type_Ca_channel__i_CaNa; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L_converted = HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L; // uA_per_cm2
        const double var_Na_Ca_exchanger__i_NaCa = (-pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * mParameters[10] * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) / (1.0 + (pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_Na_Ca_exchanger__c2 * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // microA_per_microF
        const double var_Na_Ca_exchanger__i_NaCa_converted = HeartConfig::Instance()->GetCapacitance() * var_Na_Ca_exchanger__i_NaCa; // uA_per_cm2
        const double var_T_type_Ca_channel__i_Ca_T = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2) * (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_T_type_Ca_channel__g_CaT * var_chaste_interface__T_type_Ca_channel_g_gate__g; // microA_per_microF
        const double var_calcium_background_current__i_Ca_b = (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_calcium_background_current__g_Cab; // microA_per_microF
        const double var_fast_sodium_current__i_Na = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__Na_channel_states__P_O_Na * mParameters[6]; // microA_per_microF
        const double var_fast_sodium_current__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na; // uA_per_cm2
        const double var_non_specific_calcium_activated_current__K_m_ns_Ca = 0.0011999999999999999; // millimolar
        const double var_non_specific_calcium_activated_current__P_ns_Ca = 0; // cm_per_second
        const double var_non_specific_calcium_activated_current__I_ns_K = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * mParameters[2] + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__I_ns_Na = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * mParameters[3] + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_K = var_non_specific_calcium_activated_current__I_ns_K / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Na = var_non_specific_calcium_activated_current__I_ns_Na / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Ca = var_non_specific_calcium_activated_current__i_ns_K + var_non_specific_calcium_activated_current__i_ns_Na; // microA_per_microF
        const double var_plateau_potassium_current__Kp = 1 / (1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_plateau_potassium_current__g_Kp = 0.0055199999999999997; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__E_Kr = var_membrane__R * var_membrane__T * log(mParameters[2] / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_rapid_delayed_rectifier_potassium_current__g_Kr = pow(mParameters[2], 0.58999999999999997) * mParameters[8]; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_rapid_delayed_rectifier_potassium_current__E_Kr + var_chaste_interface__membrane__V) * var_chaste_interface__Kr_channel_states__P_O * var_rapid_delayed_rectifier_potassium_current__g_Kr; // microA_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_rapid_delayed_rectifier_potassium_current__i_Kr; // uA_per_cm2
        const double var_sarcolemmal_calcium_pump__I_pCa = 1.1499999999999999; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__K_mpCa = 0.00050000000000000001; // millimolar
        const double var_sarcolemmal_calcium_pump__i_p_Ca = var_chaste_interface__calcium_dynamics__Cai * var_sarcolemmal_calcium_pump__I_pCa / (var_chaste_interface__calcium_dynamics__Cai + var_sarcolemmal_calcium_pump__K_mpCa); // microA_per_microF
        const double var_slow_delayed_rectifier_potassium_current__PNaK = 0.018329999999999999; // dimensionless
        const double var_slow_delayed_rectifier_potassium_current__E_Ks = var_membrane__R * var_membrane__T * log((mParameters[3] * var_slow_delayed_rectifier_potassium_current__PNaK + mParameters[2]) / (var_chaste_interface__ionic_concentrations__Nai * var_slow_delayed_rectifier_potassium_current__PNaK + var_chaste_interface__ionic_concentrations__Ki)) / var_membrane__F; // millivolt
        const double var_slow_delayed_rectifier_potassium_current__g_Ks = 0.433 * (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * mParameters[9]; // milliS_per_microF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = (-var_slow_delayed_rectifier_potassium_current__E_Ks + var_chaste_interface__membrane__V) * var_slow_delayed_rectifier_potassium_current__g_Ks * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2; // microA_per_microF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks_converted = HeartConfig::Instance()->GetCapacitance() * var_slow_delayed_rectifier_potassium_current__i_Ks; // uA_per_cm2
        const double var_sodium_activated_potassium_current__g_K_Na = 0; // milliS_per_microF
        const double var_sodium_activated_potassium_current__kdKNa = 66.0; // millimolar
        const double var_sodium_activated_potassium_current__nKNa = 2.7999999999999998; // dimensionless
        const double var_sodium_activated_potassium_current__pona = 0.84999999999999998 / (1.0 + pow((var_sodium_activated_potassium_current__kdKNa / var_chaste_interface__ionic_concentrations__Nai), var_sodium_activated_potassium_current__nKNa)); // dimensionless
        const double var_sodium_activated_potassium_current__pov = 0.80000000000000004 - 0.65000000000000002 / (1.0 + exp(8.3333333333333339 + 0.066666666666666666 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_sodium_background_current__g_Nab = 0.0040000000000000001; // milliS_per_microF
        const double var_sodium_background_current__i_Na_b = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_sodium_background_current__g_Nab; // microA_per_microF
        const double var_sodium_potassium_pump__I_NaK = 2.25; // microA_per_microF
        const double var_sodium_potassium_pump__K_mKo = 1.5; // millimolar
        const double var_sodium_potassium_pump__K_mNai = 10.0; // millimolar
        const double var_sodium_potassium_pump__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * mParameters[3]); // dimensionless
        const double var_sodium_potassium_pump__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + 0.036499999999999998 * var_sodium_potassium_pump__sigma * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // dimensionless
        const double var_sodium_potassium_pump__i_NaK = mParameters[2] * var_sodium_potassium_pump__I_NaK * var_sodium_potassium_pump__f_NaK / ((1.0 + pow(var_sodium_potassium_pump__K_mNai, 2) / pow(var_chaste_interface__ionic_concentrations__Nai, 2)) * (mParameters[2] + var_sodium_potassium_pump__K_mKo)); // microA_per_microF
        const double var_time_independent_potassium_current__E_K = var_membrane__R * var_membrane__T * log(mParameters[2] / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_ATP_sensitive_potassium_current__i_K_ATP = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_ATP_sensitive_potassium_current__GKbaraATP; // microA_per_microF
        const double var_plateau_potassium_current__i_Kp = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_plateau_potassium_current__Kp * var_plateau_potassium_current__g_Kp; // microA_per_microF
        const double var_sodium_activated_potassium_current__i_K_Na = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_sodium_activated_potassium_current__g_K_Na * var_sodium_activated_potassium_current__pona * var_sodium_activated_potassium_current__pov; // microA_per_microF
        const double var_time_independent_potassium_current__g_K1 = 0.43033148291193518 * sqrt(mParameters[2]) * mParameters[7]; // milliS_per_cm2
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K)); // per_second
        const double var_time_independent_potassium_current_K1_gate__beta_K1 = 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V)); // per_second
        const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_microF
        const double var_time_independent_potassium_current__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_time_independent_potassium_current__i_K1; // uA_per_cm2
        const double var_transient_outward_current__g_to = 1.1000000000000001; // milliS_per_microF
        const double var_transient_outward_current__rvdv = exp(0.01 * var_chaste_interface__membrane__V); // dimensionless
        const double var_transient_outward_current__i_to = pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_transient_outward_current__g_to * mParameters[11] * var_transient_outward_current__rvdv * var_chaste_interface__transient_outward_current_ydv_gate__ydv; // microA_per_microF
        const double var_transient_outward_current__i_to_converted = HeartConfig::Instance()->GetCapacitance() * var_transient_outward_current__i_to; // uA_per_cm2
        const double var_chaste_interface__i_ionic = HeartConfig::Instance()->GetCapacitance() * var_ATP_sensitive_potassium_current__i_K_ATP + HeartConfig::Instance()->GetCapacitance() * var_T_type_Ca_channel__i_Ca_T + HeartConfig::Instance()->GetCapacitance() * var_calcium_background_current__i_Ca_b + HeartConfig::Instance()->GetCapacitance() * var_non_specific_calcium_activated_current__i_ns_Ca + HeartConfig::Instance()->GetCapacitance() * var_plateau_potassium_current__i_Kp + HeartConfig::Instance()->GetCapacitance() * var_sarcolemmal_calcium_pump__i_p_Ca + HeartConfig::Instance()->GetCapacitance() * var_sodium_activated_potassium_current__i_K_Na + HeartConfig::Instance()->GetCapacitance() * var_sodium_background_current__i_Na_b + HeartConfig::Instance()->GetCapacitance() * var_sodium_potassium_pump__i_NaK + var_L_type_Ca_channel__i_Ca_L_converted + var_Na_Ca_exchanger__i_NaCa_converted + var_fast_sodium_current__i_Na_converted + var_rapid_delayed_rectifier_potassium_current__i_Kr_converted + var_slow_delayed_rectifier_potassium_current__i_Ks_converted + var_time_independent_potassium_current__i_K1_converted + var_transient_outward_current__i_to_converted; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellclancy_rudy_2002FromCellMLGRL2::UpdateTransmembranePotential(double var_chaste_interface__environment__time_converted)
    {
        std::vector<double>& rY = rGetStateVariables();
        const unsigned v_index = GetVoltageIndex();
        const double delta = 1e-8;
        const double yinit = rY[v_index];

        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000104
        double var_chaste_interface__Na_channel_states__P_O_Na = rY[2];
        // Units: dimensionless; Initial value: 3.756e-13
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[11];
        // Units: dimensionless; Initial value: 3.289e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[12];
        // Units: dimensionless; Initial value: 0.99975
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = rY[13];
        // Units: dimensionless; Initial value: 0.000983
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = rY[14];
        // Units: dimensionless; Initial value: 0.9942
        double var_chaste_interface__Kr_channel_states__P_O = rY[15];
        // Units: dimensionless; Initial value: 1.104e-10
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = rY[20];
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = rY[21];
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = rY[22];
        // Units: dimensionless; Initial value: 0.01167
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = rY[23];
        // Units: dimensionless; Initial value: 0.99998
        double var_chaste_interface__ionic_concentrations__Nai = rY[33];
        // Units: millimolar; Initial value: 10.532
        double var_chaste_interface__ionic_concentrations__Ki = rY[34];
        // Units: millimolar; Initial value: 140.557
        

        // Mathematics
        double d_dt_chaste_interface_var_membrane__V;
        const double var_ATP_sensitive_potassium_current__ATPi = 3.0; // millimolar
        const double var_ATP_sensitive_potassium_current__hATP = 2.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__i_K_ATP_on = 1.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__kATP = 0.00025000000000000001; // millimolar
        const double var_ATP_sensitive_potassium_current__nATP = 0.23999999999999999; // dimensionless
        const double var_ATP_sensitive_potassium_current__nicholsarea = 5.0000000000000002e-5; // dimensionless
        const double var_ATP_sensitive_potassium_current__g_K_ATP = 0.000193 * var_ATP_sensitive_potassium_current__i_K_ATP_on / var_ATP_sensitive_potassium_current__nicholsarea; // milliS_per_microF
        const double var_ATP_sensitive_potassium_current__pATP = 1 / (1.0 + pow((var_ATP_sensitive_potassium_current__ATPi / var_ATP_sensitive_potassium_current__kATP), var_ATP_sensitive_potassium_current__hATP)); // dimensionless
        const double var_L_type_Ca_channel__P_Ca = 0.00054000000000000001; // cm_per_second
        const double var_L_type_Ca_channel__P_K = 1.9299999999999999e-7; // cm_per_second
        const double var_L_type_Ca_channel__P_Na = 6.75e-7; // cm_per_second
        const double var_L_type_Ca_channel__gamma_Cai = 1.0; // dimensionless
        const double var_L_type_Ca_channel__gamma_Cao = 0.34100000000000003; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ki = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ko = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nai = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nao = 0.75; // dimensionless
        const double var_L_type_Ca_channel_f_Ca_gate__Km_Ca = 0.00059999999999999995; // millimolar
        const double var_Na_Ca_exchanger__c2 = 0.0001; // millimolar
        const double var_Na_Ca_exchanger__gamma = 0.14999999999999999; // dimensionless
        const double var_T_type_Ca_channel__g_CaT = 0.050000000000000003; // milliS_per_microF
        const double var_calcium_background_current__g_Cab = 0.003016; // milliS_per_microF
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + var_chaste_interface__calcium_dynamics__Cai / var_L_type_Ca_channel_f_Ca_gate__Km_Ca); // dimensionless
        const double var_ATP_sensitive_potassium_current__GKbaraATP = pow((0.25 * mParameters[2]), var_ATP_sensitive_potassium_current__nATP) * var_ATP_sensitive_potassium_current__g_K_ATP * var_ATP_sensitive_potassium_current__pATP; // milliS_per_microF
        const double var_membrane__F = 96485.0; // coulomb_per_mole
        const double var_membrane__I_st_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_membrane__I_st = var_membrane__I_st_converted / HeartConfig::Instance()->GetCapacitance(); // microA_per_microF
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_calcium_background_current__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(mParameters[1] / var_chaste_interface__calcium_dynamics__Cai) / var_membrane__F; // millivolt
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(mParameters[3] / var_chaste_interface__ionic_concentrations__Nai) / var_membrane__F; // millivolt
        const double var_L_type_Ca_channel__I_CaCa = 4.0 * pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Cao * mParameters[1] + var_L_type_Ca_channel__gamma_Cai * var_chaste_interface__calcium_dynamics__Cai * exp(2.0 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_Ca * mParameters[4] * var_chaste_interface__membrane__V / ((-1.0 + exp(2.0 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaK = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * mParameters[2] + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_K * mParameters[4] * var_chaste_interface__membrane__V / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaNa = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * mParameters[3] + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_Na * mParameters[4] * var_chaste_interface__membrane__V / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaCa = var_L_type_Ca_channel__I_CaCa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaK = var_L_type_Ca_channel__I_CaK * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaNa = var_L_type_Ca_channel__I_CaNa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_CaCa + var_L_type_Ca_channel__i_CaK + var_L_type_Ca_channel__i_CaNa; // microA_per_microF
        const double var_Na_Ca_exchanger__i_NaCa = (-pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * mParameters[10] * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) / (1.0 + (pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_Na_Ca_exchanger__c2 * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // microA_per_microF
        const double var_T_type_Ca_channel__i_Ca_T = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2) * (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_T_type_Ca_channel__g_CaT * var_chaste_interface__T_type_Ca_channel_g_gate__g; // microA_per_microF
        const double var_calcium_background_current__i_Ca_b = (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_calcium_background_current__g_Cab; // microA_per_microF
        const double var_fast_sodium_current__i_Na = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__Na_channel_states__P_O_Na * mParameters[6]; // microA_per_microF
        const double var_non_specific_calcium_activated_current__K_m_ns_Ca = 0.0011999999999999999; // millimolar
        const double var_non_specific_calcium_activated_current__P_ns_Ca = 0; // cm_per_second
        const double var_non_specific_calcium_activated_current__I_ns_K = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * mParameters[2] + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__I_ns_Na = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * mParameters[3] + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_K = var_non_specific_calcium_activated_current__I_ns_K / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Na = var_non_specific_calcium_activated_current__I_ns_Na / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Ca = var_non_specific_calcium_activated_current__i_ns_K + var_non_specific_calcium_activated_current__i_ns_Na; // microA_per_microF
        const double var_plateau_potassium_current__Kp = 1 / (1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_plateau_potassium_current__g_Kp = 0.0055199999999999997; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__E_Kr = var_membrane__R * var_membrane__T * log(mParameters[2] / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_rapid_delayed_rectifier_potassium_current__g_Kr = pow(mParameters[2], 0.58999999999999997) * mParameters[8]; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_rapid_delayed_rectifier_potassium_current__E_Kr + var_chaste_interface__membrane__V) * var_chaste_interface__Kr_channel_states__P_O * var_rapid_delayed_rectifier_potassium_current__g_Kr; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__I_pCa = 1.1499999999999999; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__K_mpCa = 0.00050000000000000001; // millimolar
        const double var_sarcolemmal_calcium_pump__i_p_Ca = var_chaste_interface__calcium_dynamics__Cai * var_sarcolemmal_calcium_pump__I_pCa / (var_chaste_interface__calcium_dynamics__Cai + var_sarcolemmal_calcium_pump__K_mpCa); // microA_per_microF
        const double var_slow_delayed_rectifier_potassium_current__PNaK = 0.018329999999999999; // dimensionless
        const double var_slow_delayed_rectifier_potassium_current__E_Ks = var_membrane__R * var_membrane__T * log((mParameters[3] * var_slow_delayed_rectifier_potassium_current__PNaK + mParameters[2]) / (var_chaste_interface__ionic_concentrations__Nai * var_slow_delayed_rectifier_potassium_current__PNaK + var_chaste_interface__ionic_concentrations__Ki)) / var_membrane__F; // millivolt
        const double var_slow_delayed_rectifier_potassium_current__g_Ks = 0.433 * (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * mParameters[9]; // milliS_per_microF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = (-var_slow_delayed_rectifier_potassium_current__E_Ks + var_chaste_interface__membrane__V) * var_slow_delayed_rectifier_potassium_current__g_Ks * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2; // microA_per_microF
        const double var_sodium_activated_potassium_current__g_K_Na = 0; // milliS_per_microF
        const double var_sodium_activated_potassium_current__kdKNa = 66.0; // millimolar
        const double var_sodium_activated_potassium_current__nKNa = 2.7999999999999998; // dimensionless
        const double var_sodium_activated_potassium_current__pona = 0.84999999999999998 / (1.0 + pow((var_sodium_activated_potassium_current__kdKNa / var_chaste_interface__ionic_concentrations__Nai), var_sodium_activated_potassium_current__nKNa)); // dimensionless
        const double var_sodium_activated_potassium_current__pov = 0.80000000000000004 - 0.65000000000000002 / (1.0 + exp(8.3333333333333339 + 0.066666666666666666 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_sodium_background_current__g_Nab = 0.0040000000000000001; // milliS_per_microF
        const double var_sodium_background_current__i_Na_b = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_sodium_background_current__g_Nab; // microA_per_microF
        const double var_sodium_potassium_pump__I_NaK = 2.25; // microA_per_microF
        const double var_sodium_potassium_pump__K_mKo = 1.5; // millimolar
        const double var_sodium_potassium_pump__K_mNai = 10.0; // millimolar
        const double var_sodium_potassium_pump__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * mParameters[3]); // dimensionless
        const double var_sodium_potassium_pump__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + 0.036499999999999998 * var_sodium_potassium_pump__sigma * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // dimensionless
        const double var_sodium_potassium_pump__i_NaK = mParameters[2] * var_sodium_potassium_pump__I_NaK * var_sodium_potassium_pump__f_NaK / ((1.0 + pow(var_sodium_potassium_pump__K_mNai, 2) / pow(var_chaste_interface__ionic_concentrations__Nai, 2)) * (mParameters[2] + var_sodium_potassium_pump__K_mKo)); // microA_per_microF
        const double var_time_independent_potassium_current__E_K = var_membrane__R * var_membrane__T * log(mParameters[2] / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_ATP_sensitive_potassium_current__i_K_ATP = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_ATP_sensitive_potassium_current__GKbaraATP; // microA_per_microF
        const double var_plateau_potassium_current__i_Kp = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_plateau_potassium_current__Kp * var_plateau_potassium_current__g_Kp; // microA_per_microF
        const double var_sodium_activated_potassium_current__i_K_Na = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_sodium_activated_potassium_current__g_K_Na * var_sodium_activated_potassium_current__pona * var_sodium_activated_potassium_current__pov; // microA_per_microF
        const double var_time_independent_potassium_current__g_K1 = 0.43033148291193518 * sqrt(mParameters[2]) * mParameters[7]; // milliS_per_cm2
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K)); // per_second
        const double var_time_independent_potassium_current_K1_gate__beta_K1 = 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V)); // per_second
        const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_microF
        const double var_transient_outward_current__g_to = 1.1000000000000001; // milliS_per_microF
        const double var_transient_outward_current__rvdv = exp(0.01 * var_chaste_interface__membrane__V); // dimensionless
        const double var_transient_outward_current__i_to = pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_transient_outward_current__g_to * mParameters[11] * var_transient_outward_current__rvdv * var_chaste_interface__transient_outward_current_ydv_gate__ydv; // microA_per_microF
        const double var_membrane__V_orig_deriv = -(var_ATP_sensitive_potassium_current__i_K_ATP + var_L_type_Ca_channel__i_Ca_L + var_Na_Ca_exchanger__i_NaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_fast_sodium_current__i_Na + var_membrane__I_st + var_non_specific_calcium_activated_current__i_ns_Ca + var_plateau_potassium_current__i_Kp + var_rapid_delayed_rectifier_potassium_current__i_Kr + var_sarcolemmal_calcium_pump__i_p_Ca + var_slow_delayed_rectifier_potassium_current__i_Ks + var_sodium_activated_potassium_current__i_K_Na + var_sodium_background_current__i_Na_b + var_sodium_potassium_pump__i_NaK + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) / mParameters[5]; // millivolt / second
        d_dt_chaste_interface_var_membrane__V = 0.001 * var_membrane__V_orig_deriv; // millivolt / millisecond

        double evalF = d_dt_chaste_interface_var_membrane__V;
        mEvalF[0] = d_dt_chaste_interface_var_membrane__V;
        double partialF = EvaluatePartialDerivative0(var_chaste_interface__environment__time_converted, rY, delta, true);
        if (fabs(partialF) < delta)
        {
            rY[v_index] += 0.5*evalF*mDt;
        }
        else
        {
            rY[v_index] += (evalF/partialF)*(exp(partialF*0.5*mDt)-1.0);
        }

        rY[v_index] = yinit;
        evalF = EvaluateYDerivative0(var_chaste_interface__environment__time_converted, rY);
        mEvalF[0] = evalF;
        partialF = EvaluatePartialDerivative0(var_chaste_interface__environment__time_converted, rY, delta, true);
        if (fabs(partialF) < delta)
        {
            rY[v_index] = yinit + evalF*mDt;
        }
        else
        {
            rY[v_index] = yinit + (evalF/partialF)*(exp(partialF*mDt)-1.0);
        }
    }

    void Cellclancy_rudy_2002FromCellMLGRL2::ComputeOneStepExceptVoltage(double var_chaste_interface__environment__time_converted)
    {
        std::vector<double>& rY = rGetStateVariables();
        const double delta=1e-8;
        const unsigned size = GetNumberOfStateVariables();
        mYInit = rY;
        double y_save;

        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000104
        double var_chaste_interface__Na_channel_states__P_O_Na = rY[2];
        // Units: dimensionless; Initial value: 3.756e-13
        double var_chaste_interface__Na_channel_states__P_C1 = rY[3];
        // Units: dimensionless; Initial value: 4.744e-10
        double var_chaste_interface__Na_channel_states__P_C2 = rY[4];
        // Units: dimensionless; Initial value: 9.776e-08
        double var_chaste_interface__Na_channel_states__P_C3 = rY[5];
        // Units: dimensionless; Initial value: 7.583e-06
        double var_chaste_interface__Na_channel_states__P_IF = rY[6];
        // Units: dimensionless; Initial value: 8.147e-11
        double var_chaste_interface__Na_channel_states__P_IC3 = rY[7];
        // Units: dimensionless; Initial value: 1.302e-06
        double var_chaste_interface__Na_channel_states__P_IC2 = rY[8];
        // Units: dimensionless; Initial value: 1.679e-08
        double var_chaste_interface__Na_channel_states__P_IM1 = rY[9];
        // Units: dimensionless; Initial value: 9.736e-12
        double var_chaste_interface__Na_channel_states__P_IM2 = rY[10];
        // Units: dimensionless; Initial value: 6.187e-14
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[11];
        // Units: dimensionless; Initial value: 3.289e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[12];
        // Units: dimensionless; Initial value: 0.99975
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = rY[13];
        // Units: dimensionless; Initial value: 0.000983
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = rY[14];
        // Units: dimensionless; Initial value: 0.9942
        double var_chaste_interface__Kr_channel_states__P_O = rY[15];
        // Units: dimensionless; Initial value: 1.104e-10
        double var_chaste_interface__Kr_channel_states__P_C1 = rY[16];
        // Units: dimensionless; Initial value: 3.4083e-08
        double var_chaste_interface__Kr_channel_states__P_C2 = rY[17];
        // Units: dimensionless; Initial value: 1.69e-08
        double var_chaste_interface__Kr_channel_states__P_C3 = rY[18];
        // Units: dimensionless; Initial value: 4.949e-06
        double var_chaste_interface__Kr_channel_states__P_I = rY[19];
        // Units: dimensionless; Initial value: 3.386e-11
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = rY[20];
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = rY[21];
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = rY[22];
        // Units: dimensionless; Initial value: 0.01167
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = rY[23];
        // Units: dimensionless; Initial value: 0.99998
        double var_chaste_interface__calcium_dynamics__Ca_JSR = rY[24];
        // Units: millimolar; Initial value: 1.516
        double var_chaste_interface__calcium_dynamics__Ca_NSR = rY[25];
        // Units: millimolar; Initial value: 1.518
        double var_chaste_interface__calcium_dynamics__APtrack = rY[26];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__APtrack2 = rY[27];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__APtrack3 = rY[28];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__Cainfluxtrack = rY[29];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack = rY[30];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack2 = rY[31];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack3 = rY[32];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ionic_concentrations__Nai = rY[33];
        // Units: millimolar; Initial value: 10.532
        double var_chaste_interface__ionic_concentrations__Ki = rY[34];
        // Units: millimolar; Initial value: 140.557
        

        // Mathematics
        double d_dt_chaste_interface_var_membrane__V;
        const double var_ATP_sensitive_potassium_current__ATPi = 3.0; // millimolar
        const double var_ATP_sensitive_potassium_current__hATP = 2.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__i_K_ATP_on = 1.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__kATP = 0.00025000000000000001; // millimolar
        const double var_ATP_sensitive_potassium_current__nATP = 0.23999999999999999; // dimensionless
        const double var_ATP_sensitive_potassium_current__nicholsarea = 5.0000000000000002e-5; // dimensionless
        const double var_ATP_sensitive_potassium_current__g_K_ATP = 0.000193 * var_ATP_sensitive_potassium_current__i_K_ATP_on / var_ATP_sensitive_potassium_current__nicholsarea; // milliS_per_microF
        const double var_ATP_sensitive_potassium_current__pATP = 1 / (1.0 + pow((var_ATP_sensitive_potassium_current__ATPi / var_ATP_sensitive_potassium_current__kATP), var_ATP_sensitive_potassium_current__hATP)); // dimensionless
        const double var_Kr_channel_states__alpha_in = 2172.0; // per_second
        const double var_Kr_channel_states__beta_in = 1077.0; // per_second
        const double var_L_type_Ca_channel__P_Ca = 0.00054000000000000001; // cm_per_second
        const double var_L_type_Ca_channel__P_K = 1.9299999999999999e-7; // cm_per_second
        const double var_L_type_Ca_channel__P_Na = 6.75e-7; // cm_per_second
        const double var_L_type_Ca_channel__gamma_Cai = 1.0; // dimensionless
        const double var_L_type_Ca_channel__gamma_Cao = 0.34100000000000003; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ki = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ko = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nai = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nao = 0.75; // dimensionless
        const double var_L_type_Ca_channel_f_Ca_gate__Km_Ca = 0.00059999999999999995; // millimolar
        const double var_Na_Ca_exchanger__c2 = 0.0001; // millimolar
        const double var_Na_Ca_exchanger__gamma = 0.14999999999999999; // dimensionless
        const double var_T_type_Ca_channel__g_CaT = 0.050000000000000003; // milliS_per_microF
        const double var_calcium_background_current__g_Cab = 0.003016; // milliS_per_microF
        const double var_calcium_dynamics__APtrack2_orig_deriv = (((var_chaste_interface__calcium_dynamics__APtrack > 0.17999999999999999) && (var_chaste_interface__calcium_dynamics__APtrack < 0.20000000000000001)) ? (100000.0 - 100500.0 * var_chaste_interface__calcium_dynamics__APtrack2) : (-500.0 * var_chaste_interface__calcium_dynamics__APtrack2)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__APtrack2 = 0.001 * var_calcium_dynamics__APtrack2_orig_deriv; // 1 / millisecond
        const double var_calcium_dynamics__APtrack3_orig_deriv = (((var_chaste_interface__calcium_dynamics__APtrack > 0.17999999999999999) && (var_chaste_interface__calcium_dynamics__APtrack < 0.20000000000000001)) ? (100000.0 - 100500.0 * var_chaste_interface__calcium_dynamics__APtrack3) : (-10.0 * var_chaste_interface__calcium_dynamics__APtrack3)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__APtrack3 = 0.001 * var_calcium_dynamics__APtrack3_orig_deriv; // 1 / millisecond
        const double var_calcium_dynamics__CMDN_max = 0.050000000000000003; // millimolar
        const double var_calcium_dynamics__CSQN_max = 10.0; // millimolar
        const double var_calcium_dynamics__CSQNthresh = 0.69999999999999996; // millimolar
        const double var_calcium_dynamics__Ca_NSR_max = 15.0; // millimolar
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + var_chaste_interface__calcium_dynamics__Cai / var_L_type_Ca_channel_f_Ca_gate__Km_Ca); // dimensionless
        const double var_calcium_dynamics__G_rel_overload = 4000.0; // per_second
        const double var_calcium_dynamics__I_up = 8.75; // millimolar_per_second
        const double var_calcium_dynamics__K_leak = var_calcium_dynamics__I_up / var_calcium_dynamics__Ca_NSR_max; // per_second
        const double var_calcium_dynamics__K_mCMDN = 0.0023800000000000002; // millimolar
        const double var_calcium_dynamics__K_mCSQN = 0.80000000000000004; // millimolar
        const double var_calcium_dynamics__K_mTn = 0.00050000000000000001; // millimolar
        const double var_calcium_dynamics__K_mrel = 0.00080000000000000004; // millimolar
        const double var_calcium_dynamics__K_mup = 0.00092000000000000003; // millimolar
        const double var_calcium_dynamics__Logicthresh = 0.97999999999999998; // dimensionless
        const double var_calcium_dynamics__OVRLDtrack2_orig_deriv = (((var_calcium_dynamics__Logicthresh > var_chaste_interface__calcium_dynamics__OVRLDtrack2) && (var_calcium_dynamics__Logicthresh < var_chaste_interface__calcium_dynamics__OVRLDtrack)) ? (50000.0 - 50000.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (-500.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack2)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack2 = 0.001 * var_calcium_dynamics__OVRLDtrack2_orig_deriv; // 1 / millisecond
        const double var_calcium_dynamics__OVRLDtrack3_orig_deriv = (((var_calcium_dynamics__Logicthresh > var_chaste_interface__calcium_dynamics__OVRLDtrack3) && (var_calcium_dynamics__Logicthresh < var_chaste_interface__calcium_dynamics__OVRLDtrack)) ? (50000.0 - 50000.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack3) : (-10.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack3)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack3 = 0.001 * var_calcium_dynamics__OVRLDtrack3_orig_deriv; // 1 / millisecond
        const double var_calcium_dynamics__OVRLDtrack_orig_deriv = (((var_chaste_interface__calcium_dynamics__APtrack3 < 0.37) && (var_chaste_interface__calcium_dynamics__OVRLDtrack3 < 0.37) && (var_calcium_dynamics__CSQNthresh < 1 / (1.0 + var_calcium_dynamics__K_mCSQN / var_chaste_interface__calcium_dynamics__Ca_NSR))) ? (50000.0 - 50000.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack) : (-500.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack = 0.001 * var_calcium_dynamics__OVRLDtrack_orig_deriv; // 1 / millisecond
        const double var_calcium_dynamics__Tn_max = 0.070000000000000007; // millimolar
        const double var_calcium_dynamics__delta_Ca_ith = 0.00018000000000000001; // millimolar
        const double var_calcium_dynamics__G_rel = ((var_chaste_interface__calcium_dynamics__Cainfluxtrack > var_calcium_dynamics__delta_Ca_ith) ? ((1.0 - var_chaste_interface__calcium_dynamics__APtrack2) * (-var_calcium_dynamics__delta_Ca_ith + var_chaste_interface__calcium_dynamics__Cainfluxtrack) * var_chaste_interface__calcium_dynamics__APtrack2 * mParameters[0] / (-var_calcium_dynamics__delta_Ca_ith + var_chaste_interface__calcium_dynamics__Cainfluxtrack + var_calcium_dynamics__K_mrel)) : ((var_chaste_interface__calcium_dynamics__OVRLDtrack2 > 0) ? ((1.0 - var_chaste_interface__calcium_dynamics__OVRLDtrack2) * var_calcium_dynamics__G_rel_overload * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (0))); // per_second
        const double var_calcium_dynamics__i_leak = var_chaste_interface__calcium_dynamics__Ca_NSR * var_calcium_dynamics__K_leak; // millimolar_per_second
        const double var_calcium_dynamics__i_rel = (-var_chaste_interface__calcium_dynamics__Cai + var_chaste_interface__calcium_dynamics__Ca_JSR) * var_calcium_dynamics__G_rel; // millimolar_per_second
        const double var_calcium_dynamics__i_up = var_chaste_interface__calcium_dynamics__Cai * var_calcium_dynamics__I_up / (var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__K_mup); // millimolar_per_second
        const double var_calcium_dynamics__tau_tr = 0.17999999999999999; // second
        const double var_calcium_dynamics__i_tr = (-var_chaste_interface__calcium_dynamics__Ca_JSR + var_chaste_interface__calcium_dynamics__Ca_NSR) / var_calcium_dynamics__tau_tr; // millimolar_per_second
        const double var_calcium_dynamics__Ca_JSR_orig_deriv = (-var_calcium_dynamics__i_rel + var_calcium_dynamics__i_tr) / (1.0 + var_calcium_dynamics__CSQN_max * var_calcium_dynamics__K_mCSQN / pow((var_chaste_interface__calcium_dynamics__Ca_JSR + var_calcium_dynamics__K_mCSQN), 2)); // millimolar / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_JSR = 0.001 * var_calcium_dynamics__Ca_JSR_orig_deriv; // millimolar / millisecond
        const double var_ionic_concentrations__A_cap = 1.434e-7; // mm2
        const double var_ionic_concentrations__Ki_orig_deriv = 0; // millimolar / second
        const double d_dt_chaste_interface_var_ionic_concentrations__Ki = 0.001 * var_ionic_concentrations__Ki_orig_deriv; // millimolar / millisecond
        const double var_ATP_sensitive_potassium_current__GKbaraATP = pow((0.25 * mParameters[2]), var_ATP_sensitive_potassium_current__nATP) * var_ATP_sensitive_potassium_current__g_K_ATP * var_ATP_sensitive_potassium_current__pATP; // milliS_per_microF
        const double var_ionic_concentrations__Nai_orig_deriv = 0; // millimolar / second
        const double d_dt_chaste_interface_var_ionic_concentrations__Nai = 0.001 * var_ionic_concentrations__Nai_orig_deriv; // millimolar / millisecond
        const double var_ionic_concentrations__preplength = 0.001; // mm
        const double var_ionic_concentrations__radius = 0.00011; // mm
        const double var_ionic_concentrations__volume = M_PI * pow(var_ionic_concentrations__radius, 2) * var_ionic_concentrations__preplength; // micro_litre
        const double var_ionic_concentrations__V_myo = 0.68000000000000005 * var_ionic_concentrations__volume; // micro_litre
        const double var_calcium_dynamics__V_JSR = 0.0070588235294117632 * var_ionic_concentrations__V_myo; // micro_litre
        const double var_calcium_dynamics__V_NSR = 0.081176470588235281 * var_ionic_concentrations__V_myo; // micro_litre
        const double var_calcium_dynamics__Ca_NSR_orig_deriv = -var_calcium_dynamics__i_leak - var_calcium_dynamics__V_JSR * var_calcium_dynamics__i_tr / var_calcium_dynamics__V_NSR + var_calcium_dynamics__i_up; // millimolar / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_NSR = 0.001 * var_calcium_dynamics__Ca_NSR_orig_deriv; // millimolar / millisecond
        const double var_membrane__F = 96485.0; // coulomb_per_mole
        const double var_membrane__I_st_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_membrane__I_st = var_membrane__I_st_converted / HeartConfig::Instance()->GetCapacitance(); // microA_per_microF
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_calcium_background_current__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(mParameters[1] / var_chaste_interface__calcium_dynamics__Cai) / var_membrane__F; // millivolt
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(mParameters[3] / var_chaste_interface__ionic_concentrations__Nai) / var_membrane__F; // millivolt
        const double var_Kr_channel_states__alpha = 55.5 * exp(-0.66565836 + 0.055471529999999998 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__alpha_alpha = 65.5 * exp(-1.9969750799999999 + 0.055471529999999998 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__alpha_i = 1975.5 * exp(-0.58799999999999997 - 0.023519999999999999 * var_chaste_interface__membrane__V) / mParameters[2]; // per_second
        const double var_Kr_channel_states__beta = 2.3570000000000002 * exp(-0.036588000000000002 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__P_C2_orig_deriv = (-var_Kr_channel_states__alpha_in - var_Kr_channel_states__beta) * var_chaste_interface__Kr_channel_states__P_C2 + var_chaste_interface__Kr_channel_states__P_C1 * var_Kr_channel_states__beta_in + var_chaste_interface__Kr_channel_states__P_C3 * var_Kr_channel_states__alpha; // 1 / second
        const double d_dt_chaste_interface_var_Kr_channel_states__P_C2 = 0.001 * var_Kr_channel_states__P_C2_orig_deriv; // 1 / millisecond
        const double var_Kr_channel_states__P_C3_orig_deriv = var_chaste_interface__Kr_channel_states__P_C2 * var_Kr_channel_states__beta - var_chaste_interface__Kr_channel_states__P_C3 * var_Kr_channel_states__alpha; // 1 / second
        const double d_dt_chaste_interface_var_Kr_channel_states__P_C3 = 0.001 * var_Kr_channel_states__P_C3_orig_deriv; // 1 / millisecond
        const double var_Kr_channel_states__beta_beta = 2.9357000000000002 * exp(-0.021579999999999998 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__beta_i = 1030.0720270741688 * pow(mParameters[2], (-0.29999999999999999)) * exp(0.00094200000000000002 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__P_O_orig_deriv = (-var_Kr_channel_states__beta_beta - var_Kr_channel_states__beta_i) * var_chaste_interface__Kr_channel_states__P_O + var_chaste_interface__Kr_channel_states__P_C1 * var_Kr_channel_states__alpha_alpha + var_chaste_interface__Kr_channel_states__P_I * var_Kr_channel_states__alpha_i; // 1 / second
        const double d_dt_chaste_interface_var_Kr_channel_states__P_O = 0.001 * var_Kr_channel_states__P_O_orig_deriv; // 1 / millisecond
        const double var_Kr_channel_states__mu = var_Kr_channel_states__alpha_i * var_Kr_channel_states__beta_beta / var_Kr_channel_states__beta_i; // per_second
        const double var_Kr_channel_states__P_C1_orig_deriv = (-var_Kr_channel_states__beta_in - 2 * var_Kr_channel_states__alpha_alpha) * var_chaste_interface__Kr_channel_states__P_C1 + var_chaste_interface__Kr_channel_states__P_C2 * var_Kr_channel_states__alpha_in + var_chaste_interface__Kr_channel_states__P_I * var_Kr_channel_states__mu + var_chaste_interface__Kr_channel_states__P_O * var_Kr_channel_states__beta_beta; // 1 / second
        const double d_dt_chaste_interface_var_Kr_channel_states__P_C1 = 0.001 * var_Kr_channel_states__P_C1_orig_deriv; // 1 / millisecond
        const double var_Kr_channel_states__P_I_orig_deriv = (-var_Kr_channel_states__alpha_i - var_Kr_channel_states__mu) * var_chaste_interface__Kr_channel_states__P_I + var_chaste_interface__Kr_channel_states__P_C1 * var_Kr_channel_states__alpha_alpha + var_chaste_interface__Kr_channel_states__P_O * var_Kr_channel_states__beta_i; // 1 / second
        const double d_dt_chaste_interface_var_Kr_channel_states__P_I = 0.001 * var_Kr_channel_states__P_I_orig_deriv; // 1 / millisecond
        const double var_L_type_Ca_channel__I_CaCa = 4.0 * pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Cao * mParameters[1] + var_L_type_Ca_channel__gamma_Cai * var_chaste_interface__calcium_dynamics__Cai * exp(2.0 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_Ca * mParameters[4] * var_chaste_interface__membrane__V / ((-1.0 + exp(2.0 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaK = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * mParameters[2] + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_K * mParameters[4] * var_chaste_interface__membrane__V / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaNa = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * mParameters[3] + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_Na * mParameters[4] * var_chaste_interface__membrane__V / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaCa = var_L_type_Ca_channel__I_CaCa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaK = var_L_type_Ca_channel__I_CaK * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaNa = var_L_type_Ca_channel__I_CaNa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_CaCa + var_L_type_Ca_channel__i_CaK + var_L_type_Ca_channel__i_CaNa; // microA_per_microF
        const double var_L_type_Ca_channel_d_gate__d_infinity = 1 / (1.0 + exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_L_type_Ca_channel_d_gate__tau_d = 0.028571428571428571 * (1.0 - exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V)) * var_L_type_Ca_channel_d_gate__d_infinity / (10.0 + var_chaste_interface__membrane__V); // second
        const double var_L_type_Ca_channel_d_gate__alpha_d = var_L_type_Ca_channel_d_gate__d_infinity / var_L_type_Ca_channel_d_gate__tau_d; // per_second
        const double var_L_type_Ca_channel_d_gate__beta_d = (1.0 - var_L_type_Ca_channel_d_gate__d_infinity) / var_L_type_Ca_channel_d_gate__tau_d; // per_second
        const double var_L_type_Ca_channel_d_gate__d_orig_deriv = (1.0 - var_chaste_interface__L_type_Ca_channel_d_gate__d) * var_L_type_Ca_channel_d_gate__alpha_d - var_L_type_Ca_channel_d_gate__beta_d * var_chaste_interface__L_type_Ca_channel_d_gate__d; // 1 / second
        const double d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d = 0.001 * var_L_type_Ca_channel_d_gate__d_orig_deriv; // 1 / millisecond
        const double var_L_type_Ca_channel_f_gate__f_infinity = 1 / (1.0 + exp(4.0 + 0.125 * var_chaste_interface__membrane__V)) + 0.59999999999999998 / (1.0 + exp(2.5 - 0.050000000000000003 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_L_type_Ca_channel_f_gate__tau_f = 0.001 / (0.02 + 0.019699999999999999 * exp(-0.113569 * pow((1 + 0.10000000000000001 * var_chaste_interface__membrane__V), 2))); // second
        const double var_L_type_Ca_channel_f_gate__alpha_f = var_L_type_Ca_channel_f_gate__f_infinity / var_L_type_Ca_channel_f_gate__tau_f; // per_second
        const double var_L_type_Ca_channel_f_gate__beta_f = (1.0 - var_L_type_Ca_channel_f_gate__f_infinity) / var_L_type_Ca_channel_f_gate__tau_f; // per_second
        const double var_L_type_Ca_channel_f_gate__f_orig_deriv = (1.0 - var_chaste_interface__L_type_Ca_channel_f_gate__f) * var_L_type_Ca_channel_f_gate__alpha_f - var_L_type_Ca_channel_f_gate__beta_f * var_chaste_interface__L_type_Ca_channel_f_gate__f; // 1 / second
        const double d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f = 0.001 * var_L_type_Ca_channel_f_gate__f_orig_deriv; // 1 / millisecond
        const double var_Na_Ca_exchanger__i_NaCa = (-pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * mParameters[10] * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) / (1.0 + (pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_Na_Ca_exchanger__c2 * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // microA_per_microF
        const double var_Na_channel_states__alpha_11 = 3802.0 / (0.20000000000000001 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V) + 0.1027 * exp(-0.058823529411764705 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_12 = 3802.0 / (0.1027 * exp(-0.066666666666666666 * var_chaste_interface__membrane__V) + 0.23000000000000001 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_13 = 3802.0 / (0.25 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V) + 0.1027 * exp(-0.083333333333333329 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_2 = 9178.0 * exp(0.033692722371967652 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__alpha_3 = 0.00037932999999999999 * exp(-0.12987012987012986 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__alpha_4 = 0.01 * var_Na_channel_states__alpha_2; // per_second
        const double var_Na_channel_states__alpha_5 = 1.0526315789473684e-5 * var_Na_channel_states__alpha_2; // per_second
        const double var_Na_channel_states__beta_11 = 191.69999999999999 * exp(-0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_12 = 200.0 * exp(0.24630541871921183 - 0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_13 = 220.0 * exp(0.49261083743842365 - 0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_3 = 8.4000000000000004 + 0.02 * var_chaste_interface__membrane__V; // per_second
        const double var_Na_channel_states__P_C1_orig_deriv = (-var_Na_channel_states__alpha_13 - var_Na_channel_states__beta_12 - var_Na_channel_states__beta_3) * var_chaste_interface__Na_channel_states__P_C1 + var_chaste_interface__Na_channel_states__P_C2 * var_Na_channel_states__alpha_12 + var_chaste_interface__Na_channel_states__P_IF * var_Na_channel_states__alpha_3 + var_chaste_interface__Na_channel_states__P_O_Na * var_Na_channel_states__beta_13; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_C1 = 0.001 * var_Na_channel_states__P_C1_orig_deriv; // 1 / millisecond
        const double var_Na_channel_states__P_C2_orig_deriv = (-var_Na_channel_states__alpha_12 - var_Na_channel_states__beta_11 - var_Na_channel_states__beta_3) * var_chaste_interface__Na_channel_states__P_C2 + var_chaste_interface__Na_channel_states__P_C1 * var_Na_channel_states__beta_12 + var_chaste_interface__Na_channel_states__P_C3 * var_Na_channel_states__alpha_11 + var_chaste_interface__Na_channel_states__P_IC2 * var_Na_channel_states__alpha_3; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_C2 = 0.001 * var_Na_channel_states__P_C2_orig_deriv; // 1 / millisecond
        const double var_Na_channel_states__P_C3_orig_deriv = (-var_Na_channel_states__alpha_11 - var_Na_channel_states__beta_3) * var_chaste_interface__Na_channel_states__P_C3 + var_chaste_interface__Na_channel_states__P_C2 * var_Na_channel_states__beta_11 + var_chaste_interface__Na_channel_states__P_IC3 * var_Na_channel_states__alpha_3; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_C3 = 0.001 * var_Na_channel_states__P_C3_orig_deriv; // 1 / millisecond
        const double var_Na_channel_states__P_IC2_orig_deriv = (-var_Na_channel_states__alpha_12 - var_Na_channel_states__alpha_3 - var_Na_channel_states__beta_11) * var_chaste_interface__Na_channel_states__P_IC2 + var_chaste_interface__Na_channel_states__P_C2 * var_Na_channel_states__beta_3 + var_chaste_interface__Na_channel_states__P_IC3 * var_Na_channel_states__alpha_11 + var_chaste_interface__Na_channel_states__P_IF * var_Na_channel_states__beta_12; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_IC2 = 0.001 * var_Na_channel_states__P_IC2_orig_deriv; // 1 / millisecond
        const double var_Na_channel_states__P_IC3_orig_deriv = (-var_Na_channel_states__alpha_11 - var_Na_channel_states__alpha_3) * var_chaste_interface__Na_channel_states__P_IC3 + var_chaste_interface__Na_channel_states__P_C3 * var_Na_channel_states__beta_3 + var_chaste_interface__Na_channel_states__P_IC2 * var_Na_channel_states__beta_11; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_IC3 = 0.001 * var_Na_channel_states__P_IC3_orig_deriv; // 1 / millisecond
        const double var_Na_channel_states__beta_2 = var_Na_channel_states__alpha_13 * var_Na_channel_states__alpha_2 * var_Na_channel_states__alpha_3 / (var_Na_channel_states__beta_13 * var_Na_channel_states__beta_3); // per_second
        const double var_Na_channel_states__P_O_Na_orig_deriv = (-var_Na_channel_states__alpha_2 - var_Na_channel_states__beta_13) * var_chaste_interface__Na_channel_states__P_O_Na + var_chaste_interface__Na_channel_states__P_C1 * var_Na_channel_states__alpha_13 + var_chaste_interface__Na_channel_states__P_IF * var_Na_channel_states__beta_2; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_O_Na = 0.001 * var_Na_channel_states__P_O_Na_orig_deriv; // 1 / millisecond
        const double var_Na_channel_states__beta_4 = var_Na_channel_states__alpha_3; // per_second
        const double var_Na_channel_states__P_IF_orig_deriv = (-var_Na_channel_states__alpha_3 - var_Na_channel_states__alpha_4 - var_Na_channel_states__beta_12 - var_Na_channel_states__beta_2) * var_chaste_interface__Na_channel_states__P_IF + var_chaste_interface__Na_channel_states__P_C1 * var_Na_channel_states__beta_3 + var_chaste_interface__Na_channel_states__P_IC2 * var_Na_channel_states__alpha_12 + var_chaste_interface__Na_channel_states__P_IM1 * var_Na_channel_states__beta_4 + var_chaste_interface__Na_channel_states__P_O_Na * var_Na_channel_states__alpha_2; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_IF = 0.001 * var_Na_channel_states__P_IF_orig_deriv; // 1 / millisecond
        const double var_Na_channel_states__beta_5 = 0.02 * var_Na_channel_states__alpha_3; // per_second
        const double var_Na_channel_states__P_IM1_orig_deriv = (-var_Na_channel_states__alpha_5 - var_Na_channel_states__beta_4) * var_chaste_interface__Na_channel_states__P_IM1 + var_chaste_interface__Na_channel_states__P_IF * var_Na_channel_states__alpha_4 + var_chaste_interface__Na_channel_states__P_IM2 * var_Na_channel_states__beta_5; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_IM1 = 0.001 * var_Na_channel_states__P_IM1_orig_deriv; // 1 / millisecond
        const double var_Na_channel_states__P_IM2_orig_deriv = var_chaste_interface__Na_channel_states__P_IM1 * var_Na_channel_states__alpha_5 - var_chaste_interface__Na_channel_states__P_IM2 * var_Na_channel_states__beta_5; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_IM2 = 0.001 * var_Na_channel_states__P_IM2_orig_deriv; // 1 / millisecond
        const double var_T_type_Ca_channel__i_Ca_T = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2) * (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_T_type_Ca_channel__g_CaT * var_chaste_interface__T_type_Ca_channel_g_gate__g; // microA_per_microF
        const double var_T_type_Ca_channel_b_gate__b_inf = 1 / (1.0 + exp(-1.2962962962962963 - 0.092592592592592587 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_T_type_Ca_channel_b_gate__tau_b = 0.0037000000000000002 + 0.0061000000000000004 / (1.0 + exp(5.5555555555555554 + 0.22222222222222221 * var_chaste_interface__membrane__V)); // second
        const double var_T_type_Ca_channel_b_gate__b_orig_deriv = (-var_chaste_interface__T_type_Ca_channel_b_gate__b + var_T_type_Ca_channel_b_gate__b_inf) / var_T_type_Ca_channel_b_gate__tau_b; // 1 / second
        const double d_dt_chaste_interface_var_T_type_Ca_channel_b_gate__b = 0.001 * var_T_type_Ca_channel_b_gate__b_orig_deriv; // 1 / millisecond
        const double var_T_type_Ca_channel_g_gate__g_inf = 1 / (1.0 + exp(10.714285714285715 + 0.17857142857142858 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_T_type_Ca_channel_g_gate__tau_g = ((var_chaste_interface__membrane__V <= 0) ? (0.012 - 0.00087500000000000002 * var_chaste_interface__membrane__V) : (0.012)); // second
        const double var_T_type_Ca_channel_g_gate__g_orig_deriv = (-var_chaste_interface__T_type_Ca_channel_g_gate__g + var_T_type_Ca_channel_g_gate__g_inf) / var_T_type_Ca_channel_g_gate__tau_g; // 1 / second
        const double d_dt_chaste_interface_var_T_type_Ca_channel_g_gate__g = 0.001 * var_T_type_Ca_channel_g_gate__g_orig_deriv; // 1 / millisecond
        const double var_calcium_background_current__i_Ca_b = (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_calcium_background_current__g_Cab; // microA_per_microF
        const double var_fast_sodium_current__i_Na = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__Na_channel_states__P_O_Na * mParameters[6]; // microA_per_microF
        const double var_non_specific_calcium_activated_current__K_m_ns_Ca = 0.0011999999999999999; // millimolar
        const double var_non_specific_calcium_activated_current__P_ns_Ca = 0; // cm_per_second
        const double var_non_specific_calcium_activated_current__I_ns_K = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * mParameters[2] + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__I_ns_Na = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * mParameters[3] + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_K = var_non_specific_calcium_activated_current__I_ns_K / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Na = var_non_specific_calcium_activated_current__I_ns_Na / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Ca = var_non_specific_calcium_activated_current__i_ns_K + var_non_specific_calcium_activated_current__i_ns_Na; // microA_per_microF
        const double var_plateau_potassium_current__Kp = 1 / (1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_plateau_potassium_current__g_Kp = 0.0055199999999999997; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__E_Kr = var_membrane__R * var_membrane__T * log(mParameters[2] / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_rapid_delayed_rectifier_potassium_current__g_Kr = pow(mParameters[2], 0.58999999999999997) * mParameters[8]; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_rapid_delayed_rectifier_potassium_current__E_Kr + var_chaste_interface__membrane__V) * var_chaste_interface__Kr_channel_states__P_O * var_rapid_delayed_rectifier_potassium_current__g_Kr; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__I_pCa = 1.1499999999999999; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__K_mpCa = 0.00050000000000000001; // millimolar
        const double var_sarcolemmal_calcium_pump__i_p_Ca = var_chaste_interface__calcium_dynamics__Cai * var_sarcolemmal_calcium_pump__I_pCa / (var_chaste_interface__calcium_dynamics__Cai + var_sarcolemmal_calcium_pump__K_mpCa); // microA_per_microF
        const double var_calcium_dynamics__Cai_orig_deriv = ((-var_calcium_dynamics__i_up + var_calcium_dynamics__i_leak) * var_calcium_dynamics__V_NSR / var_ionic_concentrations__V_myo + var_calcium_dynamics__V_JSR * var_calcium_dynamics__i_rel / var_ionic_concentrations__V_myo - 0.5 * (-2.0 * var_Na_Ca_exchanger__i_NaCa + var_L_type_Ca_channel__i_CaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_sarcolemmal_calcium_pump__i_p_Ca) * var_ionic_concentrations__A_cap / (var_ionic_concentrations__V_myo * var_membrane__F)) / (1.0 + var_calcium_dynamics__CMDN_max * var_calcium_dynamics__K_mCMDN / pow((var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__K_mCMDN), 2) + var_calcium_dynamics__K_mTn * var_calcium_dynamics__Tn_max / pow((var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__K_mTn), 2)); // millimolar / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Cai = 0.001 * var_calcium_dynamics__Cai_orig_deriv; // millimolar / millisecond
        const double var_calcium_dynamics__Cainfluxtrack_orig_deriv = ((var_chaste_interface__calcium_dynamics__APtrack > 0.20000000000000001) ? (-0.5 * (-var_Na_Ca_exchanger__i_NaCa + var_L_type_Ca_channel__i_CaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_sarcolemmal_calcium_pump__i_p_Ca) * var_ionic_concentrations__A_cap / (var_ionic_concentrations__V_myo * var_membrane__F)) : ((var_chaste_interface__calcium_dynamics__APtrack2 > 0.01) ? (0) : (-500.0 * var_chaste_interface__calcium_dynamics__Cainfluxtrack))); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Cainfluxtrack = 0.001 * var_calcium_dynamics__Cainfluxtrack_orig_deriv; // 1 / millisecond
        const double var_slow_delayed_rectifier_potassium_current__PNaK = 0.018329999999999999; // dimensionless
        const double var_slow_delayed_rectifier_potassium_current__E_Ks = var_membrane__R * var_membrane__T * log((mParameters[3] * var_slow_delayed_rectifier_potassium_current__PNaK + mParameters[2]) / (var_chaste_interface__ionic_concentrations__Nai * var_slow_delayed_rectifier_potassium_current__PNaK + var_chaste_interface__ionic_concentrations__Ki)) / var_membrane__F; // millivolt
        const double var_slow_delayed_rectifier_potassium_current__g_Ks = 0.433 * (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * mParameters[9]; // milliS_per_microF
        const double var_slow_delayed_rectifier_potassium_current_xs1_gate__tau_xs1 = 0.001 / (0.00013100000000000001 * (30.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__V)) + 7.1899999999999999e-5 * (30.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__V))); // second
        const double var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_infinity = 1 / (1.0 + exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_orig_deriv = (-var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 + var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_infinity) / var_slow_delayed_rectifier_potassium_current_xs1_gate__tau_xs1; // 1 / second
        const double d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = 0.001 * var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_orig_deriv; // 1 / millisecond
        const double var_slow_delayed_rectifier_potassium_current_xs2_gate__tau_xs2 = 0.0040000000000000001 / (0.00013100000000000001 * (30.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__V)) + 7.1899999999999999e-5 * (30.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__V))); // second
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = (-var_slow_delayed_rectifier_potassium_current__E_Ks + var_chaste_interface__membrane__V) * var_slow_delayed_rectifier_potassium_current__g_Ks * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2; // microA_per_microF
        const double var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_infinity = 1 / (1.0 + exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_orig_deriv = (-var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 + var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_infinity) / var_slow_delayed_rectifier_potassium_current_xs2_gate__tau_xs2; // 1 / second
        const double d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = 0.001 * var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_orig_deriv; // 1 / millisecond
        const double var_sodium_activated_potassium_current__g_K_Na = 0; // milliS_per_microF
        const double var_sodium_activated_potassium_current__kdKNa = 66.0; // millimolar
        const double var_sodium_activated_potassium_current__nKNa = 2.7999999999999998; // dimensionless
        const double var_sodium_activated_potassium_current__pona = 0.84999999999999998 / (1.0 + pow((var_sodium_activated_potassium_current__kdKNa / var_chaste_interface__ionic_concentrations__Nai), var_sodium_activated_potassium_current__nKNa)); // dimensionless
        const double var_sodium_activated_potassium_current__pov = 0.80000000000000004 - 0.65000000000000002 / (1.0 + exp(8.3333333333333339 + 0.066666666666666666 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_sodium_background_current__g_Nab = 0.0040000000000000001; // milliS_per_microF
        const double var_sodium_background_current__i_Na_b = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_sodium_background_current__g_Nab; // microA_per_microF
        const double var_sodium_potassium_pump__I_NaK = 2.25; // microA_per_microF
        const double var_sodium_potassium_pump__K_mKo = 1.5; // millimolar
        const double var_sodium_potassium_pump__K_mNai = 10.0; // millimolar
        const double var_sodium_potassium_pump__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * mParameters[3]); // dimensionless
        const double var_sodium_potassium_pump__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + 0.036499999999999998 * var_sodium_potassium_pump__sigma * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // dimensionless
        const double var_sodium_potassium_pump__i_NaK = mParameters[2] * var_sodium_potassium_pump__I_NaK * var_sodium_potassium_pump__f_NaK / ((1.0 + pow(var_sodium_potassium_pump__K_mNai, 2) / pow(var_chaste_interface__ionic_concentrations__Nai, 2)) * (mParameters[2] + var_sodium_potassium_pump__K_mKo)); // microA_per_microF
        const double var_time_independent_potassium_current__E_K = var_membrane__R * var_membrane__T * log(mParameters[2] / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_ATP_sensitive_potassium_current__i_K_ATP = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_ATP_sensitive_potassium_current__GKbaraATP; // microA_per_microF
        const double var_plateau_potassium_current__i_Kp = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_plateau_potassium_current__Kp * var_plateau_potassium_current__g_Kp; // microA_per_microF
        const double var_sodium_activated_potassium_current__i_K_Na = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_sodium_activated_potassium_current__g_K_Na * var_sodium_activated_potassium_current__pona * var_sodium_activated_potassium_current__pov; // microA_per_microF
        const double var_time_independent_potassium_current__g_K1 = 0.43033148291193518 * sqrt(mParameters[2]) * mParameters[7]; // milliS_per_cm2
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K)); // per_second
        const double var_time_independent_potassium_current_K1_gate__beta_K1 = 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V)); // per_second
        const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_microF
        const double var_transient_outward_current__g_to = 1.1000000000000001; // milliS_per_microF
        const double var_transient_outward_current__rvdv = exp(0.01 * var_chaste_interface__membrane__V); // dimensionless
        const double var_transient_outward_current_ydv_gate__alpha_ydv = 15.0 / (1.0 + exp(12.0 + 0.20000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_transient_outward_current_ydv_gate__beta_ydv = 100.0 * exp(5.0 + 0.20000000000000001 * var_chaste_interface__membrane__V) / (1.0 + exp(5.0 + 0.20000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_transient_outward_current_ydv_gate__tau_ydv = 1 / (var_transient_outward_current_ydv_gate__alpha_ydv + var_transient_outward_current_ydv_gate__beta_ydv); // second
        const double var_transient_outward_current_ydv_gate__ydv_ss = var_transient_outward_current_ydv_gate__alpha_ydv / (var_transient_outward_current_ydv_gate__alpha_ydv + var_transient_outward_current_ydv_gate__beta_ydv); // dimensionless
        const double var_transient_outward_current_ydv_gate__ydv_orig_deriv = (-var_chaste_interface__transient_outward_current_ydv_gate__ydv + var_transient_outward_current_ydv_gate__ydv_ss) / var_transient_outward_current_ydv_gate__tau_ydv; // 1 / second
        const double d_dt_chaste_interface_var_transient_outward_current_ydv_gate__ydv = 0.001 * var_transient_outward_current_ydv_gate__ydv_orig_deriv; // 1 / millisecond
        const double var_transient_outward_current_zdv_gate__alpha_zdv = 10000.0 * exp(-1.6000000000000001 + 0.040000000000000001 * var_chaste_interface__membrane__V) / (1.0 + exp(-1.6000000000000001 + 0.040000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_transient_outward_current_zdv_gate__beta_zdv = 10000.0 * exp(-3.6000000000000001 - 0.040000000000000001 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.6000000000000001 - 0.040000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_transient_outward_current_zdv_gate__tau_zdv = 1 / (var_transient_outward_current_zdv_gate__alpha_zdv + var_transient_outward_current_zdv_gate__beta_zdv); // second
        const double var_transient_outward_current__i_to = pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_transient_outward_current__g_to * mParameters[11] * var_transient_outward_current__rvdv * var_chaste_interface__transient_outward_current_ydv_gate__ydv; // microA_per_microF
        const double var_membrane__dVdt = -(var_ATP_sensitive_potassium_current__i_K_ATP + var_L_type_Ca_channel__i_Ca_L + var_Na_Ca_exchanger__i_NaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_fast_sodium_current__i_Na + var_membrane__I_st + var_non_specific_calcium_activated_current__i_ns_Ca + var_plateau_potassium_current__i_Kp + var_rapid_delayed_rectifier_potassium_current__i_Kr + var_sarcolemmal_calcium_pump__i_p_Ca + var_slow_delayed_rectifier_potassium_current__i_Ks + var_sodium_activated_potassium_current__i_K_Na + var_sodium_background_current__i_Na_b + var_sodium_potassium_pump__i_NaK + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) / mParameters[5]; // dimensionless
        const double var_calcium_dynamics__APtrack_orig_deriv = ((var_membrane__dVdt > 150000.0) ? (100000.0 - 100500.0 * var_chaste_interface__calcium_dynamics__APtrack) : (-500.0 * var_chaste_interface__calcium_dynamics__APtrack)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__APtrack = 0.001 * var_calcium_dynamics__APtrack_orig_deriv; // 1 / millisecond
        const double var_transient_outward_current_zdv_gate__zdv_ss = var_transient_outward_current_zdv_gate__alpha_zdv / (var_transient_outward_current_zdv_gate__alpha_zdv + var_transient_outward_current_zdv_gate__beta_zdv); // dimensionless
        const double var_transient_outward_current_zdv_gate__zdv_orig_deriv = (-var_chaste_interface__transient_outward_current_zdv_gate__zdv + var_transient_outward_current_zdv_gate__zdv_ss) / var_transient_outward_current_zdv_gate__tau_zdv; // 1 / second
        const double d_dt_chaste_interface_var_transient_outward_current_zdv_gate__zdv = 0.001 * var_transient_outward_current_zdv_gate__zdv_orig_deriv; // 1 / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_membrane__V = 0.0;
        }
        else
        {
            const double var_membrane__V_orig_deriv = -(var_ATP_sensitive_potassium_current__i_K_ATP + var_L_type_Ca_channel__i_Ca_L + var_Na_Ca_exchanger__i_NaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_fast_sodium_current__i_Na + var_membrane__I_st + var_non_specific_calcium_activated_current__i_ns_Ca + var_plateau_potassium_current__i_Kp + var_rapid_delayed_rectifier_potassium_current__i_Kr + var_sarcolemmal_calcium_pump__i_p_Ca + var_slow_delayed_rectifier_potassium_current__i_Ks + var_sodium_activated_potassium_current__i_K_Na + var_sodium_background_current__i_Na_b + var_sodium_potassium_pump__i_NaK + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) / mParameters[5]; // millivolt / second
            d_dt_chaste_interface_var_membrane__V = 0.001 * var_membrane__V_orig_deriv; // millivolt / millisecond
        }
        
        mEvalF[0] = d_dt_chaste_interface_var_membrane__V;
        mEvalF[1] = d_dt_chaste_interface_var_calcium_dynamics__Cai;
        mEvalF[2] = d_dt_chaste_interface_var_Na_channel_states__P_O_Na;
        mEvalF[3] = d_dt_chaste_interface_var_Na_channel_states__P_C1;
        mEvalF[4] = d_dt_chaste_interface_var_Na_channel_states__P_C2;
        mEvalF[5] = d_dt_chaste_interface_var_Na_channel_states__P_C3;
        mEvalF[6] = d_dt_chaste_interface_var_Na_channel_states__P_IF;
        mEvalF[7] = d_dt_chaste_interface_var_Na_channel_states__P_IC3;
        mEvalF[8] = d_dt_chaste_interface_var_Na_channel_states__P_IC2;
        mEvalF[9] = d_dt_chaste_interface_var_Na_channel_states__P_IM1;
        mEvalF[10] = d_dt_chaste_interface_var_Na_channel_states__P_IM2;
        mEvalF[11] = d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d;
        mEvalF[12] = d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f;
        mEvalF[13] = d_dt_chaste_interface_var_T_type_Ca_channel_b_gate__b;
        mEvalF[14] = d_dt_chaste_interface_var_T_type_Ca_channel_g_gate__g;
        mEvalF[15] = d_dt_chaste_interface_var_Kr_channel_states__P_O;
        mEvalF[16] = d_dt_chaste_interface_var_Kr_channel_states__P_C1;
        mEvalF[17] = d_dt_chaste_interface_var_Kr_channel_states__P_C2;
        mEvalF[18] = d_dt_chaste_interface_var_Kr_channel_states__P_C3;
        mEvalF[19] = d_dt_chaste_interface_var_Kr_channel_states__P_I;
        mEvalF[20] = d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1;
        mEvalF[21] = d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2;
        mEvalF[22] = d_dt_chaste_interface_var_transient_outward_current_zdv_gate__zdv;
        mEvalF[23] = d_dt_chaste_interface_var_transient_outward_current_ydv_gate__ydv;
        mEvalF[24] = d_dt_chaste_interface_var_calcium_dynamics__Ca_JSR;
        mEvalF[25] = d_dt_chaste_interface_var_calcium_dynamics__Ca_NSR;
        mEvalF[26] = d_dt_chaste_interface_var_calcium_dynamics__APtrack;
        mEvalF[27] = d_dt_chaste_interface_var_calcium_dynamics__APtrack2;
        mEvalF[28] = d_dt_chaste_interface_var_calcium_dynamics__APtrack3;
        mEvalF[29] = d_dt_chaste_interface_var_calcium_dynamics__Cainfluxtrack;
        mEvalF[30] = d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack;
        mEvalF[31] = d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack2;
        mEvalF[32] = d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack3;
        mEvalF[33] = d_dt_chaste_interface_var_ionic_concentrations__Nai;
        mEvalF[34] = d_dt_chaste_interface_var_ionic_concentrations__Ki;

        
        mPartialF[0] = EvaluatePartialDerivative0(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[1] = EvaluatePartialDerivative1(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[2] = EvaluatePartialDerivative2(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[3] = EvaluatePartialDerivative3(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[4] = EvaluatePartialDerivative4(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[5] = EvaluatePartialDerivative5(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[6] = EvaluatePartialDerivative6(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[7] = EvaluatePartialDerivative7(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[8] = EvaluatePartialDerivative8(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[9] = EvaluatePartialDerivative9(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[10] = EvaluatePartialDerivative10(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[11] = EvaluatePartialDerivative11(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[12] = EvaluatePartialDerivative12(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[13] = EvaluatePartialDerivative13(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[14] = EvaluatePartialDerivative14(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[15] = EvaluatePartialDerivative15(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[16] = EvaluatePartialDerivative16(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[17] = EvaluatePartialDerivative17(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[18] = EvaluatePartialDerivative18(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[19] = EvaluatePartialDerivative19(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[20] = EvaluatePartialDerivative20(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[21] = EvaluatePartialDerivative21(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[22] = EvaluatePartialDerivative22(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[23] = EvaluatePartialDerivative23(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[24] = EvaluatePartialDerivative24(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[25] = EvaluatePartialDerivative25(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[26] = EvaluatePartialDerivative26(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[27] = EvaluatePartialDerivative27(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[28] = EvaluatePartialDerivative28(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[29] = EvaluatePartialDerivative29(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[30] = EvaluatePartialDerivative30(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[31] = EvaluatePartialDerivative31(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[32] = EvaluatePartialDerivative32(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[33] = EvaluatePartialDerivative33(var_chaste_interface__environment__time_converted, rY, delta);
        mPartialF[34] = EvaluatePartialDerivative34(var_chaste_interface__environment__time_converted, rY, delta);
        for (unsigned var=0; var<size; var++)
        {
            if (var == 0) continue;
            if (fabs(mPartialF[var]) < delta)
            {
                rY[var] = mYInit[var] + 0.5*mDt*mEvalF[var];
            }
            else
            {
                rY[var] = mYInit[var] + (mEvalF[var]/mPartialF[var])*(exp(mPartialF[var]*0.5*mDt)-1.0);
            }
            
        }
        
        
        y_save = rY[1];
        rY[1] = mYInit[1];
        mEvalF[1] = EvaluateYDerivative1(var_chaste_interface__environment__time_converted, rY);
        mPartialF[1] = EvaluatePartialDerivative1(var_chaste_interface__environment__time_converted, rY, delta);
        rY[1] = y_save;
        
        
        y_save = rY[2];
        rY[2] = mYInit[2];
        mEvalF[2] = EvaluateYDerivative2(var_chaste_interface__environment__time_converted, rY);
        mPartialF[2] = EvaluatePartialDerivative2(var_chaste_interface__environment__time_converted, rY, delta);
        rY[2] = y_save;
        
        
        y_save = rY[3];
        rY[3] = mYInit[3];
        mEvalF[3] = EvaluateYDerivative3(var_chaste_interface__environment__time_converted, rY);
        mPartialF[3] = EvaluatePartialDerivative3(var_chaste_interface__environment__time_converted, rY, delta);
        rY[3] = y_save;
        
        
        y_save = rY[4];
        rY[4] = mYInit[4];
        mEvalF[4] = EvaluateYDerivative4(var_chaste_interface__environment__time_converted, rY);
        mPartialF[4] = EvaluatePartialDerivative4(var_chaste_interface__environment__time_converted, rY, delta);
        rY[4] = y_save;
        
        
        y_save = rY[5];
        rY[5] = mYInit[5];
        mEvalF[5] = EvaluateYDerivative5(var_chaste_interface__environment__time_converted, rY);
        mPartialF[5] = EvaluatePartialDerivative5(var_chaste_interface__environment__time_converted, rY, delta);
        rY[5] = y_save;
        
        
        y_save = rY[6];
        rY[6] = mYInit[6];
        mEvalF[6] = EvaluateYDerivative6(var_chaste_interface__environment__time_converted, rY);
        mPartialF[6] = EvaluatePartialDerivative6(var_chaste_interface__environment__time_converted, rY, delta);
        rY[6] = y_save;
        
        
        y_save = rY[7];
        rY[7] = mYInit[7];
        mEvalF[7] = EvaluateYDerivative7(var_chaste_interface__environment__time_converted, rY);
        mPartialF[7] = EvaluatePartialDerivative7(var_chaste_interface__environment__time_converted, rY, delta);
        rY[7] = y_save;
        
        
        y_save = rY[8];
        rY[8] = mYInit[8];
        mEvalF[8] = EvaluateYDerivative8(var_chaste_interface__environment__time_converted, rY);
        mPartialF[8] = EvaluatePartialDerivative8(var_chaste_interface__environment__time_converted, rY, delta);
        rY[8] = y_save;
        
        
        y_save = rY[9];
        rY[9] = mYInit[9];
        mEvalF[9] = EvaluateYDerivative9(var_chaste_interface__environment__time_converted, rY);
        mPartialF[9] = EvaluatePartialDerivative9(var_chaste_interface__environment__time_converted, rY, delta);
        rY[9] = y_save;
        
        
        y_save = rY[10];
        rY[10] = mYInit[10];
        mEvalF[10] = EvaluateYDerivative10(var_chaste_interface__environment__time_converted, rY);
        mPartialF[10] = EvaluatePartialDerivative10(var_chaste_interface__environment__time_converted, rY, delta);
        rY[10] = y_save;
        
        
        y_save = rY[11];
        rY[11] = mYInit[11];
        mEvalF[11] = EvaluateYDerivative11(var_chaste_interface__environment__time_converted, rY);
        mPartialF[11] = EvaluatePartialDerivative11(var_chaste_interface__environment__time_converted, rY, delta);
        rY[11] = y_save;
        
        
        y_save = rY[12];
        rY[12] = mYInit[12];
        mEvalF[12] = EvaluateYDerivative12(var_chaste_interface__environment__time_converted, rY);
        mPartialF[12] = EvaluatePartialDerivative12(var_chaste_interface__environment__time_converted, rY, delta);
        rY[12] = y_save;
        
        
        y_save = rY[13];
        rY[13] = mYInit[13];
        mEvalF[13] = EvaluateYDerivative13(var_chaste_interface__environment__time_converted, rY);
        mPartialF[13] = EvaluatePartialDerivative13(var_chaste_interface__environment__time_converted, rY, delta);
        rY[13] = y_save;
        
        
        y_save = rY[14];
        rY[14] = mYInit[14];
        mEvalF[14] = EvaluateYDerivative14(var_chaste_interface__environment__time_converted, rY);
        mPartialF[14] = EvaluatePartialDerivative14(var_chaste_interface__environment__time_converted, rY, delta);
        rY[14] = y_save;
        
        
        y_save = rY[15];
        rY[15] = mYInit[15];
        mEvalF[15] = EvaluateYDerivative15(var_chaste_interface__environment__time_converted, rY);
        mPartialF[15] = EvaluatePartialDerivative15(var_chaste_interface__environment__time_converted, rY, delta);
        rY[15] = y_save;
        
        
        y_save = rY[16];
        rY[16] = mYInit[16];
        mEvalF[16] = EvaluateYDerivative16(var_chaste_interface__environment__time_converted, rY);
        mPartialF[16] = EvaluatePartialDerivative16(var_chaste_interface__environment__time_converted, rY, delta);
        rY[16] = y_save;
        
        
        y_save = rY[17];
        rY[17] = mYInit[17];
        mEvalF[17] = EvaluateYDerivative17(var_chaste_interface__environment__time_converted, rY);
        mPartialF[17] = EvaluatePartialDerivative17(var_chaste_interface__environment__time_converted, rY, delta);
        rY[17] = y_save;
        
        
        y_save = rY[18];
        rY[18] = mYInit[18];
        mEvalF[18] = EvaluateYDerivative18(var_chaste_interface__environment__time_converted, rY);
        mPartialF[18] = EvaluatePartialDerivative18(var_chaste_interface__environment__time_converted, rY, delta);
        rY[18] = y_save;
        
        
        y_save = rY[19];
        rY[19] = mYInit[19];
        mEvalF[19] = EvaluateYDerivative19(var_chaste_interface__environment__time_converted, rY);
        mPartialF[19] = EvaluatePartialDerivative19(var_chaste_interface__environment__time_converted, rY, delta);
        rY[19] = y_save;
        
        
        y_save = rY[20];
        rY[20] = mYInit[20];
        mEvalF[20] = EvaluateYDerivative20(var_chaste_interface__environment__time_converted, rY);
        mPartialF[20] = EvaluatePartialDerivative20(var_chaste_interface__environment__time_converted, rY, delta);
        rY[20] = y_save;
        
        
        y_save = rY[21];
        rY[21] = mYInit[21];
        mEvalF[21] = EvaluateYDerivative21(var_chaste_interface__environment__time_converted, rY);
        mPartialF[21] = EvaluatePartialDerivative21(var_chaste_interface__environment__time_converted, rY, delta);
        rY[21] = y_save;
        
        
        y_save = rY[22];
        rY[22] = mYInit[22];
        mEvalF[22] = EvaluateYDerivative22(var_chaste_interface__environment__time_converted, rY);
        mPartialF[22] = EvaluatePartialDerivative22(var_chaste_interface__environment__time_converted, rY, delta);
        rY[22] = y_save;
        
        
        y_save = rY[23];
        rY[23] = mYInit[23];
        mEvalF[23] = EvaluateYDerivative23(var_chaste_interface__environment__time_converted, rY);
        mPartialF[23] = EvaluatePartialDerivative23(var_chaste_interface__environment__time_converted, rY, delta);
        rY[23] = y_save;
        
        
        y_save = rY[24];
        rY[24] = mYInit[24];
        mEvalF[24] = EvaluateYDerivative24(var_chaste_interface__environment__time_converted, rY);
        mPartialF[24] = EvaluatePartialDerivative24(var_chaste_interface__environment__time_converted, rY, delta);
        rY[24] = y_save;
        
        
        y_save = rY[25];
        rY[25] = mYInit[25];
        mEvalF[25] = EvaluateYDerivative25(var_chaste_interface__environment__time_converted, rY);
        mPartialF[25] = EvaluatePartialDerivative25(var_chaste_interface__environment__time_converted, rY, delta);
        rY[25] = y_save;
        
        
        y_save = rY[26];
        rY[26] = mYInit[26];
        mEvalF[26] = EvaluateYDerivative26(var_chaste_interface__environment__time_converted, rY);
        mPartialF[26] = EvaluatePartialDerivative26(var_chaste_interface__environment__time_converted, rY, delta);
        rY[26] = y_save;
        
        
        y_save = rY[27];
        rY[27] = mYInit[27];
        mEvalF[27] = EvaluateYDerivative27(var_chaste_interface__environment__time_converted, rY);
        mPartialF[27] = EvaluatePartialDerivative27(var_chaste_interface__environment__time_converted, rY, delta);
        rY[27] = y_save;
        
        
        y_save = rY[28];
        rY[28] = mYInit[28];
        mEvalF[28] = EvaluateYDerivative28(var_chaste_interface__environment__time_converted, rY);
        mPartialF[28] = EvaluatePartialDerivative28(var_chaste_interface__environment__time_converted, rY, delta);
        rY[28] = y_save;
        
        
        y_save = rY[29];
        rY[29] = mYInit[29];
        mEvalF[29] = EvaluateYDerivative29(var_chaste_interface__environment__time_converted, rY);
        mPartialF[29] = EvaluatePartialDerivative29(var_chaste_interface__environment__time_converted, rY, delta);
        rY[29] = y_save;
        
        
        y_save = rY[30];
        rY[30] = mYInit[30];
        mEvalF[30] = EvaluateYDerivative30(var_chaste_interface__environment__time_converted, rY);
        mPartialF[30] = EvaluatePartialDerivative30(var_chaste_interface__environment__time_converted, rY, delta);
        rY[30] = y_save;
        
        
        y_save = rY[31];
        rY[31] = mYInit[31];
        mEvalF[31] = EvaluateYDerivative31(var_chaste_interface__environment__time_converted, rY);
        mPartialF[31] = EvaluatePartialDerivative31(var_chaste_interface__environment__time_converted, rY, delta);
        rY[31] = y_save;
        
        
        y_save = rY[32];
        rY[32] = mYInit[32];
        mEvalF[32] = EvaluateYDerivative32(var_chaste_interface__environment__time_converted, rY);
        mPartialF[32] = EvaluatePartialDerivative32(var_chaste_interface__environment__time_converted, rY, delta);
        rY[32] = y_save;
        
        
        y_save = rY[33];
        rY[33] = mYInit[33];
        mEvalF[33] = EvaluateYDerivative33(var_chaste_interface__environment__time_converted, rY);
        mPartialF[33] = EvaluatePartialDerivative33(var_chaste_interface__environment__time_converted, rY, delta);
        rY[33] = y_save;
        
        
        y_save = rY[34];
        rY[34] = mYInit[34];
        mEvalF[34] = EvaluateYDerivative34(var_chaste_interface__environment__time_converted, rY);
        mPartialF[34] = EvaluatePartialDerivative34(var_chaste_interface__environment__time_converted, rY, delta);
        rY[34] = y_save;
                
        for (unsigned var=0; var<size; var++)
        {
            if (var == 0) continue;
            if (fabs(mPartialF[var]) < delta)
            {
                rY[var] = mYInit[var] + mDt*mEvalF[var];
            }
            else
            {
                rY[var] = mYInit[var] + (mEvalF[var]/mPartialF[var])*(exp(mPartialF[var]*mDt)-1.0);
            }
            
        }


    }
   
    
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative0(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        double d_dt_chaste_interface_var_membrane__V;
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000104
        double var_chaste_interface__Na_channel_states__P_O_Na = rY[2];
        // Units: dimensionless; Initial value: 3.756e-13
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[11];
        // Units: dimensionless; Initial value: 3.289e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[12];
        // Units: dimensionless; Initial value: 0.99975
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = rY[13];
        // Units: dimensionless; Initial value: 0.000983
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = rY[14];
        // Units: dimensionless; Initial value: 0.9942
        double var_chaste_interface__Kr_channel_states__P_O = rY[15];
        // Units: dimensionless; Initial value: 1.104e-10
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = rY[20];
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = rY[21];
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = rY[22];
        // Units: dimensionless; Initial value: 0.01167
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = rY[23];
        // Units: dimensionless; Initial value: 0.99998
        double var_chaste_interface__ionic_concentrations__Nai = rY[33];
        // Units: millimolar; Initial value: 10.532
        double var_chaste_interface__ionic_concentrations__Ki = rY[34];
        // Units: millimolar; Initial value: 140.557
        

        // Mathematics
        const double var_ATP_sensitive_potassium_current__ATPi = 3.0; // millimolar
        const double var_ATP_sensitive_potassium_current__hATP = 2.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__i_K_ATP_on = 1.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__kATP = 0.00025000000000000001; // millimolar
        const double var_ATP_sensitive_potassium_current__nATP = 0.23999999999999999; // dimensionless
        const double var_ATP_sensitive_potassium_current__nicholsarea = 5.0000000000000002e-5; // dimensionless
        const double var_ATP_sensitive_potassium_current__g_K_ATP = 0.000193 * var_ATP_sensitive_potassium_current__i_K_ATP_on / var_ATP_sensitive_potassium_current__nicholsarea; // milliS_per_microF
        const double var_ATP_sensitive_potassium_current__pATP = 1 / (1.0 + pow((var_ATP_sensitive_potassium_current__ATPi / var_ATP_sensitive_potassium_current__kATP), var_ATP_sensitive_potassium_current__hATP)); // dimensionless
        const double var_L_type_Ca_channel__P_Ca = 0.00054000000000000001; // cm_per_second
        const double var_L_type_Ca_channel__P_K = 1.9299999999999999e-7; // cm_per_second
        const double var_L_type_Ca_channel__P_Na = 6.75e-7; // cm_per_second
        const double var_L_type_Ca_channel__gamma_Cai = 1.0; // dimensionless
        const double var_L_type_Ca_channel__gamma_Cao = 0.34100000000000003; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ki = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ko = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nai = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nao = 0.75; // dimensionless
        const double var_L_type_Ca_channel_f_Ca_gate__Km_Ca = 0.00059999999999999995; // millimolar
        const double var_Na_Ca_exchanger__c2 = 0.0001; // millimolar
        const double var_Na_Ca_exchanger__gamma = 0.14999999999999999; // dimensionless
        const double var_T_type_Ca_channel__g_CaT = 0.050000000000000003; // milliS_per_microF
        const double var_calcium_background_current__g_Cab = 0.003016; // milliS_per_microF
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + var_chaste_interface__calcium_dynamics__Cai / var_L_type_Ca_channel_f_Ca_gate__Km_Ca); // dimensionless
        const double var_ATP_sensitive_potassium_current__GKbaraATP = pow((0.25 * mParameters[2]), var_ATP_sensitive_potassium_current__nATP) * var_ATP_sensitive_potassium_current__g_K_ATP * var_ATP_sensitive_potassium_current__pATP; // milliS_per_microF
        const double var_membrane__F = 96485.0; // coulomb_per_mole
        const double var_membrane__I_st_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_membrane__I_st = var_membrane__I_st_converted / HeartConfig::Instance()->GetCapacitance(); // microA_per_microF
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_calcium_background_current__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(mParameters[1] / var_chaste_interface__calcium_dynamics__Cai) / var_membrane__F; // millivolt
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(mParameters[3] / var_chaste_interface__ionic_concentrations__Nai) / var_membrane__F; // millivolt
        const double var_L_type_Ca_channel__I_CaCa = 4.0 * pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Cao * mParameters[1] + var_L_type_Ca_channel__gamma_Cai * var_chaste_interface__calcium_dynamics__Cai * exp(2.0 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_Ca * mParameters[4] * var_chaste_interface__membrane__V / ((-1.0 + exp(2.0 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaK = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * mParameters[2] + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_K * mParameters[4] * var_chaste_interface__membrane__V / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaNa = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * mParameters[3] + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_Na * mParameters[4] * var_chaste_interface__membrane__V / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaCa = var_L_type_Ca_channel__I_CaCa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaK = var_L_type_Ca_channel__I_CaK * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaNa = var_L_type_Ca_channel__I_CaNa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_CaCa + var_L_type_Ca_channel__i_CaK + var_L_type_Ca_channel__i_CaNa; // microA_per_microF
        const double var_Na_Ca_exchanger__i_NaCa = (-pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * mParameters[10] * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) / (1.0 + (pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_Na_Ca_exchanger__c2 * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // microA_per_microF
        const double var_T_type_Ca_channel__i_Ca_T = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2) * (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_T_type_Ca_channel__g_CaT * var_chaste_interface__T_type_Ca_channel_g_gate__g; // microA_per_microF
        const double var_calcium_background_current__i_Ca_b = (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_calcium_background_current__g_Cab; // microA_per_microF
        const double var_fast_sodium_current__i_Na = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__Na_channel_states__P_O_Na * mParameters[6]; // microA_per_microF
        const double var_non_specific_calcium_activated_current__K_m_ns_Ca = 0.0011999999999999999; // millimolar
        const double var_non_specific_calcium_activated_current__P_ns_Ca = 0; // cm_per_second
        const double var_non_specific_calcium_activated_current__I_ns_K = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * mParameters[2] + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__I_ns_Na = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * mParameters[3] + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_K = var_non_specific_calcium_activated_current__I_ns_K / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Na = var_non_specific_calcium_activated_current__I_ns_Na / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Ca = var_non_specific_calcium_activated_current__i_ns_K + var_non_specific_calcium_activated_current__i_ns_Na; // microA_per_microF
        const double var_plateau_potassium_current__Kp = 1 / (1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_plateau_potassium_current__g_Kp = 0.0055199999999999997; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__E_Kr = var_membrane__R * var_membrane__T * log(mParameters[2] / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_rapid_delayed_rectifier_potassium_current__g_Kr = pow(mParameters[2], 0.58999999999999997) * mParameters[8]; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_rapid_delayed_rectifier_potassium_current__E_Kr + var_chaste_interface__membrane__V) * var_chaste_interface__Kr_channel_states__P_O * var_rapid_delayed_rectifier_potassium_current__g_Kr; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__I_pCa = 1.1499999999999999; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__K_mpCa = 0.00050000000000000001; // millimolar
        const double var_sarcolemmal_calcium_pump__i_p_Ca = var_chaste_interface__calcium_dynamics__Cai * var_sarcolemmal_calcium_pump__I_pCa / (var_chaste_interface__calcium_dynamics__Cai + var_sarcolemmal_calcium_pump__K_mpCa); // microA_per_microF
        const double var_slow_delayed_rectifier_potassium_current__PNaK = 0.018329999999999999; // dimensionless
        const double var_slow_delayed_rectifier_potassium_current__E_Ks = var_membrane__R * var_membrane__T * log((mParameters[3] * var_slow_delayed_rectifier_potassium_current__PNaK + mParameters[2]) / (var_chaste_interface__ionic_concentrations__Nai * var_slow_delayed_rectifier_potassium_current__PNaK + var_chaste_interface__ionic_concentrations__Ki)) / var_membrane__F; // millivolt
        const double var_slow_delayed_rectifier_potassium_current__g_Ks = 0.433 * (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * mParameters[9]; // milliS_per_microF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = (-var_slow_delayed_rectifier_potassium_current__E_Ks + var_chaste_interface__membrane__V) * var_slow_delayed_rectifier_potassium_current__g_Ks * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2; // microA_per_microF
        const double var_sodium_activated_potassium_current__g_K_Na = 0; // milliS_per_microF
        const double var_sodium_activated_potassium_current__kdKNa = 66.0; // millimolar
        const double var_sodium_activated_potassium_current__nKNa = 2.7999999999999998; // dimensionless
        const double var_sodium_activated_potassium_current__pona = 0.84999999999999998 / (1.0 + pow((var_sodium_activated_potassium_current__kdKNa / var_chaste_interface__ionic_concentrations__Nai), var_sodium_activated_potassium_current__nKNa)); // dimensionless
        const double var_sodium_activated_potassium_current__pov = 0.80000000000000004 - 0.65000000000000002 / (1.0 + exp(8.3333333333333339 + 0.066666666666666666 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_sodium_background_current__g_Nab = 0.0040000000000000001; // milliS_per_microF
        const double var_sodium_background_current__i_Na_b = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_sodium_background_current__g_Nab; // microA_per_microF
        const double var_sodium_potassium_pump__I_NaK = 2.25; // microA_per_microF
        const double var_sodium_potassium_pump__K_mKo = 1.5; // millimolar
        const double var_sodium_potassium_pump__K_mNai = 10.0; // millimolar
        const double var_sodium_potassium_pump__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * mParameters[3]); // dimensionless
        const double var_sodium_potassium_pump__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + 0.036499999999999998 * var_sodium_potassium_pump__sigma * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // dimensionless
        const double var_sodium_potassium_pump__i_NaK = mParameters[2] * var_sodium_potassium_pump__I_NaK * var_sodium_potassium_pump__f_NaK / ((1.0 + pow(var_sodium_potassium_pump__K_mNai, 2) / pow(var_chaste_interface__ionic_concentrations__Nai, 2)) * (mParameters[2] + var_sodium_potassium_pump__K_mKo)); // microA_per_microF
        const double var_time_independent_potassium_current__E_K = var_membrane__R * var_membrane__T * log(mParameters[2] / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_ATP_sensitive_potassium_current__i_K_ATP = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_ATP_sensitive_potassium_current__GKbaraATP; // microA_per_microF
        const double var_plateau_potassium_current__i_Kp = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_plateau_potassium_current__Kp * var_plateau_potassium_current__g_Kp; // microA_per_microF
        const double var_sodium_activated_potassium_current__i_K_Na = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_sodium_activated_potassium_current__g_K_Na * var_sodium_activated_potassium_current__pona * var_sodium_activated_potassium_current__pov; // microA_per_microF
        const double var_time_independent_potassium_current__g_K1 = 0.43033148291193518 * sqrt(mParameters[2]) * mParameters[7]; // milliS_per_cm2
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K)); // per_second
        const double var_time_independent_potassium_current_K1_gate__beta_K1 = 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V)); // per_second
        const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_microF
        const double var_transient_outward_current__g_to = 1.1000000000000001; // milliS_per_microF
        const double var_transient_outward_current__rvdv = exp(0.01 * var_chaste_interface__membrane__V); // dimensionless
        const double var_transient_outward_current__i_to = pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_transient_outward_current__g_to * mParameters[11] * var_transient_outward_current__rvdv * var_chaste_interface__transient_outward_current_ydv_gate__ydv; // microA_per_microF
        const double var_membrane__V_orig_deriv = -(var_ATP_sensitive_potassium_current__i_K_ATP + var_L_type_Ca_channel__i_Ca_L + var_Na_Ca_exchanger__i_NaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_fast_sodium_current__i_Na + var_membrane__I_st + var_non_specific_calcium_activated_current__i_ns_Ca + var_plateau_potassium_current__i_Kp + var_rapid_delayed_rectifier_potassium_current__i_Kr + var_sarcolemmal_calcium_pump__i_p_Ca + var_slow_delayed_rectifier_potassium_current__i_Ks + var_sodium_activated_potassium_current__i_K_Na + var_sodium_background_current__i_Na_b + var_sodium_potassium_pump__i_NaK + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) / mParameters[5]; // millivolt / second
        d_dt_chaste_interface_var_membrane__V = 0.001 * var_membrane__V_orig_deriv; // millivolt / millisecond

        return d_dt_chaste_interface_var_membrane__V;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative0(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            double var_chaste_interface__calcium_dynamics__Cai = rY[1];
            // Units: millimolar; Initial value: 0.000104
            double var_chaste_interface__Na_channel_states__P_O_Na = rY[2];
            // Units: dimensionless; Initial value: 3.756e-13
            double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[11];
            // Units: dimensionless; Initial value: 3.289e-06
            double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[12];
            // Units: dimensionless; Initial value: 0.99975
            double var_chaste_interface__T_type_Ca_channel_b_gate__b = rY[13];
            // Units: dimensionless; Initial value: 0.000983
            double var_chaste_interface__T_type_Ca_channel_g_gate__g = rY[14];
            // Units: dimensionless; Initial value: 0.9942
            double var_chaste_interface__Kr_channel_states__P_O = rY[15];
            // Units: dimensionless; Initial value: 1.104e-10
            double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = rY[20];
            // Units: dimensionless; Initial value: 0.00447
            double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = rY[21];
            // Units: dimensionless; Initial value: 0.00447
            double var_chaste_interface__transient_outward_current_zdv_gate__zdv = rY[22];
            // Units: dimensionless; Initial value: 0.01167
            double var_chaste_interface__transient_outward_current_ydv_gate__ydv = rY[23];
            // Units: dimensionless; Initial value: 0.99998
            double var_chaste_interface__ionic_concentrations__Nai = rY[33];
            // Units: millimolar; Initial value: 10.532
            double var_chaste_interface__ionic_concentrations__Ki = rY[34];
            // Units: millimolar; Initial value: 140.557
            

            const double var_x0 = exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V);
            const double var_x1 = 1.0 + var_x0;
            const double var_x2 = 1 / var_x1;
            const double var_x3 = 0.0055199999999999997 * var_x2;
            const double var_x4 = pow(mParameters[2], 0.23999999999999999);
            const double var_x5 = 1.921898339896919e-8 * var_x4;
            const double var_x6 = var_chaste_interface__Na_channel_states__P_O_Na * mParameters[6];
            const double var_x7 = pow(mParameters[2], 0.58999999999999997) * mParameters[8];
            const double var_x8 = var_x7 * var_chaste_interface__Kr_channel_states__P_O;
            const double var_x9 = 1 / var_chaste_interface__ionic_concentrations__Ki;
            const double var_x10 = log(var_x9 * mParameters[2]);
            const double var_x11 = -26.712338705498265 * var_x10 + var_chaste_interface__membrane__V;
            const double var_x12 = 1 / var_chaste_interface__calcium_dynamics__Cai;
            const double var_x13 = pow(var_x12, 1.3999999999999999);
            const double var_x14 = 1.0 + 6.4818210260626455e-7 * var_x13;
            const double var_x15 = 1 / var_x14;
            const double var_x16 = (0.433 + 0.25979999999999998 * var_x15) * mParameters[9];
            const double var_x17 = var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2;
            const double var_x18 = var_x16 * var_x17;
            const double var_x19 = exp(0.01 * var_chaste_interface__membrane__V);
            const double var_x20 = var_x19 * pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * mParameters[11];
            const double var_x21 = var_x20 * var_chaste_interface__transient_outward_current_ydv_gate__ydv;
            const double var_x22 = 1.1000000000000001 * var_x21;
            const double var_x23 = exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 6.3708927812613361 * var_x10);
            const double var_x24 = 1.0 + var_x23;
            const double var_x25 = 1 / var_x24;
            const double var_x26 = exp(-2.4444678999999998 + 13.738155796237757 * var_x10 - 0.51429999999999998 * var_chaste_interface__membrane__V);
            const double var_x27 = 1.0 + var_x26;
            const double var_x28 = 1 / var_x27;
            const double var_x29 = exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 2.1455350448256207 * var_x10);
            const double var_x30 = exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 1.6494869150645177 * var_x10);
            const double var_x31 = var_x30 + 0.49124000000000001 * var_x29;
            const double var_x32 = var_x28 * var_x31;
            const double var_x33 = 1 / (1000.0 * var_x32 + 1020.0 * var_x25);
            const double var_x34 = sqrt(mParameters[2]);
            const double var_x35 = var_x25 * var_x34 * mParameters[7];
            const double var_x36 = var_x33 * var_x35;
            const double var_x37 = 438.93811257017387 * var_x36;
            const double var_x38 = pow(mParameters[3], 3);
            const double var_x39 = var_x38 * var_chaste_interface__calcium_dynamics__Cai;
            const double var_x40 = pow(var_chaste_interface__ionic_concentrations__Nai, 3);
            const double var_x41 = 0.037435883507802616 * var_chaste_interface__membrane__V;
            const double var_x42 = exp(var_x41);
            const double var_x43 = var_x42 * mParameters[1];
            const double var_x44 = var_x40 * var_x43;
            const double var_x45 = var_x44 - var_x39;
            const double var_x46 = exp(-0.031820500981632228 * var_chaste_interface__membrane__V);
            const double var_x47 = 0.031820500981632228 * var_x46;
            const double var_x48 = 1.0 + 0.0001 * var_x46 * (var_x39 + var_x44);
            const double var_x49 = mParameters[10] / var_x48;
            const double var_x50 = var_x45 * var_x47 * var_x49;
            const double var_x51 = var_x45 * mParameters[10] / pow(var_x48, 2);
            const double var_x52 = var_x46 * var_x51 * (var_x47 * (0.0001 * var_x39 + 0.0001 * var_x44) - 3.7435883507802621e-6 * var_x44 * var_x46);
            const double var_x53 = 1 / (1.5 + mParameters[2]);
            const double var_x54 = exp(-0.003743588350780262 * var_chaste_interface__membrane__V);
            const double var_x55 = exp(0.01485884101040119 * mParameters[3]);
            const double var_x56 = exp(-var_x41);
            const double var_x57 = 1.0 + 0.1245 * var_x54 + 0.036499999999999998 * var_x56 * (-0.14285714285714285 + 0.14285714285714285 * var_x55);
            const double var_x58 = pow(var_chaste_interface__ionic_concentrations__Nai, 2);
            const double var_x59 = 1 / var_x58;
            const double var_x60 = 2.25 / (1.0 + 100.0 * var_x59);
            const double var_x61 = var_x46 * var_x49;
            const double var_x62 = var_x44 * var_x61;
            const double var_x63 = 0.037435883507802616 * var_x62;
            const double var_x64 = -1.0 + var_x42;
            const double var_x65 = 1 / var_x64;
            const double var_x66 = 1 / (1.0 + 1666.6666666666667 * var_chaste_interface__calcium_dynamics__Cai);
            const double var_x67 = var_x66 * mParameters[4] * var_chaste_interface__L_type_Ca_channel_f_gate__f;
            const double var_x68 = var_x67 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
            const double var_x69 = var_x65 * var_x68;
            const double var_x70 = 0.75 * var_x42;
            const double var_x71 = -0.75 * mParameters[3] + var_x70 * var_chaste_interface__ionic_concentrations__Nai;
            const double var_x72 = 0.0024381008236689767 * var_x71;
            const double var_x73 = var_x69 * var_x72;
            const double var_x74 = -0.75 * mParameters[2] + var_x70 * var_chaste_interface__ionic_concentrations__Ki;
            const double var_x75 = 0.00069711623550831479 * var_x74;
            const double var_x76 = var_x69 * var_x75;
            const double var_x77 = var_x23 / pow(var_x24, 2);
            const double var_x78 = 1000.0 * var_x28;
            const double var_x79 = var_x26 * var_x31 / pow(var_x27, 2);
            const double var_x80 = 0.0004218936106979757 * var_x11 * var_x35 / pow((var_x25 + 0.98039215686274506 * var_x32), 2);
            const double var_x81 = var_x11 * var_x33 * var_x34 * mParameters[7];
            const double var_x82 = var_x42 * var_x69 * var_chaste_interface__membrane__V;
            const double var_x83 = var_x68 * var_chaste_interface__membrane__V;
            const double var_x84 = var_x42 * var_x83 / pow(var_x64, 2);
            const double var_x85 = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2);
            const double var_x86 = var_x85 * var_chaste_interface__T_type_Ca_channel_g_gate__g;
            const double var_x87 = 0.050000000000000003 * var_x86;
            const double var_x88 = exp(0.074871767015605231 * var_chaste_interface__membrane__V);
            const double var_x89 = -1.0 + var_x88;
            const double var_x90 = 1 / var_x89;
            const double var_x91 = var_x88 * var_chaste_interface__calcium_dynamics__Cai;
            const double var_x92 = var_x91 - 0.34100000000000003 * mParameters[1];
            const double var_x93 = var_x90 * var_x92;
            const double var_x94 = 7.8019226357407252 * var_x93;
            const double var_x95 = var_x68 * var_x94;
            const double var_x96 = var_x83 * var_x90;
            const double var_x97 = var_x87 + var_x95 + 0.58414373385695628 * var_x91 * var_x96 - 0.58414373385695628 * var_x83 * var_x88 * var_x92 / pow(var_x89, 2);
            const double var_x98 = 1 / mParameters[5];
            const double var_x99 = 0.001 * var_x98;
            
            partialF = -var_x99 * (0.0070159999999999997 + var_x18 + var_x22 + var_x3 + var_x37 + var_x5 + var_x52 + var_x6 + var_x63 + var_x73 + var_x76 + var_x8 + var_x97 - var_x50 + var_x80 * (243.26999999999998 * var_x77 - 514.29999999999995 * var_x79 - var_x78 * (0.061749999999999999 * var_x30 + 0.039456396800000001 * var_x29)) + 6.8454343811362063e-5 * var_x82 * var_chaste_interface__ionic_concentrations__Nai + 1.9572871637915374e-5 * var_x82 * var_chaste_interface__ionic_concentrations__Ki + 0.011000000000000001 * var_x11 * var_x21 - 2.6097162183887167e-5 * var_x74 * var_x84 - 9.1272458415149417e-5 * var_x71 * var_x84 - 104.68673984798647 * var_x77 * var_x81 + 0.00092307692307692295 * var_x0 * var_x11 / pow(var_x1, 2) + var_x53 * var_x60 * (0.00046607674967214262 * var_x54 + 0.037435883507802616 * var_x56 * (-0.0052142857142857138 + 0.0052142857142857138 * var_x55)) * mParameters[2] / pow(var_x57, 2));
        }
        else
        {
            const double y_save = rY[0];
            rY[0] += delta;
            const double temp = EvaluateYDerivative0(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[0])/delta;
            rY[0] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative1(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000104
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[11];
        // Units: dimensionless; Initial value: 3.289e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[12];
        // Units: dimensionless; Initial value: 0.99975
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = rY[13];
        // Units: dimensionless; Initial value: 0.000983
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = rY[14];
        // Units: dimensionless; Initial value: 0.9942
        double var_chaste_interface__calcium_dynamics__Ca_JSR = rY[24];
        // Units: millimolar; Initial value: 1.516
        double var_chaste_interface__calcium_dynamics__Ca_NSR = rY[25];
        // Units: millimolar; Initial value: 1.518
        double var_chaste_interface__calcium_dynamics__APtrack2 = rY[27];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__Cainfluxtrack = rY[29];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack2 = rY[31];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ionic_concentrations__Nai = rY[33];
        // Units: millimolar; Initial value: 10.532
        

        // Mathematics
        const double var_L_type_Ca_channel__P_Ca = 0.00054000000000000001; // cm_per_second
        const double var_L_type_Ca_channel__gamma_Cai = 1.0; // dimensionless
        const double var_L_type_Ca_channel__gamma_Cao = 0.34100000000000003; // dimensionless
        const double var_L_type_Ca_channel_f_Ca_gate__Km_Ca = 0.00059999999999999995; // millimolar
        const double var_Na_Ca_exchanger__c2 = 0.0001; // millimolar
        const double var_Na_Ca_exchanger__gamma = 0.14999999999999999; // dimensionless
        const double var_T_type_Ca_channel__g_CaT = 0.050000000000000003; // milliS_per_microF
        const double var_calcium_background_current__g_Cab = 0.003016; // milliS_per_microF
        const double var_calcium_dynamics__CMDN_max = 0.050000000000000003; // millimolar
        const double var_calcium_dynamics__Ca_NSR_max = 15.0; // millimolar
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + var_chaste_interface__calcium_dynamics__Cai / var_L_type_Ca_channel_f_Ca_gate__Km_Ca); // dimensionless
        const double var_calcium_dynamics__G_rel_overload = 4000.0; // per_second
        const double var_calcium_dynamics__I_up = 8.75; // millimolar_per_second
        const double var_calcium_dynamics__K_leak = var_calcium_dynamics__I_up / var_calcium_dynamics__Ca_NSR_max; // per_second
        const double var_calcium_dynamics__K_mCMDN = 0.0023800000000000002; // millimolar
        const double var_calcium_dynamics__K_mTn = 0.00050000000000000001; // millimolar
        const double var_calcium_dynamics__K_mrel = 0.00080000000000000004; // millimolar
        const double var_calcium_dynamics__K_mup = 0.00092000000000000003; // millimolar
        const double var_calcium_dynamics__Tn_max = 0.070000000000000007; // millimolar
        const double var_calcium_dynamics__delta_Ca_ith = 0.00018000000000000001; // millimolar
        const double var_calcium_dynamics__G_rel = ((var_chaste_interface__calcium_dynamics__Cainfluxtrack > var_calcium_dynamics__delta_Ca_ith) ? ((1.0 - var_chaste_interface__calcium_dynamics__APtrack2) * (-var_calcium_dynamics__delta_Ca_ith + var_chaste_interface__calcium_dynamics__Cainfluxtrack) * var_chaste_interface__calcium_dynamics__APtrack2 * mParameters[0] / (-var_calcium_dynamics__delta_Ca_ith + var_chaste_interface__calcium_dynamics__Cainfluxtrack + var_calcium_dynamics__K_mrel)) : ((var_chaste_interface__calcium_dynamics__OVRLDtrack2 > 0) ? ((1.0 - var_chaste_interface__calcium_dynamics__OVRLDtrack2) * var_calcium_dynamics__G_rel_overload * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (0))); // per_second
        const double var_calcium_dynamics__i_leak = var_chaste_interface__calcium_dynamics__Ca_NSR * var_calcium_dynamics__K_leak; // millimolar_per_second
        const double var_calcium_dynamics__i_rel = (-var_chaste_interface__calcium_dynamics__Cai + var_chaste_interface__calcium_dynamics__Ca_JSR) * var_calcium_dynamics__G_rel; // millimolar_per_second
        const double var_calcium_dynamics__i_up = var_chaste_interface__calcium_dynamics__Cai * var_calcium_dynamics__I_up / (var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__K_mup); // millimolar_per_second
        const double var_ionic_concentrations__A_cap = 1.434e-7; // mm2
        const double var_ionic_concentrations__preplength = 0.001; // mm
        const double var_ionic_concentrations__radius = 0.00011; // mm
        const double var_ionic_concentrations__volume = M_PI * pow(var_ionic_concentrations__radius, 2) * var_ionic_concentrations__preplength; // micro_litre
        const double var_ionic_concentrations__V_myo = 0.68000000000000005 * var_ionic_concentrations__volume; // micro_litre
        const double var_calcium_dynamics__V_JSR = 0.0070588235294117632 * var_ionic_concentrations__V_myo; // micro_litre
        const double var_calcium_dynamics__V_NSR = 0.081176470588235281 * var_ionic_concentrations__V_myo; // micro_litre
        const double var_membrane__F = 96485.0; // coulomb_per_mole
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_calcium_background_current__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(mParameters[1] / var_chaste_interface__calcium_dynamics__Cai) / var_membrane__F; // millivolt
        const double var_L_type_Ca_channel__I_CaCa = 4.0 * pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Cao * mParameters[1] + var_L_type_Ca_channel__gamma_Cai * var_chaste_interface__calcium_dynamics__Cai * exp(2.0 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_Ca * mParameters[4] * var_chaste_interface__membrane__V / ((-1.0 + exp(2.0 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaCa = var_L_type_Ca_channel__I_CaCa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_Na_Ca_exchanger__i_NaCa = (-pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * mParameters[10] * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) / (1.0 + (pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_Na_Ca_exchanger__c2 * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // microA_per_microF
        const double var_T_type_Ca_channel__i_Ca_T = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2) * (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_T_type_Ca_channel__g_CaT * var_chaste_interface__T_type_Ca_channel_g_gate__g; // microA_per_microF
        const double var_calcium_background_current__i_Ca_b = (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_calcium_background_current__g_Cab; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__I_pCa = 1.1499999999999999; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__K_mpCa = 0.00050000000000000001; // millimolar
        const double var_sarcolemmal_calcium_pump__i_p_Ca = var_chaste_interface__calcium_dynamics__Cai * var_sarcolemmal_calcium_pump__I_pCa / (var_chaste_interface__calcium_dynamics__Cai + var_sarcolemmal_calcium_pump__K_mpCa); // microA_per_microF
        const double var_calcium_dynamics__Cai_orig_deriv = ((-var_calcium_dynamics__i_up + var_calcium_dynamics__i_leak) * var_calcium_dynamics__V_NSR / var_ionic_concentrations__V_myo + var_calcium_dynamics__V_JSR * var_calcium_dynamics__i_rel / var_ionic_concentrations__V_myo - 0.5 * (-2.0 * var_Na_Ca_exchanger__i_NaCa + var_L_type_Ca_channel__i_CaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_sarcolemmal_calcium_pump__i_p_Ca) * var_ionic_concentrations__A_cap / (var_ionic_concentrations__V_myo * var_membrane__F)) / (1.0 + var_calcium_dynamics__CMDN_max * var_calcium_dynamics__K_mCMDN / pow((var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__K_mCMDN), 2) + var_calcium_dynamics__K_mTn * var_calcium_dynamics__Tn_max / pow((var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__K_mTn), 2)); // millimolar / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Cai = 0.001 * var_calcium_dynamics__Cai_orig_deriv; // millimolar / millisecond

        return d_dt_chaste_interface_var_calcium_dynamics__Cai;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative1(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            double var_chaste_interface__calcium_dynamics__Cai = rY[1];
            // Units: millimolar; Initial value: 0.000104
            double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[11];
            // Units: dimensionless; Initial value: 3.289e-06
            double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[12];
            // Units: dimensionless; Initial value: 0.99975
            double var_chaste_interface__T_type_Ca_channel_b_gate__b = rY[13];
            // Units: dimensionless; Initial value: 0.000983
            double var_chaste_interface__T_type_Ca_channel_g_gate__g = rY[14];
            // Units: dimensionless; Initial value: 0.9942
            double var_chaste_interface__calcium_dynamics__Ca_JSR = rY[24];
            // Units: millimolar; Initial value: 1.516
            double var_chaste_interface__calcium_dynamics__Ca_NSR = rY[25];
            // Units: millimolar; Initial value: 1.518
            double var_chaste_interface__calcium_dynamics__APtrack2 = rY[27];
            // Units: dimensionless; Initial value: 0.0
            double var_chaste_interface__calcium_dynamics__Cainfluxtrack = rY[29];
            // Units: dimensionless; Initial value: 0.0
            double var_chaste_interface__calcium_dynamics__OVRLDtrack2 = rY[31];
            // Units: dimensionless; Initial value: 0.0
            double var_chaste_interface__ionic_concentrations__Nai = rY[33];
            // Units: millimolar; Initial value: 10.532
            

            const double var_x12 = 1 / var_chaste_interface__calcium_dynamics__Cai;
            const double var_x38 = pow(mParameters[3], 3);
            const double var_x39 = var_x38 * var_chaste_interface__calcium_dynamics__Cai;
            const double var_x40 = pow(var_chaste_interface__ionic_concentrations__Nai, 3);
            const double var_x41 = 0.037435883507802616 * var_chaste_interface__membrane__V;
            const double var_x42 = exp(var_x41);
            const double var_x43 = var_x42 * mParameters[1];
            const double var_x44 = var_x40 * var_x43;
            const double var_x45 = var_x44 - var_x39;
            const double var_x46 = exp(-0.031820500981632228 * var_chaste_interface__membrane__V);
            const double var_x48 = 1.0 + 0.0001 * var_x46 * (var_x39 + var_x44);
            const double var_x49 = mParameters[10] / var_x48;
            const double var_x51 = var_x45 * mParameters[10] / pow(var_x48, 2);
            const double var_x61 = var_x46 * var_x49;
            const double var_x66 = 1 / (1.0 + 1666.6666666666667 * var_chaste_interface__calcium_dynamics__Cai);
            const double var_x67 = var_x66 * mParameters[4] * var_chaste_interface__L_type_Ca_channel_f_gate__f;
            const double var_x68 = var_x67 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
            const double var_x83 = var_x68 * var_chaste_interface__membrane__V;
            const double var_x85 = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2);
            const double var_x86 = var_x85 * var_chaste_interface__T_type_Ca_channel_g_gate__g;
            const double var_x87 = 0.050000000000000003 * var_x86;
            const double var_x88 = exp(0.074871767015605231 * var_chaste_interface__membrane__V);
            const double var_x89 = -1.0 + var_x88;
            const double var_x90 = 1 / var_x89;
            const double var_x91 = var_x88 * var_chaste_interface__calcium_dynamics__Cai;
            const double var_x92 = var_x91 - 0.34100000000000003 * mParameters[1];
            const double var_x93 = var_x90 * var_x92;
            const double var_x94 = 7.8019226357407252 * var_x93;
            const double var_x95 = var_x68 * var_x94;
            const double var_x96 = var_x83 * var_x90;
            const double var_x100 = var_x38 * var_x61;
            const double var_x101 = var_x51 * pow(var_x46, 2);
            const double var_x102 = var_x101 * var_x38;
            const double var_x107 = mParameters[4] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__membrane__V;
            const double var_x108 = var_x107 * var_chaste_interface__L_type_Ca_channel_f_gate__f / pow((0.00059999999999999995 + var_chaste_interface__calcium_dynamics__Cai), 2);
            const double var_x110 = 0.00050000000000000001 + var_chaste_interface__calcium_dynamics__Cai;
            const double var_x111 = 1.1499999999999999 / var_x110;
            const double var_x112 = pow(var_x110, (-2));
            const double var_x113 = var_x111 + 0.040282206767891383 * var_x12 + 7.8019226357407252 * var_x88 * var_x96 + 0.6678084676374566 * var_x12 * var_x86 - 1.1499999999999999 * var_x112 * var_chaste_interface__calcium_dynamics__Cai - 0.0046811535814444347 * var_x108 * var_x93;
            const double var_x121 = log(var_x12 * mParameters[1]);
            const double var_x122 = -13.356169352749133 * var_x121 + var_chaste_interface__membrane__V;
            const double var_x137 = var_x45 * var_x61;
            const double var_x139 = 0.0023800000000000002 + var_chaste_interface__calcium_dynamics__Cai;
            const double var_x140 = 1.0 + 0.00011900000000000002 / pow(var_x139, 2) + 3.5000000000000004e-5 * var_x112;
            const double var_x141 = 1 / var_x140;
            const double var_x142 = 1 / M_PI;
            const double var_x145 = 0.00092000000000000003 + var_chaste_interface__calcium_dynamics__Cai;
            const double var_x146 = 1 / var_x145;
            const double var_x147 = 0.71029411764705874 * var_x146;
            const double var_x148 = 1.0 - var_chaste_interface__calcium_dynamics__APtrack2;
            const double var_x149 = 0.00062 + var_chaste_interface__calcium_dynamics__Cainfluxtrack;
            const double var_x150 = 1 / var_x149;
            const double var_x151 = -0.00018000000000000001 + var_chaste_interface__calcium_dynamics__Cainfluxtrack;
            const double var_x152 = var_x150 * var_x151 * mParameters[0];
            const double var_x153 = var_x148 * var_x152;
            const double var_x154 = var_chaste_interface__calcium_dynamics__Cainfluxtrack > 0.00018000000000000001;
            const double var_x155 = var_chaste_interface__calcium_dynamics__OVRLDtrack2 > 0;
            const double var_x156 = ((var_x154) ? (var_x153 * var_chaste_interface__calcium_dynamics__APtrack2) : ((var_x155) ? (4000.0 * (1.0 - var_chaste_interface__calcium_dynamics__OVRLDtrack2) * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (0)));
            const double var_x157 = 0.0070588235294117632 * var_x156;
            const double var_x158 = var_chaste_interface__calcium_dynamics__Cai / pow(var_x145, 2);
            const double var_x159 = 0.090316078310111333 * var_x142;
            const double var_x160 = 0.001 * var_x141;
            const double var_x161 = -var_chaste_interface__calcium_dynamics__Cai + var_chaste_interface__calcium_dynamics__Ca_JSR;
            const double var_x162 = -0.040282206767891383 * var_x121 + var_x111 * var_chaste_interface__calcium_dynamics__Cai + var_x122 * var_x87 + var_x95 * var_chaste_interface__membrane__V;
            
            partialF = var_x160 * (-var_x147 - var_x157 + 0.71029411764705874 * var_x158 - var_x159 * (var_x113 + 2.0 * var_x100 + 0.00020000000000000001 * var_x102)) + 0.001 * (0.00023800000000000004 / pow(var_x139, 3) + 7.0000000000000007e-5 / pow(var_x110, 3)) * (0.047352941176470584 * var_chaste_interface__calcium_dynamics__Ca_NSR + var_x157 * var_x161 - var_x147 * var_chaste_interface__calcium_dynamics__Cai - var_x159 * (var_x162 + 0.003016 * var_chaste_interface__membrane__V - 2.0 * var_x137)) / pow(var_x140, 2);
        }
        else
        {
            const double y_save = rY[1];
            rY[1] += delta;
            const double temp = EvaluateYDerivative1(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[1])/delta;
            rY[1] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative2(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__Na_channel_states__P_O_Na = rY[2];
        // Units: dimensionless; Initial value: 3.756e-13
        double var_chaste_interface__Na_channel_states__P_C1 = rY[3];
        // Units: dimensionless; Initial value: 4.744e-10
        double var_chaste_interface__Na_channel_states__P_IF = rY[6];
        // Units: dimensionless; Initial value: 8.147e-11
        

        // Mathematics
        const double var_Na_channel_states__alpha_13 = 3802.0 / (0.25 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V) + 0.1027 * exp(-0.083333333333333329 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_2 = 9178.0 * exp(0.033692722371967652 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__alpha_3 = 0.00037932999999999999 * exp(-0.12987012987012986 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_13 = 220.0 * exp(0.49261083743842365 - 0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_3 = 8.4000000000000004 + 0.02 * var_chaste_interface__membrane__V; // per_second
        const double var_Na_channel_states__beta_2 = var_Na_channel_states__alpha_13 * var_Na_channel_states__alpha_2 * var_Na_channel_states__alpha_3 / (var_Na_channel_states__beta_13 * var_Na_channel_states__beta_3); // per_second
        const double var_Na_channel_states__P_O_Na_orig_deriv = (-var_Na_channel_states__alpha_2 - var_Na_channel_states__beta_13) * var_chaste_interface__Na_channel_states__P_O_Na + var_chaste_interface__Na_channel_states__P_C1 * var_Na_channel_states__alpha_13 + var_chaste_interface__Na_channel_states__P_IF * var_Na_channel_states__beta_2; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_O_Na = 0.001 * var_Na_channel_states__P_O_Na_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_Na_channel_states__P_O_Na;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative2(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x171 = -0.04926108374384236 * var_chaste_interface__membrane__V;
            const double var_x172 = exp(0.49261083743842365 + var_x171);
            const double var_x173 = exp(0.033692722371967652 * var_chaste_interface__membrane__V);
            const double var_x187 = 9.1780000000000008 * var_x173;
            const double var_x188 = 0.22 * var_x172;
            
            partialF = -var_x187 - var_x188;
        }
        else
        {
            const double y_save = rY[2];
            rY[2] += delta;
            const double temp = EvaluateYDerivative2(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[2])/delta;
            rY[2] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative3(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__Na_channel_states__P_O_Na = rY[2];
        // Units: dimensionless; Initial value: 3.756e-13
        double var_chaste_interface__Na_channel_states__P_C1 = rY[3];
        // Units: dimensionless; Initial value: 4.744e-10
        double var_chaste_interface__Na_channel_states__P_C2 = rY[4];
        // Units: dimensionless; Initial value: 9.776e-08
        double var_chaste_interface__Na_channel_states__P_IF = rY[6];
        // Units: dimensionless; Initial value: 8.147e-11
        

        // Mathematics
        const double var_Na_channel_states__alpha_12 = 3802.0 / (0.1027 * exp(-0.066666666666666666 * var_chaste_interface__membrane__V) + 0.23000000000000001 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_13 = 3802.0 / (0.25 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V) + 0.1027 * exp(-0.083333333333333329 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_3 = 0.00037932999999999999 * exp(-0.12987012987012986 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_12 = 200.0 * exp(0.24630541871921183 - 0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_13 = 220.0 * exp(0.49261083743842365 - 0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_3 = 8.4000000000000004 + 0.02 * var_chaste_interface__membrane__V; // per_second
        const double var_Na_channel_states__P_C1_orig_deriv = (-var_Na_channel_states__alpha_13 - var_Na_channel_states__beta_12 - var_Na_channel_states__beta_3) * var_chaste_interface__Na_channel_states__P_C1 + var_chaste_interface__Na_channel_states__P_C2 * var_Na_channel_states__alpha_12 + var_chaste_interface__Na_channel_states__P_IF * var_Na_channel_states__alpha_3 + var_chaste_interface__Na_channel_states__P_O_Na * var_Na_channel_states__beta_13; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_C1 = 0.001 * var_Na_channel_states__P_C1_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_Na_channel_states__P_C1;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative3(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x171 = -0.04926108374384236 * var_chaste_interface__membrane__V;
            const double var_x175 = exp(-0.083333333333333329 * var_chaste_interface__membrane__V);
            const double var_x176 = exp(-0.0066666666666666671 * var_chaste_interface__membrane__V);
            const double var_x180 = 1 / (0.25 * var_x176 + 0.1027 * var_x175);
            const double var_x189 = 3.802 * var_x180;
            const double var_x191 = exp(0.24630541871921183 + var_x171);
            const double var_x196 = 0.20000000000000001 * var_x191;
            const double var_x197 = -var_x196;
            const double var_x198 = 2.0000000000000002e-5 * var_chaste_interface__membrane__V;
            const double var_x199 = -0.0084000000000000012 - var_x198;
            
            partialF = var_x197 + var_x199 - var_x189;
        }
        else
        {
            const double y_save = rY[3];
            rY[3] += delta;
            const double temp = EvaluateYDerivative3(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[3])/delta;
            rY[3] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative4(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__Na_channel_states__P_C1 = rY[3];
        // Units: dimensionless; Initial value: 4.744e-10
        double var_chaste_interface__Na_channel_states__P_C2 = rY[4];
        // Units: dimensionless; Initial value: 9.776e-08
        double var_chaste_interface__Na_channel_states__P_C3 = rY[5];
        // Units: dimensionless; Initial value: 7.583e-06
        double var_chaste_interface__Na_channel_states__P_IC2 = rY[8];
        // Units: dimensionless; Initial value: 1.679e-08
        

        // Mathematics
        const double var_Na_channel_states__alpha_11 = 3802.0 / (0.20000000000000001 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V) + 0.1027 * exp(-0.058823529411764705 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_12 = 3802.0 / (0.1027 * exp(-0.066666666666666666 * var_chaste_interface__membrane__V) + 0.23000000000000001 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_3 = 0.00037932999999999999 * exp(-0.12987012987012986 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_11 = 191.69999999999999 * exp(-0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_12 = 200.0 * exp(0.24630541871921183 - 0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_3 = 8.4000000000000004 + 0.02 * var_chaste_interface__membrane__V; // per_second
        const double var_Na_channel_states__P_C2_orig_deriv = (-var_Na_channel_states__alpha_12 - var_Na_channel_states__beta_11 - var_Na_channel_states__beta_3) * var_chaste_interface__Na_channel_states__P_C2 + var_chaste_interface__Na_channel_states__P_C1 * var_Na_channel_states__beta_12 + var_chaste_interface__Na_channel_states__P_C3 * var_Na_channel_states__alpha_11 + var_chaste_interface__Na_channel_states__P_IC2 * var_Na_channel_states__alpha_3; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_C2 = 0.001 * var_Na_channel_states__P_C2_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_Na_channel_states__P_C2;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative4(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x171 = -0.04926108374384236 * var_chaste_interface__membrane__V;
            const double var_x176 = exp(-0.0066666666666666671 * var_chaste_interface__membrane__V);
            const double var_x194 = exp(-0.066666666666666666 * var_chaste_interface__membrane__V);
            const double var_x198 = 2.0000000000000002e-5 * var_chaste_interface__membrane__V;
            const double var_x199 = -0.0084000000000000012 - var_x198;
            const double var_x200 = 3.802 / (0.1027 * var_x194 + 0.23000000000000001 * var_x176);
            const double var_x202 = exp(var_x171);
            const double var_x207 = 0.19169999999999998 * var_x202;
            const double var_x208 = -var_x200 - var_x207;
            
            partialF = var_x199 + var_x208;
        }
        else
        {
            const double y_save = rY[4];
            rY[4] += delta;
            const double temp = EvaluateYDerivative4(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[4])/delta;
            rY[4] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative5(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__Na_channel_states__P_C2 = rY[4];
        // Units: dimensionless; Initial value: 9.776e-08
        double var_chaste_interface__Na_channel_states__P_C3 = rY[5];
        // Units: dimensionless; Initial value: 7.583e-06
        double var_chaste_interface__Na_channel_states__P_IC3 = rY[7];
        // Units: dimensionless; Initial value: 1.302e-06
        

        // Mathematics
        const double var_Na_channel_states__alpha_11 = 3802.0 / (0.20000000000000001 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V) + 0.1027 * exp(-0.058823529411764705 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_3 = 0.00037932999999999999 * exp(-0.12987012987012986 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_11 = 191.69999999999999 * exp(-0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_3 = 8.4000000000000004 + 0.02 * var_chaste_interface__membrane__V; // per_second
        const double var_Na_channel_states__P_C3_orig_deriv = (-var_Na_channel_states__alpha_11 - var_Na_channel_states__beta_3) * var_chaste_interface__Na_channel_states__P_C3 + var_chaste_interface__Na_channel_states__P_C2 * var_Na_channel_states__beta_11 + var_chaste_interface__Na_channel_states__P_IC3 * var_Na_channel_states__alpha_3; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_C3 = 0.001 * var_Na_channel_states__P_C3_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_Na_channel_states__P_C3;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative5(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x176 = exp(-0.0066666666666666671 * var_chaste_interface__membrane__V);
            const double var_x198 = 2.0000000000000002e-5 * var_chaste_interface__membrane__V;
            const double var_x199 = -0.0084000000000000012 - var_x198;
            const double var_x205 = exp(-0.058823529411764705 * var_chaste_interface__membrane__V);
            const double var_x209 = 3.802 / (0.20000000000000001 * var_x176 + 0.1027 * var_x205);
            const double var_x211 = -var_x209;
            
            partialF = var_x199 + var_x211;
        }
        else
        {
            const double y_save = rY[5];
            rY[5] += delta;
            const double temp = EvaluateYDerivative5(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[5])/delta;
            rY[5] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative6(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__Na_channel_states__P_O_Na = rY[2];
        // Units: dimensionless; Initial value: 3.756e-13
        double var_chaste_interface__Na_channel_states__P_C1 = rY[3];
        // Units: dimensionless; Initial value: 4.744e-10
        double var_chaste_interface__Na_channel_states__P_IF = rY[6];
        // Units: dimensionless; Initial value: 8.147e-11
        double var_chaste_interface__Na_channel_states__P_IC2 = rY[8];
        // Units: dimensionless; Initial value: 1.679e-08
        double var_chaste_interface__Na_channel_states__P_IM1 = rY[9];
        // Units: dimensionless; Initial value: 9.736e-12
        

        // Mathematics
        const double var_Na_channel_states__alpha_12 = 3802.0 / (0.1027 * exp(-0.066666666666666666 * var_chaste_interface__membrane__V) + 0.23000000000000001 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_13 = 3802.0 / (0.25 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V) + 0.1027 * exp(-0.083333333333333329 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_2 = 9178.0 * exp(0.033692722371967652 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__alpha_3 = 0.00037932999999999999 * exp(-0.12987012987012986 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__alpha_4 = 0.01 * var_Na_channel_states__alpha_2; // per_second
        const double var_Na_channel_states__beta_12 = 200.0 * exp(0.24630541871921183 - 0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_13 = 220.0 * exp(0.49261083743842365 - 0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_3 = 8.4000000000000004 + 0.02 * var_chaste_interface__membrane__V; // per_second
        const double var_Na_channel_states__beta_2 = var_Na_channel_states__alpha_13 * var_Na_channel_states__alpha_2 * var_Na_channel_states__alpha_3 / (var_Na_channel_states__beta_13 * var_Na_channel_states__beta_3); // per_second
        const double var_Na_channel_states__beta_4 = var_Na_channel_states__alpha_3; // per_second
        const double var_Na_channel_states__P_IF_orig_deriv = (-var_Na_channel_states__alpha_3 - var_Na_channel_states__alpha_4 - var_Na_channel_states__beta_12 - var_Na_channel_states__beta_2) * var_chaste_interface__Na_channel_states__P_IF + var_chaste_interface__Na_channel_states__P_C1 * var_Na_channel_states__beta_3 + var_chaste_interface__Na_channel_states__P_IC2 * var_Na_channel_states__alpha_12 + var_chaste_interface__Na_channel_states__P_IM1 * var_Na_channel_states__beta_4 + var_chaste_interface__Na_channel_states__P_O_Na * var_Na_channel_states__alpha_2; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_IF = 0.001 * var_Na_channel_states__P_IF_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_Na_channel_states__P_IF;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative6(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x171 = -0.04926108374384236 * var_chaste_interface__membrane__V;
            const double var_x172 = exp(0.49261083743842365 + var_x171);
            const double var_x173 = exp(0.033692722371967652 * var_chaste_interface__membrane__V);
            const double var_x175 = exp(-0.083333333333333329 * var_chaste_interface__membrane__V);
            const double var_x176 = exp(-0.0066666666666666671 * var_chaste_interface__membrane__V);
            const double var_x179 = 1 / (8.4000000000000004 + 0.02 * var_chaste_interface__membrane__V);
            const double var_x180 = 1 / (0.25 * var_x176 + 0.1027 * var_x175);
            const double var_x181 = exp(-0.12987012987012986 * var_chaste_interface__membrane__V);
            const double var_x182 = 1 / var_x172;
            const double var_x183 = var_x173 * var_x180 * var_x181 * var_x182;
            const double var_x184 = var_x179 * var_x183;
            const double var_x190 = 0.060166489970363633 * var_x184;
            const double var_x191 = exp(0.24630541871921183 + var_x171);
            const double var_x196 = 0.20000000000000001 * var_x191;
            const double var_x197 = -var_x196;
            const double var_x201 = 3.7933e-7 * var_x181;
            const double var_x214 = 0.09178 * var_x173;
            const double var_x215 = -var_x201;
            
            partialF = var_x197 + var_x215 - var_x190 - var_x214;
        }
        else
        {
            const double y_save = rY[6];
            rY[6] += delta;
            const double temp = EvaluateYDerivative6(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[6])/delta;
            rY[6] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative7(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__Na_channel_states__P_C3 = rY[5];
        // Units: dimensionless; Initial value: 7.583e-06
        double var_chaste_interface__Na_channel_states__P_IC3 = rY[7];
        // Units: dimensionless; Initial value: 1.302e-06
        double var_chaste_interface__Na_channel_states__P_IC2 = rY[8];
        // Units: dimensionless; Initial value: 1.679e-08
        

        // Mathematics
        const double var_Na_channel_states__alpha_11 = 3802.0 / (0.20000000000000001 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V) + 0.1027 * exp(-0.058823529411764705 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_3 = 0.00037932999999999999 * exp(-0.12987012987012986 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_11 = 191.69999999999999 * exp(-0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_3 = 8.4000000000000004 + 0.02 * var_chaste_interface__membrane__V; // per_second
        const double var_Na_channel_states__P_IC3_orig_deriv = (-var_Na_channel_states__alpha_11 - var_Na_channel_states__alpha_3) * var_chaste_interface__Na_channel_states__P_IC3 + var_chaste_interface__Na_channel_states__P_C3 * var_Na_channel_states__beta_3 + var_chaste_interface__Na_channel_states__P_IC2 * var_Na_channel_states__beta_11; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_IC3 = 0.001 * var_Na_channel_states__P_IC3_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_Na_channel_states__P_IC3;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative7(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x176 = exp(-0.0066666666666666671 * var_chaste_interface__membrane__V);
            const double var_x181 = exp(-0.12987012987012986 * var_chaste_interface__membrane__V);
            const double var_x201 = 3.7933e-7 * var_x181;
            const double var_x205 = exp(-0.058823529411764705 * var_chaste_interface__membrane__V);
            const double var_x209 = 3.802 / (0.20000000000000001 * var_x176 + 0.1027 * var_x205);
            const double var_x211 = -var_x209;
            const double var_x215 = -var_x201;
            
            partialF = var_x211 + var_x215;
        }
        else
        {
            const double y_save = rY[7];
            rY[7] += delta;
            const double temp = EvaluateYDerivative7(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[7])/delta;
            rY[7] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative8(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__Na_channel_states__P_C2 = rY[4];
        // Units: dimensionless; Initial value: 9.776e-08
        double var_chaste_interface__Na_channel_states__P_IF = rY[6];
        // Units: dimensionless; Initial value: 8.147e-11
        double var_chaste_interface__Na_channel_states__P_IC3 = rY[7];
        // Units: dimensionless; Initial value: 1.302e-06
        double var_chaste_interface__Na_channel_states__P_IC2 = rY[8];
        // Units: dimensionless; Initial value: 1.679e-08
        

        // Mathematics
        const double var_Na_channel_states__alpha_11 = 3802.0 / (0.20000000000000001 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V) + 0.1027 * exp(-0.058823529411764705 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_12 = 3802.0 / (0.1027 * exp(-0.066666666666666666 * var_chaste_interface__membrane__V) + 0.23000000000000001 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_3 = 0.00037932999999999999 * exp(-0.12987012987012986 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_11 = 191.69999999999999 * exp(-0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_12 = 200.0 * exp(0.24630541871921183 - 0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_3 = 8.4000000000000004 + 0.02 * var_chaste_interface__membrane__V; // per_second
        const double var_Na_channel_states__P_IC2_orig_deriv = (-var_Na_channel_states__alpha_12 - var_Na_channel_states__alpha_3 - var_Na_channel_states__beta_11) * var_chaste_interface__Na_channel_states__P_IC2 + var_chaste_interface__Na_channel_states__P_C2 * var_Na_channel_states__beta_3 + var_chaste_interface__Na_channel_states__P_IC3 * var_Na_channel_states__alpha_11 + var_chaste_interface__Na_channel_states__P_IF * var_Na_channel_states__beta_12; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_IC2 = 0.001 * var_Na_channel_states__P_IC2_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_Na_channel_states__P_IC2;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative8(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x171 = -0.04926108374384236 * var_chaste_interface__membrane__V;
            const double var_x176 = exp(-0.0066666666666666671 * var_chaste_interface__membrane__V);
            const double var_x181 = exp(-0.12987012987012986 * var_chaste_interface__membrane__V);
            const double var_x194 = exp(-0.066666666666666666 * var_chaste_interface__membrane__V);
            const double var_x200 = 3.802 / (0.1027 * var_x194 + 0.23000000000000001 * var_x176);
            const double var_x201 = 3.7933e-7 * var_x181;
            const double var_x202 = exp(var_x171);
            const double var_x207 = 0.19169999999999998 * var_x202;
            const double var_x208 = -var_x200 - var_x207;
            const double var_x215 = -var_x201;
            
            partialF = var_x208 + var_x215;
        }
        else
        {
            const double y_save = rY[8];
            rY[8] += delta;
            const double temp = EvaluateYDerivative8(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[8])/delta;
            rY[8] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative9(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__Na_channel_states__P_IF = rY[6];
        // Units: dimensionless; Initial value: 8.147e-11
        double var_chaste_interface__Na_channel_states__P_IM1 = rY[9];
        // Units: dimensionless; Initial value: 9.736e-12
        double var_chaste_interface__Na_channel_states__P_IM2 = rY[10];
        // Units: dimensionless; Initial value: 6.187e-14
        

        // Mathematics
        const double var_Na_channel_states__alpha_2 = 9178.0 * exp(0.033692722371967652 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__alpha_3 = 0.00037932999999999999 * exp(-0.12987012987012986 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__alpha_4 = 0.01 * var_Na_channel_states__alpha_2; // per_second
        const double var_Na_channel_states__alpha_5 = 1.0526315789473684e-5 * var_Na_channel_states__alpha_2; // per_second
        const double var_Na_channel_states__beta_4 = var_Na_channel_states__alpha_3; // per_second
        const double var_Na_channel_states__beta_5 = 0.02 * var_Na_channel_states__alpha_3; // per_second
        const double var_Na_channel_states__P_IM1_orig_deriv = (-var_Na_channel_states__alpha_5 - var_Na_channel_states__beta_4) * var_chaste_interface__Na_channel_states__P_IM1 + var_chaste_interface__Na_channel_states__P_IF * var_Na_channel_states__alpha_4 + var_chaste_interface__Na_channel_states__P_IM2 * var_Na_channel_states__beta_5; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_IM1 = 0.001 * var_Na_channel_states__P_IM1_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_Na_channel_states__P_IM1;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative9(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x173 = exp(0.033692722371967652 * var_chaste_interface__membrane__V);
            const double var_x181 = exp(-0.12987012987012986 * var_chaste_interface__membrane__V);
            const double var_x201 = 3.7933e-7 * var_x181;
            const double var_x215 = -var_x201;
            const double var_x218 = 9.6610526315789479e-5 * var_x173;
            
            partialF = var_x215 - var_x218;
        }
        else
        {
            const double y_save = rY[9];
            rY[9] += delta;
            const double temp = EvaluateYDerivative9(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[9])/delta;
            rY[9] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative10(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__Na_channel_states__P_IM1 = rY[9];
        // Units: dimensionless; Initial value: 9.736e-12
        double var_chaste_interface__Na_channel_states__P_IM2 = rY[10];
        // Units: dimensionless; Initial value: 6.187e-14
        

        // Mathematics
        const double var_Na_channel_states__alpha_2 = 9178.0 * exp(0.033692722371967652 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__alpha_3 = 0.00037932999999999999 * exp(-0.12987012987012986 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__alpha_5 = 1.0526315789473684e-5 * var_Na_channel_states__alpha_2; // per_second
        const double var_Na_channel_states__beta_5 = 0.02 * var_Na_channel_states__alpha_3; // per_second
        const double var_Na_channel_states__P_IM2_orig_deriv = var_chaste_interface__Na_channel_states__P_IM1 * var_Na_channel_states__alpha_5 - var_chaste_interface__Na_channel_states__P_IM2 * var_Na_channel_states__beta_5; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_IM2 = 0.001 * var_Na_channel_states__P_IM2_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_Na_channel_states__P_IM2;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative10(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x181 = exp(-0.12987012987012986 * var_chaste_interface__membrane__V);
            const double var_x219 = 7.5866000000000003e-9 * var_x181;
            
            partialF = -var_x219;
        }
        else
        {
            const double y_save = rY[10];
            rY[10] += delta;
            const double temp = EvaluateYDerivative10(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[10])/delta;
            rY[10] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative11(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[11];
        // Units: dimensionless; Initial value: 3.289e-06
        

        // Mathematics
        const double var_L_type_Ca_channel_d_gate__d_infinity = 1 / (1.0 + exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_L_type_Ca_channel_d_gate__tau_d = 0.028571428571428571 * (1.0 - exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V)) * var_L_type_Ca_channel_d_gate__d_infinity / (10.0 + var_chaste_interface__membrane__V); // second
        const double var_L_type_Ca_channel_d_gate__alpha_d = var_L_type_Ca_channel_d_gate__d_infinity / var_L_type_Ca_channel_d_gate__tau_d; // per_second
        const double var_L_type_Ca_channel_d_gate__beta_d = (1.0 - var_L_type_Ca_channel_d_gate__d_infinity) / var_L_type_Ca_channel_d_gate__tau_d; // per_second
        const double var_L_type_Ca_channel_d_gate__d_orig_deriv = (1.0 - var_chaste_interface__L_type_Ca_channel_d_gate__d) * var_L_type_Ca_channel_d_gate__alpha_d - var_L_type_Ca_channel_d_gate__beta_d * var_chaste_interface__L_type_Ca_channel_d_gate__d; // 1 / second
        const double d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d = 0.001 * var_L_type_Ca_channel_d_gate__d_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative11(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x221 = exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V);
            const double var_x222 = 1.0 - var_x221;
            const double var_x223 = 1 / var_x222;
            const double var_x224 = 0.035000000000000003 * var_x223;
            const double var_x225 = 10.0 + var_chaste_interface__membrane__V;
            const double var_x228 = 1.0 + var_x221;
            const double var_x229 = 1 / var_x228;
            const double var_x230 = 1.0 - var_x229;
            const double var_x231 = var_x228 * var_x230;
            const double var_x234 = var_x224 * var_x225;
            
            partialF = -var_x234 - var_x231 * var_x234;
        }
        else
        {
            const double y_save = rY[11];
            rY[11] += delta;
            const double temp = EvaluateYDerivative11(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[11])/delta;
            rY[11] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative12(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[12];
        // Units: dimensionless; Initial value: 0.99975
        

        // Mathematics
        const double var_L_type_Ca_channel_f_gate__f_infinity = 1 / (1.0 + exp(4.0 + 0.125 * var_chaste_interface__membrane__V)) + 0.59999999999999998 / (1.0 + exp(2.5 - 0.050000000000000003 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_L_type_Ca_channel_f_gate__tau_f = 0.001 / (0.02 + 0.019699999999999999 * exp(-0.113569 * pow((1 + 0.10000000000000001 * var_chaste_interface__membrane__V), 2))); // second
        const double var_L_type_Ca_channel_f_gate__alpha_f = var_L_type_Ca_channel_f_gate__f_infinity / var_L_type_Ca_channel_f_gate__tau_f; // per_second
        const double var_L_type_Ca_channel_f_gate__beta_f = (1.0 - var_L_type_Ca_channel_f_gate__f_infinity) / var_L_type_Ca_channel_f_gate__tau_f; // per_second
        const double var_L_type_Ca_channel_f_gate__f_orig_deriv = (1.0 - var_chaste_interface__L_type_Ca_channel_f_gate__f) * var_L_type_Ca_channel_f_gate__alpha_f - var_L_type_Ca_channel_f_gate__beta_f * var_chaste_interface__L_type_Ca_channel_f_gate__f; // 1 / second
        const double d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f = 0.001 * var_L_type_Ca_channel_f_gate__f_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative12(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x235 = exp(-0.113569 * pow((1 + 0.10000000000000001 * var_chaste_interface__membrane__V), 2));
            const double var_x238 = exp(2.5 - 0.050000000000000003 * var_chaste_interface__membrane__V);
            const double var_x239 = 1.0 + var_x238;
            const double var_x241 = exp(4.0 + 0.125 * var_chaste_interface__membrane__V);
            const double var_x242 = 1.0 + var_x241;
            const double var_x244 = 0.019699999999999999 * var_x235;
            const double var_x245 = -0.02 - var_x244;
            const double var_x246 = 1 / var_x242;
            const double var_x247 = 0.59999999999999998 / var_x239;
            const double var_x248 = var_x246 + var_x247;
            const double var_x250 = 1.0 - var_x246 - var_x247;
            
            partialF = var_x245 * var_x248 + var_x245 * var_x250;
        }
        else
        {
            const double y_save = rY[12];
            rY[12] += delta;
            const double temp = EvaluateYDerivative12(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[12])/delta;
            rY[12] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative13(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = rY[13];
        // Units: dimensionless; Initial value: 0.000983
        

        // Mathematics
        const double var_T_type_Ca_channel_b_gate__b_inf = 1 / (1.0 + exp(-1.2962962962962963 - 0.092592592592592587 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_T_type_Ca_channel_b_gate__tau_b = 0.0037000000000000002 + 0.0061000000000000004 / (1.0 + exp(5.5555555555555554 + 0.22222222222222221 * var_chaste_interface__membrane__V)); // second
        const double var_T_type_Ca_channel_b_gate__b_orig_deriv = (-var_chaste_interface__T_type_Ca_channel_b_gate__b + var_T_type_Ca_channel_b_gate__b_inf) / var_T_type_Ca_channel_b_gate__tau_b; // 1 / second
        const double d_dt_chaste_interface_var_T_type_Ca_channel_b_gate__b = 0.001 * var_T_type_Ca_channel_b_gate__b_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_T_type_Ca_channel_b_gate__b;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative13(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x253 = exp(5.5555555555555554 + 0.22222222222222221 * var_chaste_interface__membrane__V);
            const double var_x254 = 1.0 + var_x253;
            const double var_x255 = 1 / var_x254;
            const double var_x256 = 1 / (0.0037000000000000002 + 0.0061000000000000004 * var_x255);
            
            partialF = -0.001 * var_x256;
        }
        else
        {
            const double y_save = rY[13];
            rY[13] += delta;
            const double temp = EvaluateYDerivative13(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[13])/delta;
            rY[13] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative14(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = rY[14];
        // Units: dimensionless; Initial value: 0.9942
        

        // Mathematics
        const double var_T_type_Ca_channel_g_gate__g_inf = 1 / (1.0 + exp(10.714285714285715 + 0.17857142857142858 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_T_type_Ca_channel_g_gate__tau_g = ((var_chaste_interface__membrane__V <= 0) ? (0.012 - 0.00087500000000000002 * var_chaste_interface__membrane__V) : (0.012)); // second
        const double var_T_type_Ca_channel_g_gate__g_orig_deriv = (-var_chaste_interface__T_type_Ca_channel_g_gate__g + var_T_type_Ca_channel_g_gate__g_inf) / var_T_type_Ca_channel_g_gate__tau_g; // 1 / second
        const double d_dt_chaste_interface_var_T_type_Ca_channel_g_gate__g = 0.001 * var_T_type_Ca_channel_g_gate__g_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_T_type_Ca_channel_g_gate__g;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative14(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x259 = var_chaste_interface__membrane__V <= 0;
            const double var_x260 = ((var_x259) ? (1 / (0.012 - 0.00087500000000000002 * var_chaste_interface__membrane__V)) : (83.333333333333329));
            
            partialF = -0.001 * var_x260;
        }
        else
        {
            const double y_save = rY[14];
            rY[14] += delta;
            const double temp = EvaluateYDerivative14(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[14])/delta;
            rY[14] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative15(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__Kr_channel_states__P_O = rY[15];
        // Units: dimensionless; Initial value: 1.104e-10
        double var_chaste_interface__Kr_channel_states__P_C1 = rY[16];
        // Units: dimensionless; Initial value: 3.4083e-08
        double var_chaste_interface__Kr_channel_states__P_I = rY[19];
        // Units: dimensionless; Initial value: 3.386e-11
        

        // Mathematics
        const double var_Kr_channel_states__alpha_alpha = 65.5 * exp(-1.9969750799999999 + 0.055471529999999998 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__alpha_i = 1975.5 * exp(-0.58799999999999997 - 0.023519999999999999 * var_chaste_interface__membrane__V) / mParameters[2]; // per_second
        const double var_Kr_channel_states__beta_beta = 2.9357000000000002 * exp(-0.021579999999999998 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__beta_i = 1030.0720270741688 * pow(mParameters[2], (-0.29999999999999999)) * exp(0.00094200000000000002 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__P_O_orig_deriv = (-var_Kr_channel_states__beta_beta - var_Kr_channel_states__beta_i) * var_chaste_interface__Kr_channel_states__P_O + var_chaste_interface__Kr_channel_states__P_C1 * var_Kr_channel_states__alpha_alpha + var_chaste_interface__Kr_channel_states__P_I * var_Kr_channel_states__alpha_i; // 1 / second
        const double d_dt_chaste_interface_var_Kr_channel_states__P_O = 0.001 * var_Kr_channel_states__P_O_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_Kr_channel_states__P_O;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative15(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x261 = exp(-0.021579999999999998 * var_chaste_interface__membrane__V);
            const double var_x262 = exp(0.00094200000000000002 * var_chaste_interface__membrane__V);
            const double var_x263 = var_x262 * pow(mParameters[2], (-0.29999999999999999));
            const double var_x272 = 0.0029357000000000003 * var_x261;
            const double var_x273 = 1.0300720270741688 * var_x263;
            
            partialF = -var_x272 - var_x273;
        }
        else
        {
            const double y_save = rY[15];
            rY[15] += delta;
            const double temp = EvaluateYDerivative15(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[15])/delta;
            rY[15] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative16(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__Kr_channel_states__P_O = rY[15];
        // Units: dimensionless; Initial value: 1.104e-10
        double var_chaste_interface__Kr_channel_states__P_C1 = rY[16];
        // Units: dimensionless; Initial value: 3.4083e-08
        double var_chaste_interface__Kr_channel_states__P_C2 = rY[17];
        // Units: dimensionless; Initial value: 1.69e-08
        double var_chaste_interface__Kr_channel_states__P_I = rY[19];
        // Units: dimensionless; Initial value: 3.386e-11
        

        // Mathematics
        const double var_Kr_channel_states__alpha_in = 2172.0; // per_second
        const double var_Kr_channel_states__beta_in = 1077.0; // per_second
        const double var_Kr_channel_states__alpha_alpha = 65.5 * exp(-1.9969750799999999 + 0.055471529999999998 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__alpha_i = 1975.5 * exp(-0.58799999999999997 - 0.023519999999999999 * var_chaste_interface__membrane__V) / mParameters[2]; // per_second
        const double var_Kr_channel_states__beta_beta = 2.9357000000000002 * exp(-0.021579999999999998 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__beta_i = 1030.0720270741688 * pow(mParameters[2], (-0.29999999999999999)) * exp(0.00094200000000000002 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__mu = var_Kr_channel_states__alpha_i * var_Kr_channel_states__beta_beta / var_Kr_channel_states__beta_i; // per_second
        const double var_Kr_channel_states__P_C1_orig_deriv = (-var_Kr_channel_states__beta_in - 2 * var_Kr_channel_states__alpha_alpha) * var_chaste_interface__Kr_channel_states__P_C1 + var_chaste_interface__Kr_channel_states__P_C2 * var_Kr_channel_states__alpha_in + var_chaste_interface__Kr_channel_states__P_I * var_Kr_channel_states__mu + var_chaste_interface__Kr_channel_states__P_O * var_Kr_channel_states__beta_beta; // 1 / second
        const double d_dt_chaste_interface_var_Kr_channel_states__P_C1 = 0.001 * var_Kr_channel_states__P_C1_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_Kr_channel_states__P_C1;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative16(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x265 = 0.055471529999999998 * var_chaste_interface__membrane__V;
            const double var_x266 = exp(-1.9969750799999999 + var_x265);
            
            partialF = -1.077 - 0.13100000000000001 * var_x266;
        }
        else
        {
            const double y_save = rY[16];
            rY[16] += delta;
            const double temp = EvaluateYDerivative16(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[16])/delta;
            rY[16] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative17(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__Kr_channel_states__P_C1 = rY[16];
        // Units: dimensionless; Initial value: 3.4083e-08
        double var_chaste_interface__Kr_channel_states__P_C2 = rY[17];
        // Units: dimensionless; Initial value: 1.69e-08
        double var_chaste_interface__Kr_channel_states__P_C3 = rY[18];
        // Units: dimensionless; Initial value: 4.949e-06
        

        // Mathematics
        const double var_Kr_channel_states__alpha_in = 2172.0; // per_second
        const double var_Kr_channel_states__beta_in = 1077.0; // per_second
        const double var_Kr_channel_states__alpha = 55.5 * exp(-0.66565836 + 0.055471529999999998 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__beta = 2.3570000000000002 * exp(-0.036588000000000002 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__P_C2_orig_deriv = (-var_Kr_channel_states__alpha_in - var_Kr_channel_states__beta) * var_chaste_interface__Kr_channel_states__P_C2 + var_chaste_interface__Kr_channel_states__P_C1 * var_Kr_channel_states__beta_in + var_chaste_interface__Kr_channel_states__P_C3 * var_Kr_channel_states__alpha; // 1 / second
        const double d_dt_chaste_interface_var_Kr_channel_states__P_C2 = 0.001 * var_Kr_channel_states__P_C2_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_Kr_channel_states__P_C2;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative17(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x279 = exp(-0.036588000000000002 * var_chaste_interface__membrane__V);
            const double var_x283 = 0.0023570000000000002 * var_x279;
            
            partialF = -2.1720000000000002 - var_x283;
        }
        else
        {
            const double y_save = rY[17];
            rY[17] += delta;
            const double temp = EvaluateYDerivative17(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[17])/delta;
            rY[17] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative18(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__Kr_channel_states__P_C2 = rY[17];
        // Units: dimensionless; Initial value: 1.69e-08
        double var_chaste_interface__Kr_channel_states__P_C3 = rY[18];
        // Units: dimensionless; Initial value: 4.949e-06
        

        // Mathematics
        const double var_Kr_channel_states__alpha = 55.5 * exp(-0.66565836 + 0.055471529999999998 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__beta = 2.3570000000000002 * exp(-0.036588000000000002 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__P_C3_orig_deriv = var_chaste_interface__Kr_channel_states__P_C2 * var_Kr_channel_states__beta - var_chaste_interface__Kr_channel_states__P_C3 * var_Kr_channel_states__alpha; // 1 / second
        const double d_dt_chaste_interface_var_Kr_channel_states__P_C3 = 0.001 * var_Kr_channel_states__P_C3_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_Kr_channel_states__P_C3;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative18(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x265 = 0.055471529999999998 * var_chaste_interface__membrane__V;
            const double var_x281 = exp(-0.66565836 + var_x265);
            const double var_x284 = 0.055500000000000001 * var_x281;
            
            partialF = -var_x284;
        }
        else
        {
            const double y_save = rY[18];
            rY[18] += delta;
            const double temp = EvaluateYDerivative18(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[18])/delta;
            rY[18] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative19(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__Kr_channel_states__P_O = rY[15];
        // Units: dimensionless; Initial value: 1.104e-10
        double var_chaste_interface__Kr_channel_states__P_C1 = rY[16];
        // Units: dimensionless; Initial value: 3.4083e-08
        double var_chaste_interface__Kr_channel_states__P_I = rY[19];
        // Units: dimensionless; Initial value: 3.386e-11
        

        // Mathematics
        const double var_Kr_channel_states__alpha_alpha = 65.5 * exp(-1.9969750799999999 + 0.055471529999999998 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__alpha_i = 1975.5 * exp(-0.58799999999999997 - 0.023519999999999999 * var_chaste_interface__membrane__V) / mParameters[2]; // per_second
        const double var_Kr_channel_states__beta_beta = 2.9357000000000002 * exp(-0.021579999999999998 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__beta_i = 1030.0720270741688 * pow(mParameters[2], (-0.29999999999999999)) * exp(0.00094200000000000002 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__mu = var_Kr_channel_states__alpha_i * var_Kr_channel_states__beta_beta / var_Kr_channel_states__beta_i; // per_second
        const double var_Kr_channel_states__P_I_orig_deriv = (-var_Kr_channel_states__alpha_i - var_Kr_channel_states__mu) * var_chaste_interface__Kr_channel_states__P_I + var_chaste_interface__Kr_channel_states__P_C1 * var_Kr_channel_states__alpha_alpha + var_chaste_interface__Kr_channel_states__P_O * var_Kr_channel_states__beta_i; // 1 / second
        const double d_dt_chaste_interface_var_Kr_channel_states__P_I = 0.001 * var_Kr_channel_states__P_I_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_Kr_channel_states__P_I;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative19(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x261 = exp(-0.021579999999999998 * var_chaste_interface__membrane__V);
            const double var_x262 = exp(0.00094200000000000002 * var_chaste_interface__membrane__V);
            const double var_x269 = exp(-0.58799999999999997 - 0.023519999999999999 * var_chaste_interface__membrane__V);
            const double var_x270 = var_x269 / mParameters[2];
            const double var_x275 = 1.9755 * var_x270;
            const double var_x276 = var_x261 * var_x269 * pow(mParameters[2], (-0.69999999999999996)) / var_x262;
            const double var_x278 = 0.0056301648793171408 * var_x276;
            
            partialF = -var_x275 - var_x278;
        }
        else
        {
            const double y_save = rY[19];
            rY[19] += delta;
            const double temp = EvaluateYDerivative19(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[19])/delta;
            rY[19] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative20(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = rY[20];
        // Units: dimensionless; Initial value: 0.00447
        

        // Mathematics
        const double var_slow_delayed_rectifier_potassium_current_xs1_gate__tau_xs1 = 0.001 / (0.00013100000000000001 * (30.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__V)) + 7.1899999999999999e-5 * (30.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__V))); // second
        const double var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_infinity = 1 / (1.0 + exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_orig_deriv = (-var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 + var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_infinity) / var_slow_delayed_rectifier_potassium_current_xs1_gate__tau_xs1; // 1 / second
        const double d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = 0.001 * var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative20(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x288 = exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__V);
            const double var_x289 = -1.0 + var_x288;
            const double var_x290 = 1 / var_x289;
            const double var_x292 = exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__V);
            const double var_x293 = 1.0 - var_x292;
            const double var_x294 = 1 / var_x293;
            const double var_x296 = 30.0 + var_chaste_interface__membrane__V;
            const double var_x300 = var_x290 * var_x296;
            const double var_x301 = var_x294 * var_x296;
            
            partialF = -0.00013100000000000001 * var_x300 - 7.1899999999999999e-5 * var_x301;
        }
        else
        {
            const double y_save = rY[20];
            rY[20] += delta;
            const double temp = EvaluateYDerivative20(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[20])/delta;
            rY[20] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative21(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = rY[21];
        // Units: dimensionless; Initial value: 0.00447
        

        // Mathematics
        const double var_slow_delayed_rectifier_potassium_current_xs2_gate__tau_xs2 = 0.0040000000000000001 / (0.00013100000000000001 * (30.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__V)) + 7.1899999999999999e-5 * (30.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__V))); // second
        const double var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_infinity = 1 / (1.0 + exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_orig_deriv = (-var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 + var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_infinity) / var_slow_delayed_rectifier_potassium_current_xs2_gate__tau_xs2; // 1 / second
        const double d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = 0.001 * var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative21(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x288 = exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__V);
            const double var_x289 = -1.0 + var_x288;
            const double var_x290 = 1 / var_x289;
            const double var_x292 = exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__V);
            const double var_x293 = 1.0 - var_x292;
            const double var_x294 = 1 / var_x293;
            const double var_x296 = 30.0 + var_chaste_interface__membrane__V;
            const double var_x300 = var_x290 * var_x296;
            const double var_x301 = var_x294 * var_x296;
            
            partialF = -3.2750000000000003e-5 * var_x300 - 1.7975e-5 * var_x301;
        }
        else
        {
            const double y_save = rY[21];
            rY[21] += delta;
            const double temp = EvaluateYDerivative21(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[21])/delta;
            rY[21] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative22(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = rY[22];
        // Units: dimensionless; Initial value: 0.01167
        

        // Mathematics
        const double var_transient_outward_current_zdv_gate__alpha_zdv = 10000.0 * exp(-1.6000000000000001 + 0.040000000000000001 * var_chaste_interface__membrane__V) / (1.0 + exp(-1.6000000000000001 + 0.040000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_transient_outward_current_zdv_gate__beta_zdv = 10000.0 * exp(-3.6000000000000001 - 0.040000000000000001 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.6000000000000001 - 0.040000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_transient_outward_current_zdv_gate__tau_zdv = 1 / (var_transient_outward_current_zdv_gate__alpha_zdv + var_transient_outward_current_zdv_gate__beta_zdv); // second
        const double var_transient_outward_current_zdv_gate__zdv_ss = var_transient_outward_current_zdv_gate__alpha_zdv / (var_transient_outward_current_zdv_gate__alpha_zdv + var_transient_outward_current_zdv_gate__beta_zdv); // dimensionless
        const double var_transient_outward_current_zdv_gate__zdv_orig_deriv = (-var_chaste_interface__transient_outward_current_zdv_gate__zdv + var_transient_outward_current_zdv_gate__zdv_ss) / var_transient_outward_current_zdv_gate__tau_zdv; // 1 / second
        const double d_dt_chaste_interface_var_transient_outward_current_zdv_gate__zdv = 0.001 * var_transient_outward_current_zdv_gate__zdv_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_transient_outward_current_zdv_gate__zdv;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative22(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x304 = 0.040000000000000001 * var_chaste_interface__membrane__V;
            const double var_x305 = exp(-1.6000000000000001 + var_x304);
            const double var_x306 = 1.0 + var_x305;
            const double var_x307 = var_x305 / var_x306;
            const double var_x308 = exp(-3.6000000000000001 - var_x304);
            const double var_x309 = 1.0 + var_x308;
            const double var_x310 = var_x308 / var_x309;
            const double var_x313 = 10.0 * var_x307;
            
            partialF = -var_x313 - 10.0 * var_x310;
        }
        else
        {
            const double y_save = rY[22];
            rY[22] += delta;
            const double temp = EvaluateYDerivative22(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[22])/delta;
            rY[22] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative23(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = rY[23];
        // Units: dimensionless; Initial value: 0.99998
        

        // Mathematics
        const double var_transient_outward_current_ydv_gate__alpha_ydv = 15.0 / (1.0 + exp(12.0 + 0.20000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_transient_outward_current_ydv_gate__beta_ydv = 100.0 * exp(5.0 + 0.20000000000000001 * var_chaste_interface__membrane__V) / (1.0 + exp(5.0 + 0.20000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_transient_outward_current_ydv_gate__tau_ydv = 1 / (var_transient_outward_current_ydv_gate__alpha_ydv + var_transient_outward_current_ydv_gate__beta_ydv); // second
        const double var_transient_outward_current_ydv_gate__ydv_ss = var_transient_outward_current_ydv_gate__alpha_ydv / (var_transient_outward_current_ydv_gate__alpha_ydv + var_transient_outward_current_ydv_gate__beta_ydv); // dimensionless
        const double var_transient_outward_current_ydv_gate__ydv_orig_deriv = (-var_chaste_interface__transient_outward_current_ydv_gate__ydv + var_transient_outward_current_ydv_gate__ydv_ss) / var_transient_outward_current_ydv_gate__tau_ydv; // 1 / second
        const double d_dt_chaste_interface_var_transient_outward_current_ydv_gate__ydv = 0.001 * var_transient_outward_current_ydv_gate__ydv_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_transient_outward_current_ydv_gate__ydv;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative23(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x320 = 0.20000000000000001 * var_chaste_interface__membrane__V;
            const double var_x321 = exp(12.0 + var_x320);
            const double var_x322 = 1.0 + var_x321;
            const double var_x323 = 1 / var_x322;
            const double var_x324 = exp(5.0 + var_x320);
            const double var_x325 = 1.0 + var_x324;
            const double var_x326 = var_x324 / var_x325;
            const double var_x333 = 0.014999999999999999 * var_x323;
            
            partialF = -var_x333 - 0.10000000000000001 * var_x326;
        }
        else
        {
            const double y_save = rY[23];
            rY[23] += delta;
            const double temp = EvaluateYDerivative23(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[23])/delta;
            rY[23] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative24(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000104
        double var_chaste_interface__calcium_dynamics__Ca_JSR = rY[24];
        // Units: millimolar; Initial value: 1.516
        double var_chaste_interface__calcium_dynamics__Ca_NSR = rY[25];
        // Units: millimolar; Initial value: 1.518
        double var_chaste_interface__calcium_dynamics__APtrack2 = rY[27];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__Cainfluxtrack = rY[29];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack2 = rY[31];
        // Units: dimensionless; Initial value: 0.0
        

        // Mathematics
        const double var_calcium_dynamics__CSQN_max = 10.0; // millimolar
        const double var_calcium_dynamics__G_rel_overload = 4000.0; // per_second
        const double var_calcium_dynamics__K_mCSQN = 0.80000000000000004; // millimolar
        const double var_calcium_dynamics__K_mrel = 0.00080000000000000004; // millimolar
        const double var_calcium_dynamics__delta_Ca_ith = 0.00018000000000000001; // millimolar
        const double var_calcium_dynamics__G_rel = ((var_chaste_interface__calcium_dynamics__Cainfluxtrack > var_calcium_dynamics__delta_Ca_ith) ? ((1.0 - var_chaste_interface__calcium_dynamics__APtrack2) * (-var_calcium_dynamics__delta_Ca_ith + var_chaste_interface__calcium_dynamics__Cainfluxtrack) * var_chaste_interface__calcium_dynamics__APtrack2 * mParameters[0] / (-var_calcium_dynamics__delta_Ca_ith + var_chaste_interface__calcium_dynamics__Cainfluxtrack + var_calcium_dynamics__K_mrel)) : ((var_chaste_interface__calcium_dynamics__OVRLDtrack2 > 0) ? ((1.0 - var_chaste_interface__calcium_dynamics__OVRLDtrack2) * var_calcium_dynamics__G_rel_overload * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (0))); // per_second
        const double var_calcium_dynamics__i_rel = (-var_chaste_interface__calcium_dynamics__Cai + var_chaste_interface__calcium_dynamics__Ca_JSR) * var_calcium_dynamics__G_rel; // millimolar_per_second
        const double var_calcium_dynamics__tau_tr = 0.17999999999999999; // second
        const double var_calcium_dynamics__i_tr = (-var_chaste_interface__calcium_dynamics__Ca_JSR + var_chaste_interface__calcium_dynamics__Ca_NSR) / var_calcium_dynamics__tau_tr; // millimolar_per_second
        const double var_calcium_dynamics__Ca_JSR_orig_deriv = (-var_calcium_dynamics__i_rel + var_calcium_dynamics__i_tr) / (1.0 + var_calcium_dynamics__CSQN_max * var_calcium_dynamics__K_mCSQN / pow((var_chaste_interface__calcium_dynamics__Ca_JSR + var_calcium_dynamics__K_mCSQN), 2)); // millimolar / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_JSR = 0.001 * var_calcium_dynamics__Ca_JSR_orig_deriv; // millimolar / millisecond

        return d_dt_chaste_interface_var_calcium_dynamics__Ca_JSR;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative24(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__calcium_dynamics__Cai = rY[1];
            // Units: millimolar; Initial value: 0.000104
            double var_chaste_interface__calcium_dynamics__Ca_JSR = rY[24];
            // Units: millimolar; Initial value: 1.516
            double var_chaste_interface__calcium_dynamics__Ca_NSR = rY[25];
            // Units: millimolar; Initial value: 1.518
            double var_chaste_interface__calcium_dynamics__APtrack2 = rY[27];
            // Units: dimensionless; Initial value: 0.0
            double var_chaste_interface__calcium_dynamics__Cainfluxtrack = rY[29];
            // Units: dimensionless; Initial value: 0.0
            double var_chaste_interface__calcium_dynamics__OVRLDtrack2 = rY[31];
            // Units: dimensionless; Initial value: 0.0
            

            const double var_x148 = 1.0 - var_chaste_interface__calcium_dynamics__APtrack2;
            const double var_x149 = 0.00062 + var_chaste_interface__calcium_dynamics__Cainfluxtrack;
            const double var_x150 = 1 / var_x149;
            const double var_x151 = -0.00018000000000000001 + var_chaste_interface__calcium_dynamics__Cainfluxtrack;
            const double var_x152 = var_x150 * var_x151 * mParameters[0];
            const double var_x153 = var_x148 * var_x152;
            const double var_x154 = var_chaste_interface__calcium_dynamics__Cainfluxtrack > 0.00018000000000000001;
            const double var_x155 = var_chaste_interface__calcium_dynamics__OVRLDtrack2 > 0;
            const double var_x156 = ((var_x154) ? (var_x153 * var_chaste_interface__calcium_dynamics__APtrack2) : ((var_x155) ? (4000.0 * (1.0 - var_chaste_interface__calcium_dynamics__OVRLDtrack2) * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (0)));
            const double var_x161 = -var_chaste_interface__calcium_dynamics__Cai + var_chaste_interface__calcium_dynamics__Ca_JSR;
            const double var_x334 = 0.80000000000000004 + var_chaste_interface__calcium_dynamics__Ca_JSR;
            const double var_x335 = pow(var_x334, (-2));
            const double var_x336 = 1 / (1.0 + 8.0 * var_x335);
            const double var_x337 = 0.001 * var_x336;
            
            partialF = var_x337 * (-5.5555555555555554 - var_x156) + 0.00025000000000000001 * (5.5555555555555554 * var_chaste_interface__calcium_dynamics__Ca_NSR - 5.5555555555555554 * var_chaste_interface__calcium_dynamics__Ca_JSR - var_x156 * var_x161) / (pow(var_x334, 3) * pow((0.125 + var_x335), 2));
        }
        else
        {
            const double y_save = rY[24];
            rY[24] += delta;
            const double temp = EvaluateYDerivative24(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[24])/delta;
            rY[24] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative25(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000104
        double var_chaste_interface__calcium_dynamics__Ca_JSR = rY[24];
        // Units: millimolar; Initial value: 1.516
        double var_chaste_interface__calcium_dynamics__Ca_NSR = rY[25];
        // Units: millimolar; Initial value: 1.518
        

        // Mathematics
        const double var_calcium_dynamics__Ca_NSR_max = 15.0; // millimolar
        const double var_calcium_dynamics__I_up = 8.75; // millimolar_per_second
        const double var_calcium_dynamics__K_leak = var_calcium_dynamics__I_up / var_calcium_dynamics__Ca_NSR_max; // per_second
        const double var_calcium_dynamics__K_mup = 0.00092000000000000003; // millimolar
        const double var_calcium_dynamics__i_leak = var_chaste_interface__calcium_dynamics__Ca_NSR * var_calcium_dynamics__K_leak; // millimolar_per_second
        const double var_calcium_dynamics__i_up = var_chaste_interface__calcium_dynamics__Cai * var_calcium_dynamics__I_up / (var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__K_mup); // millimolar_per_second
        const double var_calcium_dynamics__tau_tr = 0.17999999999999999; // second
        const double var_calcium_dynamics__i_tr = (-var_chaste_interface__calcium_dynamics__Ca_JSR + var_chaste_interface__calcium_dynamics__Ca_NSR) / var_calcium_dynamics__tau_tr; // millimolar_per_second
        const double var_ionic_concentrations__preplength = 0.001; // mm
        const double var_ionic_concentrations__radius = 0.00011; // mm
        const double var_ionic_concentrations__volume = M_PI * pow(var_ionic_concentrations__radius, 2) * var_ionic_concentrations__preplength; // micro_litre
        const double var_ionic_concentrations__V_myo = 0.68000000000000005 * var_ionic_concentrations__volume; // micro_litre
        const double var_calcium_dynamics__V_JSR = 0.0070588235294117632 * var_ionic_concentrations__V_myo; // micro_litre
        const double var_calcium_dynamics__V_NSR = 0.081176470588235281 * var_ionic_concentrations__V_myo; // micro_litre
        const double var_calcium_dynamics__Ca_NSR_orig_deriv = -var_calcium_dynamics__i_leak - var_calcium_dynamics__V_JSR * var_calcium_dynamics__i_tr / var_calcium_dynamics__V_NSR + var_calcium_dynamics__i_up; // millimolar / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_NSR = 0.001 * var_calcium_dynamics__Ca_NSR_orig_deriv; // millimolar / millisecond

        return d_dt_chaste_interface_var_calcium_dynamics__Ca_NSR;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative25(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            

            
            partialF = -0.001066425120772947;
        }
        else
        {
            const double y_save = rY[25];
            rY[25] += delta;
            const double temp = EvaluateYDerivative25(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[25])/delta;
            rY[25] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative26(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000104
        double var_chaste_interface__Na_channel_states__P_O_Na = rY[2];
        // Units: dimensionless; Initial value: 3.756e-13
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[11];
        // Units: dimensionless; Initial value: 3.289e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[12];
        // Units: dimensionless; Initial value: 0.99975
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = rY[13];
        // Units: dimensionless; Initial value: 0.000983
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = rY[14];
        // Units: dimensionless; Initial value: 0.9942
        double var_chaste_interface__Kr_channel_states__P_O = rY[15];
        // Units: dimensionless; Initial value: 1.104e-10
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = rY[20];
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = rY[21];
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = rY[22];
        // Units: dimensionless; Initial value: 0.01167
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = rY[23];
        // Units: dimensionless; Initial value: 0.99998
        double var_chaste_interface__calcium_dynamics__APtrack = rY[26];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ionic_concentrations__Nai = rY[33];
        // Units: millimolar; Initial value: 10.532
        double var_chaste_interface__ionic_concentrations__Ki = rY[34];
        // Units: millimolar; Initial value: 140.557
        

        // Mathematics
        const double var_ATP_sensitive_potassium_current__ATPi = 3.0; // millimolar
        const double var_ATP_sensitive_potassium_current__hATP = 2.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__i_K_ATP_on = 1.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__kATP = 0.00025000000000000001; // millimolar
        const double var_ATP_sensitive_potassium_current__nATP = 0.23999999999999999; // dimensionless
        const double var_ATP_sensitive_potassium_current__nicholsarea = 5.0000000000000002e-5; // dimensionless
        const double var_ATP_sensitive_potassium_current__g_K_ATP = 0.000193 * var_ATP_sensitive_potassium_current__i_K_ATP_on / var_ATP_sensitive_potassium_current__nicholsarea; // milliS_per_microF
        const double var_ATP_sensitive_potassium_current__pATP = 1 / (1.0 + pow((var_ATP_sensitive_potassium_current__ATPi / var_ATP_sensitive_potassium_current__kATP), var_ATP_sensitive_potassium_current__hATP)); // dimensionless
        const double var_L_type_Ca_channel__P_Ca = 0.00054000000000000001; // cm_per_second
        const double var_L_type_Ca_channel__P_K = 1.9299999999999999e-7; // cm_per_second
        const double var_L_type_Ca_channel__P_Na = 6.75e-7; // cm_per_second
        const double var_L_type_Ca_channel__gamma_Cai = 1.0; // dimensionless
        const double var_L_type_Ca_channel__gamma_Cao = 0.34100000000000003; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ki = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ko = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nai = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nao = 0.75; // dimensionless
        const double var_L_type_Ca_channel_f_Ca_gate__Km_Ca = 0.00059999999999999995; // millimolar
        const double var_Na_Ca_exchanger__c2 = 0.0001; // millimolar
        const double var_Na_Ca_exchanger__gamma = 0.14999999999999999; // dimensionless
        const double var_T_type_Ca_channel__g_CaT = 0.050000000000000003; // milliS_per_microF
        const double var_calcium_background_current__g_Cab = 0.003016; // milliS_per_microF
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + var_chaste_interface__calcium_dynamics__Cai / var_L_type_Ca_channel_f_Ca_gate__Km_Ca); // dimensionless
        const double var_ATP_sensitive_potassium_current__GKbaraATP = pow((0.25 * mParameters[2]), var_ATP_sensitive_potassium_current__nATP) * var_ATP_sensitive_potassium_current__g_K_ATP * var_ATP_sensitive_potassium_current__pATP; // milliS_per_microF
        const double var_membrane__F = 96485.0; // coulomb_per_mole
        const double var_membrane__I_st_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_membrane__I_st = var_membrane__I_st_converted / HeartConfig::Instance()->GetCapacitance(); // microA_per_microF
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_calcium_background_current__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(mParameters[1] / var_chaste_interface__calcium_dynamics__Cai) / var_membrane__F; // millivolt
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(mParameters[3] / var_chaste_interface__ionic_concentrations__Nai) / var_membrane__F; // millivolt
        const double var_L_type_Ca_channel__I_CaCa = 4.0 * pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Cao * mParameters[1] + var_L_type_Ca_channel__gamma_Cai * var_chaste_interface__calcium_dynamics__Cai * exp(2.0 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_Ca * mParameters[4] * var_chaste_interface__membrane__V / ((-1.0 + exp(2.0 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaK = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * mParameters[2] + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_K * mParameters[4] * var_chaste_interface__membrane__V / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaNa = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * mParameters[3] + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_Na * mParameters[4] * var_chaste_interface__membrane__V / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaCa = var_L_type_Ca_channel__I_CaCa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaK = var_L_type_Ca_channel__I_CaK * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaNa = var_L_type_Ca_channel__I_CaNa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_CaCa + var_L_type_Ca_channel__i_CaK + var_L_type_Ca_channel__i_CaNa; // microA_per_microF
        const double var_Na_Ca_exchanger__i_NaCa = (-pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * mParameters[10] * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) / (1.0 + (pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_Na_Ca_exchanger__c2 * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // microA_per_microF
        const double var_T_type_Ca_channel__i_Ca_T = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2) * (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_T_type_Ca_channel__g_CaT * var_chaste_interface__T_type_Ca_channel_g_gate__g; // microA_per_microF
        const double var_calcium_background_current__i_Ca_b = (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_calcium_background_current__g_Cab; // microA_per_microF
        const double var_fast_sodium_current__i_Na = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__Na_channel_states__P_O_Na * mParameters[6]; // microA_per_microF
        const double var_non_specific_calcium_activated_current__K_m_ns_Ca = 0.0011999999999999999; // millimolar
        const double var_non_specific_calcium_activated_current__P_ns_Ca = 0; // cm_per_second
        const double var_non_specific_calcium_activated_current__I_ns_K = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * mParameters[2] + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__I_ns_Na = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * mParameters[3] + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_K = var_non_specific_calcium_activated_current__I_ns_K / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Na = var_non_specific_calcium_activated_current__I_ns_Na / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Ca = var_non_specific_calcium_activated_current__i_ns_K + var_non_specific_calcium_activated_current__i_ns_Na; // microA_per_microF
        const double var_plateau_potassium_current__Kp = 1 / (1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_plateau_potassium_current__g_Kp = 0.0055199999999999997; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__E_Kr = var_membrane__R * var_membrane__T * log(mParameters[2] / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_rapid_delayed_rectifier_potassium_current__g_Kr = pow(mParameters[2], 0.58999999999999997) * mParameters[8]; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_rapid_delayed_rectifier_potassium_current__E_Kr + var_chaste_interface__membrane__V) * var_chaste_interface__Kr_channel_states__P_O * var_rapid_delayed_rectifier_potassium_current__g_Kr; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__I_pCa = 1.1499999999999999; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__K_mpCa = 0.00050000000000000001; // millimolar
        const double var_sarcolemmal_calcium_pump__i_p_Ca = var_chaste_interface__calcium_dynamics__Cai * var_sarcolemmal_calcium_pump__I_pCa / (var_chaste_interface__calcium_dynamics__Cai + var_sarcolemmal_calcium_pump__K_mpCa); // microA_per_microF
        const double var_slow_delayed_rectifier_potassium_current__PNaK = 0.018329999999999999; // dimensionless
        const double var_slow_delayed_rectifier_potassium_current__E_Ks = var_membrane__R * var_membrane__T * log((mParameters[3] * var_slow_delayed_rectifier_potassium_current__PNaK + mParameters[2]) / (var_chaste_interface__ionic_concentrations__Nai * var_slow_delayed_rectifier_potassium_current__PNaK + var_chaste_interface__ionic_concentrations__Ki)) / var_membrane__F; // millivolt
        const double var_slow_delayed_rectifier_potassium_current__g_Ks = 0.433 * (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * mParameters[9]; // milliS_per_microF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = (-var_slow_delayed_rectifier_potassium_current__E_Ks + var_chaste_interface__membrane__V) * var_slow_delayed_rectifier_potassium_current__g_Ks * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2; // microA_per_microF
        const double var_sodium_activated_potassium_current__g_K_Na = 0; // milliS_per_microF
        const double var_sodium_activated_potassium_current__kdKNa = 66.0; // millimolar
        const double var_sodium_activated_potassium_current__nKNa = 2.7999999999999998; // dimensionless
        const double var_sodium_activated_potassium_current__pona = 0.84999999999999998 / (1.0 + pow((var_sodium_activated_potassium_current__kdKNa / var_chaste_interface__ionic_concentrations__Nai), var_sodium_activated_potassium_current__nKNa)); // dimensionless
        const double var_sodium_activated_potassium_current__pov = 0.80000000000000004 - 0.65000000000000002 / (1.0 + exp(8.3333333333333339 + 0.066666666666666666 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_sodium_background_current__g_Nab = 0.0040000000000000001; // milliS_per_microF
        const double var_sodium_background_current__i_Na_b = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_sodium_background_current__g_Nab; // microA_per_microF
        const double var_sodium_potassium_pump__I_NaK = 2.25; // microA_per_microF
        const double var_sodium_potassium_pump__K_mKo = 1.5; // millimolar
        const double var_sodium_potassium_pump__K_mNai = 10.0; // millimolar
        const double var_sodium_potassium_pump__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * mParameters[3]); // dimensionless
        const double var_sodium_potassium_pump__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + 0.036499999999999998 * var_sodium_potassium_pump__sigma * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // dimensionless
        const double var_sodium_potassium_pump__i_NaK = mParameters[2] * var_sodium_potassium_pump__I_NaK * var_sodium_potassium_pump__f_NaK / ((1.0 + pow(var_sodium_potassium_pump__K_mNai, 2) / pow(var_chaste_interface__ionic_concentrations__Nai, 2)) * (mParameters[2] + var_sodium_potassium_pump__K_mKo)); // microA_per_microF
        const double var_time_independent_potassium_current__E_K = var_membrane__R * var_membrane__T * log(mParameters[2] / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_ATP_sensitive_potassium_current__i_K_ATP = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_ATP_sensitive_potassium_current__GKbaraATP; // microA_per_microF
        const double var_plateau_potassium_current__i_Kp = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_plateau_potassium_current__Kp * var_plateau_potassium_current__g_Kp; // microA_per_microF
        const double var_sodium_activated_potassium_current__i_K_Na = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_sodium_activated_potassium_current__g_K_Na * var_sodium_activated_potassium_current__pona * var_sodium_activated_potassium_current__pov; // microA_per_microF
        const double var_time_independent_potassium_current__g_K1 = 0.43033148291193518 * sqrt(mParameters[2]) * mParameters[7]; // milliS_per_cm2
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K)); // per_second
        const double var_time_independent_potassium_current_K1_gate__beta_K1 = 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V)); // per_second
        const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_microF
        const double var_transient_outward_current__g_to = 1.1000000000000001; // milliS_per_microF
        const double var_transient_outward_current__rvdv = exp(0.01 * var_chaste_interface__membrane__V); // dimensionless
        const double var_transient_outward_current__i_to = pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_transient_outward_current__g_to * mParameters[11] * var_transient_outward_current__rvdv * var_chaste_interface__transient_outward_current_ydv_gate__ydv; // microA_per_microF
        const double var_membrane__dVdt = -(var_ATP_sensitive_potassium_current__i_K_ATP + var_L_type_Ca_channel__i_Ca_L + var_Na_Ca_exchanger__i_NaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_fast_sodium_current__i_Na + var_membrane__I_st + var_non_specific_calcium_activated_current__i_ns_Ca + var_plateau_potassium_current__i_Kp + var_rapid_delayed_rectifier_potassium_current__i_Kr + var_sarcolemmal_calcium_pump__i_p_Ca + var_slow_delayed_rectifier_potassium_current__i_Ks + var_sodium_activated_potassium_current__i_K_Na + var_sodium_background_current__i_Na_b + var_sodium_potassium_pump__i_NaK + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) / mParameters[5]; // dimensionless
        const double var_calcium_dynamics__APtrack_orig_deriv = ((var_membrane__dVdt > 150000.0) ? (100000.0 - 100500.0 * var_chaste_interface__calcium_dynamics__APtrack) : (-500.0 * var_chaste_interface__calcium_dynamics__APtrack)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__APtrack = 0.001 * var_calcium_dynamics__APtrack_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_calcium_dynamics__APtrack;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative26(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            double var_chaste_interface__calcium_dynamics__Cai = rY[1];
            // Units: millimolar; Initial value: 0.000104
            double var_chaste_interface__Na_channel_states__P_O_Na = rY[2];
            // Units: dimensionless; Initial value: 3.756e-13
            double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[11];
            // Units: dimensionless; Initial value: 3.289e-06
            double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[12];
            // Units: dimensionless; Initial value: 0.99975
            double var_chaste_interface__T_type_Ca_channel_b_gate__b = rY[13];
            // Units: dimensionless; Initial value: 0.000983
            double var_chaste_interface__T_type_Ca_channel_g_gate__g = rY[14];
            // Units: dimensionless; Initial value: 0.9942
            double var_chaste_interface__Kr_channel_states__P_O = rY[15];
            // Units: dimensionless; Initial value: 1.104e-10
            double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = rY[20];
            // Units: dimensionless; Initial value: 0.00447
            double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = rY[21];
            // Units: dimensionless; Initial value: 0.00447
            double var_chaste_interface__transient_outward_current_zdv_gate__zdv = rY[22];
            // Units: dimensionless; Initial value: 0.01167
            double var_chaste_interface__transient_outward_current_ydv_gate__ydv = rY[23];
            // Units: dimensionless; Initial value: 0.99998
            double var_chaste_interface__ionic_concentrations__Nai = rY[33];
            // Units: millimolar; Initial value: 10.532
            double var_chaste_interface__ionic_concentrations__Ki = rY[34];
            // Units: millimolar; Initial value: 140.557
            

            const double var_x0 = exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V);
            const double var_x1 = 1.0 + var_x0;
            const double var_x2 = 1 / var_x1;
            const double var_x3 = 0.0055199999999999997 * var_x2;
            const double var_x4 = pow(mParameters[2], 0.23999999999999999);
            const double var_x5 = 1.921898339896919e-8 * var_x4;
            const double var_x6 = var_chaste_interface__Na_channel_states__P_O_Na * mParameters[6];
            const double var_x7 = pow(mParameters[2], 0.58999999999999997) * mParameters[8];
            const double var_x8 = var_x7 * var_chaste_interface__Kr_channel_states__P_O;
            const double var_x9 = 1 / var_chaste_interface__ionic_concentrations__Ki;
            const double var_x10 = log(var_x9 * mParameters[2]);
            const double var_x11 = -26.712338705498265 * var_x10 + var_chaste_interface__membrane__V;
            const double var_x12 = 1 / var_chaste_interface__calcium_dynamics__Cai;
            const double var_x13 = pow(var_x12, 1.3999999999999999);
            const double var_x14 = 1.0 + 6.4818210260626455e-7 * var_x13;
            const double var_x15 = 1 / var_x14;
            const double var_x17 = var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2;
            const double var_x19 = exp(0.01 * var_chaste_interface__membrane__V);
            const double var_x20 = var_x19 * pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * mParameters[11];
            const double var_x21 = var_x20 * var_chaste_interface__transient_outward_current_ydv_gate__ydv;
            const double var_x22 = 1.1000000000000001 * var_x21;
            const double var_x23 = exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 6.3708927812613361 * var_x10);
            const double var_x24 = 1.0 + var_x23;
            const double var_x25 = 1 / var_x24;
            const double var_x26 = exp(-2.4444678999999998 + 13.738155796237757 * var_x10 - 0.51429999999999998 * var_chaste_interface__membrane__V);
            const double var_x27 = 1.0 + var_x26;
            const double var_x28 = 1 / var_x27;
            const double var_x29 = exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 2.1455350448256207 * var_x10);
            const double var_x30 = exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 1.6494869150645177 * var_x10);
            const double var_x31 = var_x30 + 0.49124000000000001 * var_x29;
            const double var_x32 = var_x28 * var_x31;
            const double var_x33 = 1 / (1000.0 * var_x32 + 1020.0 * var_x25);
            const double var_x34 = sqrt(mParameters[2]);
            const double var_x35 = var_x25 * var_x34 * mParameters[7];
            const double var_x36 = var_x33 * var_x35;
            const double var_x37 = 438.93811257017387 * var_x36;
            const double var_x38 = pow(mParameters[3], 3);
            const double var_x39 = var_x38 * var_chaste_interface__calcium_dynamics__Cai;
            const double var_x40 = pow(var_chaste_interface__ionic_concentrations__Nai, 3);
            const double var_x41 = 0.037435883507802616 * var_chaste_interface__membrane__V;
            const double var_x42 = exp(var_x41);
            const double var_x43 = var_x42 * mParameters[1];
            const double var_x44 = var_x40 * var_x43;
            const double var_x45 = var_x44 - var_x39;
            const double var_x46 = exp(-0.031820500981632228 * var_chaste_interface__membrane__V);
            const double var_x48 = 1.0 + 0.0001 * var_x46 * (var_x39 + var_x44);
            const double var_x49 = mParameters[10] / var_x48;
            const double var_x53 = 1 / (1.5 + mParameters[2]);
            const double var_x54 = exp(-0.003743588350780262 * var_chaste_interface__membrane__V);
            const double var_x55 = exp(0.01485884101040119 * mParameters[3]);
            const double var_x56 = exp(-var_x41);
            const double var_x57 = 1.0 + 0.1245 * var_x54 + 0.036499999999999998 * var_x56 * (-0.14285714285714285 + 0.14285714285714285 * var_x55);
            const double var_x58 = pow(var_chaste_interface__ionic_concentrations__Nai, 2);
            const double var_x59 = 1 / var_x58;
            const double var_x60 = 2.25 / (1.0 + 100.0 * var_x59);
            const double var_x61 = var_x46 * var_x49;
            const double var_x64 = -1.0 + var_x42;
            const double var_x65 = 1 / var_x64;
            const double var_x66 = 1 / (1.0 + 1666.6666666666667 * var_chaste_interface__calcium_dynamics__Cai);
            const double var_x67 = var_x66 * mParameters[4] * var_chaste_interface__L_type_Ca_channel_f_gate__f;
            const double var_x68 = var_x67 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
            const double var_x69 = var_x65 * var_x68;
            const double var_x70 = 0.75 * var_x42;
            const double var_x71 = -0.75 * mParameters[3] + var_x70 * var_chaste_interface__ionic_concentrations__Nai;
            const double var_x72 = 0.0024381008236689767 * var_x71;
            const double var_x73 = var_x69 * var_x72;
            const double var_x74 = -0.75 * mParameters[2] + var_x70 * var_chaste_interface__ionic_concentrations__Ki;
            const double var_x75 = 0.00069711623550831479 * var_x74;
            const double var_x76 = var_x69 * var_x75;
            const double var_x85 = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2);
            const double var_x86 = var_x85 * var_chaste_interface__T_type_Ca_channel_g_gate__g;
            const double var_x87 = 0.050000000000000003 * var_x86;
            const double var_x88 = exp(0.074871767015605231 * var_chaste_interface__membrane__V);
            const double var_x89 = -1.0 + var_x88;
            const double var_x90 = 1 / var_x89;
            const double var_x91 = var_x88 * var_chaste_interface__calcium_dynamics__Cai;
            const double var_x92 = var_x91 - 0.34100000000000003 * mParameters[1];
            const double var_x93 = var_x90 * var_x92;
            const double var_x94 = 7.8019226357407252 * var_x93;
            const double var_x95 = var_x68 * var_x94;
            const double var_x98 = 1 / mParameters[5];
            const double var_x104 = 1 / (0.018329999999999999 * var_chaste_interface__ionic_concentrations__Nai + var_chaste_interface__ionic_concentrations__Ki);
            const double var_x105 = -26.712338705498265 * log(var_x104 * (0.018329999999999999 * mParameters[3] + mParameters[2])) + var_chaste_interface__membrane__V;
            const double var_x106 = var_x105 * var_x17 * mParameters[9];
            const double var_x110 = 0.00050000000000000001 + var_chaste_interface__calcium_dynamics__Cai;
            const double var_x111 = 1.1499999999999999 / var_x110;
            const double var_x114 = 1 / var_chaste_interface__ionic_concentrations__Nai;
            const double var_x115 = log(var_x114 * mParameters[3]);
            const double var_x116 = -26.712338705498265 * var_x115 + var_chaste_interface__membrane__V;
            const double var_x121 = log(var_x12 * mParameters[1]);
            const double var_x122 = -13.356169352749133 * var_x121 + var_chaste_interface__membrane__V;
            const double var_x129 = var_x53 * mParameters[2] / var_x57;
            const double var_x137 = var_x45 * var_x61;
            const double var_x162 = -0.040282206767891383 * var_x121 + var_x111 * var_chaste_interface__calcium_dynamics__Cai + var_x122 * var_x87 + var_x95 * var_chaste_interface__membrane__V;
            
            partialF = 0.001 * ((var_x98 * (var_x137 + var_x162 + 0.0070159999999999997 * var_chaste_interface__membrane__V - 0.10684935482199306 * var_x115 + var_x11 * var_x22 + var_x11 * var_x3 + var_x11 * var_x37 + var_x11 * var_x5 + var_x11 * var_x8 + var_x116 * var_x6 + var_x129 * var_x60 + var_x73 * var_chaste_interface__membrane__V + var_x76 * var_chaste_interface__membrane__V + GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted) / HeartConfig::Instance()->GetCapacitance() + 0.433 * var_x106 * (1.0 + 0.59999999999999998 * var_x15)) < -150000.0) ? (-100500.0) : (-500.0));
        }
        else
        {
            const double y_save = rY[26];
            rY[26] += delta;
            const double temp = EvaluateYDerivative26(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[26])/delta;
            rY[26] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative27(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__calcium_dynamics__APtrack = rY[26];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__APtrack2 = rY[27];
        // Units: dimensionless; Initial value: 0.0
        

        // Mathematics
        const double var_calcium_dynamics__APtrack2_orig_deriv = (((var_chaste_interface__calcium_dynamics__APtrack > 0.17999999999999999) && (var_chaste_interface__calcium_dynamics__APtrack < 0.20000000000000001)) ? (100000.0 - 100500.0 * var_chaste_interface__calcium_dynamics__APtrack2) : (-500.0 * var_chaste_interface__calcium_dynamics__APtrack2)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__APtrack2 = 0.001 * var_calcium_dynamics__APtrack2_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_calcium_dynamics__APtrack2;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative27(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__calcium_dynamics__APtrack = rY[26];
            // Units: dimensionless; Initial value: 0.0
            

            const double var_x339 = (var_chaste_interface__calcium_dynamics__APtrack > 0.17999999999999999) && (var_chaste_interface__calcium_dynamics__APtrack < 0.20000000000000001);
            
            partialF = 0.001 * ((var_x339) ? (-100500.0) : (-500.0));
        }
        else
        {
            const double y_save = rY[27];
            rY[27] += delta;
            const double temp = EvaluateYDerivative27(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[27])/delta;
            rY[27] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative28(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__calcium_dynamics__APtrack = rY[26];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__APtrack3 = rY[28];
        // Units: dimensionless; Initial value: 0.0
        

        // Mathematics
        const double var_calcium_dynamics__APtrack3_orig_deriv = (((var_chaste_interface__calcium_dynamics__APtrack > 0.17999999999999999) && (var_chaste_interface__calcium_dynamics__APtrack < 0.20000000000000001)) ? (100000.0 - 100500.0 * var_chaste_interface__calcium_dynamics__APtrack3) : (-10.0 * var_chaste_interface__calcium_dynamics__APtrack3)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__APtrack3 = 0.001 * var_calcium_dynamics__APtrack3_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_calcium_dynamics__APtrack3;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative28(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__calcium_dynamics__APtrack = rY[26];
            // Units: dimensionless; Initial value: 0.0
            

            const double var_x339 = (var_chaste_interface__calcium_dynamics__APtrack > 0.17999999999999999) && (var_chaste_interface__calcium_dynamics__APtrack < 0.20000000000000001);
            
            partialF = 0.001 * ((var_x339) ? (-100500.0) : (-10.0));
        }
        else
        {
            const double y_save = rY[28];
            rY[28] += delta;
            const double temp = EvaluateYDerivative28(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[28])/delta;
            rY[28] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative29(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000104
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[11];
        // Units: dimensionless; Initial value: 3.289e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[12];
        // Units: dimensionless; Initial value: 0.99975
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = rY[13];
        // Units: dimensionless; Initial value: 0.000983
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = rY[14];
        // Units: dimensionless; Initial value: 0.9942
        double var_chaste_interface__calcium_dynamics__APtrack = rY[26];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__APtrack2 = rY[27];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__Cainfluxtrack = rY[29];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ionic_concentrations__Nai = rY[33];
        // Units: millimolar; Initial value: 10.532
        

        // Mathematics
        const double var_L_type_Ca_channel__P_Ca = 0.00054000000000000001; // cm_per_second
        const double var_L_type_Ca_channel__gamma_Cai = 1.0; // dimensionless
        const double var_L_type_Ca_channel__gamma_Cao = 0.34100000000000003; // dimensionless
        const double var_L_type_Ca_channel_f_Ca_gate__Km_Ca = 0.00059999999999999995; // millimolar
        const double var_Na_Ca_exchanger__c2 = 0.0001; // millimolar
        const double var_Na_Ca_exchanger__gamma = 0.14999999999999999; // dimensionless
        const double var_T_type_Ca_channel__g_CaT = 0.050000000000000003; // milliS_per_microF
        const double var_calcium_background_current__g_Cab = 0.003016; // milliS_per_microF
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + var_chaste_interface__calcium_dynamics__Cai / var_L_type_Ca_channel_f_Ca_gate__Km_Ca); // dimensionless
        const double var_ionic_concentrations__A_cap = 1.434e-7; // mm2
        const double var_ionic_concentrations__preplength = 0.001; // mm
        const double var_ionic_concentrations__radius = 0.00011; // mm
        const double var_ionic_concentrations__volume = M_PI * pow(var_ionic_concentrations__radius, 2) * var_ionic_concentrations__preplength; // micro_litre
        const double var_ionic_concentrations__V_myo = 0.68000000000000005 * var_ionic_concentrations__volume; // micro_litre
        const double var_membrane__F = 96485.0; // coulomb_per_mole
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_calcium_background_current__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(mParameters[1] / var_chaste_interface__calcium_dynamics__Cai) / var_membrane__F; // millivolt
        const double var_L_type_Ca_channel__I_CaCa = 4.0 * pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Cao * mParameters[1] + var_L_type_Ca_channel__gamma_Cai * var_chaste_interface__calcium_dynamics__Cai * exp(2.0 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_Ca * mParameters[4] * var_chaste_interface__membrane__V / ((-1.0 + exp(2.0 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaCa = var_L_type_Ca_channel__I_CaCa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_Na_Ca_exchanger__i_NaCa = (-pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * mParameters[10] * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) / (1.0 + (pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_Na_Ca_exchanger__c2 * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // microA_per_microF
        const double var_T_type_Ca_channel__i_Ca_T = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2) * (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_T_type_Ca_channel__g_CaT * var_chaste_interface__T_type_Ca_channel_g_gate__g; // microA_per_microF
        const double var_calcium_background_current__i_Ca_b = (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_calcium_background_current__g_Cab; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__I_pCa = 1.1499999999999999; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__K_mpCa = 0.00050000000000000001; // millimolar
        const double var_sarcolemmal_calcium_pump__i_p_Ca = var_chaste_interface__calcium_dynamics__Cai * var_sarcolemmal_calcium_pump__I_pCa / (var_chaste_interface__calcium_dynamics__Cai + var_sarcolemmal_calcium_pump__K_mpCa); // microA_per_microF
        const double var_calcium_dynamics__Cainfluxtrack_orig_deriv = ((var_chaste_interface__calcium_dynamics__APtrack > 0.20000000000000001) ? (-0.5 * (-var_Na_Ca_exchanger__i_NaCa + var_L_type_Ca_channel__i_CaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_sarcolemmal_calcium_pump__i_p_Ca) * var_ionic_concentrations__A_cap / (var_ionic_concentrations__V_myo * var_membrane__F)) : ((var_chaste_interface__calcium_dynamics__APtrack2 > 0.01) ? (0) : (-500.0 * var_chaste_interface__calcium_dynamics__Cainfluxtrack))); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Cainfluxtrack = 0.001 * var_calcium_dynamics__Cainfluxtrack_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_calcium_dynamics__Cainfluxtrack;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative29(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__calcium_dynamics__APtrack = rY[26];
            // Units: dimensionless; Initial value: 0.0
            double var_chaste_interface__calcium_dynamics__APtrack2 = rY[27];
            // Units: dimensionless; Initial value: 0.0
            

            const double var_x340 = var_chaste_interface__calcium_dynamics__APtrack > 0.20000000000000001;
            
            partialF = 0.001 * (((var_x340) || (var_chaste_interface__calcium_dynamics__APtrack2 > 0.01)) ? (0) : (-500.0));
        }
        else
        {
            const double y_save = rY[29];
            rY[29] += delta;
            const double temp = EvaluateYDerivative29(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[29])/delta;
            rY[29] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative30(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__calcium_dynamics__Ca_NSR = rY[25];
        // Units: millimolar; Initial value: 1.518
        double var_chaste_interface__calcium_dynamics__APtrack3 = rY[28];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack = rY[30];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack3 = rY[32];
        // Units: dimensionless; Initial value: 0.0
        

        // Mathematics
        const double var_calcium_dynamics__CSQNthresh = 0.69999999999999996; // millimolar
        const double var_calcium_dynamics__K_mCSQN = 0.80000000000000004; // millimolar
        const double var_calcium_dynamics__OVRLDtrack_orig_deriv = (((var_chaste_interface__calcium_dynamics__APtrack3 < 0.37) && (var_chaste_interface__calcium_dynamics__OVRLDtrack3 < 0.37) && (var_calcium_dynamics__CSQNthresh < 1 / (1.0 + var_calcium_dynamics__K_mCSQN / var_chaste_interface__calcium_dynamics__Ca_NSR))) ? (50000.0 - 50000.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack) : (-500.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack = 0.001 * var_calcium_dynamics__OVRLDtrack_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative30(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__calcium_dynamics__Ca_NSR = rY[25];
            // Units: millimolar; Initial value: 1.518
            double var_chaste_interface__calcium_dynamics__APtrack3 = rY[28];
            // Units: dimensionless; Initial value: 0.0
            double var_chaste_interface__calcium_dynamics__OVRLDtrack3 = rY[32];
            // Units: dimensionless; Initial value: 0.0
            

            
            partialF = 0.001 * (((var_chaste_interface__calcium_dynamics__APtrack3 < 0.37) && (var_chaste_interface__calcium_dynamics__OVRLDtrack3 < 0.37) && (1 / (1.0 + 0.80000000000000004 / var_chaste_interface__calcium_dynamics__Ca_NSR) > 0.69999999999999996)) ? (-50000.0) : (-500.0));
        }
        else
        {
            const double y_save = rY[30];
            rY[30] += delta;
            const double temp = EvaluateYDerivative30(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[30])/delta;
            rY[30] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative31(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__calcium_dynamics__OVRLDtrack = rY[30];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack2 = rY[31];
        // Units: dimensionless; Initial value: 0.0
        

        // Mathematics
        const double var_calcium_dynamics__Logicthresh = 0.97999999999999998; // dimensionless
        const double var_calcium_dynamics__OVRLDtrack2_orig_deriv = (((var_calcium_dynamics__Logicthresh > var_chaste_interface__calcium_dynamics__OVRLDtrack2) && (var_calcium_dynamics__Logicthresh < var_chaste_interface__calcium_dynamics__OVRLDtrack)) ? (50000.0 - 50000.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (-500.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack2)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack2 = 0.001 * var_calcium_dynamics__OVRLDtrack2_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack2;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative31(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__calcium_dynamics__OVRLDtrack = rY[30];
            // Units: dimensionless; Initial value: 0.0
            double var_chaste_interface__calcium_dynamics__OVRLDtrack2 = rY[31];
            // Units: dimensionless; Initial value: 0.0
            

            const double var_x342 = var_chaste_interface__calcium_dynamics__OVRLDtrack > 0.97999999999999998;
            
            partialF = 0.001 * (((var_x342) && (var_chaste_interface__calcium_dynamics__OVRLDtrack2 < 0.97999999999999998)) ? (-50000.0) : (-500.0));
        }
        else
        {
            const double y_save = rY[31];
            rY[31] += delta;
            const double temp = EvaluateYDerivative31(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[31])/delta;
            rY[31] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative32(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__calcium_dynamics__OVRLDtrack = rY[30];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack3 = rY[32];
        // Units: dimensionless; Initial value: 0.0
        

        // Mathematics
        const double var_calcium_dynamics__Logicthresh = 0.97999999999999998; // dimensionless
        const double var_calcium_dynamics__OVRLDtrack3_orig_deriv = (((var_calcium_dynamics__Logicthresh > var_chaste_interface__calcium_dynamics__OVRLDtrack3) && (var_calcium_dynamics__Logicthresh < var_chaste_interface__calcium_dynamics__OVRLDtrack)) ? (50000.0 - 50000.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack3) : (-10.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack3)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack3 = 0.001 * var_calcium_dynamics__OVRLDtrack3_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack3;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative32(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__calcium_dynamics__OVRLDtrack = rY[30];
            // Units: dimensionless; Initial value: 0.0
            double var_chaste_interface__calcium_dynamics__OVRLDtrack3 = rY[32];
            // Units: dimensionless; Initial value: 0.0
            

            const double var_x342 = var_chaste_interface__calcium_dynamics__OVRLDtrack > 0.97999999999999998;
            
            partialF = 0.001 * (((var_x342) && (var_chaste_interface__calcium_dynamics__OVRLDtrack3 < 0.97999999999999998)) ? (-50000.0) : (-10.0));
        }
        else
        {
            const double y_save = rY[32];
            rY[32] += delta;
            const double temp = EvaluateYDerivative32(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[32])/delta;
            rY[32] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative33(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        

        // Mathematics
        const double var_ionic_concentrations__Nai_orig_deriv = 0; // millimolar / second
        const double d_dt_chaste_interface_var_ionic_concentrations__Nai = 0.001 * var_ionic_concentrations__Nai_orig_deriv; // millimolar / millisecond

        return d_dt_chaste_interface_var_ionic_concentrations__Nai;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative33(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            

            
            partialF = 0;
        }
        else
        {
            const double y_save = rY[33];
            rY[33] += delta;
            const double temp = EvaluateYDerivative33(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[33])/delta;
            rY[33] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluateYDerivative34(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        

        // Mathematics
        const double var_ionic_concentrations__Ki_orig_deriv = 0; // millimolar / second
        const double d_dt_chaste_interface_var_ionic_concentrations__Ki = 0.001 * var_ionic_concentrations__Ki_orig_deriv; // millimolar / millisecond

        return d_dt_chaste_interface_var_ionic_concentrations__Ki;
    }

    double Cellclancy_rudy_2002FromCellMLGRL2::EvaluatePartialDerivative34(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            

            
            partialF = 0;
        }
        else
        {
            const double y_save = rY[34];
            rY[34] += delta;
            const double temp = EvaluateYDerivative34(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[34])/delta;
            rY[34] = y_save;
        }
        return partialF;
    }

    std::vector<double> Cellclancy_rudy_2002FromCellMLGRL2::ComputeDerivedQuantities(double var_chaste_interface__environment__time_converted, const std::vector<double> & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000104
        double var_chaste_interface__Na_channel_states__P_O_Na = rY[2];
        // Units: dimensionless; Initial value: 3.756e-13
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[11];
        // Units: dimensionless; Initial value: 3.289e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[12];
        // Units: dimensionless; Initial value: 0.99975
        double var_chaste_interface__Kr_channel_states__P_O = rY[15];
        // Units: dimensionless; Initial value: 1.104e-10
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = rY[20];
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = rY[21];
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = rY[22];
        // Units: dimensionless; Initial value: 0.01167
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = rY[23];
        // Units: dimensionless; Initial value: 0.99998
        double var_chaste_interface__calcium_dynamics__Ca_JSR = rY[24];
        // Units: millimolar; Initial value: 1.516
        double var_chaste_interface__calcium_dynamics__APtrack2 = rY[27];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__Cainfluxtrack = rY[29];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack2 = rY[31];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ionic_concentrations__Nai = rY[33];
        // Units: millimolar; Initial value: 10.532
        double var_chaste_interface__ionic_concentrations__Ki = rY[34];
        // Units: millimolar; Initial value: 140.557
        
        // Mathematics
        const double var_L_type_Ca_channel__P_Ca = 0.00054000000000000001; // cm_per_second
        const double var_L_type_Ca_channel__P_K = 1.9299999999999999e-7; // cm_per_second
        const double var_L_type_Ca_channel__P_Na = 6.75e-7; // cm_per_second
        const double var_L_type_Ca_channel__gamma_Cai = 1.0; // dimensionless
        const double var_L_type_Ca_channel__gamma_Cao = 0.34100000000000003; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ki = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ko = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nai = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nao = 0.75; // dimensionless
        const double var_L_type_Ca_channel_f_Ca_gate__Km_Ca = 0.00059999999999999995; // millimolar
        const double var_Na_Ca_exchanger__c2 = 0.0001; // millimolar
        const double var_Na_Ca_exchanger__gamma = 0.14999999999999999; // dimensionless
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + var_chaste_interface__calcium_dynamics__Cai / var_L_type_Ca_channel_f_Ca_gate__Km_Ca); // dimensionless
        const double var_calcium_dynamics__G_rel_overload = 4000.0; // per_second
        const double var_calcium_dynamics__K_mrel = 0.00080000000000000004; // millimolar
        const double var_calcium_dynamics__delta_Ca_ith = 0.00018000000000000001; // millimolar
        const double var_calcium_dynamics__G_rel = ((var_chaste_interface__calcium_dynamics__Cainfluxtrack > var_calcium_dynamics__delta_Ca_ith) ? ((1.0 - var_chaste_interface__calcium_dynamics__APtrack2) * (-var_calcium_dynamics__delta_Ca_ith + var_chaste_interface__calcium_dynamics__Cainfluxtrack) * var_chaste_interface__calcium_dynamics__APtrack2 * mParameters[0] / (-var_calcium_dynamics__delta_Ca_ith + var_chaste_interface__calcium_dynamics__Cainfluxtrack + var_calcium_dynamics__K_mrel)) : ((var_chaste_interface__calcium_dynamics__OVRLDtrack2 > 0) ? ((1.0 - var_chaste_interface__calcium_dynamics__OVRLDtrack2) * var_calcium_dynamics__G_rel_overload * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (0))); // per_second
        const double var_calcium_dynamics__i_rel = (-var_chaste_interface__calcium_dynamics__Cai + var_chaste_interface__calcium_dynamics__Ca_JSR) * var_calcium_dynamics__G_rel; // millimolar_per_second
        const double var_membrane__F = 96485.0; // coulomb_per_mole
        const double var_membrane__I_st_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(mParameters[3] / var_chaste_interface__ionic_concentrations__Nai) / var_membrane__F; // millivolt
        const double var_L_type_Ca_channel__I_CaCa = 4.0 * pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Cao * mParameters[1] + var_L_type_Ca_channel__gamma_Cai * var_chaste_interface__calcium_dynamics__Cai * exp(2.0 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_Ca * mParameters[4] * var_chaste_interface__membrane__V / ((-1.0 + exp(2.0 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaK = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * mParameters[2] + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_K * mParameters[4] * var_chaste_interface__membrane__V / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaNa = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * mParameters[3] + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_Na * mParameters[4] * var_chaste_interface__membrane__V / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaCa = var_L_type_Ca_channel__I_CaCa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaK = var_L_type_Ca_channel__I_CaK * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaNa = var_L_type_Ca_channel__I_CaNa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_CaCa + var_L_type_Ca_channel__i_CaK + var_L_type_Ca_channel__i_CaNa; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L_converted = HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L; // uA_per_cm2
        const double var_Na_Ca_exchanger__i_NaCa = (-pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * mParameters[10] * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) / (1.0 + (pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_Na_Ca_exchanger__c2 * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // microA_per_microF
        const double var_Na_Ca_exchanger__i_NaCa_converted = HeartConfig::Instance()->GetCapacitance() * var_Na_Ca_exchanger__i_NaCa; // uA_per_cm2
        const double var_fast_sodium_current__i_Na = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__Na_channel_states__P_O_Na * mParameters[6]; // microA_per_microF
        const double var_fast_sodium_current__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na; // uA_per_cm2
        const double var_rapid_delayed_rectifier_potassium_current__E_Kr = var_membrane__R * var_membrane__T * log(mParameters[2] / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_rapid_delayed_rectifier_potassium_current__g_Kr = pow(mParameters[2], 0.58999999999999997) * mParameters[8]; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_rapid_delayed_rectifier_potassium_current__E_Kr + var_chaste_interface__membrane__V) * var_chaste_interface__Kr_channel_states__P_O * var_rapid_delayed_rectifier_potassium_current__g_Kr; // microA_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_rapid_delayed_rectifier_potassium_current__i_Kr; // uA_per_cm2
        const double var_slow_delayed_rectifier_potassium_current__PNaK = 0.018329999999999999; // dimensionless
        const double var_slow_delayed_rectifier_potassium_current__E_Ks = var_membrane__R * var_membrane__T * log((mParameters[3] * var_slow_delayed_rectifier_potassium_current__PNaK + mParameters[2]) / (var_chaste_interface__ionic_concentrations__Nai * var_slow_delayed_rectifier_potassium_current__PNaK + var_chaste_interface__ionic_concentrations__Ki)) / var_membrane__F; // millivolt
        const double var_slow_delayed_rectifier_potassium_current__g_Ks = 0.433 * (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * mParameters[9]; // milliS_per_microF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = (-var_slow_delayed_rectifier_potassium_current__E_Ks + var_chaste_interface__membrane__V) * var_slow_delayed_rectifier_potassium_current__g_Ks * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2; // microA_per_microF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks_converted = HeartConfig::Instance()->GetCapacitance() * var_slow_delayed_rectifier_potassium_current__i_Ks; // uA_per_cm2
        const double var_time_independent_potassium_current__E_K = var_membrane__R * var_membrane__T * log(mParameters[2] / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_time_independent_potassium_current__g_K1 = 0.43033148291193518 * sqrt(mParameters[2]) * mParameters[7]; // milliS_per_cm2
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K)); // per_second
        const double var_time_independent_potassium_current_K1_gate__beta_K1 = 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V)); // per_second
        const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_microF
        const double var_time_independent_potassium_current__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_time_independent_potassium_current__i_K1; // uA_per_cm2
        const double var_transient_outward_current__g_to = 1.1000000000000001; // milliS_per_microF
        const double var_transient_outward_current__rvdv = exp(0.01 * var_chaste_interface__membrane__V); // dimensionless
        const double var_transient_outward_current__i_to = pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_transient_outward_current__g_to * mParameters[11] * var_transient_outward_current__rvdv * var_chaste_interface__transient_outward_current_ydv_gate__ydv; // microA_per_microF
        const double var_transient_outward_current__i_to_converted = HeartConfig::Instance()->GetCapacitance() * var_transient_outward_current__i_to; // uA_per_cm2

        std::vector<double> dqs(10);
        dqs[0] = var_calcium_dynamics__i_rel;
        dqs[1] = var_L_type_Ca_channel__i_Ca_L_converted;
        dqs[2] = var_fast_sodium_current__i_Na_converted;
        dqs[3] = var_time_independent_potassium_current__i_K1_converted;
        dqs[4] = var_rapid_delayed_rectifier_potassium_current__i_Kr_converted;
        dqs[5] = var_slow_delayed_rectifier_potassium_current__i_Ks_converted;
        dqs[6] = var_Na_Ca_exchanger__i_NaCa_converted;
        dqs[7] = var_membrane__I_st_converted;
        dqs[8] = var_transient_outward_current__i_to_converted;
        dqs[9] = var_chaste_interface__environment__time_converted;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellclancy_rudy_2002FromCellMLGRL2>::Initialise(void)
{
    this->mSystemName = "clancy_rudy_2002";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-88.78);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.000104);

    // rY[2]:
    this->mVariableNames.push_back("Na_channel_states__P_O_Na");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.756e-13);

    // rY[3]:
    this->mVariableNames.push_back("Na_channel_states__P_C1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(4.744e-10);

    // rY[4]:
    this->mVariableNames.push_back("Na_channel_states__P_C2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.776e-08);

    // rY[5]:
    this->mVariableNames.push_back("Na_channel_states__P_C3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(7.583e-06);

    // rY[6]:
    this->mVariableNames.push_back("Na_channel_states__P_IF");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.147e-11);

    // rY[7]:
    this->mVariableNames.push_back("Na_channel_states__P_IC3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.302e-06);

    // rY[8]:
    this->mVariableNames.push_back("Na_channel_states__P_IC2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.679e-08);

    // rY[9]:
    this->mVariableNames.push_back("Na_channel_states__P_IM1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.736e-12);

    // rY[10]:
    this->mVariableNames.push_back("Na_channel_states__P_IM2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(6.187e-14);

    // rY[11]:
    this->mVariableNames.push_back("L_type_Ca_channel_d_gate__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.289e-06);

    // rY[12]:
    this->mVariableNames.push_back("L_type_Ca_channel_f_gate__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99975);

    // rY[13]:
    this->mVariableNames.push_back("T_type_Ca_channel_b_gate__b");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000983);

    // rY[14]:
    this->mVariableNames.push_back("T_type_Ca_channel_g_gate__g");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9942);

    // rY[15]:
    this->mVariableNames.push_back("Kr_channel_states__P_O");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.104e-10);

    // rY[16]:
    this->mVariableNames.push_back("Kr_channel_states__P_C1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.4083e-08);

    // rY[17]:
    this->mVariableNames.push_back("Kr_channel_states__P_C2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.69e-08);

    // rY[18]:
    this->mVariableNames.push_back("Kr_channel_states__P_C3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(4.949e-06);

    // rY[19]:
    this->mVariableNames.push_back("Kr_channel_states__P_I");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.386e-11);

    // rY[20]:
    this->mVariableNames.push_back("slow_delayed_rectifier_potassium_current_xs1_gate__xs1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00447);

    // rY[21]:
    this->mVariableNames.push_back("slow_delayed_rectifier_potassium_current_xs2_gate__xs2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00447);

    // rY[22]:
    this->mVariableNames.push_back("transient_outward_current_zdv_gate__zdv");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.01167);

    // rY[23]:
    this->mVariableNames.push_back("transient_outward_current_ydv_gate__ydv");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99998);

    // rY[24]:
    this->mVariableNames.push_back("calcium_dynamics__Ca_JSR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.516);

    // rY[25]:
    this->mVariableNames.push_back("calcium_dynamics__Ca_NSR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.518);

    // rY[26]:
    this->mVariableNames.push_back("calcium_dynamics__APtrack");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[27]:
    this->mVariableNames.push_back("calcium_dynamics__APtrack2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[28]:
    this->mVariableNames.push_back("calcium_dynamics__APtrack3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[29]:
    this->mVariableNames.push_back("calcium_dynamics__Cainfluxtrack");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[30]:
    this->mVariableNames.push_back("calcium_dynamics__OVRLDtrack");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[31]:
    this->mVariableNames.push_back("calcium_dynamics__OVRLDtrack2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[32]:
    this->mVariableNames.push_back("calcium_dynamics__OVRLDtrack3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[33]:
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(10.532);

    // rY[34]:
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(140.557);

    // mParameters[0]:
    this->mParameterNames.push_back("SR_release_current_max");
    this->mParameterUnits.push_back("per_second");

    // mParameters[1]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[2]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[3]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[4]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[5]:
    this->mParameterNames.push_back("membrane_capacitance");
    this->mParameterUnits.push_back("microF");

    // mParameters[6]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_cm2");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("microA_per_microF");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("SR_release_current");
    this->mDerivedQuantityUnits.push_back("millimolar_per_second");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellclancy_rudy_2002FromCellMLGRL2)

