//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: ohara_rudy_cipa_v1_2017
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: GeneralizedRushLarsenSecondOrder)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "ohara_rudy_cipa_v1_2017.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"


    boost::shared_ptr<RegularStimulus> Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__i_Stim_Amplitude_converted = -80.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        const double var_chaste_interface__membrane__i_Stim_Period = 1000.0; // millisecond
        const double var_chaste_interface__membrane__i_Stim_PulseDuration = 0.5; // millisecond
        const double var_chaste_interface__membrane__i_Stim_Start = 10.0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__i_Stim_Amplitude_converted),
                var_chaste_interface__membrane__i_Stim_PulseDuration,
                var_chaste_interface__membrane__i_Stim_Period,
                var_chaste_interface__membrane__i_Stim_Start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::Cellohara_rudy_cipa_v1_2017FromCellMLGRL2(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractGeneralizedRushLarsenCardiacCell(
                48,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellohara_rudy_cipa_v1_2017FromCellMLGRL2>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        
        this->mParameters[0] = 0; // (var_IKr__D) [dimensionless]
        this->mParameters[1] = 0; // (var_IKr__Kmax) [dimensionless]
        this->mParameters[2] = 0; // (var_IKr__Kt) [per_millisecond]
        this->mParameters[3] = 0; // (var_IKr__Ku) [per_millisecond]
        this->mParameters[4] = 1.0; // (var_IKr__Vhalf) [millivolt]
        this->mParameters[5] = 1.0; // (var_IKr__halfmax) [dimensionless]
        this->mParameters[6] = 1.0; // (var_IKr__n) [dimensionless]
        this->mParameters[7] = 1.0; // (var_ryr__Jrel_scaling_factor) [dimensionless]
        this->mParameters[8] = 1.0; // (var_SERCA__Jup_b) [dimensionless]
        this->mParameters[9] = 1.8; // (var_extracellular__cao) [millimolar]
        this->mParameters[10] = 5.4000000000000004; // (var_extracellular__ko) [millimolar]
        this->mParameters[11] = 140.0; // (var_extracellular__nao) [millimolar]
        this->mParameters[12] = 0.00010069999999999999; // (var_ICaL__PCa_b) [dimensionless]
        this->mParameters[13] = 2.4999999999999999e-8; // (var_ICab__PCab) [milliS_per_microF]
        this->mParameters[14] = 0.0030000000000000001; // (var_IKb__GKb_b) [milliS_per_microF]
        this->mParameters[15] = 3.75e-10; // (var_INab__PNab) [milliS_per_microF]
        this->mParameters[16] = 0.00050000000000000001; // (var_IpCa__GpCa) [milliS_per_microF]
        this->mParameters[17] = 75.0; // (var_INa__GNa) [milliS_per_microF]
        this->mParameters[18] = 0.32397839999999978; // (var_IK1__GK1_b) [milliS_per_microF]
        this->mParameters[19] = 0.019957499999999975; // (var_INaL__GNaL_b) [milliS_per_microF]
        this->mParameters[20] = 0.046585454545454562; // (var_IKr__GKr_b) [milliS_per_microF]
        this->mParameters[21] = 0.0063580000000000008; // (var_IKs__GKs_b) [milliS_per_microF]
        this->mParameters[22] = 0.00080000000000000004; // (var_INaCa_i__Gncx_b) [milliS_per_microF]
        this->mParameters[23] = 30.0; // (var_INaK__Pnak_b) [milliS_per_microF]
        this->mParameters[24] = 0.02; // (var_Ito__Gto_b) [milliS_per_microF]
    }

    Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::~Cellohara_rudy_cipa_v1_2017FromCellMLGRL2()
    {
    }

    
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__intracellular_ions__cai = rY[1];
        // Units: millimolar; Initial value: 8.6e-05
        double var_chaste_interface__CaMK__CaMKt = rY[2];
        // Units: millimolar; Initial value: 0.0125840447
        double var_chaste_interface__intracellular_ions__nai = rY[3];
        // Units: millimolar; Initial value: 7.268004498
        double var_chaste_interface__intracellular_ions__nass = rY[4];
        // Units: millimolar; Initial value: 7.268089977
        double var_chaste_interface__intracellular_ions__ki = rY[5];
        // Units: millimolar; Initial value: 144.6555918
        double var_chaste_interface__intracellular_ions__kss = rY[6];
        // Units: millimolar; Initial value: 144.6555651
        double var_chaste_interface__intracellular_ions__cass = rY[7];
        // Units: millimolar; Initial value: 8.49e-05
        double var_chaste_interface__INa__m = rY[10];
        // Units: dimensionless; Initial value: 0.007344121102
        double var_chaste_interface__INa__hf = rY[11];
        // Units: dimensionless; Initial value: 0.6981071913
        double var_chaste_interface__INa__hs = rY[12];
        // Units: dimensionless; Initial value: 0.6980895801
        double var_chaste_interface__INa__j = rY[13];
        // Units: dimensionless; Initial value: 0.6979908432
        double var_chaste_interface__INa__hsp = rY[14];
        // Units: dimensionless; Initial value: 0.4549485525
        double var_chaste_interface__INa__jp = rY[15];
        // Units: dimensionless; Initial value: 0.6979245865
        double var_chaste_interface__INaL__mL = rY[16];
        // Units: dimensionless; Initial value: 0.0001882617273
        double var_chaste_interface__INaL__hL = rY[17];
        // Units: dimensionless; Initial value: 0.5008548855
        double var_chaste_interface__INaL__hLp = rY[18];
        // Units: dimensionless; Initial value: 0.2693065357
        double var_chaste_interface__Ito__a = rY[19];
        // Units: dimensionless; Initial value: 0.001001097687
        double var_chaste_interface__Ito__iF = rY[20];
        // Units: dimensionless; Initial value: 0.9995541745
        double var_chaste_interface__Ito__iS = rY[21];
        // Units: dimensionless; Initial value: 0.5865061736
        double var_chaste_interface__Ito__ap = rY[22];
        // Units: dimensionless; Initial value: 0.0005100862934
        double var_chaste_interface__Ito__iFp = rY[23];
        // Units: dimensionless; Initial value: 0.9995541823
        double var_chaste_interface__Ito__iSp = rY[24];
        // Units: dimensionless; Initial value: 0.6393399482
        double var_chaste_interface__ICaL__d = rY[25];
        // Units: dimensionless; Initial value: 2.34e-09
        double var_chaste_interface__ICaL__ff = rY[26];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fs = rY[27];
        // Units: dimensionless; Initial value: 0.9102412777
        double var_chaste_interface__ICaL__fcaf = rY[28];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcas = rY[29];
        // Units: dimensionless; Initial value: 0.9998046777
        double var_chaste_interface__ICaL__jca = rY[30];
        // Units: dimensionless; Initial value: 0.9999738312
        double var_chaste_interface__ICaL__ffp = rY[31];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcafp = rY[32];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__nca = rY[33];
        // Units: dimensionless; Initial value: 0.002749414044
        double var_chaste_interface__IKr__O = rY[38];
        // Units: dimensionless; Initial value: 0.00015551
        double var_chaste_interface__IKs__xs1 = rY[43];
        // Units: dimensionless; Initial value: 0.2707758025
        double var_chaste_interface__IKs__xs2 = rY[44];
        // Units: dimensionless; Initial value: 0.0001928503426
        double var_chaste_interface__IK1__xk1 = rY[45];
        // Units: dimensionless; Initial value: 0.9967597594
        
        const double var_CaMK__CaMKo = 0.050000000000000003; // dimensionless
        const double var_CaMK__KmCaM = 0.0015; // millimolar
        const double var_CaMK__KmCaMK = 0.14999999999999999; // millimolar
        const double var_ICaL__Aff = 0.59999999999999998; // dimensionless
        const double var_ICaL__Afs = 1.0 - var_ICaL__Aff; // dimensionless
        const double var_ICaL__f = var_ICaL__Aff * var_chaste_interface__ICaL__ff + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_ICaL__fp = var_ICaL__Aff * var_chaste_interface__ICaL__ffp + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_INa__Ahf = 0.98999999999999999; // dimensionless
        const double var_INa__Ahs = 1.0 - var_INa__Ahf; // dimensionless
        const double var_INa__h = var_INa__Ahf * var_chaste_interface__INa__hf + var_INa__Ahs * var_chaste_interface__INa__hs; // dimensionless
        const double var_INa__hp = var_INa__Ahf * var_chaste_interface__INa__hf + var_INa__Ahs * var_chaste_interface__INa__hsp; // dimensionless
        const double var_INaCa_i__KmCaAct = 0.00014999999999999999; // millimolar
        const double var_INaCa_i__kasymm = 12.5; // dimensionless
        const double var_INaCa_i__kcaoff = 5000.0; // per_millisecond
        const double var_INaCa_i__k2_i = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k2_ss = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k5_i = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k5_ss = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__kcaon = 1500000.0; // per_millisecond
        const double var_INaCa_i__kna1 = 15.0; // per_millisecond
        const double var_INaCa_i__kna2 = 5.0; // per_millisecond
        const double var_INaCa_i__kna3 = 88.120000000000005; // per_millisecond
        const double var_INaCa_i__qca = 0.16700000000000001; // dimensionless
        const double var_INaCa_i__qna = 0.52239999999999998; // dimensionless
        const double var_INaCa_i__wca = 60000.0; // dimensionless
        const double var_INaCa_i__wna = 60000.0; // dimensionless
        const double var_INaCa_i__wnaca = 5000.0; // dimensionless
        const double var_INaK__H = 9.9999999999999995e-8; // millimolar
        const double var_INaK__Khp = 1.698e-7; // millimolar
        const double var_INaK__Kki = 0.5; // per_millisecond
        const double var_INaK__Kko = 0.35820000000000002; // per_millisecond
        const double var_INaK__Kmgatp = 1.698e-7; // millimolar
        const double var_INaK__Knai0 = 9.0730000000000004; // millimolar
        const double var_INaK__Knao0 = 27.780000000000001; // millimolar
        const double var_INaK__Knap = 224.0; // millimolar
        const double var_INaK__Kxkur = 292.0; // millimolar
        const double var_INaK__MgADP = 0.050000000000000003; // millimolar
        const double var_INaK__MgATP = 9.8000000000000007; // millimolar
        const double var_INaK__delta = -0.155; // millivolt
        const double var_INaK__eP = 4.2000000000000002; // dimensionless
        const double var_INaK__k1m = 182.40000000000001; // per_millisecond
        const double var_INaK__b1 = var_INaK__MgADP * var_INaK__k1m; // dimensionless
        const double var_INaK__k1p = 949.5; // per_millisecond
        const double var_INaK__k2m = 39.399999999999999; // per_millisecond
        const double var_INaK__k2p = 687.20000000000005; // per_millisecond
        const double var_INaK__a2 = var_INaK__k2p; // dimensionless
        const double var_INaK__k3m = 79300.0; // per_millisecond
        const double var_INaK__k3p = 1899.0; // per_millisecond
        const double var_INaK__k4m = 40.0; // per_millisecond
        const double var_INaK__k4p = 639.0; // per_millisecond
        const double var_INaK__a4 = var_INaK__MgATP * var_INaK__k4p / ((1.0 + var_INaK__MgATP / var_INaK__Kmgatp) * var_INaK__Kmgatp); // dimensionless
        const double var_IpCa__KmCap = 0.00050000000000000001; // millimolar
        const double var_environment__celltype = 0; // dimensionless
        const double var_ICaL__PCa = ((var_environment__celltype == 1.0) ? (1.2 * mParameters[12]) : ((var_environment__celltype == 2.0) ? (2.5 * mParameters[12]) : (mParameters[12]))); // dimensionless
        const double var_ICaL__PCaK = 0.00035740000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCaNa = 0.00125 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCap = 1.1000000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCaKp = 0.00035740000000000001 * var_ICaL__PCap; // dimensionless
        const double var_ICaL__PCaNap = 0.00125 * var_ICaL__PCap; // dimensionless
        const double var_IK1__GK1 = ((var_environment__celltype == 1.0) ? (1.2 * mParameters[18]) : ((var_environment__celltype == 2.0) ? (1.3 * mParameters[18]) : (mParameters[18]))); // milliS_per_microF
        const double var_IKb__GKb = ((var_environment__celltype == 1.0) ? (0.59999999999999998 * mParameters[14]) : (mParameters[14])); // milliS_per_microF
        const double var_IKr__GKr = ((var_environment__celltype == 1.0) ? (1.3 * mParameters[20]) : ((var_environment__celltype == 2.0) ? (0.80000000000000004 * mParameters[20]) : (mParameters[20]))); // milliS_per_microF
        const double var_IKs__GKs = ((var_environment__celltype == 1.0) ? (1.3999999999999999 * mParameters[21]) : (mParameters[21])); // milliS_per_microF
        const double var_INaCa_i__Gncx = ((var_environment__celltype == 1.0) ? (1.1000000000000001 * mParameters[22]) : ((var_environment__celltype == 2.0) ? (1.3999999999999999 * mParameters[22]) : (mParameters[22]))); // milliS_per_microF
        const double var_INaK__Pnak = ((var_environment__celltype == 1.0) ? (0.90000000000000002 * mParameters[23]) : ((var_environment__celltype == 2.0) ? (0.69999999999999996 * mParameters[23]) : (mParameters[23]))); // milliS_per_microF
        const double var_INaL__GNaL = ((var_environment__celltype == 1.0) ? (0.59999999999999998 * mParameters[19]) : (mParameters[19])); // milliS_per_microF
        const double var_Ito__Gto = (((var_environment__celltype == 1.0) || (var_environment__celltype == 2.0)) ? (4.0 * mParameters[24]) : (mParameters[24])); // milliS_per_microF
        const double var_IK1__GK1_calc = sqrt(mParameters[10]) * var_IK1__GK1; // milliS_per_microF
        const double var_IKr__GKr_calc = 0.43033148291193518 * sqrt(mParameters[10]) * var_IKr__GKr; // milliS_per_microF
        const double var_INaCa_i__h10_i = 1.0 + (1.0 + mParameters[11] / var_INaCa_i__kna2) * mParameters[11] / var_INaCa_i__kna1 + var_INaCa_i__kasymm; // dimensionless
        const double var_INaCa_i__h10_ss = 1.0 + (1.0 + mParameters[11] / var_INaCa_i__kna2) * mParameters[11] / var_INaCa_i__kna1 + var_INaCa_i__kasymm; // dimensionless
        const double var_INaCa_i__h11_i = pow(mParameters[11], 2) / (var_INaCa_i__h10_i * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h11_ss = pow(mParameters[11], 2) / (var_INaCa_i__h10_ss * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h12_i = 1 / var_INaCa_i__h10_i; // dimensionless
        const double var_INaCa_i__h12_ss = 1 / var_INaCa_i__h10_ss; // dimensionless
        const double var_INaCa_i__k1_i = var_INaCa_i__h12_i * var_INaCa_i__kcaon * mParameters[9]; // dimensionless
        const double var_INaCa_i__k1_ss = var_INaCa_i__h12_ss * var_INaCa_i__kcaon * mParameters[9]; // dimensionless
        const double var_IKs__KsCa = 1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__intracellular_ions__cai), 1.3999999999999999)); // dimensionless
        const double var_IKs__GKs_calc = var_IKs__GKs * var_IKs__KsCa; // milliS_per_microF
        const double var_INaCa_i__allo_i = 1 / (1.0 + pow(var_INaCa_i__KmCaAct, 2) / pow(var_chaste_interface__intracellular_ions__cai, 2)); // dimensionless
        const double var_IpCa__IpCa = mParameters[16] * var_chaste_interface__intracellular_ions__cai / (var_IpCa__KmCap + var_chaste_interface__intracellular_ions__cai); // microA_per_microF
        const double var_IpCa__IpCa_converted = HeartConfig::Instance()->GetCapacitance() * var_IpCa__IpCa; // uA_per_cm2
        const double var_CaMK__CaMKb = (1.0 - var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKo / (1.0 + var_CaMK__KmCaM / var_chaste_interface__intracellular_ions__cass); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_ICaL__fICaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INa__fINap = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INaCa_i__allo_ss = 1 / (1.0 + pow(var_INaCa_i__KmCaAct, 2) / pow(var_chaste_interface__intracellular_ions__cass, 2)); // dimensionless
        const double var_INaL__fINaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_Ito__fItop = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INaCa_i__h4_i = 1.0 + (1.0 + var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna2) * var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna1; // dimensionless
        const double var_INaCa_i__h5_i = pow(var_chaste_interface__intracellular_ions__nai, 2) / (var_INaCa_i__h4_i * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h6_i = 1 / var_INaCa_i__h4_i; // dimensionless
        const double var_INaCa_i__k6_i = var_INaCa_i__h6_i * var_INaCa_i__kcaon * var_chaste_interface__intracellular_ions__cai; // dimensionless
        const double var_INaK__P = var_INaK__eP / (1.0 + var_INaK__H / var_INaK__Khp + var_chaste_interface__intracellular_ions__nai / var_INaK__Knap + var_chaste_interface__intracellular_ions__ki / var_INaK__Kxkur); // dimensionless
        const double var_INaK__b3 = var_INaK__H * var_INaK__P * var_INaK__k3m / (1.0 + var_INaK__MgATP / var_INaK__Kmgatp); // dimensionless
        const double var_INaCa_i__h4_ss = 1.0 + (1.0 + var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna2) * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna1; // dimensionless
        const double var_INaCa_i__h5_ss = pow(var_chaste_interface__intracellular_ions__nass, 2) / (var_INaCa_i__h4_ss * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h6_ss = 1 / var_INaCa_i__h4_ss; // dimensionless
        const double var_INaCa_i__k6_ss = var_INaCa_i__h6_ss * var_INaCa_i__kcaon * var_chaste_interface__intracellular_ions__cass; // dimensionless
        const double var_ICaL__Afcaf = 0.29999999999999999 + 0.59999999999999998 / (1.0 + exp(-1.0 + 0.10000000000000001 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__Afcas = 1.0 - var_ICaL__Afcaf; // dimensionless
        const double var_ICaL__PhiCaK = ((fabs(var_chaste_interface__membrane__v) < 2.6712338705498262e-6) ? (2.671233870549826e-13 * (-0.75 * mParameters[10] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)) + 187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-0.75 * mParameters[10] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-0.75 * mParameters[10] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (0.037435883507802616 * pow(var_chaste_interface__membrane__v, 2) * (-0.75 * mParameters[10] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(0.037435883507802616 * var_chaste_interface__membrane__v)) / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__v)))); // dimensionless
        const double var_ICaL__PhiCaL = ((fabs(var_chaste_interface__membrane__v) < 1.3356169352749131e-6) ? (2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)) + 374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (0.14974353403121046 * pow(var_chaste_interface__membrane__v, 2) * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(0.074871767015605231 * var_chaste_interface__membrane__v)) / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__v)))); // dimensionless
        const double var_ICaL__PhiCaNa = ((fabs(var_chaste_interface__membrane__v) < 2.6712338705498262e-6) ? (2.671233870549826e-13 * (-0.75 * mParameters[11] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)) + 187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-0.75 * mParameters[11] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-0.75 * mParameters[11] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (0.037435883507802616 * pow(var_chaste_interface__membrane__v, 2) * (-0.75 * mParameters[11] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(0.037435883507802616 * var_chaste_interface__membrane__v)) / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__v)))); // dimensionless
        const double var_ICaL__fca = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcaf + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__fcap = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcafp + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__ICaK = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaK * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaKp * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaK_converted = HeartConfig::Instance()->GetCapacitance() * var_ICaL__ICaK; // uA_per_cm2
        const double var_ICaL__ICaL = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCa * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCap * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaL_converted = HeartConfig::Instance()->GetCapacitance() * var_ICaL__ICaL; // uA_per_cm2
        const double var_ICaL__ICaNa = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaNa * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaNap * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaNa_converted = HeartConfig::Instance()->GetCapacitance() * var_ICaL__ICaNa; // uA_per_cm2
        const double var_ICab__ICab = ((fabs(var_chaste_interface__membrane__v) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cai * exp(9.9999999999999995e-8)) * mParameters[13] / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cai * exp(-9.9999999999999995e-8)) * mParameters[13] / (-1.0 + exp(-9.9999999999999995e-8))) + 2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cai * exp(-9.9999999999999995e-8)) * mParameters[13] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.14974353403121046 * pow(var_chaste_interface__membrane__v, 2) * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cai * exp(0.074871767015605231 * var_chaste_interface__membrane__v)) * mParameters[13] / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__v)))); // microA_per_microF
        const double var_ICab__ICab_converted = HeartConfig::Instance()->GetCapacitance() * var_ICab__ICab; // uA_per_cm2
        const double var_IK1__rk1 = 1 / (1.0 + exp(11.145054250500367 + 0.10534077741493732 * var_chaste_interface__membrane__v - 0.27388602127883704 * mParameters[10])); // millisecond
        const double var_IKb__xkb = 1 / (1.0 + exp(0.78953107960741553 - 0.054525627044711013 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_INab__INab = ((fabs(var_chaste_interface__membrane__v) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-mParameters[11] + var_chaste_interface__intracellular_ions__nai * exp(9.9999999999999995e-8)) * mParameters[15] / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-mParameters[11] + var_chaste_interface__intracellular_ions__nai * exp(-9.9999999999999995e-8)) * mParameters[15] / (-1.0 + exp(-9.9999999999999995e-8))) + 2.671233870549826e-13 * (-mParameters[11] + var_chaste_interface__intracellular_ions__nai * exp(-9.9999999999999995e-8)) * mParameters[15] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.037435883507802616 * pow(var_chaste_interface__membrane__v, 2) * (-mParameters[11] + var_chaste_interface__intracellular_ions__nai * exp(0.037435883507802616 * var_chaste_interface__membrane__v)) * mParameters[15] / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__v)))); // microA_per_microF
        const double var_INab__INab_converted = HeartConfig::Instance()->GetCapacitance() * var_INab__INab; // uA_per_cm2
        const double var_Ito__AiF = 1 / (1.0 + exp(-1.4126984126984128 + 0.0066137566137566143 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__AiS = 1.0 - var_Ito__AiF; // dimensionless
        const double var_Ito__i = var_Ito__AiF * var_chaste_interface__Ito__iF + var_Ito__AiS * var_chaste_interface__Ito__iS; // dimensionless
        const double var_Ito__ip = var_Ito__AiF * var_chaste_interface__Ito__iFp + var_Ito__AiS * var_chaste_interface__Ito__iSp; // dimensionless
        const double var_physical_constants__F = 96485.0; // coulomb_per_mole
        const double var_physical_constants__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_physical_constants__T = 310.0; // kelvin
        const double var_INaCa_i__hca = exp(var_INaCa_i__qca * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // dimensionless
        const double var_INaCa_i__hna = exp(var_INaCa_i__qna * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // dimensionless
        const double var_INaCa_i__h1_i = 1.0 + (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h1_ss = 1.0 + (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h2_i = var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nai / (var_INaCa_i__h1_i * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h2_ss = var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nass / (var_INaCa_i__h1_ss * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h3_i = 1 / var_INaCa_i__h1_i; // dimensionless
        const double var_INaCa_i__h3_ss = 1 / var_INaCa_i__h1_ss; // dimensionless
        const double var_INaCa_i__h7_i = 1.0 + (1.0 + 1 / var_INaCa_i__hna) * mParameters[11] / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h7_ss = 1.0 + (1.0 + 1 / var_INaCa_i__hna) * mParameters[11] / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h8_i = mParameters[11] / (var_INaCa_i__h7_i * var_INaCa_i__hna * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h8_ss = mParameters[11] / (var_INaCa_i__h7_ss * var_INaCa_i__hna * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h9_i = 1 / var_INaCa_i__h7_i; // dimensionless
        const double var_INaCa_i__h9_ss = 1 / var_INaCa_i__h7_ss; // dimensionless
        const double var_INaCa_i__k3p_i = var_INaCa_i__h9_i * var_INaCa_i__wca; // dimensionless
        const double var_INaCa_i__k3p_ss = var_INaCa_i__h9_ss * var_INaCa_i__wca; // dimensionless
        const double var_INaCa_i__k3pp_i = var_INaCa_i__h8_i * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k3_i = var_INaCa_i__k3p_i + var_INaCa_i__k3pp_i; // dimensionless
        const double var_INaCa_i__k3pp_ss = var_INaCa_i__h8_ss * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k3_ss = var_INaCa_i__k3p_ss + var_INaCa_i__k3pp_ss; // dimensionless
        const double var_INaCa_i__k4p_i = var_INaCa_i__h3_i * var_INaCa_i__wca / var_INaCa_i__hca; // dimensionless
        const double var_INaCa_i__k4p_ss = var_INaCa_i__h3_ss * var_INaCa_i__wca / var_INaCa_i__hca; // dimensionless
        const double var_INaCa_i__k4pp_i = var_INaCa_i__h2_i * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k4_i = var_INaCa_i__k4p_i + var_INaCa_i__k4pp_i; // dimensionless
        const double var_INaCa_i__k4pp_ss = var_INaCa_i__h2_ss * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k4_ss = var_INaCa_i__k4p_ss + var_INaCa_i__k4pp_ss; // dimensionless
        const double var_INaCa_i__k7_i = var_INaCa_i__h2_i * var_INaCa_i__h5_i * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k7_ss = var_INaCa_i__h2_ss * var_INaCa_i__h5_ss * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k8_i = var_INaCa_i__h11_i * var_INaCa_i__h8_i * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k8_ss = var_INaCa_i__h11_ss * var_INaCa_i__h8_ss * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__x1_i = (var_INaCa_i__k2_i + var_INaCa_i__k3_i) * var_INaCa_i__k5_i * var_INaCa_i__k7_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k2_i * var_INaCa_i__k4_i; // dimensionless
        const double var_INaCa_i__x1_ss = (var_INaCa_i__k2_ss + var_INaCa_i__k3_ss) * var_INaCa_i__k5_ss * var_INaCa_i__k7_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k2_ss * var_INaCa_i__k4_ss; // dimensionless
        const double var_INaCa_i__x2_i = (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k4_i * var_INaCa_i__k6_i + (var_INaCa_i__k4_i + var_INaCa_i__k5_i) * var_INaCa_i__k1_i * var_INaCa_i__k7_i; // dimensionless
        const double var_INaCa_i__x2_ss = (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k4_ss * var_INaCa_i__k6_ss + (var_INaCa_i__k4_ss + var_INaCa_i__k5_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k7_ss; // dimensionless
        const double var_INaCa_i__x3_i = (var_INaCa_i__k2_i + var_INaCa_i__k3_i) * var_INaCa_i__k6_i * var_INaCa_i__k8_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k1_i * var_INaCa_i__k3_i; // dimensionless
        const double var_INaCa_i__x3_ss = (var_INaCa_i__k2_ss + var_INaCa_i__k3_ss) * var_INaCa_i__k6_ss * var_INaCa_i__k8_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k3_ss; // dimensionless
        const double var_INaCa_i__x4_i = (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k3_i * var_INaCa_i__k5_i + (var_INaCa_i__k4_i + var_INaCa_i__k5_i) * var_INaCa_i__k2_i * var_INaCa_i__k8_i; // dimensionless
        const double var_INaCa_i__E1_i = var_INaCa_i__x1_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E2_i = var_INaCa_i__x2_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E3_i = var_INaCa_i__x3_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E4_i = var_INaCa_i__x4_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__JncxCa_i = var_INaCa_i__E2_i * var_INaCa_i__k2_i - var_INaCa_i__E1_i * var_INaCa_i__k1_i; // millimolar_per_millisecond
        const double var_INaCa_i__JncxNa_i = var_INaCa_i__E3_i * var_INaCa_i__k4pp_i - var_INaCa_i__E2_i * var_INaCa_i__k3pp_i + 3.0 * var_INaCa_i__E4_i * var_INaCa_i__k7_i - 3.0 * var_INaCa_i__E1_i * var_INaCa_i__k8_i; // millimolar_per_millisecond
        const double var_INaCa_i__x4_ss = (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k3_ss * var_INaCa_i__k5_ss + (var_INaCa_i__k4_ss + var_INaCa_i__k5_ss) * var_INaCa_i__k2_ss * var_INaCa_i__k8_ss; // dimensionless
        const double var_INaCa_i__E1_ss = var_INaCa_i__x1_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E2_ss = var_INaCa_i__x2_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E3_ss = var_INaCa_i__x3_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E4_ss = var_INaCa_i__x4_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__JncxCa_ss = var_INaCa_i__E2_ss * var_INaCa_i__k2_ss - var_INaCa_i__E1_ss * var_INaCa_i__k1_ss; // millimolar_per_millisecond
        const double var_INaCa_i__JncxNa_ss = var_INaCa_i__E3_ss * var_INaCa_i__k4pp_ss - var_INaCa_i__E2_ss * var_INaCa_i__k3pp_ss + 3.0 * var_INaCa_i__E4_ss * var_INaCa_i__k7_ss - 3.0 * var_INaCa_i__E1_ss * var_INaCa_i__k8_ss; // millimolar_per_millisecond
        const double var_INaK__Knai = var_INaK__Knai0 * exp(0.33333333333333331 * var_INaK__delta * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // millimolar
        const double var_INaK__Knao = var_INaK__Knao0 * exp(0.33333333333333331 * (1.0 - var_INaK__delta) * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // millimolar
        const double var_INaK__a1 = pow(var_chaste_interface__intracellular_ions__nai, 3) * var_INaK__k1p / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__ki / var_INaK__Kki), 2) + pow((1.0 + var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3)) * pow(var_INaK__Knai, 3)); // dimensionless
        const double var_INaK__a3 = pow(mParameters[10], 2) * var_INaK__k3p / ((-1.0 + pow((1.0 + mParameters[10] / var_INaK__Kko), 2) + pow((1.0 + mParameters[11] / var_INaK__Knao), 3)) * pow(var_INaK__Kko, 2)); // dimensionless
        const double var_INaK__b2 = pow(mParameters[11], 3) * var_INaK__k2m / ((-1.0 + pow((1.0 + mParameters[10] / var_INaK__Kko), 2) + pow((1.0 + mParameters[11] / var_INaK__Knao), 3)) * pow(var_INaK__Knao, 3)); // dimensionless
        const double var_INaK__b4 = pow(var_chaste_interface__intracellular_ions__ki, 2) * var_INaK__k4m / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__ki / var_INaK__Kki), 2) + pow((1.0 + var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3)) * pow(var_INaK__Kki, 2)); // dimensionless
        const double var_INaK__x1 = var_INaK__a1 * var_INaK__a2 * var_INaK__a4 + var_INaK__a1 * var_INaK__a2 * var_INaK__b3 + var_INaK__a2 * var_INaK__b3 * var_INaK__b4 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__x2 = var_INaK__a1 * var_INaK__a2 * var_INaK__a3 + var_INaK__a2 * var_INaK__a3 * var_INaK__b4 + var_INaK__a3 * var_INaK__b1 * var_INaK__b4 + var_INaK__b1 * var_INaK__b2 * var_INaK__b4; // dimensionless
        const double var_INaK__x3 = var_INaK__a2 * var_INaK__a3 * var_INaK__a4 + var_INaK__a3 * var_INaK__a4 * var_INaK__b1 + var_INaK__a4 * var_INaK__b1 * var_INaK__b2 + var_INaK__b1 * var_INaK__b2 * var_INaK__b3; // dimensionless
        const double var_INaK__x4 = var_INaK__a1 * var_INaK__a3 * var_INaK__a4 + var_INaK__a1 * var_INaK__a4 * var_INaK__b2 + var_INaK__a1 * var_INaK__b2 * var_INaK__b3 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__E1 = var_INaK__x1 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E2 = var_INaK__x2 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E3 = var_INaK__x3 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E4 = var_INaK__x4 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__JnakK = 2.0 * var_INaK__E4 * var_INaK__b1 - 2.0 * var_INaK__E3 * var_INaK__a1; // millimolar_per_millisecond
        const double var_INaK__JnakNa = 3.0 * var_INaK__E1 * var_INaK__a3 - 3.0 * var_INaK__E2 * var_INaK__b3; // millimolar_per_millisecond
        const double var_physical_constants__zca = 2.0; // dimensionless
        const double var_physical_constants__zk = 1.0; // dimensionless
        const double var_physical_constants__zna = 1.0; // dimensionless
        const double var_INaCa_i__INaCa_i = 0.80000000000000004 * (var_INaCa_i__JncxCa_i * var_physical_constants__zca + var_INaCa_i__JncxNa_i * var_physical_constants__zna) * var_INaCa_i__Gncx * var_INaCa_i__allo_i; // microA_per_microF
        const double var_INaCa_i__INaCa_i_converted = HeartConfig::Instance()->GetCapacitance() * var_INaCa_i__INaCa_i; // uA_per_cm2
        const double var_INaCa_i__INaCa_ss = 0.20000000000000001 * (var_INaCa_i__JncxCa_ss * var_physical_constants__zca + var_INaCa_i__JncxNa_ss * var_physical_constants__zna) * var_INaCa_i__Gncx * var_INaCa_i__allo_ss; // microA_per_microF
        const double var_INaCa_i__INaCa_ss_converted = HeartConfig::Instance()->GetCapacitance() * var_INaCa_i__INaCa_ss; // uA_per_cm2
        const double var_INaK__INaK = (var_INaK__JnakK * var_physical_constants__zk + var_INaK__JnakNa * var_physical_constants__zna) * var_INaK__Pnak; // microA_per_microF
        const double var_INaK__INaK_converted = HeartConfig::Instance()->GetCapacitance() * var_INaK__INaK; // uA_per_cm2
        const double var_reversal_potentials__EK = var_physical_constants__R * var_physical_constants__T * log(mParameters[10] / var_chaste_interface__intracellular_ions__ki) / var_physical_constants__F; // millivolt
        const double var_IK1__IK1 = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IK1__GK1_calc * var_IK1__rk1 * var_chaste_interface__IK1__xk1; // microA_per_microF
        const double var_IK1__IK1_converted = HeartConfig::Instance()->GetCapacitance() * var_IK1__IK1; // uA_per_cm2
        const double var_IKb__IKb = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IKb__GKb * var_IKb__xkb; // microA_per_microF
        const double var_IKb__IKb_converted = HeartConfig::Instance()->GetCapacitance() * var_IKb__IKb; // uA_per_cm2
        const double var_IKr__IKr = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IKr__GKr_calc * var_chaste_interface__IKr__O; // microA_per_microF
        const double var_IKr__IKr_converted = HeartConfig::Instance()->GetCapacitance() * var_IKr__IKr; // uA_per_cm2
        const double var_Ito__Ito = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * ((1.0 - var_Ito__fItop) * var_chaste_interface__Ito__a * var_Ito__i + var_chaste_interface__Ito__ap * var_Ito__fItop * var_Ito__ip) * var_Ito__Gto; // microA_per_microF
        const double var_Ito__Ito_converted = HeartConfig::Instance()->GetCapacitance() * var_Ito__Ito; // uA_per_cm2
        const double var_reversal_potentials__ENa = var_physical_constants__R * var_physical_constants__T * log(mParameters[11] / var_chaste_interface__intracellular_ions__nai) / var_physical_constants__F; // millivolt
        const double var_INa__INa = pow(var_chaste_interface__INa__m, 3) * (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - var_INa__fINap) * var_INa__h * var_chaste_interface__INa__j + var_INa__fINap * var_INa__hp * var_chaste_interface__INa__jp) * mParameters[17]; // microA_per_microF
        const double var_INa__INa_converted = HeartConfig::Instance()->GetCapacitance() * var_INa__INa; // uA_per_cm2
        const double var_INaL__INaL = (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - var_INaL__fINaLp) * var_chaste_interface__INaL__hL + var_INaL__fINaLp * var_chaste_interface__INaL__hLp) * var_INaL__GNaL * var_chaste_interface__INaL__mL; // microA_per_microF
        const double var_INaL__INaL_converted = HeartConfig::Instance()->GetCapacitance() * var_INaL__INaL; // uA_per_cm2
        const double var_reversal_potentials__PKNa = 0.018329999999999999; // dimensionless
        const double var_reversal_potentials__EKs = var_physical_constants__R * var_physical_constants__T * log((mParameters[11] * var_reversal_potentials__PKNa + mParameters[10]) / (var_chaste_interface__intracellular_ions__nai * var_reversal_potentials__PKNa + var_chaste_interface__intracellular_ions__ki)) / var_physical_constants__F; // millivolt
        const double var_IKs__IKs = (-var_reversal_potentials__EKs + var_chaste_interface__membrane__v) * var_IKs__GKs_calc * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2; // microA_per_microF
        const double var_IKs__IKs_converted = HeartConfig::Instance()->GetCapacitance() * var_IKs__IKs; // uA_per_cm2
        const double var_chaste_interface__i_ionic = var_ICaL__ICaK_converted + var_ICaL__ICaL_converted + var_ICaL__ICaNa_converted + var_ICab__ICab_converted + var_IK1__IK1_converted + var_IKb__IKb_converted + var_IKr__IKr_converted + var_IKs__IKs_converted + var_INa__INa_converted + var_INaCa_i__INaCa_i_converted + var_INaCa_i__INaCa_ss_converted + var_INaK__INaK_converted + var_INaL__INaL_converted + var_INab__INab_converted + var_IpCa__IpCa_converted + var_Ito__Ito_converted; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::UpdateTransmembranePotential(double var_chaste_interface__environment__time)
    {
        std::vector<double>& rY = rGetStateVariables();
        const unsigned v_index = GetVoltageIndex();
        const double delta = 1e-8;
        const double yinit = rY[v_index];

        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__intracellular_ions__cai = rY[1];
        // Units: millimolar; Initial value: 8.6e-05
        double var_chaste_interface__CaMK__CaMKt = rY[2];
        // Units: millimolar; Initial value: 0.0125840447
        double var_chaste_interface__intracellular_ions__nai = rY[3];
        // Units: millimolar; Initial value: 7.268004498
        double var_chaste_interface__intracellular_ions__nass = rY[4];
        // Units: millimolar; Initial value: 7.268089977
        double var_chaste_interface__intracellular_ions__ki = rY[5];
        // Units: millimolar; Initial value: 144.6555918
        double var_chaste_interface__intracellular_ions__kss = rY[6];
        // Units: millimolar; Initial value: 144.6555651
        double var_chaste_interface__intracellular_ions__cass = rY[7];
        // Units: millimolar; Initial value: 8.49e-05
        double var_chaste_interface__INa__m = rY[10];
        // Units: dimensionless; Initial value: 0.007344121102
        double var_chaste_interface__INa__hf = rY[11];
        // Units: dimensionless; Initial value: 0.6981071913
        double var_chaste_interface__INa__hs = rY[12];
        // Units: dimensionless; Initial value: 0.6980895801
        double var_chaste_interface__INa__j = rY[13];
        // Units: dimensionless; Initial value: 0.6979908432
        double var_chaste_interface__INa__hsp = rY[14];
        // Units: dimensionless; Initial value: 0.4549485525
        double var_chaste_interface__INa__jp = rY[15];
        // Units: dimensionless; Initial value: 0.6979245865
        double var_chaste_interface__INaL__mL = rY[16];
        // Units: dimensionless; Initial value: 0.0001882617273
        double var_chaste_interface__INaL__hL = rY[17];
        // Units: dimensionless; Initial value: 0.5008548855
        double var_chaste_interface__INaL__hLp = rY[18];
        // Units: dimensionless; Initial value: 0.2693065357
        double var_chaste_interface__Ito__a = rY[19];
        // Units: dimensionless; Initial value: 0.001001097687
        double var_chaste_interface__Ito__iF = rY[20];
        // Units: dimensionless; Initial value: 0.9995541745
        double var_chaste_interface__Ito__iS = rY[21];
        // Units: dimensionless; Initial value: 0.5865061736
        double var_chaste_interface__Ito__ap = rY[22];
        // Units: dimensionless; Initial value: 0.0005100862934
        double var_chaste_interface__Ito__iFp = rY[23];
        // Units: dimensionless; Initial value: 0.9995541823
        double var_chaste_interface__Ito__iSp = rY[24];
        // Units: dimensionless; Initial value: 0.6393399482
        double var_chaste_interface__ICaL__d = rY[25];
        // Units: dimensionless; Initial value: 2.34e-09
        double var_chaste_interface__ICaL__ff = rY[26];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fs = rY[27];
        // Units: dimensionless; Initial value: 0.9102412777
        double var_chaste_interface__ICaL__fcaf = rY[28];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcas = rY[29];
        // Units: dimensionless; Initial value: 0.9998046777
        double var_chaste_interface__ICaL__jca = rY[30];
        // Units: dimensionless; Initial value: 0.9999738312
        double var_chaste_interface__ICaL__ffp = rY[31];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcafp = rY[32];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__nca = rY[33];
        // Units: dimensionless; Initial value: 0.002749414044
        double var_chaste_interface__IKr__O = rY[38];
        // Units: dimensionless; Initial value: 0.00015551
        double var_chaste_interface__IKs__xs1 = rY[43];
        // Units: dimensionless; Initial value: 0.2707758025
        double var_chaste_interface__IKs__xs2 = rY[44];
        // Units: dimensionless; Initial value: 0.0001928503426
        double var_chaste_interface__IK1__xk1 = rY[45];
        // Units: dimensionless; Initial value: 0.9967597594
        

        // Mathematics
        double d_dt_chaste_interface_var_membrane__v;
        const double var_CaMK__CaMKo = 0.050000000000000003; // dimensionless
        const double var_CaMK__KmCaM = 0.0015; // millimolar
        const double var_CaMK__KmCaMK = 0.14999999999999999; // millimolar
        const double var_ICaL__Aff = 0.59999999999999998; // dimensionless
        const double var_ICaL__Afs = 1.0 - var_ICaL__Aff; // dimensionless
        const double var_ICaL__f = var_ICaL__Aff * var_chaste_interface__ICaL__ff + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_ICaL__fp = var_ICaL__Aff * var_chaste_interface__ICaL__ffp + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_INa__Ahf = 0.98999999999999999; // dimensionless
        const double var_INa__Ahs = 1.0 - var_INa__Ahf; // dimensionless
        const double var_INa__h = var_INa__Ahf * var_chaste_interface__INa__hf + var_INa__Ahs * var_chaste_interface__INa__hs; // dimensionless
        const double var_INa__hp = var_INa__Ahf * var_chaste_interface__INa__hf + var_INa__Ahs * var_chaste_interface__INa__hsp; // dimensionless
        const double var_INaCa_i__KmCaAct = 0.00014999999999999999; // millimolar
        const double var_INaCa_i__kasymm = 12.5; // dimensionless
        const double var_INaCa_i__kcaoff = 5000.0; // per_millisecond
        const double var_INaCa_i__k2_i = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k2_ss = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k5_i = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k5_ss = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__kcaon = 1500000.0; // per_millisecond
        const double var_INaCa_i__kna1 = 15.0; // per_millisecond
        const double var_INaCa_i__kna2 = 5.0; // per_millisecond
        const double var_INaCa_i__kna3 = 88.120000000000005; // per_millisecond
        const double var_INaCa_i__qca = 0.16700000000000001; // dimensionless
        const double var_INaCa_i__qna = 0.52239999999999998; // dimensionless
        const double var_INaCa_i__wca = 60000.0; // dimensionless
        const double var_INaCa_i__wna = 60000.0; // dimensionless
        const double var_INaCa_i__wnaca = 5000.0; // dimensionless
        const double var_INaK__H = 9.9999999999999995e-8; // millimolar
        const double var_INaK__Khp = 1.698e-7; // millimolar
        const double var_INaK__Kki = 0.5; // per_millisecond
        const double var_INaK__Kko = 0.35820000000000002; // per_millisecond
        const double var_INaK__Kmgatp = 1.698e-7; // millimolar
        const double var_INaK__Knai0 = 9.0730000000000004; // millimolar
        const double var_INaK__Knao0 = 27.780000000000001; // millimolar
        const double var_INaK__Knap = 224.0; // millimolar
        const double var_INaK__Kxkur = 292.0; // millimolar
        const double var_INaK__MgADP = 0.050000000000000003; // millimolar
        const double var_INaK__MgATP = 9.8000000000000007; // millimolar
        const double var_INaK__delta = -0.155; // millivolt
        const double var_INaK__eP = 4.2000000000000002; // dimensionless
        const double var_INaK__k1m = 182.40000000000001; // per_millisecond
        const double var_INaK__b1 = var_INaK__MgADP * var_INaK__k1m; // dimensionless
        const double var_INaK__k1p = 949.5; // per_millisecond
        const double var_INaK__k2m = 39.399999999999999; // per_millisecond
        const double var_INaK__k2p = 687.20000000000005; // per_millisecond
        const double var_INaK__a2 = var_INaK__k2p; // dimensionless
        const double var_INaK__k3m = 79300.0; // per_millisecond
        const double var_INaK__k3p = 1899.0; // per_millisecond
        const double var_INaK__k4m = 40.0; // per_millisecond
        const double var_INaK__k4p = 639.0; // per_millisecond
        const double var_INaK__a4 = var_INaK__MgATP * var_INaK__k4p / ((1.0 + var_INaK__MgATP / var_INaK__Kmgatp) * var_INaK__Kmgatp); // dimensionless
        const double var_IpCa__KmCap = 0.00050000000000000001; // millimolar
        const double var_environment__celltype = 0; // dimensionless
        const double var_ICaL__PCa = ((var_environment__celltype == 1.0) ? (1.2 * mParameters[12]) : ((var_environment__celltype == 2.0) ? (2.5 * mParameters[12]) : (mParameters[12]))); // dimensionless
        const double var_ICaL__PCaK = 0.00035740000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCaNa = 0.00125 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCap = 1.1000000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCaKp = 0.00035740000000000001 * var_ICaL__PCap; // dimensionless
        const double var_ICaL__PCaNap = 0.00125 * var_ICaL__PCap; // dimensionless
        const double var_IK1__GK1 = ((var_environment__celltype == 1.0) ? (1.2 * mParameters[18]) : ((var_environment__celltype == 2.0) ? (1.3 * mParameters[18]) : (mParameters[18]))); // milliS_per_microF
        const double var_IKb__GKb = ((var_environment__celltype == 1.0) ? (0.59999999999999998 * mParameters[14]) : (mParameters[14])); // milliS_per_microF
        const double var_IKr__GKr = ((var_environment__celltype == 1.0) ? (1.3 * mParameters[20]) : ((var_environment__celltype == 2.0) ? (0.80000000000000004 * mParameters[20]) : (mParameters[20]))); // milliS_per_microF
        const double var_IKs__GKs = ((var_environment__celltype == 1.0) ? (1.3999999999999999 * mParameters[21]) : (mParameters[21])); // milliS_per_microF
        const double var_INaCa_i__Gncx = ((var_environment__celltype == 1.0) ? (1.1000000000000001 * mParameters[22]) : ((var_environment__celltype == 2.0) ? (1.3999999999999999 * mParameters[22]) : (mParameters[22]))); // milliS_per_microF
        const double var_INaK__Pnak = ((var_environment__celltype == 1.0) ? (0.90000000000000002 * mParameters[23]) : ((var_environment__celltype == 2.0) ? (0.69999999999999996 * mParameters[23]) : (mParameters[23]))); // milliS_per_microF
        const double var_INaL__GNaL = ((var_environment__celltype == 1.0) ? (0.59999999999999998 * mParameters[19]) : (mParameters[19])); // milliS_per_microF
        const double var_Ito__Gto = (((var_environment__celltype == 1.0) || (var_environment__celltype == 2.0)) ? (4.0 * mParameters[24]) : (mParameters[24])); // milliS_per_microF
        const double var_IK1__GK1_calc = sqrt(mParameters[10]) * var_IK1__GK1; // milliS_per_microF
        const double var_IKr__GKr_calc = 0.43033148291193518 * sqrt(mParameters[10]) * var_IKr__GKr; // milliS_per_microF
        const double var_INaCa_i__h10_i = 1.0 + (1.0 + mParameters[11] / var_INaCa_i__kna2) * mParameters[11] / var_INaCa_i__kna1 + var_INaCa_i__kasymm; // dimensionless
        const double var_INaCa_i__h10_ss = 1.0 + (1.0 + mParameters[11] / var_INaCa_i__kna2) * mParameters[11] / var_INaCa_i__kna1 + var_INaCa_i__kasymm; // dimensionless
        const double var_INaCa_i__h11_i = pow(mParameters[11], 2) / (var_INaCa_i__h10_i * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h11_ss = pow(mParameters[11], 2) / (var_INaCa_i__h10_ss * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h12_i = 1 / var_INaCa_i__h10_i; // dimensionless
        const double var_INaCa_i__h12_ss = 1 / var_INaCa_i__h10_ss; // dimensionless
        const double var_INaCa_i__k1_i = var_INaCa_i__h12_i * var_INaCa_i__kcaon * mParameters[9]; // dimensionless
        const double var_INaCa_i__k1_ss = var_INaCa_i__h12_ss * var_INaCa_i__kcaon * mParameters[9]; // dimensionless
        const double var_IKs__KsCa = 1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__intracellular_ions__cai), 1.3999999999999999)); // dimensionless
        const double var_IKs__GKs_calc = var_IKs__GKs * var_IKs__KsCa; // milliS_per_microF
        const double var_INaCa_i__allo_i = 1 / (1.0 + pow(var_INaCa_i__KmCaAct, 2) / pow(var_chaste_interface__intracellular_ions__cai, 2)); // dimensionless
        const double var_IpCa__IpCa = mParameters[16] * var_chaste_interface__intracellular_ions__cai / (var_IpCa__KmCap + var_chaste_interface__intracellular_ions__cai); // microA_per_microF
        const double var_CaMK__CaMKb = (1.0 - var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKo / (1.0 + var_CaMK__KmCaM / var_chaste_interface__intracellular_ions__cass); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_ICaL__fICaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INa__fINap = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INaCa_i__allo_ss = 1 / (1.0 + pow(var_INaCa_i__KmCaAct, 2) / pow(var_chaste_interface__intracellular_ions__cass, 2)); // dimensionless
        const double var_INaL__fINaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_Ito__fItop = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INaCa_i__h4_i = 1.0 + (1.0 + var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna2) * var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna1; // dimensionless
        const double var_INaCa_i__h5_i = pow(var_chaste_interface__intracellular_ions__nai, 2) / (var_INaCa_i__h4_i * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h6_i = 1 / var_INaCa_i__h4_i; // dimensionless
        const double var_INaCa_i__k6_i = var_INaCa_i__h6_i * var_INaCa_i__kcaon * var_chaste_interface__intracellular_ions__cai; // dimensionless
        const double var_INaK__P = var_INaK__eP / (1.0 + var_INaK__H / var_INaK__Khp + var_chaste_interface__intracellular_ions__nai / var_INaK__Knap + var_chaste_interface__intracellular_ions__ki / var_INaK__Kxkur); // dimensionless
        const double var_INaK__b3 = var_INaK__H * var_INaK__P * var_INaK__k3m / (1.0 + var_INaK__MgATP / var_INaK__Kmgatp); // dimensionless
        const double var_INaCa_i__h4_ss = 1.0 + (1.0 + var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna2) * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna1; // dimensionless
        const double var_INaCa_i__h5_ss = pow(var_chaste_interface__intracellular_ions__nass, 2) / (var_INaCa_i__h4_ss * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h6_ss = 1 / var_INaCa_i__h4_ss; // dimensionless
        const double var_INaCa_i__k6_ss = var_INaCa_i__h6_ss * var_INaCa_i__kcaon * var_chaste_interface__intracellular_ions__cass; // dimensionless
        const double var_membrane__Istim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
        const double var_membrane__Istim = var_membrane__Istim_converted / HeartConfig::Instance()->GetCapacitance(); // microA_per_microF
        const double var_ICaL__Afcaf = 0.29999999999999999 + 0.59999999999999998 / (1.0 + exp(-1.0 + 0.10000000000000001 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__Afcas = 1.0 - var_ICaL__Afcaf; // dimensionless
        const double var_ICaL__PhiCaK = ((fabs(var_chaste_interface__membrane__v) < 2.6712338705498262e-6) ? (2.671233870549826e-13 * (-0.75 * mParameters[10] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)) + 187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-0.75 * mParameters[10] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-0.75 * mParameters[10] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (0.037435883507802616 * pow(var_chaste_interface__membrane__v, 2) * (-0.75 * mParameters[10] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(0.037435883507802616 * var_chaste_interface__membrane__v)) / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__v)))); // dimensionless
        const double var_ICaL__PhiCaL = ((fabs(var_chaste_interface__membrane__v) < 1.3356169352749131e-6) ? (2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)) + 374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (0.14974353403121046 * pow(var_chaste_interface__membrane__v, 2) * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(0.074871767015605231 * var_chaste_interface__membrane__v)) / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__v)))); // dimensionless
        const double var_ICaL__PhiCaNa = ((fabs(var_chaste_interface__membrane__v) < 2.6712338705498262e-6) ? (2.671233870549826e-13 * (-0.75 * mParameters[11] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)) + 187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-0.75 * mParameters[11] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-0.75 * mParameters[11] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (0.037435883507802616 * pow(var_chaste_interface__membrane__v, 2) * (-0.75 * mParameters[11] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(0.037435883507802616 * var_chaste_interface__membrane__v)) / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__v)))); // dimensionless
        const double var_ICaL__fca = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcaf + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__fcap = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcafp + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__ICaK = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaK * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaKp * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaL = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCa * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCap * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaNa = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaNa * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaNap * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICab__ICab = ((fabs(var_chaste_interface__membrane__v) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cai * exp(9.9999999999999995e-8)) * mParameters[13] / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cai * exp(-9.9999999999999995e-8)) * mParameters[13] / (-1.0 + exp(-9.9999999999999995e-8))) + 2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cai * exp(-9.9999999999999995e-8)) * mParameters[13] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.14974353403121046 * pow(var_chaste_interface__membrane__v, 2) * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cai * exp(0.074871767015605231 * var_chaste_interface__membrane__v)) * mParameters[13] / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__v)))); // microA_per_microF
        const double var_IK1__rk1 = 1 / (1.0 + exp(11.145054250500367 + 0.10534077741493732 * var_chaste_interface__membrane__v - 0.27388602127883704 * mParameters[10])); // millisecond
        const double var_IKb__xkb = 1 / (1.0 + exp(0.78953107960741553 - 0.054525627044711013 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_INab__INab = ((fabs(var_chaste_interface__membrane__v) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-mParameters[11] + var_chaste_interface__intracellular_ions__nai * exp(9.9999999999999995e-8)) * mParameters[15] / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-mParameters[11] + var_chaste_interface__intracellular_ions__nai * exp(-9.9999999999999995e-8)) * mParameters[15] / (-1.0 + exp(-9.9999999999999995e-8))) + 2.671233870549826e-13 * (-mParameters[11] + var_chaste_interface__intracellular_ions__nai * exp(-9.9999999999999995e-8)) * mParameters[15] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.037435883507802616 * pow(var_chaste_interface__membrane__v, 2) * (-mParameters[11] + var_chaste_interface__intracellular_ions__nai * exp(0.037435883507802616 * var_chaste_interface__membrane__v)) * mParameters[15] / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__v)))); // microA_per_microF
        const double var_Ito__AiF = 1 / (1.0 + exp(-1.4126984126984128 + 0.0066137566137566143 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__AiS = 1.0 - var_Ito__AiF; // dimensionless
        const double var_Ito__i = var_Ito__AiF * var_chaste_interface__Ito__iF + var_Ito__AiS * var_chaste_interface__Ito__iS; // dimensionless
        const double var_Ito__ip = var_Ito__AiF * var_chaste_interface__Ito__iFp + var_Ito__AiS * var_chaste_interface__Ito__iSp; // dimensionless
        const double var_physical_constants__F = 96485.0; // coulomb_per_mole
        const double var_physical_constants__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_physical_constants__T = 310.0; // kelvin
        const double var_INaCa_i__hca = exp(var_INaCa_i__qca * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // dimensionless
        const double var_INaCa_i__hna = exp(var_INaCa_i__qna * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // dimensionless
        const double var_INaCa_i__h1_i = 1.0 + (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h1_ss = 1.0 + (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h2_i = var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nai / (var_INaCa_i__h1_i * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h2_ss = var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nass / (var_INaCa_i__h1_ss * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h3_i = 1 / var_INaCa_i__h1_i; // dimensionless
        const double var_INaCa_i__h3_ss = 1 / var_INaCa_i__h1_ss; // dimensionless
        const double var_INaCa_i__h7_i = 1.0 + (1.0 + 1 / var_INaCa_i__hna) * mParameters[11] / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h7_ss = 1.0 + (1.0 + 1 / var_INaCa_i__hna) * mParameters[11] / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h8_i = mParameters[11] / (var_INaCa_i__h7_i * var_INaCa_i__hna * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h8_ss = mParameters[11] / (var_INaCa_i__h7_ss * var_INaCa_i__hna * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h9_i = 1 / var_INaCa_i__h7_i; // dimensionless
        const double var_INaCa_i__h9_ss = 1 / var_INaCa_i__h7_ss; // dimensionless
        const double var_INaCa_i__k3p_i = var_INaCa_i__h9_i * var_INaCa_i__wca; // dimensionless
        const double var_INaCa_i__k3p_ss = var_INaCa_i__h9_ss * var_INaCa_i__wca; // dimensionless
        const double var_INaCa_i__k3pp_i = var_INaCa_i__h8_i * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k3_i = var_INaCa_i__k3p_i + var_INaCa_i__k3pp_i; // dimensionless
        const double var_INaCa_i__k3pp_ss = var_INaCa_i__h8_ss * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k3_ss = var_INaCa_i__k3p_ss + var_INaCa_i__k3pp_ss; // dimensionless
        const double var_INaCa_i__k4p_i = var_INaCa_i__h3_i * var_INaCa_i__wca / var_INaCa_i__hca; // dimensionless
        const double var_INaCa_i__k4p_ss = var_INaCa_i__h3_ss * var_INaCa_i__wca / var_INaCa_i__hca; // dimensionless
        const double var_INaCa_i__k4pp_i = var_INaCa_i__h2_i * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k4_i = var_INaCa_i__k4p_i + var_INaCa_i__k4pp_i; // dimensionless
        const double var_INaCa_i__k4pp_ss = var_INaCa_i__h2_ss * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k4_ss = var_INaCa_i__k4p_ss + var_INaCa_i__k4pp_ss; // dimensionless
        const double var_INaCa_i__k7_i = var_INaCa_i__h2_i * var_INaCa_i__h5_i * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k7_ss = var_INaCa_i__h2_ss * var_INaCa_i__h5_ss * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k8_i = var_INaCa_i__h11_i * var_INaCa_i__h8_i * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k8_ss = var_INaCa_i__h11_ss * var_INaCa_i__h8_ss * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__x1_i = (var_INaCa_i__k2_i + var_INaCa_i__k3_i) * var_INaCa_i__k5_i * var_INaCa_i__k7_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k2_i * var_INaCa_i__k4_i; // dimensionless
        const double var_INaCa_i__x1_ss = (var_INaCa_i__k2_ss + var_INaCa_i__k3_ss) * var_INaCa_i__k5_ss * var_INaCa_i__k7_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k2_ss * var_INaCa_i__k4_ss; // dimensionless
        const double var_INaCa_i__x2_i = (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k4_i * var_INaCa_i__k6_i + (var_INaCa_i__k4_i + var_INaCa_i__k5_i) * var_INaCa_i__k1_i * var_INaCa_i__k7_i; // dimensionless
        const double var_INaCa_i__x2_ss = (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k4_ss * var_INaCa_i__k6_ss + (var_INaCa_i__k4_ss + var_INaCa_i__k5_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k7_ss; // dimensionless
        const double var_INaCa_i__x3_i = (var_INaCa_i__k2_i + var_INaCa_i__k3_i) * var_INaCa_i__k6_i * var_INaCa_i__k8_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k1_i * var_INaCa_i__k3_i; // dimensionless
        const double var_INaCa_i__x3_ss = (var_INaCa_i__k2_ss + var_INaCa_i__k3_ss) * var_INaCa_i__k6_ss * var_INaCa_i__k8_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k3_ss; // dimensionless
        const double var_INaCa_i__x4_i = (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k3_i * var_INaCa_i__k5_i + (var_INaCa_i__k4_i + var_INaCa_i__k5_i) * var_INaCa_i__k2_i * var_INaCa_i__k8_i; // dimensionless
        const double var_INaCa_i__E1_i = var_INaCa_i__x1_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E2_i = var_INaCa_i__x2_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E3_i = var_INaCa_i__x3_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E4_i = var_INaCa_i__x4_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__JncxCa_i = var_INaCa_i__E2_i * var_INaCa_i__k2_i - var_INaCa_i__E1_i * var_INaCa_i__k1_i; // millimolar_per_millisecond
        const double var_INaCa_i__JncxNa_i = var_INaCa_i__E3_i * var_INaCa_i__k4pp_i - var_INaCa_i__E2_i * var_INaCa_i__k3pp_i + 3.0 * var_INaCa_i__E4_i * var_INaCa_i__k7_i - 3.0 * var_INaCa_i__E1_i * var_INaCa_i__k8_i; // millimolar_per_millisecond
        const double var_INaCa_i__x4_ss = (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k3_ss * var_INaCa_i__k5_ss + (var_INaCa_i__k4_ss + var_INaCa_i__k5_ss) * var_INaCa_i__k2_ss * var_INaCa_i__k8_ss; // dimensionless
        const double var_INaCa_i__E1_ss = var_INaCa_i__x1_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E2_ss = var_INaCa_i__x2_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E3_ss = var_INaCa_i__x3_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E4_ss = var_INaCa_i__x4_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__JncxCa_ss = var_INaCa_i__E2_ss * var_INaCa_i__k2_ss - var_INaCa_i__E1_ss * var_INaCa_i__k1_ss; // millimolar_per_millisecond
        const double var_INaCa_i__JncxNa_ss = var_INaCa_i__E3_ss * var_INaCa_i__k4pp_ss - var_INaCa_i__E2_ss * var_INaCa_i__k3pp_ss + 3.0 * var_INaCa_i__E4_ss * var_INaCa_i__k7_ss - 3.0 * var_INaCa_i__E1_ss * var_INaCa_i__k8_ss; // millimolar_per_millisecond
        const double var_INaK__Knai = var_INaK__Knai0 * exp(0.33333333333333331 * var_INaK__delta * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // millimolar
        const double var_INaK__Knao = var_INaK__Knao0 * exp(0.33333333333333331 * (1.0 - var_INaK__delta) * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // millimolar
        const double var_INaK__a1 = pow(var_chaste_interface__intracellular_ions__nai, 3) * var_INaK__k1p / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__ki / var_INaK__Kki), 2) + pow((1.0 + var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3)) * pow(var_INaK__Knai, 3)); // dimensionless
        const double var_INaK__a3 = pow(mParameters[10], 2) * var_INaK__k3p / ((-1.0 + pow((1.0 + mParameters[10] / var_INaK__Kko), 2) + pow((1.0 + mParameters[11] / var_INaK__Knao), 3)) * pow(var_INaK__Kko, 2)); // dimensionless
        const double var_INaK__b2 = pow(mParameters[11], 3) * var_INaK__k2m / ((-1.0 + pow((1.0 + mParameters[10] / var_INaK__Kko), 2) + pow((1.0 + mParameters[11] / var_INaK__Knao), 3)) * pow(var_INaK__Knao, 3)); // dimensionless
        const double var_INaK__b4 = pow(var_chaste_interface__intracellular_ions__ki, 2) * var_INaK__k4m / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__ki / var_INaK__Kki), 2) + pow((1.0 + var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3)) * pow(var_INaK__Kki, 2)); // dimensionless
        const double var_INaK__x1 = var_INaK__a1 * var_INaK__a2 * var_INaK__a4 + var_INaK__a1 * var_INaK__a2 * var_INaK__b3 + var_INaK__a2 * var_INaK__b3 * var_INaK__b4 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__x2 = var_INaK__a1 * var_INaK__a2 * var_INaK__a3 + var_INaK__a2 * var_INaK__a3 * var_INaK__b4 + var_INaK__a3 * var_INaK__b1 * var_INaK__b4 + var_INaK__b1 * var_INaK__b2 * var_INaK__b4; // dimensionless
        const double var_INaK__x3 = var_INaK__a2 * var_INaK__a3 * var_INaK__a4 + var_INaK__a3 * var_INaK__a4 * var_INaK__b1 + var_INaK__a4 * var_INaK__b1 * var_INaK__b2 + var_INaK__b1 * var_INaK__b2 * var_INaK__b3; // dimensionless
        const double var_INaK__x4 = var_INaK__a1 * var_INaK__a3 * var_INaK__a4 + var_INaK__a1 * var_INaK__a4 * var_INaK__b2 + var_INaK__a1 * var_INaK__b2 * var_INaK__b3 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__E1 = var_INaK__x1 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E2 = var_INaK__x2 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E3 = var_INaK__x3 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E4 = var_INaK__x4 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__JnakK = 2.0 * var_INaK__E4 * var_INaK__b1 - 2.0 * var_INaK__E3 * var_INaK__a1; // millimolar_per_millisecond
        const double var_INaK__JnakNa = 3.0 * var_INaK__E1 * var_INaK__a3 - 3.0 * var_INaK__E2 * var_INaK__b3; // millimolar_per_millisecond
        const double var_physical_constants__zca = 2.0; // dimensionless
        const double var_physical_constants__zk = 1.0; // dimensionless
        const double var_physical_constants__zna = 1.0; // dimensionless
        const double var_INaCa_i__INaCa_i = 0.80000000000000004 * (var_INaCa_i__JncxCa_i * var_physical_constants__zca + var_INaCa_i__JncxNa_i * var_physical_constants__zna) * var_INaCa_i__Gncx * var_INaCa_i__allo_i; // microA_per_microF
        const double var_INaCa_i__INaCa_ss = 0.20000000000000001 * (var_INaCa_i__JncxCa_ss * var_physical_constants__zca + var_INaCa_i__JncxNa_ss * var_physical_constants__zna) * var_INaCa_i__Gncx * var_INaCa_i__allo_ss; // microA_per_microF
        const double var_INaK__INaK = (var_INaK__JnakK * var_physical_constants__zk + var_INaK__JnakNa * var_physical_constants__zna) * var_INaK__Pnak; // microA_per_microF
        const double var_reversal_potentials__EK = var_physical_constants__R * var_physical_constants__T * log(mParameters[10] / var_chaste_interface__intracellular_ions__ki) / var_physical_constants__F; // millivolt
        const double var_IK1__IK1 = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IK1__GK1_calc * var_IK1__rk1 * var_chaste_interface__IK1__xk1; // microA_per_microF
        const double var_IKb__IKb = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IKb__GKb * var_IKb__xkb; // microA_per_microF
        const double var_IKr__IKr = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IKr__GKr_calc * var_chaste_interface__IKr__O; // microA_per_microF
        const double var_Ito__Ito = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * ((1.0 - var_Ito__fItop) * var_chaste_interface__Ito__a * var_Ito__i + var_chaste_interface__Ito__ap * var_Ito__fItop * var_Ito__ip) * var_Ito__Gto; // microA_per_microF
        const double var_reversal_potentials__ENa = var_physical_constants__R * var_physical_constants__T * log(mParameters[11] / var_chaste_interface__intracellular_ions__nai) / var_physical_constants__F; // millivolt
        const double var_INa__INa = pow(var_chaste_interface__INa__m, 3) * (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - var_INa__fINap) * var_INa__h * var_chaste_interface__INa__j + var_INa__fINap * var_INa__hp * var_chaste_interface__INa__jp) * mParameters[17]; // microA_per_microF
        const double var_INaL__INaL = (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - var_INaL__fINaLp) * var_chaste_interface__INaL__hL + var_INaL__fINaLp * var_chaste_interface__INaL__hLp) * var_INaL__GNaL * var_chaste_interface__INaL__mL; // microA_per_microF
        const double var_reversal_potentials__PKNa = 0.018329999999999999; // dimensionless
        const double var_reversal_potentials__EKs = var_physical_constants__R * var_physical_constants__T * log((mParameters[11] * var_reversal_potentials__PKNa + mParameters[10]) / (var_chaste_interface__intracellular_ions__nai * var_reversal_potentials__PKNa + var_chaste_interface__intracellular_ions__ki)) / var_physical_constants__F; // millivolt
        const double var_IKs__IKs = (-var_reversal_potentials__EKs + var_chaste_interface__membrane__v) * var_IKs__GKs_calc * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2; // microA_per_microF
        d_dt_chaste_interface_var_membrane__v = -var_ICaL__ICaK - var_ICaL__ICaL - var_ICaL__ICaNa - var_ICab__ICab - var_IK1__IK1 - var_IKb__IKb - var_IKr__IKr - var_IKs__IKs - var_INa__INa - var_INaCa_i__INaCa_i - var_INaCa_i__INaCa_ss - var_INaK__INaK - var_INaL__INaL - var_INab__INab - var_IpCa__IpCa - var_Ito__Ito - var_membrane__Istim; // millivolt / millisecond

        double evalF = d_dt_chaste_interface_var_membrane__v;
        mEvalF[0] = d_dt_chaste_interface_var_membrane__v;
        double partialF = EvaluatePartialDerivative0(var_chaste_interface__environment__time, rY, delta, true);
        if (fabs(partialF) < delta)
        {
            rY[v_index] += 0.5*evalF*mDt;
        }
        else
        {
            rY[v_index] += (evalF/partialF)*(exp(partialF*0.5*mDt)-1.0);
        }

        rY[v_index] = yinit;
        evalF = EvaluateYDerivative0(var_chaste_interface__environment__time, rY);
        mEvalF[0] = evalF;
        partialF = EvaluatePartialDerivative0(var_chaste_interface__environment__time, rY, delta, true);
        if (fabs(partialF) < delta)
        {
            rY[v_index] = yinit + evalF*mDt;
        }
        else
        {
            rY[v_index] = yinit + (evalF/partialF)*(exp(partialF*mDt)-1.0);
        }
    }

    void Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::ComputeOneStepExceptVoltage(double var_chaste_interface__environment__time)
    {
        std::vector<double>& rY = rGetStateVariables();
        const double delta=1e-8;
        const unsigned size = GetNumberOfStateVariables();
        mYInit = rY;
        double y_save;

        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__intracellular_ions__cai = rY[1];
        // Units: millimolar; Initial value: 8.6e-05
        double var_chaste_interface__CaMK__CaMKt = rY[2];
        // Units: millimolar; Initial value: 0.0125840447
        double var_chaste_interface__intracellular_ions__nai = rY[3];
        // Units: millimolar; Initial value: 7.268004498
        double var_chaste_interface__intracellular_ions__nass = rY[4];
        // Units: millimolar; Initial value: 7.268089977
        double var_chaste_interface__intracellular_ions__ki = rY[5];
        // Units: millimolar; Initial value: 144.6555918
        double var_chaste_interface__intracellular_ions__kss = rY[6];
        // Units: millimolar; Initial value: 144.6555651
        double var_chaste_interface__intracellular_ions__cass = rY[7];
        // Units: millimolar; Initial value: 8.49e-05
        double var_chaste_interface__intracellular_ions__cansr = rY[8];
        // Units: millimolar; Initial value: 1.619574538
        double var_chaste_interface__intracellular_ions__cajsr = rY[9];
        // Units: millimolar; Initial value: 1.571234014
        double var_chaste_interface__INa__m = rY[10];
        // Units: dimensionless; Initial value: 0.007344121102
        double var_chaste_interface__INa__hf = rY[11];
        // Units: dimensionless; Initial value: 0.6981071913
        double var_chaste_interface__INa__hs = rY[12];
        // Units: dimensionless; Initial value: 0.6980895801
        double var_chaste_interface__INa__j = rY[13];
        // Units: dimensionless; Initial value: 0.6979908432
        double var_chaste_interface__INa__hsp = rY[14];
        // Units: dimensionless; Initial value: 0.4549485525
        double var_chaste_interface__INa__jp = rY[15];
        // Units: dimensionless; Initial value: 0.6979245865
        double var_chaste_interface__INaL__mL = rY[16];
        // Units: dimensionless; Initial value: 0.0001882617273
        double var_chaste_interface__INaL__hL = rY[17];
        // Units: dimensionless; Initial value: 0.5008548855
        double var_chaste_interface__INaL__hLp = rY[18];
        // Units: dimensionless; Initial value: 0.2693065357
        double var_chaste_interface__Ito__a = rY[19];
        // Units: dimensionless; Initial value: 0.001001097687
        double var_chaste_interface__Ito__iF = rY[20];
        // Units: dimensionless; Initial value: 0.9995541745
        double var_chaste_interface__Ito__iS = rY[21];
        // Units: dimensionless; Initial value: 0.5865061736
        double var_chaste_interface__Ito__ap = rY[22];
        // Units: dimensionless; Initial value: 0.0005100862934
        double var_chaste_interface__Ito__iFp = rY[23];
        // Units: dimensionless; Initial value: 0.9995541823
        double var_chaste_interface__Ito__iSp = rY[24];
        // Units: dimensionless; Initial value: 0.6393399482
        double var_chaste_interface__ICaL__d = rY[25];
        // Units: dimensionless; Initial value: 2.34e-09
        double var_chaste_interface__ICaL__ff = rY[26];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fs = rY[27];
        // Units: dimensionless; Initial value: 0.9102412777
        double var_chaste_interface__ICaL__fcaf = rY[28];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcas = rY[29];
        // Units: dimensionless; Initial value: 0.9998046777
        double var_chaste_interface__ICaL__jca = rY[30];
        // Units: dimensionless; Initial value: 0.9999738312
        double var_chaste_interface__ICaL__ffp = rY[31];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcafp = rY[32];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__nca = rY[33];
        // Units: dimensionless; Initial value: 0.002749414044
        double var_chaste_interface__IKr__IC1 = rY[34];
        // Units: dimensionless; Initial value: 0.999637
        double var_chaste_interface__IKr__IC2 = rY[35];
        // Units: dimensionless; Initial value: 6.83208e-05
        double var_chaste_interface__IKr__C1 = rY[36];
        // Units: dimensionless; Initial value: 1.80145e-08
        double var_chaste_interface__IKr__C2 = rY[37];
        // Units: dimensionless; Initial value: 8.26619e-05
        double var_chaste_interface__IKr__O = rY[38];
        // Units: dimensionless; Initial value: 0.00015551
        double var_chaste_interface__IKr__IO = rY[39];
        // Units: dimensionless; Initial value: 5.67623e-05
        double var_chaste_interface__IKr__IObound = rY[40];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKr__Obound = rY[41];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKr__Cbound = rY[42];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKs__xs1 = rY[43];
        // Units: dimensionless; Initial value: 0.2707758025
        double var_chaste_interface__IKs__xs2 = rY[44];
        // Units: dimensionless; Initial value: 0.0001928503426
        double var_chaste_interface__IK1__xk1 = rY[45];
        // Units: dimensionless; Initial value: 0.9967597594
        double var_chaste_interface__ryr__Jrelnp = rY[46];
        // Units: dimensionless; Initial value: 2.5e-07
        double var_chaste_interface__ryr__Jrelp = rY[47];
        // Units: dimensionless; Initial value: 3.12e-07
        

        // Mathematics
        double d_dt_chaste_interface_var_membrane__v;
        const double var_CaMK__CaMKo = 0.050000000000000003; // dimensionless
        const double var_CaMK__KmCaM = 0.0015; // millimolar
        const double var_CaMK__KmCaMK = 0.14999999999999999; // millimolar
        const double var_CaMK__aCaMK = 0.050000000000000003; // per_millimolar_per_millisecond
        const double var_CaMK__bCaMK = 0.00068000000000000005; // per_millisecond
        const double var_ICaL__Aff = 0.59999999999999998; // dimensionless
        const double var_ICaL__Afs = 1.0 - var_ICaL__Aff; // dimensionless
        const double var_ICaL__Kmn = 0.002; // millimolar
        const double var_ICaL__f = var_ICaL__Aff * var_chaste_interface__ICaL__ff + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_ICaL__fp = var_ICaL__Aff * var_chaste_interface__ICaL__ffp + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_ICaL__k2n = 1000.0; // per_millisecond
        const double var_ICaL__km2n = var_chaste_interface__ICaL__jca; // per_millisecond
        const double var_ICaL__tjca = 75.0; // millisecond
        const double var_IKr__A1 = 0.0264; // per_millisecond
        const double var_IKr__A11 = 0.00078680000000000004; // per_millisecond
        const double var_IKr__A2 = 4.9860000000000002e-6; // per_millisecond
        const double var_IKr__A21 = 5.4550000000000003e-6; // per_millisecond
        const double var_IKr__A3 = 0.001214; // per_millisecond
        const double var_IKr__A31 = 0.005509; // per_millisecond
        const double var_IKr__A4 = 1.8539999999999999e-5; // per_millisecond
        const double var_IKr__A41 = 0.0014159999999999999; // per_millisecond
        const double var_IKr__A51 = 0.44919999999999999; // per_millisecond
        const double var_IKr__A52 = 0.31809999999999999; // per_millisecond
        const double var_IKr__A53 = 0.14899999999999999; // per_millisecond
        const double var_IKr__A61 = 0.012409999999999999; // per_millisecond
        const double var_IKr__A62 = 0.3226; // per_millisecond
        const double var_IKr__A63 = 0.0089779999999999999; // per_millisecond
        const double var_IKr__B1 = 4.6310000000000002e-5; // per_millivolt
        const double var_IKr__B11 = 1.5349999999999998e-8; // per_millivolt
        const double var_IKr__B2 = -0.0042259999999999997; // per_millivolt
        const double var_IKr__B21 = -0.16880000000000001; // per_millivolt
        const double var_IKr__B3 = 0.0085159999999999993; // per_millivolt
        const double var_IKr__B31 = 7.7710000000000006e-9; // per_millivolt
        const double var_IKr__B4 = -0.04641; // per_millivolt
        const double var_IKr__B41 = -0.02877; // per_millivolt
        const double var_IKr__B51 = 0.0085950000000000002; // per_millivolt
        const double var_IKr__B52 = 3.613e-8; // per_millivolt
        const double var_IKr__B53 = 0.0046680000000000003; // per_millivolt
        const double var_IKr__B61 = 0.17249999999999999; // per_millivolt
        const double var_IKr__B62 = -0.00065749999999999999; // per_millivolt
        const double var_IKr__B63 = -0.02215; // per_millivolt
        const double var_IKr__Temp = 37.0; // dimensionless
        const double var_IKr__q1 = 4.843; // dimensionless
        const double var_IKr__q11 = 4.9420000000000002; // dimensionless
        const double var_IKr__q2 = 4.2300000000000004; // dimensionless
        const double var_IKr__q21 = 4.1559999999999997; // dimensionless
        const double var_IKr__q3 = 4.9619999999999997; // dimensionless
        const double var_IKr__q31 = 4.2199999999999998; // dimensionless
        const double var_IKr__q4 = 3.7690000000000001; // dimensionless
        const double var_IKr__q41 = 1.4590000000000001; // dimensionless
        const double var_IKr__q51 = 5.0; // dimensionless
        const double var_IKr__q52 = 4.6630000000000003; // dimensionless
        const double var_IKr__q53 = 2.4119999999999999; // dimensionless
        const double var_IKr__q61 = 5.5679999999999996; // dimensionless
        const double var_IKr__q62 = 5.0; // dimensionless
        const double var_IKr__q63 = 5.6820000000000004; // dimensionless
        const double var_IKs__txs1_max = 817.29999999999995; // millisecond
        const double var_INa__Ahf = 0.98999999999999999; // dimensionless
        const double var_INa__Ahs = 1.0 - var_INa__Ahf; // dimensionless
        const double var_INa__h = var_INa__Ahf * var_chaste_interface__INa__hf + var_INa__Ahs * var_chaste_interface__INa__hs; // dimensionless
        const double var_INa__hp = var_INa__Ahf * var_chaste_interface__INa__hf + var_INa__Ahs * var_chaste_interface__INa__hsp; // dimensionless
        const double var_INa__hssV1 = 82.900000000000006; // millivolt
        const double var_INa__hssV2 = 6.0860000000000003; // millivolt
        const double var_INa__mssV1 = 39.57; // millivolt
        const double var_INa__mssV2 = 9.8710000000000004; // millivolt
        const double var_INa__mtD1 = 6.7649999999999997; // dimensionless
        const double var_INa__mtD2 = 8.5519999999999996; // dimensionless
        const double var_INa__mtV1 = 11.640000000000001; // millivolt
        const double var_INa__mtV2 = 34.770000000000003; // millivolt
        const double var_INa__mtV3 = 77.420000000000002; // millivolt
        const double var_INa__mtV4 = 5.9550000000000001; // millivolt
        const double var_INa__shift_INa_inact = 0; // millivolt
        const double var_INaCa_i__KmCaAct = 0.00014999999999999999; // millimolar
        const double var_INaCa_i__kasymm = 12.5; // dimensionless
        const double var_INaCa_i__kcaoff = 5000.0; // per_millisecond
        const double var_INaCa_i__k2_i = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k2_ss = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k5_i = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k5_ss = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__kcaon = 1500000.0; // per_millisecond
        const double var_INaCa_i__kna1 = 15.0; // per_millisecond
        const double var_INaCa_i__kna2 = 5.0; // per_millisecond
        const double var_INaCa_i__kna3 = 88.120000000000005; // per_millisecond
        const double var_INaCa_i__qca = 0.16700000000000001; // dimensionless
        const double var_INaCa_i__qna = 0.52239999999999998; // dimensionless
        const double var_INaCa_i__wca = 60000.0; // dimensionless
        const double var_INaCa_i__wna = 60000.0; // dimensionless
        const double var_INaCa_i__wnaca = 5000.0; // dimensionless
        const double var_INaK__H = 9.9999999999999995e-8; // millimolar
        const double var_INaK__Khp = 1.698e-7; // millimolar
        const double var_INaK__Kki = 0.5; // per_millisecond
        const double var_INaK__Kko = 0.35820000000000002; // per_millisecond
        const double var_INaK__Kmgatp = 1.698e-7; // millimolar
        const double var_INaK__Knai0 = 9.0730000000000004; // millimolar
        const double var_INaK__Knao0 = 27.780000000000001; // millimolar
        const double var_INaK__Knap = 224.0; // millimolar
        const double var_INaK__Kxkur = 292.0; // millimolar
        const double var_INaK__MgADP = 0.050000000000000003; // millimolar
        const double var_INaK__MgATP = 9.8000000000000007; // millimolar
        const double var_INaK__delta = -0.155; // millivolt
        const double var_INaK__eP = 4.2000000000000002; // dimensionless
        const double var_INaK__k1m = 182.40000000000001; // per_millisecond
        const double var_INaK__b1 = var_INaK__MgADP * var_INaK__k1m; // dimensionless
        const double var_INaK__k1p = 949.5; // per_millisecond
        const double var_INaK__k2m = 39.399999999999999; // per_millisecond
        const double var_INaK__k2p = 687.20000000000005; // per_millisecond
        const double var_INaK__a2 = var_INaK__k2p; // dimensionless
        const double var_INaK__k3m = 79300.0; // per_millisecond
        const double var_INaK__k3p = 1899.0; // per_millisecond
        const double var_INaK__k4m = 40.0; // per_millisecond
        const double var_INaK__k4p = 639.0; // per_millisecond
        const double var_INaK__a4 = var_INaK__MgATP * var_INaK__k4p / ((1.0 + var_INaK__MgATP / var_INaK__Kmgatp) * var_INaK__Kmgatp); // dimensionless
        const double var_INaL__thL = 200.0; // millisecond
        const double var_INaL__thLp = 3.0 * var_INaL__thL; // millisecond
        const double var_IpCa__KmCap = 0.00050000000000000001; // millimolar
        const double var_cell_geometry__L = 0.01; // centimeter
        const double var_cell_geometry__rad = 0.0011000000000000001; // centimeter
        const double var_cell_geometry__Ageo = 6.2800000000000002 * pow(var_cell_geometry__rad, 2) + 6.2800000000000002 * var_cell_geometry__L * var_cell_geometry__rad; // centimeter_squared
        const double var_cell_geometry__Acap = 2.0 * var_cell_geometry__Ageo; // centimeter_squared
        const double var_cell_geometry__vcell = 3140.0 * pow(var_cell_geometry__rad, 2) * var_cell_geometry__L; // microliter
        const double var_cell_geometry__vjsr = 0.0047999999999999996 * var_cell_geometry__vcell; // microliter
        const double var_cell_geometry__vmyo = 0.68000000000000005 * var_cell_geometry__vcell; // microliter
        const double var_cell_geometry__vnsr = 0.055199999999999999 * var_cell_geometry__vcell; // microliter
        const double var_cell_geometry__vss = 0.02 * var_cell_geometry__vcell; // microliter
        const double var_environment__celltype = 0; // dimensionless
        const double var_ICaL__PCa = ((var_environment__celltype == 1.0) ? (1.2 * mParameters[12]) : ((var_environment__celltype == 2.0) ? (2.5 * mParameters[12]) : (mParameters[12]))); // dimensionless
        const double var_ICaL__PCaK = 0.00035740000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCaNa = 0.00125 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCap = 1.1000000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCaKp = 0.00035740000000000001 * var_ICaL__PCap; // dimensionless
        const double var_ICaL__PCaNap = 0.00125 * var_ICaL__PCap; // dimensionless
        const double var_IK1__GK1 = ((var_environment__celltype == 1.0) ? (1.2 * mParameters[18]) : ((var_environment__celltype == 2.0) ? (1.3 * mParameters[18]) : (mParameters[18]))); // milliS_per_microF
        const double var_IKb__GKb = ((var_environment__celltype == 1.0) ? (0.59999999999999998 * mParameters[14]) : (mParameters[14])); // milliS_per_microF
        const double var_IKr__GKr = ((var_environment__celltype == 1.0) ? (1.3 * mParameters[20]) : ((var_environment__celltype == 2.0) ? (0.80000000000000004 * mParameters[20]) : (mParameters[20]))); // milliS_per_microF
        const double var_IKs__GKs = ((var_environment__celltype == 1.0) ? (1.3999999999999999 * mParameters[21]) : (mParameters[21])); // milliS_per_microF
        const double var_INaCa_i__Gncx = ((var_environment__celltype == 1.0) ? (1.1000000000000001 * mParameters[22]) : ((var_environment__celltype == 2.0) ? (1.3999999999999999 * mParameters[22]) : (mParameters[22]))); // milliS_per_microF
        const double var_INaK__Pnak = ((var_environment__celltype == 1.0) ? (0.90000000000000002 * mParameters[23]) : ((var_environment__celltype == 2.0) ? (0.69999999999999996 * mParameters[23]) : (mParameters[23]))); // milliS_per_microF
        const double var_INaL__GNaL = ((var_environment__celltype == 1.0) ? (0.59999999999999998 * mParameters[19]) : (mParameters[19])); // milliS_per_microF
        const double var_Ito__Gto = (((var_environment__celltype == 1.0) || (var_environment__celltype == 2.0)) ? (4.0 * mParameters[24]) : (mParameters[24])); // milliS_per_microF
        const double var_SERCA__upScale = ((var_environment__celltype == 1.0) ? (1.3) : (1.0)); // dimensionless
        const double var_IK1__GK1_calc = sqrt(mParameters[10]) * var_IK1__GK1; // milliS_per_microF
        const double var_IKr__GKr_calc = 0.43033148291193518 * sqrt(mParameters[10]) * var_IKr__GKr; // milliS_per_microF
        const double var_INaCa_i__h10_i = 1.0 + (1.0 + mParameters[11] / var_INaCa_i__kna2) * mParameters[11] / var_INaCa_i__kna1 + var_INaCa_i__kasymm; // dimensionless
        const double var_INaCa_i__h10_ss = 1.0 + (1.0 + mParameters[11] / var_INaCa_i__kna2) * mParameters[11] / var_INaCa_i__kna1 + var_INaCa_i__kasymm; // dimensionless
        const double var_INaCa_i__h11_i = pow(mParameters[11], 2) / (var_INaCa_i__h10_i * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h11_ss = pow(mParameters[11], 2) / (var_INaCa_i__h10_ss * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h12_i = 1 / var_INaCa_i__h10_i; // dimensionless
        const double var_INaCa_i__h12_ss = 1 / var_INaCa_i__h10_ss; // dimensionless
        const double var_INaCa_i__k1_i = var_INaCa_i__h12_i * var_INaCa_i__kcaon * mParameters[9]; // dimensionless
        const double var_INaCa_i__k1_ss = var_INaCa_i__h12_ss * var_INaCa_i__kcaon * mParameters[9]; // dimensionless
        const double var_intracellular_ions__BSLmax = 1.1240000000000001; // millimolar
        const double var_intracellular_ions__BSRmax = 0.047; // millimolar
        const double var_intracellular_ions__KmBSL = 0.0086999999999999994; // millimolar
        const double var_intracellular_ions__KmBSR = 0.00087000000000000001; // millimolar
        const double var_IKs__KsCa = 1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__intracellular_ions__cai), 1.3999999999999999)); // dimensionless
        const double var_IKs__GKs_calc = var_IKs__GKs * var_IKs__KsCa; // milliS_per_microF
        const double var_INaCa_i__allo_i = 1 / (1.0 + pow(var_INaCa_i__KmCaAct, 2) / pow(var_chaste_interface__intracellular_ions__cai, 2)); // dimensionless
        const double var_IpCa__IpCa = mParameters[16] * var_chaste_interface__intracellular_ions__cai / (var_IpCa__KmCap + var_chaste_interface__intracellular_ions__cai); // microA_per_microF
        const double var_SERCA__Jupnp = 0.0043750000000000004 * var_SERCA__upScale * var_chaste_interface__intracellular_ions__cai / (0.00092000000000000003 + var_chaste_interface__intracellular_ions__cai); // millimolar_per_millisecond
        const double var_SERCA__Jupp = 0.01203125 * var_SERCA__upScale * var_chaste_interface__intracellular_ions__cai / (0.00075000000000000002 + var_chaste_interface__intracellular_ions__cai); // millimolar_per_millisecond
        const double var_SERCA__Jleak = 0.00026249999999999998 * var_chaste_interface__intracellular_ions__cansr; // millimolar_per_millisecond
        const double var_CaMK__CaMKb = (1.0 - var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKo / (1.0 + var_CaMK__KmCaM / var_chaste_interface__intracellular_ions__cass); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double d_dt_chaste_interface_var_CaMK__CaMKt = -var_chaste_interface__CaMK__CaMKt * var_CaMK__bCaMK + (var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKb * var_CaMK__aCaMK; // millimolar / millisecond
        const double var_ICaL__anca = 1 / (pow((1.0 + var_ICaL__Kmn / var_chaste_interface__intracellular_ions__cass), 4) + var_ICaL__k2n / var_ICaL__km2n); // dimensionless
        const double d_dt_chaste_interface_var_ICaL__nca = var_ICaL__anca * var_ICaL__k2n - var_ICaL__km2n * var_chaste_interface__ICaL__nca; // 1 / millisecond
        const double var_ICaL__fICaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INa__fINap = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INaCa_i__allo_ss = 1 / (1.0 + pow(var_INaCa_i__KmCaAct, 2) / pow(var_chaste_interface__intracellular_ions__cass, 2)); // dimensionless
        const double var_INaL__fINaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_Ito__fItop = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_SERCA__fJupp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_SERCA__Jup = (-var_SERCA__Jleak + (1.0 - var_SERCA__fJupp) * var_SERCA__Jupnp + var_SERCA__Jupp * var_SERCA__fJupp) * mParameters[8]; // millimolar_per_millisecond
        const double var_diff__Jdiff = 5.0 * var_chaste_interface__intracellular_ions__cass - 5.0 * var_chaste_interface__intracellular_ions__cai; // millimolar_per_millisecond
        const double var_intracellular_ions__Bcass = 1 / (1.0 + var_intracellular_ions__BSLmax * var_intracellular_ions__KmBSL / pow((var_intracellular_ions__KmBSL + var_chaste_interface__intracellular_ions__cass), 2) + var_intracellular_ions__BSRmax * var_intracellular_ions__KmBSR / pow((var_intracellular_ions__KmBSR + var_chaste_interface__intracellular_ions__cass), 2)); // dimensionless
        const double var_intracellular_ions__cm = 1.0; // microF_per_centimeter_squared
        const double var_intracellular_ions__cmdnmax_b = 0.050000000000000003; // millimolar
        const double var_intracellular_ions__cmdnmax = ((var_environment__celltype == 1.0) ? (1.3 * var_intracellular_ions__cmdnmax_b) : (var_intracellular_ions__cmdnmax_b)); // millimolar
        const double var_intracellular_ions__csqnmax = 10.0; // millimolar
        const double var_intracellular_ions__kmcmdn = 0.0023800000000000002; // millimolar
        const double var_intracellular_ions__kmcsqn = 0.80000000000000004; // millimolar
        const double var_intracellular_ions__Bcajsr = 1 / (1.0 + var_intracellular_ions__csqnmax * var_intracellular_ions__kmcsqn / pow((var_chaste_interface__intracellular_ions__cajsr + var_intracellular_ions__kmcsqn), 2)); // dimensionless
        const double var_intracellular_ions__kmtrpn = 0.00050000000000000001; // millimolar
        const double var_diff__JdiffK = 0.5 * var_chaste_interface__intracellular_ions__kss - 0.5 * var_chaste_interface__intracellular_ions__ki; // millimolar_per_millisecond
        const double var_INaCa_i__h4_i = 1.0 + (1.0 + var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna2) * var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna1; // dimensionless
        const double var_INaCa_i__h5_i = pow(var_chaste_interface__intracellular_ions__nai, 2) / (var_INaCa_i__h4_i * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h6_i = 1 / var_INaCa_i__h4_i; // dimensionless
        const double var_INaCa_i__k6_i = var_INaCa_i__h6_i * var_INaCa_i__kcaon * var_chaste_interface__intracellular_ions__cai; // dimensionless
        const double var_INaK__P = var_INaK__eP / (1.0 + var_INaK__H / var_INaK__Khp + var_chaste_interface__intracellular_ions__nai / var_INaK__Knap + var_chaste_interface__intracellular_ions__ki / var_INaK__Kxkur); // dimensionless
        const double var_INaK__b3 = var_INaK__H * var_INaK__P * var_INaK__k3m / (1.0 + var_INaK__MgATP / var_INaK__Kmgatp); // dimensionless
        const double var_INaCa_i__h4_ss = 1.0 + (1.0 + var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna2) * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna1; // dimensionless
        const double var_INaCa_i__h5_ss = pow(var_chaste_interface__intracellular_ions__nass, 2) / (var_INaCa_i__h4_ss * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h6_ss = 1 / var_INaCa_i__h4_ss; // dimensionless
        const double var_INaCa_i__k6_ss = var_INaCa_i__h6_ss * var_INaCa_i__kcaon * var_chaste_interface__intracellular_ions__cass; // dimensionless
        const double var_diff__JdiffNa = 0.5 * var_chaste_interface__intracellular_ions__nass - 0.5 * var_chaste_interface__intracellular_ions__nai; // millimolar_per_millisecond
        const double var_intracellular_ions__trpnmax = 0.070000000000000007; // millimolar
        const double var_intracellular_ions__Bcai = 1 / (1.0 + var_intracellular_ions__cmdnmax * var_intracellular_ions__kmcmdn / pow((var_chaste_interface__intracellular_ions__cai + var_intracellular_ions__kmcmdn), 2) + var_intracellular_ions__kmtrpn * var_intracellular_ions__trpnmax / pow((var_chaste_interface__intracellular_ions__cai + var_intracellular_ions__kmtrpn), 2)); // dimensionless
        const double var_membrane__Istim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
        const double var_membrane__Istim = var_membrane__Istim_converted / HeartConfig::Instance()->GetCapacitance(); // microA_per_microF
        const double d_dt_chaste_interface_var_IKr__C1 = var_IKr__A2 * var_chaste_interface__IKr__C2 * exp(var_IKr__B2 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q2)) + var_IKr__A61 * var_chaste_interface__IKr__IC1 * exp(var_IKr__B61 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q61)) - var_IKr__A1 * var_chaste_interface__IKr__C1 * exp(var_IKr__B1 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q1)) - var_IKr__A51 * var_chaste_interface__IKr__C1 * exp(var_IKr__B51 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q51)); // 1 / millisecond
        const double d_dt_chaste_interface_var_IKr__C2 = var_IKr__A1 * var_chaste_interface__IKr__C1 * exp(var_IKr__B1 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q1)) + var_IKr__A41 * var_chaste_interface__IKr__O * exp(var_IKr__B41 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q41)) + var_IKr__A62 * var_chaste_interface__IKr__IC2 * exp(var_IKr__B62 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q62)) - var_IKr__A2 * var_chaste_interface__IKr__C2 * exp(var_IKr__B2 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q2)) - var_IKr__A31 * var_chaste_interface__IKr__C2 * exp(var_IKr__B31 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q31)) - var_IKr__A52 * var_chaste_interface__IKr__C2 * exp(var_IKr__B52 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q52)); // 1 / millisecond
        const double d_dt_chaste_interface_var_IKr__Cbound = var_chaste_interface__IKr__IObound * mParameters[2] + mParameters[2] * var_chaste_interface__IKr__Obound - 2 * var_chaste_interface__IKr__Cbound * mParameters[2] / (1.0 + exp(0.14729709824716453 * mParameters[4] - 0.14729709824716453 * var_chaste_interface__membrane__v)); // 1 / millisecond
        const double d_dt_chaste_interface_var_IKr__IC1 = var_IKr__A21 * var_chaste_interface__IKr__IC2 * exp(var_IKr__B21 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q21)) + var_IKr__A51 * var_chaste_interface__IKr__C1 * exp(var_IKr__B51 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q51)) - var_IKr__A11 * var_chaste_interface__IKr__IC1 * exp(var_IKr__B11 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q11)) - var_IKr__A61 * var_chaste_interface__IKr__IC1 * exp(var_IKr__B61 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q61)); // 1 / millisecond
        const double d_dt_chaste_interface_var_IKr__IC2 = var_IKr__A11 * var_chaste_interface__IKr__IC1 * exp(var_IKr__B11 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q11)) + var_IKr__A4 * var_chaste_interface__IKr__IO * exp(var_IKr__B4 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q4)) + var_IKr__A52 * var_chaste_interface__IKr__C2 * exp(var_IKr__B52 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q52)) - var_IKr__A21 * var_chaste_interface__IKr__IC2 * exp(var_IKr__B21 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q21)) - var_IKr__A3 * var_chaste_interface__IKr__IC2 * exp(var_IKr__B3 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q3)) - var_IKr__A62 * var_chaste_interface__IKr__IC2 * exp(var_IKr__B62 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q62)); // 1 / millisecond
        const double d_dt_chaste_interface_var_IKr__IO = var_IKr__A3 * var_chaste_interface__IKr__IC2 * exp(var_IKr__B3 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q3)) + var_IKr__A53 * var_chaste_interface__IKr__O * exp(var_IKr__B53 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q53)) - var_IKr__A4 * var_chaste_interface__IKr__IO * exp(var_IKr__B4 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q4)) - var_IKr__A63 * var_chaste_interface__IKr__IO * exp(var_IKr__B63 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q63)) - pow(mParameters[0], mParameters[6]) * var_chaste_interface__IKr__IO * mParameters[1] * mParameters[3] / (pow(mParameters[0], mParameters[6]) + mParameters[5]) + var_IKr__A53 * var_chaste_interface__IKr__IObound * mParameters[3] * exp(var_IKr__B53 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q53)) / (var_IKr__A63 * exp(var_IKr__B63 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q63))); // 1 / millisecond
        const double d_dt_chaste_interface_var_IKr__IObound = -var_chaste_interface__IKr__IObound * mParameters[2] + var_chaste_interface__IKr__Cbound * mParameters[2] / (1.0 + exp(0.14729709824716453 * mParameters[4] - 0.14729709824716453 * var_chaste_interface__membrane__v)) + pow(mParameters[0], mParameters[6]) * var_chaste_interface__IKr__IO * mParameters[1] * mParameters[3] / (pow(mParameters[0], mParameters[6]) + mParameters[5]) - var_IKr__A53 * var_chaste_interface__IKr__IObound * mParameters[3] * exp(var_IKr__B53 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q53)) / (var_IKr__A63 * exp(var_IKr__B63 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q63))); // 1 / millisecond
        const double d_dt_chaste_interface_var_IKr__O = mParameters[3] * var_chaste_interface__IKr__Obound + var_IKr__A31 * var_chaste_interface__IKr__C2 * exp(var_IKr__B31 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q31)) + var_IKr__A63 * var_chaste_interface__IKr__IO * exp(var_IKr__B63 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q63)) - var_IKr__A41 * var_chaste_interface__IKr__O * exp(var_IKr__B41 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q41)) - var_IKr__A53 * var_chaste_interface__IKr__O * exp(var_IKr__B53 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q53)) - pow(mParameters[0], mParameters[6]) * mParameters[1] * mParameters[3] * var_chaste_interface__IKr__O / (pow(mParameters[0], mParameters[6]) + mParameters[5]); // 1 / millisecond
        const double d_dt_chaste_interface_var_IKr__Obound = -mParameters[2] * var_chaste_interface__IKr__Obound - mParameters[3] * var_chaste_interface__IKr__Obound + var_chaste_interface__IKr__Cbound * mParameters[2] / (1.0 + exp(0.14729709824716453 * mParameters[4] - 0.14729709824716453 * var_chaste_interface__membrane__v)) + pow(mParameters[0], mParameters[6]) * mParameters[1] * mParameters[3] * var_chaste_interface__IKr__O / (pow(mParameters[0], mParameters[6]) + mParameters[5]); // 1 / millisecond
        const double var_ICaL__Afcaf = 0.29999999999999999 + 0.59999999999999998 / (1.0 + exp(-1.0 + 0.10000000000000001 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__Afcas = 1.0 - var_ICaL__Afcaf; // dimensionless
        const double var_ICaL__PhiCaK = ((fabs(var_chaste_interface__membrane__v) < 2.6712338705498262e-6) ? (2.671233870549826e-13 * (-0.75 * mParameters[10] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)) + 187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-0.75 * mParameters[10] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-0.75 * mParameters[10] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (0.037435883507802616 * pow(var_chaste_interface__membrane__v, 2) * (-0.75 * mParameters[10] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(0.037435883507802616 * var_chaste_interface__membrane__v)) / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__v)))); // dimensionless
        const double var_ICaL__PhiCaL = ((fabs(var_chaste_interface__membrane__v) < 1.3356169352749131e-6) ? (2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)) + 374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (0.14974353403121046 * pow(var_chaste_interface__membrane__v, 2) * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(0.074871767015605231 * var_chaste_interface__membrane__v)) / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__v)))); // dimensionless
        const double var_ICaL__PhiCaNa = ((fabs(var_chaste_interface__membrane__v) < 2.6712338705498262e-6) ? (2.671233870549826e-13 * (-0.75 * mParameters[11] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)) + 187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-0.75 * mParameters[11] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-0.75 * mParameters[11] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (0.037435883507802616 * pow(var_chaste_interface__membrane__v, 2) * (-0.75 * mParameters[11] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(0.037435883507802616 * var_chaste_interface__membrane__v)) / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__v)))); // dimensionless
        const double var_ICaL__dss = 1 / (1.0 + exp(-0.93144208037825049 - 0.23640661938534277 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__fca = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcaf + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__fcap = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcafp + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__ICaK = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaK * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaKp * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaL = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCa * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCap * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaNa = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaNa * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaNap * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__fss = 1 / (1.0 + exp(5.2976190476190466 + 0.27056277056277056 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__fcass = var_ICaL__fss; // dimensionless
        const double d_dt_chaste_interface_var_ICaL__jca = (-var_chaste_interface__ICaL__jca + var_ICaL__fcass) / var_ICaL__tjca; // 1 / millisecond
        const double var_ICaL__td = 0.59999999999999998 + 1 / (exp(1.26 + 0.089999999999999997 * var_chaste_interface__membrane__v) + exp(-0.30000000000000004 - 0.050000000000000003 * var_chaste_interface__membrane__v)); // millisecond
        const double d_dt_chaste_interface_var_ICaL__d = (-var_chaste_interface__ICaL__d + var_ICaL__dss) / var_ICaL__td; // 1 / millisecond
        const double var_ICaL__tfcaf = 7.0 + 1 / (0.040000000000000001 * exp(0.5714285714285714 - 0.14285714285714285 * var_chaste_interface__membrane__v) + 0.040000000000000001 * exp(-0.5714285714285714 + 0.14285714285714285 * var_chaste_interface__membrane__v)); // millisecond
        const double d_dt_chaste_interface_var_ICaL__fcaf = (-var_chaste_interface__ICaL__fcaf + var_ICaL__fcass) / var_ICaL__tfcaf; // 1 / millisecond
        const double var_ICaL__tfcafp = 2.5 * var_ICaL__tfcaf; // millisecond
        const double d_dt_chaste_interface_var_ICaL__fcafp = (-var_chaste_interface__ICaL__fcafp + var_ICaL__fcass) / var_ICaL__tfcafp; // 1 / millisecond
        const double var_ICaL__tfcas = 100.0 + 1 / (0.00012 * exp(0.14285714285714285 * var_chaste_interface__membrane__v) + 0.00012 * exp(-0.33333333333333331 * var_chaste_interface__membrane__v)); // millisecond
        const double d_dt_chaste_interface_var_ICaL__fcas = (-var_chaste_interface__ICaL__fcas + var_ICaL__fcass) / var_ICaL__tfcas; // 1 / millisecond
        const double var_ICaL__tff = 7.0 + 1 / (0.0044999999999999997 * exp(2.0 + 0.10000000000000001 * var_chaste_interface__membrane__v) + 0.0044999999999999997 * exp(-2.0 - 0.10000000000000001 * var_chaste_interface__membrane__v)); // millisecond
        const double d_dt_chaste_interface_var_ICaL__ff = (-var_chaste_interface__ICaL__ff + var_ICaL__fss) / var_ICaL__tff; // 1 / millisecond
        const double var_ICaL__tffp = 2.5 * var_ICaL__tff; // millisecond
        const double d_dt_chaste_interface_var_ICaL__ffp = (-var_chaste_interface__ICaL__ffp + var_ICaL__fss) / var_ICaL__tffp; // 1 / millisecond
        const double var_ICaL__tfs = 1000.0 + 1 / (3.4999999999999997e-5 * exp(0.83333333333333337 + 0.16666666666666666 * var_chaste_interface__membrane__v) + 3.4999999999999997e-5 * exp(-1.25 - 0.25 * var_chaste_interface__membrane__v)); // millisecond
        const double d_dt_chaste_interface_var_ICaL__fs = (-var_chaste_interface__ICaL__fs + var_ICaL__fss) / var_ICaL__tfs; // 1 / millisecond
        const double var_ICab__ICab = ((fabs(var_chaste_interface__membrane__v) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cai * exp(9.9999999999999995e-8)) * mParameters[13] / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cai * exp(-9.9999999999999995e-8)) * mParameters[13] / (-1.0 + exp(-9.9999999999999995e-8))) + 2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cai * exp(-9.9999999999999995e-8)) * mParameters[13] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.14974353403121046 * pow(var_chaste_interface__membrane__v, 2) * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cai * exp(0.074871767015605231 * var_chaste_interface__membrane__v)) * mParameters[13] / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__v)))); // microA_per_microF
        const double var_IK1__rk1 = 1 / (1.0 + exp(11.145054250500367 + 0.10534077741493732 * var_chaste_interface__membrane__v - 0.27388602127883704 * mParameters[10])); // millisecond
        const double var_IK1__txk1 = 122.2 / (exp(3.4155488244627148 + 0.014423770373575654 * var_chaste_interface__membrane__v) + exp(-6.2475442043222005 - 0.049115913555992145 * var_chaste_interface__membrane__v)); // millisecond
        const double var_IK1__xk1ss = 1 / (1.0 + exp((-144.59 - var_chaste_interface__membrane__v - 2.5537999999999998 * mParameters[10]) / (3.8115000000000001 + 1.5691999999999999 * mParameters[10]))); // dimensionless
        const double d_dt_chaste_interface_var_IK1__xk1 = (-var_chaste_interface__IK1__xk1 + var_IK1__xk1ss) / var_IK1__txk1; // 1 / millisecond
        const double var_IKb__xkb = 1 / (1.0 + exp(0.78953107960741553 - 0.054525627044711013 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_IKs__txs1 = 1 / (0.001292 * exp(-0.91304347826086951 - 0.0043478260869565218 * var_chaste_interface__membrane__v) + 0.00023259999999999999 * exp(2.7123595505617977 + 0.056179775280898875 * var_chaste_interface__membrane__v)) + var_IKs__txs1_max; // millisecond
        const double var_IKs__txs2 = 1 / (0.019300000000000001 * exp(-2.1464516129032258 - 0.032258064516129031 * var_chaste_interface__membrane__v) + 0.01 * exp(-2.5 + 0.050000000000000003 * var_chaste_interface__membrane__v)); // millisecond
        const double var_IKs__xs1ss = 1 / (1.0 + exp(-1.2987012987012987 - 0.11195700850873264 * var_chaste_interface__membrane__v)); // dimensionless
        const double d_dt_chaste_interface_var_IKs__xs1 = (-var_chaste_interface__IKs__xs1 + var_IKs__xs1ss) / var_IKs__txs1; // 1 / millisecond
        const double var_IKs__xs2ss = var_IKs__xs1ss; // dimensionless
        const double d_dt_chaste_interface_var_IKs__xs2 = (-var_chaste_interface__IKs__xs2 + var_IKs__xs2ss) / var_IKs__txs2; // 1 / millisecond
        const double var_INa__hss = 1 / (1.0 + exp((-var_INa__shift_INa_inact + var_INa__hssV1 + var_chaste_interface__membrane__v) / var_INa__hssV2)); // dimensionless
        const double var_INa__hssp = 1 / (1.0 + exp(14.640157739073281 + 0.16431153466973381 * var_chaste_interface__membrane__v - 0.16431153466973381 * var_INa__shift_INa_inact)); // dimensionless
        const double var_INa__jss = var_INa__hss; // dimensionless
        const double var_INa__mss = 1 / (1.0 + exp((-var_INa__mssV1 - var_chaste_interface__membrane__v) / var_INa__mssV2)); // dimensionless
        const double var_INa__thf = 1 / (6.149 * exp(0.025140601874691665 + 0.049333991119881598 * var_chaste_interface__membrane__v - 0.049333991119881598 * var_INa__shift_INa_inact) + 1.432e-5 * exp(-0.19029435163086714 + 0.15910898965791567 * var_INa__shift_INa_inact - 0.15910898965791567 * var_chaste_interface__membrane__v)); // millisecond
        const double d_dt_chaste_interface_var_INa__hf = (-var_chaste_interface__INa__hf + var_INa__hss) / var_INa__thf; // 1 / millisecond
        const double var_INa__ths = 1 / (0.0097940000000000006 * exp(-0.63992869875222813 + 0.035650623885918005 * var_INa__shift_INa_inact - 0.035650623885918005 * var_chaste_interface__membrane__v) + 0.33429999999999999 * exp(0.10112954465231205 + 0.017649135192375574 * var_chaste_interface__membrane__v - 0.017649135192375574 * var_INa__shift_INa_inact)); // millisecond
        const double d_dt_chaste_interface_var_INa__hs = (-var_chaste_interface__INa__hs + var_INa__hss) / var_INa__ths; // 1 / millisecond
        const double var_INa__thsp = 3.0 * var_INa__ths; // millisecond
        const double d_dt_chaste_interface_var_INa__hsp = (-var_chaste_interface__INa__hsp + var_INa__hssp) / var_INa__thsp; // 1 / millisecond
        const double var_INa__tj = 2.0379999999999998 + 1 / (0.30520000000000003 * exp(0.025854356306892066 + 0.02600780234070221 * var_chaste_interface__membrane__v - 0.02600780234070221 * var_INa__shift_INa_inact) + 0.021360000000000001 * exp(-12.148291269170388 + 0.12075836251660427 * var_INa__shift_INa_inact - 0.12075836251660427 * var_chaste_interface__membrane__v)); // millisecond
        const double d_dt_chaste_interface_var_INa__j = (-var_chaste_interface__INa__j + var_INa__jss) / var_INa__tj; // 1 / millisecond
        const double var_INa__tjp = 1.46 * var_INa__tj; // millisecond
        const double d_dt_chaste_interface_var_INa__jp = (-var_chaste_interface__INa__jp + var_INa__jss) / var_INa__tjp; // 1 / millisecond
        const double var_INa__tm = 1 / (var_INa__mtD1 * exp((var_INa__mtV1 + var_chaste_interface__membrane__v) / var_INa__mtV2) + var_INa__mtD2 * exp((-var_INa__mtV3 - var_chaste_interface__membrane__v) / var_INa__mtV4)); // millisecond
        const double d_dt_chaste_interface_var_INa__m = (-var_chaste_interface__INa__m + var_INa__mss) / var_INa__tm; // 1 / millisecond
        const double var_INaL__hLss = 1 / (1.0 + exp(11.700053418803417 + 0.13354700854700854 * var_chaste_interface__membrane__v)); // dimensionless
        const double d_dt_chaste_interface_var_INaL__hL = (-var_chaste_interface__INaL__hL + var_INaL__hLss) / var_INaL__thL; // 1 / millisecond
        const double var_INaL__hLssp = 1 / (1.0 + exp(12.528044871794872 + 0.13354700854700854 * var_chaste_interface__membrane__v)); // dimensionless
        const double d_dt_chaste_interface_var_INaL__hLp = (-var_chaste_interface__INaL__hLp + var_INaL__hLssp) / var_INaL__thLp; // 1 / millisecond
        const double var_INaL__mLss = 1 / (1.0 + exp(-8.1401975683890573 - 0.18996960486322187 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_INaL__tmL = var_INa__tm; // millisecond
        const double d_dt_chaste_interface_var_INaL__mL = (-var_chaste_interface__INaL__mL + var_INaL__mLss) / var_INaL__tmL; // 1 / millisecond
        const double var_INab__INab = ((fabs(var_chaste_interface__membrane__v) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-mParameters[11] + var_chaste_interface__intracellular_ions__nai * exp(9.9999999999999995e-8)) * mParameters[15] / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-mParameters[11] + var_chaste_interface__intracellular_ions__nai * exp(-9.9999999999999995e-8)) * mParameters[15] / (-1.0 + exp(-9.9999999999999995e-8))) + 2.671233870549826e-13 * (-mParameters[11] + var_chaste_interface__intracellular_ions__nai * exp(-9.9999999999999995e-8)) * mParameters[15] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.037435883507802616 * pow(var_chaste_interface__membrane__v, 2) * (-mParameters[11] + var_chaste_interface__intracellular_ions__nai * exp(0.037435883507802616 * var_chaste_interface__membrane__v)) * mParameters[15] / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__v)))); // microA_per_microF
        const double var_Ito__AiF = 1 / (1.0 + exp(-1.4126984126984128 + 0.0066137566137566143 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__AiS = 1.0 - var_Ito__AiF; // dimensionless
        const double var_Ito__ass = 1 / (1.0 + exp(0.96761133603238858 - 0.067476383265856948 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__assp = 1 / (1.0 + exp(1.6423751686909582 - 0.067476383265856948 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__delta_epi = ((var_environment__celltype == 1.0) ? (1.0 - 0.94999999999999996 / (1.0 + exp(14.0 + 0.20000000000000001 * var_chaste_interface__membrane__v))) : (1.0)); // dimensionless
        const double var_Ito__dti_develop = 1.3540000000000001 + 0.0001 / (exp(56.77808727948004 - 4.6425255338904359 * var_chaste_interface__membrane__v) + exp(-10.534927627438641 + 0.062932662051604776 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__dti_recover = 1.0 - 0.5 / (1.0 + exp(3.5 + 0.050000000000000003 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__i = var_Ito__AiF * var_chaste_interface__Ito__iF + var_Ito__AiS * var_chaste_interface__Ito__iS; // dimensionless
        const double var_Ito__ip = var_Ito__AiF * var_chaste_interface__Ito__iFp + var_Ito__AiS * var_chaste_interface__Ito__iSp; // dimensionless
        const double var_Ito__iss = 1 / (1.0 + exp(7.6939240063036234 + 0.17510068289266328 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__ta = 1.0515000000000001 / (3.5 / (1.0 + exp(3.403513787634354 + 0.034035137876343539 * var_chaste_interface__membrane__v)) + 0.82719827942757873 / (1.0 + exp(0.62658348478969694 - 0.034035137876343539 * var_chaste_interface__membrane__v))); // millisecond
        const double d_dt_chaste_interface_var_Ito__a = (-var_chaste_interface__Ito__a + var_Ito__ass) / var_Ito__ta; // 1 / millisecond
        const double d_dt_chaste_interface_var_Ito__ap = (-var_chaste_interface__Ito__ap + var_Ito__assp) / var_Ito__ta; // 1 / millisecond
        const double var_Ito__tiF_b = 4.5620000000000003 + 1 / (0.39329999999999998 * exp(-1.0 - 0.01 * var_chaste_interface__membrane__v) + 0.08004 * exp(3.0138637733574445 + 0.060277275467148887 * var_chaste_interface__membrane__v)); // millisecond
        const double var_Ito__tiF = var_Ito__delta_epi * var_Ito__tiF_b; // millisecond
        const double d_dt_chaste_interface_var_Ito__iF = (-var_chaste_interface__Ito__iF + var_Ito__iss) / var_Ito__tiF; // 1 / millisecond
        const double var_Ito__tiFp = var_Ito__dti_develop * var_Ito__dti_recover * var_Ito__tiF; // millisecond
        const double d_dt_chaste_interface_var_Ito__iFp = (-var_chaste_interface__Ito__iFp + var_Ito__iss) / var_Ito__tiFp; // 1 / millisecond
        const double var_Ito__tiS_b = 23.620000000000001 + 1 / (1.7800000000000001e-8 * exp(14.123035029087756 + 0.12377769525931426 * var_chaste_interface__membrane__v) + 0.0014159999999999999 * exp(-1.6345469940728197 - 0.016934801016088061 * var_chaste_interface__membrane__v)); // millisecond
        const double var_Ito__tiS = var_Ito__delta_epi * var_Ito__tiS_b; // millisecond
        const double d_dt_chaste_interface_var_Ito__iS = (-var_chaste_interface__Ito__iS + var_Ito__iss) / var_Ito__tiS; // 1 / millisecond
        const double var_Ito__tiSp = var_Ito__dti_develop * var_Ito__dti_recover * var_Ito__tiS; // millisecond
        const double d_dt_chaste_interface_var_Ito__iSp = (-var_chaste_interface__Ito__iSp + var_Ito__iss) / var_Ito__tiSp; // 1 / millisecond
        const double var_physical_constants__F = 96485.0; // coulomb_per_mole
        const double d_dt_chaste_interface_var_intracellular_ions__kss = -var_diff__JdiffK - var_ICaL__ICaK * var_cell_geometry__Acap * var_intracellular_ions__cm / (var_cell_geometry__vss * var_physical_constants__F); // millimolar / millisecond
        const double var_physical_constants__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_physical_constants__T = 310.0; // kelvin
        const double var_INaCa_i__hca = exp(var_INaCa_i__qca * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // dimensionless
        const double var_INaCa_i__hna = exp(var_INaCa_i__qna * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // dimensionless
        const double var_INaCa_i__h1_i = 1.0 + (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h1_ss = 1.0 + (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h2_i = var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nai / (var_INaCa_i__h1_i * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h2_ss = var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nass / (var_INaCa_i__h1_ss * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h3_i = 1 / var_INaCa_i__h1_i; // dimensionless
        const double var_INaCa_i__h3_ss = 1 / var_INaCa_i__h1_ss; // dimensionless
        const double var_INaCa_i__h7_i = 1.0 + (1.0 + 1 / var_INaCa_i__hna) * mParameters[11] / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h7_ss = 1.0 + (1.0 + 1 / var_INaCa_i__hna) * mParameters[11] / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h8_i = mParameters[11] / (var_INaCa_i__h7_i * var_INaCa_i__hna * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h8_ss = mParameters[11] / (var_INaCa_i__h7_ss * var_INaCa_i__hna * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h9_i = 1 / var_INaCa_i__h7_i; // dimensionless
        const double var_INaCa_i__h9_ss = 1 / var_INaCa_i__h7_ss; // dimensionless
        const double var_INaCa_i__k3p_i = var_INaCa_i__h9_i * var_INaCa_i__wca; // dimensionless
        const double var_INaCa_i__k3p_ss = var_INaCa_i__h9_ss * var_INaCa_i__wca; // dimensionless
        const double var_INaCa_i__k3pp_i = var_INaCa_i__h8_i * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k3_i = var_INaCa_i__k3p_i + var_INaCa_i__k3pp_i; // dimensionless
        const double var_INaCa_i__k3pp_ss = var_INaCa_i__h8_ss * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k3_ss = var_INaCa_i__k3p_ss + var_INaCa_i__k3pp_ss; // dimensionless
        const double var_INaCa_i__k4p_i = var_INaCa_i__h3_i * var_INaCa_i__wca / var_INaCa_i__hca; // dimensionless
        const double var_INaCa_i__k4p_ss = var_INaCa_i__h3_ss * var_INaCa_i__wca / var_INaCa_i__hca; // dimensionless
        const double var_INaCa_i__k4pp_i = var_INaCa_i__h2_i * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k4_i = var_INaCa_i__k4p_i + var_INaCa_i__k4pp_i; // dimensionless
        const double var_INaCa_i__k4pp_ss = var_INaCa_i__h2_ss * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k4_ss = var_INaCa_i__k4p_ss + var_INaCa_i__k4pp_ss; // dimensionless
        const double var_INaCa_i__k7_i = var_INaCa_i__h2_i * var_INaCa_i__h5_i * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k7_ss = var_INaCa_i__h2_ss * var_INaCa_i__h5_ss * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k8_i = var_INaCa_i__h11_i * var_INaCa_i__h8_i * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k8_ss = var_INaCa_i__h11_ss * var_INaCa_i__h8_ss * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__x1_i = (var_INaCa_i__k2_i + var_INaCa_i__k3_i) * var_INaCa_i__k5_i * var_INaCa_i__k7_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k2_i * var_INaCa_i__k4_i; // dimensionless
        const double var_INaCa_i__x1_ss = (var_INaCa_i__k2_ss + var_INaCa_i__k3_ss) * var_INaCa_i__k5_ss * var_INaCa_i__k7_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k2_ss * var_INaCa_i__k4_ss; // dimensionless
        const double var_INaCa_i__x2_i = (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k4_i * var_INaCa_i__k6_i + (var_INaCa_i__k4_i + var_INaCa_i__k5_i) * var_INaCa_i__k1_i * var_INaCa_i__k7_i; // dimensionless
        const double var_INaCa_i__x2_ss = (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k4_ss * var_INaCa_i__k6_ss + (var_INaCa_i__k4_ss + var_INaCa_i__k5_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k7_ss; // dimensionless
        const double var_INaCa_i__x3_i = (var_INaCa_i__k2_i + var_INaCa_i__k3_i) * var_INaCa_i__k6_i * var_INaCa_i__k8_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k1_i * var_INaCa_i__k3_i; // dimensionless
        const double var_INaCa_i__x3_ss = (var_INaCa_i__k2_ss + var_INaCa_i__k3_ss) * var_INaCa_i__k6_ss * var_INaCa_i__k8_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k3_ss; // dimensionless
        const double var_INaCa_i__x4_i = (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k3_i * var_INaCa_i__k5_i + (var_INaCa_i__k4_i + var_INaCa_i__k5_i) * var_INaCa_i__k2_i * var_INaCa_i__k8_i; // dimensionless
        const double var_INaCa_i__E1_i = var_INaCa_i__x1_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E2_i = var_INaCa_i__x2_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E3_i = var_INaCa_i__x3_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E4_i = var_INaCa_i__x4_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__JncxCa_i = var_INaCa_i__E2_i * var_INaCa_i__k2_i - var_INaCa_i__E1_i * var_INaCa_i__k1_i; // millimolar_per_millisecond
        const double var_INaCa_i__JncxNa_i = var_INaCa_i__E3_i * var_INaCa_i__k4pp_i - var_INaCa_i__E2_i * var_INaCa_i__k3pp_i + 3.0 * var_INaCa_i__E4_i * var_INaCa_i__k7_i - 3.0 * var_INaCa_i__E1_i * var_INaCa_i__k8_i; // millimolar_per_millisecond
        const double var_INaCa_i__x4_ss = (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k3_ss * var_INaCa_i__k5_ss + (var_INaCa_i__k4_ss + var_INaCa_i__k5_ss) * var_INaCa_i__k2_ss * var_INaCa_i__k8_ss; // dimensionless
        const double var_INaCa_i__E1_ss = var_INaCa_i__x1_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E2_ss = var_INaCa_i__x2_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E3_ss = var_INaCa_i__x3_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E4_ss = var_INaCa_i__x4_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__JncxCa_ss = var_INaCa_i__E2_ss * var_INaCa_i__k2_ss - var_INaCa_i__E1_ss * var_INaCa_i__k1_ss; // millimolar_per_millisecond
        const double var_INaCa_i__JncxNa_ss = var_INaCa_i__E3_ss * var_INaCa_i__k4pp_ss - var_INaCa_i__E2_ss * var_INaCa_i__k3pp_ss + 3.0 * var_INaCa_i__E4_ss * var_INaCa_i__k7_ss - 3.0 * var_INaCa_i__E1_ss * var_INaCa_i__k8_ss; // millimolar_per_millisecond
        const double var_INaK__Knai = var_INaK__Knai0 * exp(0.33333333333333331 * var_INaK__delta * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // millimolar
        const double var_INaK__Knao = var_INaK__Knao0 * exp(0.33333333333333331 * (1.0 - var_INaK__delta) * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // millimolar
        const double var_INaK__a1 = pow(var_chaste_interface__intracellular_ions__nai, 3) * var_INaK__k1p / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__ki / var_INaK__Kki), 2) + pow((1.0 + var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3)) * pow(var_INaK__Knai, 3)); // dimensionless
        const double var_INaK__a3 = pow(mParameters[10], 2) * var_INaK__k3p / ((-1.0 + pow((1.0 + mParameters[10] / var_INaK__Kko), 2) + pow((1.0 + mParameters[11] / var_INaK__Knao), 3)) * pow(var_INaK__Kko, 2)); // dimensionless
        const double var_INaK__b2 = pow(mParameters[11], 3) * var_INaK__k2m / ((-1.0 + pow((1.0 + mParameters[10] / var_INaK__Kko), 2) + pow((1.0 + mParameters[11] / var_INaK__Knao), 3)) * pow(var_INaK__Knao, 3)); // dimensionless
        const double var_INaK__b4 = pow(var_chaste_interface__intracellular_ions__ki, 2) * var_INaK__k4m / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__ki / var_INaK__Kki), 2) + pow((1.0 + var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3)) * pow(var_INaK__Kki, 2)); // dimensionless
        const double var_INaK__x1 = var_INaK__a1 * var_INaK__a2 * var_INaK__a4 + var_INaK__a1 * var_INaK__a2 * var_INaK__b3 + var_INaK__a2 * var_INaK__b3 * var_INaK__b4 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__x2 = var_INaK__a1 * var_INaK__a2 * var_INaK__a3 + var_INaK__a2 * var_INaK__a3 * var_INaK__b4 + var_INaK__a3 * var_INaK__b1 * var_INaK__b4 + var_INaK__b1 * var_INaK__b2 * var_INaK__b4; // dimensionless
        const double var_INaK__x3 = var_INaK__a2 * var_INaK__a3 * var_INaK__a4 + var_INaK__a3 * var_INaK__a4 * var_INaK__b1 + var_INaK__a4 * var_INaK__b1 * var_INaK__b2 + var_INaK__b1 * var_INaK__b2 * var_INaK__b3; // dimensionless
        const double var_INaK__x4 = var_INaK__a1 * var_INaK__a3 * var_INaK__a4 + var_INaK__a1 * var_INaK__a4 * var_INaK__b2 + var_INaK__a1 * var_INaK__b2 * var_INaK__b3 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__E1 = var_INaK__x1 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E2 = var_INaK__x2 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E3 = var_INaK__x3 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E4 = var_INaK__x4 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__JnakK = 2.0 * var_INaK__E4 * var_INaK__b1 - 2.0 * var_INaK__E3 * var_INaK__a1; // millimolar_per_millisecond
        const double var_INaK__JnakNa = 3.0 * var_INaK__E1 * var_INaK__a3 - 3.0 * var_INaK__E2 * var_INaK__b3; // millimolar_per_millisecond
        const double var_physical_constants__zca = 2.0; // dimensionless
        const double var_physical_constants__zk = 1.0; // dimensionless
        const double var_physical_constants__zna = 1.0; // dimensionless
        const double var_INaCa_i__INaCa_i = 0.80000000000000004 * (var_INaCa_i__JncxCa_i * var_physical_constants__zca + var_INaCa_i__JncxNa_i * var_physical_constants__zna) * var_INaCa_i__Gncx * var_INaCa_i__allo_i; // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ions__cai = (var_cell_geometry__vss * var_diff__Jdiff / var_cell_geometry__vmyo - var_SERCA__Jup * var_cell_geometry__vnsr / var_cell_geometry__vmyo + 0.5 * (-var_ICab__ICab - var_IpCa__IpCa + 2.0 * var_INaCa_i__INaCa_i) * var_cell_geometry__Acap * var_intracellular_ions__cm / (var_cell_geometry__vmyo * var_physical_constants__F)) * var_intracellular_ions__Bcai; // millimolar / millisecond
        const double var_INaCa_i__INaCa_ss = 0.20000000000000001 * (var_INaCa_i__JncxCa_ss * var_physical_constants__zca + var_INaCa_i__JncxNa_ss * var_physical_constants__zna) * var_INaCa_i__Gncx * var_INaCa_i__allo_ss; // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ions__nass = -var_diff__JdiffNa + (-var_ICaL__ICaNa - 3.0 * var_INaCa_i__INaCa_ss) * var_cell_geometry__Acap * var_intracellular_ions__cm / (var_cell_geometry__vss * var_physical_constants__F); // millimolar / millisecond
        const double var_INaK__INaK = (var_INaK__JnakK * var_physical_constants__zk + var_INaK__JnakNa * var_physical_constants__zna) * var_INaK__Pnak; // microA_per_microF
        const double var_reversal_potentials__EK = var_physical_constants__R * var_physical_constants__T * log(mParameters[10] / var_chaste_interface__intracellular_ions__ki) / var_physical_constants__F; // millivolt
        const double var_IK1__IK1 = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IK1__GK1_calc * var_IK1__rk1 * var_chaste_interface__IK1__xk1; // microA_per_microF
        const double var_IKb__IKb = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IKb__GKb * var_IKb__xkb; // microA_per_microF
        const double var_IKr__IKr = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IKr__GKr_calc * var_chaste_interface__IKr__O; // microA_per_microF
        const double var_Ito__Ito = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * ((1.0 - var_Ito__fItop) * var_chaste_interface__Ito__a * var_Ito__i + var_chaste_interface__Ito__ap * var_Ito__fItop * var_Ito__ip) * var_Ito__Gto; // microA_per_microF
        const double var_reversal_potentials__ENa = var_physical_constants__R * var_physical_constants__T * log(mParameters[11] / var_chaste_interface__intracellular_ions__nai) / var_physical_constants__F; // millivolt
        const double var_INa__INa = pow(var_chaste_interface__INa__m, 3) * (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - var_INa__fINap) * var_INa__h * var_chaste_interface__INa__j + var_INa__fINap * var_INa__hp * var_chaste_interface__INa__jp) * mParameters[17]; // microA_per_microF
        const double var_INaL__INaL = (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - var_INaL__fINaLp) * var_chaste_interface__INaL__hL + var_INaL__fINaLp * var_chaste_interface__INaL__hLp) * var_INaL__GNaL * var_chaste_interface__INaL__mL; // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ions__nai = var_cell_geometry__vss * var_diff__JdiffNa / var_cell_geometry__vmyo + (-var_INa__INa - var_INaL__INaL - var_INab__INab - 3.0 * var_INaCa_i__INaCa_i - 3.0 * var_INaK__INaK) * var_cell_geometry__Acap * var_intracellular_ions__cm / (var_cell_geometry__vmyo * var_physical_constants__F); // millimolar / millisecond
        const double var_reversal_potentials__PKNa = 0.018329999999999999; // dimensionless
        const double var_reversal_potentials__EKs = var_physical_constants__R * var_physical_constants__T * log((mParameters[11] * var_reversal_potentials__PKNa + mParameters[10]) / (var_chaste_interface__intracellular_ions__nai * var_reversal_potentials__PKNa + var_chaste_interface__intracellular_ions__ki)) / var_physical_constants__F; // millivolt
        const double var_IKs__IKs = (-var_reversal_potentials__EKs + var_chaste_interface__membrane__v) * var_IKs__GKs_calc * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2; // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ions__ki = var_cell_geometry__vss * var_diff__JdiffK / var_cell_geometry__vmyo + (-var_IK1__IK1 - var_IKb__IKb - var_IKr__IKr - var_IKs__IKs - var_Ito__Ito - var_membrane__Istim + 2.0 * var_INaK__INaK) * var_cell_geometry__Acap * var_intracellular_ions__cm / (var_cell_geometry__vmyo * var_physical_constants__F); // millimolar / millisecond
        const double var_ryr__bt = 4.75; // millisecond
        const double var_ryr__a_rel = 0.5 * var_ryr__bt; // millisecond
        const double var_ryr__Jrel_inf_temp = -var_ICaL__ICaL * var_ryr__a_rel / (1.0 + 25.62890625 / pow(var_chaste_interface__intracellular_ions__cajsr, 8)); // dimensionless
        const double var_ryr__Jrel_inf = ((var_environment__celltype == 2.0) ? (1.7 * var_ryr__Jrel_inf_temp) : (var_ryr__Jrel_inf_temp)); // dimensionless
        const double var_ryr__btp = 1.25 * var_ryr__bt; // millisecond
        const double var_ryr__a_relp = 0.5 * var_ryr__btp; // millisecond
        const double var_ryr__Jrel_temp = -var_ICaL__ICaL * var_ryr__a_relp / (1.0 + 25.62890625 / pow(var_chaste_interface__intracellular_ions__cajsr, 8)); // dimensionless
        const double var_ryr__Jrel_infp = ((var_environment__celltype == 2.0) ? (1.7 * var_ryr__Jrel_temp) : (var_ryr__Jrel_temp)); // dimensionless
        const double var_ryr__fJrelp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_ryr__Jrel = ((1.0 - var_ryr__fJrelp) * var_chaste_interface__ryr__Jrelnp + var_chaste_interface__ryr__Jrelp * var_ryr__fJrelp) * mParameters[7]; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_intracellular_ions__cass = (-var_diff__Jdiff + var_cell_geometry__vjsr * var_ryr__Jrel / var_cell_geometry__vss + 0.5 * (-var_ICaL__ICaL + 2.0 * var_INaCa_i__INaCa_ss) * var_cell_geometry__Acap * var_intracellular_ions__cm / (var_cell_geometry__vss * var_physical_constants__F)) * var_intracellular_ions__Bcass; // millimolar / millisecond
        const double var_ryr__tau_rel_temp = var_ryr__bt / (1.0 + 0.0123 / var_chaste_interface__intracellular_ions__cajsr); // millisecond
        const double var_ryr__tau_rel = ((var_ryr__tau_rel_temp < 0.001) ? (0.001) : (var_ryr__tau_rel_temp)); // millisecond
        const double d_dt_chaste_interface_var_ryr__Jrelnp = (-var_chaste_interface__ryr__Jrelnp + var_ryr__Jrel_inf) / var_ryr__tau_rel; // 1 / millisecond
        const double var_ryr__tau_relp_temp = var_ryr__btp / (1.0 + 0.0123 / var_chaste_interface__intracellular_ions__cajsr); // millisecond
        const double var_ryr__tau_relp = ((var_ryr__tau_relp_temp < 0.001) ? (0.001) : (var_ryr__tau_relp_temp)); // millisecond
        const double d_dt_chaste_interface_var_ryr__Jrelp = (-var_chaste_interface__ryr__Jrelp + var_ryr__Jrel_infp) / var_ryr__tau_relp; // 1 / millisecond
        const double var_trans_flux__Jtr = 0.01 * var_chaste_interface__intracellular_ions__cansr - 0.01 * var_chaste_interface__intracellular_ions__cajsr; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_intracellular_ions__cajsr = (-var_ryr__Jrel + var_trans_flux__Jtr) * var_intracellular_ions__Bcajsr; // millimolar / millisecond
        const double d_dt_chaste_interface_var_intracellular_ions__cansr = -var_cell_geometry__vjsr * var_trans_flux__Jtr / var_cell_geometry__vnsr + var_SERCA__Jup; // millimolar / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_membrane__v = 0.0;
        }
        else
        {
            d_dt_chaste_interface_var_membrane__v = -var_ICaL__ICaK - var_ICaL__ICaL - var_ICaL__ICaNa - var_ICab__ICab - var_IK1__IK1 - var_IKb__IKb - var_IKr__IKr - var_IKs__IKs - var_INa__INa - var_INaCa_i__INaCa_i - var_INaCa_i__INaCa_ss - var_INaK__INaK - var_INaL__INaL - var_INab__INab - var_IpCa__IpCa - var_Ito__Ito - var_membrane__Istim; // millivolt / millisecond
        }
        
        mEvalF[0] = d_dt_chaste_interface_var_membrane__v;
        mEvalF[1] = d_dt_chaste_interface_var_intracellular_ions__cai;
        mEvalF[2] = d_dt_chaste_interface_var_CaMK__CaMKt;
        mEvalF[3] = d_dt_chaste_interface_var_intracellular_ions__nai;
        mEvalF[4] = d_dt_chaste_interface_var_intracellular_ions__nass;
        mEvalF[5] = d_dt_chaste_interface_var_intracellular_ions__ki;
        mEvalF[6] = d_dt_chaste_interface_var_intracellular_ions__kss;
        mEvalF[7] = d_dt_chaste_interface_var_intracellular_ions__cass;
        mEvalF[8] = d_dt_chaste_interface_var_intracellular_ions__cansr;
        mEvalF[9] = d_dt_chaste_interface_var_intracellular_ions__cajsr;
        mEvalF[10] = d_dt_chaste_interface_var_INa__m;
        mEvalF[11] = d_dt_chaste_interface_var_INa__hf;
        mEvalF[12] = d_dt_chaste_interface_var_INa__hs;
        mEvalF[13] = d_dt_chaste_interface_var_INa__j;
        mEvalF[14] = d_dt_chaste_interface_var_INa__hsp;
        mEvalF[15] = d_dt_chaste_interface_var_INa__jp;
        mEvalF[16] = d_dt_chaste_interface_var_INaL__mL;
        mEvalF[17] = d_dt_chaste_interface_var_INaL__hL;
        mEvalF[18] = d_dt_chaste_interface_var_INaL__hLp;
        mEvalF[19] = d_dt_chaste_interface_var_Ito__a;
        mEvalF[20] = d_dt_chaste_interface_var_Ito__iF;
        mEvalF[21] = d_dt_chaste_interface_var_Ito__iS;
        mEvalF[22] = d_dt_chaste_interface_var_Ito__ap;
        mEvalF[23] = d_dt_chaste_interface_var_Ito__iFp;
        mEvalF[24] = d_dt_chaste_interface_var_Ito__iSp;
        mEvalF[25] = d_dt_chaste_interface_var_ICaL__d;
        mEvalF[26] = d_dt_chaste_interface_var_ICaL__ff;
        mEvalF[27] = d_dt_chaste_interface_var_ICaL__fs;
        mEvalF[28] = d_dt_chaste_interface_var_ICaL__fcaf;
        mEvalF[29] = d_dt_chaste_interface_var_ICaL__fcas;
        mEvalF[30] = d_dt_chaste_interface_var_ICaL__jca;
        mEvalF[31] = d_dt_chaste_interface_var_ICaL__ffp;
        mEvalF[32] = d_dt_chaste_interface_var_ICaL__fcafp;
        mEvalF[33] = d_dt_chaste_interface_var_ICaL__nca;
        mEvalF[34] = d_dt_chaste_interface_var_IKr__IC1;
        mEvalF[35] = d_dt_chaste_interface_var_IKr__IC2;
        mEvalF[36] = d_dt_chaste_interface_var_IKr__C1;
        mEvalF[37] = d_dt_chaste_interface_var_IKr__C2;
        mEvalF[38] = d_dt_chaste_interface_var_IKr__O;
        mEvalF[39] = d_dt_chaste_interface_var_IKr__IO;
        mEvalF[40] = d_dt_chaste_interface_var_IKr__IObound;
        mEvalF[41] = d_dt_chaste_interface_var_IKr__Obound;
        mEvalF[42] = d_dt_chaste_interface_var_IKr__Cbound;
        mEvalF[43] = d_dt_chaste_interface_var_IKs__xs1;
        mEvalF[44] = d_dt_chaste_interface_var_IKs__xs2;
        mEvalF[45] = d_dt_chaste_interface_var_IK1__xk1;
        mEvalF[46] = d_dt_chaste_interface_var_ryr__Jrelnp;
        mEvalF[47] = d_dt_chaste_interface_var_ryr__Jrelp;

        
        mPartialF[0] = EvaluatePartialDerivative0(var_chaste_interface__environment__time, rY, delta);
        mPartialF[1] = EvaluatePartialDerivative1(var_chaste_interface__environment__time, rY, delta);
        mPartialF[2] = EvaluatePartialDerivative2(var_chaste_interface__environment__time, rY, delta);
        mPartialF[3] = EvaluatePartialDerivative3(var_chaste_interface__environment__time, rY, delta);
        mPartialF[4] = EvaluatePartialDerivative4(var_chaste_interface__environment__time, rY, delta);
        mPartialF[5] = EvaluatePartialDerivative5(var_chaste_interface__environment__time, rY, delta);
        mPartialF[6] = EvaluatePartialDerivative6(var_chaste_interface__environment__time, rY, delta);
        mPartialF[7] = EvaluatePartialDerivative7(var_chaste_interface__environment__time, rY, delta);
        mPartialF[8] = EvaluatePartialDerivative8(var_chaste_interface__environment__time, rY, delta);
        mPartialF[9] = EvaluatePartialDerivative9(var_chaste_interface__environment__time, rY, delta);
        mPartialF[10] = EvaluatePartialDerivative10(var_chaste_interface__environment__time, rY, delta);
        mPartialF[11] = EvaluatePartialDerivative11(var_chaste_interface__environment__time, rY, delta);
        mPartialF[12] = EvaluatePartialDerivative12(var_chaste_interface__environment__time, rY, delta);
        mPartialF[13] = EvaluatePartialDerivative13(var_chaste_interface__environment__time, rY, delta);
        mPartialF[14] = EvaluatePartialDerivative14(var_chaste_interface__environment__time, rY, delta);
        mPartialF[15] = EvaluatePartialDerivative15(var_chaste_interface__environment__time, rY, delta);
        mPartialF[16] = EvaluatePartialDerivative16(var_chaste_interface__environment__time, rY, delta);
        mPartialF[17] = EvaluatePartialDerivative17(var_chaste_interface__environment__time, rY, delta);
        mPartialF[18] = EvaluatePartialDerivative18(var_chaste_interface__environment__time, rY, delta);
        mPartialF[19] = EvaluatePartialDerivative19(var_chaste_interface__environment__time, rY, delta);
        mPartialF[20] = EvaluatePartialDerivative20(var_chaste_interface__environment__time, rY, delta);
        mPartialF[21] = EvaluatePartialDerivative21(var_chaste_interface__environment__time, rY, delta);
        mPartialF[22] = EvaluatePartialDerivative22(var_chaste_interface__environment__time, rY, delta);
        mPartialF[23] = EvaluatePartialDerivative23(var_chaste_interface__environment__time, rY, delta);
        mPartialF[24] = EvaluatePartialDerivative24(var_chaste_interface__environment__time, rY, delta);
        mPartialF[25] = EvaluatePartialDerivative25(var_chaste_interface__environment__time, rY, delta);
        mPartialF[26] = EvaluatePartialDerivative26(var_chaste_interface__environment__time, rY, delta);
        mPartialF[27] = EvaluatePartialDerivative27(var_chaste_interface__environment__time, rY, delta);
        mPartialF[28] = EvaluatePartialDerivative28(var_chaste_interface__environment__time, rY, delta);
        mPartialF[29] = EvaluatePartialDerivative29(var_chaste_interface__environment__time, rY, delta);
        mPartialF[30] = EvaluatePartialDerivative30(var_chaste_interface__environment__time, rY, delta);
        mPartialF[31] = EvaluatePartialDerivative31(var_chaste_interface__environment__time, rY, delta);
        mPartialF[32] = EvaluatePartialDerivative32(var_chaste_interface__environment__time, rY, delta);
        mPartialF[33] = EvaluatePartialDerivative33(var_chaste_interface__environment__time, rY, delta);
        mPartialF[34] = EvaluatePartialDerivative34(var_chaste_interface__environment__time, rY, delta);
        mPartialF[35] = EvaluatePartialDerivative35(var_chaste_interface__environment__time, rY, delta);
        mPartialF[36] = EvaluatePartialDerivative36(var_chaste_interface__environment__time, rY, delta);
        mPartialF[37] = EvaluatePartialDerivative37(var_chaste_interface__environment__time, rY, delta);
        mPartialF[38] = EvaluatePartialDerivative38(var_chaste_interface__environment__time, rY, delta);
        mPartialF[39] = EvaluatePartialDerivative39(var_chaste_interface__environment__time, rY, delta);
        mPartialF[40] = EvaluatePartialDerivative40(var_chaste_interface__environment__time, rY, delta);
        mPartialF[41] = EvaluatePartialDerivative41(var_chaste_interface__environment__time, rY, delta);
        mPartialF[42] = EvaluatePartialDerivative42(var_chaste_interface__environment__time, rY, delta);
        mPartialF[43] = EvaluatePartialDerivative43(var_chaste_interface__environment__time, rY, delta);
        mPartialF[44] = EvaluatePartialDerivative44(var_chaste_interface__environment__time, rY, delta);
        mPartialF[45] = EvaluatePartialDerivative45(var_chaste_interface__environment__time, rY, delta);
        mPartialF[46] = EvaluatePartialDerivative46(var_chaste_interface__environment__time, rY, delta);
        mPartialF[47] = EvaluatePartialDerivative47(var_chaste_interface__environment__time, rY, delta);
        for (unsigned var=0; var<size; var++)
        {
            if (var == 0) continue;
            if (fabs(mPartialF[var]) < delta)
            {
                rY[var] = mYInit[var] + 0.5*mDt*mEvalF[var];
            }
            else
            {
                rY[var] = mYInit[var] + (mEvalF[var]/mPartialF[var])*(exp(mPartialF[var]*0.5*mDt)-1.0);
            }
            
        }
        
        
        y_save = rY[1];
        rY[1] = mYInit[1];
        mEvalF[1] = EvaluateYDerivative1(var_chaste_interface__environment__time, rY);
        mPartialF[1] = EvaluatePartialDerivative1(var_chaste_interface__environment__time, rY, delta);
        rY[1] = y_save;
        
        
        y_save = rY[2];
        rY[2] = mYInit[2];
        mEvalF[2] = EvaluateYDerivative2(var_chaste_interface__environment__time, rY);
        mPartialF[2] = EvaluatePartialDerivative2(var_chaste_interface__environment__time, rY, delta);
        rY[2] = y_save;
        
        
        y_save = rY[3];
        rY[3] = mYInit[3];
        mEvalF[3] = EvaluateYDerivative3(var_chaste_interface__environment__time, rY);
        mPartialF[3] = EvaluatePartialDerivative3(var_chaste_interface__environment__time, rY, delta);
        rY[3] = y_save;
        
        
        y_save = rY[4];
        rY[4] = mYInit[4];
        mEvalF[4] = EvaluateYDerivative4(var_chaste_interface__environment__time, rY);
        mPartialF[4] = EvaluatePartialDerivative4(var_chaste_interface__environment__time, rY, delta);
        rY[4] = y_save;
        
        
        y_save = rY[5];
        rY[5] = mYInit[5];
        mEvalF[5] = EvaluateYDerivative5(var_chaste_interface__environment__time, rY);
        mPartialF[5] = EvaluatePartialDerivative5(var_chaste_interface__environment__time, rY, delta);
        rY[5] = y_save;
        
        
        y_save = rY[6];
        rY[6] = mYInit[6];
        mEvalF[6] = EvaluateYDerivative6(var_chaste_interface__environment__time, rY);
        mPartialF[6] = EvaluatePartialDerivative6(var_chaste_interface__environment__time, rY, delta);
        rY[6] = y_save;
        
        
        y_save = rY[7];
        rY[7] = mYInit[7];
        mEvalF[7] = EvaluateYDerivative7(var_chaste_interface__environment__time, rY);
        mPartialF[7] = EvaluatePartialDerivative7(var_chaste_interface__environment__time, rY, delta);
        rY[7] = y_save;
        
        
        y_save = rY[8];
        rY[8] = mYInit[8];
        mEvalF[8] = EvaluateYDerivative8(var_chaste_interface__environment__time, rY);
        mPartialF[8] = EvaluatePartialDerivative8(var_chaste_interface__environment__time, rY, delta);
        rY[8] = y_save;
        
        
        y_save = rY[9];
        rY[9] = mYInit[9];
        mEvalF[9] = EvaluateYDerivative9(var_chaste_interface__environment__time, rY);
        mPartialF[9] = EvaluatePartialDerivative9(var_chaste_interface__environment__time, rY, delta);
        rY[9] = y_save;
        
        
        y_save = rY[10];
        rY[10] = mYInit[10];
        mEvalF[10] = EvaluateYDerivative10(var_chaste_interface__environment__time, rY);
        mPartialF[10] = EvaluatePartialDerivative10(var_chaste_interface__environment__time, rY, delta);
        rY[10] = y_save;
        
        
        y_save = rY[11];
        rY[11] = mYInit[11];
        mEvalF[11] = EvaluateYDerivative11(var_chaste_interface__environment__time, rY);
        mPartialF[11] = EvaluatePartialDerivative11(var_chaste_interface__environment__time, rY, delta);
        rY[11] = y_save;
        
        
        y_save = rY[12];
        rY[12] = mYInit[12];
        mEvalF[12] = EvaluateYDerivative12(var_chaste_interface__environment__time, rY);
        mPartialF[12] = EvaluatePartialDerivative12(var_chaste_interface__environment__time, rY, delta);
        rY[12] = y_save;
        
        
        y_save = rY[13];
        rY[13] = mYInit[13];
        mEvalF[13] = EvaluateYDerivative13(var_chaste_interface__environment__time, rY);
        mPartialF[13] = EvaluatePartialDerivative13(var_chaste_interface__environment__time, rY, delta);
        rY[13] = y_save;
        
        
        y_save = rY[14];
        rY[14] = mYInit[14];
        mEvalF[14] = EvaluateYDerivative14(var_chaste_interface__environment__time, rY);
        mPartialF[14] = EvaluatePartialDerivative14(var_chaste_interface__environment__time, rY, delta);
        rY[14] = y_save;
        
        
        y_save = rY[15];
        rY[15] = mYInit[15];
        mEvalF[15] = EvaluateYDerivative15(var_chaste_interface__environment__time, rY);
        mPartialF[15] = EvaluatePartialDerivative15(var_chaste_interface__environment__time, rY, delta);
        rY[15] = y_save;
        
        
        y_save = rY[16];
        rY[16] = mYInit[16];
        mEvalF[16] = EvaluateYDerivative16(var_chaste_interface__environment__time, rY);
        mPartialF[16] = EvaluatePartialDerivative16(var_chaste_interface__environment__time, rY, delta);
        rY[16] = y_save;
        
        
        y_save = rY[17];
        rY[17] = mYInit[17];
        mEvalF[17] = EvaluateYDerivative17(var_chaste_interface__environment__time, rY);
        mPartialF[17] = EvaluatePartialDerivative17(var_chaste_interface__environment__time, rY, delta);
        rY[17] = y_save;
        
        
        y_save = rY[18];
        rY[18] = mYInit[18];
        mEvalF[18] = EvaluateYDerivative18(var_chaste_interface__environment__time, rY);
        mPartialF[18] = EvaluatePartialDerivative18(var_chaste_interface__environment__time, rY, delta);
        rY[18] = y_save;
        
        
        y_save = rY[19];
        rY[19] = mYInit[19];
        mEvalF[19] = EvaluateYDerivative19(var_chaste_interface__environment__time, rY);
        mPartialF[19] = EvaluatePartialDerivative19(var_chaste_interface__environment__time, rY, delta);
        rY[19] = y_save;
        
        
        y_save = rY[20];
        rY[20] = mYInit[20];
        mEvalF[20] = EvaluateYDerivative20(var_chaste_interface__environment__time, rY);
        mPartialF[20] = EvaluatePartialDerivative20(var_chaste_interface__environment__time, rY, delta);
        rY[20] = y_save;
        
        
        y_save = rY[21];
        rY[21] = mYInit[21];
        mEvalF[21] = EvaluateYDerivative21(var_chaste_interface__environment__time, rY);
        mPartialF[21] = EvaluatePartialDerivative21(var_chaste_interface__environment__time, rY, delta);
        rY[21] = y_save;
        
        
        y_save = rY[22];
        rY[22] = mYInit[22];
        mEvalF[22] = EvaluateYDerivative22(var_chaste_interface__environment__time, rY);
        mPartialF[22] = EvaluatePartialDerivative22(var_chaste_interface__environment__time, rY, delta);
        rY[22] = y_save;
        
        
        y_save = rY[23];
        rY[23] = mYInit[23];
        mEvalF[23] = EvaluateYDerivative23(var_chaste_interface__environment__time, rY);
        mPartialF[23] = EvaluatePartialDerivative23(var_chaste_interface__environment__time, rY, delta);
        rY[23] = y_save;
        
        
        y_save = rY[24];
        rY[24] = mYInit[24];
        mEvalF[24] = EvaluateYDerivative24(var_chaste_interface__environment__time, rY);
        mPartialF[24] = EvaluatePartialDerivative24(var_chaste_interface__environment__time, rY, delta);
        rY[24] = y_save;
        
        
        y_save = rY[25];
        rY[25] = mYInit[25];
        mEvalF[25] = EvaluateYDerivative25(var_chaste_interface__environment__time, rY);
        mPartialF[25] = EvaluatePartialDerivative25(var_chaste_interface__environment__time, rY, delta);
        rY[25] = y_save;
        
        
        y_save = rY[26];
        rY[26] = mYInit[26];
        mEvalF[26] = EvaluateYDerivative26(var_chaste_interface__environment__time, rY);
        mPartialF[26] = EvaluatePartialDerivative26(var_chaste_interface__environment__time, rY, delta);
        rY[26] = y_save;
        
        
        y_save = rY[27];
        rY[27] = mYInit[27];
        mEvalF[27] = EvaluateYDerivative27(var_chaste_interface__environment__time, rY);
        mPartialF[27] = EvaluatePartialDerivative27(var_chaste_interface__environment__time, rY, delta);
        rY[27] = y_save;
        
        
        y_save = rY[28];
        rY[28] = mYInit[28];
        mEvalF[28] = EvaluateYDerivative28(var_chaste_interface__environment__time, rY);
        mPartialF[28] = EvaluatePartialDerivative28(var_chaste_interface__environment__time, rY, delta);
        rY[28] = y_save;
        
        
        y_save = rY[29];
        rY[29] = mYInit[29];
        mEvalF[29] = EvaluateYDerivative29(var_chaste_interface__environment__time, rY);
        mPartialF[29] = EvaluatePartialDerivative29(var_chaste_interface__environment__time, rY, delta);
        rY[29] = y_save;
        
        
        y_save = rY[30];
        rY[30] = mYInit[30];
        mEvalF[30] = EvaluateYDerivative30(var_chaste_interface__environment__time, rY);
        mPartialF[30] = EvaluatePartialDerivative30(var_chaste_interface__environment__time, rY, delta);
        rY[30] = y_save;
        
        
        y_save = rY[31];
        rY[31] = mYInit[31];
        mEvalF[31] = EvaluateYDerivative31(var_chaste_interface__environment__time, rY);
        mPartialF[31] = EvaluatePartialDerivative31(var_chaste_interface__environment__time, rY, delta);
        rY[31] = y_save;
        
        
        y_save = rY[32];
        rY[32] = mYInit[32];
        mEvalF[32] = EvaluateYDerivative32(var_chaste_interface__environment__time, rY);
        mPartialF[32] = EvaluatePartialDerivative32(var_chaste_interface__environment__time, rY, delta);
        rY[32] = y_save;
        
        
        y_save = rY[33];
        rY[33] = mYInit[33];
        mEvalF[33] = EvaluateYDerivative33(var_chaste_interface__environment__time, rY);
        mPartialF[33] = EvaluatePartialDerivative33(var_chaste_interface__environment__time, rY, delta);
        rY[33] = y_save;
        
        
        y_save = rY[34];
        rY[34] = mYInit[34];
        mEvalF[34] = EvaluateYDerivative34(var_chaste_interface__environment__time, rY);
        mPartialF[34] = EvaluatePartialDerivative34(var_chaste_interface__environment__time, rY, delta);
        rY[34] = y_save;
        
        
        y_save = rY[35];
        rY[35] = mYInit[35];
        mEvalF[35] = EvaluateYDerivative35(var_chaste_interface__environment__time, rY);
        mPartialF[35] = EvaluatePartialDerivative35(var_chaste_interface__environment__time, rY, delta);
        rY[35] = y_save;
        
        
        y_save = rY[36];
        rY[36] = mYInit[36];
        mEvalF[36] = EvaluateYDerivative36(var_chaste_interface__environment__time, rY);
        mPartialF[36] = EvaluatePartialDerivative36(var_chaste_interface__environment__time, rY, delta);
        rY[36] = y_save;
        
        
        y_save = rY[37];
        rY[37] = mYInit[37];
        mEvalF[37] = EvaluateYDerivative37(var_chaste_interface__environment__time, rY);
        mPartialF[37] = EvaluatePartialDerivative37(var_chaste_interface__environment__time, rY, delta);
        rY[37] = y_save;
        
        
        y_save = rY[38];
        rY[38] = mYInit[38];
        mEvalF[38] = EvaluateYDerivative38(var_chaste_interface__environment__time, rY);
        mPartialF[38] = EvaluatePartialDerivative38(var_chaste_interface__environment__time, rY, delta);
        rY[38] = y_save;
        
        
        y_save = rY[39];
        rY[39] = mYInit[39];
        mEvalF[39] = EvaluateYDerivative39(var_chaste_interface__environment__time, rY);
        mPartialF[39] = EvaluatePartialDerivative39(var_chaste_interface__environment__time, rY, delta);
        rY[39] = y_save;
        
        
        y_save = rY[40];
        rY[40] = mYInit[40];
        mEvalF[40] = EvaluateYDerivative40(var_chaste_interface__environment__time, rY);
        mPartialF[40] = EvaluatePartialDerivative40(var_chaste_interface__environment__time, rY, delta);
        rY[40] = y_save;
        
        
        y_save = rY[41];
        rY[41] = mYInit[41];
        mEvalF[41] = EvaluateYDerivative41(var_chaste_interface__environment__time, rY);
        mPartialF[41] = EvaluatePartialDerivative41(var_chaste_interface__environment__time, rY, delta);
        rY[41] = y_save;
        
        
        y_save = rY[42];
        rY[42] = mYInit[42];
        mEvalF[42] = EvaluateYDerivative42(var_chaste_interface__environment__time, rY);
        mPartialF[42] = EvaluatePartialDerivative42(var_chaste_interface__environment__time, rY, delta);
        rY[42] = y_save;
        
        
        y_save = rY[43];
        rY[43] = mYInit[43];
        mEvalF[43] = EvaluateYDerivative43(var_chaste_interface__environment__time, rY);
        mPartialF[43] = EvaluatePartialDerivative43(var_chaste_interface__environment__time, rY, delta);
        rY[43] = y_save;
        
        
        y_save = rY[44];
        rY[44] = mYInit[44];
        mEvalF[44] = EvaluateYDerivative44(var_chaste_interface__environment__time, rY);
        mPartialF[44] = EvaluatePartialDerivative44(var_chaste_interface__environment__time, rY, delta);
        rY[44] = y_save;
        
        
        y_save = rY[45];
        rY[45] = mYInit[45];
        mEvalF[45] = EvaluateYDerivative45(var_chaste_interface__environment__time, rY);
        mPartialF[45] = EvaluatePartialDerivative45(var_chaste_interface__environment__time, rY, delta);
        rY[45] = y_save;
        
        
        y_save = rY[46];
        rY[46] = mYInit[46];
        mEvalF[46] = EvaluateYDerivative46(var_chaste_interface__environment__time, rY);
        mPartialF[46] = EvaluatePartialDerivative46(var_chaste_interface__environment__time, rY, delta);
        rY[46] = y_save;
        
        
        y_save = rY[47];
        rY[47] = mYInit[47];
        mEvalF[47] = EvaluateYDerivative47(var_chaste_interface__environment__time, rY);
        mPartialF[47] = EvaluatePartialDerivative47(var_chaste_interface__environment__time, rY, delta);
        rY[47] = y_save;
                
        for (unsigned var=0; var<size; var++)
        {
            if (var == 0) continue;
            if (fabs(mPartialF[var]) < delta)
            {
                rY[var] = mYInit[var] + mDt*mEvalF[var];
            }
            else
            {
                rY[var] = mYInit[var] + (mEvalF[var]/mPartialF[var])*(exp(mPartialF[var]*mDt)-1.0);
            }
            
        }


    }
   
    
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative0(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        double d_dt_chaste_interface_var_membrane__v;
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__intracellular_ions__cai = rY[1];
        // Units: millimolar; Initial value: 8.6e-05
        double var_chaste_interface__CaMK__CaMKt = rY[2];
        // Units: millimolar; Initial value: 0.0125840447
        double var_chaste_interface__intracellular_ions__nai = rY[3];
        // Units: millimolar; Initial value: 7.268004498
        double var_chaste_interface__intracellular_ions__nass = rY[4];
        // Units: millimolar; Initial value: 7.268089977
        double var_chaste_interface__intracellular_ions__ki = rY[5];
        // Units: millimolar; Initial value: 144.6555918
        double var_chaste_interface__intracellular_ions__kss = rY[6];
        // Units: millimolar; Initial value: 144.6555651
        double var_chaste_interface__intracellular_ions__cass = rY[7];
        // Units: millimolar; Initial value: 8.49e-05
        double var_chaste_interface__INa__m = rY[10];
        // Units: dimensionless; Initial value: 0.007344121102
        double var_chaste_interface__INa__hf = rY[11];
        // Units: dimensionless; Initial value: 0.6981071913
        double var_chaste_interface__INa__hs = rY[12];
        // Units: dimensionless; Initial value: 0.6980895801
        double var_chaste_interface__INa__j = rY[13];
        // Units: dimensionless; Initial value: 0.6979908432
        double var_chaste_interface__INa__hsp = rY[14];
        // Units: dimensionless; Initial value: 0.4549485525
        double var_chaste_interface__INa__jp = rY[15];
        // Units: dimensionless; Initial value: 0.6979245865
        double var_chaste_interface__INaL__mL = rY[16];
        // Units: dimensionless; Initial value: 0.0001882617273
        double var_chaste_interface__INaL__hL = rY[17];
        // Units: dimensionless; Initial value: 0.5008548855
        double var_chaste_interface__INaL__hLp = rY[18];
        // Units: dimensionless; Initial value: 0.2693065357
        double var_chaste_interface__Ito__a = rY[19];
        // Units: dimensionless; Initial value: 0.001001097687
        double var_chaste_interface__Ito__iF = rY[20];
        // Units: dimensionless; Initial value: 0.9995541745
        double var_chaste_interface__Ito__iS = rY[21];
        // Units: dimensionless; Initial value: 0.5865061736
        double var_chaste_interface__Ito__ap = rY[22];
        // Units: dimensionless; Initial value: 0.0005100862934
        double var_chaste_interface__Ito__iFp = rY[23];
        // Units: dimensionless; Initial value: 0.9995541823
        double var_chaste_interface__Ito__iSp = rY[24];
        // Units: dimensionless; Initial value: 0.6393399482
        double var_chaste_interface__ICaL__d = rY[25];
        // Units: dimensionless; Initial value: 2.34e-09
        double var_chaste_interface__ICaL__ff = rY[26];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fs = rY[27];
        // Units: dimensionless; Initial value: 0.9102412777
        double var_chaste_interface__ICaL__fcaf = rY[28];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcas = rY[29];
        // Units: dimensionless; Initial value: 0.9998046777
        double var_chaste_interface__ICaL__jca = rY[30];
        // Units: dimensionless; Initial value: 0.9999738312
        double var_chaste_interface__ICaL__ffp = rY[31];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcafp = rY[32];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__nca = rY[33];
        // Units: dimensionless; Initial value: 0.002749414044
        double var_chaste_interface__IKr__O = rY[38];
        // Units: dimensionless; Initial value: 0.00015551
        double var_chaste_interface__IKs__xs1 = rY[43];
        // Units: dimensionless; Initial value: 0.2707758025
        double var_chaste_interface__IKs__xs2 = rY[44];
        // Units: dimensionless; Initial value: 0.0001928503426
        double var_chaste_interface__IK1__xk1 = rY[45];
        // Units: dimensionless; Initial value: 0.9967597594
        

        // Mathematics
        const double var_CaMK__CaMKo = 0.050000000000000003; // dimensionless
        const double var_CaMK__KmCaM = 0.0015; // millimolar
        const double var_CaMK__KmCaMK = 0.14999999999999999; // millimolar
        const double var_ICaL__Aff = 0.59999999999999998; // dimensionless
        const double var_ICaL__Afs = 1.0 - var_ICaL__Aff; // dimensionless
        const double var_ICaL__f = var_ICaL__Aff * var_chaste_interface__ICaL__ff + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_ICaL__fp = var_ICaL__Aff * var_chaste_interface__ICaL__ffp + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_INa__Ahf = 0.98999999999999999; // dimensionless
        const double var_INa__Ahs = 1.0 - var_INa__Ahf; // dimensionless
        const double var_INa__h = var_INa__Ahf * var_chaste_interface__INa__hf + var_INa__Ahs * var_chaste_interface__INa__hs; // dimensionless
        const double var_INa__hp = var_INa__Ahf * var_chaste_interface__INa__hf + var_INa__Ahs * var_chaste_interface__INa__hsp; // dimensionless
        const double var_INaCa_i__KmCaAct = 0.00014999999999999999; // millimolar
        const double var_INaCa_i__kasymm = 12.5; // dimensionless
        const double var_INaCa_i__kcaoff = 5000.0; // per_millisecond
        const double var_INaCa_i__k2_i = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k2_ss = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k5_i = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k5_ss = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__kcaon = 1500000.0; // per_millisecond
        const double var_INaCa_i__kna1 = 15.0; // per_millisecond
        const double var_INaCa_i__kna2 = 5.0; // per_millisecond
        const double var_INaCa_i__kna3 = 88.120000000000005; // per_millisecond
        const double var_INaCa_i__qca = 0.16700000000000001; // dimensionless
        const double var_INaCa_i__qna = 0.52239999999999998; // dimensionless
        const double var_INaCa_i__wca = 60000.0; // dimensionless
        const double var_INaCa_i__wna = 60000.0; // dimensionless
        const double var_INaCa_i__wnaca = 5000.0; // dimensionless
        const double var_INaK__H = 9.9999999999999995e-8; // millimolar
        const double var_INaK__Khp = 1.698e-7; // millimolar
        const double var_INaK__Kki = 0.5; // per_millisecond
        const double var_INaK__Kko = 0.35820000000000002; // per_millisecond
        const double var_INaK__Kmgatp = 1.698e-7; // millimolar
        const double var_INaK__Knai0 = 9.0730000000000004; // millimolar
        const double var_INaK__Knao0 = 27.780000000000001; // millimolar
        const double var_INaK__Knap = 224.0; // millimolar
        const double var_INaK__Kxkur = 292.0; // millimolar
        const double var_INaK__MgADP = 0.050000000000000003; // millimolar
        const double var_INaK__MgATP = 9.8000000000000007; // millimolar
        const double var_INaK__delta = -0.155; // millivolt
        const double var_INaK__eP = 4.2000000000000002; // dimensionless
        const double var_INaK__k1m = 182.40000000000001; // per_millisecond
        const double var_INaK__b1 = var_INaK__MgADP * var_INaK__k1m; // dimensionless
        const double var_INaK__k1p = 949.5; // per_millisecond
        const double var_INaK__k2m = 39.399999999999999; // per_millisecond
        const double var_INaK__k2p = 687.20000000000005; // per_millisecond
        const double var_INaK__a2 = var_INaK__k2p; // dimensionless
        const double var_INaK__k3m = 79300.0; // per_millisecond
        const double var_INaK__k3p = 1899.0; // per_millisecond
        const double var_INaK__k4m = 40.0; // per_millisecond
        const double var_INaK__k4p = 639.0; // per_millisecond
        const double var_INaK__a4 = var_INaK__MgATP * var_INaK__k4p / ((1.0 + var_INaK__MgATP / var_INaK__Kmgatp) * var_INaK__Kmgatp); // dimensionless
        const double var_IpCa__KmCap = 0.00050000000000000001; // millimolar
        const double var_environment__celltype = 0; // dimensionless
        const double var_ICaL__PCa = ((var_environment__celltype == 1.0) ? (1.2 * mParameters[12]) : ((var_environment__celltype == 2.0) ? (2.5 * mParameters[12]) : (mParameters[12]))); // dimensionless
        const double var_ICaL__PCaK = 0.00035740000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCaNa = 0.00125 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCap = 1.1000000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCaKp = 0.00035740000000000001 * var_ICaL__PCap; // dimensionless
        const double var_ICaL__PCaNap = 0.00125 * var_ICaL__PCap; // dimensionless
        const double var_IK1__GK1 = ((var_environment__celltype == 1.0) ? (1.2 * mParameters[18]) : ((var_environment__celltype == 2.0) ? (1.3 * mParameters[18]) : (mParameters[18]))); // milliS_per_microF
        const double var_IKb__GKb = ((var_environment__celltype == 1.0) ? (0.59999999999999998 * mParameters[14]) : (mParameters[14])); // milliS_per_microF
        const double var_IKr__GKr = ((var_environment__celltype == 1.0) ? (1.3 * mParameters[20]) : ((var_environment__celltype == 2.0) ? (0.80000000000000004 * mParameters[20]) : (mParameters[20]))); // milliS_per_microF
        const double var_IKs__GKs = ((var_environment__celltype == 1.0) ? (1.3999999999999999 * mParameters[21]) : (mParameters[21])); // milliS_per_microF
        const double var_INaCa_i__Gncx = ((var_environment__celltype == 1.0) ? (1.1000000000000001 * mParameters[22]) : ((var_environment__celltype == 2.0) ? (1.3999999999999999 * mParameters[22]) : (mParameters[22]))); // milliS_per_microF
        const double var_INaK__Pnak = ((var_environment__celltype == 1.0) ? (0.90000000000000002 * mParameters[23]) : ((var_environment__celltype == 2.0) ? (0.69999999999999996 * mParameters[23]) : (mParameters[23]))); // milliS_per_microF
        const double var_INaL__GNaL = ((var_environment__celltype == 1.0) ? (0.59999999999999998 * mParameters[19]) : (mParameters[19])); // milliS_per_microF
        const double var_Ito__Gto = (((var_environment__celltype == 1.0) || (var_environment__celltype == 2.0)) ? (4.0 * mParameters[24]) : (mParameters[24])); // milliS_per_microF
        const double var_IK1__GK1_calc = sqrt(mParameters[10]) * var_IK1__GK1; // milliS_per_microF
        const double var_IKr__GKr_calc = 0.43033148291193518 * sqrt(mParameters[10]) * var_IKr__GKr; // milliS_per_microF
        const double var_INaCa_i__h10_i = 1.0 + (1.0 + mParameters[11] / var_INaCa_i__kna2) * mParameters[11] / var_INaCa_i__kna1 + var_INaCa_i__kasymm; // dimensionless
        const double var_INaCa_i__h10_ss = 1.0 + (1.0 + mParameters[11] / var_INaCa_i__kna2) * mParameters[11] / var_INaCa_i__kna1 + var_INaCa_i__kasymm; // dimensionless
        const double var_INaCa_i__h11_i = pow(mParameters[11], 2) / (var_INaCa_i__h10_i * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h11_ss = pow(mParameters[11], 2) / (var_INaCa_i__h10_ss * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h12_i = 1 / var_INaCa_i__h10_i; // dimensionless
        const double var_INaCa_i__h12_ss = 1 / var_INaCa_i__h10_ss; // dimensionless
        const double var_INaCa_i__k1_i = var_INaCa_i__h12_i * var_INaCa_i__kcaon * mParameters[9]; // dimensionless
        const double var_INaCa_i__k1_ss = var_INaCa_i__h12_ss * var_INaCa_i__kcaon * mParameters[9]; // dimensionless
        const double var_IKs__KsCa = 1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__intracellular_ions__cai), 1.3999999999999999)); // dimensionless
        const double var_IKs__GKs_calc = var_IKs__GKs * var_IKs__KsCa; // milliS_per_microF
        const double var_INaCa_i__allo_i = 1 / (1.0 + pow(var_INaCa_i__KmCaAct, 2) / pow(var_chaste_interface__intracellular_ions__cai, 2)); // dimensionless
        const double var_IpCa__IpCa = mParameters[16] * var_chaste_interface__intracellular_ions__cai / (var_IpCa__KmCap + var_chaste_interface__intracellular_ions__cai); // microA_per_microF
        const double var_CaMK__CaMKb = (1.0 - var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKo / (1.0 + var_CaMK__KmCaM / var_chaste_interface__intracellular_ions__cass); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_ICaL__fICaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INa__fINap = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INaCa_i__allo_ss = 1 / (1.0 + pow(var_INaCa_i__KmCaAct, 2) / pow(var_chaste_interface__intracellular_ions__cass, 2)); // dimensionless
        const double var_INaL__fINaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_Ito__fItop = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INaCa_i__h4_i = 1.0 + (1.0 + var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna2) * var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna1; // dimensionless
        const double var_INaCa_i__h5_i = pow(var_chaste_interface__intracellular_ions__nai, 2) / (var_INaCa_i__h4_i * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h6_i = 1 / var_INaCa_i__h4_i; // dimensionless
        const double var_INaCa_i__k6_i = var_INaCa_i__h6_i * var_INaCa_i__kcaon * var_chaste_interface__intracellular_ions__cai; // dimensionless
        const double var_INaK__P = var_INaK__eP / (1.0 + var_INaK__H / var_INaK__Khp + var_chaste_interface__intracellular_ions__nai / var_INaK__Knap + var_chaste_interface__intracellular_ions__ki / var_INaK__Kxkur); // dimensionless
        const double var_INaK__b3 = var_INaK__H * var_INaK__P * var_INaK__k3m / (1.0 + var_INaK__MgATP / var_INaK__Kmgatp); // dimensionless
        const double var_INaCa_i__h4_ss = 1.0 + (1.0 + var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna2) * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna1; // dimensionless
        const double var_INaCa_i__h5_ss = pow(var_chaste_interface__intracellular_ions__nass, 2) / (var_INaCa_i__h4_ss * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h6_ss = 1 / var_INaCa_i__h4_ss; // dimensionless
        const double var_INaCa_i__k6_ss = var_INaCa_i__h6_ss * var_INaCa_i__kcaon * var_chaste_interface__intracellular_ions__cass; // dimensionless
        const double var_membrane__Istim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
        const double var_membrane__Istim = var_membrane__Istim_converted / HeartConfig::Instance()->GetCapacitance(); // microA_per_microF
        const double var_ICaL__Afcaf = 0.29999999999999999 + 0.59999999999999998 / (1.0 + exp(-1.0 + 0.10000000000000001 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__Afcas = 1.0 - var_ICaL__Afcaf; // dimensionless
        const double var_ICaL__PhiCaK = ((fabs(var_chaste_interface__membrane__v) < 2.6712338705498262e-6) ? (2.671233870549826e-13 * (-0.75 * mParameters[10] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)) + 187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-0.75 * mParameters[10] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-0.75 * mParameters[10] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (0.037435883507802616 * pow(var_chaste_interface__membrane__v, 2) * (-0.75 * mParameters[10] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(0.037435883507802616 * var_chaste_interface__membrane__v)) / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__v)))); // dimensionless
        const double var_ICaL__PhiCaL = ((fabs(var_chaste_interface__membrane__v) < 1.3356169352749131e-6) ? (2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)) + 374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (0.14974353403121046 * pow(var_chaste_interface__membrane__v, 2) * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(0.074871767015605231 * var_chaste_interface__membrane__v)) / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__v)))); // dimensionless
        const double var_ICaL__PhiCaNa = ((fabs(var_chaste_interface__membrane__v) < 2.6712338705498262e-6) ? (2.671233870549826e-13 * (-0.75 * mParameters[11] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)) + 187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-0.75 * mParameters[11] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-0.75 * mParameters[11] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (0.037435883507802616 * pow(var_chaste_interface__membrane__v, 2) * (-0.75 * mParameters[11] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(0.037435883507802616 * var_chaste_interface__membrane__v)) / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__v)))); // dimensionless
        const double var_ICaL__fca = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcaf + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__fcap = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcafp + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__ICaK = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaK * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaKp * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaL = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCa * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCap * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaNa = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaNa * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaNap * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICab__ICab = ((fabs(var_chaste_interface__membrane__v) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cai * exp(9.9999999999999995e-8)) * mParameters[13] / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cai * exp(-9.9999999999999995e-8)) * mParameters[13] / (-1.0 + exp(-9.9999999999999995e-8))) + 2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cai * exp(-9.9999999999999995e-8)) * mParameters[13] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.14974353403121046 * pow(var_chaste_interface__membrane__v, 2) * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cai * exp(0.074871767015605231 * var_chaste_interface__membrane__v)) * mParameters[13] / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__v)))); // microA_per_microF
        const double var_IK1__rk1 = 1 / (1.0 + exp(11.145054250500367 + 0.10534077741493732 * var_chaste_interface__membrane__v - 0.27388602127883704 * mParameters[10])); // millisecond
        const double var_IKb__xkb = 1 / (1.0 + exp(0.78953107960741553 - 0.054525627044711013 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_INab__INab = ((fabs(var_chaste_interface__membrane__v) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-mParameters[11] + var_chaste_interface__intracellular_ions__nai * exp(9.9999999999999995e-8)) * mParameters[15] / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-mParameters[11] + var_chaste_interface__intracellular_ions__nai * exp(-9.9999999999999995e-8)) * mParameters[15] / (-1.0 + exp(-9.9999999999999995e-8))) + 2.671233870549826e-13 * (-mParameters[11] + var_chaste_interface__intracellular_ions__nai * exp(-9.9999999999999995e-8)) * mParameters[15] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.037435883507802616 * pow(var_chaste_interface__membrane__v, 2) * (-mParameters[11] + var_chaste_interface__intracellular_ions__nai * exp(0.037435883507802616 * var_chaste_interface__membrane__v)) * mParameters[15] / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__v)))); // microA_per_microF
        const double var_Ito__AiF = 1 / (1.0 + exp(-1.4126984126984128 + 0.0066137566137566143 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__AiS = 1.0 - var_Ito__AiF; // dimensionless
        const double var_Ito__i = var_Ito__AiF * var_chaste_interface__Ito__iF + var_Ito__AiS * var_chaste_interface__Ito__iS; // dimensionless
        const double var_Ito__ip = var_Ito__AiF * var_chaste_interface__Ito__iFp + var_Ito__AiS * var_chaste_interface__Ito__iSp; // dimensionless
        const double var_physical_constants__F = 96485.0; // coulomb_per_mole
        const double var_physical_constants__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_physical_constants__T = 310.0; // kelvin
        const double var_INaCa_i__hca = exp(var_INaCa_i__qca * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // dimensionless
        const double var_INaCa_i__hna = exp(var_INaCa_i__qna * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // dimensionless
        const double var_INaCa_i__h1_i = 1.0 + (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h1_ss = 1.0 + (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h2_i = var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nai / (var_INaCa_i__h1_i * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h2_ss = var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nass / (var_INaCa_i__h1_ss * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h3_i = 1 / var_INaCa_i__h1_i; // dimensionless
        const double var_INaCa_i__h3_ss = 1 / var_INaCa_i__h1_ss; // dimensionless
        const double var_INaCa_i__h7_i = 1.0 + (1.0 + 1 / var_INaCa_i__hna) * mParameters[11] / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h7_ss = 1.0 + (1.0 + 1 / var_INaCa_i__hna) * mParameters[11] / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h8_i = mParameters[11] / (var_INaCa_i__h7_i * var_INaCa_i__hna * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h8_ss = mParameters[11] / (var_INaCa_i__h7_ss * var_INaCa_i__hna * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h9_i = 1 / var_INaCa_i__h7_i; // dimensionless
        const double var_INaCa_i__h9_ss = 1 / var_INaCa_i__h7_ss; // dimensionless
        const double var_INaCa_i__k3p_i = var_INaCa_i__h9_i * var_INaCa_i__wca; // dimensionless
        const double var_INaCa_i__k3p_ss = var_INaCa_i__h9_ss * var_INaCa_i__wca; // dimensionless
        const double var_INaCa_i__k3pp_i = var_INaCa_i__h8_i * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k3_i = var_INaCa_i__k3p_i + var_INaCa_i__k3pp_i; // dimensionless
        const double var_INaCa_i__k3pp_ss = var_INaCa_i__h8_ss * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k3_ss = var_INaCa_i__k3p_ss + var_INaCa_i__k3pp_ss; // dimensionless
        const double var_INaCa_i__k4p_i = var_INaCa_i__h3_i * var_INaCa_i__wca / var_INaCa_i__hca; // dimensionless
        const double var_INaCa_i__k4p_ss = var_INaCa_i__h3_ss * var_INaCa_i__wca / var_INaCa_i__hca; // dimensionless
        const double var_INaCa_i__k4pp_i = var_INaCa_i__h2_i * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k4_i = var_INaCa_i__k4p_i + var_INaCa_i__k4pp_i; // dimensionless
        const double var_INaCa_i__k4pp_ss = var_INaCa_i__h2_ss * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k4_ss = var_INaCa_i__k4p_ss + var_INaCa_i__k4pp_ss; // dimensionless
        const double var_INaCa_i__k7_i = var_INaCa_i__h2_i * var_INaCa_i__h5_i * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k7_ss = var_INaCa_i__h2_ss * var_INaCa_i__h5_ss * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k8_i = var_INaCa_i__h11_i * var_INaCa_i__h8_i * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k8_ss = var_INaCa_i__h11_ss * var_INaCa_i__h8_ss * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__x1_i = (var_INaCa_i__k2_i + var_INaCa_i__k3_i) * var_INaCa_i__k5_i * var_INaCa_i__k7_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k2_i * var_INaCa_i__k4_i; // dimensionless
        const double var_INaCa_i__x1_ss = (var_INaCa_i__k2_ss + var_INaCa_i__k3_ss) * var_INaCa_i__k5_ss * var_INaCa_i__k7_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k2_ss * var_INaCa_i__k4_ss; // dimensionless
        const double var_INaCa_i__x2_i = (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k4_i * var_INaCa_i__k6_i + (var_INaCa_i__k4_i + var_INaCa_i__k5_i) * var_INaCa_i__k1_i * var_INaCa_i__k7_i; // dimensionless
        const double var_INaCa_i__x2_ss = (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k4_ss * var_INaCa_i__k6_ss + (var_INaCa_i__k4_ss + var_INaCa_i__k5_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k7_ss; // dimensionless
        const double var_INaCa_i__x3_i = (var_INaCa_i__k2_i + var_INaCa_i__k3_i) * var_INaCa_i__k6_i * var_INaCa_i__k8_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k1_i * var_INaCa_i__k3_i; // dimensionless
        const double var_INaCa_i__x3_ss = (var_INaCa_i__k2_ss + var_INaCa_i__k3_ss) * var_INaCa_i__k6_ss * var_INaCa_i__k8_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k3_ss; // dimensionless
        const double var_INaCa_i__x4_i = (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k3_i * var_INaCa_i__k5_i + (var_INaCa_i__k4_i + var_INaCa_i__k5_i) * var_INaCa_i__k2_i * var_INaCa_i__k8_i; // dimensionless
        const double var_INaCa_i__E1_i = var_INaCa_i__x1_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E2_i = var_INaCa_i__x2_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E3_i = var_INaCa_i__x3_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E4_i = var_INaCa_i__x4_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__JncxCa_i = var_INaCa_i__E2_i * var_INaCa_i__k2_i - var_INaCa_i__E1_i * var_INaCa_i__k1_i; // millimolar_per_millisecond
        const double var_INaCa_i__JncxNa_i = var_INaCa_i__E3_i * var_INaCa_i__k4pp_i - var_INaCa_i__E2_i * var_INaCa_i__k3pp_i + 3.0 * var_INaCa_i__E4_i * var_INaCa_i__k7_i - 3.0 * var_INaCa_i__E1_i * var_INaCa_i__k8_i; // millimolar_per_millisecond
        const double var_INaCa_i__x4_ss = (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k3_ss * var_INaCa_i__k5_ss + (var_INaCa_i__k4_ss + var_INaCa_i__k5_ss) * var_INaCa_i__k2_ss * var_INaCa_i__k8_ss; // dimensionless
        const double var_INaCa_i__E1_ss = var_INaCa_i__x1_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E2_ss = var_INaCa_i__x2_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E3_ss = var_INaCa_i__x3_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E4_ss = var_INaCa_i__x4_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__JncxCa_ss = var_INaCa_i__E2_ss * var_INaCa_i__k2_ss - var_INaCa_i__E1_ss * var_INaCa_i__k1_ss; // millimolar_per_millisecond
        const double var_INaCa_i__JncxNa_ss = var_INaCa_i__E3_ss * var_INaCa_i__k4pp_ss - var_INaCa_i__E2_ss * var_INaCa_i__k3pp_ss + 3.0 * var_INaCa_i__E4_ss * var_INaCa_i__k7_ss - 3.0 * var_INaCa_i__E1_ss * var_INaCa_i__k8_ss; // millimolar_per_millisecond
        const double var_INaK__Knai = var_INaK__Knai0 * exp(0.33333333333333331 * var_INaK__delta * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // millimolar
        const double var_INaK__Knao = var_INaK__Knao0 * exp(0.33333333333333331 * (1.0 - var_INaK__delta) * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // millimolar
        const double var_INaK__a1 = pow(var_chaste_interface__intracellular_ions__nai, 3) * var_INaK__k1p / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__ki / var_INaK__Kki), 2) + pow((1.0 + var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3)) * pow(var_INaK__Knai, 3)); // dimensionless
        const double var_INaK__a3 = pow(mParameters[10], 2) * var_INaK__k3p / ((-1.0 + pow((1.0 + mParameters[10] / var_INaK__Kko), 2) + pow((1.0 + mParameters[11] / var_INaK__Knao), 3)) * pow(var_INaK__Kko, 2)); // dimensionless
        const double var_INaK__b2 = pow(mParameters[11], 3) * var_INaK__k2m / ((-1.0 + pow((1.0 + mParameters[10] / var_INaK__Kko), 2) + pow((1.0 + mParameters[11] / var_INaK__Knao), 3)) * pow(var_INaK__Knao, 3)); // dimensionless
        const double var_INaK__b4 = pow(var_chaste_interface__intracellular_ions__ki, 2) * var_INaK__k4m / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__ki / var_INaK__Kki), 2) + pow((1.0 + var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3)) * pow(var_INaK__Kki, 2)); // dimensionless
        const double var_INaK__x1 = var_INaK__a1 * var_INaK__a2 * var_INaK__a4 + var_INaK__a1 * var_INaK__a2 * var_INaK__b3 + var_INaK__a2 * var_INaK__b3 * var_INaK__b4 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__x2 = var_INaK__a1 * var_INaK__a2 * var_INaK__a3 + var_INaK__a2 * var_INaK__a3 * var_INaK__b4 + var_INaK__a3 * var_INaK__b1 * var_INaK__b4 + var_INaK__b1 * var_INaK__b2 * var_INaK__b4; // dimensionless
        const double var_INaK__x3 = var_INaK__a2 * var_INaK__a3 * var_INaK__a4 + var_INaK__a3 * var_INaK__a4 * var_INaK__b1 + var_INaK__a4 * var_INaK__b1 * var_INaK__b2 + var_INaK__b1 * var_INaK__b2 * var_INaK__b3; // dimensionless
        const double var_INaK__x4 = var_INaK__a1 * var_INaK__a3 * var_INaK__a4 + var_INaK__a1 * var_INaK__a4 * var_INaK__b2 + var_INaK__a1 * var_INaK__b2 * var_INaK__b3 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__E1 = var_INaK__x1 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E2 = var_INaK__x2 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E3 = var_INaK__x3 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E4 = var_INaK__x4 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__JnakK = 2.0 * var_INaK__E4 * var_INaK__b1 - 2.0 * var_INaK__E3 * var_INaK__a1; // millimolar_per_millisecond
        const double var_INaK__JnakNa = 3.0 * var_INaK__E1 * var_INaK__a3 - 3.0 * var_INaK__E2 * var_INaK__b3; // millimolar_per_millisecond
        const double var_physical_constants__zca = 2.0; // dimensionless
        const double var_physical_constants__zk = 1.0; // dimensionless
        const double var_physical_constants__zna = 1.0; // dimensionless
        const double var_INaCa_i__INaCa_i = 0.80000000000000004 * (var_INaCa_i__JncxCa_i * var_physical_constants__zca + var_INaCa_i__JncxNa_i * var_physical_constants__zna) * var_INaCa_i__Gncx * var_INaCa_i__allo_i; // microA_per_microF
        const double var_INaCa_i__INaCa_ss = 0.20000000000000001 * (var_INaCa_i__JncxCa_ss * var_physical_constants__zca + var_INaCa_i__JncxNa_ss * var_physical_constants__zna) * var_INaCa_i__Gncx * var_INaCa_i__allo_ss; // microA_per_microF
        const double var_INaK__INaK = (var_INaK__JnakK * var_physical_constants__zk + var_INaK__JnakNa * var_physical_constants__zna) * var_INaK__Pnak; // microA_per_microF
        const double var_reversal_potentials__EK = var_physical_constants__R * var_physical_constants__T * log(mParameters[10] / var_chaste_interface__intracellular_ions__ki) / var_physical_constants__F; // millivolt
        const double var_IK1__IK1 = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IK1__GK1_calc * var_IK1__rk1 * var_chaste_interface__IK1__xk1; // microA_per_microF
        const double var_IKb__IKb = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IKb__GKb * var_IKb__xkb; // microA_per_microF
        const double var_IKr__IKr = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IKr__GKr_calc * var_chaste_interface__IKr__O; // microA_per_microF
        const double var_Ito__Ito = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * ((1.0 - var_Ito__fItop) * var_chaste_interface__Ito__a * var_Ito__i + var_chaste_interface__Ito__ap * var_Ito__fItop * var_Ito__ip) * var_Ito__Gto; // microA_per_microF
        const double var_reversal_potentials__ENa = var_physical_constants__R * var_physical_constants__T * log(mParameters[11] / var_chaste_interface__intracellular_ions__nai) / var_physical_constants__F; // millivolt
        const double var_INa__INa = pow(var_chaste_interface__INa__m, 3) * (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - var_INa__fINap) * var_INa__h * var_chaste_interface__INa__j + var_INa__fINap * var_INa__hp * var_chaste_interface__INa__jp) * mParameters[17]; // microA_per_microF
        const double var_INaL__INaL = (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - var_INaL__fINaLp) * var_chaste_interface__INaL__hL + var_INaL__fINaLp * var_chaste_interface__INaL__hLp) * var_INaL__GNaL * var_chaste_interface__INaL__mL; // microA_per_microF
        const double var_reversal_potentials__PKNa = 0.018329999999999999; // dimensionless
        const double var_reversal_potentials__EKs = var_physical_constants__R * var_physical_constants__T * log((mParameters[11] * var_reversal_potentials__PKNa + mParameters[10]) / (var_chaste_interface__intracellular_ions__nai * var_reversal_potentials__PKNa + var_chaste_interface__intracellular_ions__ki)) / var_physical_constants__F; // millivolt
        const double var_IKs__IKs = (-var_reversal_potentials__EKs + var_chaste_interface__membrane__v) * var_IKs__GKs_calc * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2; // microA_per_microF
        d_dt_chaste_interface_var_membrane__v = -var_ICaL__ICaK - var_ICaL__ICaL - var_ICaL__ICaNa - var_ICab__ICab - var_IK1__IK1 - var_IKb__IKb - var_IKr__IKr - var_IKs__IKs - var_INa__INa - var_INaCa_i__INaCa_i - var_INaCa_i__INaCa_ss - var_INaK__INaK - var_INaL__INaL - var_INab__INab - var_IpCa__IpCa - var_Ito__Ito - var_membrane__Istim; // millivolt / millisecond

        return d_dt_chaste_interface_var_membrane__v;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative0(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            double var_chaste_interface__intracellular_ions__cai = rY[1];
            // Units: millimolar; Initial value: 8.6e-05
            double var_chaste_interface__CaMK__CaMKt = rY[2];
            // Units: millimolar; Initial value: 0.0125840447
            double var_chaste_interface__intracellular_ions__nai = rY[3];
            // Units: millimolar; Initial value: 7.268004498
            double var_chaste_interface__intracellular_ions__nass = rY[4];
            // Units: millimolar; Initial value: 7.268089977
            double var_chaste_interface__intracellular_ions__ki = rY[5];
            // Units: millimolar; Initial value: 144.6555918
            double var_chaste_interface__intracellular_ions__kss = rY[6];
            // Units: millimolar; Initial value: 144.6555651
            double var_chaste_interface__intracellular_ions__cass = rY[7];
            // Units: millimolar; Initial value: 8.49e-05
            double var_chaste_interface__INa__m = rY[10];
            // Units: dimensionless; Initial value: 0.007344121102
            double var_chaste_interface__INa__hf = rY[11];
            // Units: dimensionless; Initial value: 0.6981071913
            double var_chaste_interface__INa__hs = rY[12];
            // Units: dimensionless; Initial value: 0.6980895801
            double var_chaste_interface__INa__j = rY[13];
            // Units: dimensionless; Initial value: 0.6979908432
            double var_chaste_interface__INa__hsp = rY[14];
            // Units: dimensionless; Initial value: 0.4549485525
            double var_chaste_interface__INa__jp = rY[15];
            // Units: dimensionless; Initial value: 0.6979245865
            double var_chaste_interface__INaL__mL = rY[16];
            // Units: dimensionless; Initial value: 0.0001882617273
            double var_chaste_interface__INaL__hL = rY[17];
            // Units: dimensionless; Initial value: 0.5008548855
            double var_chaste_interface__INaL__hLp = rY[18];
            // Units: dimensionless; Initial value: 0.2693065357
            double var_chaste_interface__Ito__a = rY[19];
            // Units: dimensionless; Initial value: 0.001001097687
            double var_chaste_interface__Ito__iF = rY[20];
            // Units: dimensionless; Initial value: 0.9995541745
            double var_chaste_interface__Ito__iS = rY[21];
            // Units: dimensionless; Initial value: 0.5865061736
            double var_chaste_interface__Ito__ap = rY[22];
            // Units: dimensionless; Initial value: 0.0005100862934
            double var_chaste_interface__Ito__iFp = rY[23];
            // Units: dimensionless; Initial value: 0.9995541823
            double var_chaste_interface__Ito__iSp = rY[24];
            // Units: dimensionless; Initial value: 0.6393399482
            double var_chaste_interface__ICaL__d = rY[25];
            // Units: dimensionless; Initial value: 2.34e-09
            double var_chaste_interface__ICaL__ff = rY[26];
            // Units: dimensionless; Initial value: 0.9999999909
            double var_chaste_interface__ICaL__fs = rY[27];
            // Units: dimensionless; Initial value: 0.9102412777
            double var_chaste_interface__ICaL__fcaf = rY[28];
            // Units: dimensionless; Initial value: 0.9999999909
            double var_chaste_interface__ICaL__fcas = rY[29];
            // Units: dimensionless; Initial value: 0.9998046777
            double var_chaste_interface__ICaL__jca = rY[30];
            // Units: dimensionless; Initial value: 0.9999738312
            double var_chaste_interface__ICaL__ffp = rY[31];
            // Units: dimensionless; Initial value: 0.9999999909
            double var_chaste_interface__ICaL__fcafp = rY[32];
            // Units: dimensionless; Initial value: 0.9999999909
            double var_chaste_interface__ICaL__nca = rY[33];
            // Units: dimensionless; Initial value: 0.002749414044
            double var_chaste_interface__IKr__O = rY[38];
            // Units: dimensionless; Initial value: 0.00015551
            double var_chaste_interface__IKs__xs1 = rY[43];
            // Units: dimensionless; Initial value: 0.2707758025
            double var_chaste_interface__IKs__xs2 = rY[44];
            // Units: dimensionless; Initial value: 0.0001928503426
            double var_chaste_interface__IK1__xk1 = rY[45];
            // Units: dimensionless; Initial value: 0.9967597594
            

            const double var_x0 = -mParameters[11];
            const double var_x1 = exp(9.9999999999999995e-8);
            const double var_x2 = 1 / (-1.0 + var_x1);
            const double var_x3 = 4.9999999999999998e-8 * var_x2;
            const double var_x4 = exp(-9.9999999999999995e-8);
            const double var_x5 = 1 / (-1.0 + var_x4);
            const double var_x6 = 4.9999999999999998e-8 * var_x5;
            const double var_x7 = fabs(var_chaste_interface__membrane__v);
            const double var_x8 = var_x7 < 2.6712338705498262e-6;
            const double var_x9 = exp(0.037435883507802616 * var_chaste_interface__membrane__v);
            const double var_x10 = -1.0 + var_x9;
            const double var_x11 = 1 / var_x10;
            const double var_x12 = 0.074871767015605231 * var_chaste_interface__membrane__v;
            const double var_x13 = var_x11 * var_x12;
            const double var_x14 = var_x9 * var_chaste_interface__intracellular_ions__nai;
            const double var_x15 = (var_x0 + var_x14) * mParameters[15];
            const double var_x16 = pow(var_chaste_interface__membrane__v, 2);
            const double var_x17 = var_x11 * var_x16;
            const double var_x18 = 0.0014014453740097681 * var_x16 * var_x9 / pow(var_x10, 2);
            const double var_x19 = ((var_x8) ? (var_x3 * (var_x0 + var_x1 * var_chaste_interface__intracellular_ions__nai) * mParameters[15] - var_x6 * (var_x0 + var_x4 * var_chaste_interface__intracellular_ions__nai) * mParameters[15]) : (var_x13 * var_x15 - var_x15 * var_x18 + 0.0014014453740097681 * var_x14 * var_x17 * mParameters[15]));
            const double var_x20 = -0.34100000000000003 * mParameters[9];
            const double var_x21 = var_x20 + var_x1 * var_chaste_interface__intracellular_ions__cai;
            const double var_x22 = 9.9999999999999995e-8 * mParameters[13];
            const double var_x23 = var_x20 + var_x4 * var_chaste_interface__intracellular_ions__cai;
            const double var_x24 = var_x7 < 1.3356169352749131e-6;
            const double var_x25 = exp(var_x12);
            const double var_x26 = -1.0 + var_x25;
            const double var_x27 = 1 / var_x26;
            const double var_x28 = 0.29948706806242092 * var_chaste_interface__membrane__v;
            const double var_x29 = var_x25 * var_chaste_interface__intracellular_ions__cai;
            const double var_x30 = (var_x20 + var_x29) * mParameters[13];
            const double var_x31 = 0.011211562992078145 * var_x16;
            const double var_x32 = var_x27 * var_x31;
            const double var_x33 = var_x25 * var_x31 / pow(var_x26, 2);
            const double var_x34 = ((var_x24) ? (var_x2 * var_x21 * var_x22 - var_x22 * var_x23 * var_x5) : (-var_x30 * var_x33 + var_x27 * var_x28 * var_x30 + var_x29 * var_x32 * mParameters[13]));
            const double var_x35 = exp(-1.4126984126984128 + 0.0066137566137566143 * var_chaste_interface__membrane__v);
            const double var_x36 = 1.0 + var_x35;
            const double var_x37 = 1 / var_x36;
            const double var_x38 = var_x37;
            const double var_x39 = 1.0 - var_x38;
            const double var_x40 = var_x38 * var_chaste_interface__Ito__iF + var_x39 * var_chaste_interface__Ito__iS;
            const double var_x41 = 1.0 - var_chaste_interface__CaMK__CaMKt;
            const double var_x42 = 1 / var_chaste_interface__intracellular_ions__cass;
            const double var_x43 = 1.0 + 0.0015 * var_x42;
            const double var_x44 = 1 / var_x43;
            const double var_x45 = 0.050000000000000003 * var_x44;
            const double var_x46 = var_x41 * var_x45 + var_chaste_interface__CaMK__CaMKt;
            const double var_x47 = 1.0 + 0.14999999999999999 / var_x46;
            const double var_x48 = 1 / var_x47;
            const double var_x49 = var_x48;
            const double var_x50 = 1.0 - var_x49;
            const double var_x51 = var_x50 * var_chaste_interface__Ito__a;
            const double var_x52 = var_x40 * var_x51;
            const double var_x53 = var_x38 * var_chaste_interface__Ito__iFp + var_x39 * var_chaste_interface__Ito__iSp;
            const double var_x54 = var_x49 * var_chaste_interface__Ito__ap;
            const double var_x55 = var_x53 * var_x54;
            const double var_x56 = exp(0.014412815150504008 * var_chaste_interface__membrane__v);
            const double var_x57 = mParameters[11] / var_x56;
            const double var_x58 = 1.0 + 0.035997120230381568 * var_x57;
            const double var_x59 = pow(var_x58, 3);
            const double var_x60 = pow((0.35820000000000002 + mParameters[10]), 2);
            const double var_x61 = 1 / (-1.0 + var_x59 + 7.7937924625297832 * var_x60);
            const double var_x62 = pow(mParameters[10], 2);
            const double var_x63 = var_x61 * var_x62;
            const double var_x64 = pow(var_chaste_interface__intracellular_ions__nai, 3);
            const double var_x65 = exp(-0.001934187314569802 * var_chaste_interface__membrane__v);
            const double var_x66 = 1 / var_x65;
            const double var_x67 = var_x66 * var_chaste_interface__intracellular_ions__nai;
            const double var_x68 = 1.0 + 0.11021712774165104 * var_x67;
            const double var_x69 = pow(var_x68, 3);
            const double var_x70 = pow((0.5 + var_chaste_interface__intracellular_ions__ki), 2);
            const double var_x71 = 1 / (-1.0 + var_x69 + 4.0 * var_x70);
            const double var_x72 = pow(var_x65, (-3));
            const double var_x73 = var_x71 * var_x72;
            const double var_x74 = var_x64 * var_x73;
            const double var_x75 = var_x63 * var_x74;
            const double var_x76 = pow(mParameters[11], 3);
            const double var_x77 = var_x61 * var_x76 / pow(var_x56, 3);
            const double var_x78 = var_x74 * var_x77;
            const double var_x79 = 0.055889557593578436 * var_x78;
            const double var_x80 = pow(var_chaste_interface__intracellular_ions__nai, 4);
            const double var_x81 = pow((-0.25 + var_x70 + 0.25 * var_x69), (-2));
            const double var_x82 = var_x81 * pow(var_x68, 2);
            const double var_x83 = var_x82 / pow(var_x65, 4);
            const double var_x84 = var_x80 * var_x83;
            const double var_x85 = var_x63 * var_x84;
            const double var_x86 = pow(mParameters[11], 4);
            const double var_x87 = pow(var_x58, 2) / pow((-0.12830724000000002 + var_x60 + 0.12830724000000002 * var_x59), 2);
            const double var_x88 = var_x86 * var_x87 / pow(var_x56, 4);
            const double var_x89 = 3.8254518568091561e-5 * var_x74 * var_x88;
            const double var_x90 = 5.9674869303184292e-5 * var_x77 * var_x84;
            const double var_x91 = 1 / (1.5889281507656066 + 0.0034246575342465752 * var_chaste_interface__intracellular_ions__ki + 0.004464285714285714 * var_chaste_interface__intracellular_ions__nai);
            const double var_x92 = var_x74 * var_x91;
            const double var_x93 = var_x77 * var_x92;
            const double var_x94 = 5.0473555837397499e-14 * var_x93;
            const double var_x95 = 3.4547447897515249e-17 * var_x88 * var_x92;
            const double var_x96 = var_x57 * var_x62 * var_x87;
            const double var_x97 = var_x74 * var_x96;
            const double var_x98 = var_x77 * var_x91;
            const double var_x99 = 5.3892050278274906e-17 * var_x84 * var_x98;
            const double var_x100 = pow(var_chaste_interface__intracellular_ions__ki, 2);
            const double var_x101 = var_x100 * var_x71;
            const double var_x102 = var_x101 * var_x91;
            const double var_x103 = var_x102 * var_x77;
            const double var_x104 = var_x102 * var_x88;
            const double var_x105 = var_x100 * var_x98;
            const double var_x106 = var_x105 * var_x82;
            const double var_x107 = var_x106 * var_x67;
            const double var_x108 = 4.3480418621224681e-15 * var_x104 - 6.7826975625137684e-15 * var_x107 - 7.3370863801098288e-12 * var_x103;
            const double var_x109 = var_x108 + var_x89 + var_x95 - var_x79 - var_x90 - var_x94 - var_x99 + 69764.851499334152 * var_x75 + 308.07541688865297 * var_x97 - 480.58009684871422 * var_x85;
            const double var_x110 = var_x101 * var_x63;
            const double var_x111 = var_x101 * var_x77;
            const double var_x112 = 2.6817254812739919 * var_x111 + 1648931648.7518551 * var_x110;
            const double var_x113 = 6585420658.1002293 * var_x63 + 9.6722701128385645e-12 * var_x98 + 10.71014095526842 * var_x77;
            const double var_x114 = 1.348266719199441e-12 * var_x93 + 1.4929407925401197 * var_x78;
            const double var_x115 = 6.3450816326903207e-5 * var_x102 + 5.041496472709802e-7 * var_x92 + 558246.7943749798 * var_x74;
            const double var_x116 = 1 / (var_x112 + var_x113 + var_x114 + var_x115 + 3.3937789869608994e-10 * var_x103 + 24953131.661984976 * var_x75);
            const double var_x117 = 18.240000000000002 * var_x116;
            const double var_x118 = 0.11595364093799532 * var_x111;
            const double var_x119 = 6.8715462616152846e-5 * var_x101 * var_x88;
            const double var_x120 = 42251.565962885674 * var_x101 * var_x96;
            const double var_x121 = var_x100 * var_x63;
            const double var_x122 = var_x121 * var_x82;
            const double var_x123 = 65910.035495601784 * var_x122 * var_x67;
            const double var_x124 = var_x100 * var_x77;
            const double var_x125 = var_x124 * var_x82;
            const double var_x126 = 0.00010719220641681538 * var_x125 * var_x67;
            const double var_x127 = var_x119 + var_x120 - var_x118 - var_x123 - var_x126 + 75027.240658870098 * var_x75 + 331.31366221294553 * var_x97 - 516.8304354876426 * var_x85;
            const double var_x128 = var_x116 * var_x91;
            const double var_x129 = 1.7312322557180369e-9 * var_x128;
            const double var_x130 = 0.46308984547237841 * var_x77;
            const double var_x131 = 3239.2616042380282 * var_x74;
            const double var_x132 = 4.1821392366626031e-13 * var_x98;
            const double var_x133 = 22.313881876433015 * var_x84;
            const double var_x134 = 0.00027443237406829952 * var_x88;
            const double var_x135 = 2.9253595571891104e-9 * var_x92;
            const double var_x136 = 2.0151545500310745e-11 * var_x84 * var_x91;
            const double var_x137 = 2.478383861409807e-16 * var_x88 * var_x91;
            const double var_x138 = 168742.18864055796 * var_x96;
            const double var_x139 = var_x100 * var_x91;
            const double var_x140 = var_x139 * var_x82;
            const double var_x141 = 2.5362152272937833e-9 * var_x140 * var_x67;
            const double var_x142 = var_x118 + var_x123 + var_x126 + var_x130 + var_x132 + var_x133 + var_x136 + var_x141 + var_x79 + var_x90 + var_x94 + var_x99 - var_x119 - var_x120 - var_x131 - var_x134 - var_x135 - var_x137 - var_x138 - var_x89 - var_x95 + 1.3565395125027537e-14 * var_x107 + 997.41053233635682 * var_x85 + 1.4674172760219658e-11 * var_x103 - 8.6960837242449363e-15 * var_x104 - 639.38907910159844 * var_x97 - 144792.09215820426 * var_x75;
            const double var_x143 = pow((var_x63 + 0.25039124064514068 * var_x110 + 7.6555420442407695e-17 * var_x92 + 8.4770104046173956e-5 * var_x74 + 2.0473509426327076e-22 * var_x93 + 0.0037891477184972245 * var_x75 + 9.6350437764149725e-15 * var_x102 + 4.0722159152815902e-10 * var_x111 + 1.4687399051632995e-21 * var_x98 + 1.6263412029867345e-9 * var_x77 + 5.1534733514501733e-20 * var_x103 + 2.2670393738686469e-10 * var_x78), (-2));
            const double var_x144 = 1.6968894934804497e-10 * var_x103;
            const double var_x145 = var_x143 * (var_x114 + var_x144 + 12023111.890251627 * var_x75);
            const double var_x146 = 4.2058888433195179e-19 * var_x145;
            const double var_x147 = var_x142 * var_x143;
            const double var_x148 = var_x112 + 12930019.771733347 * var_x75;
            const double var_x149 = var_x148 * var_x91;
            const double var_x150 = 3.9919794021487793e-29 * var_x149;
            const double var_x151 = var_x108 + var_x131 + var_x135 - var_x133 - var_x136 - var_x141;
            const double var_x152 = var_x116 * var_x63;
            const double var_x153 = 44401.235659032172 * var_x152;
            const double var_x154 = var_x116 * var_x74;
            const double var_x155 = var_x113 * var_x154;
            const double var_x156 = var_x154 * (var_x134 + var_x137 + var_x138 - var_x130 - var_x132);
            const double var_x157 = var_x115 + var_x144;
            const double var_x158 = var_x157 * var_x63;
            const double var_x159 = 1.0238303820609877e-15 * var_x158;
            const double var_x160 = var_x113 * var_x74;
            const double var_x161 = 5.8628014788099666e-20 * var_x160;
            const double var_x162 = var_x113 * var_x116;
            const double var_x163 = var_x162 * var_x84;
            const double var_x164 = var_x116 * var_x157 * var_x96;
            const double var_x165 = exp(0.78953107960741553 - 0.054525627044711013 * var_chaste_interface__membrane__v);
            const double var_x166 = 1.0 + var_x165;
            const double var_x167 = mParameters[14] / var_x166;
            const double var_x168 = 0.0066137566137566143 * var_x35 / pow(var_x36, 2);
            const double var_x169 = var_x51 * (var_x168 * var_chaste_interface__Ito__iS - var_x168 * var_chaste_interface__Ito__iF) + var_x54 * (var_x168 * var_chaste_interface__Ito__iSp - var_x168 * var_chaste_interface__Ito__iFp);
            const double var_x170 = -var_chaste_interface__membrane__v;
            const double var_x171 = 1 / var_chaste_interface__intracellular_ions__ki;
            const double var_x172 = log(var_x171 * mParameters[10]);
            const double var_x173 = 26.712338705498265 * var_x172;
            const double var_x174 = (var_x170 + var_x173) * mParameters[24];
            const double var_x175 = var_x50 * var_chaste_interface__INaL__hL;
            const double var_x176 = var_x49 * var_chaste_interface__INaL__hLp;
            const double var_x177 = mParameters[19] * var_chaste_interface__INaL__mL;
            const double var_x178 = 0.98999999999999999 * var_chaste_interface__INa__hf;
            const double var_x179 = var_x178 + 0.010000000000000009 * var_chaste_interface__INa__hs;
            const double var_x180 = var_x179 * var_x50;
            const double var_x181 = var_x178 + 0.010000000000000009 * var_chaste_interface__INa__hsp;
            const double var_x182 = var_x181 * var_chaste_interface__INa__jp;
            const double var_x183 = var_x180 * var_chaste_interface__INa__j + var_x182 * var_x49;
            const double var_x184 = pow(var_chaste_interface__INa__m, 3) * mParameters[17];
            const double var_x185 = var_x183 * var_x184;
            const double var_x186 = 1 / (13.5 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * mParameters[11]) * mParameters[11]);
            const double var_x187 = exp(0.019556505544476088 * var_chaste_interface__membrane__v);
            const double var_x188 = 1 / var_x187;
            const double var_x189 = 1.0 + 0.011348161597821153 * (1.0 + var_x188) * mParameters[11];
            const double var_x190 = pow(var_x189, (-2));
            const double var_x191 = pow(var_x187, 2);
            const double var_x192 = var_x190 / var_x191;
            const double var_x193 = var_x186 * var_x192 * var_x86;
            const double var_x194 = 1 / var_x189;
            const double var_x195 = var_x186 * var_x194 * var_x76;
            const double var_x196 = var_x188 * var_x195;
            const double var_x197 = 0.0020148014998402175 * var_x193 - 0.17754430816591998 * var_x196;
            const double var_x198 = 0.011348161597821153 + 0.011348161597821153 * var_x187;
            const double var_x199 = 1.0 + var_x198 * var_chaste_interface__intracellular_ions__nass;
            const double var_x200 = 1 / var_x199;
            const double var_x201 = 1 / exp(0.0062517925458030373 * var_chaste_interface__membrane__v);
            const double var_x202 = var_x200 * var_x201;
            const double var_x203 = var_x187 * var_x200;
            const double var_x204 = 56.740807989105761 * var_x203;
            const double var_x205 = var_x204 * var_chaste_interface__intracellular_ions__nass;
            const double var_x206 = var_x205 + 60000.0 * var_x202;
            const double var_x207 = 1.0 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * var_chaste_interface__intracellular_ions__nass) * var_chaste_interface__intracellular_ions__nass;
            const double var_x208 = 1 / var_x207;
            const double var_x209 = 1500000.0 * var_x208;
            const double var_x210 = var_x209 * var_chaste_interface__intracellular_ions__cass;
            const double var_x211 = var_x197 * var_x206 * var_x210;
            const double var_x212 = var_x203 * var_chaste_interface__intracellular_ions__nass;
            const double var_x213 = 1.1096519260369999 * var_x212;
            const double var_x214 = 0.012592509374001359 * var_x191;
            const double var_x215 = pow(var_x199, (-2));
            const double var_x216 = pow(var_chaste_interface__intracellular_ions__nass, 2);
            const double var_x217 = var_x215 * var_x216;
            const double var_x218 = var_x214 * var_x217;
            const double var_x219 = var_x187 * var_x201;
            const double var_x220 = 13.315823112443999 * var_x219;
            const double var_x221 = var_x215 * var_chaste_interface__intracellular_ions__nass;
            const double var_x222 = var_x213 - var_x218 - 375.10755274818223 * var_x202 - var_x220 * var_x221;
            const double var_x223 = var_x186 * mParameters[9];
            const double var_x224 = 1500000.0 * var_x223;
            const double var_x225 = var_x224 + 9.0785292782569211 * var_x196;
            const double var_x226 = var_x210 * var_x225;
            const double var_x227 = var_x222 * var_x226;
            const double var_x228 = 5000.0 + var_x206;
            const double var_x229 = pow(var_chaste_interface__intracellular_ions__nass, 3);
            const double var_x230 = var_x203 * var_x208;
            const double var_x231 = var_x229 * var_x230;
            const double var_x232 = var_x223 * var_x231;
            const double var_x233 = var_x228 * var_x232;
            const double var_x234 = 266316.46224887995 * var_x233;
            const double var_x235 = 13617793.917385383 * var_x232;
            const double var_x236 = var_x222 * var_x235;
            const double var_x237 = var_x208 * var_x215;
            const double var_x238 = var_x237 * pow(var_chaste_interface__intracellular_ions__nass, 4);
            const double var_x239 = var_x191 * var_x238;
            const double var_x240 = 3022.2022497603261 * var_x223;
            const double var_x241 = var_x228 * var_x239 * var_x240;
            const double var_x242 = var_x211 + var_x227 + var_x234 + var_x236 - var_x241;
            const double var_x243 = var_x206 * var_x225;
            const double var_x244 = 13617793.917385383 * var_x233 + var_x210 * var_x243;
            const double var_x245 = var_x210 + 9.0785292782569211 * var_x231;
            const double var_x246 = var_x188 * mParameters[11];
            const double var_x247 = var_x194 * var_x246;
            const double var_x248 = 56.740807989105761 * var_x247;
            const double var_x249 = var_x248 + 60000.0 * var_x194;
            const double var_x250 = var_x245 * var_x249;
            const double var_x251 = 5000.0 + var_x249;
            const double var_x252 = var_x196 * var_x251;
            const double var_x253 = var_x208 * var_x252;
            const double var_x254 = var_x253 * var_chaste_interface__intracellular_ions__cass;
            const double var_x255 = 13617793.917385383 * var_x254 + var_x224 * var_x250;
            const double var_x256 = var_x206 * var_x245;
            const double var_x257 = var_x231 * var_x251;
            const double var_x258 = 5000.0 * var_x256 + 45392.646391284608 * var_x257;
            const double var_x259 = var_x225 * var_x249;
            const double var_x260 = 5000.0 * var_x259;
            const double var_x261 = var_x196 * var_x228;
            const double var_x262 = var_x260 + 45392.646391284608 * var_x261;
            const double var_x263 = 1 / (var_x244 + var_x255 + var_x258 + var_x262);
            const double var_x264 = 10000.0 * var_x263;
            const double var_x265 = 0.00036716666666666668 * var_x259;
            const double var_x266 = var_x208 * var_x243;
            const double var_x267 = 0.11015000000000001 * var_x223;
            const double var_x268 = pow((var_x233 + var_x254 + var_x265 + 0.0033333333333333331 * var_x257 + 0.0033333333333333331 * var_x261 + 0.00036716666666666668 * var_x256 + var_x250 * var_x267 + 0.11015000000000001 * var_x266 * var_chaste_interface__intracellular_ions__cass), (-2));
            const double var_x269 = 62.962546870006797 * var_x191;
            const double var_x270 = 66579.115562219988 * var_x219;
            const double var_x271 = var_x245 * (5548.259630184999 * var_x212 - 1875537.7637409114 * var_x202 - var_x217 * var_x269 - var_x221 * var_x270);
            const double var_x272 = 283704.03994552878 * var_x203;
            const double var_x273 = 300000000.0 * var_x202 + var_x272 * var_chaste_interface__intracellular_ions__nass;
            const double var_x274 = 0.0020148014998402175 * var_x191;
            const double var_x275 = 0.17754430816591998 * var_x231 - var_x238 * var_x274;
            const double var_x276 = var_x273 * var_x275;
            const double var_x277 = var_x224 * var_x249;
            const double var_x278 = var_x275 * var_x277;
            const double var_x279 = var_x190 * var_x246;
            const double var_x280 = var_x192 * pow(mParameters[11], 2);
            const double var_x281 = 0.012592509374001359 * var_x280;
            const double var_x282 = 1.1096519260369999 * var_x247;
            const double var_x283 = var_x281 - var_x282 + 13.315823112443999 * var_x279;
            const double var_x284 = var_x224 * var_x283;
            const double var_x285 = var_x245 * var_x284;
            const double var_x286 = 10.074007499201088 * var_x251;
            const double var_x287 = var_x239 * var_x286;
            const double var_x288 = 887.72154082959992 * var_x261;
            const double var_x289 = 10.074007499201088 * var_x193;
            const double var_x290 = var_x228 * var_x289;
            const double var_x291 = 45392.646391284608 * var_x196;
            const double var_x292 = var_x222 * var_x291;
            const double var_x293 = 45392.646391284608 * var_x283;
            const double var_x294 = var_x231 * var_x293;
            const double var_x295 = 887.72154082959992 * var_x257;
            const double var_x296 = 266316.46224887995 * var_x254;
            const double var_x297 = var_x208 * var_chaste_interface__intracellular_ions__cass;
            const double var_x298 = 3022.2022497603261 * var_x193 * var_x251;
            const double var_x299 = var_x297 * var_x298;
            const double var_x300 = 13617793.917385383 * var_x196 * var_x283;
            const double var_x301 = var_x297 * var_x300;
            const double var_x302 = var_x197 * (300000000.0 * var_x194 + 283704.03994552878 * var_x247);
            const double var_x303 = var_x225 * (66579.115562219988 * var_x279 + 62.962546870006797 * var_x280 - 5548.259630184999 * var_x247);
            const double var_x304 = -var_x302 - var_x303;
            const double var_x305 = var_x268 * (var_x241 + var_x287 + var_x288 + var_x296 + var_x304 - var_x211 - var_x227 - var_x234 - var_x236 - var_x271 - var_x276 - var_x278 - var_x285 - var_x290 - var_x292 - var_x294 - var_x295 - var_x299 - var_x301);
            const double var_x306 = 5.3924544444444452e-11 * var_x244;
            const double var_x307 = 3000000.0 * var_x223;
            const double var_x308 = var_x263 * (var_x271 + var_x276 + var_x294 + var_x295 - var_x287);
            const double var_x309 = var_x205 * var_x263;
            const double var_x310 = var_x244 * var_x263;
            const double var_x311 = var_x255 * var_x263;
            const double var_x312 = var_x248 * var_x263;
            const double var_x313 = 1.6177363333333335e-8 * var_x223;
            const double var_x314 = var_x258 * var_x305;
            const double var_x315 = 0.5326329244977599 * var_x263;
            const double var_x316 = var_x196 * var_x258;
            const double var_x317 = var_x231 * var_x262;
            const double var_x318 = 3.0597222222222222e-13 * var_x305;
            const double var_x319 = var_x212 * var_x255;
            const double var_x320 = var_x302 + var_x303;
            const double var_x321 = 27.235587834770765 * var_x263;
            const double var_x322 = var_x244 * var_x247;
            const double var_x323 = 27.235587834770765 * var_x196;
            const double var_x324 = 0.0060444044995206529 * var_x263;
            const double var_x325 = 1.4686666666666667e-13 * var_x317;
            const double var_x326 = var_x213 * var_x311 + var_x242 * var_x264 + var_x282 * var_x310 + var_x305 * var_x306 + var_x305 * var_x325 + var_x309 * (var_x278 + var_x285 + var_x299 + var_x301 - var_x296) + var_x315 * var_x316 + var_x315 * var_x317 + var_x318 * var_x319 - var_x218 * var_x311 - var_x242 * var_x312 - var_x281 * var_x310 - var_x307 * var_x308 - var_x308 * var_x323 - var_x313 * var_x314 - var_x318 * var_x322 - 1.4686666666666667e-13 * var_x196 * var_x314 + var_x231 * var_x321 * (var_x290 + var_x292 + var_x320 - var_x288) - var_x193 * var_x258 * var_x324 - var_x239 * var_x262 * var_x324;
            const double var_x327 = pow(var_chaste_interface__intracellular_ions__cass, (-2));
            const double var_x328 = 1.0 + 2.2499999999999996e-8 * var_x327;
            const double var_x329 = mParameters[22] / var_x328;
            const double var_x330 = 0.20000000000000001 * var_x329;
            const double var_x331 = 1.0 + var_x198 * var_chaste_interface__intracellular_ions__nai;
            const double var_x332 = 1 / var_x331;
            const double var_x333 = var_x201 * var_x332;
            const double var_x334 = var_x187 * var_x332;
            const double var_x335 = 56.740807989105761 * var_x334;
            const double var_x336 = var_x335 * var_chaste_interface__intracellular_ions__nai;
            const double var_x337 = var_x336 + 60000.0 * var_x333;
            const double var_x338 = 1.0 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * var_chaste_interface__intracellular_ions__nai) * var_chaste_interface__intracellular_ions__nai;
            const double var_x339 = 1 / var_x338;
            const double var_x340 = 1500000.0 * var_x339;
            const double var_x341 = var_x340 * var_chaste_interface__intracellular_ions__cai;
            const double var_x342 = var_x197 * var_x337 * var_x341;
            const double var_x343 = var_x334 * var_chaste_interface__intracellular_ions__nai;
            const double var_x344 = 1.1096519260369999 * var_x343;
            const double var_x345 = pow(var_x331, (-2));
            const double var_x346 = pow(var_chaste_interface__intracellular_ions__nai, 2);
            const double var_x347 = var_x345 * var_x346;
            const double var_x348 = var_x214 * var_x347;
            const double var_x349 = var_x345 * var_chaste_interface__intracellular_ions__nai;
            const double var_x350 = var_x344 - var_x348 - 375.10755274818223 * var_x333 - var_x220 * var_x349;
            const double var_x351 = var_x225 * var_x341;
            const double var_x352 = var_x350 * var_x351;
            const double var_x353 = 5000.0 + var_x337;
            const double var_x354 = var_x334 * var_x339;
            const double var_x355 = var_x354 * var_x64;
            const double var_x356 = var_x223 * var_x355;
            const double var_x357 = var_x353 * var_x356;
            const double var_x358 = 266316.46224887995 * var_x357;
            const double var_x359 = 13617793.917385383 * var_x356;
            const double var_x360 = var_x350 * var_x359;
            const double var_x361 = var_x339 * var_x345;
            const double var_x362 = var_x361 * var_x80;
            const double var_x363 = var_x191 * var_x362;
            const double var_x364 = var_x240 * var_x353 * var_x363;
            const double var_x365 = var_x342 + var_x352 + var_x358 + var_x360 - var_x364;
            const double var_x366 = var_x225 * var_x337;
            const double var_x367 = 13617793.917385383 * var_x357 + var_x341 * var_x366;
            const double var_x368 = var_x341 + 9.0785292782569211 * var_x355;
            const double var_x369 = var_x252 * var_x339;
            const double var_x370 = var_x369 * var_chaste_interface__intracellular_ions__cai;
            const double var_x371 = 13617793.917385383 * var_x370 + var_x277 * var_x368;
            const double var_x372 = var_x337 * var_x368;
            const double var_x373 = var_x251 * var_x355;
            const double var_x374 = 5000.0 * var_x372 + 45392.646391284608 * var_x373;
            const double var_x375 = var_x260 + var_x291 * var_x353;
            const double var_x376 = 1 / (var_x367 + var_x371 + var_x374 + var_x375);
            const double var_x377 = 10000.0 * var_x376;
            const double var_x378 = var_x339 * var_x366;
            const double var_x379 = var_x196 * var_x353;
            const double var_x380 = pow((var_x265 + var_x357 + var_x370 + 0.0033333333333333331 * var_x373 + 0.0033333333333333331 * var_x379 + 0.00036716666666666668 * var_x372 + 0.11015000000000001 * var_x378 * var_chaste_interface__intracellular_ions__cai + var_x249 * var_x267 * var_x368), (-2));
            const double var_x381 = var_x368 * (5548.259630184999 * var_x343 - 1875537.7637409114 * var_x333 - var_x269 * var_x347 - var_x270 * var_x349);
            const double var_x382 = 283704.03994552878 * var_x334;
            const double var_x383 = 300000000.0 * var_x333 + var_x382 * var_chaste_interface__intracellular_ions__nai;
            const double var_x384 = 0.17754430816591998 * var_x355 - var_x274 * var_x362;
            const double var_x385 = var_x383 * var_x384;
            const double var_x386 = var_x277 * var_x384;
            const double var_x387 = var_x284 * var_x368;
            const double var_x388 = var_x286 * var_x363;
            const double var_x389 = 887.72154082959992 * var_x379;
            const double var_x390 = var_x289 * var_x353;
            const double var_x391 = var_x291 * var_x350;
            const double var_x392 = var_x293 * var_x355;
            const double var_x393 = 887.72154082959992 * var_x373;
            const double var_x394 = 266316.46224887995 * var_x370;
            const double var_x395 = var_x339 * var_chaste_interface__intracellular_ions__cai;
            const double var_x396 = var_x298 * var_x395;
            const double var_x397 = var_x300 * var_x395;
            const double var_x398 = var_x380 * (var_x304 + var_x364 + var_x388 + var_x389 + var_x394 - var_x342 - var_x352 - var_x358 - var_x360 - var_x381 - var_x385 - var_x386 - var_x387 - var_x390 - var_x391 - var_x392 - var_x393 - var_x396 - var_x397);
            const double var_x399 = 5.3924544444444452e-11 * var_x367;
            const double var_x400 = var_x381 + var_x385 + var_x392 + var_x393 - var_x388;
            const double var_x401 = var_x307 * var_x376;
            const double var_x402 = var_x336 * var_x376;
            const double var_x403 = var_x367 * var_x376;
            const double var_x404 = var_x371 * var_x376;
            const double var_x405 = var_x248 * var_x376;
            const double var_x406 = var_x313 * var_x374;
            const double var_x407 = 0.5326329244977599 * var_x376;
            const double var_x408 = var_x196 * var_x374;
            const double var_x409 = var_x355 * var_x375;
            const double var_x410 = 3.0597222222222222e-13 * var_x398;
            const double var_x411 = var_x343 * var_x371;
            const double var_x412 = 27.235587834770765 * var_x376;
            const double var_x413 = var_x247 * var_x367;
            const double var_x414 = var_x323 * var_x376;
            const double var_x415 = 0.0060444044995206529 * var_x376;
            const double var_x416 = 1.4686666666666667e-13 * var_x398;
            const double var_x417 = var_x282 * var_x403 + var_x344 * var_x404 + var_x365 * var_x377 + var_x398 * var_x399 + var_x402 * (var_x386 + var_x387 + var_x396 + var_x397 - var_x394) + var_x407 * var_x408 + var_x407 * var_x409 + var_x409 * var_x416 + var_x410 * var_x411 - var_x281 * var_x403 - var_x348 * var_x404 - var_x365 * var_x405 - var_x398 * var_x406 - var_x400 * var_x401 - var_x400 * var_x414 - var_x408 * var_x416 - var_x410 * var_x413 + var_x355 * var_x412 * (var_x320 + var_x390 + var_x391 - var_x389) - var_x193 * var_x374 * var_x415 - var_x363 * var_x375 * var_x415;
            const double var_x418 = 1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__intracellular_ions__cai, 2);
            const double var_x419 = mParameters[22] / var_x418;
            const double var_x420 = 0.80000000000000004 * var_x419;
            const double var_x421 = sqrt(mParameters[10]);
            const double var_x422 = var_x421 * mParameters[20];
            const double var_x423 = 0.43033148291193518 * var_x422;
            const double var_x424 = 1 / var_chaste_interface__intracellular_ions__cai;
            const double var_x425 = pow(var_x424, 1.3999999999999999);
            const double var_x426 = 1.0 + 6.4818210260626455e-7 * var_x425;
            const double var_x427 = 1 / var_x426;
            const double var_x428 = -1.0 - 0.59999999999999998 * var_x427;
            const double var_x429 = mParameters[21] * var_chaste_interface__IKs__xs2;
            const double var_x430 = var_x428 * var_x429;
            const double var_x431 = var_x430 * var_chaste_interface__IKs__xs1;
            const double var_x432 = exp(11.145054250500367 + 0.10534077741493732 * var_chaste_interface__membrane__v - 0.27388602127883704 * mParameters[10]);
            const double var_x433 = 1.0 + var_x432;
            const double var_x434 = var_x421 * mParameters[18] / var_x433;
            const double var_x435 = var_x434;
            const double var_x436 = -var_x173 + var_chaste_interface__membrane__v;
            const double var_x437 = var_x165 * var_x436 * mParameters[14] / pow(var_x166, 2);
            const double var_x438 = var_x2 * (var_x20 + var_x1 * var_chaste_interface__intracellular_ions__cass);
            const double var_x439 = var_x5 * (var_x20 + var_x4 * var_chaste_interface__intracellular_ions__cass);
            const double var_x440 = var_x25 * var_chaste_interface__intracellular_ions__cass;
            const double var_x441 = var_x20 + var_x440;
            const double var_x442 = var_x27 * var_x441;
            const double var_x443 = ((var_x24) ? (9.9999999999999995e-8 * var_x438 - 9.9999999999999995e-8 * var_x439) : (var_x28 * var_x442 + var_x32 * var_x440 - var_x33 * var_x441));
            const double var_x444 = -1.0 + var_x49;
            const double var_x445 = 1.0 - var_chaste_interface__ICaL__nca;
            const double var_x446 = 0.40000000000000002 * var_chaste_interface__ICaL__fs;
            const double var_x447 = 0.59999999999999998 * var_chaste_interface__ICaL__ff;
            const double var_x448 = 0.10000000000000001 * var_chaste_interface__membrane__v;
            const double var_x449 = exp(-1.0 + var_x448);
            const double var_x450 = 1.0 + var_x449;
            const double var_x451 = 0.59999999999999998 / var_x450;
            const double var_x452 = 0.29999999999999999 + var_x451;
            const double var_x453 = 0.69999999999999996 - var_x451;
            const double var_x454 = var_x453 * var_chaste_interface__ICaL__fcas;
            const double var_x455 = var_x454 + var_x452 * var_chaste_interface__ICaL__fcaf;
            const double var_x456 = var_x455 * var_chaste_interface__ICaL__jca;
            const double var_x457 = (var_x445 * (var_x446 + var_x447) + var_x456 * var_chaste_interface__ICaL__nca) * mParameters[12];
            const double var_x458 = var_x457 * var_chaste_interface__ICaL__d;
            const double var_x459 = var_x444 * var_x458;
            const double var_x460 = -0.75 * mParameters[10];
            const double var_x461 = 0.75 * var_chaste_interface__intracellular_ions__kss;
            const double var_x462 = var_x460 + var_x1 * var_x461;
            const double var_x463 = var_x460 + var_x4 * var_x461;
            const double var_x464 = var_x460 + var_x461 * var_x9;
            const double var_x465 = var_x17 * var_x9;
            const double var_x466 = 0.0010510840305073261 * var_x465;
            const double var_x467 = ((var_x8) ? (var_x3 * var_x462 - var_x463 * var_x6) : (var_x13 * var_x464 + var_x466 * var_chaste_interface__intracellular_ions__kss - var_x18 * var_x464));
            const double var_x468 = -0.00035740000000000001 + 0.00035740000000000001 * var_x48;
            const double var_x469 = var_x458 * var_x468;
            const double var_x470 = -0.75 * mParameters[11];
            const double var_x471 = 0.75 * var_chaste_interface__intracellular_ions__nass;
            const double var_x472 = var_x470 + var_x1 * var_x471;
            const double var_x473 = var_x470 + var_x4 * var_x471;
            const double var_x474 = var_x470 + var_x471 * var_x9;
            const double var_x475 = ((var_x8) ? (var_x3 * var_x472 - var_x473 * var_x6) : (var_x13 * var_x474 + var_x466 * var_chaste_interface__intracellular_ions__nass - var_x18 * var_x474));
            const double var_x476 = -0.00125 + 0.00125 * var_x48;
            const double var_x477 = var_x458 * var_x476;
            const double var_x478 = 0.59999999999999998 * var_chaste_interface__ICaL__ffp;
            const double var_x479 = var_x454 + var_x452 * var_chaste_interface__ICaL__fcafp;
            const double var_x480 = var_x479 * var_chaste_interface__ICaL__jca;
            const double var_x481 = var_x445 * (var_x446 + var_x478) + var_x480 * var_chaste_interface__ICaL__nca;
            const double var_x482 = var_x48 * var_x481;
            const double var_x483 = var_x482 * mParameters[12];
            const double var_x484 = var_x483 * var_chaste_interface__ICaL__d;
            const double var_x485 = 1.1000000000000001 * var_x484;
            const double var_x486 = var_x443 * var_x485;
            const double var_x487 = 0.0013750000000000001 * var_x484;
            const double var_x488 = 0.00039314000000000005 * var_x484;
            const double var_x489 = var_x421 * var_x432 * var_x436 * mParameters[18] * var_chaste_interface__IK1__xk1 / pow(var_x433, 2);
            const double var_x490 = 2.671233870549826e-13 * var_x439;
            const double var_x491 = 0.5 + 374358.83507802623 * var_chaste_interface__membrane__v;
            const double var_x492 = 0.14974353403121046 * var_x16;
            const double var_x493 = ((var_x24) ? (var_x490 + var_x491 * (-var_x490 + 2.671233870549826e-13 * var_x438)) : (var_x442 * var_x492));
            const double var_x494 = var_x493 * mParameters[12];
            const double var_x495 = var_x444 * var_x494;
            const double var_x496 = 0.059999999999999998 * var_x449 / pow(var_x450, 2);
            const double var_x497 = var_x496 * var_chaste_interface__ICaL__fcas;
            const double var_x498 = var_chaste_interface__ICaL__d * var_chaste_interface__ICaL__nca;
            const double var_x499 = var_x498 * var_chaste_interface__ICaL__jca;
            const double var_x500 = var_x499 * (var_x497 - var_x496 * var_chaste_interface__ICaL__fcaf);
            const double var_x501 = 2.671233870549826e-13 * var_x5;
            const double var_x502 = var_x463 * var_x501;
            const double var_x503 = 2.671233870549826e-13 * var_x2;
            const double var_x504 = 0.5 + 187179.41753901311 * var_chaste_interface__membrane__v;
            const double var_x505 = 0.037435883507802616 * var_x17;
            const double var_x506 = ((var_x8) ? (var_x502 + var_x504 * (-var_x502 + var_x462 * var_x503)) : (var_x464 * var_x505));
            const double var_x507 = var_x468 * var_x506;
            const double var_x508 = var_x500 * mParameters[12];
            const double var_x509 = var_x473 * var_x501;
            const double var_x510 = ((var_x8) ? (var_x509 + var_x504 * (-var_x509 + var_x472 * var_x503)) : (var_x474 * var_x505));
            const double var_x511 = var_x476 * var_x510;
            const double var_x512 = var_x48 * var_x494;
            const double var_x513 = 1.1000000000000001 * var_x512;
            const double var_x514 = var_x499 * (var_x497 - var_x496 * var_chaste_interface__ICaL__fcafp);
            const double var_x515 = var_x513 * var_x514;
            const double var_x516 = 0.0013750000000000001 * var_x510;
            const double var_x517 = var_x48 * mParameters[12];
            const double var_x518 = var_x514 * var_x517;
            const double var_x519 = 0.00039314000000000005 * var_x506;
            
            partialF = var_x431 - var_x185 - var_x19 - var_x34 - var_x486 - var_x515 + 0.10534077741493732 * var_x489 - var_x167 - 0.054525627044711013 * var_x437 + var_x169 * var_x174 + var_x177 * (-var_x175 - var_x176) + var_x443 * var_x459 + var_x467 * var_x469 + var_x475 * var_x477 + var_x495 * var_x500 + var_x507 * var_x508 + var_x508 * var_x511 + (-var_x52 - var_x55) * mParameters[24] + (0.014753396606870788 * var_x155 + 2.5425659820598794 * var_x156 - 1.1377195280964303 * var_x164 - 0.00010162981240266993 * var_x163 + var_x127 * var_x129 + var_x147 * var_x150 + var_x147 * var_x161 - var_x109 * var_x117 - var_x142 * var_x146 - var_x147 * var_x159 - var_x151 * var_x153) * mParameters[23] - var_x326 * var_x330 - var_x417 * var_x420 - var_x423 * var_chaste_interface__IKr__O - var_x435 * var_chaste_interface__IK1__xk1 - var_x467 * var_x488 - var_x475 * var_x487 - var_x516 * var_x518 - var_x518 * var_x519;
        }
        else
        {
            const double y_save = rY[0];
            rY[0] += delta;
            const double temp = EvaluateYDerivative0(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[0])/delta;
            rY[0] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative1(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__intracellular_ions__cai = rY[1];
        // Units: millimolar; Initial value: 8.6e-05
        double var_chaste_interface__CaMK__CaMKt = rY[2];
        // Units: millimolar; Initial value: 0.0125840447
        double var_chaste_interface__intracellular_ions__nai = rY[3];
        // Units: millimolar; Initial value: 7.268004498
        double var_chaste_interface__intracellular_ions__cass = rY[7];
        // Units: millimolar; Initial value: 8.49e-05
        double var_chaste_interface__intracellular_ions__cansr = rY[8];
        // Units: millimolar; Initial value: 1.619574538
        

        // Mathematics
        const double var_CaMK__CaMKo = 0.050000000000000003; // dimensionless
        const double var_CaMK__KmCaM = 0.0015; // millimolar
        const double var_CaMK__KmCaMK = 0.14999999999999999; // millimolar
        const double var_INaCa_i__KmCaAct = 0.00014999999999999999; // millimolar
        const double var_INaCa_i__kasymm = 12.5; // dimensionless
        const double var_INaCa_i__kcaoff = 5000.0; // per_millisecond
        const double var_INaCa_i__k2_i = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k5_i = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__kcaon = 1500000.0; // per_millisecond
        const double var_INaCa_i__kna1 = 15.0; // per_millisecond
        const double var_INaCa_i__kna2 = 5.0; // per_millisecond
        const double var_INaCa_i__kna3 = 88.120000000000005; // per_millisecond
        const double var_INaCa_i__qca = 0.16700000000000001; // dimensionless
        const double var_INaCa_i__qna = 0.52239999999999998; // dimensionless
        const double var_INaCa_i__wca = 60000.0; // dimensionless
        const double var_INaCa_i__wna = 60000.0; // dimensionless
        const double var_INaCa_i__wnaca = 5000.0; // dimensionless
        const double var_IpCa__KmCap = 0.00050000000000000001; // millimolar
        const double var_cell_geometry__L = 0.01; // centimeter
        const double var_cell_geometry__rad = 0.0011000000000000001; // centimeter
        const double var_cell_geometry__Ageo = 6.2800000000000002 * pow(var_cell_geometry__rad, 2) + 6.2800000000000002 * var_cell_geometry__L * var_cell_geometry__rad; // centimeter_squared
        const double var_cell_geometry__Acap = 2.0 * var_cell_geometry__Ageo; // centimeter_squared
        const double var_cell_geometry__vcell = 3140.0 * pow(var_cell_geometry__rad, 2) * var_cell_geometry__L; // microliter
        const double var_cell_geometry__vmyo = 0.68000000000000005 * var_cell_geometry__vcell; // microliter
        const double var_cell_geometry__vnsr = 0.055199999999999999 * var_cell_geometry__vcell; // microliter
        const double var_cell_geometry__vss = 0.02 * var_cell_geometry__vcell; // microliter
        const double var_environment__celltype = 0; // dimensionless
        const double var_INaCa_i__Gncx = ((var_environment__celltype == 1.0) ? (1.1000000000000001 * mParameters[22]) : ((var_environment__celltype == 2.0) ? (1.3999999999999999 * mParameters[22]) : (mParameters[22]))); // milliS_per_microF
        const double var_SERCA__upScale = ((var_environment__celltype == 1.0) ? (1.3) : (1.0)); // dimensionless
        const double var_INaCa_i__h10_i = 1.0 + (1.0 + mParameters[11] / var_INaCa_i__kna2) * mParameters[11] / var_INaCa_i__kna1 + var_INaCa_i__kasymm; // dimensionless
        const double var_INaCa_i__h11_i = pow(mParameters[11], 2) / (var_INaCa_i__h10_i * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h12_i = 1 / var_INaCa_i__h10_i; // dimensionless
        const double var_INaCa_i__k1_i = var_INaCa_i__h12_i * var_INaCa_i__kcaon * mParameters[9]; // dimensionless
        const double var_INaCa_i__allo_i = 1 / (1.0 + pow(var_INaCa_i__KmCaAct, 2) / pow(var_chaste_interface__intracellular_ions__cai, 2)); // dimensionless
        const double var_IpCa__IpCa = mParameters[16] * var_chaste_interface__intracellular_ions__cai / (var_IpCa__KmCap + var_chaste_interface__intracellular_ions__cai); // microA_per_microF
        const double var_SERCA__Jupnp = 0.0043750000000000004 * var_SERCA__upScale * var_chaste_interface__intracellular_ions__cai / (0.00092000000000000003 + var_chaste_interface__intracellular_ions__cai); // millimolar_per_millisecond
        const double var_SERCA__Jupp = 0.01203125 * var_SERCA__upScale * var_chaste_interface__intracellular_ions__cai / (0.00075000000000000002 + var_chaste_interface__intracellular_ions__cai); // millimolar_per_millisecond
        const double var_SERCA__Jleak = 0.00026249999999999998 * var_chaste_interface__intracellular_ions__cansr; // millimolar_per_millisecond
        const double var_CaMK__CaMKb = (1.0 - var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKo / (1.0 + var_CaMK__KmCaM / var_chaste_interface__intracellular_ions__cass); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_SERCA__fJupp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_SERCA__Jup = (-var_SERCA__Jleak + (1.0 - var_SERCA__fJupp) * var_SERCA__Jupnp + var_SERCA__Jupp * var_SERCA__fJupp) * mParameters[8]; // millimolar_per_millisecond
        const double var_diff__Jdiff = 5.0 * var_chaste_interface__intracellular_ions__cass - 5.0 * var_chaste_interface__intracellular_ions__cai; // millimolar_per_millisecond
        const double var_intracellular_ions__cm = 1.0; // microF_per_centimeter_squared
        const double var_intracellular_ions__cmdnmax_b = 0.050000000000000003; // millimolar
        const double var_intracellular_ions__cmdnmax = ((var_environment__celltype == 1.0) ? (1.3 * var_intracellular_ions__cmdnmax_b) : (var_intracellular_ions__cmdnmax_b)); // millimolar
        const double var_intracellular_ions__kmcmdn = 0.0023800000000000002; // millimolar
        const double var_intracellular_ions__kmtrpn = 0.00050000000000000001; // millimolar
        const double var_INaCa_i__h4_i = 1.0 + (1.0 + var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna2) * var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna1; // dimensionless
        const double var_INaCa_i__h5_i = pow(var_chaste_interface__intracellular_ions__nai, 2) / (var_INaCa_i__h4_i * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h6_i = 1 / var_INaCa_i__h4_i; // dimensionless
        const double var_INaCa_i__k6_i = var_INaCa_i__h6_i * var_INaCa_i__kcaon * var_chaste_interface__intracellular_ions__cai; // dimensionless
        const double var_intracellular_ions__trpnmax = 0.070000000000000007; // millimolar
        const double var_intracellular_ions__Bcai = 1 / (1.0 + var_intracellular_ions__cmdnmax * var_intracellular_ions__kmcmdn / pow((var_chaste_interface__intracellular_ions__cai + var_intracellular_ions__kmcmdn), 2) + var_intracellular_ions__kmtrpn * var_intracellular_ions__trpnmax / pow((var_chaste_interface__intracellular_ions__cai + var_intracellular_ions__kmtrpn), 2)); // dimensionless
        const double var_ICab__ICab = ((fabs(var_chaste_interface__membrane__v) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cai * exp(9.9999999999999995e-8)) * mParameters[13] / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cai * exp(-9.9999999999999995e-8)) * mParameters[13] / (-1.0 + exp(-9.9999999999999995e-8))) + 2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cai * exp(-9.9999999999999995e-8)) * mParameters[13] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.14974353403121046 * pow(var_chaste_interface__membrane__v, 2) * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cai * exp(0.074871767015605231 * var_chaste_interface__membrane__v)) * mParameters[13] / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__v)))); // microA_per_microF
        const double var_physical_constants__F = 96485.0; // coulomb_per_mole
        const double var_physical_constants__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_physical_constants__T = 310.0; // kelvin
        const double var_INaCa_i__hca = exp(var_INaCa_i__qca * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // dimensionless
        const double var_INaCa_i__hna = exp(var_INaCa_i__qna * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // dimensionless
        const double var_INaCa_i__h1_i = 1.0 + (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h2_i = var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nai / (var_INaCa_i__h1_i * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h3_i = 1 / var_INaCa_i__h1_i; // dimensionless
        const double var_INaCa_i__h7_i = 1.0 + (1.0 + 1 / var_INaCa_i__hna) * mParameters[11] / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h8_i = mParameters[11] / (var_INaCa_i__h7_i * var_INaCa_i__hna * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h9_i = 1 / var_INaCa_i__h7_i; // dimensionless
        const double var_INaCa_i__k3p_i = var_INaCa_i__h9_i * var_INaCa_i__wca; // dimensionless
        const double var_INaCa_i__k3pp_i = var_INaCa_i__h8_i * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k3_i = var_INaCa_i__k3p_i + var_INaCa_i__k3pp_i; // dimensionless
        const double var_INaCa_i__k4p_i = var_INaCa_i__h3_i * var_INaCa_i__wca / var_INaCa_i__hca; // dimensionless
        const double var_INaCa_i__k4pp_i = var_INaCa_i__h2_i * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k4_i = var_INaCa_i__k4p_i + var_INaCa_i__k4pp_i; // dimensionless
        const double var_INaCa_i__k7_i = var_INaCa_i__h2_i * var_INaCa_i__h5_i * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k8_i = var_INaCa_i__h11_i * var_INaCa_i__h8_i * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__x1_i = (var_INaCa_i__k2_i + var_INaCa_i__k3_i) * var_INaCa_i__k5_i * var_INaCa_i__k7_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k2_i * var_INaCa_i__k4_i; // dimensionless
        const double var_INaCa_i__x2_i = (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k4_i * var_INaCa_i__k6_i + (var_INaCa_i__k4_i + var_INaCa_i__k5_i) * var_INaCa_i__k1_i * var_INaCa_i__k7_i; // dimensionless
        const double var_INaCa_i__x3_i = (var_INaCa_i__k2_i + var_INaCa_i__k3_i) * var_INaCa_i__k6_i * var_INaCa_i__k8_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k1_i * var_INaCa_i__k3_i; // dimensionless
        const double var_INaCa_i__x4_i = (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k3_i * var_INaCa_i__k5_i + (var_INaCa_i__k4_i + var_INaCa_i__k5_i) * var_INaCa_i__k2_i * var_INaCa_i__k8_i; // dimensionless
        const double var_INaCa_i__E1_i = var_INaCa_i__x1_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E2_i = var_INaCa_i__x2_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E3_i = var_INaCa_i__x3_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E4_i = var_INaCa_i__x4_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__JncxCa_i = var_INaCa_i__E2_i * var_INaCa_i__k2_i - var_INaCa_i__E1_i * var_INaCa_i__k1_i; // millimolar_per_millisecond
        const double var_INaCa_i__JncxNa_i = var_INaCa_i__E3_i * var_INaCa_i__k4pp_i - var_INaCa_i__E2_i * var_INaCa_i__k3pp_i + 3.0 * var_INaCa_i__E4_i * var_INaCa_i__k7_i - 3.0 * var_INaCa_i__E1_i * var_INaCa_i__k8_i; // millimolar_per_millisecond
        const double var_physical_constants__zca = 2.0; // dimensionless
        const double var_physical_constants__zna = 1.0; // dimensionless
        const double var_INaCa_i__INaCa_i = 0.80000000000000004 * (var_INaCa_i__JncxCa_i * var_physical_constants__zca + var_INaCa_i__JncxNa_i * var_physical_constants__zna) * var_INaCa_i__Gncx * var_INaCa_i__allo_i; // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ions__cai = (var_cell_geometry__vss * var_diff__Jdiff / var_cell_geometry__vmyo - var_SERCA__Jup * var_cell_geometry__vnsr / var_cell_geometry__vmyo + 0.5 * (-var_ICab__ICab - var_IpCa__IpCa + 2.0 * var_INaCa_i__INaCa_i) * var_cell_geometry__Acap * var_intracellular_ions__cm / (var_cell_geometry__vmyo * var_physical_constants__F)) * var_intracellular_ions__Bcai; // millimolar / millisecond

        return d_dt_chaste_interface_var_intracellular_ions__cai;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative1(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            double var_chaste_interface__intracellular_ions__cai = rY[1];
            // Units: millimolar; Initial value: 8.6e-05
            double var_chaste_interface__CaMK__CaMKt = rY[2];
            // Units: millimolar; Initial value: 0.0125840447
            double var_chaste_interface__intracellular_ions__nai = rY[3];
            // Units: millimolar; Initial value: 7.268004498
            double var_chaste_interface__intracellular_ions__cass = rY[7];
            // Units: millimolar; Initial value: 8.49e-05
            double var_chaste_interface__intracellular_ions__cansr = rY[8];
            // Units: millimolar; Initial value: 1.619574538
            

            const double var_x1 = exp(9.9999999999999995e-8);
            const double var_x2 = 1 / (-1.0 + var_x1);
            const double var_x4 = exp(-9.9999999999999995e-8);
            const double var_x5 = 1 / (-1.0 + var_x4);
            const double var_x7 = fabs(var_chaste_interface__membrane__v);
            const double var_x12 = 0.074871767015605231 * var_chaste_interface__membrane__v;
            const double var_x16 = pow(var_chaste_interface__membrane__v, 2);
            const double var_x20 = -0.34100000000000003 * mParameters[9];
            const double var_x21 = var_x20 + var_x1 * var_chaste_interface__intracellular_ions__cai;
            const double var_x23 = var_x20 + var_x4 * var_chaste_interface__intracellular_ions__cai;
            const double var_x24 = var_x7 < 1.3356169352749131e-6;
            const double var_x25 = exp(var_x12);
            const double var_x26 = -1.0 + var_x25;
            const double var_x27 = 1 / var_x26;
            const double var_x29 = var_x25 * var_chaste_interface__intracellular_ions__cai;
            const double var_x30 = (var_x20 + var_x29) * mParameters[13];
            const double var_x41 = 1.0 - var_chaste_interface__CaMK__CaMKt;
            const double var_x42 = 1 / var_chaste_interface__intracellular_ions__cass;
            const double var_x43 = 1.0 + 0.0015 * var_x42;
            const double var_x44 = 1 / var_x43;
            const double var_x45 = 0.050000000000000003 * var_x44;
            const double var_x46 = var_x41 * var_x45 + var_chaste_interface__CaMK__CaMKt;
            const double var_x47 = 1.0 + 0.14999999999999999 / var_x46;
            const double var_x48 = 1 / var_x47;
            const double var_x49 = var_x48;
            const double var_x50 = 1.0 - var_x49;
            const double var_x64 = pow(var_chaste_interface__intracellular_ions__nai, 3);
            const double var_x76 = pow(mParameters[11], 3);
            const double var_x186 = 1 / (13.5 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * mParameters[11]) * mParameters[11]);
            const double var_x187 = exp(0.019556505544476088 * var_chaste_interface__membrane__v);
            const double var_x188 = 1 / var_x187;
            const double var_x189 = 1.0 + 0.011348161597821153 * (1.0 + var_x188) * mParameters[11];
            const double var_x194 = 1 / var_x189;
            const double var_x195 = var_x186 * var_x194 * var_x76;
            const double var_x196 = var_x188 * var_x195;
            const double var_x198 = 0.011348161597821153 + 0.011348161597821153 * var_x187;
            const double var_x201 = 1 / exp(0.0062517925458030373 * var_chaste_interface__membrane__v);
            const double var_x223 = var_x186 * mParameters[9];
            const double var_x224 = 1500000.0 * var_x223;
            const double var_x225 = var_x224 + 9.0785292782569211 * var_x196;
            const double var_x246 = var_x188 * mParameters[11];
            const double var_x247 = var_x194 * var_x246;
            const double var_x248 = 56.740807989105761 * var_x247;
            const double var_x249 = var_x248 + 60000.0 * var_x194;
            const double var_x251 = 5000.0 + var_x249;
            const double var_x252 = var_x196 * var_x251;
            const double var_x259 = var_x225 * var_x249;
            const double var_x260 = 5000.0 * var_x259;
            const double var_x265 = 0.00036716666666666668 * var_x259;
            const double var_x267 = 0.11015000000000001 * var_x223;
            const double var_x277 = var_x224 * var_x249;
            const double var_x291 = 45392.646391284608 * var_x196;
            const double var_x307 = 3000000.0 * var_x223;
            const double var_x313 = 1.6177363333333335e-8 * var_x223;
            const double var_x323 = 27.235587834770765 * var_x196;
            const double var_x331 = 1.0 + var_x198 * var_chaste_interface__intracellular_ions__nai;
            const double var_x332 = 1 / var_x331;
            const double var_x333 = var_x201 * var_x332;
            const double var_x334 = var_x187 * var_x332;
            const double var_x335 = 56.740807989105761 * var_x334;
            const double var_x336 = var_x335 * var_chaste_interface__intracellular_ions__nai;
            const double var_x337 = var_x336 + 60000.0 * var_x333;
            const double var_x338 = 1.0 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * var_chaste_interface__intracellular_ions__nai) * var_chaste_interface__intracellular_ions__nai;
            const double var_x339 = 1 / var_x338;
            const double var_x340 = 1500000.0 * var_x339;
            const double var_x341 = var_x340 * var_chaste_interface__intracellular_ions__cai;
            const double var_x343 = var_x334 * var_chaste_interface__intracellular_ions__nai;
            const double var_x353 = 5000.0 + var_x337;
            const double var_x354 = var_x334 * var_x339;
            const double var_x355 = var_x354 * var_x64;
            const double var_x356 = var_x223 * var_x355;
            const double var_x357 = var_x353 * var_x356;
            const double var_x366 = var_x225 * var_x337;
            const double var_x367 = 13617793.917385383 * var_x357 + var_x341 * var_x366;
            const double var_x368 = var_x341 + 9.0785292782569211 * var_x355;
            const double var_x369 = var_x252 * var_x339;
            const double var_x370 = var_x369 * var_chaste_interface__intracellular_ions__cai;
            const double var_x371 = 13617793.917385383 * var_x370 + var_x277 * var_x368;
            const double var_x372 = var_x337 * var_x368;
            const double var_x373 = var_x251 * var_x355;
            const double var_x374 = 5000.0 * var_x372 + 45392.646391284608 * var_x373;
            const double var_x375 = var_x260 + var_x291 * var_x353;
            const double var_x376 = 1 / (var_x367 + var_x371 + var_x374 + var_x375);
            const double var_x377 = 10000.0 * var_x376;
            const double var_x378 = var_x339 * var_x366;
            const double var_x379 = var_x196 * var_x353;
            const double var_x380 = pow((var_x265 + var_x357 + var_x370 + 0.0033333333333333331 * var_x373 + 0.0033333333333333331 * var_x379 + 0.00036716666666666668 * var_x372 + 0.11015000000000001 * var_x378 * var_chaste_interface__intracellular_ions__cai + var_x249 * var_x267 * var_x368), (-2));
            const double var_x382 = 283704.03994552878 * var_x334;
            const double var_x383 = 300000000.0 * var_x333 + var_x382 * var_chaste_interface__intracellular_ions__nai;
            const double var_x399 = 5.3924544444444452e-11 * var_x367;
            const double var_x401 = var_x307 * var_x376;
            const double var_x402 = var_x336 * var_x376;
            const double var_x403 = var_x367 * var_x376;
            const double var_x404 = var_x371 * var_x376;
            const double var_x406 = var_x313 * var_x374;
            const double var_x408 = var_x196 * var_x374;
            const double var_x409 = var_x355 * var_x375;
            const double var_x411 = var_x343 * var_x371;
            const double var_x412 = 27.235587834770765 * var_x376;
            const double var_x413 = var_x247 * var_x367;
            const double var_x414 = var_x323 * var_x376;
            const double var_x418 = 1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__intracellular_ions__cai, 2);
            const double var_x419 = mParameters[22] / var_x418;
            const double var_x491 = 0.5 + 374358.83507802623 * var_chaste_interface__membrane__v;
            const double var_x492 = 0.14974353403121046 * var_x16;
            const double var_x501 = 2.671233870549826e-13 * var_x5;
            const double var_x503 = 2.671233870549826e-13 * var_x2;
            const double var_x520 = 0.5 + 374358.83507802623 * var_chaste_interface__membrane__v;
            const double var_x521 = var_x1 * var_x503;
            const double var_x522 = var_x4 * var_x501;
            const double var_x523 = var_x522 * mParameters[13];
            const double var_x524 = var_x27 * var_x492;
            const double var_x525 = var_x25 * var_x524;
            const double var_x526 = ((var_x24) ? (var_x523 + var_x520 * (-var_x523 + var_x521 * mParameters[13])) : (var_x525 * mParameters[13]));
            const double var_x527 = 0.00050000000000000001 + var_chaste_interface__intracellular_ions__cai;
            const double var_x528 = mParameters[16] / var_x527;
            const double var_x529 = pow(var_x527, (-2));
            const double var_x530 = var_x529 * mParameters[16] * var_chaste_interface__intracellular_ions__cai;
            const double var_x531 = var_x223 * var_x339;
            const double var_x532 = 2250000000000.0 * var_x249;
            const double var_x533 = var_x531 * var_x532;
            const double var_x534 = 13617793.917385383 * var_x369;
            const double var_x535 = -var_x533 - var_x534 - var_x340 * var_x366 - var_x340 * var_x383;
            const double var_x536 = var_x380 * var_x399;
            const double var_x537 = var_x376 * var_x378;
            const double var_x538 = var_x376 * var_x383;
            const double var_x539 = var_x380 * var_x406;
            const double var_x540 = 3.0597222222222222e-13 * var_x380;
            const double var_x541 = var_x535 * var_x540;
            const double var_x542 = 1.4686666666666667e-13 * var_x380;
            const double var_x543 = var_x535 * var_x542;
            const double var_x544 = 40853381.752156146 * var_x196;
            const double var_x545 = 85111211.983658642 * var_x247;
            const double var_x546 = 15000000000.0 * var_x537 + var_x402 * (var_x533 + var_x534) + var_x409 * var_x543 + var_x411 * var_x541 + var_x535 * var_x536 - var_x408 * var_x543 - var_x413 * var_x541 - var_x535 * var_x539 - var_x537 * var_x545 - 4500000000000.0 * var_x531 * var_x538 - var_x339 * var_x538 * var_x544;
            const double var_x547 = var_x336 * var_x404 + var_x367 * var_x377 + var_x409 * var_x412 - var_x248 * var_x403 - var_x374 * var_x401 - var_x374 * var_x414;
            const double var_x548 = var_x547 * mParameters[22] / (pow(var_x418, 2) * pow(var_chaste_interface__intracellular_ions__cai, 3));
            const double var_x817 = 4.9216594305894988e-5 * var_x419;
            const double var_x818 = 0.0023800000000000002 + var_chaste_interface__intracellular_ions__cai;
            const double var_x819 = 1.0 + 0.00011900000000000002 / pow(var_x818, 2) + 3.5000000000000004e-5 * var_x529;
            const double var_x820 = 1 / var_x819;
            const double var_x821 = var_x820;
            const double var_x822 = 0.00075000000000000002 + var_chaste_interface__intracellular_ions__cai;
            const double var_x823 = 1 / var_x822;
            const double var_x824 = var_x48 * var_x823;
            const double var_x825 = 0.00092000000000000003 + var_chaste_interface__intracellular_ions__cai;
            const double var_x826 = 1 / var_x825;
            const double var_x827 = var_x50 * var_x826;
            const double var_x828 = var_x48 * var_chaste_interface__intracellular_ions__cai / pow(var_x822, 2);
            const double var_x829 = var_x50 * var_chaste_interface__intracellular_ions__cai / pow(var_x825, 2);
            const double var_x830 = 3.0760371441184366e-5 * var_x528;
            const double var_x831 = var_x23 * var_x501 * mParameters[13];
            const double var_x832 = 0.0043750000000000004 * var_x827;
            const double var_x833 = 0.01203125 * var_x824;
            
            partialF = var_x821 * (-0.14705882352941174 - var_x830 + 2.2147467437652741e-12 * var_x548 + 3.0760371441184366e-5 * var_x530 - 3.0760371441184366e-5 * var_x526 + var_x546 * var_x817 + (0.00097665441176470586 * var_x828 + 0.00035514705882352943 * var_x829 - 0.00097665441176470586 * var_x824 - 0.00035514705882352943 * var_x827) * mParameters[8]) + (0.00023800000000000004 / pow(var_x818, 3) + 7.0000000000000007e-5 / pow(var_x527, 3)) * (0.14705882352941174 * var_chaste_interface__intracellular_ions__cass - 3.0760371441184366e-5 * ((var_x24) ? (var_x831 + var_x491 * (-var_x831 + var_x21 * var_x503 * mParameters[13])) : (var_x30 * var_x524)) - 0.14705882352941174 * var_chaste_interface__intracellular_ions__cai + var_x547 * var_x817 - var_x830 * var_chaste_interface__intracellular_ions__cai - 0.081176470588235281 * (-0.00026249999999999998 * var_chaste_interface__intracellular_ions__cansr + var_x832 * var_chaste_interface__intracellular_ions__cai + var_x833 * var_chaste_interface__intracellular_ions__cai) * mParameters[8]) / pow(var_x819, 2);
        }
        else
        {
            const double y_save = rY[1];
            rY[1] += delta;
            const double temp = EvaluateYDerivative1(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[1])/delta;
            rY[1] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative2(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__CaMK__CaMKt = rY[2];
        // Units: millimolar; Initial value: 0.0125840447
        double var_chaste_interface__intracellular_ions__cass = rY[7];
        // Units: millimolar; Initial value: 8.49e-05
        

        // Mathematics
        const double var_CaMK__CaMKo = 0.050000000000000003; // dimensionless
        const double var_CaMK__KmCaM = 0.0015; // millimolar
        const double var_CaMK__aCaMK = 0.050000000000000003; // per_millimolar_per_millisecond
        const double var_CaMK__bCaMK = 0.00068000000000000005; // per_millisecond
        const double var_CaMK__CaMKb = (1.0 - var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKo / (1.0 + var_CaMK__KmCaM / var_chaste_interface__intracellular_ions__cass); // millimolar
        const double d_dt_chaste_interface_var_CaMK__CaMKt = -var_chaste_interface__CaMK__CaMKt * var_CaMK__bCaMK + (var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKb * var_CaMK__aCaMK; // millimolar / millisecond

        return d_dt_chaste_interface_var_CaMK__CaMKt;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative2(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__CaMK__CaMKt = rY[2];
            // Units: millimolar; Initial value: 0.0125840447
            double var_chaste_interface__intracellular_ions__cass = rY[7];
            // Units: millimolar; Initial value: 8.49e-05
            

            const double var_x41 = 1.0 - var_chaste_interface__CaMK__CaMKt;
            const double var_x42 = 1 / var_chaste_interface__intracellular_ions__cass;
            const double var_x43 = 1.0 + 0.0015 * var_x42;
            const double var_x44 = 1 / var_x43;
            const double var_x45 = 0.050000000000000003 * var_x44;
            const double var_x46 = var_x41 * var_x45 + var_chaste_interface__CaMK__CaMKt;
            const double var_x840 = 0.0025000000000000005 * var_x44;
            
            partialF = -0.00068000000000000005 - var_x46 * var_x840 + var_x41 * var_x840 * (1 - var_x45);
        }
        else
        {
            const double y_save = rY[2];
            rY[2] += delta;
            const double temp = EvaluateYDerivative2(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[2])/delta;
            rY[2] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative3(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__intracellular_ions__cai = rY[1];
        // Units: millimolar; Initial value: 8.6e-05
        double var_chaste_interface__CaMK__CaMKt = rY[2];
        // Units: millimolar; Initial value: 0.0125840447
        double var_chaste_interface__intracellular_ions__nai = rY[3];
        // Units: millimolar; Initial value: 7.268004498
        double var_chaste_interface__intracellular_ions__nass = rY[4];
        // Units: millimolar; Initial value: 7.268089977
        double var_chaste_interface__intracellular_ions__ki = rY[5];
        // Units: millimolar; Initial value: 144.6555918
        double var_chaste_interface__intracellular_ions__cass = rY[7];
        // Units: millimolar; Initial value: 8.49e-05
        double var_chaste_interface__INa__m = rY[10];
        // Units: dimensionless; Initial value: 0.007344121102
        double var_chaste_interface__INa__hf = rY[11];
        // Units: dimensionless; Initial value: 0.6981071913
        double var_chaste_interface__INa__hs = rY[12];
        // Units: dimensionless; Initial value: 0.6980895801
        double var_chaste_interface__INa__j = rY[13];
        // Units: dimensionless; Initial value: 0.6979908432
        double var_chaste_interface__INa__hsp = rY[14];
        // Units: dimensionless; Initial value: 0.4549485525
        double var_chaste_interface__INa__jp = rY[15];
        // Units: dimensionless; Initial value: 0.6979245865
        double var_chaste_interface__INaL__mL = rY[16];
        // Units: dimensionless; Initial value: 0.0001882617273
        double var_chaste_interface__INaL__hL = rY[17];
        // Units: dimensionless; Initial value: 0.5008548855
        double var_chaste_interface__INaL__hLp = rY[18];
        // Units: dimensionless; Initial value: 0.2693065357
        

        // Mathematics
        const double var_CaMK__CaMKo = 0.050000000000000003; // dimensionless
        const double var_CaMK__KmCaM = 0.0015; // millimolar
        const double var_CaMK__KmCaMK = 0.14999999999999999; // millimolar
        const double var_INa__Ahf = 0.98999999999999999; // dimensionless
        const double var_INa__Ahs = 1.0 - var_INa__Ahf; // dimensionless
        const double var_INa__h = var_INa__Ahf * var_chaste_interface__INa__hf + var_INa__Ahs * var_chaste_interface__INa__hs; // dimensionless
        const double var_INa__hp = var_INa__Ahf * var_chaste_interface__INa__hf + var_INa__Ahs * var_chaste_interface__INa__hsp; // dimensionless
        const double var_INaCa_i__KmCaAct = 0.00014999999999999999; // millimolar
        const double var_INaCa_i__kasymm = 12.5; // dimensionless
        const double var_INaCa_i__kcaoff = 5000.0; // per_millisecond
        const double var_INaCa_i__k2_i = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k5_i = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__kcaon = 1500000.0; // per_millisecond
        const double var_INaCa_i__kna1 = 15.0; // per_millisecond
        const double var_INaCa_i__kna2 = 5.0; // per_millisecond
        const double var_INaCa_i__kna3 = 88.120000000000005; // per_millisecond
        const double var_INaCa_i__qca = 0.16700000000000001; // dimensionless
        const double var_INaCa_i__qna = 0.52239999999999998; // dimensionless
        const double var_INaCa_i__wca = 60000.0; // dimensionless
        const double var_INaCa_i__wna = 60000.0; // dimensionless
        const double var_INaCa_i__wnaca = 5000.0; // dimensionless
        const double var_INaK__H = 9.9999999999999995e-8; // millimolar
        const double var_INaK__Khp = 1.698e-7; // millimolar
        const double var_INaK__Kki = 0.5; // per_millisecond
        const double var_INaK__Kko = 0.35820000000000002; // per_millisecond
        const double var_INaK__Kmgatp = 1.698e-7; // millimolar
        const double var_INaK__Knai0 = 9.0730000000000004; // millimolar
        const double var_INaK__Knao0 = 27.780000000000001; // millimolar
        const double var_INaK__Knap = 224.0; // millimolar
        const double var_INaK__Kxkur = 292.0; // millimolar
        const double var_INaK__MgADP = 0.050000000000000003; // millimolar
        const double var_INaK__MgATP = 9.8000000000000007; // millimolar
        const double var_INaK__delta = -0.155; // millivolt
        const double var_INaK__eP = 4.2000000000000002; // dimensionless
        const double var_INaK__k1m = 182.40000000000001; // per_millisecond
        const double var_INaK__b1 = var_INaK__MgADP * var_INaK__k1m; // dimensionless
        const double var_INaK__k1p = 949.5; // per_millisecond
        const double var_INaK__k2m = 39.399999999999999; // per_millisecond
        const double var_INaK__k2p = 687.20000000000005; // per_millisecond
        const double var_INaK__a2 = var_INaK__k2p; // dimensionless
        const double var_INaK__k3m = 79300.0; // per_millisecond
        const double var_INaK__k3p = 1899.0; // per_millisecond
        const double var_INaK__k4m = 40.0; // per_millisecond
        const double var_INaK__k4p = 639.0; // per_millisecond
        const double var_INaK__a4 = var_INaK__MgATP * var_INaK__k4p / ((1.0 + var_INaK__MgATP / var_INaK__Kmgatp) * var_INaK__Kmgatp); // dimensionless
        const double var_cell_geometry__L = 0.01; // centimeter
        const double var_cell_geometry__rad = 0.0011000000000000001; // centimeter
        const double var_cell_geometry__Ageo = 6.2800000000000002 * pow(var_cell_geometry__rad, 2) + 6.2800000000000002 * var_cell_geometry__L * var_cell_geometry__rad; // centimeter_squared
        const double var_cell_geometry__Acap = 2.0 * var_cell_geometry__Ageo; // centimeter_squared
        const double var_cell_geometry__vcell = 3140.0 * pow(var_cell_geometry__rad, 2) * var_cell_geometry__L; // microliter
        const double var_cell_geometry__vmyo = 0.68000000000000005 * var_cell_geometry__vcell; // microliter
        const double var_cell_geometry__vss = 0.02 * var_cell_geometry__vcell; // microliter
        const double var_environment__celltype = 0; // dimensionless
        const double var_INaCa_i__Gncx = ((var_environment__celltype == 1.0) ? (1.1000000000000001 * mParameters[22]) : ((var_environment__celltype == 2.0) ? (1.3999999999999999 * mParameters[22]) : (mParameters[22]))); // milliS_per_microF
        const double var_INaK__Pnak = ((var_environment__celltype == 1.0) ? (0.90000000000000002 * mParameters[23]) : ((var_environment__celltype == 2.0) ? (0.69999999999999996 * mParameters[23]) : (mParameters[23]))); // milliS_per_microF
        const double var_INaL__GNaL = ((var_environment__celltype == 1.0) ? (0.59999999999999998 * mParameters[19]) : (mParameters[19])); // milliS_per_microF
        const double var_INaCa_i__h10_i = 1.0 + (1.0 + mParameters[11] / var_INaCa_i__kna2) * mParameters[11] / var_INaCa_i__kna1 + var_INaCa_i__kasymm; // dimensionless
        const double var_INaCa_i__h11_i = pow(mParameters[11], 2) / (var_INaCa_i__h10_i * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h12_i = 1 / var_INaCa_i__h10_i; // dimensionless
        const double var_INaCa_i__k1_i = var_INaCa_i__h12_i * var_INaCa_i__kcaon * mParameters[9]; // dimensionless
        const double var_INaCa_i__allo_i = 1 / (1.0 + pow(var_INaCa_i__KmCaAct, 2) / pow(var_chaste_interface__intracellular_ions__cai, 2)); // dimensionless
        const double var_CaMK__CaMKb = (1.0 - var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKo / (1.0 + var_CaMK__KmCaM / var_chaste_interface__intracellular_ions__cass); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_INa__fINap = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INaL__fINaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_intracellular_ions__cm = 1.0; // microF_per_centimeter_squared
        const double var_INaCa_i__h4_i = 1.0 + (1.0 + var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna2) * var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna1; // dimensionless
        const double var_INaCa_i__h5_i = pow(var_chaste_interface__intracellular_ions__nai, 2) / (var_INaCa_i__h4_i * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h6_i = 1 / var_INaCa_i__h4_i; // dimensionless
        const double var_INaCa_i__k6_i = var_INaCa_i__h6_i * var_INaCa_i__kcaon * var_chaste_interface__intracellular_ions__cai; // dimensionless
        const double var_INaK__P = var_INaK__eP / (1.0 + var_INaK__H / var_INaK__Khp + var_chaste_interface__intracellular_ions__nai / var_INaK__Knap + var_chaste_interface__intracellular_ions__ki / var_INaK__Kxkur); // dimensionless
        const double var_INaK__b3 = var_INaK__H * var_INaK__P * var_INaK__k3m / (1.0 + var_INaK__MgATP / var_INaK__Kmgatp); // dimensionless
        const double var_diff__JdiffNa = 0.5 * var_chaste_interface__intracellular_ions__nass - 0.5 * var_chaste_interface__intracellular_ions__nai; // millimolar_per_millisecond
        const double var_INab__INab = ((fabs(var_chaste_interface__membrane__v) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-mParameters[11] + var_chaste_interface__intracellular_ions__nai * exp(9.9999999999999995e-8)) * mParameters[15] / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-mParameters[11] + var_chaste_interface__intracellular_ions__nai * exp(-9.9999999999999995e-8)) * mParameters[15] / (-1.0 + exp(-9.9999999999999995e-8))) + 2.671233870549826e-13 * (-mParameters[11] + var_chaste_interface__intracellular_ions__nai * exp(-9.9999999999999995e-8)) * mParameters[15] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.037435883507802616 * pow(var_chaste_interface__membrane__v, 2) * (-mParameters[11] + var_chaste_interface__intracellular_ions__nai * exp(0.037435883507802616 * var_chaste_interface__membrane__v)) * mParameters[15] / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__v)))); // microA_per_microF
        const double var_physical_constants__F = 96485.0; // coulomb_per_mole
        const double var_physical_constants__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_physical_constants__T = 310.0; // kelvin
        const double var_INaCa_i__hca = exp(var_INaCa_i__qca * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // dimensionless
        const double var_INaCa_i__hna = exp(var_INaCa_i__qna * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // dimensionless
        const double var_INaCa_i__h1_i = 1.0 + (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h2_i = var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nai / (var_INaCa_i__h1_i * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h3_i = 1 / var_INaCa_i__h1_i; // dimensionless
        const double var_INaCa_i__h7_i = 1.0 + (1.0 + 1 / var_INaCa_i__hna) * mParameters[11] / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h8_i = mParameters[11] / (var_INaCa_i__h7_i * var_INaCa_i__hna * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h9_i = 1 / var_INaCa_i__h7_i; // dimensionless
        const double var_INaCa_i__k3p_i = var_INaCa_i__h9_i * var_INaCa_i__wca; // dimensionless
        const double var_INaCa_i__k3pp_i = var_INaCa_i__h8_i * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k3_i = var_INaCa_i__k3p_i + var_INaCa_i__k3pp_i; // dimensionless
        const double var_INaCa_i__k4p_i = var_INaCa_i__h3_i * var_INaCa_i__wca / var_INaCa_i__hca; // dimensionless
        const double var_INaCa_i__k4pp_i = var_INaCa_i__h2_i * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k4_i = var_INaCa_i__k4p_i + var_INaCa_i__k4pp_i; // dimensionless
        const double var_INaCa_i__k7_i = var_INaCa_i__h2_i * var_INaCa_i__h5_i * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k8_i = var_INaCa_i__h11_i * var_INaCa_i__h8_i * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__x1_i = (var_INaCa_i__k2_i + var_INaCa_i__k3_i) * var_INaCa_i__k5_i * var_INaCa_i__k7_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k2_i * var_INaCa_i__k4_i; // dimensionless
        const double var_INaCa_i__x2_i = (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k4_i * var_INaCa_i__k6_i + (var_INaCa_i__k4_i + var_INaCa_i__k5_i) * var_INaCa_i__k1_i * var_INaCa_i__k7_i; // dimensionless
        const double var_INaCa_i__x3_i = (var_INaCa_i__k2_i + var_INaCa_i__k3_i) * var_INaCa_i__k6_i * var_INaCa_i__k8_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k1_i * var_INaCa_i__k3_i; // dimensionless
        const double var_INaCa_i__x4_i = (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k3_i * var_INaCa_i__k5_i + (var_INaCa_i__k4_i + var_INaCa_i__k5_i) * var_INaCa_i__k2_i * var_INaCa_i__k8_i; // dimensionless
        const double var_INaCa_i__E1_i = var_INaCa_i__x1_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E2_i = var_INaCa_i__x2_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E3_i = var_INaCa_i__x3_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E4_i = var_INaCa_i__x4_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__JncxCa_i = var_INaCa_i__E2_i * var_INaCa_i__k2_i - var_INaCa_i__E1_i * var_INaCa_i__k1_i; // millimolar_per_millisecond
        const double var_INaCa_i__JncxNa_i = var_INaCa_i__E3_i * var_INaCa_i__k4pp_i - var_INaCa_i__E2_i * var_INaCa_i__k3pp_i + 3.0 * var_INaCa_i__E4_i * var_INaCa_i__k7_i - 3.0 * var_INaCa_i__E1_i * var_INaCa_i__k8_i; // millimolar_per_millisecond
        const double var_INaK__Knai = var_INaK__Knai0 * exp(0.33333333333333331 * var_INaK__delta * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // millimolar
        const double var_INaK__Knao = var_INaK__Knao0 * exp(0.33333333333333331 * (1.0 - var_INaK__delta) * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // millimolar
        const double var_INaK__a1 = pow(var_chaste_interface__intracellular_ions__nai, 3) * var_INaK__k1p / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__ki / var_INaK__Kki), 2) + pow((1.0 + var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3)) * pow(var_INaK__Knai, 3)); // dimensionless
        const double var_INaK__a3 = pow(mParameters[10], 2) * var_INaK__k3p / ((-1.0 + pow((1.0 + mParameters[10] / var_INaK__Kko), 2) + pow((1.0 + mParameters[11] / var_INaK__Knao), 3)) * pow(var_INaK__Kko, 2)); // dimensionless
        const double var_INaK__b2 = pow(mParameters[11], 3) * var_INaK__k2m / ((-1.0 + pow((1.0 + mParameters[10] / var_INaK__Kko), 2) + pow((1.0 + mParameters[11] / var_INaK__Knao), 3)) * pow(var_INaK__Knao, 3)); // dimensionless
        const double var_INaK__b4 = pow(var_chaste_interface__intracellular_ions__ki, 2) * var_INaK__k4m / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__ki / var_INaK__Kki), 2) + pow((1.0 + var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3)) * pow(var_INaK__Kki, 2)); // dimensionless
        const double var_INaK__x1 = var_INaK__a1 * var_INaK__a2 * var_INaK__a4 + var_INaK__a1 * var_INaK__a2 * var_INaK__b3 + var_INaK__a2 * var_INaK__b3 * var_INaK__b4 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__x2 = var_INaK__a1 * var_INaK__a2 * var_INaK__a3 + var_INaK__a2 * var_INaK__a3 * var_INaK__b4 + var_INaK__a3 * var_INaK__b1 * var_INaK__b4 + var_INaK__b1 * var_INaK__b2 * var_INaK__b4; // dimensionless
        const double var_INaK__x3 = var_INaK__a2 * var_INaK__a3 * var_INaK__a4 + var_INaK__a3 * var_INaK__a4 * var_INaK__b1 + var_INaK__a4 * var_INaK__b1 * var_INaK__b2 + var_INaK__b1 * var_INaK__b2 * var_INaK__b3; // dimensionless
        const double var_INaK__x4 = var_INaK__a1 * var_INaK__a3 * var_INaK__a4 + var_INaK__a1 * var_INaK__a4 * var_INaK__b2 + var_INaK__a1 * var_INaK__b2 * var_INaK__b3 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__E1 = var_INaK__x1 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E2 = var_INaK__x2 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E3 = var_INaK__x3 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E4 = var_INaK__x4 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__JnakK = 2.0 * var_INaK__E4 * var_INaK__b1 - 2.0 * var_INaK__E3 * var_INaK__a1; // millimolar_per_millisecond
        const double var_INaK__JnakNa = 3.0 * var_INaK__E1 * var_INaK__a3 - 3.0 * var_INaK__E2 * var_INaK__b3; // millimolar_per_millisecond
        const double var_physical_constants__zca = 2.0; // dimensionless
        const double var_physical_constants__zk = 1.0; // dimensionless
        const double var_physical_constants__zna = 1.0; // dimensionless
        const double var_INaCa_i__INaCa_i = 0.80000000000000004 * (var_INaCa_i__JncxCa_i * var_physical_constants__zca + var_INaCa_i__JncxNa_i * var_physical_constants__zna) * var_INaCa_i__Gncx * var_INaCa_i__allo_i; // microA_per_microF
        const double var_INaK__INaK = (var_INaK__JnakK * var_physical_constants__zk + var_INaK__JnakNa * var_physical_constants__zna) * var_INaK__Pnak; // microA_per_microF
        const double var_reversal_potentials__ENa = var_physical_constants__R * var_physical_constants__T * log(mParameters[11] / var_chaste_interface__intracellular_ions__nai) / var_physical_constants__F; // millivolt
        const double var_INa__INa = pow(var_chaste_interface__INa__m, 3) * (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - var_INa__fINap) * var_INa__h * var_chaste_interface__INa__j + var_INa__fINap * var_INa__hp * var_chaste_interface__INa__jp) * mParameters[17]; // microA_per_microF
        const double var_INaL__INaL = (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - var_INaL__fINaLp) * var_chaste_interface__INaL__hL + var_INaL__fINaLp * var_chaste_interface__INaL__hLp) * var_INaL__GNaL * var_chaste_interface__INaL__mL; // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ions__nai = var_cell_geometry__vss * var_diff__JdiffNa / var_cell_geometry__vmyo + (-var_INa__INa - var_INaL__INaL - var_INab__INab - 3.0 * var_INaCa_i__INaCa_i - 3.0 * var_INaK__INaK) * var_cell_geometry__Acap * var_intracellular_ions__cm / (var_cell_geometry__vmyo * var_physical_constants__F); // millimolar / millisecond

        return d_dt_chaste_interface_var_intracellular_ions__nai;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative3(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            double var_chaste_interface__intracellular_ions__cai = rY[1];
            // Units: millimolar; Initial value: 8.6e-05
            double var_chaste_interface__CaMK__CaMKt = rY[2];
            // Units: millimolar; Initial value: 0.0125840447
            double var_chaste_interface__intracellular_ions__nai = rY[3];
            // Units: millimolar; Initial value: 7.268004498
            double var_chaste_interface__intracellular_ions__ki = rY[5];
            // Units: millimolar; Initial value: 144.6555918
            double var_chaste_interface__intracellular_ions__cass = rY[7];
            // Units: millimolar; Initial value: 8.49e-05
            double var_chaste_interface__INa__m = rY[10];
            // Units: dimensionless; Initial value: 0.007344121102
            double var_chaste_interface__INa__hf = rY[11];
            // Units: dimensionless; Initial value: 0.6981071913
            double var_chaste_interface__INa__hs = rY[12];
            // Units: dimensionless; Initial value: 0.6980895801
            double var_chaste_interface__INa__j = rY[13];
            // Units: dimensionless; Initial value: 0.6979908432
            double var_chaste_interface__INa__hsp = rY[14];
            // Units: dimensionless; Initial value: 0.4549485525
            double var_chaste_interface__INa__jp = rY[15];
            // Units: dimensionless; Initial value: 0.6979245865
            double var_chaste_interface__INaL__mL = rY[16];
            // Units: dimensionless; Initial value: 0.0001882617273
            double var_chaste_interface__INaL__hL = rY[17];
            // Units: dimensionless; Initial value: 0.5008548855
            double var_chaste_interface__INaL__hLp = rY[18];
            // Units: dimensionless; Initial value: 0.2693065357
            

            const double var_x1 = exp(9.9999999999999995e-8);
            const double var_x2 = 1 / (-1.0 + var_x1);
            const double var_x4 = exp(-9.9999999999999995e-8);
            const double var_x5 = 1 / (-1.0 + var_x4);
            const double var_x7 = fabs(var_chaste_interface__membrane__v);
            const double var_x8 = var_x7 < 2.6712338705498262e-6;
            const double var_x9 = exp(0.037435883507802616 * var_chaste_interface__membrane__v);
            const double var_x10 = -1.0 + var_x9;
            const double var_x11 = 1 / var_x10;
            const double var_x16 = pow(var_chaste_interface__membrane__v, 2);
            const double var_x17 = var_x11 * var_x16;
            const double var_x41 = 1.0 - var_chaste_interface__CaMK__CaMKt;
            const double var_x42 = 1 / var_chaste_interface__intracellular_ions__cass;
            const double var_x43 = 1.0 + 0.0015 * var_x42;
            const double var_x44 = 1 / var_x43;
            const double var_x45 = 0.050000000000000003 * var_x44;
            const double var_x46 = var_x41 * var_x45 + var_chaste_interface__CaMK__CaMKt;
            const double var_x47 = 1.0 + 0.14999999999999999 / var_x46;
            const double var_x48 = 1 / var_x47;
            const double var_x49 = var_x48;
            const double var_x50 = 1.0 - var_x49;
            const double var_x56 = exp(0.014412815150504008 * var_chaste_interface__membrane__v);
            const double var_x57 = mParameters[11] / var_x56;
            const double var_x58 = 1.0 + 0.035997120230381568 * var_x57;
            const double var_x59 = pow(var_x58, 3);
            const double var_x60 = pow((0.35820000000000002 + mParameters[10]), 2);
            const double var_x61 = 1 / (-1.0 + var_x59 + 7.7937924625297832 * var_x60);
            const double var_x62 = pow(mParameters[10], 2);
            const double var_x63 = var_x61 * var_x62;
            const double var_x64 = pow(var_chaste_interface__intracellular_ions__nai, 3);
            const double var_x65 = exp(-0.001934187314569802 * var_chaste_interface__membrane__v);
            const double var_x66 = 1 / var_x65;
            const double var_x67 = var_x66 * var_chaste_interface__intracellular_ions__nai;
            const double var_x68 = 1.0 + 0.11021712774165104 * var_x67;
            const double var_x69 = pow(var_x68, 3);
            const double var_x70 = pow((0.5 + var_chaste_interface__intracellular_ions__ki), 2);
            const double var_x71 = 1 / (-1.0 + var_x69 + 4.0 * var_x70);
            const double var_x72 = pow(var_x65, (-3));
            const double var_x73 = var_x71 * var_x72;
            const double var_x74 = var_x64 * var_x73;
            const double var_x75 = var_x63 * var_x74;
            const double var_x76 = pow(mParameters[11], 3);
            const double var_x77 = var_x61 * var_x76 / pow(var_x56, 3);
            const double var_x78 = var_x74 * var_x77;
            const double var_x81 = pow((-0.25 + var_x70 + 0.25 * var_x69), (-2));
            const double var_x82 = var_x81 * pow(var_x68, 2);
            const double var_x83 = var_x82 / pow(var_x65, 4);
            const double var_x91 = 1 / (1.5889281507656066 + 0.0034246575342465752 * var_chaste_interface__intracellular_ions__ki + 0.004464285714285714 * var_chaste_interface__intracellular_ions__nai);
            const double var_x92 = var_x74 * var_x91;
            const double var_x93 = var_x77 * var_x92;
            const double var_x98 = var_x77 * var_x91;
            const double var_x100 = pow(var_chaste_interface__intracellular_ions__ki, 2);
            const double var_x101 = var_x100 * var_x71;
            const double var_x102 = var_x101 * var_x91;
            const double var_x103 = var_x102 * var_x77;
            const double var_x105 = var_x100 * var_x98;
            const double var_x106 = var_x105 * var_x82;
            const double var_x110 = var_x101 * var_x63;
            const double var_x111 = var_x101 * var_x77;
            const double var_x112 = 2.6817254812739919 * var_x111 + 1648931648.7518551 * var_x110;
            const double var_x113 = 6585420658.1002293 * var_x63 + 9.6722701128385645e-12 * var_x98 + 10.71014095526842 * var_x77;
            const double var_x114 = 1.348266719199441e-12 * var_x93 + 1.4929407925401197 * var_x78;
            const double var_x115 = 6.3450816326903207e-5 * var_x102 + 5.041496472709802e-7 * var_x92 + 558246.7943749798 * var_x74;
            const double var_x116 = 1 / (var_x112 + var_x113 + var_x114 + var_x115 + 3.3937789869608994e-10 * var_x103 + 24953131.661984976 * var_x75);
            const double var_x121 = var_x100 * var_x63;
            const double var_x122 = var_x121 * var_x82;
            const double var_x124 = var_x100 * var_x77;
            const double var_x125 = var_x124 * var_x82;
            const double var_x128 = var_x116 * var_x91;
            const double var_x139 = var_x100 * var_x91;
            const double var_x140 = var_x139 * var_x82;
            const double var_x143 = pow((var_x63 + 0.25039124064514068 * var_x110 + 7.6555420442407695e-17 * var_x92 + 8.4770104046173956e-5 * var_x74 + 2.0473509426327076e-22 * var_x93 + 0.0037891477184972245 * var_x75 + 9.6350437764149725e-15 * var_x102 + 4.0722159152815902e-10 * var_x111 + 1.4687399051632995e-21 * var_x98 + 1.6263412029867345e-9 * var_x77 + 5.1534733514501733e-20 * var_x103 + 2.2670393738686469e-10 * var_x78), (-2));
            const double var_x144 = 1.6968894934804497e-10 * var_x103;
            const double var_x145 = var_x143 * (var_x114 + var_x144 + 12023111.890251627 * var_x75);
            const double var_x148 = var_x112 + 12930019.771733347 * var_x75;
            const double var_x149 = var_x148 * var_x91;
            const double var_x152 = var_x116 * var_x63;
            const double var_x157 = var_x115 + var_x144;
            const double var_x158 = var_x157 * var_x63;
            const double var_x160 = var_x113 * var_x74;
            const double var_x162 = var_x113 * var_x116;
            const double var_x175 = var_x50 * var_chaste_interface__INaL__hL;
            const double var_x176 = var_x49 * var_chaste_interface__INaL__hLp;
            const double var_x177 = mParameters[19] * var_chaste_interface__INaL__mL;
            const double var_x178 = 0.98999999999999999 * var_chaste_interface__INa__hf;
            const double var_x179 = var_x178 + 0.010000000000000009 * var_chaste_interface__INa__hs;
            const double var_x180 = var_x179 * var_x50;
            const double var_x181 = var_x178 + 0.010000000000000009 * var_chaste_interface__INa__hsp;
            const double var_x182 = var_x181 * var_chaste_interface__INa__jp;
            const double var_x183 = var_x180 * var_chaste_interface__INa__j + var_x182 * var_x49;
            const double var_x184 = pow(var_chaste_interface__INa__m, 3) * mParameters[17];
            const double var_x185 = var_x183 * var_x184;
            const double var_x186 = 1 / (13.5 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * mParameters[11]) * mParameters[11]);
            const double var_x187 = exp(0.019556505544476088 * var_chaste_interface__membrane__v);
            const double var_x188 = 1 / var_x187;
            const double var_x189 = 1.0 + 0.011348161597821153 * (1.0 + var_x188) * mParameters[11];
            const double var_x194 = 1 / var_x189;
            const double var_x195 = var_x186 * var_x194 * var_x76;
            const double var_x196 = var_x188 * var_x195;
            const double var_x198 = 0.011348161597821153 + 0.011348161597821153 * var_x187;
            const double var_x201 = 1 / exp(0.0062517925458030373 * var_chaste_interface__membrane__v);
            const double var_x223 = var_x186 * mParameters[9];
            const double var_x224 = 1500000.0 * var_x223;
            const double var_x225 = var_x224 + 9.0785292782569211 * var_x196;
            const double var_x246 = var_x188 * mParameters[11];
            const double var_x247 = var_x194 * var_x246;
            const double var_x248 = 56.740807989105761 * var_x247;
            const double var_x249 = var_x248 + 60000.0 * var_x194;
            const double var_x251 = 5000.0 + var_x249;
            const double var_x252 = var_x196 * var_x251;
            const double var_x259 = var_x225 * var_x249;
            const double var_x260 = 5000.0 * var_x259;
            const double var_x265 = 0.00036716666666666668 * var_x259;
            const double var_x267 = 0.11015000000000001 * var_x223;
            const double var_x277 = var_x224 * var_x249;
            const double var_x291 = 45392.646391284608 * var_x196;
            const double var_x307 = 3000000.0 * var_x223;
            const double var_x313 = 1.6177363333333335e-8 * var_x223;
            const double var_x323 = 27.235587834770765 * var_x196;
            const double var_x331 = 1.0 + var_x198 * var_chaste_interface__intracellular_ions__nai;
            const double var_x332 = 1 / var_x331;
            const double var_x333 = var_x201 * var_x332;
            const double var_x334 = var_x187 * var_x332;
            const double var_x335 = 56.740807989105761 * var_x334;
            const double var_x336 = var_x335 * var_chaste_interface__intracellular_ions__nai;
            const double var_x337 = var_x336 + 60000.0 * var_x333;
            const double var_x338 = 1.0 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * var_chaste_interface__intracellular_ions__nai) * var_chaste_interface__intracellular_ions__nai;
            const double var_x339 = 1 / var_x338;
            const double var_x340 = 1500000.0 * var_x339;
            const double var_x341 = var_x340 * var_chaste_interface__intracellular_ions__cai;
            const double var_x343 = var_x334 * var_chaste_interface__intracellular_ions__nai;
            const double var_x345 = pow(var_x331, (-2));
            const double var_x346 = pow(var_chaste_interface__intracellular_ions__nai, 2);
            const double var_x349 = var_x345 * var_chaste_interface__intracellular_ions__nai;
            const double var_x351 = var_x225 * var_x341;
            const double var_x353 = 5000.0 + var_x337;
            const double var_x354 = var_x334 * var_x339;
            const double var_x355 = var_x354 * var_x64;
            const double var_x356 = var_x223 * var_x355;
            const double var_x357 = var_x353 * var_x356;
            const double var_x359 = 13617793.917385383 * var_x356;
            const double var_x361 = var_x339 * var_x345;
            const double var_x366 = var_x225 * var_x337;
            const double var_x367 = 13617793.917385383 * var_x357 + var_x341 * var_x366;
            const double var_x368 = var_x341 + 9.0785292782569211 * var_x355;
            const double var_x369 = var_x252 * var_x339;
            const double var_x370 = var_x369 * var_chaste_interface__intracellular_ions__cai;
            const double var_x371 = 13617793.917385383 * var_x370 + var_x277 * var_x368;
            const double var_x372 = var_x337 * var_x368;
            const double var_x373 = var_x251 * var_x355;
            const double var_x374 = 5000.0 * var_x372 + 45392.646391284608 * var_x373;
            const double var_x375 = var_x260 + var_x291 * var_x353;
            const double var_x376 = 1 / (var_x367 + var_x371 + var_x374 + var_x375);
            const double var_x377 = 10000.0 * var_x376;
            const double var_x378 = var_x339 * var_x366;
            const double var_x379 = var_x196 * var_x353;
            const double var_x380 = pow((var_x265 + var_x357 + var_x370 + 0.0033333333333333331 * var_x373 + 0.0033333333333333331 * var_x379 + 0.00036716666666666668 * var_x372 + 0.11015000000000001 * var_x378 * var_chaste_interface__intracellular_ions__cai + var_x249 * var_x267 * var_x368), (-2));
            const double var_x382 = 283704.03994552878 * var_x334;
            const double var_x383 = 300000000.0 * var_x333 + var_x382 * var_chaste_interface__intracellular_ions__nai;
            const double var_x399 = 5.3924544444444452e-11 * var_x367;
            const double var_x401 = var_x307 * var_x376;
            const double var_x402 = var_x336 * var_x376;
            const double var_x404 = var_x371 * var_x376;
            const double var_x405 = var_x248 * var_x376;
            const double var_x406 = var_x313 * var_x374;
            const double var_x408 = var_x196 * var_x374;
            const double var_x409 = var_x355 * var_x375;
            const double var_x411 = var_x343 * var_x371;
            const double var_x412 = 27.235587834770765 * var_x376;
            const double var_x413 = var_x247 * var_x367;
            const double var_x414 = var_x323 * var_x376;
            const double var_x418 = 1.0 + 2.2499999999999996e-8 / pow(var_chaste_interface__intracellular_ions__cai, 2);
            const double var_x419 = mParameters[22] / var_x418;
            const double var_x501 = 2.671233870549826e-13 * var_x5;
            const double var_x503 = 2.671233870549826e-13 * var_x2;
            const double var_x505 = 0.037435883507802616 * var_x17;
            const double var_x521 = var_x1 * var_x503;
            const double var_x522 = var_x4 * var_x501;
            const double var_x536 = var_x380 * var_x399;
            const double var_x539 = var_x380 * var_x406;
            const double var_x540 = 3.0597222222222222e-13 * var_x380;
            const double var_x542 = 1.4686666666666667e-13 * var_x380;
            const double var_x560 = 1 / var_chaste_interface__intracellular_ions__nai;
            const double var_x583 = 0.5 + 187179.41753901311 * var_chaste_interface__membrane__v;
            const double var_x584 = var_x522 * mParameters[15];
            const double var_x585 = ((var_x8) ? (var_x584 + var_x583 * (-var_x584 + var_x521 * mParameters[15])) : (var_x505 * var_x9 * mParameters[15]));
            const double var_x586 = var_x346 * var_x73;
            const double var_x587 = var_x586 * var_x63;
            const double var_x588 = 4.4788223776203591 * var_x586 * var_x77;
            const double var_x589 = var_x64 * var_x83;
            const double var_x590 = var_x589 * var_x63;
            const double var_x591 = 4.0448001575983228e-12 * var_x586 * var_x98;
            const double var_x592 = pow((1 + 0.0028096208831939005 * var_chaste_interface__intracellular_ions__nai + 0.0021553256090254577 * var_chaste_interface__intracellular_ions__ki), (-2));
            const double var_x593 = var_x592 * var_x74;
            const double var_x594 = var_x593 * var_x77;
            const double var_x595 = 2.3840715066649271e-15 * var_x594;
            const double var_x596 = 0.030852683632896775 * var_x589 * var_x77;
            const double var_x597 = 2.786289097871654e-14 * var_x589 * var_x98;
            const double var_x598 = var_x101 * var_x592;
            const double var_x599 = var_x598 * var_x77;
            const double var_x600 = var_x106 * var_x66;
            const double var_x601 = -3.0005234378016216e-13 * var_x599 - 3.5067428637450051e-12 * var_x600;
            const double var_x602 = var_x588 + var_x591 + var_x601 - var_x595 - var_x596 - var_x597 + 36069335.67075488 * var_x587 - 248466.16107375509 * var_x590;
            const double var_x603 = 34076345.656450219 * var_x122 * var_x66;
            const double var_x604 = 0.055419764988303033 * var_x125 * var_x66;
            const double var_x605 = -var_x603 - var_x604 + 38790059.315200046 * var_x587 - 267208.05766560155 * var_x590;
            const double var_x606 = var_x116 * var_x592;
            const double var_x607 = var_x148 * var_x606;
            const double var_x608 = 1.1219685328242758e-7 * var_x598;
            const double var_x609 = 1674740.3831249396 * var_x586;
            const double var_x610 = 8.9146219515644901e-10 * var_x593;
            const double var_x611 = var_x592 * var_x77;
            const double var_x612 = 11536.567171311443 * var_x589;
            const double var_x613 = 1.5124489418129408e-6 * var_x586 * var_x91;
            const double var_x614 = 1.3112562615776865e-6 * var_x140 * var_x66;
            const double var_x615 = 1.0418611138907615e-8 * var_x589 * var_x91;
            const double var_x616 = var_x595 + var_x596 + var_x597 + var_x603 + var_x604 + var_x608 + var_x610 + var_x612 + var_x614 + var_x615 - var_x588 - var_x591 - var_x609 - var_x613 + 6.0010468756032432e-13 * var_x599 + 7.0134857274900101e-12 * var_x600 + 1.7102983595469244e-14 * var_x611 + 515674.21873935661 * var_x590 - 74859394.985954925 * var_x587;
            const double var_x618 = var_x601 + var_x609 + var_x613 - var_x608 - var_x610 - var_x612 - var_x614 - var_x615;
            const double var_x619 = var_x162 * var_x586;
            const double var_x622 = var_x162 * var_x589;
            const double var_x623 = var_x606 * var_x78;
            const double var_x624 = -0.011348161597821153 - 0.011348161597821153 * var_x187;
            const double var_x625 = var_x201 * var_x624;
            const double var_x626 = var_x345 * var_x625;
            const double var_x627 = var_x187 * var_x624;
            const double var_x628 = var_x349 * var_x627;
            const double var_x629 = 56.740807989105761 * var_x628;
            const double var_x630 = var_x335 + var_x629 + 60000.0 * var_x626;
            const double var_x631 = var_x351 * var_x630;
            const double var_x632 = (-0.066666666666666666 - 0.026666666666666668 * var_chaste_interface__intracellular_ions__nai) / pow(var_x338, 2);
            const double var_x633 = var_x632 * var_chaste_interface__intracellular_ions__cai;
            const double var_x634 = 1500000.0 * var_x633;
            const double var_x635 = var_x366 * var_x634;
            const double var_x636 = var_x346 * var_x354;
            const double var_x637 = 40853381.752156146 * var_x223;
            const double var_x638 = var_x353 * var_x636 * var_x637;
            const double var_x639 = var_x359 * var_x630;
            const double var_x640 = var_x334 * var_x632;
            const double var_x641 = var_x64 * var_x640;
            const double var_x642 = 13617793.917385383 * var_x223;
            const double var_x643 = var_x353 * var_x642;
            const double var_x644 = var_x641 * var_x643;
            const double var_x645 = var_x361 * var_x627;
            const double var_x646 = var_x64 * var_x645;
            const double var_x647 = var_x643 * var_x646;
            const double var_x648 = var_x631 + var_x635 + var_x638 + var_x639 + var_x644 + var_x647;
            const double var_x649 = var_x368 * (var_x382 + 300000000.0 * var_x626 + 283704.03994552878 * var_x628);
            const double var_x650 = 9.0785292782569211 * var_x64;
            const double var_x651 = var_x634 + 27.235587834770765 * var_x636 + var_x640 * var_x650 + var_x645 * var_x650;
            const double var_x652 = var_x383 * var_x651;
            const double var_x653 = var_x277 * var_x651;
            const double var_x654 = 136177.93917385384 * var_x251;
            const double var_x655 = var_x636 * var_x654;
            const double var_x656 = 45392.646391284608 * var_x251;
            const double var_x657 = var_x641 * var_x656;
            const double var_x658 = var_x646 * var_x656;
            const double var_x659 = 13617793.917385383 * var_x252;
            const double var_x660 = var_x633 * var_x659;
            const double var_x661 = -var_x631 - var_x635 - var_x638 - var_x639 - var_x644 - var_x647 - var_x649 - var_x652 - var_x653 - var_x655 - var_x657 - var_x658 - var_x660 - var_x291 * var_x630;
            const double var_x662 = var_x649 + var_x652 + var_x655 + var_x657 + var_x658;
            const double var_x663 = var_x540 * var_x661;
            const double var_x664 = var_x542 * var_x661;
            const double var_x665 = var_x375 * var_x412;
            const double var_x666 = 1236295.4078425223 * var_x195;
            const double var_x667 = var_x335 * var_x404 + var_x377 * var_x648 + var_x402 * (var_x653 + var_x660) + var_x404 * var_x629 + var_x409 * var_x664 + var_x411 * var_x663 + var_x536 * var_x661 + var_x641 * var_x665 + var_x646 * var_x665 - var_x401 * var_x662 - var_x405 * var_x648 - var_x408 * var_x664 - var_x413 * var_x663 - var_x414 * var_x662 - var_x539 * var_x661 + 81.706763504312292 * var_x375 * var_x376 * var_x636 + var_x332 * var_x339 * var_x376 * var_x630 * var_x64 * var_x666;
            const double var_x669 = var_x175 + var_x176;
            const double var_x670 = var_x177 * var_x669;
            const double var_x841 = 0.0033664150505232173 * var_x116;
            const double var_x842 = 3.1952008342107772e-13 * var_x128;
            const double var_x843 = 7.762482183650498e-23 * var_x145;
            const double var_x844 = 7.3676861517392123e-33 * var_x149;
            const double var_x845 = 8.19479100791634 * var_x152;
            const double var_x846 = 1.8896041706979408e-19 * var_x158;
            const double var_x847 = 1.0820517070447174e-23 * var_x160;
            const double var_x849 = 0.00014764978291768497 * var_x419;
            const double var_x853 = var_x143 * var_x844;
            const double var_x854 = var_x143 * var_x846;
            const double var_x855 = var_x143 * var_x847;
            const double var_x856 = 0.001643362921287705 * var_x560;
            
            partialF = -0.014705882352941176 - 6.1520742882368733e-5 * var_x585 + (0.0014077849323938687 * var_x619 - 9.6976257329016631e-6 * var_x622 - 5.6499112218960703e-16 * var_x607 - 8.025774201560372e-18 * var_x623 + var_x605 * var_x842 + var_x616 * var_x853 + var_x616 * var_x855 - var_x602 * var_x841 - var_x616 * var_x843 - var_x616 * var_x854 - var_x618 * var_x845) * mParameters[23] - var_x185 * var_x856 - var_x667 * var_x849 - var_x670 * var_x856;
        }
        else
        {
            const double y_save = rY[3];
            rY[3] += delta;
            const double temp = EvaluateYDerivative3(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[3])/delta;
            rY[3] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative4(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__CaMK__CaMKt = rY[2];
        // Units: millimolar; Initial value: 0.0125840447
        double var_chaste_interface__intracellular_ions__nai = rY[3];
        // Units: millimolar; Initial value: 7.268004498
        double var_chaste_interface__intracellular_ions__nass = rY[4];
        // Units: millimolar; Initial value: 7.268089977
        double var_chaste_interface__intracellular_ions__cass = rY[7];
        // Units: millimolar; Initial value: 8.49e-05
        double var_chaste_interface__ICaL__d = rY[25];
        // Units: dimensionless; Initial value: 2.34e-09
        double var_chaste_interface__ICaL__ff = rY[26];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fs = rY[27];
        // Units: dimensionless; Initial value: 0.9102412777
        double var_chaste_interface__ICaL__fcaf = rY[28];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcas = rY[29];
        // Units: dimensionless; Initial value: 0.9998046777
        double var_chaste_interface__ICaL__jca = rY[30];
        // Units: dimensionless; Initial value: 0.9999738312
        double var_chaste_interface__ICaL__ffp = rY[31];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcafp = rY[32];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__nca = rY[33];
        // Units: dimensionless; Initial value: 0.002749414044
        

        // Mathematics
        const double var_CaMK__CaMKo = 0.050000000000000003; // dimensionless
        const double var_CaMK__KmCaM = 0.0015; // millimolar
        const double var_CaMK__KmCaMK = 0.14999999999999999; // millimolar
        const double var_ICaL__Aff = 0.59999999999999998; // dimensionless
        const double var_ICaL__Afs = 1.0 - var_ICaL__Aff; // dimensionless
        const double var_ICaL__f = var_ICaL__Aff * var_chaste_interface__ICaL__ff + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_ICaL__fp = var_ICaL__Aff * var_chaste_interface__ICaL__ffp + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_INaCa_i__KmCaAct = 0.00014999999999999999; // millimolar
        const double var_INaCa_i__kasymm = 12.5; // dimensionless
        const double var_INaCa_i__kcaoff = 5000.0; // per_millisecond
        const double var_INaCa_i__k2_ss = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k5_ss = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__kcaon = 1500000.0; // per_millisecond
        const double var_INaCa_i__kna1 = 15.0; // per_millisecond
        const double var_INaCa_i__kna2 = 5.0; // per_millisecond
        const double var_INaCa_i__kna3 = 88.120000000000005; // per_millisecond
        const double var_INaCa_i__qca = 0.16700000000000001; // dimensionless
        const double var_INaCa_i__qna = 0.52239999999999998; // dimensionless
        const double var_INaCa_i__wca = 60000.0; // dimensionless
        const double var_INaCa_i__wna = 60000.0; // dimensionless
        const double var_INaCa_i__wnaca = 5000.0; // dimensionless
        const double var_cell_geometry__L = 0.01; // centimeter
        const double var_cell_geometry__rad = 0.0011000000000000001; // centimeter
        const double var_cell_geometry__Ageo = 6.2800000000000002 * pow(var_cell_geometry__rad, 2) + 6.2800000000000002 * var_cell_geometry__L * var_cell_geometry__rad; // centimeter_squared
        const double var_cell_geometry__Acap = 2.0 * var_cell_geometry__Ageo; // centimeter_squared
        const double var_cell_geometry__vcell = 3140.0 * pow(var_cell_geometry__rad, 2) * var_cell_geometry__L; // microliter
        const double var_cell_geometry__vss = 0.02 * var_cell_geometry__vcell; // microliter
        const double var_environment__celltype = 0; // dimensionless
        const double var_ICaL__PCa = ((var_environment__celltype == 1.0) ? (1.2 * mParameters[12]) : ((var_environment__celltype == 2.0) ? (2.5 * mParameters[12]) : (mParameters[12]))); // dimensionless
        const double var_ICaL__PCaNa = 0.00125 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCap = 1.1000000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCaNap = 0.00125 * var_ICaL__PCap; // dimensionless
        const double var_INaCa_i__Gncx = ((var_environment__celltype == 1.0) ? (1.1000000000000001 * mParameters[22]) : ((var_environment__celltype == 2.0) ? (1.3999999999999999 * mParameters[22]) : (mParameters[22]))); // milliS_per_microF
        const double var_INaCa_i__h10_ss = 1.0 + (1.0 + mParameters[11] / var_INaCa_i__kna2) * mParameters[11] / var_INaCa_i__kna1 + var_INaCa_i__kasymm; // dimensionless
        const double var_INaCa_i__h11_ss = pow(mParameters[11], 2) / (var_INaCa_i__h10_ss * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h12_ss = 1 / var_INaCa_i__h10_ss; // dimensionless
        const double var_INaCa_i__k1_ss = var_INaCa_i__h12_ss * var_INaCa_i__kcaon * mParameters[9]; // dimensionless
        const double var_CaMK__CaMKb = (1.0 - var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKo / (1.0 + var_CaMK__KmCaM / var_chaste_interface__intracellular_ions__cass); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_ICaL__fICaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INaCa_i__allo_ss = 1 / (1.0 + pow(var_INaCa_i__KmCaAct, 2) / pow(var_chaste_interface__intracellular_ions__cass, 2)); // dimensionless
        const double var_intracellular_ions__cm = 1.0; // microF_per_centimeter_squared
        const double var_INaCa_i__h4_ss = 1.0 + (1.0 + var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna2) * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna1; // dimensionless
        const double var_INaCa_i__h5_ss = pow(var_chaste_interface__intracellular_ions__nass, 2) / (var_INaCa_i__h4_ss * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h6_ss = 1 / var_INaCa_i__h4_ss; // dimensionless
        const double var_INaCa_i__k6_ss = var_INaCa_i__h6_ss * var_INaCa_i__kcaon * var_chaste_interface__intracellular_ions__cass; // dimensionless
        const double var_diff__JdiffNa = 0.5 * var_chaste_interface__intracellular_ions__nass - 0.5 * var_chaste_interface__intracellular_ions__nai; // millimolar_per_millisecond
        const double var_ICaL__Afcaf = 0.29999999999999999 + 0.59999999999999998 / (1.0 + exp(-1.0 + 0.10000000000000001 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__Afcas = 1.0 - var_ICaL__Afcaf; // dimensionless
        const double var_ICaL__PhiCaNa = ((fabs(var_chaste_interface__membrane__v) < 2.6712338705498262e-6) ? (2.671233870549826e-13 * (-0.75 * mParameters[11] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)) + 187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-0.75 * mParameters[11] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-0.75 * mParameters[11] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (0.037435883507802616 * pow(var_chaste_interface__membrane__v, 2) * (-0.75 * mParameters[11] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(0.037435883507802616 * var_chaste_interface__membrane__v)) / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__v)))); // dimensionless
        const double var_ICaL__fca = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcaf + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__fcap = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcafp + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__ICaNa = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaNa * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaNap * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_physical_constants__F = 96485.0; // coulomb_per_mole
        const double var_physical_constants__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_physical_constants__T = 310.0; // kelvin
        const double var_INaCa_i__hca = exp(var_INaCa_i__qca * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // dimensionless
        const double var_INaCa_i__hna = exp(var_INaCa_i__qna * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // dimensionless
        const double var_INaCa_i__h1_ss = 1.0 + (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h2_ss = var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nass / (var_INaCa_i__h1_ss * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h3_ss = 1 / var_INaCa_i__h1_ss; // dimensionless
        const double var_INaCa_i__h7_ss = 1.0 + (1.0 + 1 / var_INaCa_i__hna) * mParameters[11] / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h8_ss = mParameters[11] / (var_INaCa_i__h7_ss * var_INaCa_i__hna * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h9_ss = 1 / var_INaCa_i__h7_ss; // dimensionless
        const double var_INaCa_i__k3p_ss = var_INaCa_i__h9_ss * var_INaCa_i__wca; // dimensionless
        const double var_INaCa_i__k3pp_ss = var_INaCa_i__h8_ss * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k3_ss = var_INaCa_i__k3p_ss + var_INaCa_i__k3pp_ss; // dimensionless
        const double var_INaCa_i__k4p_ss = var_INaCa_i__h3_ss * var_INaCa_i__wca / var_INaCa_i__hca; // dimensionless
        const double var_INaCa_i__k4pp_ss = var_INaCa_i__h2_ss * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k4_ss = var_INaCa_i__k4p_ss + var_INaCa_i__k4pp_ss; // dimensionless
        const double var_INaCa_i__k7_ss = var_INaCa_i__h2_ss * var_INaCa_i__h5_ss * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k8_ss = var_INaCa_i__h11_ss * var_INaCa_i__h8_ss * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__x1_ss = (var_INaCa_i__k2_ss + var_INaCa_i__k3_ss) * var_INaCa_i__k5_ss * var_INaCa_i__k7_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k2_ss * var_INaCa_i__k4_ss; // dimensionless
        const double var_INaCa_i__x2_ss = (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k4_ss * var_INaCa_i__k6_ss + (var_INaCa_i__k4_ss + var_INaCa_i__k5_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k7_ss; // dimensionless
        const double var_INaCa_i__x3_ss = (var_INaCa_i__k2_ss + var_INaCa_i__k3_ss) * var_INaCa_i__k6_ss * var_INaCa_i__k8_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k3_ss; // dimensionless
        const double var_INaCa_i__x4_ss = (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k3_ss * var_INaCa_i__k5_ss + (var_INaCa_i__k4_ss + var_INaCa_i__k5_ss) * var_INaCa_i__k2_ss * var_INaCa_i__k8_ss; // dimensionless
        const double var_INaCa_i__E1_ss = var_INaCa_i__x1_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E2_ss = var_INaCa_i__x2_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E3_ss = var_INaCa_i__x3_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E4_ss = var_INaCa_i__x4_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__JncxCa_ss = var_INaCa_i__E2_ss * var_INaCa_i__k2_ss - var_INaCa_i__E1_ss * var_INaCa_i__k1_ss; // millimolar_per_millisecond
        const double var_INaCa_i__JncxNa_ss = var_INaCa_i__E3_ss * var_INaCa_i__k4pp_ss - var_INaCa_i__E2_ss * var_INaCa_i__k3pp_ss + 3.0 * var_INaCa_i__E4_ss * var_INaCa_i__k7_ss - 3.0 * var_INaCa_i__E1_ss * var_INaCa_i__k8_ss; // millimolar_per_millisecond
        const double var_physical_constants__zca = 2.0; // dimensionless
        const double var_physical_constants__zna = 1.0; // dimensionless
        const double var_INaCa_i__INaCa_ss = 0.20000000000000001 * (var_INaCa_i__JncxCa_ss * var_physical_constants__zca + var_INaCa_i__JncxNa_ss * var_physical_constants__zna) * var_INaCa_i__Gncx * var_INaCa_i__allo_ss; // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ions__nass = -var_diff__JdiffNa + (-var_ICaL__ICaNa - 3.0 * var_INaCa_i__INaCa_ss) * var_cell_geometry__Acap * var_intracellular_ions__cm / (var_cell_geometry__vss * var_physical_constants__F); // millimolar / millisecond

        return d_dt_chaste_interface_var_intracellular_ions__nass;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative4(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            double var_chaste_interface__CaMK__CaMKt = rY[2];
            // Units: millimolar; Initial value: 0.0125840447
            double var_chaste_interface__intracellular_ions__nass = rY[4];
            // Units: millimolar; Initial value: 7.268089977
            double var_chaste_interface__intracellular_ions__cass = rY[7];
            // Units: millimolar; Initial value: 8.49e-05
            double var_chaste_interface__ICaL__d = rY[25];
            // Units: dimensionless; Initial value: 2.34e-09
            double var_chaste_interface__ICaL__ff = rY[26];
            // Units: dimensionless; Initial value: 0.9999999909
            double var_chaste_interface__ICaL__fs = rY[27];
            // Units: dimensionless; Initial value: 0.9102412777
            double var_chaste_interface__ICaL__fcaf = rY[28];
            // Units: dimensionless; Initial value: 0.9999999909
            double var_chaste_interface__ICaL__fcas = rY[29];
            // Units: dimensionless; Initial value: 0.9998046777
            double var_chaste_interface__ICaL__jca = rY[30];
            // Units: dimensionless; Initial value: 0.9999738312
            double var_chaste_interface__ICaL__ffp = rY[31];
            // Units: dimensionless; Initial value: 0.9999999909
            double var_chaste_interface__ICaL__fcafp = rY[32];
            // Units: dimensionless; Initial value: 0.9999999909
            double var_chaste_interface__ICaL__nca = rY[33];
            // Units: dimensionless; Initial value: 0.002749414044
            

            const double var_x1 = exp(9.9999999999999995e-8);
            const double var_x2 = 1 / (-1.0 + var_x1);
            const double var_x4 = exp(-9.9999999999999995e-8);
            const double var_x5 = 1 / (-1.0 + var_x4);
            const double var_x7 = fabs(var_chaste_interface__membrane__v);
            const double var_x8 = var_x7 < 2.6712338705498262e-6;
            const double var_x9 = exp(0.037435883507802616 * var_chaste_interface__membrane__v);
            const double var_x10 = -1.0 + var_x9;
            const double var_x11 = 1 / var_x10;
            const double var_x16 = pow(var_chaste_interface__membrane__v, 2);
            const double var_x17 = var_x11 * var_x16;
            const double var_x41 = 1.0 - var_chaste_interface__CaMK__CaMKt;
            const double var_x42 = 1 / var_chaste_interface__intracellular_ions__cass;
            const double var_x43 = 1.0 + 0.0015 * var_x42;
            const double var_x44 = 1 / var_x43;
            const double var_x45 = 0.050000000000000003 * var_x44;
            const double var_x46 = var_x41 * var_x45 + var_chaste_interface__CaMK__CaMKt;
            const double var_x47 = 1.0 + 0.14999999999999999 / var_x46;
            const double var_x48 = 1 / var_x47;
            const double var_x76 = pow(mParameters[11], 3);
            const double var_x186 = 1 / (13.5 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * mParameters[11]) * mParameters[11]);
            const double var_x187 = exp(0.019556505544476088 * var_chaste_interface__membrane__v);
            const double var_x188 = 1 / var_x187;
            const double var_x189 = 1.0 + 0.011348161597821153 * (1.0 + var_x188) * mParameters[11];
            const double var_x194 = 1 / var_x189;
            const double var_x195 = var_x186 * var_x194 * var_x76;
            const double var_x196 = var_x188 * var_x195;
            const double var_x198 = 0.011348161597821153 + 0.011348161597821153 * var_x187;
            const double var_x199 = 1.0 + var_x198 * var_chaste_interface__intracellular_ions__nass;
            const double var_x200 = 1 / var_x199;
            const double var_x201 = 1 / exp(0.0062517925458030373 * var_chaste_interface__membrane__v);
            const double var_x202 = var_x200 * var_x201;
            const double var_x203 = var_x187 * var_x200;
            const double var_x204 = 56.740807989105761 * var_x203;
            const double var_x205 = var_x204 * var_chaste_interface__intracellular_ions__nass;
            const double var_x206 = var_x205 + 60000.0 * var_x202;
            const double var_x207 = 1.0 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * var_chaste_interface__intracellular_ions__nass) * var_chaste_interface__intracellular_ions__nass;
            const double var_x208 = 1 / var_x207;
            const double var_x209 = 1500000.0 * var_x208;
            const double var_x210 = var_x209 * var_chaste_interface__intracellular_ions__cass;
            const double var_x212 = var_x203 * var_chaste_interface__intracellular_ions__nass;
            const double var_x215 = pow(var_x199, (-2));
            const double var_x216 = pow(var_chaste_interface__intracellular_ions__nass, 2);
            const double var_x221 = var_x215 * var_chaste_interface__intracellular_ions__nass;
            const double var_x223 = var_x186 * mParameters[9];
            const double var_x224 = 1500000.0 * var_x223;
            const double var_x225 = var_x224 + 9.0785292782569211 * var_x196;
            const double var_x226 = var_x210 * var_x225;
            const double var_x228 = 5000.0 + var_x206;
            const double var_x229 = pow(var_chaste_interface__intracellular_ions__nass, 3);
            const double var_x230 = var_x203 * var_x208;
            const double var_x231 = var_x229 * var_x230;
            const double var_x232 = var_x223 * var_x231;
            const double var_x233 = var_x228 * var_x232;
            const double var_x235 = 13617793.917385383 * var_x232;
            const double var_x237 = var_x208 * var_x215;
            const double var_x243 = var_x206 * var_x225;
            const double var_x244 = 13617793.917385383 * var_x233 + var_x210 * var_x243;
            const double var_x245 = var_x210 + 9.0785292782569211 * var_x231;
            const double var_x246 = var_x188 * mParameters[11];
            const double var_x247 = var_x194 * var_x246;
            const double var_x248 = 56.740807989105761 * var_x247;
            const double var_x249 = var_x248 + 60000.0 * var_x194;
            const double var_x250 = var_x245 * var_x249;
            const double var_x251 = 5000.0 + var_x249;
            const double var_x252 = var_x196 * var_x251;
            const double var_x253 = var_x208 * var_x252;
            const double var_x254 = var_x253 * var_chaste_interface__intracellular_ions__cass;
            const double var_x255 = 13617793.917385383 * var_x254 + var_x224 * var_x250;
            const double var_x256 = var_x206 * var_x245;
            const double var_x257 = var_x231 * var_x251;
            const double var_x258 = 5000.0 * var_x256 + 45392.646391284608 * var_x257;
            const double var_x259 = var_x225 * var_x249;
            const double var_x260 = 5000.0 * var_x259;
            const double var_x261 = var_x196 * var_x228;
            const double var_x262 = var_x260 + 45392.646391284608 * var_x261;
            const double var_x263 = 1 / (var_x244 + var_x255 + var_x258 + var_x262);
            const double var_x264 = 10000.0 * var_x263;
            const double var_x265 = 0.00036716666666666668 * var_x259;
            const double var_x266 = var_x208 * var_x243;
            const double var_x267 = 0.11015000000000001 * var_x223;
            const double var_x268 = pow((var_x233 + var_x254 + var_x265 + 0.0033333333333333331 * var_x257 + 0.0033333333333333331 * var_x261 + 0.00036716666666666668 * var_x256 + var_x250 * var_x267 + 0.11015000000000001 * var_x266 * var_chaste_interface__intracellular_ions__cass), (-2));
            const double var_x272 = 283704.03994552878 * var_x203;
            const double var_x273 = 300000000.0 * var_x202 + var_x272 * var_chaste_interface__intracellular_ions__nass;
            const double var_x277 = var_x224 * var_x249;
            const double var_x291 = 45392.646391284608 * var_x196;
            const double var_x306 = 5.3924544444444452e-11 * var_x244;
            const double var_x307 = 3000000.0 * var_x223;
            const double var_x309 = var_x205 * var_x263;
            const double var_x311 = var_x255 * var_x263;
            const double var_x312 = var_x248 * var_x263;
            const double var_x313 = 1.6177363333333335e-8 * var_x223;
            const double var_x316 = var_x196 * var_x258;
            const double var_x317 = var_x231 * var_x262;
            const double var_x319 = var_x212 * var_x255;
            const double var_x321 = 27.235587834770765 * var_x263;
            const double var_x322 = var_x244 * var_x247;
            const double var_x325 = 1.4686666666666667e-13 * var_x317;
            const double var_x327 = pow(var_chaste_interface__intracellular_ions__cass, (-2));
            const double var_x328 = 1.0 + 2.2499999999999996e-8 * var_x327;
            const double var_x329 = mParameters[22] / var_x328;
            const double var_x445 = 1.0 - var_chaste_interface__ICaL__nca;
            const double var_x446 = 0.40000000000000002 * var_chaste_interface__ICaL__fs;
            const double var_x447 = 0.59999999999999998 * var_chaste_interface__ICaL__ff;
            const double var_x448 = 0.10000000000000001 * var_chaste_interface__membrane__v;
            const double var_x449 = exp(-1.0 + var_x448);
            const double var_x450 = 1.0 + var_x449;
            const double var_x451 = 0.59999999999999998 / var_x450;
            const double var_x452 = 0.29999999999999999 + var_x451;
            const double var_x453 = 0.69999999999999996 - var_x451;
            const double var_x454 = var_x453 * var_chaste_interface__ICaL__fcas;
            const double var_x455 = var_x454 + var_x452 * var_chaste_interface__ICaL__fcaf;
            const double var_x456 = var_x455 * var_chaste_interface__ICaL__jca;
            const double var_x457 = (var_x445 * (var_x446 + var_x447) + var_x456 * var_chaste_interface__ICaL__nca) * mParameters[12];
            const double var_x458 = var_x457 * var_chaste_interface__ICaL__d;
            const double var_x465 = var_x17 * var_x9;
            const double var_x478 = 0.59999999999999998 * var_chaste_interface__ICaL__ffp;
            const double var_x479 = var_x454 + var_x452 * var_chaste_interface__ICaL__fcafp;
            const double var_x480 = var_x479 * var_chaste_interface__ICaL__jca;
            const double var_x481 = var_x445 * (var_x446 + var_x478) + var_x480 * var_chaste_interface__ICaL__nca;
            const double var_x482 = var_x48 * var_x481;
            const double var_x483 = var_x482 * mParameters[12];
            const double var_x484 = var_x483 * var_chaste_interface__ICaL__d;
            const double var_x583 = 0.5 + 187179.41753901311 * var_chaste_interface__membrane__v;
            const double var_x624 = -0.011348161597821153 - 0.011348161597821153 * var_x187;
            const double var_x625 = var_x201 * var_x624;
            const double var_x627 = var_x187 * var_x624;
            const double var_x637 = 40853381.752156146 * var_x223;
            const double var_x642 = 13617793.917385383 * var_x223;
            const double var_x654 = 136177.93917385384 * var_x251;
            const double var_x656 = 45392.646391284608 * var_x251;
            const double var_x659 = 13617793.917385383 * var_x252;
            const double var_x666 = 1236295.4078425223 * var_x195;
            const double var_x672 = var_x215 * var_x625;
            const double var_x673 = var_x221 * var_x627;
            const double var_x674 = 56.740807989105761 * var_x673;
            const double var_x675 = var_x204 + var_x674 + 60000.0 * var_x672;
            const double var_x676 = var_x226 * var_x675;
            const double var_x677 = (-0.066666666666666666 - 0.026666666666666668 * var_chaste_interface__intracellular_ions__nass) / pow(var_x207, 2);
            const double var_x678 = var_x677 * var_chaste_interface__intracellular_ions__cass;
            const double var_x679 = 1500000.0 * var_x678;
            const double var_x680 = var_x243 * var_x679;
            const double var_x681 = var_x216 * var_x230;
            const double var_x682 = var_x228 * var_x637 * var_x681;
            const double var_x683 = var_x235 * var_x675;
            const double var_x684 = var_x203 * var_x677;
            const double var_x685 = var_x229 * var_x684;
            const double var_x686 = var_x228 * var_x642;
            const double var_x687 = var_x685 * var_x686;
            const double var_x688 = var_x237 * var_x627;
            const double var_x689 = var_x229 * var_x688;
            const double var_x690 = var_x686 * var_x689;
            const double var_x691 = var_x676 + var_x680 + var_x682 + var_x683 + var_x687 + var_x690;
            const double var_x692 = var_x245 * (var_x272 + 300000000.0 * var_x672 + 283704.03994552878 * var_x673);
            const double var_x693 = 9.0785292782569211 * var_x229;
            const double var_x694 = var_x679 + 27.235587834770765 * var_x681 + var_x684 * var_x693 + var_x688 * var_x693;
            const double var_x695 = var_x273 * var_x694;
            const double var_x696 = var_x277 * var_x694;
            const double var_x697 = var_x654 * var_x681;
            const double var_x698 = var_x229 * var_x656;
            const double var_x699 = var_x684 * var_x698;
            const double var_x700 = var_x688 * var_x698;
            const double var_x701 = var_x659 * var_x678;
            const double var_x702 = -var_x676 - var_x680 - var_x682 - var_x683 - var_x687 - var_x690 - var_x692 - var_x695 - var_x696 - var_x697 - var_x699 - var_x700 - var_x701 - var_x291 * var_x675;
            const double var_x703 = var_x268 * var_x306;
            const double var_x704 = var_x692 + var_x695 + var_x697 + var_x699 + var_x700;
            const double var_x705 = var_x263 * var_x307;
            const double var_x706 = var_x268 * var_x702;
            const double var_x707 = var_x258 * var_x313;
            const double var_x708 = 3.0597222222222222e-13 * var_x706;
            const double var_x709 = var_x262 * var_x321;
            const double var_x710 = 1.4686666666666667e-13 * var_x316;
            const double var_x711 = var_x204 * var_x311 + var_x264 * var_x691 + var_x309 * (var_x696 + var_x701) + var_x311 * var_x674 + var_x319 * var_x708 + var_x325 * var_x706 + var_x685 * var_x709 + var_x689 * var_x709 + var_x702 * var_x703 - var_x312 * var_x691 - var_x322 * var_x708 - var_x704 * var_x705 - var_x706 * var_x707 - var_x706 * var_x710 - var_x196 * var_x321 * var_x704 + 81.706763504312292 * var_x262 * var_x263 * var_x681 + var_x200 * var_x208 * var_x229 * var_x263 * var_x666 * var_x675;
            const double var_x712 = 2.0034254029123695e-13 * var_x4 * var_x5;
            const double var_x713 = ((var_x8) ? (var_x712 + var_x583 * (-var_x712 + 2.0034254029123695e-13 * var_x1 * var_x2)) : (0.028076912630851963 * var_x465));
            const double var_x857 = 0.0012550231548003222 * var_x329;
            const double var_x858 = -2.6146315725006711e-6 + 2.6146315725006711e-6 * var_x48;
            const double var_x859 = var_x458 * var_x858;
            const double var_x860 = 2.8760947297507386e-6 * var_x484;
            
            partialF = -0.5 + var_x713 * var_x859 - var_x711 * var_x857 - var_x713 * var_x860;
        }
        else
        {
            const double y_save = rY[4];
            rY[4] += delta;
            const double temp = EvaluateYDerivative4(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[4])/delta;
            rY[4] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative5(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__intracellular_ions__cai = rY[1];
        // Units: millimolar; Initial value: 8.6e-05
        double var_chaste_interface__CaMK__CaMKt = rY[2];
        // Units: millimolar; Initial value: 0.0125840447
        double var_chaste_interface__intracellular_ions__nai = rY[3];
        // Units: millimolar; Initial value: 7.268004498
        double var_chaste_interface__intracellular_ions__ki = rY[5];
        // Units: millimolar; Initial value: 144.6555918
        double var_chaste_interface__intracellular_ions__kss = rY[6];
        // Units: millimolar; Initial value: 144.6555651
        double var_chaste_interface__intracellular_ions__cass = rY[7];
        // Units: millimolar; Initial value: 8.49e-05
        double var_chaste_interface__Ito__a = rY[19];
        // Units: dimensionless; Initial value: 0.001001097687
        double var_chaste_interface__Ito__iF = rY[20];
        // Units: dimensionless; Initial value: 0.9995541745
        double var_chaste_interface__Ito__iS = rY[21];
        // Units: dimensionless; Initial value: 0.5865061736
        double var_chaste_interface__Ito__ap = rY[22];
        // Units: dimensionless; Initial value: 0.0005100862934
        double var_chaste_interface__Ito__iFp = rY[23];
        // Units: dimensionless; Initial value: 0.9995541823
        double var_chaste_interface__Ito__iSp = rY[24];
        // Units: dimensionless; Initial value: 0.6393399482
        double var_chaste_interface__IKr__O = rY[38];
        // Units: dimensionless; Initial value: 0.00015551
        double var_chaste_interface__IKs__xs1 = rY[43];
        // Units: dimensionless; Initial value: 0.2707758025
        double var_chaste_interface__IKs__xs2 = rY[44];
        // Units: dimensionless; Initial value: 0.0001928503426
        double var_chaste_interface__IK1__xk1 = rY[45];
        // Units: dimensionless; Initial value: 0.9967597594
        

        // Mathematics
        const double var_CaMK__CaMKo = 0.050000000000000003; // dimensionless
        const double var_CaMK__KmCaM = 0.0015; // millimolar
        const double var_CaMK__KmCaMK = 0.14999999999999999; // millimolar
        const double var_INaK__H = 9.9999999999999995e-8; // millimolar
        const double var_INaK__Khp = 1.698e-7; // millimolar
        const double var_INaK__Kki = 0.5; // per_millisecond
        const double var_INaK__Kko = 0.35820000000000002; // per_millisecond
        const double var_INaK__Kmgatp = 1.698e-7; // millimolar
        const double var_INaK__Knai0 = 9.0730000000000004; // millimolar
        const double var_INaK__Knao0 = 27.780000000000001; // millimolar
        const double var_INaK__Knap = 224.0; // millimolar
        const double var_INaK__Kxkur = 292.0; // millimolar
        const double var_INaK__MgADP = 0.050000000000000003; // millimolar
        const double var_INaK__MgATP = 9.8000000000000007; // millimolar
        const double var_INaK__delta = -0.155; // millivolt
        const double var_INaK__eP = 4.2000000000000002; // dimensionless
        const double var_INaK__k1m = 182.40000000000001; // per_millisecond
        const double var_INaK__b1 = var_INaK__MgADP * var_INaK__k1m; // dimensionless
        const double var_INaK__k1p = 949.5; // per_millisecond
        const double var_INaK__k2m = 39.399999999999999; // per_millisecond
        const double var_INaK__k2p = 687.20000000000005; // per_millisecond
        const double var_INaK__a2 = var_INaK__k2p; // dimensionless
        const double var_INaK__k3m = 79300.0; // per_millisecond
        const double var_INaK__k3p = 1899.0; // per_millisecond
        const double var_INaK__k4m = 40.0; // per_millisecond
        const double var_INaK__k4p = 639.0; // per_millisecond
        const double var_INaK__a4 = var_INaK__MgATP * var_INaK__k4p / ((1.0 + var_INaK__MgATP / var_INaK__Kmgatp) * var_INaK__Kmgatp); // dimensionless
        const double var_cell_geometry__L = 0.01; // centimeter
        const double var_cell_geometry__rad = 0.0011000000000000001; // centimeter
        const double var_cell_geometry__Ageo = 6.2800000000000002 * pow(var_cell_geometry__rad, 2) + 6.2800000000000002 * var_cell_geometry__L * var_cell_geometry__rad; // centimeter_squared
        const double var_cell_geometry__Acap = 2.0 * var_cell_geometry__Ageo; // centimeter_squared
        const double var_cell_geometry__vcell = 3140.0 * pow(var_cell_geometry__rad, 2) * var_cell_geometry__L; // microliter
        const double var_cell_geometry__vmyo = 0.68000000000000005 * var_cell_geometry__vcell; // microliter
        const double var_cell_geometry__vss = 0.02 * var_cell_geometry__vcell; // microliter
        const double var_environment__celltype = 0; // dimensionless
        const double var_IK1__GK1 = ((var_environment__celltype == 1.0) ? (1.2 * mParameters[18]) : ((var_environment__celltype == 2.0) ? (1.3 * mParameters[18]) : (mParameters[18]))); // milliS_per_microF
        const double var_IKb__GKb = ((var_environment__celltype == 1.0) ? (0.59999999999999998 * mParameters[14]) : (mParameters[14])); // milliS_per_microF
        const double var_IKr__GKr = ((var_environment__celltype == 1.0) ? (1.3 * mParameters[20]) : ((var_environment__celltype == 2.0) ? (0.80000000000000004 * mParameters[20]) : (mParameters[20]))); // milliS_per_microF
        const double var_IKs__GKs = ((var_environment__celltype == 1.0) ? (1.3999999999999999 * mParameters[21]) : (mParameters[21])); // milliS_per_microF
        const double var_INaK__Pnak = ((var_environment__celltype == 1.0) ? (0.90000000000000002 * mParameters[23]) : ((var_environment__celltype == 2.0) ? (0.69999999999999996 * mParameters[23]) : (mParameters[23]))); // milliS_per_microF
        const double var_Ito__Gto = (((var_environment__celltype == 1.0) || (var_environment__celltype == 2.0)) ? (4.0 * mParameters[24]) : (mParameters[24])); // milliS_per_microF
        const double var_IK1__GK1_calc = sqrt(mParameters[10]) * var_IK1__GK1; // milliS_per_microF
        const double var_IKr__GKr_calc = 0.43033148291193518 * sqrt(mParameters[10]) * var_IKr__GKr; // milliS_per_microF
        const double var_IKs__KsCa = 1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__intracellular_ions__cai), 1.3999999999999999)); // dimensionless
        const double var_IKs__GKs_calc = var_IKs__GKs * var_IKs__KsCa; // milliS_per_microF
        const double var_CaMK__CaMKb = (1.0 - var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKo / (1.0 + var_CaMK__KmCaM / var_chaste_interface__intracellular_ions__cass); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_Ito__fItop = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_intracellular_ions__cm = 1.0; // microF_per_centimeter_squared
        const double var_diff__JdiffK = 0.5 * var_chaste_interface__intracellular_ions__kss - 0.5 * var_chaste_interface__intracellular_ions__ki; // millimolar_per_millisecond
        const double var_INaK__P = var_INaK__eP / (1.0 + var_INaK__H / var_INaK__Khp + var_chaste_interface__intracellular_ions__nai / var_INaK__Knap + var_chaste_interface__intracellular_ions__ki / var_INaK__Kxkur); // dimensionless
        const double var_INaK__b3 = var_INaK__H * var_INaK__P * var_INaK__k3m / (1.0 + var_INaK__MgATP / var_INaK__Kmgatp); // dimensionless
        const double var_membrane__Istim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
        const double var_membrane__Istim = var_membrane__Istim_converted / HeartConfig::Instance()->GetCapacitance(); // microA_per_microF
        const double var_IK1__rk1 = 1 / (1.0 + exp(11.145054250500367 + 0.10534077741493732 * var_chaste_interface__membrane__v - 0.27388602127883704 * mParameters[10])); // millisecond
        const double var_IKb__xkb = 1 / (1.0 + exp(0.78953107960741553 - 0.054525627044711013 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__AiF = 1 / (1.0 + exp(-1.4126984126984128 + 0.0066137566137566143 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__AiS = 1.0 - var_Ito__AiF; // dimensionless
        const double var_Ito__i = var_Ito__AiF * var_chaste_interface__Ito__iF + var_Ito__AiS * var_chaste_interface__Ito__iS; // dimensionless
        const double var_Ito__ip = var_Ito__AiF * var_chaste_interface__Ito__iFp + var_Ito__AiS * var_chaste_interface__Ito__iSp; // dimensionless
        const double var_physical_constants__F = 96485.0; // coulomb_per_mole
        const double var_physical_constants__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_physical_constants__T = 310.0; // kelvin
        const double var_INaK__Knai = var_INaK__Knai0 * exp(0.33333333333333331 * var_INaK__delta * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // millimolar
        const double var_INaK__Knao = var_INaK__Knao0 * exp(0.33333333333333331 * (1.0 - var_INaK__delta) * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // millimolar
        const double var_INaK__a1 = pow(var_chaste_interface__intracellular_ions__nai, 3) * var_INaK__k1p / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__ki / var_INaK__Kki), 2) + pow((1.0 + var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3)) * pow(var_INaK__Knai, 3)); // dimensionless
        const double var_INaK__a3 = pow(mParameters[10], 2) * var_INaK__k3p / ((-1.0 + pow((1.0 + mParameters[10] / var_INaK__Kko), 2) + pow((1.0 + mParameters[11] / var_INaK__Knao), 3)) * pow(var_INaK__Kko, 2)); // dimensionless
        const double var_INaK__b2 = pow(mParameters[11], 3) * var_INaK__k2m / ((-1.0 + pow((1.0 + mParameters[10] / var_INaK__Kko), 2) + pow((1.0 + mParameters[11] / var_INaK__Knao), 3)) * pow(var_INaK__Knao, 3)); // dimensionless
        const double var_INaK__b4 = pow(var_chaste_interface__intracellular_ions__ki, 2) * var_INaK__k4m / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__ki / var_INaK__Kki), 2) + pow((1.0 + var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3)) * pow(var_INaK__Kki, 2)); // dimensionless
        const double var_INaK__x1 = var_INaK__a1 * var_INaK__a2 * var_INaK__a4 + var_INaK__a1 * var_INaK__a2 * var_INaK__b3 + var_INaK__a2 * var_INaK__b3 * var_INaK__b4 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__x2 = var_INaK__a1 * var_INaK__a2 * var_INaK__a3 + var_INaK__a2 * var_INaK__a3 * var_INaK__b4 + var_INaK__a3 * var_INaK__b1 * var_INaK__b4 + var_INaK__b1 * var_INaK__b2 * var_INaK__b4; // dimensionless
        const double var_INaK__x3 = var_INaK__a2 * var_INaK__a3 * var_INaK__a4 + var_INaK__a3 * var_INaK__a4 * var_INaK__b1 + var_INaK__a4 * var_INaK__b1 * var_INaK__b2 + var_INaK__b1 * var_INaK__b2 * var_INaK__b3; // dimensionless
        const double var_INaK__x4 = var_INaK__a1 * var_INaK__a3 * var_INaK__a4 + var_INaK__a1 * var_INaK__a4 * var_INaK__b2 + var_INaK__a1 * var_INaK__b2 * var_INaK__b3 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__E1 = var_INaK__x1 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E2 = var_INaK__x2 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E3 = var_INaK__x3 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E4 = var_INaK__x4 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__JnakK = 2.0 * var_INaK__E4 * var_INaK__b1 - 2.0 * var_INaK__E3 * var_INaK__a1; // millimolar_per_millisecond
        const double var_INaK__JnakNa = 3.0 * var_INaK__E1 * var_INaK__a3 - 3.0 * var_INaK__E2 * var_INaK__b3; // millimolar_per_millisecond
        const double var_physical_constants__zk = 1.0; // dimensionless
        const double var_physical_constants__zna = 1.0; // dimensionless
        const double var_INaK__INaK = (var_INaK__JnakK * var_physical_constants__zk + var_INaK__JnakNa * var_physical_constants__zna) * var_INaK__Pnak; // microA_per_microF
        const double var_reversal_potentials__EK = var_physical_constants__R * var_physical_constants__T * log(mParameters[10] / var_chaste_interface__intracellular_ions__ki) / var_physical_constants__F; // millivolt
        const double var_IK1__IK1 = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IK1__GK1_calc * var_IK1__rk1 * var_chaste_interface__IK1__xk1; // microA_per_microF
        const double var_IKb__IKb = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IKb__GKb * var_IKb__xkb; // microA_per_microF
        const double var_IKr__IKr = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IKr__GKr_calc * var_chaste_interface__IKr__O; // microA_per_microF
        const double var_Ito__Ito = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * ((1.0 - var_Ito__fItop) * var_chaste_interface__Ito__a * var_Ito__i + var_chaste_interface__Ito__ap * var_Ito__fItop * var_Ito__ip) * var_Ito__Gto; // microA_per_microF
        const double var_reversal_potentials__PKNa = 0.018329999999999999; // dimensionless
        const double var_reversal_potentials__EKs = var_physical_constants__R * var_physical_constants__T * log((mParameters[11] * var_reversal_potentials__PKNa + mParameters[10]) / (var_chaste_interface__intracellular_ions__nai * var_reversal_potentials__PKNa + var_chaste_interface__intracellular_ions__ki)) / var_physical_constants__F; // millivolt
        const double var_IKs__IKs = (-var_reversal_potentials__EKs + var_chaste_interface__membrane__v) * var_IKs__GKs_calc * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2; // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ions__ki = var_cell_geometry__vss * var_diff__JdiffK / var_cell_geometry__vmyo + (-var_IK1__IK1 - var_IKb__IKb - var_IKr__IKr - var_IKs__IKs - var_Ito__Ito - var_membrane__Istim + 2.0 * var_INaK__INaK) * var_cell_geometry__Acap * var_intracellular_ions__cm / (var_cell_geometry__vmyo * var_physical_constants__F); // millimolar / millisecond

        return d_dt_chaste_interface_var_intracellular_ions__ki;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative5(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            double var_chaste_interface__intracellular_ions__cai = rY[1];
            // Units: millimolar; Initial value: 8.6e-05
            double var_chaste_interface__CaMK__CaMKt = rY[2];
            // Units: millimolar; Initial value: 0.0125840447
            double var_chaste_interface__intracellular_ions__nai = rY[3];
            // Units: millimolar; Initial value: 7.268004498
            double var_chaste_interface__intracellular_ions__ki = rY[5];
            // Units: millimolar; Initial value: 144.6555918
            double var_chaste_interface__intracellular_ions__cass = rY[7];
            // Units: millimolar; Initial value: 8.49e-05
            double var_chaste_interface__Ito__a = rY[19];
            // Units: dimensionless; Initial value: 0.001001097687
            double var_chaste_interface__Ito__iF = rY[20];
            // Units: dimensionless; Initial value: 0.9995541745
            double var_chaste_interface__Ito__iS = rY[21];
            // Units: dimensionless; Initial value: 0.5865061736
            double var_chaste_interface__Ito__ap = rY[22];
            // Units: dimensionless; Initial value: 0.0005100862934
            double var_chaste_interface__Ito__iFp = rY[23];
            // Units: dimensionless; Initial value: 0.9995541823
            double var_chaste_interface__Ito__iSp = rY[24];
            // Units: dimensionless; Initial value: 0.6393399482
            double var_chaste_interface__IKr__O = rY[38];
            // Units: dimensionless; Initial value: 0.00015551
            double var_chaste_interface__IKs__xs1 = rY[43];
            // Units: dimensionless; Initial value: 0.2707758025
            double var_chaste_interface__IKs__xs2 = rY[44];
            // Units: dimensionless; Initial value: 0.0001928503426
            double var_chaste_interface__IK1__xk1 = rY[45];
            // Units: dimensionless; Initial value: 0.9967597594
            

            const double var_x35 = exp(-1.4126984126984128 + 0.0066137566137566143 * var_chaste_interface__membrane__v);
            const double var_x36 = 1.0 + var_x35;
            const double var_x37 = 1 / var_x36;
            const double var_x38 = var_x37;
            const double var_x39 = 1.0 - var_x38;
            const double var_x40 = var_x38 * var_chaste_interface__Ito__iF + var_x39 * var_chaste_interface__Ito__iS;
            const double var_x41 = 1.0 - var_chaste_interface__CaMK__CaMKt;
            const double var_x42 = 1 / var_chaste_interface__intracellular_ions__cass;
            const double var_x43 = 1.0 + 0.0015 * var_x42;
            const double var_x44 = 1 / var_x43;
            const double var_x45 = 0.050000000000000003 * var_x44;
            const double var_x46 = var_x41 * var_x45 + var_chaste_interface__CaMK__CaMKt;
            const double var_x47 = 1.0 + 0.14999999999999999 / var_x46;
            const double var_x48 = 1 / var_x47;
            const double var_x49 = var_x48;
            const double var_x50 = 1.0 - var_x49;
            const double var_x51 = var_x50 * var_chaste_interface__Ito__a;
            const double var_x52 = var_x40 * var_x51;
            const double var_x53 = var_x38 * var_chaste_interface__Ito__iFp + var_x39 * var_chaste_interface__Ito__iSp;
            const double var_x54 = var_x49 * var_chaste_interface__Ito__ap;
            const double var_x55 = var_x53 * var_x54;
            const double var_x56 = exp(0.014412815150504008 * var_chaste_interface__membrane__v);
            const double var_x57 = mParameters[11] / var_x56;
            const double var_x58 = 1.0 + 0.035997120230381568 * var_x57;
            const double var_x59 = pow(var_x58, 3);
            const double var_x60 = pow((0.35820000000000002 + mParameters[10]), 2);
            const double var_x61 = 1 / (-1.0 + var_x59 + 7.7937924625297832 * var_x60);
            const double var_x62 = pow(mParameters[10], 2);
            const double var_x63 = var_x61 * var_x62;
            const double var_x64 = pow(var_chaste_interface__intracellular_ions__nai, 3);
            const double var_x65 = exp(-0.001934187314569802 * var_chaste_interface__membrane__v);
            const double var_x66 = 1 / var_x65;
            const double var_x67 = var_x66 * var_chaste_interface__intracellular_ions__nai;
            const double var_x68 = 1.0 + 0.11021712774165104 * var_x67;
            const double var_x69 = pow(var_x68, 3);
            const double var_x70 = pow((0.5 + var_chaste_interface__intracellular_ions__ki), 2);
            const double var_x71 = 1 / (-1.0 + var_x69 + 4.0 * var_x70);
            const double var_x72 = pow(var_x65, (-3));
            const double var_x73 = var_x71 * var_x72;
            const double var_x74 = var_x64 * var_x73;
            const double var_x75 = var_x63 * var_x74;
            const double var_x76 = pow(mParameters[11], 3);
            const double var_x77 = var_x61 * var_x76 / pow(var_x56, 3);
            const double var_x78 = var_x74 * var_x77;
            const double var_x81 = pow((-0.25 + var_x70 + 0.25 * var_x69), (-2));
            const double var_x91 = 1 / (1.5889281507656066 + 0.0034246575342465752 * var_chaste_interface__intracellular_ions__ki + 0.004464285714285714 * var_chaste_interface__intracellular_ions__nai);
            const double var_x92 = var_x74 * var_x91;
            const double var_x93 = var_x77 * var_x92;
            const double var_x98 = var_x77 * var_x91;
            const double var_x100 = pow(var_chaste_interface__intracellular_ions__ki, 2);
            const double var_x101 = var_x100 * var_x71;
            const double var_x102 = var_x101 * var_x91;
            const double var_x103 = var_x102 * var_x77;
            const double var_x105 = var_x100 * var_x98;
            const double var_x110 = var_x101 * var_x63;
            const double var_x111 = var_x101 * var_x77;
            const double var_x112 = 2.6817254812739919 * var_x111 + 1648931648.7518551 * var_x110;
            const double var_x113 = 6585420658.1002293 * var_x63 + 9.6722701128385645e-12 * var_x98 + 10.71014095526842 * var_x77;
            const double var_x114 = 1.348266719199441e-12 * var_x93 + 1.4929407925401197 * var_x78;
            const double var_x115 = 6.3450816326903207e-5 * var_x102 + 5.041496472709802e-7 * var_x92 + 558246.7943749798 * var_x74;
            const double var_x116 = 1 / (var_x112 + var_x113 + var_x114 + var_x115 + 3.3937789869608994e-10 * var_x103 + 24953131.661984976 * var_x75);
            const double var_x121 = var_x100 * var_x63;
            const double var_x124 = var_x100 * var_x77;
            const double var_x128 = var_x116 * var_x91;
            const double var_x139 = var_x100 * var_x91;
            const double var_x143 = pow((var_x63 + 0.25039124064514068 * var_x110 + 7.6555420442407695e-17 * var_x92 + 8.4770104046173956e-5 * var_x74 + 2.0473509426327076e-22 * var_x93 + 0.0037891477184972245 * var_x75 + 9.6350437764149725e-15 * var_x102 + 4.0722159152815902e-10 * var_x111 + 1.4687399051632995e-21 * var_x98 + 1.6263412029867345e-9 * var_x77 + 5.1534733514501733e-20 * var_x103 + 2.2670393738686469e-10 * var_x78), (-2));
            const double var_x144 = 1.6968894934804497e-10 * var_x103;
            const double var_x145 = var_x143 * (var_x114 + var_x144 + 12023111.890251627 * var_x75);
            const double var_x148 = var_x112 + 12930019.771733347 * var_x75;
            const double var_x149 = var_x148 * var_x91;
            const double var_x152 = var_x116 * var_x63;
            const double var_x157 = var_x115 + var_x144;
            const double var_x158 = var_x157 * var_x63;
            const double var_x160 = var_x113 * var_x74;
            const double var_x162 = var_x113 * var_x116;
            const double var_x165 = exp(0.78953107960741553 - 0.054525627044711013 * var_chaste_interface__membrane__v);
            const double var_x166 = 1.0 + var_x165;
            const double var_x167 = mParameters[14] / var_x166;
            const double var_x171 = 1 / var_chaste_interface__intracellular_ions__ki;
            const double var_x421 = sqrt(mParameters[10]);
            const double var_x422 = var_x421 * mParameters[20];
            const double var_x424 = 1 / var_chaste_interface__intracellular_ions__cai;
            const double var_x425 = pow(var_x424, 1.3999999999999999);
            const double var_x426 = 1.0 + 6.4818210260626455e-7 * var_x425;
            const double var_x427 = 1 / var_x426;
            const double var_x429 = mParameters[21] * var_chaste_interface__IKs__xs2;
            const double var_x432 = exp(11.145054250500367 + 0.10534077741493732 * var_chaste_interface__membrane__v - 0.27388602127883704 * mParameters[10]);
            const double var_x433 = 1.0 + var_x432;
            const double var_x434 = var_x421 * mParameters[18] / var_x433;
            const double var_x549 = 1 / (0.018329999999999999 * var_chaste_interface__intracellular_ions__nai + var_chaste_interface__intracellular_ions__ki);
            const double var_x592 = pow((1 + 0.0028096208831939005 * var_chaste_interface__intracellular_ions__nai + 0.0021553256090254577 * var_chaste_interface__intracellular_ions__ki), (-2));
            const double var_x593 = var_x592 * var_x74;
            const double var_x594 = var_x593 * var_x77;
            const double var_x598 = var_x101 * var_x592;
            const double var_x599 = var_x598 * var_x77;
            const double var_x606 = var_x116 * var_x592;
            const double var_x607 = var_x148 * var_x606;
            const double var_x611 = var_x592 * var_x77;
            const double var_x623 = var_x606 * var_x78;
            const double var_x714 = var_x81 * (-4.0 - 8.0 * var_chaste_interface__intracellular_ions__ki);
            const double var_x715 = var_x64 * var_x714 * var_x72;
            const double var_x716 = var_x63 * var_x715;
            const double var_x717 = 0.09330879953375748 * var_x715 * var_x77;
            const double var_x718 = 1.8288767722361083e-15 * var_x594;
            const double var_x719 = 8.4266669949965062e-14 * var_x715 * var_x98;
            const double var_x720 = var_x71 * var_chaste_interface__intracellular_ions__ki;
            const double var_x721 = var_x720 * var_x91;
            const double var_x722 = var_x721 * var_x77;
            const double var_x723 = var_x105 * var_x714;
            const double var_x724 = 1.0605559334252811e-11 * var_x723 + 3.3937789869608994e-10 * var_x722 - 2.3017714043409702e-13 * var_x599;
            const double var_x725 = var_x717 + var_x719 + var_x724 - var_x718 + 751444.4931407267 * var_x716;
            const double var_x726 = 3297863297.5037103 * var_x63 * var_x720;
            const double var_x727 = 5.3634509625479838 * var_x720 * var_x77;
            const double var_x728 = 103058228.04699095 * var_x121 * var_x714;
            const double var_x729 = 0.16760784257962449 * var_x124 * var_x714;
            const double var_x730 = var_x726 + var_x727 + var_x728 + var_x729 + 808126.23573333421 * var_x716;
            const double var_x731 = 8.6068818956382799e-8 * var_x598;
            const double var_x732 = 0.00012690163265380641 * var_x721;
            const double var_x733 = 6.8386140998302939e-10 * var_x593;
            const double var_x734 = 3.9656760204314505e-6 * var_x139 * var_x714;
            const double var_x735 = 34890.424648436237 * var_x715;
            const double var_x736 = 3.1509352954436263e-8 * var_x715 * var_x91;
            const double var_x737 = var_x718 + var_x731 + var_x733 - var_x717 - var_x719 - var_x726 - var_x727 - var_x728 - var_x729 - var_x732 - var_x734 - var_x735 - var_x736 + 4.6035428086819405e-13 * var_x599 + 1.3120097004743531e-14 * var_x611 - 2.1211118668505621e-11 * var_x723 - 6.7875579739217989e-10 * var_x722 - 1559570.728874061 * var_x716;
            const double var_x738 = var_x724 + var_x732 + var_x734 + var_x735 + var_x736 - var_x731 - var_x733;
            const double var_x739 = var_x162 * var_x715;
            const double var_x741 = (var_x52 + var_x55) * mParameters[24];
            const double var_x742 = var_x171 * var_x422 * var_chaste_interface__IKr__O;
            const double var_x743 = var_x434 * var_chaste_interface__IK1__xk1;
            const double var_x863 = 0.0022442767003488114 * var_x116;
            const double var_x864 = 5.1749881224336655e-23 * var_x145;
            const double var_x865 = 2.1301338894738516e-13 * var_x128;
            const double var_x866 = 5.4631940052775603 * var_x152;
            const double var_x867 = 4.9117907678261418e-33 * var_x149;
            const double var_x868 = 1.2597361137986274e-19 * var_x158;
            const double var_x869 = 7.2136780469647828e-24 * var_x160;
            const double var_x872 = -6.1520742882368733e-5 - 3.6912445729421236e-5 * var_x427;
            const double var_x873 = var_x429 * var_x872;
            const double var_x874 = var_x873 * var_chaste_interface__IKs__xs1;
            const double var_x876 = var_x143 * var_x867;
            const double var_x877 = var_x143 * var_x868;
            const double var_x878 = var_x143 * var_x869;
            const double var_x879 = var_x549 * var_x874;
            const double var_x880 = 0.001643362921287705 * var_x171;
            
            partialF = -0.014705882352941176 + 26.712338705498265 * var_x879 - 0.00070719080288022792 * var_x742 + (4.1045055277386378e-18 * var_x623 + 2.8894523143943372e-16 * var_x607 - 1.95525685054704e-5 * var_x739 + var_x725 * var_x863 + var_x737 * var_x864 + var_x737 * var_x877 + var_x738 * var_x866 - var_x730 * var_x865 - var_x737 * var_x876 - var_x737 * var_x878) * mParameters[23] - var_x167 * var_x880 - var_x741 * var_x880 - var_x743 * var_x880;
        }
        else
        {
            const double y_save = rY[5];
            rY[5] += delta;
            const double temp = EvaluateYDerivative5(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[5])/delta;
            rY[5] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative6(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__CaMK__CaMKt = rY[2];
        // Units: millimolar; Initial value: 0.0125840447
        double var_chaste_interface__intracellular_ions__ki = rY[5];
        // Units: millimolar; Initial value: 144.6555918
        double var_chaste_interface__intracellular_ions__kss = rY[6];
        // Units: millimolar; Initial value: 144.6555651
        double var_chaste_interface__intracellular_ions__cass = rY[7];
        // Units: millimolar; Initial value: 8.49e-05
        double var_chaste_interface__ICaL__d = rY[25];
        // Units: dimensionless; Initial value: 2.34e-09
        double var_chaste_interface__ICaL__ff = rY[26];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fs = rY[27];
        // Units: dimensionless; Initial value: 0.9102412777
        double var_chaste_interface__ICaL__fcaf = rY[28];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcas = rY[29];
        // Units: dimensionless; Initial value: 0.9998046777
        double var_chaste_interface__ICaL__jca = rY[30];
        // Units: dimensionless; Initial value: 0.9999738312
        double var_chaste_interface__ICaL__ffp = rY[31];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcafp = rY[32];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__nca = rY[33];
        // Units: dimensionless; Initial value: 0.002749414044
        

        // Mathematics
        const double var_CaMK__CaMKo = 0.050000000000000003; // dimensionless
        const double var_CaMK__KmCaM = 0.0015; // millimolar
        const double var_CaMK__KmCaMK = 0.14999999999999999; // millimolar
        const double var_ICaL__Aff = 0.59999999999999998; // dimensionless
        const double var_ICaL__Afs = 1.0 - var_ICaL__Aff; // dimensionless
        const double var_ICaL__f = var_ICaL__Aff * var_chaste_interface__ICaL__ff + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_ICaL__fp = var_ICaL__Aff * var_chaste_interface__ICaL__ffp + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_cell_geometry__L = 0.01; // centimeter
        const double var_cell_geometry__rad = 0.0011000000000000001; // centimeter
        const double var_cell_geometry__Ageo = 6.2800000000000002 * pow(var_cell_geometry__rad, 2) + 6.2800000000000002 * var_cell_geometry__L * var_cell_geometry__rad; // centimeter_squared
        const double var_cell_geometry__Acap = 2.0 * var_cell_geometry__Ageo; // centimeter_squared
        const double var_cell_geometry__vcell = 3140.0 * pow(var_cell_geometry__rad, 2) * var_cell_geometry__L; // microliter
        const double var_cell_geometry__vss = 0.02 * var_cell_geometry__vcell; // microliter
        const double var_environment__celltype = 0; // dimensionless
        const double var_ICaL__PCa = ((var_environment__celltype == 1.0) ? (1.2 * mParameters[12]) : ((var_environment__celltype == 2.0) ? (2.5 * mParameters[12]) : (mParameters[12]))); // dimensionless
        const double var_ICaL__PCaK = 0.00035740000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCap = 1.1000000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCaKp = 0.00035740000000000001 * var_ICaL__PCap; // dimensionless
        const double var_CaMK__CaMKb = (1.0 - var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKo / (1.0 + var_CaMK__KmCaM / var_chaste_interface__intracellular_ions__cass); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_ICaL__fICaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_intracellular_ions__cm = 1.0; // microF_per_centimeter_squared
        const double var_diff__JdiffK = 0.5 * var_chaste_interface__intracellular_ions__kss - 0.5 * var_chaste_interface__intracellular_ions__ki; // millimolar_per_millisecond
        const double var_ICaL__Afcaf = 0.29999999999999999 + 0.59999999999999998 / (1.0 + exp(-1.0 + 0.10000000000000001 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__Afcas = 1.0 - var_ICaL__Afcaf; // dimensionless
        const double var_ICaL__PhiCaK = ((fabs(var_chaste_interface__membrane__v) < 2.6712338705498262e-6) ? (2.671233870549826e-13 * (-0.75 * mParameters[10] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)) + 187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-0.75 * mParameters[10] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-0.75 * mParameters[10] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (0.037435883507802616 * pow(var_chaste_interface__membrane__v, 2) * (-0.75 * mParameters[10] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(0.037435883507802616 * var_chaste_interface__membrane__v)) / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__v)))); // dimensionless
        const double var_ICaL__fca = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcaf + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__fcap = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcafp + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__ICaK = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaK * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaKp * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_physical_constants__F = 96485.0; // coulomb_per_mole
        const double d_dt_chaste_interface_var_intracellular_ions__kss = -var_diff__JdiffK - var_ICaL__ICaK * var_cell_geometry__Acap * var_intracellular_ions__cm / (var_cell_geometry__vss * var_physical_constants__F); // millimolar / millisecond

        return d_dt_chaste_interface_var_intracellular_ions__kss;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative6(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            double var_chaste_interface__CaMK__CaMKt = rY[2];
            // Units: millimolar; Initial value: 0.0125840447
            double var_chaste_interface__intracellular_ions__cass = rY[7];
            // Units: millimolar; Initial value: 8.49e-05
            double var_chaste_interface__ICaL__d = rY[25];
            // Units: dimensionless; Initial value: 2.34e-09
            double var_chaste_interface__ICaL__ff = rY[26];
            // Units: dimensionless; Initial value: 0.9999999909
            double var_chaste_interface__ICaL__fs = rY[27];
            // Units: dimensionless; Initial value: 0.9102412777
            double var_chaste_interface__ICaL__fcaf = rY[28];
            // Units: dimensionless; Initial value: 0.9999999909
            double var_chaste_interface__ICaL__fcas = rY[29];
            // Units: dimensionless; Initial value: 0.9998046777
            double var_chaste_interface__ICaL__jca = rY[30];
            // Units: dimensionless; Initial value: 0.9999738312
            double var_chaste_interface__ICaL__ffp = rY[31];
            // Units: dimensionless; Initial value: 0.9999999909
            double var_chaste_interface__ICaL__fcafp = rY[32];
            // Units: dimensionless; Initial value: 0.9999999909
            double var_chaste_interface__ICaL__nca = rY[33];
            // Units: dimensionless; Initial value: 0.002749414044
            

            const double var_x1 = exp(9.9999999999999995e-8);
            const double var_x2 = 1 / (-1.0 + var_x1);
            const double var_x4 = exp(-9.9999999999999995e-8);
            const double var_x5 = 1 / (-1.0 + var_x4);
            const double var_x7 = fabs(var_chaste_interface__membrane__v);
            const double var_x8 = var_x7 < 2.6712338705498262e-6;
            const double var_x9 = exp(0.037435883507802616 * var_chaste_interface__membrane__v);
            const double var_x10 = -1.0 + var_x9;
            const double var_x11 = 1 / var_x10;
            const double var_x16 = pow(var_chaste_interface__membrane__v, 2);
            const double var_x17 = var_x11 * var_x16;
            const double var_x41 = 1.0 - var_chaste_interface__CaMK__CaMKt;
            const double var_x42 = 1 / var_chaste_interface__intracellular_ions__cass;
            const double var_x43 = 1.0 + 0.0015 * var_x42;
            const double var_x44 = 1 / var_x43;
            const double var_x45 = 0.050000000000000003 * var_x44;
            const double var_x46 = var_x41 * var_x45 + var_chaste_interface__CaMK__CaMKt;
            const double var_x47 = 1.0 + 0.14999999999999999 / var_x46;
            const double var_x48 = 1 / var_x47;
            const double var_x445 = 1.0 - var_chaste_interface__ICaL__nca;
            const double var_x446 = 0.40000000000000002 * var_chaste_interface__ICaL__fs;
            const double var_x447 = 0.59999999999999998 * var_chaste_interface__ICaL__ff;
            const double var_x448 = 0.10000000000000001 * var_chaste_interface__membrane__v;
            const double var_x449 = exp(-1.0 + var_x448);
            const double var_x450 = 1.0 + var_x449;
            const double var_x451 = 0.59999999999999998 / var_x450;
            const double var_x452 = 0.29999999999999999 + var_x451;
            const double var_x453 = 0.69999999999999996 - var_x451;
            const double var_x454 = var_x453 * var_chaste_interface__ICaL__fcas;
            const double var_x455 = var_x454 + var_x452 * var_chaste_interface__ICaL__fcaf;
            const double var_x456 = var_x455 * var_chaste_interface__ICaL__jca;
            const double var_x457 = (var_x445 * (var_x446 + var_x447) + var_x456 * var_chaste_interface__ICaL__nca) * mParameters[12];
            const double var_x458 = var_x457 * var_chaste_interface__ICaL__d;
            const double var_x465 = var_x17 * var_x9;
            const double var_x478 = 0.59999999999999998 * var_chaste_interface__ICaL__ffp;
            const double var_x479 = var_x454 + var_x452 * var_chaste_interface__ICaL__fcafp;
            const double var_x480 = var_x479 * var_chaste_interface__ICaL__jca;
            const double var_x481 = var_x445 * (var_x446 + var_x478) + var_x480 * var_chaste_interface__ICaL__nca;
            const double var_x482 = var_x48 * var_x481;
            const double var_x483 = var_x482 * mParameters[12];
            const double var_x484 = var_x483 * var_chaste_interface__ICaL__d;
            const double var_x583 = 0.5 + 187179.41753901311 * var_chaste_interface__membrane__v;
            const double var_x712 = 2.0034254029123695e-13 * var_x4 * var_x5;
            const double var_x713 = ((var_x8) ? (var_x712 + var_x583 * (-var_x712 + 2.0034254029123695e-13 * var_x1 * var_x2)) : (0.028076912630851963 * var_x465));
            const double var_x882 = -7.4757545920939191e-7 + 7.4757545920939191e-7 * var_x48;
            const double var_x883 = var_x458 * var_x882;
            const double var_x884 = 8.2233300513033119e-7 * var_x484;
            
            partialF = -0.5 + var_x713 * var_x883 - var_x713 * var_x884;
        }
        else
        {
            const double y_save = rY[6];
            rY[6] += delta;
            const double temp = EvaluateYDerivative6(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[6])/delta;
            rY[6] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative7(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__intracellular_ions__cai = rY[1];
        // Units: millimolar; Initial value: 8.6e-05
        double var_chaste_interface__CaMK__CaMKt = rY[2];
        // Units: millimolar; Initial value: 0.0125840447
        double var_chaste_interface__intracellular_ions__nass = rY[4];
        // Units: millimolar; Initial value: 7.268089977
        double var_chaste_interface__intracellular_ions__cass = rY[7];
        // Units: millimolar; Initial value: 8.49e-05
        double var_chaste_interface__ICaL__d = rY[25];
        // Units: dimensionless; Initial value: 2.34e-09
        double var_chaste_interface__ICaL__ff = rY[26];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fs = rY[27];
        // Units: dimensionless; Initial value: 0.9102412777
        double var_chaste_interface__ICaL__fcaf = rY[28];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcas = rY[29];
        // Units: dimensionless; Initial value: 0.9998046777
        double var_chaste_interface__ICaL__jca = rY[30];
        // Units: dimensionless; Initial value: 0.9999738312
        double var_chaste_interface__ICaL__ffp = rY[31];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcafp = rY[32];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__nca = rY[33];
        // Units: dimensionless; Initial value: 0.002749414044
        double var_chaste_interface__ryr__Jrelnp = rY[46];
        // Units: dimensionless; Initial value: 2.5e-07
        double var_chaste_interface__ryr__Jrelp = rY[47];
        // Units: dimensionless; Initial value: 3.12e-07
        

        // Mathematics
        const double var_CaMK__CaMKo = 0.050000000000000003; // dimensionless
        const double var_CaMK__KmCaM = 0.0015; // millimolar
        const double var_CaMK__KmCaMK = 0.14999999999999999; // millimolar
        const double var_ICaL__Aff = 0.59999999999999998; // dimensionless
        const double var_ICaL__Afs = 1.0 - var_ICaL__Aff; // dimensionless
        const double var_ICaL__f = var_ICaL__Aff * var_chaste_interface__ICaL__ff + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_ICaL__fp = var_ICaL__Aff * var_chaste_interface__ICaL__ffp + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_INaCa_i__KmCaAct = 0.00014999999999999999; // millimolar
        const double var_INaCa_i__kasymm = 12.5; // dimensionless
        const double var_INaCa_i__kcaoff = 5000.0; // per_millisecond
        const double var_INaCa_i__k2_ss = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k5_ss = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__kcaon = 1500000.0; // per_millisecond
        const double var_INaCa_i__kna1 = 15.0; // per_millisecond
        const double var_INaCa_i__kna2 = 5.0; // per_millisecond
        const double var_INaCa_i__kna3 = 88.120000000000005; // per_millisecond
        const double var_INaCa_i__qca = 0.16700000000000001; // dimensionless
        const double var_INaCa_i__qna = 0.52239999999999998; // dimensionless
        const double var_INaCa_i__wca = 60000.0; // dimensionless
        const double var_INaCa_i__wna = 60000.0; // dimensionless
        const double var_INaCa_i__wnaca = 5000.0; // dimensionless
        const double var_cell_geometry__L = 0.01; // centimeter
        const double var_cell_geometry__rad = 0.0011000000000000001; // centimeter
        const double var_cell_geometry__Ageo = 6.2800000000000002 * pow(var_cell_geometry__rad, 2) + 6.2800000000000002 * var_cell_geometry__L * var_cell_geometry__rad; // centimeter_squared
        const double var_cell_geometry__Acap = 2.0 * var_cell_geometry__Ageo; // centimeter_squared
        const double var_cell_geometry__vcell = 3140.0 * pow(var_cell_geometry__rad, 2) * var_cell_geometry__L; // microliter
        const double var_cell_geometry__vjsr = 0.0047999999999999996 * var_cell_geometry__vcell; // microliter
        const double var_cell_geometry__vss = 0.02 * var_cell_geometry__vcell; // microliter
        const double var_environment__celltype = 0; // dimensionless
        const double var_ICaL__PCa = ((var_environment__celltype == 1.0) ? (1.2 * mParameters[12]) : ((var_environment__celltype == 2.0) ? (2.5 * mParameters[12]) : (mParameters[12]))); // dimensionless
        const double var_ICaL__PCap = 1.1000000000000001 * var_ICaL__PCa; // dimensionless
        const double var_INaCa_i__Gncx = ((var_environment__celltype == 1.0) ? (1.1000000000000001 * mParameters[22]) : ((var_environment__celltype == 2.0) ? (1.3999999999999999 * mParameters[22]) : (mParameters[22]))); // milliS_per_microF
        const double var_INaCa_i__h10_ss = 1.0 + (1.0 + mParameters[11] / var_INaCa_i__kna2) * mParameters[11] / var_INaCa_i__kna1 + var_INaCa_i__kasymm; // dimensionless
        const double var_INaCa_i__h11_ss = pow(mParameters[11], 2) / (var_INaCa_i__h10_ss * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h12_ss = 1 / var_INaCa_i__h10_ss; // dimensionless
        const double var_INaCa_i__k1_ss = var_INaCa_i__h12_ss * var_INaCa_i__kcaon * mParameters[9]; // dimensionless
        const double var_intracellular_ions__BSLmax = 1.1240000000000001; // millimolar
        const double var_intracellular_ions__BSRmax = 0.047; // millimolar
        const double var_intracellular_ions__KmBSL = 0.0086999999999999994; // millimolar
        const double var_intracellular_ions__KmBSR = 0.00087000000000000001; // millimolar
        const double var_CaMK__CaMKb = (1.0 - var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKo / (1.0 + var_CaMK__KmCaM / var_chaste_interface__intracellular_ions__cass); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_ICaL__fICaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INaCa_i__allo_ss = 1 / (1.0 + pow(var_INaCa_i__KmCaAct, 2) / pow(var_chaste_interface__intracellular_ions__cass, 2)); // dimensionless
        const double var_diff__Jdiff = 5.0 * var_chaste_interface__intracellular_ions__cass - 5.0 * var_chaste_interface__intracellular_ions__cai; // millimolar_per_millisecond
        const double var_intracellular_ions__Bcass = 1 / (1.0 + var_intracellular_ions__BSLmax * var_intracellular_ions__KmBSL / pow((var_intracellular_ions__KmBSL + var_chaste_interface__intracellular_ions__cass), 2) + var_intracellular_ions__BSRmax * var_intracellular_ions__KmBSR / pow((var_intracellular_ions__KmBSR + var_chaste_interface__intracellular_ions__cass), 2)); // dimensionless
        const double var_intracellular_ions__cm = 1.0; // microF_per_centimeter_squared
        const double var_INaCa_i__h4_ss = 1.0 + (1.0 + var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna2) * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna1; // dimensionless
        const double var_INaCa_i__h5_ss = pow(var_chaste_interface__intracellular_ions__nass, 2) / (var_INaCa_i__h4_ss * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h6_ss = 1 / var_INaCa_i__h4_ss; // dimensionless
        const double var_INaCa_i__k6_ss = var_INaCa_i__h6_ss * var_INaCa_i__kcaon * var_chaste_interface__intracellular_ions__cass; // dimensionless
        const double var_ICaL__Afcaf = 0.29999999999999999 + 0.59999999999999998 / (1.0 + exp(-1.0 + 0.10000000000000001 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__Afcas = 1.0 - var_ICaL__Afcaf; // dimensionless
        const double var_ICaL__PhiCaL = ((fabs(var_chaste_interface__membrane__v) < 1.3356169352749131e-6) ? (2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)) + 374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (0.14974353403121046 * pow(var_chaste_interface__membrane__v, 2) * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(0.074871767015605231 * var_chaste_interface__membrane__v)) / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__v)))); // dimensionless
        const double var_ICaL__fca = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcaf + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__fcap = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcafp + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__ICaL = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCa * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCap * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_physical_constants__F = 96485.0; // coulomb_per_mole
        const double var_physical_constants__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_physical_constants__T = 310.0; // kelvin
        const double var_INaCa_i__hca = exp(var_INaCa_i__qca * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // dimensionless
        const double var_INaCa_i__hna = exp(var_INaCa_i__qna * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // dimensionless
        const double var_INaCa_i__h1_ss = 1.0 + (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h2_ss = var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nass / (var_INaCa_i__h1_ss * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h3_ss = 1 / var_INaCa_i__h1_ss; // dimensionless
        const double var_INaCa_i__h7_ss = 1.0 + (1.0 + 1 / var_INaCa_i__hna) * mParameters[11] / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h8_ss = mParameters[11] / (var_INaCa_i__h7_ss * var_INaCa_i__hna * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h9_ss = 1 / var_INaCa_i__h7_ss; // dimensionless
        const double var_INaCa_i__k3p_ss = var_INaCa_i__h9_ss * var_INaCa_i__wca; // dimensionless
        const double var_INaCa_i__k3pp_ss = var_INaCa_i__h8_ss * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k3_ss = var_INaCa_i__k3p_ss + var_INaCa_i__k3pp_ss; // dimensionless
        const double var_INaCa_i__k4p_ss = var_INaCa_i__h3_ss * var_INaCa_i__wca / var_INaCa_i__hca; // dimensionless
        const double var_INaCa_i__k4pp_ss = var_INaCa_i__h2_ss * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k4_ss = var_INaCa_i__k4p_ss + var_INaCa_i__k4pp_ss; // dimensionless
        const double var_INaCa_i__k7_ss = var_INaCa_i__h2_ss * var_INaCa_i__h5_ss * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k8_ss = var_INaCa_i__h11_ss * var_INaCa_i__h8_ss * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__x1_ss = (var_INaCa_i__k2_ss + var_INaCa_i__k3_ss) * var_INaCa_i__k5_ss * var_INaCa_i__k7_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k2_ss * var_INaCa_i__k4_ss; // dimensionless
        const double var_INaCa_i__x2_ss = (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k4_ss * var_INaCa_i__k6_ss + (var_INaCa_i__k4_ss + var_INaCa_i__k5_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k7_ss; // dimensionless
        const double var_INaCa_i__x3_ss = (var_INaCa_i__k2_ss + var_INaCa_i__k3_ss) * var_INaCa_i__k6_ss * var_INaCa_i__k8_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k3_ss; // dimensionless
        const double var_INaCa_i__x4_ss = (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k3_ss * var_INaCa_i__k5_ss + (var_INaCa_i__k4_ss + var_INaCa_i__k5_ss) * var_INaCa_i__k2_ss * var_INaCa_i__k8_ss; // dimensionless
        const double var_INaCa_i__E1_ss = var_INaCa_i__x1_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E2_ss = var_INaCa_i__x2_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E3_ss = var_INaCa_i__x3_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E4_ss = var_INaCa_i__x4_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__JncxCa_ss = var_INaCa_i__E2_ss * var_INaCa_i__k2_ss - var_INaCa_i__E1_ss * var_INaCa_i__k1_ss; // millimolar_per_millisecond
        const double var_INaCa_i__JncxNa_ss = var_INaCa_i__E3_ss * var_INaCa_i__k4pp_ss - var_INaCa_i__E2_ss * var_INaCa_i__k3pp_ss + 3.0 * var_INaCa_i__E4_ss * var_INaCa_i__k7_ss - 3.0 * var_INaCa_i__E1_ss * var_INaCa_i__k8_ss; // millimolar_per_millisecond
        const double var_physical_constants__zca = 2.0; // dimensionless
        const double var_physical_constants__zna = 1.0; // dimensionless
        const double var_INaCa_i__INaCa_ss = 0.20000000000000001 * (var_INaCa_i__JncxCa_ss * var_physical_constants__zca + var_INaCa_i__JncxNa_ss * var_physical_constants__zna) * var_INaCa_i__Gncx * var_INaCa_i__allo_ss; // microA_per_microF
        const double var_ryr__fJrelp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_ryr__Jrel = ((1.0 - var_ryr__fJrelp) * var_chaste_interface__ryr__Jrelnp + var_chaste_interface__ryr__Jrelp * var_ryr__fJrelp) * mParameters[7]; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_intracellular_ions__cass = (-var_diff__Jdiff + var_cell_geometry__vjsr * var_ryr__Jrel / var_cell_geometry__vss + 0.5 * (-var_ICaL__ICaL + 2.0 * var_INaCa_i__INaCa_ss) * var_cell_geometry__Acap * var_intracellular_ions__cm / (var_cell_geometry__vss * var_physical_constants__F)) * var_intracellular_ions__Bcass; // millimolar / millisecond

        return d_dt_chaste_interface_var_intracellular_ions__cass;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative7(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            double var_chaste_interface__intracellular_ions__cai = rY[1];
            // Units: millimolar; Initial value: 8.6e-05
            double var_chaste_interface__CaMK__CaMKt = rY[2];
            // Units: millimolar; Initial value: 0.0125840447
            double var_chaste_interface__intracellular_ions__nass = rY[4];
            // Units: millimolar; Initial value: 7.268089977
            double var_chaste_interface__intracellular_ions__cass = rY[7];
            // Units: millimolar; Initial value: 8.49e-05
            double var_chaste_interface__ICaL__d = rY[25];
            // Units: dimensionless; Initial value: 2.34e-09
            double var_chaste_interface__ICaL__ff = rY[26];
            // Units: dimensionless; Initial value: 0.9999999909
            double var_chaste_interface__ICaL__fs = rY[27];
            // Units: dimensionless; Initial value: 0.9102412777
            double var_chaste_interface__ICaL__fcaf = rY[28];
            // Units: dimensionless; Initial value: 0.9999999909
            double var_chaste_interface__ICaL__fcas = rY[29];
            // Units: dimensionless; Initial value: 0.9998046777
            double var_chaste_interface__ICaL__jca = rY[30];
            // Units: dimensionless; Initial value: 0.9999738312
            double var_chaste_interface__ICaL__ffp = rY[31];
            // Units: dimensionless; Initial value: 0.9999999909
            double var_chaste_interface__ICaL__fcafp = rY[32];
            // Units: dimensionless; Initial value: 0.9999999909
            double var_chaste_interface__ICaL__nca = rY[33];
            // Units: dimensionless; Initial value: 0.002749414044
            double var_chaste_interface__ryr__Jrelnp = rY[46];
            // Units: dimensionless; Initial value: 2.5e-07
            double var_chaste_interface__ryr__Jrelp = rY[47];
            // Units: dimensionless; Initial value: 3.12e-07
            

            const double var_x1 = exp(9.9999999999999995e-8);
            const double var_x2 = 1 / (-1.0 + var_x1);
            const double var_x4 = exp(-9.9999999999999995e-8);
            const double var_x5 = 1 / (-1.0 + var_x4);
            const double var_x7 = fabs(var_chaste_interface__membrane__v);
            const double var_x12 = 0.074871767015605231 * var_chaste_interface__membrane__v;
            const double var_x16 = pow(var_chaste_interface__membrane__v, 2);
            const double var_x20 = -0.34100000000000003 * mParameters[9];
            const double var_x24 = var_x7 < 1.3356169352749131e-6;
            const double var_x25 = exp(var_x12);
            const double var_x26 = -1.0 + var_x25;
            const double var_x27 = 1 / var_x26;
            const double var_x41 = 1.0 - var_chaste_interface__CaMK__CaMKt;
            const double var_x42 = 1 / var_chaste_interface__intracellular_ions__cass;
            const double var_x43 = 1.0 + 0.0015 * var_x42;
            const double var_x44 = 1 / var_x43;
            const double var_x45 = 0.050000000000000003 * var_x44;
            const double var_x46 = var_x41 * var_x45 + var_chaste_interface__CaMK__CaMKt;
            const double var_x47 = 1.0 + 0.14999999999999999 / var_x46;
            const double var_x48 = 1 / var_x47;
            const double var_x49 = var_x48;
            const double var_x50 = 1.0 - var_x49;
            const double var_x76 = pow(mParameters[11], 3);
            const double var_x186 = 1 / (13.5 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * mParameters[11]) * mParameters[11]);
            const double var_x187 = exp(0.019556505544476088 * var_chaste_interface__membrane__v);
            const double var_x188 = 1 / var_x187;
            const double var_x189 = 1.0 + 0.011348161597821153 * (1.0 + var_x188) * mParameters[11];
            const double var_x194 = 1 / var_x189;
            const double var_x195 = var_x186 * var_x194 * var_x76;
            const double var_x196 = var_x188 * var_x195;
            const double var_x198 = 0.011348161597821153 + 0.011348161597821153 * var_x187;
            const double var_x199 = 1.0 + var_x198 * var_chaste_interface__intracellular_ions__nass;
            const double var_x200 = 1 / var_x199;
            const double var_x201 = 1 / exp(0.0062517925458030373 * var_chaste_interface__membrane__v);
            const double var_x202 = var_x200 * var_x201;
            const double var_x203 = var_x187 * var_x200;
            const double var_x204 = 56.740807989105761 * var_x203;
            const double var_x205 = var_x204 * var_chaste_interface__intracellular_ions__nass;
            const double var_x206 = var_x205 + 60000.0 * var_x202;
            const double var_x207 = 1.0 + 0.066666666666666666 * (1.0 + 0.20000000000000001 * var_chaste_interface__intracellular_ions__nass) * var_chaste_interface__intracellular_ions__nass;
            const double var_x208 = 1 / var_x207;
            const double var_x209 = 1500000.0 * var_x208;
            const double var_x210 = var_x209 * var_chaste_interface__intracellular_ions__cass;
            const double var_x212 = var_x203 * var_chaste_interface__intracellular_ions__nass;
            const double var_x223 = var_x186 * mParameters[9];
            const double var_x224 = 1500000.0 * var_x223;
            const double var_x225 = var_x224 + 9.0785292782569211 * var_x196;
            const double var_x228 = 5000.0 + var_x206;
            const double var_x229 = pow(var_chaste_interface__intracellular_ions__nass, 3);
            const double var_x230 = var_x203 * var_x208;
            const double var_x231 = var_x229 * var_x230;
            const double var_x232 = var_x223 * var_x231;
            const double var_x233 = var_x228 * var_x232;
            const double var_x243 = var_x206 * var_x225;
            const double var_x244 = 13617793.917385383 * var_x233 + var_x210 * var_x243;
            const double var_x245 = var_x210 + 9.0785292782569211 * var_x231;
            const double var_x246 = var_x188 * mParameters[11];
            const double var_x247 = var_x194 * var_x246;
            const double var_x248 = 56.740807989105761 * var_x247;
            const double var_x249 = var_x248 + 60000.0 * var_x194;
            const double var_x250 = var_x245 * var_x249;
            const double var_x251 = 5000.0 + var_x249;
            const double var_x252 = var_x196 * var_x251;
            const double var_x253 = var_x208 * var_x252;
            const double var_x254 = var_x253 * var_chaste_interface__intracellular_ions__cass;
            const double var_x255 = 13617793.917385383 * var_x254 + var_x224 * var_x250;
            const double var_x256 = var_x206 * var_x245;
            const double var_x257 = var_x231 * var_x251;
            const double var_x258 = 5000.0 * var_x256 + 45392.646391284608 * var_x257;
            const double var_x259 = var_x225 * var_x249;
            const double var_x260 = 5000.0 * var_x259;
            const double var_x261 = var_x196 * var_x228;
            const double var_x262 = var_x260 + 45392.646391284608 * var_x261;
            const double var_x263 = 1 / (var_x244 + var_x255 + var_x258 + var_x262);
            const double var_x264 = 10000.0 * var_x263;
            const double var_x265 = 0.00036716666666666668 * var_x259;
            const double var_x266 = var_x208 * var_x243;
            const double var_x267 = 0.11015000000000001 * var_x223;
            const double var_x268 = pow((var_x233 + var_x254 + var_x265 + 0.0033333333333333331 * var_x257 + 0.0033333333333333331 * var_x261 + 0.00036716666666666668 * var_x256 + var_x250 * var_x267 + 0.11015000000000001 * var_x266 * var_chaste_interface__intracellular_ions__cass), (-2));
            const double var_x272 = 283704.03994552878 * var_x203;
            const double var_x273 = 300000000.0 * var_x202 + var_x272 * var_chaste_interface__intracellular_ions__nass;
            const double var_x306 = 5.3924544444444452e-11 * var_x244;
            const double var_x307 = 3000000.0 * var_x223;
            const double var_x309 = var_x205 * var_x263;
            const double var_x310 = var_x244 * var_x263;
            const double var_x311 = var_x255 * var_x263;
            const double var_x313 = 1.6177363333333335e-8 * var_x223;
            const double var_x316 = var_x196 * var_x258;
            const double var_x317 = var_x231 * var_x262;
            const double var_x319 = var_x212 * var_x255;
            const double var_x321 = 27.235587834770765 * var_x263;
            const double var_x322 = var_x244 * var_x247;
            const double var_x325 = 1.4686666666666667e-13 * var_x317;
            const double var_x327 = pow(var_chaste_interface__intracellular_ions__cass, (-2));
            const double var_x328 = 1.0 + 2.2499999999999996e-8 * var_x327;
            const double var_x329 = mParameters[22] / var_x328;
            const double var_x438 = var_x2 * (var_x20 + var_x1 * var_chaste_interface__intracellular_ions__cass);
            const double var_x439 = var_x5 * (var_x20 + var_x4 * var_chaste_interface__intracellular_ions__cass);
            const double var_x440 = var_x25 * var_chaste_interface__intracellular_ions__cass;
            const double var_x441 = var_x20 + var_x440;
            const double var_x442 = var_x27 * var_x441;
            const double var_x445 = 1.0 - var_chaste_interface__ICaL__nca;
            const double var_x446 = 0.40000000000000002 * var_chaste_interface__ICaL__fs;
            const double var_x447 = 0.59999999999999998 * var_chaste_interface__ICaL__ff;
            const double var_x448 = 0.10000000000000001 * var_chaste_interface__membrane__v;
            const double var_x449 = exp(-1.0 + var_x448);
            const double var_x450 = 1.0 + var_x449;
            const double var_x451 = 0.59999999999999998 / var_x450;
            const double var_x452 = 0.29999999999999999 + var_x451;
            const double var_x453 = 0.69999999999999996 - var_x451;
            const double var_x454 = var_x453 * var_chaste_interface__ICaL__fcas;
            const double var_x455 = var_x454 + var_x452 * var_chaste_interface__ICaL__fcaf;
            const double var_x456 = var_x455 * var_chaste_interface__ICaL__jca;
            const double var_x457 = (var_x445 * (var_x446 + var_x447) + var_x456 * var_chaste_interface__ICaL__nca) * mParameters[12];
            const double var_x458 = var_x457 * var_chaste_interface__ICaL__d;
            const double var_x478 = 0.59999999999999998 * var_chaste_interface__ICaL__ffp;
            const double var_x479 = var_x454 + var_x452 * var_chaste_interface__ICaL__fcafp;
            const double var_x480 = var_x479 * var_chaste_interface__ICaL__jca;
            const double var_x481 = var_x445 * (var_x446 + var_x478) + var_x480 * var_chaste_interface__ICaL__nca;
            const double var_x482 = var_x48 * var_x481;
            const double var_x483 = var_x482 * mParameters[12];
            const double var_x484 = var_x483 * var_chaste_interface__ICaL__d;
            const double var_x490 = 2.671233870549826e-13 * var_x439;
            const double var_x491 = 0.5 + 374358.83507802623 * var_chaste_interface__membrane__v;
            const double var_x492 = 0.14974353403121046 * var_x16;
            const double var_x493 = ((var_x24) ? (var_x490 + var_x491 * (-var_x490 + 2.671233870549826e-13 * var_x438)) : (var_x442 * var_x492));
            const double var_x494 = var_x493 * mParameters[12];
            const double var_x501 = 2.671233870549826e-13 * var_x5;
            const double var_x503 = 2.671233870549826e-13 * var_x2;
            const double var_x520 = 0.5 + 374358.83507802623 * var_chaste_interface__membrane__v;
            const double var_x521 = var_x1 * var_x503;
            const double var_x522 = var_x4 * var_x501;
            const double var_x524 = var_x27 * var_x492;
            const double var_x525 = var_x25 * var_x524;
            const double var_x532 = 2250000000000.0 * var_x249;
            const double var_x544 = 40853381.752156146 * var_x196;
            const double var_x545 = 85111211.983658642 * var_x247;
            const double var_x553 = 1 / (pow(var_x46, 2) * pow(var_x47, 2));
            const double var_x576 = var_x457 * var_x493;
            const double var_x577 = var_x576 * var_chaste_interface__ICaL__d;
            const double var_x703 = var_x268 * var_x306;
            const double var_x705 = var_x263 * var_x307;
            const double var_x707 = var_x258 * var_x313;
            const double var_x710 = 1.4686666666666667e-13 * var_x316;
            const double var_x744 = var_x327 * var_x41 / pow(var_x43, 2);
            const double var_x745 = var_x553 * var_x744;
            const double var_x748 = var_x208 * var_x223;
            const double var_x749 = var_x532 * var_x748;
            const double var_x750 = 13617793.917385383 * var_x253;
            const double var_x751 = -var_x749 - var_x750 - var_x209 * var_x243 - var_x209 * var_x273;
            const double var_x752 = var_x263 * var_x266;
            const double var_x753 = var_x263 * var_x273;
            const double var_x754 = var_x268 * var_x751;
            const double var_x755 = 3.0597222222222222e-13 * var_x754;
            const double var_x756 = 15000000000.0 * var_x752 + var_x309 * (var_x749 + var_x750) + var_x319 * var_x755 + var_x325 * var_x754 + var_x703 * var_x751 - var_x322 * var_x755 - var_x545 * var_x752 - var_x707 * var_x754 - var_x710 * var_x754 - 4500000000000.0 * var_x748 * var_x753 - var_x208 * var_x544 * var_x753;
            const double var_x759 = var_x205 * var_x311 + var_x244 * var_x264 + var_x317 * var_x321 - var_x248 * var_x310 - var_x258 * var_x705 - var_x316 * var_x321;
            const double var_x760 = var_x759 * mParameters[22] / (pow(var_x328, 2) * pow(var_chaste_interface__intracellular_ions__cass, 3));
            const double var_x761 = ((var_x24) ? (var_x522 + var_x520 * (var_x521 - var_x522)) : (var_x525));
            const double var_x764 = var_x745 * var_chaste_interface__ICaL__d;
            const double var_x767 = var_x481 * var_x764;
            const double var_x771 = var_x494 * var_x767;
            const double var_x787 = var_x482 * var_x494;
            const double var_x887 = 0.0004183410516001074 * var_x329;
            const double var_x888 = -0.0010458526290002684 + 0.0010458526290002684 * var_x48;
            const double var_x889 = var_x458 * var_x888;
            const double var_x890 = 0.0011504378919002954 * var_x484;
            const double var_x893 = 0.0086999999999999994 + var_chaste_interface__intracellular_ions__cass;
            const double var_x894 = 0.00087000000000000001 + var_chaste_interface__intracellular_ions__cass;
            const double var_x895 = 1.0 + 0.0097788000000000007 / pow(var_x893, 2) + 4.0890000000000003e-5 / pow(var_x894, 2);
            const double var_x896 = 1 / var_x895;
            const double var_x897 = var_x896;
            const double var_x899 = 2.7e-6 * var_x745;
            const double var_x900 = (var_x49 * var_chaste_interface__ryr__Jrelp + var_x50 * var_chaste_interface__ryr__Jrelnp) * mParameters[7];
            const double var_x901 = var_x50 * var_x576;
            const double var_x902 = var_x901 * var_chaste_interface__ICaL__d;
            const double var_x903 = 0.0011504378919002954 * var_x787;
            
            partialF = var_x897 * (-5.0 + 1.882534732200483e-11 * var_x760 - 1.2942426283878324e-8 * var_x771 + var_x756 * var_x887 + var_x761 * var_x889 + (var_x899 * var_chaste_interface__ryr__Jrelp - var_x899 * var_chaste_interface__ryr__Jrelnp) * mParameters[7] - var_x761 * var_x890 + 1.1765842076253021e-8 * var_x577 * var_x745) + (0.019557600000000001 / pow(var_x893, 3) + 8.1780000000000006e-5 / pow(var_x894, 3)) * (5.0 * var_chaste_interface__intracellular_ions__cai + 0.23999999999999996 * var_x900 - 5.0 * var_chaste_interface__intracellular_ions__cass - 0.0010458526290002684 * var_x902 + var_x759 * var_x887 - var_x903 * var_chaste_interface__ICaL__d) / pow(var_x895, 2);
        }
        else
        {
            const double y_save = rY[7];
            rY[7] += delta;
            const double temp = EvaluateYDerivative7(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[7])/delta;
            rY[7] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative8(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__intracellular_ions__cai = rY[1];
        // Units: millimolar; Initial value: 8.6e-05
        double var_chaste_interface__CaMK__CaMKt = rY[2];
        // Units: millimolar; Initial value: 0.0125840447
        double var_chaste_interface__intracellular_ions__cass = rY[7];
        // Units: millimolar; Initial value: 8.49e-05
        double var_chaste_interface__intracellular_ions__cansr = rY[8];
        // Units: millimolar; Initial value: 1.619574538
        double var_chaste_interface__intracellular_ions__cajsr = rY[9];
        // Units: millimolar; Initial value: 1.571234014
        

        // Mathematics
        const double var_CaMK__CaMKo = 0.050000000000000003; // dimensionless
        const double var_CaMK__KmCaM = 0.0015; // millimolar
        const double var_CaMK__KmCaMK = 0.14999999999999999; // millimolar
        const double var_cell_geometry__L = 0.01; // centimeter
        const double var_cell_geometry__rad = 0.0011000000000000001; // centimeter
        const double var_cell_geometry__vcell = 3140.0 * pow(var_cell_geometry__rad, 2) * var_cell_geometry__L; // microliter
        const double var_cell_geometry__vjsr = 0.0047999999999999996 * var_cell_geometry__vcell; // microliter
        const double var_cell_geometry__vnsr = 0.055199999999999999 * var_cell_geometry__vcell; // microliter
        const double var_environment__celltype = 0; // dimensionless
        const double var_SERCA__upScale = ((var_environment__celltype == 1.0) ? (1.3) : (1.0)); // dimensionless
        const double var_SERCA__Jupnp = 0.0043750000000000004 * var_SERCA__upScale * var_chaste_interface__intracellular_ions__cai / (0.00092000000000000003 + var_chaste_interface__intracellular_ions__cai); // millimolar_per_millisecond
        const double var_SERCA__Jupp = 0.01203125 * var_SERCA__upScale * var_chaste_interface__intracellular_ions__cai / (0.00075000000000000002 + var_chaste_interface__intracellular_ions__cai); // millimolar_per_millisecond
        const double var_SERCA__Jleak = 0.00026249999999999998 * var_chaste_interface__intracellular_ions__cansr; // millimolar_per_millisecond
        const double var_CaMK__CaMKb = (1.0 - var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKo / (1.0 + var_CaMK__KmCaM / var_chaste_interface__intracellular_ions__cass); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_SERCA__fJupp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_SERCA__Jup = (-var_SERCA__Jleak + (1.0 - var_SERCA__fJupp) * var_SERCA__Jupnp + var_SERCA__Jupp * var_SERCA__fJupp) * mParameters[8]; // millimolar_per_millisecond
        const double var_trans_flux__Jtr = 0.01 * var_chaste_interface__intracellular_ions__cansr - 0.01 * var_chaste_interface__intracellular_ions__cajsr; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_intracellular_ions__cansr = -var_cell_geometry__vjsr * var_trans_flux__Jtr / var_cell_geometry__vnsr + var_SERCA__Jup; // millimolar / millisecond

        return d_dt_chaste_interface_var_intracellular_ions__cansr;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative8(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            

            
            partialF = -0.00086956521739130427 - 0.00026249999999999998 * mParameters[8];
        }
        else
        {
            const double y_save = rY[8];
            rY[8] += delta;
            const double temp = EvaluateYDerivative8(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[8])/delta;
            rY[8] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative9(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__CaMK__CaMKt = rY[2];
        // Units: millimolar; Initial value: 0.0125840447
        double var_chaste_interface__intracellular_ions__cass = rY[7];
        // Units: millimolar; Initial value: 8.49e-05
        double var_chaste_interface__intracellular_ions__cansr = rY[8];
        // Units: millimolar; Initial value: 1.619574538
        double var_chaste_interface__intracellular_ions__cajsr = rY[9];
        // Units: millimolar; Initial value: 1.571234014
        double var_chaste_interface__ryr__Jrelnp = rY[46];
        // Units: dimensionless; Initial value: 2.5e-07
        double var_chaste_interface__ryr__Jrelp = rY[47];
        // Units: dimensionless; Initial value: 3.12e-07
        

        // Mathematics
        const double var_CaMK__CaMKo = 0.050000000000000003; // dimensionless
        const double var_CaMK__KmCaM = 0.0015; // millimolar
        const double var_CaMK__KmCaMK = 0.14999999999999999; // millimolar
        const double var_CaMK__CaMKb = (1.0 - var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKo / (1.0 + var_CaMK__KmCaM / var_chaste_interface__intracellular_ions__cass); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_intracellular_ions__csqnmax = 10.0; // millimolar
        const double var_intracellular_ions__kmcsqn = 0.80000000000000004; // millimolar
        const double var_intracellular_ions__Bcajsr = 1 / (1.0 + var_intracellular_ions__csqnmax * var_intracellular_ions__kmcsqn / pow((var_chaste_interface__intracellular_ions__cajsr + var_intracellular_ions__kmcsqn), 2)); // dimensionless
        const double var_ryr__fJrelp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_ryr__Jrel = ((1.0 - var_ryr__fJrelp) * var_chaste_interface__ryr__Jrelnp + var_chaste_interface__ryr__Jrelp * var_ryr__fJrelp) * mParameters[7]; // millimolar_per_millisecond
        const double var_trans_flux__Jtr = 0.01 * var_chaste_interface__intracellular_ions__cansr - 0.01 * var_chaste_interface__intracellular_ions__cajsr; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_intracellular_ions__cajsr = (-var_ryr__Jrel + var_trans_flux__Jtr) * var_intracellular_ions__Bcajsr; // millimolar / millisecond

        return d_dt_chaste_interface_var_intracellular_ions__cajsr;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative9(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__CaMK__CaMKt = rY[2];
            // Units: millimolar; Initial value: 0.0125840447
            double var_chaste_interface__intracellular_ions__cass = rY[7];
            // Units: millimolar; Initial value: 8.49e-05
            double var_chaste_interface__intracellular_ions__cansr = rY[8];
            // Units: millimolar; Initial value: 1.619574538
            double var_chaste_interface__intracellular_ions__cajsr = rY[9];
            // Units: millimolar; Initial value: 1.571234014
            double var_chaste_interface__ryr__Jrelnp = rY[46];
            // Units: dimensionless; Initial value: 2.5e-07
            double var_chaste_interface__ryr__Jrelp = rY[47];
            // Units: dimensionless; Initial value: 3.12e-07
            

            const double var_x41 = 1.0 - var_chaste_interface__CaMK__CaMKt;
            const double var_x42 = 1 / var_chaste_interface__intracellular_ions__cass;
            const double var_x43 = 1.0 + 0.0015 * var_x42;
            const double var_x44 = 1 / var_x43;
            const double var_x45 = 0.050000000000000003 * var_x44;
            const double var_x46 = var_x41 * var_x45 + var_chaste_interface__CaMK__CaMKt;
            const double var_x47 = 1.0 + 0.14999999999999999 / var_x46;
            const double var_x48 = 1 / var_x47;
            const double var_x49 = var_x48;
            const double var_x50 = 1.0 - var_x49;
            const double var_x900 = (var_x49 * var_chaste_interface__ryr__Jrelp + var_x50 * var_chaste_interface__ryr__Jrelnp) * mParameters[7];
            const double var_x907 = 0.80000000000000004 + var_chaste_interface__intracellular_ions__cajsr;
            const double var_x908 = pow(var_x907, (-2));
            const double var_x909 = 1 / (1.0 + 8.0 * var_x908);
            const double var_x912 = 0.01 * var_x909;
            
            partialF = -var_x912 + 0.25 * (-var_x900 + 0.01 * var_chaste_interface__intracellular_ions__cansr - 0.01 * var_chaste_interface__intracellular_ions__cajsr) / (pow(var_x907, 3) * pow((0.125 + var_x908), 2));
        }
        else
        {
            const double y_save = rY[9];
            rY[9] += delta;
            const double temp = EvaluateYDerivative9(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[9])/delta;
            rY[9] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative10(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__INa__m = rY[10];
        // Units: dimensionless; Initial value: 0.007344121102
        

        // Mathematics
        const double var_INa__mssV1 = 39.57; // millivolt
        const double var_INa__mssV2 = 9.8710000000000004; // millivolt
        const double var_INa__mtD1 = 6.7649999999999997; // dimensionless
        const double var_INa__mtD2 = 8.5519999999999996; // dimensionless
        const double var_INa__mtV1 = 11.640000000000001; // millivolt
        const double var_INa__mtV2 = 34.770000000000003; // millivolt
        const double var_INa__mtV3 = 77.420000000000002; // millivolt
        const double var_INa__mtV4 = 5.9550000000000001; // millivolt
        const double var_INa__mss = 1 / (1.0 + exp((-var_INa__mssV1 - var_chaste_interface__membrane__v) / var_INa__mssV2)); // dimensionless
        const double var_INa__tm = 1 / (var_INa__mtD1 * exp((var_INa__mtV1 + var_chaste_interface__membrane__v) / var_INa__mtV2) + var_INa__mtD2 * exp((-var_INa__mtV3 - var_chaste_interface__membrane__v) / var_INa__mtV4)); // millisecond
        const double d_dt_chaste_interface_var_INa__m = (-var_chaste_interface__INa__m + var_INa__mss) / var_INa__tm; // 1 / millisecond

        return d_dt_chaste_interface_var_INa__m;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative10(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x915 = exp(0.33477135461604829 + 0.02876042565429968 * var_chaste_interface__membrane__v);
            const double var_x916 = exp(-13.000839630562552 - 0.16792611251049538 * var_chaste_interface__membrane__v);
            const double var_x918 = 8.5519999999999996 * var_x916;
            const double var_x919 = 6.7649999999999997 * var_x915;
            const double var_x921 = -var_x918 - var_x919;
            
            partialF = var_x921;
        }
        else
        {
            const double y_save = rY[10];
            rY[10] += delta;
            const double temp = EvaluateYDerivative10(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[10])/delta;
            rY[10] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative11(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__INa__hf = rY[11];
        // Units: dimensionless; Initial value: 0.6981071913
        

        // Mathematics
        const double var_INa__hssV1 = 82.900000000000006; // millivolt
        const double var_INa__hssV2 = 6.0860000000000003; // millivolt
        const double var_INa__shift_INa_inact = 0; // millivolt
        const double var_INa__hss = 1 / (1.0 + exp((-var_INa__shift_INa_inact + var_INa__hssV1 + var_chaste_interface__membrane__v) / var_INa__hssV2)); // dimensionless
        const double var_INa__thf = 1 / (6.149 * exp(0.025140601874691665 + 0.049333991119881598 * var_chaste_interface__membrane__v - 0.049333991119881598 * var_INa__shift_INa_inact) + 1.432e-5 * exp(-0.19029435163086714 + 0.15910898965791567 * var_INa__shift_INa_inact - 0.15910898965791567 * var_chaste_interface__membrane__v)); // millisecond
        const double d_dt_chaste_interface_var_INa__hf = (-var_chaste_interface__INa__hf + var_INa__hss) / var_INa__thf; // 1 / millisecond

        return d_dt_chaste_interface_var_INa__hf;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative11(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x926 = exp(0.025140601874691665 + 0.049333991119881598 * var_chaste_interface__membrane__v);
            const double var_x927 = exp(-0.19029435163086714 - 0.15910898965791567 * var_chaste_interface__membrane__v);
            const double var_x928 = 6.149 * var_x926;
            const double var_x929 = 1.432e-5 * var_x927;
            
            partialF = -var_x928 - var_x929;
        }
        else
        {
            const double y_save = rY[11];
            rY[11] += delta;
            const double temp = EvaluateYDerivative11(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[11])/delta;
            rY[11] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative12(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__INa__hs = rY[12];
        // Units: dimensionless; Initial value: 0.6980895801
        

        // Mathematics
        const double var_INa__hssV1 = 82.900000000000006; // millivolt
        const double var_INa__hssV2 = 6.0860000000000003; // millivolt
        const double var_INa__shift_INa_inact = 0; // millivolt
        const double var_INa__hss = 1 / (1.0 + exp((-var_INa__shift_INa_inact + var_INa__hssV1 + var_chaste_interface__membrane__v) / var_INa__hssV2)); // dimensionless
        const double var_INa__ths = 1 / (0.0097940000000000006 * exp(-0.63992869875222813 + 0.035650623885918005 * var_INa__shift_INa_inact - 0.035650623885918005 * var_chaste_interface__membrane__v) + 0.33429999999999999 * exp(0.10112954465231205 + 0.017649135192375574 * var_chaste_interface__membrane__v - 0.017649135192375574 * var_INa__shift_INa_inact)); // millisecond
        const double d_dt_chaste_interface_var_INa__hs = (-var_chaste_interface__INa__hs + var_INa__hss) / var_INa__ths; // 1 / millisecond

        return d_dt_chaste_interface_var_INa__hs;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative12(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x931 = exp(0.10112954465231205 + 0.017649135192375574 * var_chaste_interface__membrane__v);
            const double var_x932 = exp(-0.63992869875222813 - 0.035650623885918005 * var_chaste_interface__membrane__v);
            const double var_x933 = 0.0097940000000000006 * var_x932;
            const double var_x934 = 0.33429999999999999 * var_x931;
            
            partialF = -var_x933 - var_x934;
        }
        else
        {
            const double y_save = rY[12];
            rY[12] += delta;
            const double temp = EvaluateYDerivative12(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[12])/delta;
            rY[12] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative13(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__INa__j = rY[13];
        // Units: dimensionless; Initial value: 0.6979908432
        

        // Mathematics
        const double var_INa__hssV1 = 82.900000000000006; // millivolt
        const double var_INa__hssV2 = 6.0860000000000003; // millivolt
        const double var_INa__shift_INa_inact = 0; // millivolt
        const double var_INa__hss = 1 / (1.0 + exp((-var_INa__shift_INa_inact + var_INa__hssV1 + var_chaste_interface__membrane__v) / var_INa__hssV2)); // dimensionless
        const double var_INa__jss = var_INa__hss; // dimensionless
        const double var_INa__tj = 2.0379999999999998 + 1 / (0.30520000000000003 * exp(0.025854356306892066 + 0.02600780234070221 * var_chaste_interface__membrane__v - 0.02600780234070221 * var_INa__shift_INa_inact) + 0.021360000000000001 * exp(-12.148291269170388 + 0.12075836251660427 * var_INa__shift_INa_inact - 0.12075836251660427 * var_chaste_interface__membrane__v)); // millisecond
        const double d_dt_chaste_interface_var_INa__j = (-var_chaste_interface__INa__j + var_INa__jss) / var_INa__tj; // 1 / millisecond

        return d_dt_chaste_interface_var_INa__j;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative13(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x935 = exp(0.025854356306892066 + 0.02600780234070221 * var_chaste_interface__membrane__v);
            const double var_x936 = exp(-12.148291269170388 - 0.12075836251660427 * var_chaste_interface__membrane__v);
            const double var_x937 = 1 / (0.30520000000000003 * var_x935 + 0.021360000000000001 * var_x936);
            const double var_x938 = 1 / (2.0379999999999998 + var_x937);
            
            partialF = -var_x938;
        }
        else
        {
            const double y_save = rY[13];
            rY[13] += delta;
            const double temp = EvaluateYDerivative13(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[13])/delta;
            rY[13] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative14(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__INa__hsp = rY[14];
        // Units: dimensionless; Initial value: 0.4549485525
        

        // Mathematics
        const double var_INa__shift_INa_inact = 0; // millivolt
        const double var_INa__hssp = 1 / (1.0 + exp(14.640157739073281 + 0.16431153466973381 * var_chaste_interface__membrane__v - 0.16431153466973381 * var_INa__shift_INa_inact)); // dimensionless
        const double var_INa__ths = 1 / (0.0097940000000000006 * exp(-0.63992869875222813 + 0.035650623885918005 * var_INa__shift_INa_inact - 0.035650623885918005 * var_chaste_interface__membrane__v) + 0.33429999999999999 * exp(0.10112954465231205 + 0.017649135192375574 * var_chaste_interface__membrane__v - 0.017649135192375574 * var_INa__shift_INa_inact)); // millisecond
        const double var_INa__thsp = 3.0 * var_INa__ths; // millisecond
        const double d_dt_chaste_interface_var_INa__hsp = (-var_chaste_interface__INa__hsp + var_INa__hssp) / var_INa__thsp; // 1 / millisecond

        return d_dt_chaste_interface_var_INa__hsp;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative14(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x931 = exp(0.10112954465231205 + 0.017649135192375574 * var_chaste_interface__membrane__v);
            const double var_x932 = exp(-0.63992869875222813 - 0.035650623885918005 * var_chaste_interface__membrane__v);
            const double var_x942 = 0.11143333333333333 * var_x931;
            const double var_x943 = 0.003264666666666667 * var_x932;
            
            partialF = -var_x942 - var_x943;
        }
        else
        {
            const double y_save = rY[14];
            rY[14] += delta;
            const double temp = EvaluateYDerivative14(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[14])/delta;
            rY[14] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative15(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__INa__jp = rY[15];
        // Units: dimensionless; Initial value: 0.6979245865
        

        // Mathematics
        const double var_INa__hssV1 = 82.900000000000006; // millivolt
        const double var_INa__hssV2 = 6.0860000000000003; // millivolt
        const double var_INa__shift_INa_inact = 0; // millivolt
        const double var_INa__hss = 1 / (1.0 + exp((-var_INa__shift_INa_inact + var_INa__hssV1 + var_chaste_interface__membrane__v) / var_INa__hssV2)); // dimensionless
        const double var_INa__jss = var_INa__hss; // dimensionless
        const double var_INa__tj = 2.0379999999999998 + 1 / (0.30520000000000003 * exp(0.025854356306892066 + 0.02600780234070221 * var_chaste_interface__membrane__v - 0.02600780234070221 * var_INa__shift_INa_inact) + 0.021360000000000001 * exp(-12.148291269170388 + 0.12075836251660427 * var_INa__shift_INa_inact - 0.12075836251660427 * var_chaste_interface__membrane__v)); // millisecond
        const double var_INa__tjp = 1.46 * var_INa__tj; // millisecond
        const double d_dt_chaste_interface_var_INa__jp = (-var_chaste_interface__INa__jp + var_INa__jss) / var_INa__tjp; // 1 / millisecond

        return d_dt_chaste_interface_var_INa__jp;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative15(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x935 = exp(0.025854356306892066 + 0.02600780234070221 * var_chaste_interface__membrane__v);
            const double var_x936 = exp(-12.148291269170388 - 0.12075836251660427 * var_chaste_interface__membrane__v);
            const double var_x937 = 1 / (0.30520000000000003 * var_x935 + 0.021360000000000001 * var_x936);
            const double var_x944 = 1 / (2.9754799999999997 + 1.46 * var_x937);
            
            partialF = -var_x944;
        }
        else
        {
            const double y_save = rY[15];
            rY[15] += delta;
            const double temp = EvaluateYDerivative15(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[15])/delta;
            rY[15] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative16(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__INaL__mL = rY[16];
        // Units: dimensionless; Initial value: 0.0001882617273
        

        // Mathematics
        const double var_INa__mtD1 = 6.7649999999999997; // dimensionless
        const double var_INa__mtD2 = 8.5519999999999996; // dimensionless
        const double var_INa__mtV1 = 11.640000000000001; // millivolt
        const double var_INa__mtV2 = 34.770000000000003; // millivolt
        const double var_INa__mtV3 = 77.420000000000002; // millivolt
        const double var_INa__mtV4 = 5.9550000000000001; // millivolt
        const double var_INa__tm = 1 / (var_INa__mtD1 * exp((var_INa__mtV1 + var_chaste_interface__membrane__v) / var_INa__mtV2) + var_INa__mtD2 * exp((-var_INa__mtV3 - var_chaste_interface__membrane__v) / var_INa__mtV4)); // millisecond
        const double var_INaL__mLss = 1 / (1.0 + exp(-8.1401975683890573 - 0.18996960486322187 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_INaL__tmL = var_INa__tm; // millisecond
        const double d_dt_chaste_interface_var_INaL__mL = (-var_chaste_interface__INaL__mL + var_INaL__mLss) / var_INaL__tmL; // 1 / millisecond

        return d_dt_chaste_interface_var_INaL__mL;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative16(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x915 = exp(0.33477135461604829 + 0.02876042565429968 * var_chaste_interface__membrane__v);
            const double var_x916 = exp(-13.000839630562552 - 0.16792611251049538 * var_chaste_interface__membrane__v);
            const double var_x918 = 8.5519999999999996 * var_x916;
            const double var_x919 = 6.7649999999999997 * var_x915;
            const double var_x921 = -var_x918 - var_x919;
            
            partialF = var_x921;
        }
        else
        {
            const double y_save = rY[16];
            rY[16] += delta;
            const double temp = EvaluateYDerivative16(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[16])/delta;
            rY[16] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative17(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__INaL__hL = rY[17];
        // Units: dimensionless; Initial value: 0.5008548855
        

        // Mathematics
        const double var_INaL__thL = 200.0; // millisecond
        const double var_INaL__hLss = 1 / (1.0 + exp(11.700053418803417 + 0.13354700854700854 * var_chaste_interface__membrane__v)); // dimensionless
        const double d_dt_chaste_interface_var_INaL__hL = (-var_chaste_interface__INaL__hL + var_INaL__hLss) / var_INaL__thL; // 1 / millisecond

        return d_dt_chaste_interface_var_INaL__hL;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative17(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            

            
            partialF = -0.0050000000000000001;
        }
        else
        {
            const double y_save = rY[17];
            rY[17] += delta;
            const double temp = EvaluateYDerivative17(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[17])/delta;
            rY[17] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative18(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__INaL__hLp = rY[18];
        // Units: dimensionless; Initial value: 0.2693065357
        

        // Mathematics
        const double var_INaL__thL = 200.0; // millisecond
        const double var_INaL__thLp = 3.0 * var_INaL__thL; // millisecond
        const double var_INaL__hLssp = 1 / (1.0 + exp(12.528044871794872 + 0.13354700854700854 * var_chaste_interface__membrane__v)); // dimensionless
        const double d_dt_chaste_interface_var_INaL__hLp = (-var_chaste_interface__INaL__hLp + var_INaL__hLssp) / var_INaL__thLp; // 1 / millisecond

        return d_dt_chaste_interface_var_INaL__hLp;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative18(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            

            
            partialF = -0.0016666666666666668;
        }
        else
        {
            const double y_save = rY[18];
            rY[18] += delta;
            const double temp = EvaluateYDerivative18(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[18])/delta;
            rY[18] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative19(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__Ito__a = rY[19];
        // Units: dimensionless; Initial value: 0.001001097687
        

        // Mathematics
        const double var_Ito__ass = 1 / (1.0 + exp(0.96761133603238858 - 0.067476383265856948 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__ta = 1.0515000000000001 / (3.5 / (1.0 + exp(3.403513787634354 + 0.034035137876343539 * var_chaste_interface__membrane__v)) + 0.82719827942757873 / (1.0 + exp(0.62658348478969694 - 0.034035137876343539 * var_chaste_interface__membrane__v))); // millisecond
        const double d_dt_chaste_interface_var_Ito__a = (-var_chaste_interface__Ito__a + var_Ito__ass) / var_Ito__ta; // 1 / millisecond

        return d_dt_chaste_interface_var_Ito__a;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative19(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x953 = 0.034035137876343539 * var_chaste_interface__membrane__v;
            const double var_x954 = exp(0.62658348478969694 - var_x953);
            const double var_x955 = 1.0 + var_x954;
            const double var_x956 = exp(3.403513787634354 + var_x953);
            const double var_x957 = 1.0 + var_x956;
            const double var_x959 = 3.3285782215882072 / var_x957;
            const double var_x960 = 0.78668405081082138 / var_x955;
            const double var_x962 = -var_x959 - var_x960;
            
            partialF = var_x962;
        }
        else
        {
            const double y_save = rY[19];
            rY[19] += delta;
            const double temp = EvaluateYDerivative19(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[19])/delta;
            rY[19] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative20(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__Ito__iF = rY[20];
        // Units: dimensionless; Initial value: 0.9995541745
        

        // Mathematics
        const double var_environment__celltype = 0; // dimensionless
        const double var_Ito__delta_epi = ((var_environment__celltype == 1.0) ? (1.0 - 0.94999999999999996 / (1.0 + exp(14.0 + 0.20000000000000001 * var_chaste_interface__membrane__v))) : (1.0)); // dimensionless
        const double var_Ito__iss = 1 / (1.0 + exp(7.6939240063036234 + 0.17510068289266328 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__tiF_b = 4.5620000000000003 + 1 / (0.39329999999999998 * exp(-1.0 - 0.01 * var_chaste_interface__membrane__v) + 0.08004 * exp(3.0138637733574445 + 0.060277275467148887 * var_chaste_interface__membrane__v)); // millisecond
        const double var_Ito__tiF = var_Ito__delta_epi * var_Ito__tiF_b; // millisecond
        const double d_dt_chaste_interface_var_Ito__iF = (-var_chaste_interface__Ito__iF + var_Ito__iss) / var_Ito__tiF; // 1 / millisecond

        return d_dt_chaste_interface_var_Ito__iF;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative20(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x963 = exp(-1.0 - 0.01 * var_chaste_interface__membrane__v);
            const double var_x964 = exp(3.0138637733574445 + 0.060277275467148887 * var_chaste_interface__membrane__v);
            const double var_x965 = 1 / (0.39329999999999998 * var_x963 + 0.08004 * var_x964);
            const double var_x966 = 1 / (4.5620000000000003 + var_x965);
            
            partialF = -var_x966;
        }
        else
        {
            const double y_save = rY[20];
            rY[20] += delta;
            const double temp = EvaluateYDerivative20(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[20])/delta;
            rY[20] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative21(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__Ito__iS = rY[21];
        // Units: dimensionless; Initial value: 0.5865061736
        

        // Mathematics
        const double var_environment__celltype = 0; // dimensionless
        const double var_Ito__delta_epi = ((var_environment__celltype == 1.0) ? (1.0 - 0.94999999999999996 / (1.0 + exp(14.0 + 0.20000000000000001 * var_chaste_interface__membrane__v))) : (1.0)); // dimensionless
        const double var_Ito__iss = 1 / (1.0 + exp(7.6939240063036234 + 0.17510068289266328 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__tiS_b = 23.620000000000001 + 1 / (1.7800000000000001e-8 * exp(14.123035029087756 + 0.12377769525931426 * var_chaste_interface__membrane__v) + 0.0014159999999999999 * exp(-1.6345469940728197 - 0.016934801016088061 * var_chaste_interface__membrane__v)); // millisecond
        const double var_Ito__tiS = var_Ito__delta_epi * var_Ito__tiS_b; // millisecond
        const double d_dt_chaste_interface_var_Ito__iS = (-var_chaste_interface__Ito__iS + var_Ito__iss) / var_Ito__tiS; // 1 / millisecond

        return d_dt_chaste_interface_var_Ito__iS;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative21(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x972 = exp(14.123035029087756 + 0.12377769525931426 * var_chaste_interface__membrane__v);
            const double var_x973 = exp(-1.6345469940728197 - 0.016934801016088061 * var_chaste_interface__membrane__v);
            const double var_x974 = 1 / (1.7800000000000001e-8 * var_x972 + 0.0014159999999999999 * var_x973);
            const double var_x975 = 1 / (23.620000000000001 + var_x974);
            
            partialF = -var_x975;
        }
        else
        {
            const double y_save = rY[21];
            rY[21] += delta;
            const double temp = EvaluateYDerivative21(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[21])/delta;
            rY[21] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative22(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__Ito__ap = rY[22];
        // Units: dimensionless; Initial value: 0.0005100862934
        

        // Mathematics
        const double var_Ito__assp = 1 / (1.0 + exp(1.6423751686909582 - 0.067476383265856948 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__ta = 1.0515000000000001 / (3.5 / (1.0 + exp(3.403513787634354 + 0.034035137876343539 * var_chaste_interface__membrane__v)) + 0.82719827942757873 / (1.0 + exp(0.62658348478969694 - 0.034035137876343539 * var_chaste_interface__membrane__v))); // millisecond
        const double d_dt_chaste_interface_var_Ito__ap = (-var_chaste_interface__Ito__ap + var_Ito__assp) / var_Ito__ta; // 1 / millisecond

        return d_dt_chaste_interface_var_Ito__ap;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative22(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x953 = 0.034035137876343539 * var_chaste_interface__membrane__v;
            const double var_x954 = exp(0.62658348478969694 - var_x953);
            const double var_x955 = 1.0 + var_x954;
            const double var_x956 = exp(3.403513787634354 + var_x953);
            const double var_x957 = 1.0 + var_x956;
            const double var_x959 = 3.3285782215882072 / var_x957;
            const double var_x960 = 0.78668405081082138 / var_x955;
            const double var_x962 = -var_x959 - var_x960;
            
            partialF = var_x962;
        }
        else
        {
            const double y_save = rY[22];
            rY[22] += delta;
            const double temp = EvaluateYDerivative22(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[22])/delta;
            rY[22] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative23(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__Ito__iFp = rY[23];
        // Units: dimensionless; Initial value: 0.9995541823
        

        // Mathematics
        const double var_environment__celltype = 0; // dimensionless
        const double var_Ito__delta_epi = ((var_environment__celltype == 1.0) ? (1.0 - 0.94999999999999996 / (1.0 + exp(14.0 + 0.20000000000000001 * var_chaste_interface__membrane__v))) : (1.0)); // dimensionless
        const double var_Ito__dti_develop = 1.3540000000000001 + 0.0001 / (exp(56.77808727948004 - 4.6425255338904359 * var_chaste_interface__membrane__v) + exp(-10.534927627438641 + 0.062932662051604776 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__dti_recover = 1.0 - 0.5 / (1.0 + exp(3.5 + 0.050000000000000003 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__iss = 1 / (1.0 + exp(7.6939240063036234 + 0.17510068289266328 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__tiF_b = 4.5620000000000003 + 1 / (0.39329999999999998 * exp(-1.0 - 0.01 * var_chaste_interface__membrane__v) + 0.08004 * exp(3.0138637733574445 + 0.060277275467148887 * var_chaste_interface__membrane__v)); // millisecond
        const double var_Ito__tiF = var_Ito__delta_epi * var_Ito__tiF_b; // millisecond
        const double var_Ito__tiFp = var_Ito__dti_develop * var_Ito__dti_recover * var_Ito__tiF; // millisecond
        const double d_dt_chaste_interface_var_Ito__iFp = (-var_chaste_interface__Ito__iFp + var_Ito__iss) / var_Ito__tiFp; // 1 / millisecond

        return d_dt_chaste_interface_var_Ito__iFp;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative23(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x963 = exp(-1.0 - 0.01 * var_chaste_interface__membrane__v);
            const double var_x964 = exp(3.0138637733574445 + 0.060277275467148887 * var_chaste_interface__membrane__v);
            const double var_x965 = 1 / (0.39329999999999998 * var_x963 + 0.08004 * var_x964);
            const double var_x966 = 1 / (4.5620000000000003 + var_x965);
            const double var_x979 = 0.050000000000000003 * var_chaste_interface__membrane__v;
            const double var_x980 = exp(3.5 + var_x979);
            const double var_x981 = 1.0 + var_x980;
            const double var_x982 = 1.0 - 0.5 / var_x981;
            const double var_x983 = 1 / var_x982;
            const double var_x984 = exp(56.77808727948004 - 4.6425255338904359 * var_chaste_interface__membrane__v);
            const double var_x985 = exp(-10.534927627438641 + 0.062932662051604776 * var_chaste_interface__membrane__v);
            const double var_x986 = var_x984 + var_x985;
            const double var_x987 = 1 / var_x986;
            const double var_x988 = 1 / (1.3540000000000001 + 0.0001 * var_x987);
            const double var_x989 = var_x983 * var_x988;
            const double var_x990 = var_x966 * var_x989;
            
            partialF = -var_x990;
        }
        else
        {
            const double y_save = rY[23];
            rY[23] += delta;
            const double temp = EvaluateYDerivative23(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[23])/delta;
            rY[23] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative24(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__Ito__iSp = rY[24];
        // Units: dimensionless; Initial value: 0.6393399482
        

        // Mathematics
        const double var_environment__celltype = 0; // dimensionless
        const double var_Ito__delta_epi = ((var_environment__celltype == 1.0) ? (1.0 - 0.94999999999999996 / (1.0 + exp(14.0 + 0.20000000000000001 * var_chaste_interface__membrane__v))) : (1.0)); // dimensionless
        const double var_Ito__dti_develop = 1.3540000000000001 + 0.0001 / (exp(56.77808727948004 - 4.6425255338904359 * var_chaste_interface__membrane__v) + exp(-10.534927627438641 + 0.062932662051604776 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__dti_recover = 1.0 - 0.5 / (1.0 + exp(3.5 + 0.050000000000000003 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__iss = 1 / (1.0 + exp(7.6939240063036234 + 0.17510068289266328 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__tiS_b = 23.620000000000001 + 1 / (1.7800000000000001e-8 * exp(14.123035029087756 + 0.12377769525931426 * var_chaste_interface__membrane__v) + 0.0014159999999999999 * exp(-1.6345469940728197 - 0.016934801016088061 * var_chaste_interface__membrane__v)); // millisecond
        const double var_Ito__tiS = var_Ito__delta_epi * var_Ito__tiS_b; // millisecond
        const double var_Ito__tiSp = var_Ito__dti_develop * var_Ito__dti_recover * var_Ito__tiS; // millisecond
        const double d_dt_chaste_interface_var_Ito__iSp = (-var_chaste_interface__Ito__iSp + var_Ito__iss) / var_Ito__tiSp; // 1 / millisecond

        return d_dt_chaste_interface_var_Ito__iSp;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative24(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x972 = exp(14.123035029087756 + 0.12377769525931426 * var_chaste_interface__membrane__v);
            const double var_x973 = exp(-1.6345469940728197 - 0.016934801016088061 * var_chaste_interface__membrane__v);
            const double var_x974 = 1 / (1.7800000000000001e-8 * var_x972 + 0.0014159999999999999 * var_x973);
            const double var_x975 = 1 / (23.620000000000001 + var_x974);
            const double var_x979 = 0.050000000000000003 * var_chaste_interface__membrane__v;
            const double var_x980 = exp(3.5 + var_x979);
            const double var_x981 = 1.0 + var_x980;
            const double var_x982 = 1.0 - 0.5 / var_x981;
            const double var_x983 = 1 / var_x982;
            const double var_x984 = exp(56.77808727948004 - 4.6425255338904359 * var_chaste_interface__membrane__v);
            const double var_x985 = exp(-10.534927627438641 + 0.062932662051604776 * var_chaste_interface__membrane__v);
            const double var_x986 = var_x984 + var_x985;
            const double var_x987 = 1 / var_x986;
            const double var_x988 = 1 / (1.3540000000000001 + 0.0001 * var_x987);
            const double var_x989 = var_x983 * var_x988;
            const double var_x995 = var_x975 * var_x989;
            
            partialF = -var_x995;
        }
        else
        {
            const double y_save = rY[24];
            rY[24] += delta;
            const double temp = EvaluateYDerivative24(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[24])/delta;
            rY[24] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative25(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__ICaL__d = rY[25];
        // Units: dimensionless; Initial value: 2.34e-09
        

        // Mathematics
        const double var_ICaL__dss = 1 / (1.0 + exp(-0.93144208037825049 - 0.23640661938534277 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__td = 0.59999999999999998 + 1 / (exp(1.26 + 0.089999999999999997 * var_chaste_interface__membrane__v) + exp(-0.30000000000000004 - 0.050000000000000003 * var_chaste_interface__membrane__v)); // millisecond
        const double d_dt_chaste_interface_var_ICaL__d = (-var_chaste_interface__ICaL__d + var_ICaL__dss) / var_ICaL__td; // 1 / millisecond

        return d_dt_chaste_interface_var_ICaL__d;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative25(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x1000 = exp(1.26 + 0.089999999999999997 * var_chaste_interface__membrane__v);
            const double var_x1001 = exp(-0.30000000000000004 - 0.050000000000000003 * var_chaste_interface__membrane__v);
            const double var_x1002 = var_x1000 + var_x1001;
            const double var_x1003 = 0.59999999999999998 + 1 / var_x1002;
            const double var_x1004 = 1 / var_x1003;
            
            partialF = -var_x1004;
        }
        else
        {
            const double y_save = rY[25];
            rY[25] += delta;
            const double temp = EvaluateYDerivative25(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[25])/delta;
            rY[25] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative26(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__ICaL__ff = rY[26];
        // Units: dimensionless; Initial value: 0.9999999909
        

        // Mathematics
        const double var_ICaL__fss = 1 / (1.0 + exp(5.2976190476190466 + 0.27056277056277056 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__tff = 7.0 + 1 / (0.0044999999999999997 * exp(2.0 + 0.10000000000000001 * var_chaste_interface__membrane__v) + 0.0044999999999999997 * exp(-2.0 - 0.10000000000000001 * var_chaste_interface__membrane__v)); // millisecond
        const double d_dt_chaste_interface_var_ICaL__ff = (-var_chaste_interface__ICaL__ff + var_ICaL__fss) / var_ICaL__tff; // 1 / millisecond

        return d_dt_chaste_interface_var_ICaL__ff;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative26(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x448 = 0.10000000000000001 * var_chaste_interface__membrane__v;
            const double var_x1005 = exp(2.0 + var_x448);
            const double var_x1006 = exp(-2.0 - var_x448);
            const double var_x1007 = 1 / (0.0044999999999999997 * var_x1005 + 0.0044999999999999997 * var_x1006);
            const double var_x1008 = 1 / (7.0 + var_x1007);
            
            partialF = -var_x1008;
        }
        else
        {
            const double y_save = rY[26];
            rY[26] += delta;
            const double temp = EvaluateYDerivative26(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[26])/delta;
            rY[26] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative27(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__ICaL__fs = rY[27];
        // Units: dimensionless; Initial value: 0.9102412777
        

        // Mathematics
        const double var_ICaL__fss = 1 / (1.0 + exp(5.2976190476190466 + 0.27056277056277056 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__tfs = 1000.0 + 1 / (3.4999999999999997e-5 * exp(0.83333333333333337 + 0.16666666666666666 * var_chaste_interface__membrane__v) + 3.4999999999999997e-5 * exp(-1.25 - 0.25 * var_chaste_interface__membrane__v)); // millisecond
        const double d_dt_chaste_interface_var_ICaL__fs = (-var_chaste_interface__ICaL__fs + var_ICaL__fss) / var_ICaL__tfs; // 1 / millisecond

        return d_dt_chaste_interface_var_ICaL__fs;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative27(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x1015 = exp(0.83333333333333337 + 0.16666666666666666 * var_chaste_interface__membrane__v);
            const double var_x1016 = exp(-1.25 - 0.25 * var_chaste_interface__membrane__v);
            const double var_x1017 = 1 / (3.4999999999999997e-5 * var_x1015 + 3.4999999999999997e-5 * var_x1016);
            const double var_x1018 = 1 / (1000.0 + var_x1017);
            
            partialF = -var_x1018;
        }
        else
        {
            const double y_save = rY[27];
            rY[27] += delta;
            const double temp = EvaluateYDerivative27(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[27])/delta;
            rY[27] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative28(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__ICaL__fcaf = rY[28];
        // Units: dimensionless; Initial value: 0.9999999909
        

        // Mathematics
        const double var_ICaL__fss = 1 / (1.0 + exp(5.2976190476190466 + 0.27056277056277056 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__fcass = var_ICaL__fss; // dimensionless
        const double var_ICaL__tfcaf = 7.0 + 1 / (0.040000000000000001 * exp(0.5714285714285714 - 0.14285714285714285 * var_chaste_interface__membrane__v) + 0.040000000000000001 * exp(-0.5714285714285714 + 0.14285714285714285 * var_chaste_interface__membrane__v)); // millisecond
        const double d_dt_chaste_interface_var_ICaL__fcaf = (-var_chaste_interface__ICaL__fcaf + var_ICaL__fcass) / var_ICaL__tfcaf; // 1 / millisecond

        return d_dt_chaste_interface_var_ICaL__fcaf;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative28(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x1019 = 0.14285714285714285 * var_chaste_interface__membrane__v;
            const double var_x1020 = exp(0.5714285714285714 - var_x1019);
            const double var_x1021 = exp(-0.5714285714285714 + var_x1019);
            const double var_x1022 = 1 / (0.040000000000000001 * var_x1020 + 0.040000000000000001 * var_x1021);
            const double var_x1023 = 1 / (7.0 + var_x1022);
            
            partialF = -var_x1023;
        }
        else
        {
            const double y_save = rY[28];
            rY[28] += delta;
            const double temp = EvaluateYDerivative28(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[28])/delta;
            rY[28] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative29(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__ICaL__fcas = rY[29];
        // Units: dimensionless; Initial value: 0.9998046777
        

        // Mathematics
        const double var_ICaL__fss = 1 / (1.0 + exp(5.2976190476190466 + 0.27056277056277056 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__fcass = var_ICaL__fss; // dimensionless
        const double var_ICaL__tfcas = 100.0 + 1 / (0.00012 * exp(0.14285714285714285 * var_chaste_interface__membrane__v) + 0.00012 * exp(-0.33333333333333331 * var_chaste_interface__membrane__v)); // millisecond
        const double d_dt_chaste_interface_var_ICaL__fcas = (-var_chaste_interface__ICaL__fcas + var_ICaL__fcass) / var_ICaL__tfcas; // 1 / millisecond

        return d_dt_chaste_interface_var_ICaL__fcas;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative29(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x1019 = 0.14285714285714285 * var_chaste_interface__membrane__v;
            const double var_x1025 = exp(var_x1019);
            const double var_x1026 = exp(-0.33333333333333331 * var_chaste_interface__membrane__v);
            const double var_x1027 = 1 / (0.00012 * var_x1025 + 0.00012 * var_x1026);
            const double var_x1028 = 1 / (100.0 + var_x1027);
            
            partialF = -var_x1028;
        }
        else
        {
            const double y_save = rY[29];
            rY[29] += delta;
            const double temp = EvaluateYDerivative29(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[29])/delta;
            rY[29] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative30(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__ICaL__jca = rY[30];
        // Units: dimensionless; Initial value: 0.9999738312
        

        // Mathematics
        const double var_ICaL__tjca = 75.0; // millisecond
        const double var_ICaL__fss = 1 / (1.0 + exp(5.2976190476190466 + 0.27056277056277056 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__fcass = var_ICaL__fss; // dimensionless
        const double d_dt_chaste_interface_var_ICaL__jca = (-var_chaste_interface__ICaL__jca + var_ICaL__fcass) / var_ICaL__tjca; // 1 / millisecond

        return d_dt_chaste_interface_var_ICaL__jca;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative30(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            

            
            partialF = -0.013333333333333334;
        }
        else
        {
            const double y_save = rY[30];
            rY[30] += delta;
            const double temp = EvaluateYDerivative30(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[30])/delta;
            rY[30] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative31(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__ICaL__ffp = rY[31];
        // Units: dimensionless; Initial value: 0.9999999909
        

        // Mathematics
        const double var_ICaL__fss = 1 / (1.0 + exp(5.2976190476190466 + 0.27056277056277056 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__tff = 7.0 + 1 / (0.0044999999999999997 * exp(2.0 + 0.10000000000000001 * var_chaste_interface__membrane__v) + 0.0044999999999999997 * exp(-2.0 - 0.10000000000000001 * var_chaste_interface__membrane__v)); // millisecond
        const double var_ICaL__tffp = 2.5 * var_ICaL__tff; // millisecond
        const double d_dt_chaste_interface_var_ICaL__ffp = (-var_chaste_interface__ICaL__ffp + var_ICaL__fss) / var_ICaL__tffp; // 1 / millisecond

        return d_dt_chaste_interface_var_ICaL__ffp;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative31(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x448 = 0.10000000000000001 * var_chaste_interface__membrane__v;
            const double var_x1005 = exp(2.0 + var_x448);
            const double var_x1006 = exp(-2.0 - var_x448);
            const double var_x1007 = 1 / (0.0044999999999999997 * var_x1005 + 0.0044999999999999997 * var_x1006);
            const double var_x1029 = 1 / (17.5 + 2.5 * var_x1007);
            
            partialF = -var_x1029;
        }
        else
        {
            const double y_save = rY[31];
            rY[31] += delta;
            const double temp = EvaluateYDerivative31(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[31])/delta;
            rY[31] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative32(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__ICaL__fcafp = rY[32];
        // Units: dimensionless; Initial value: 0.9999999909
        

        // Mathematics
        const double var_ICaL__fss = 1 / (1.0 + exp(5.2976190476190466 + 0.27056277056277056 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__fcass = var_ICaL__fss; // dimensionless
        const double var_ICaL__tfcaf = 7.0 + 1 / (0.040000000000000001 * exp(0.5714285714285714 - 0.14285714285714285 * var_chaste_interface__membrane__v) + 0.040000000000000001 * exp(-0.5714285714285714 + 0.14285714285714285 * var_chaste_interface__membrane__v)); // millisecond
        const double var_ICaL__tfcafp = 2.5 * var_ICaL__tfcaf; // millisecond
        const double d_dt_chaste_interface_var_ICaL__fcafp = (-var_chaste_interface__ICaL__fcafp + var_ICaL__fcass) / var_ICaL__tfcafp; // 1 / millisecond

        return d_dt_chaste_interface_var_ICaL__fcafp;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative32(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x1019 = 0.14285714285714285 * var_chaste_interface__membrane__v;
            const double var_x1020 = exp(0.5714285714285714 - var_x1019);
            const double var_x1021 = exp(-0.5714285714285714 + var_x1019);
            const double var_x1022 = 1 / (0.040000000000000001 * var_x1020 + 0.040000000000000001 * var_x1021);
            const double var_x1030 = 1 / (17.5 + 2.5 * var_x1022);
            
            partialF = -var_x1030;
        }
        else
        {
            const double y_save = rY[32];
            rY[32] += delta;
            const double temp = EvaluateYDerivative32(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[32])/delta;
            rY[32] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative33(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__intracellular_ions__cass = rY[7];
        // Units: millimolar; Initial value: 8.49e-05
        double var_chaste_interface__ICaL__jca = rY[30];
        // Units: dimensionless; Initial value: 0.9999738312
        double var_chaste_interface__ICaL__nca = rY[33];
        // Units: dimensionless; Initial value: 0.002749414044
        

        // Mathematics
        const double var_ICaL__Kmn = 0.002; // millimolar
        const double var_ICaL__k2n = 1000.0; // per_millisecond
        const double var_ICaL__km2n = var_chaste_interface__ICaL__jca; // per_millisecond
        const double var_ICaL__anca = 1 / (pow((1.0 + var_ICaL__Kmn / var_chaste_interface__intracellular_ions__cass), 4) + var_ICaL__k2n / var_ICaL__km2n); // dimensionless
        const double d_dt_chaste_interface_var_ICaL__nca = var_ICaL__anca * var_ICaL__k2n - var_ICaL__km2n * var_chaste_interface__ICaL__nca; // 1 / millisecond

        return d_dt_chaste_interface_var_ICaL__nca;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative33(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__ICaL__jca = rY[30];
            // Units: dimensionless; Initial value: 0.9999738312
            

            
            partialF = -var_chaste_interface__ICaL__jca;
        }
        else
        {
            const double y_save = rY[33];
            rY[33] += delta;
            const double temp = EvaluateYDerivative33(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[33])/delta;
            rY[33] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative34(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__IKr__IC1 = rY[34];
        // Units: dimensionless; Initial value: 0.999637
        double var_chaste_interface__IKr__IC2 = rY[35];
        // Units: dimensionless; Initial value: 6.83208e-05
        double var_chaste_interface__IKr__C1 = rY[36];
        // Units: dimensionless; Initial value: 1.80145e-08
        

        // Mathematics
        const double var_IKr__A11 = 0.00078680000000000004; // per_millisecond
        const double var_IKr__A21 = 5.4550000000000003e-6; // per_millisecond
        const double var_IKr__A51 = 0.44919999999999999; // per_millisecond
        const double var_IKr__A61 = 0.012409999999999999; // per_millisecond
        const double var_IKr__B11 = 1.5349999999999998e-8; // per_millivolt
        const double var_IKr__B21 = -0.16880000000000001; // per_millivolt
        const double var_IKr__B51 = 0.0085950000000000002; // per_millivolt
        const double var_IKr__B61 = 0.17249999999999999; // per_millivolt
        const double var_IKr__Temp = 37.0; // dimensionless
        const double var_IKr__q11 = 4.9420000000000002; // dimensionless
        const double var_IKr__q21 = 4.1559999999999997; // dimensionless
        const double var_IKr__q51 = 5.0; // dimensionless
        const double var_IKr__q61 = 5.5679999999999996; // dimensionless
        const double d_dt_chaste_interface_var_IKr__IC1 = var_IKr__A21 * var_chaste_interface__IKr__IC2 * exp(var_IKr__B21 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q21)) + var_IKr__A51 * var_chaste_interface__IKr__C1 * exp(var_IKr__B51 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q51)) - var_IKr__A11 * var_chaste_interface__IKr__IC1 * exp(var_IKr__B11 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q11)) - var_IKr__A61 * var_chaste_interface__IKr__IC1 * exp(var_IKr__B61 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q61)); // 1 / millisecond

        return d_dt_chaste_interface_var_IKr__IC1;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative34(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x1036 = exp(2.9189610691546015) * exp(0.17249999999999999 * var_chaste_interface__membrane__v);
            const double var_x1040 = exp(2.7162091828629111) * exp(1.5349999999999998e-8 * var_chaste_interface__membrane__v);
            const double var_x1042 = 0.00078680000000000004 * var_x1040;
            const double var_x1043 = 0.012409999999999999 * var_x1036;
            
            partialF = -var_x1042 - var_x1043;
        }
        else
        {
            const double y_save = rY[34];
            rY[34] += delta;
            const double temp = EvaluateYDerivative34(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[34])/delta;
            rY[34] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative35(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__IKr__IC1 = rY[34];
        // Units: dimensionless; Initial value: 0.999637
        double var_chaste_interface__IKr__IC2 = rY[35];
        // Units: dimensionless; Initial value: 6.83208e-05
        double var_chaste_interface__IKr__C2 = rY[37];
        // Units: dimensionless; Initial value: 8.26619e-05
        double var_chaste_interface__IKr__IO = rY[39];
        // Units: dimensionless; Initial value: 5.67623e-05
        

        // Mathematics
        const double var_IKr__A11 = 0.00078680000000000004; // per_millisecond
        const double var_IKr__A21 = 5.4550000000000003e-6; // per_millisecond
        const double var_IKr__A3 = 0.001214; // per_millisecond
        const double var_IKr__A4 = 1.8539999999999999e-5; // per_millisecond
        const double var_IKr__A52 = 0.31809999999999999; // per_millisecond
        const double var_IKr__A62 = 0.3226; // per_millisecond
        const double var_IKr__B11 = 1.5349999999999998e-8; // per_millivolt
        const double var_IKr__B21 = -0.16880000000000001; // per_millivolt
        const double var_IKr__B3 = 0.0085159999999999993; // per_millivolt
        const double var_IKr__B4 = -0.04641; // per_millivolt
        const double var_IKr__B52 = 3.613e-8; // per_millivolt
        const double var_IKr__B62 = -0.00065749999999999999; // per_millivolt
        const double var_IKr__Temp = 37.0; // dimensionless
        const double var_IKr__q11 = 4.9420000000000002; // dimensionless
        const double var_IKr__q21 = 4.1559999999999997; // dimensionless
        const double var_IKr__q3 = 4.9619999999999997; // dimensionless
        const double var_IKr__q4 = 3.7690000000000001; // dimensionless
        const double var_IKr__q52 = 4.6630000000000003; // dimensionless
        const double var_IKr__q62 = 5.0; // dimensionless
        const double d_dt_chaste_interface_var_IKr__IC2 = var_IKr__A11 * var_chaste_interface__IKr__IC1 * exp(var_IKr__B11 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q11)) + var_IKr__A4 * var_chaste_interface__IKr__IO * exp(var_IKr__B4 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q4)) + var_IKr__A52 * var_chaste_interface__IKr__C2 * exp(var_IKr__B52 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q52)) - var_IKr__A21 * var_chaste_interface__IKr__IC2 * exp(var_IKr__B21 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q21)) - var_IKr__A3 * var_chaste_interface__IKr__IC2 * exp(var_IKr__B3 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q3)) - var_IKr__A62 * var_chaste_interface__IKr__IC2 * exp(var_IKr__B62 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q62)); // 1 / millisecond

        return d_dt_chaste_interface_var_IKr__IC2;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative35(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x1033 = exp(2.7360444511379707);
            const double var_x1038 = exp(2.4217402245028676) * exp(-0.16880000000000001 * var_chaste_interface__membrane__v);
            const double var_x1044 = 5.4550000000000003e-6 * var_x1038;
            const double var_x1048 = var_x1033 * exp(-0.00065749999999999999 * var_chaste_interface__membrane__v);
            const double var_x1050 = exp(2.7230751049583355) * exp(0.0085159999999999993 * var_chaste_interface__membrane__v);
            const double var_x1054 = 0.3226 * var_x1048;
            const double var_x1055 = 0.001214 * var_x1050;
            
            partialF = -var_x1044 - var_x1054 - var_x1055;
        }
        else
        {
            const double y_save = rY[35];
            rY[35] += delta;
            const double temp = EvaluateYDerivative35(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[35])/delta;
            rY[35] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative36(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__IKr__IC1 = rY[34];
        // Units: dimensionless; Initial value: 0.999637
        double var_chaste_interface__IKr__C1 = rY[36];
        // Units: dimensionless; Initial value: 1.80145e-08
        double var_chaste_interface__IKr__C2 = rY[37];
        // Units: dimensionless; Initial value: 8.26619e-05
        

        // Mathematics
        const double var_IKr__A1 = 0.0264; // per_millisecond
        const double var_IKr__A2 = 4.9860000000000002e-6; // per_millisecond
        const double var_IKr__A51 = 0.44919999999999999; // per_millisecond
        const double var_IKr__A61 = 0.012409999999999999; // per_millisecond
        const double var_IKr__B1 = 4.6310000000000002e-5; // per_millivolt
        const double var_IKr__B2 = -0.0042259999999999997; // per_millivolt
        const double var_IKr__B51 = 0.0085950000000000002; // per_millivolt
        const double var_IKr__B61 = 0.17249999999999999; // per_millivolt
        const double var_IKr__Temp = 37.0; // dimensionless
        const double var_IKr__q1 = 4.843; // dimensionless
        const double var_IKr__q2 = 4.2300000000000004; // dimensionless
        const double var_IKr__q51 = 5.0; // dimensionless
        const double var_IKr__q61 = 5.5679999999999996; // dimensionless
        const double d_dt_chaste_interface_var_IKr__C1 = var_IKr__A2 * var_chaste_interface__IKr__C2 * exp(var_IKr__B2 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q2)) + var_IKr__A61 * var_chaste_interface__IKr__IC1 * exp(var_IKr__B61 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q61)) - var_IKr__A1 * var_chaste_interface__IKr__C1 * exp(var_IKr__B1 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q1)) - var_IKr__A51 * var_chaste_interface__IKr__C1 * exp(var_IKr__B51 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q51)); // 1 / millisecond

        return d_dt_chaste_interface_var_IKr__C1;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative36(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x1033 = exp(2.7360444511379707);
            const double var_x1034 = var_x1033 * exp(0.0085950000000000002 * var_chaste_interface__membrane__v);
            const double var_x1045 = 0.44919999999999999 * var_x1034;
            const double var_x1058 = exp(2.6818084178158563) * exp(4.6310000000000002e-5 * var_chaste_interface__membrane__v);
            const double var_x1062 = 0.0264 * var_x1058;
            
            partialF = -var_x1045 - var_x1062;
        }
        else
        {
            const double y_save = rY[36];
            rY[36] += delta;
            const double temp = EvaluateYDerivative36(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[36])/delta;
            rY[36] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative37(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__IKr__IC2 = rY[35];
        // Units: dimensionless; Initial value: 6.83208e-05
        double var_chaste_interface__IKr__C1 = rY[36];
        // Units: dimensionless; Initial value: 1.80145e-08
        double var_chaste_interface__IKr__C2 = rY[37];
        // Units: dimensionless; Initial value: 8.26619e-05
        double var_chaste_interface__IKr__O = rY[38];
        // Units: dimensionless; Initial value: 0.00015551
        

        // Mathematics
        const double var_IKr__A1 = 0.0264; // per_millisecond
        const double var_IKr__A2 = 4.9860000000000002e-6; // per_millisecond
        const double var_IKr__A31 = 0.005509; // per_millisecond
        const double var_IKr__A41 = 0.0014159999999999999; // per_millisecond
        const double var_IKr__A52 = 0.31809999999999999; // per_millisecond
        const double var_IKr__A62 = 0.3226; // per_millisecond
        const double var_IKr__B1 = 4.6310000000000002e-5; // per_millivolt
        const double var_IKr__B2 = -0.0042259999999999997; // per_millivolt
        const double var_IKr__B31 = 7.7710000000000006e-9; // per_millivolt
        const double var_IKr__B41 = -0.02877; // per_millivolt
        const double var_IKr__B52 = 3.613e-8; // per_millivolt
        const double var_IKr__B62 = -0.00065749999999999999; // per_millivolt
        const double var_IKr__Temp = 37.0; // dimensionless
        const double var_IKr__q1 = 4.843; // dimensionless
        const double var_IKr__q2 = 4.2300000000000004; // dimensionless
        const double var_IKr__q31 = 4.2199999999999998; // dimensionless
        const double var_IKr__q41 = 1.4590000000000001; // dimensionless
        const double var_IKr__q52 = 4.6630000000000003; // dimensionless
        const double var_IKr__q62 = 5.0; // dimensionless
        const double d_dt_chaste_interface_var_IKr__C2 = var_IKr__A1 * var_chaste_interface__IKr__C1 * exp(var_IKr__B1 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q1)) + var_IKr__A41 * var_chaste_interface__IKr__O * exp(var_IKr__B41 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q41)) + var_IKr__A62 * var_chaste_interface__IKr__IC2 * exp(var_IKr__B62 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q62)) - var_IKr__A2 * var_chaste_interface__IKr__C2 * exp(var_IKr__B2 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q2)) - var_IKr__A31 * var_chaste_interface__IKr__C2 * exp(var_IKr__B31 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q31)) - var_IKr__A52 * var_chaste_interface__IKr__C2 * exp(var_IKr__B52 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q52)); // 1 / millisecond

        return d_dt_chaste_interface_var_IKr__C2;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative37(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x1046 = exp(2.6174203303045127) * exp(3.613e-8 * var_chaste_interface__membrane__v);
            const double var_x1056 = 0.31809999999999999 * var_x1046;
            const double var_x1060 = exp(2.4517433881989175) * exp(-0.0042259999999999997 * var_chaste_interface__membrane__v);
            const double var_x1063 = 4.9860000000000002e-6 * var_x1060;
            const double var_x1066 = exp(2.4477197176814647) * exp(7.7710000000000006e-9 * var_chaste_interface__membrane__v);
            const double var_x1068 = 0.005509 * var_x1066;
            
            partialF = -var_x1056 - var_x1063 - var_x1068;
        }
        else
        {
            const double y_save = rY[37];
            rY[37] += delta;
            const double temp = EvaluateYDerivative37(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[37])/delta;
            rY[37] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative38(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__IKr__C2 = rY[37];
        // Units: dimensionless; Initial value: 8.26619e-05
        double var_chaste_interface__IKr__O = rY[38];
        // Units: dimensionless; Initial value: 0.00015551
        double var_chaste_interface__IKr__IO = rY[39];
        // Units: dimensionless; Initial value: 5.67623e-05
        double var_chaste_interface__IKr__Obound = rY[41];
        // Units: dimensionless; Initial value: 0.0
        

        // Mathematics
        const double var_IKr__A31 = 0.005509; // per_millisecond
        const double var_IKr__A41 = 0.0014159999999999999; // per_millisecond
        const double var_IKr__A53 = 0.14899999999999999; // per_millisecond
        const double var_IKr__A63 = 0.0089779999999999999; // per_millisecond
        const double var_IKr__B31 = 7.7710000000000006e-9; // per_millivolt
        const double var_IKr__B41 = -0.02877; // per_millivolt
        const double var_IKr__B53 = 0.0046680000000000003; // per_millivolt
        const double var_IKr__B63 = -0.02215; // per_millivolt
        const double var_IKr__Temp = 37.0; // dimensionless
        const double var_IKr__q31 = 4.2199999999999998; // dimensionless
        const double var_IKr__q41 = 1.4590000000000001; // dimensionless
        const double var_IKr__q53 = 2.4119999999999999; // dimensionless
        const double var_IKr__q63 = 5.6820000000000004; // dimensionless
        const double d_dt_chaste_interface_var_IKr__O = mParameters[3] * var_chaste_interface__IKr__Obound + var_IKr__A31 * var_chaste_interface__IKr__C2 * exp(var_IKr__B31 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q31)) + var_IKr__A63 * var_chaste_interface__IKr__IO * exp(var_IKr__B63 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q63)) - var_IKr__A41 * var_chaste_interface__IKr__O * exp(var_IKr__B41 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q41)) - var_IKr__A53 * var_chaste_interface__IKr__O * exp(var_IKr__B53 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q53)) - pow(mParameters[0], mParameters[6]) * mParameters[1] * mParameters[3] * var_chaste_interface__IKr__O / (pow(mParameters[0], mParameters[6]) + mParameters[5]); // 1 / millisecond

        return d_dt_chaste_interface_var_IKr__O;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative38(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x1064 = exp(0.64217715821910271) * exp(-0.02877 * var_chaste_interface__membrane__v);
            const double var_x1069 = 0.0014159999999999999 * var_x1064;
            const double var_x1070 = exp(1.4967756740703964) * exp(0.0046680000000000003 * var_chaste_interface__membrane__v);
            const double var_x1076 = 0.14899999999999999 * var_x1070;
            const double var_x1077 = pow(mParameters[0], mParameters[6]);
            const double var_x1078 = var_x1077 * mParameters[1] * mParameters[3] / (var_x1077 + mParameters[5]);
            const double var_x1079 = -var_x1078;
            
            partialF = var_x1079 - var_x1069 - var_x1076;
        }
        else
        {
            const double y_save = rY[38];
            rY[38] += delta;
            const double temp = EvaluateYDerivative38(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[38])/delta;
            rY[38] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative39(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__IKr__IC2 = rY[35];
        // Units: dimensionless; Initial value: 6.83208e-05
        double var_chaste_interface__IKr__O = rY[38];
        // Units: dimensionless; Initial value: 0.00015551
        double var_chaste_interface__IKr__IO = rY[39];
        // Units: dimensionless; Initial value: 5.67623e-05
        double var_chaste_interface__IKr__IObound = rY[40];
        // Units: dimensionless; Initial value: 0.0
        

        // Mathematics
        const double var_IKr__A3 = 0.001214; // per_millisecond
        const double var_IKr__A4 = 1.8539999999999999e-5; // per_millisecond
        const double var_IKr__A53 = 0.14899999999999999; // per_millisecond
        const double var_IKr__A63 = 0.0089779999999999999; // per_millisecond
        const double var_IKr__B3 = 0.0085159999999999993; // per_millivolt
        const double var_IKr__B4 = -0.04641; // per_millivolt
        const double var_IKr__B53 = 0.0046680000000000003; // per_millivolt
        const double var_IKr__B63 = -0.02215; // per_millivolt
        const double var_IKr__Temp = 37.0; // dimensionless
        const double var_IKr__q3 = 4.9619999999999997; // dimensionless
        const double var_IKr__q4 = 3.7690000000000001; // dimensionless
        const double var_IKr__q53 = 2.4119999999999999; // dimensionless
        const double var_IKr__q63 = 5.6820000000000004; // dimensionless
        const double d_dt_chaste_interface_var_IKr__IO = var_IKr__A3 * var_chaste_interface__IKr__IC2 * exp(var_IKr__B3 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q3)) + var_IKr__A53 * var_chaste_interface__IKr__O * exp(var_IKr__B53 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q53)) - var_IKr__A4 * var_chaste_interface__IKr__IO * exp(var_IKr__B4 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q4)) - var_IKr__A63 * var_chaste_interface__IKr__IO * exp(var_IKr__B63 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q63)) - pow(mParameters[0], mParameters[6]) * var_chaste_interface__IKr__IO * mParameters[1] * mParameters[3] / (pow(mParameters[0], mParameters[6]) + mParameters[5]) + var_IKr__A53 * var_chaste_interface__IKr__IObound * mParameters[3] * exp(var_IKr__B53 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q53)) / (var_IKr__A63 * exp(var_IKr__B63 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q63))); // 1 / millisecond

        return d_dt_chaste_interface_var_IKr__IO;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative39(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x1052 = exp(2.2555765142844972) * exp(-0.04641 * var_chaste_interface__membrane__v);
            const double var_x1057 = 1.8539999999999999e-5 * var_x1052;
            const double var_x1072 = exp(2.9534155818343937);
            const double var_x1073 = exp(-0.02215 * var_chaste_interface__membrane__v);
            const double var_x1074 = var_x1072 * var_x1073;
            const double var_x1077 = pow(mParameters[0], mParameters[6]);
            const double var_x1078 = var_x1077 * mParameters[1] * mParameters[3] / (var_x1077 + mParameters[5]);
            const double var_x1079 = -var_x1078;
            const double var_x1080 = 0.0089779999999999999 * var_x1074;
            
            partialF = var_x1079 - var_x1057 - var_x1080;
        }
        else
        {
            const double y_save = rY[39];
            rY[39] += delta;
            const double temp = EvaluateYDerivative39(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[39])/delta;
            rY[39] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative40(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__IKr__IO = rY[39];
        // Units: dimensionless; Initial value: 5.67623e-05
        double var_chaste_interface__IKr__IObound = rY[40];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKr__Cbound = rY[42];
        // Units: dimensionless; Initial value: 0.0
        

        // Mathematics
        const double var_IKr__A53 = 0.14899999999999999; // per_millisecond
        const double var_IKr__A63 = 0.0089779999999999999; // per_millisecond
        const double var_IKr__B53 = 0.0046680000000000003; // per_millivolt
        const double var_IKr__B63 = -0.02215; // per_millivolt
        const double var_IKr__Temp = 37.0; // dimensionless
        const double var_IKr__q53 = 2.4119999999999999; // dimensionless
        const double var_IKr__q63 = 5.6820000000000004; // dimensionless
        const double d_dt_chaste_interface_var_IKr__IObound = -var_chaste_interface__IKr__IObound * mParameters[2] + var_chaste_interface__IKr__Cbound * mParameters[2] / (1.0 + exp(0.14729709824716453 * mParameters[4] - 0.14729709824716453 * var_chaste_interface__membrane__v)) + pow(mParameters[0], mParameters[6]) * var_chaste_interface__IKr__IO * mParameters[1] * mParameters[3] / (pow(mParameters[0], mParameters[6]) + mParameters[5]) - var_IKr__A53 * var_chaste_interface__IKr__IObound * mParameters[3] * exp(var_IKr__B53 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q53)) / (var_IKr__A63 * exp(var_IKr__B63 * var_chaste_interface__membrane__v) * exp(0.10000000000000001 * (-20.0 + var_IKr__Temp) * log(var_IKr__q63))); // 1 / millisecond

        return d_dt_chaste_interface_var_IKr__IObound;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative40(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x1070 = exp(1.4967756740703964) * exp(0.0046680000000000003 * var_chaste_interface__membrane__v);
            const double var_x1072 = exp(2.9534155818343937);
            const double var_x1073 = exp(-0.02215 * var_chaste_interface__membrane__v);
            const double var_x1081 = var_x1070 * mParameters[3] / (var_x1072 * var_x1073);
            const double var_x1083 = 16.59612385832034 * var_x1081;
            const double var_x1088 = -mParameters[2];
            
            partialF = var_x1088 - var_x1083;
        }
        else
        {
            const double y_save = rY[40];
            rY[40] += delta;
            const double temp = EvaluateYDerivative40(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[40])/delta;
            rY[40] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative41(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__IKr__O = rY[38];
        // Units: dimensionless; Initial value: 0.00015551
        double var_chaste_interface__IKr__Obound = rY[41];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKr__Cbound = rY[42];
        // Units: dimensionless; Initial value: 0.0
        

        // Mathematics
        const double d_dt_chaste_interface_var_IKr__Obound = -mParameters[2] * var_chaste_interface__IKr__Obound - mParameters[3] * var_chaste_interface__IKr__Obound + var_chaste_interface__IKr__Cbound * mParameters[2] / (1.0 + exp(0.14729709824716453 * mParameters[4] - 0.14729709824716453 * var_chaste_interface__membrane__v)) + pow(mParameters[0], mParameters[6]) * mParameters[1] * mParameters[3] * var_chaste_interface__IKr__O / (pow(mParameters[0], mParameters[6]) + mParameters[5]); // 1 / millisecond

        return d_dt_chaste_interface_var_IKr__Obound;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative41(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            

            const double var_x1088 = -mParameters[2];
            
            partialF = var_x1088 - mParameters[3];
        }
        else
        {
            const double y_save = rY[41];
            rY[41] += delta;
            const double temp = EvaluateYDerivative41(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[41])/delta;
            rY[41] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative42(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__IKr__IObound = rY[40];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKr__Obound = rY[41];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__IKr__Cbound = rY[42];
        // Units: dimensionless; Initial value: 0.0
        

        // Mathematics
        const double d_dt_chaste_interface_var_IKr__Cbound = var_chaste_interface__IKr__IObound * mParameters[2] + mParameters[2] * var_chaste_interface__IKr__Obound - 2 * var_chaste_interface__IKr__Cbound * mParameters[2] / (1.0 + exp(0.14729709824716453 * mParameters[4] - 0.14729709824716453 * var_chaste_interface__membrane__v)); // 1 / millisecond

        return d_dt_chaste_interface_var_IKr__Cbound;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative42(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x1084 = exp(0.14729709824716453 * mParameters[4] - 0.14729709824716453 * var_chaste_interface__membrane__v);
            const double var_x1085 = 1.0 + var_x1084;
            const double var_x1089 = mParameters[2] / var_x1085;
            
            partialF = -2 * var_x1089;
        }
        else
        {
            const double y_save = rY[42];
            rY[42] += delta;
            const double temp = EvaluateYDerivative42(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[42])/delta;
            rY[42] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative43(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__IKs__xs1 = rY[43];
        // Units: dimensionless; Initial value: 0.2707758025
        

        // Mathematics
        const double var_IKs__txs1_max = 817.29999999999995; // millisecond
        const double var_IKs__txs1 = 1 / (0.001292 * exp(-0.91304347826086951 - 0.0043478260869565218 * var_chaste_interface__membrane__v) + 0.00023259999999999999 * exp(2.7123595505617977 + 0.056179775280898875 * var_chaste_interface__membrane__v)) + var_IKs__txs1_max; // millisecond
        const double var_IKs__xs1ss = 1 / (1.0 + exp(-1.2987012987012987 - 0.11195700850873264 * var_chaste_interface__membrane__v)); // dimensionless
        const double d_dt_chaste_interface_var_IKs__xs1 = (-var_chaste_interface__IKs__xs1 + var_IKs__xs1ss) / var_IKs__txs1; // 1 / millisecond

        return d_dt_chaste_interface_var_IKs__xs1;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative43(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x1090 = exp(-0.91304347826086951 - 0.0043478260869565218 * var_chaste_interface__membrane__v);
            const double var_x1091 = exp(2.7123595505617977 + 0.056179775280898875 * var_chaste_interface__membrane__v);
            const double var_x1092 = 1 / (0.001292 * var_x1090 + 0.00023259999999999999 * var_x1091);
            const double var_x1093 = 1 / (817.29999999999995 + var_x1092);
            
            partialF = -var_x1093;
        }
        else
        {
            const double y_save = rY[43];
            rY[43] += delta;
            const double temp = EvaluateYDerivative43(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[43])/delta;
            rY[43] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative44(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__IKs__xs2 = rY[44];
        // Units: dimensionless; Initial value: 0.0001928503426
        

        // Mathematics
        const double var_IKs__txs2 = 1 / (0.019300000000000001 * exp(-2.1464516129032258 - 0.032258064516129031 * var_chaste_interface__membrane__v) + 0.01 * exp(-2.5 + 0.050000000000000003 * var_chaste_interface__membrane__v)); // millisecond
        const double var_IKs__xs1ss = 1 / (1.0 + exp(-1.2987012987012987 - 0.11195700850873264 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_IKs__xs2ss = var_IKs__xs1ss; // dimensionless
        const double d_dt_chaste_interface_var_IKs__xs2 = (-var_chaste_interface__IKs__xs2 + var_IKs__xs2ss) / var_IKs__txs2; // 1 / millisecond

        return d_dt_chaste_interface_var_IKs__xs2;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative44(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x979 = 0.050000000000000003 * var_chaste_interface__membrane__v;
            const double var_x1098 = exp(-2.5 + var_x979);
            const double var_x1099 = exp(-2.1464516129032258 - 0.032258064516129031 * var_chaste_interface__membrane__v);
            const double var_x1100 = 0.019300000000000001 * var_x1099;
            const double var_x1101 = 0.01 * var_x1098;
            
            partialF = -var_x1100 - var_x1101;
        }
        else
        {
            const double y_save = rY[44];
            rY[44] += delta;
            const double temp = EvaluateYDerivative44(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[44])/delta;
            rY[44] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative45(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__IK1__xk1 = rY[45];
        // Units: dimensionless; Initial value: 0.9967597594
        

        // Mathematics
        const double var_IK1__txk1 = 122.2 / (exp(3.4155488244627148 + 0.014423770373575654 * var_chaste_interface__membrane__v) + exp(-6.2475442043222005 - 0.049115913555992145 * var_chaste_interface__membrane__v)); // millisecond
        const double var_IK1__xk1ss = 1 / (1.0 + exp((-144.59 - var_chaste_interface__membrane__v - 2.5537999999999998 * mParameters[10]) / (3.8115000000000001 + 1.5691999999999999 * mParameters[10]))); // dimensionless
        const double d_dt_chaste_interface_var_IK1__xk1 = (-var_chaste_interface__IK1__xk1 + var_IK1__xk1ss) / var_IK1__txk1; // 1 / millisecond

        return d_dt_chaste_interface_var_IK1__xk1;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative45(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.00190465
            

            const double var_x1105 = exp(3.4155488244627148 + 0.014423770373575654 * var_chaste_interface__membrane__v);
            const double var_x1106 = exp(-6.2475442043222005 - 0.049115913555992145 * var_chaste_interface__membrane__v);
            const double var_x1107 = 0.0081833060556464818 * var_x1105;
            const double var_x1108 = 0.0081833060556464818 * var_x1106;
            
            partialF = -var_x1107 - var_x1108;
        }
        else
        {
            const double y_save = rY[45];
            rY[45] += delta;
            const double temp = EvaluateYDerivative45(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[45])/delta;
            rY[45] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative46(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__CaMK__CaMKt = rY[2];
        // Units: millimolar; Initial value: 0.0125840447
        double var_chaste_interface__intracellular_ions__cass = rY[7];
        // Units: millimolar; Initial value: 8.49e-05
        double var_chaste_interface__intracellular_ions__cajsr = rY[9];
        // Units: millimolar; Initial value: 1.571234014
        double var_chaste_interface__ICaL__d = rY[25];
        // Units: dimensionless; Initial value: 2.34e-09
        double var_chaste_interface__ICaL__ff = rY[26];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fs = rY[27];
        // Units: dimensionless; Initial value: 0.9102412777
        double var_chaste_interface__ICaL__fcaf = rY[28];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcas = rY[29];
        // Units: dimensionless; Initial value: 0.9998046777
        double var_chaste_interface__ICaL__jca = rY[30];
        // Units: dimensionless; Initial value: 0.9999738312
        double var_chaste_interface__ICaL__ffp = rY[31];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcafp = rY[32];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__nca = rY[33];
        // Units: dimensionless; Initial value: 0.002749414044
        double var_chaste_interface__ryr__Jrelnp = rY[46];
        // Units: dimensionless; Initial value: 2.5e-07
        

        // Mathematics
        const double var_CaMK__CaMKo = 0.050000000000000003; // dimensionless
        const double var_CaMK__KmCaM = 0.0015; // millimolar
        const double var_CaMK__KmCaMK = 0.14999999999999999; // millimolar
        const double var_ICaL__Aff = 0.59999999999999998; // dimensionless
        const double var_ICaL__Afs = 1.0 - var_ICaL__Aff; // dimensionless
        const double var_ICaL__f = var_ICaL__Aff * var_chaste_interface__ICaL__ff + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_ICaL__fp = var_ICaL__Aff * var_chaste_interface__ICaL__ffp + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_environment__celltype = 0; // dimensionless
        const double var_ICaL__PCa = ((var_environment__celltype == 1.0) ? (1.2 * mParameters[12]) : ((var_environment__celltype == 2.0) ? (2.5 * mParameters[12]) : (mParameters[12]))); // dimensionless
        const double var_ICaL__PCap = 1.1000000000000001 * var_ICaL__PCa; // dimensionless
        const double var_CaMK__CaMKb = (1.0 - var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKo / (1.0 + var_CaMK__KmCaM / var_chaste_interface__intracellular_ions__cass); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_ICaL__fICaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_ICaL__Afcaf = 0.29999999999999999 + 0.59999999999999998 / (1.0 + exp(-1.0 + 0.10000000000000001 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__Afcas = 1.0 - var_ICaL__Afcaf; // dimensionless
        const double var_ICaL__PhiCaL = ((fabs(var_chaste_interface__membrane__v) < 1.3356169352749131e-6) ? (2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)) + 374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (0.14974353403121046 * pow(var_chaste_interface__membrane__v, 2) * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(0.074871767015605231 * var_chaste_interface__membrane__v)) / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__v)))); // dimensionless
        const double var_ICaL__fca = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcaf + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__fcap = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcafp + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__ICaL = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCa * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCap * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ryr__bt = 4.75; // millisecond
        const double var_ryr__a_rel = 0.5 * var_ryr__bt; // millisecond
        const double var_ryr__Jrel_inf_temp = -var_ICaL__ICaL * var_ryr__a_rel / (1.0 + 25.62890625 / pow(var_chaste_interface__intracellular_ions__cajsr, 8)); // dimensionless
        const double var_ryr__Jrel_inf = ((var_environment__celltype == 2.0) ? (1.7 * var_ryr__Jrel_inf_temp) : (var_ryr__Jrel_inf_temp)); // dimensionless
        const double var_ryr__tau_rel_temp = var_ryr__bt / (1.0 + 0.0123 / var_chaste_interface__intracellular_ions__cajsr); // millisecond
        const double var_ryr__tau_rel = ((var_ryr__tau_rel_temp < 0.001) ? (0.001) : (var_ryr__tau_rel_temp)); // millisecond
        const double d_dt_chaste_interface_var_ryr__Jrelnp = (-var_chaste_interface__ryr__Jrelnp + var_ryr__Jrel_inf) / var_ryr__tau_rel; // 1 / millisecond

        return d_dt_chaste_interface_var_ryr__Jrelnp;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative46(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__intracellular_ions__cajsr = rY[9];
            // Units: millimolar; Initial value: 1.571234014
            

            const double var_x1114 = 1 / var_chaste_interface__intracellular_ions__cajsr;
            const double var_x1115 = 1 / (1.0 + 0.0123 * var_x1114);
            const double var_x1116 = 4.75 * var_x1115 < 0.001;
            const double var_x1117 = ((var_x1116) ? (1000.0) : (0.21052631578947367 + 0.0025894736842105265 * var_x1114));
            
            partialF = -var_x1117;
        }
        else
        {
            const double y_save = rY[46];
            rY[46] += delta;
            const double temp = EvaluateYDerivative46(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[46])/delta;
            rY[46] = y_save;
        }
        return partialF;
    }
    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluateYDerivative47(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__CaMK__CaMKt = rY[2];
        // Units: millimolar; Initial value: 0.0125840447
        double var_chaste_interface__intracellular_ions__cass = rY[7];
        // Units: millimolar; Initial value: 8.49e-05
        double var_chaste_interface__intracellular_ions__cajsr = rY[9];
        // Units: millimolar; Initial value: 1.571234014
        double var_chaste_interface__ICaL__d = rY[25];
        // Units: dimensionless; Initial value: 2.34e-09
        double var_chaste_interface__ICaL__ff = rY[26];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fs = rY[27];
        // Units: dimensionless; Initial value: 0.9102412777
        double var_chaste_interface__ICaL__fcaf = rY[28];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcas = rY[29];
        // Units: dimensionless; Initial value: 0.9998046777
        double var_chaste_interface__ICaL__jca = rY[30];
        // Units: dimensionless; Initial value: 0.9999738312
        double var_chaste_interface__ICaL__ffp = rY[31];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcafp = rY[32];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__nca = rY[33];
        // Units: dimensionless; Initial value: 0.002749414044
        double var_chaste_interface__ryr__Jrelp = rY[47];
        // Units: dimensionless; Initial value: 3.12e-07
        

        // Mathematics
        const double var_CaMK__CaMKo = 0.050000000000000003; // dimensionless
        const double var_CaMK__KmCaM = 0.0015; // millimolar
        const double var_CaMK__KmCaMK = 0.14999999999999999; // millimolar
        const double var_ICaL__Aff = 0.59999999999999998; // dimensionless
        const double var_ICaL__Afs = 1.0 - var_ICaL__Aff; // dimensionless
        const double var_ICaL__f = var_ICaL__Aff * var_chaste_interface__ICaL__ff + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_ICaL__fp = var_ICaL__Aff * var_chaste_interface__ICaL__ffp + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_environment__celltype = 0; // dimensionless
        const double var_ICaL__PCa = ((var_environment__celltype == 1.0) ? (1.2 * mParameters[12]) : ((var_environment__celltype == 2.0) ? (2.5 * mParameters[12]) : (mParameters[12]))); // dimensionless
        const double var_ICaL__PCap = 1.1000000000000001 * var_ICaL__PCa; // dimensionless
        const double var_CaMK__CaMKb = (1.0 - var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKo / (1.0 + var_CaMK__KmCaM / var_chaste_interface__intracellular_ions__cass); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_ICaL__fICaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_ICaL__Afcaf = 0.29999999999999999 + 0.59999999999999998 / (1.0 + exp(-1.0 + 0.10000000000000001 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__Afcas = 1.0 - var_ICaL__Afcaf; // dimensionless
        const double var_ICaL__PhiCaL = ((fabs(var_chaste_interface__membrane__v) < 1.3356169352749131e-6) ? (2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)) + 374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (0.14974353403121046 * pow(var_chaste_interface__membrane__v, 2) * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(0.074871767015605231 * var_chaste_interface__membrane__v)) / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__v)))); // dimensionless
        const double var_ICaL__fca = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcaf + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__fcap = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcafp + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__ICaL = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCa * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCap * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ryr__bt = 4.75; // millisecond
        const double var_ryr__btp = 1.25 * var_ryr__bt; // millisecond
        const double var_ryr__a_relp = 0.5 * var_ryr__btp; // millisecond
        const double var_ryr__Jrel_temp = -var_ICaL__ICaL * var_ryr__a_relp / (1.0 + 25.62890625 / pow(var_chaste_interface__intracellular_ions__cajsr, 8)); // dimensionless
        const double var_ryr__Jrel_infp = ((var_environment__celltype == 2.0) ? (1.7 * var_ryr__Jrel_temp) : (var_ryr__Jrel_temp)); // dimensionless
        const double var_ryr__tau_relp_temp = var_ryr__btp / (1.0 + 0.0123 / var_chaste_interface__intracellular_ions__cajsr); // millisecond
        const double var_ryr__tau_relp = ((var_ryr__tau_relp_temp < 0.001) ? (0.001) : (var_ryr__tau_relp_temp)); // millisecond
        const double d_dt_chaste_interface_var_ryr__Jrelp = (-var_chaste_interface__ryr__Jrelp + var_ryr__Jrel_infp) / var_ryr__tau_relp; // 1 / millisecond

        return d_dt_chaste_interface_var_ryr__Jrelp;
    }

    double Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::EvaluatePartialDerivative47(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__intracellular_ions__cajsr = rY[9];
            // Units: millimolar; Initial value: 1.571234014
            

            const double var_x1114 = 1 / var_chaste_interface__intracellular_ions__cajsr;
            const double var_x1115 = 1 / (1.0 + 0.0123 * var_x1114);
            const double var_x1137 = 5.9375 * var_x1115 < 0.001;
            const double var_x1138 = ((var_x1137) ? (1000.0) : (0.16842105263157894 + 0.0020715789473684213 * var_x1114));
            
            partialF = -var_x1138;
        }
        else
        {
            const double y_save = rY[47];
            rY[47] += delta;
            const double temp = EvaluateYDerivative47(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[47])/delta;
            rY[47] = y_save;
        }
        return partialF;
    }

    std::vector<double> Cellohara_rudy_cipa_v1_2017FromCellMLGRL2::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const std::vector<double> & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__intracellular_ions__cai = rY[1];
        // Units: millimolar; Initial value: 8.6e-05
        double var_chaste_interface__CaMK__CaMKt = rY[2];
        // Units: millimolar; Initial value: 0.0125840447
        double var_chaste_interface__intracellular_ions__nai = rY[3];
        // Units: millimolar; Initial value: 7.268004498
        double var_chaste_interface__intracellular_ions__nass = rY[4];
        // Units: millimolar; Initial value: 7.268089977
        double var_chaste_interface__intracellular_ions__ki = rY[5];
        // Units: millimolar; Initial value: 144.6555918
        double var_chaste_interface__intracellular_ions__kss = rY[6];
        // Units: millimolar; Initial value: 144.6555651
        double var_chaste_interface__intracellular_ions__cass = rY[7];
        // Units: millimolar; Initial value: 8.49e-05
        double var_chaste_interface__INa__m = rY[10];
        // Units: dimensionless; Initial value: 0.007344121102
        double var_chaste_interface__INa__hf = rY[11];
        // Units: dimensionless; Initial value: 0.6981071913
        double var_chaste_interface__INa__hs = rY[12];
        // Units: dimensionless; Initial value: 0.6980895801
        double var_chaste_interface__INa__j = rY[13];
        // Units: dimensionless; Initial value: 0.6979908432
        double var_chaste_interface__INa__hsp = rY[14];
        // Units: dimensionless; Initial value: 0.4549485525
        double var_chaste_interface__INa__jp = rY[15];
        // Units: dimensionless; Initial value: 0.6979245865
        double var_chaste_interface__INaL__mL = rY[16];
        // Units: dimensionless; Initial value: 0.0001882617273
        double var_chaste_interface__INaL__hL = rY[17];
        // Units: dimensionless; Initial value: 0.5008548855
        double var_chaste_interface__INaL__hLp = rY[18];
        // Units: dimensionless; Initial value: 0.2693065357
        double var_chaste_interface__Ito__a = rY[19];
        // Units: dimensionless; Initial value: 0.001001097687
        double var_chaste_interface__Ito__iF = rY[20];
        // Units: dimensionless; Initial value: 0.9995541745
        double var_chaste_interface__Ito__iS = rY[21];
        // Units: dimensionless; Initial value: 0.5865061736
        double var_chaste_interface__Ito__ap = rY[22];
        // Units: dimensionless; Initial value: 0.0005100862934
        double var_chaste_interface__Ito__iFp = rY[23];
        // Units: dimensionless; Initial value: 0.9995541823
        double var_chaste_interface__Ito__iSp = rY[24];
        // Units: dimensionless; Initial value: 0.6393399482
        double var_chaste_interface__ICaL__d = rY[25];
        // Units: dimensionless; Initial value: 2.34e-09
        double var_chaste_interface__ICaL__ff = rY[26];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fs = rY[27];
        // Units: dimensionless; Initial value: 0.9102412777
        double var_chaste_interface__ICaL__fcaf = rY[28];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcas = rY[29];
        // Units: dimensionless; Initial value: 0.9998046777
        double var_chaste_interface__ICaL__jca = rY[30];
        // Units: dimensionless; Initial value: 0.9999738312
        double var_chaste_interface__ICaL__ffp = rY[31];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcafp = rY[32];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__nca = rY[33];
        // Units: dimensionless; Initial value: 0.002749414044
        double var_chaste_interface__IKr__O = rY[38];
        // Units: dimensionless; Initial value: 0.00015551
        double var_chaste_interface__IKs__xs1 = rY[43];
        // Units: dimensionless; Initial value: 0.2707758025
        double var_chaste_interface__IKs__xs2 = rY[44];
        // Units: dimensionless; Initial value: 0.0001928503426
        double var_chaste_interface__IK1__xk1 = rY[45];
        // Units: dimensionless; Initial value: 0.9967597594
        double var_chaste_interface__ryr__Jrelnp = rY[46];
        // Units: dimensionless; Initial value: 2.5e-07
        double var_chaste_interface__ryr__Jrelp = rY[47];
        // Units: dimensionless; Initial value: 3.12e-07
        
        // Mathematics
        const double var_CaMK__CaMKo = 0.050000000000000003; // dimensionless
        const double var_CaMK__KmCaM = 0.0015; // millimolar
        const double var_CaMK__KmCaMK = 0.14999999999999999; // millimolar
        const double var_ICaL__Aff = 0.59999999999999998; // dimensionless
        const double var_ICaL__Afs = 1.0 - var_ICaL__Aff; // dimensionless
        const double var_ICaL__f = var_ICaL__Aff * var_chaste_interface__ICaL__ff + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_ICaL__fp = var_ICaL__Aff * var_chaste_interface__ICaL__ffp + var_ICaL__Afs * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_INa__Ahf = 0.98999999999999999; // dimensionless
        const double var_INa__Ahs = 1.0 - var_INa__Ahf; // dimensionless
        const double var_INa__h = var_INa__Ahf * var_chaste_interface__INa__hf + var_INa__Ahs * var_chaste_interface__INa__hs; // dimensionless
        const double var_INa__hp = var_INa__Ahf * var_chaste_interface__INa__hf + var_INa__Ahs * var_chaste_interface__INa__hsp; // dimensionless
        const double var_INaCa_i__KmCaAct = 0.00014999999999999999; // millimolar
        const double var_INaCa_i__kasymm = 12.5; // dimensionless
        const double var_INaCa_i__kcaoff = 5000.0; // per_millisecond
        const double var_INaCa_i__k2_i = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k2_ss = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k5_i = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__k5_ss = var_INaCa_i__kcaoff; // dimensionless
        const double var_INaCa_i__kcaon = 1500000.0; // per_millisecond
        const double var_INaCa_i__kna1 = 15.0; // per_millisecond
        const double var_INaCa_i__kna2 = 5.0; // per_millisecond
        const double var_INaCa_i__kna3 = 88.120000000000005; // per_millisecond
        const double var_INaCa_i__qca = 0.16700000000000001; // dimensionless
        const double var_INaCa_i__qna = 0.52239999999999998; // dimensionless
        const double var_INaCa_i__wca = 60000.0; // dimensionless
        const double var_INaCa_i__wna = 60000.0; // dimensionless
        const double var_INaCa_i__wnaca = 5000.0; // dimensionless
        const double var_INaK__H = 9.9999999999999995e-8; // millimolar
        const double var_INaK__Khp = 1.698e-7; // millimolar
        const double var_INaK__Kki = 0.5; // per_millisecond
        const double var_INaK__Kko = 0.35820000000000002; // per_millisecond
        const double var_INaK__Kmgatp = 1.698e-7; // millimolar
        const double var_INaK__Knai0 = 9.0730000000000004; // millimolar
        const double var_INaK__Knao0 = 27.780000000000001; // millimolar
        const double var_INaK__Knap = 224.0; // millimolar
        const double var_INaK__Kxkur = 292.0; // millimolar
        const double var_INaK__MgADP = 0.050000000000000003; // millimolar
        const double var_INaK__MgATP = 9.8000000000000007; // millimolar
        const double var_INaK__delta = -0.155; // millivolt
        const double var_INaK__eP = 4.2000000000000002; // dimensionless
        const double var_INaK__k1m = 182.40000000000001; // per_millisecond
        const double var_INaK__b1 = var_INaK__MgADP * var_INaK__k1m; // dimensionless
        const double var_INaK__k1p = 949.5; // per_millisecond
        const double var_INaK__k2m = 39.399999999999999; // per_millisecond
        const double var_INaK__k2p = 687.20000000000005; // per_millisecond
        const double var_INaK__a2 = var_INaK__k2p; // dimensionless
        const double var_INaK__k3m = 79300.0; // per_millisecond
        const double var_INaK__k3p = 1899.0; // per_millisecond
        const double var_INaK__k4m = 40.0; // per_millisecond
        const double var_INaK__k4p = 639.0; // per_millisecond
        const double var_INaK__a4 = var_INaK__MgATP * var_INaK__k4p / ((1.0 + var_INaK__MgATP / var_INaK__Kmgatp) * var_INaK__Kmgatp); // dimensionless
        const double var_IpCa__KmCap = 0.00050000000000000001; // millimolar
        const double var_environment__celltype = 0; // dimensionless
        const double var_ICaL__PCa = ((var_environment__celltype == 1.0) ? (1.2 * mParameters[12]) : ((var_environment__celltype == 2.0) ? (2.5 * mParameters[12]) : (mParameters[12]))); // dimensionless
        const double var_ICaL__PCaK = 0.00035740000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCaNa = 0.00125 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCap = 1.1000000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCaKp = 0.00035740000000000001 * var_ICaL__PCap; // dimensionless
        const double var_ICaL__PCaNap = 0.00125 * var_ICaL__PCap; // dimensionless
        const double var_IK1__GK1 = ((var_environment__celltype == 1.0) ? (1.2 * mParameters[18]) : ((var_environment__celltype == 2.0) ? (1.3 * mParameters[18]) : (mParameters[18]))); // milliS_per_microF
        const double var_IKb__GKb = ((var_environment__celltype == 1.0) ? (0.59999999999999998 * mParameters[14]) : (mParameters[14])); // milliS_per_microF
        const double var_IKr__GKr = ((var_environment__celltype == 1.0) ? (1.3 * mParameters[20]) : ((var_environment__celltype == 2.0) ? (0.80000000000000004 * mParameters[20]) : (mParameters[20]))); // milliS_per_microF
        const double var_IKs__GKs = ((var_environment__celltype == 1.0) ? (1.3999999999999999 * mParameters[21]) : (mParameters[21])); // milliS_per_microF
        const double var_INaCa_i__Gncx = ((var_environment__celltype == 1.0) ? (1.1000000000000001 * mParameters[22]) : ((var_environment__celltype == 2.0) ? (1.3999999999999999 * mParameters[22]) : (mParameters[22]))); // milliS_per_microF
        const double var_INaK__Pnak = ((var_environment__celltype == 1.0) ? (0.90000000000000002 * mParameters[23]) : ((var_environment__celltype == 2.0) ? (0.69999999999999996 * mParameters[23]) : (mParameters[23]))); // milliS_per_microF
        const double var_INaL__GNaL = ((var_environment__celltype == 1.0) ? (0.59999999999999998 * mParameters[19]) : (mParameters[19])); // milliS_per_microF
        const double var_Ito__Gto = (((var_environment__celltype == 1.0) || (var_environment__celltype == 2.0)) ? (4.0 * mParameters[24]) : (mParameters[24])); // milliS_per_microF
        const double var_IK1__GK1_calc = sqrt(mParameters[10]) * var_IK1__GK1; // milliS_per_microF
        const double var_IKr__GKr_calc = 0.43033148291193518 * sqrt(mParameters[10]) * var_IKr__GKr; // milliS_per_microF
        const double var_INaCa_i__h10_i = 1.0 + (1.0 + mParameters[11] / var_INaCa_i__kna2) * mParameters[11] / var_INaCa_i__kna1 + var_INaCa_i__kasymm; // dimensionless
        const double var_INaCa_i__h10_ss = 1.0 + (1.0 + mParameters[11] / var_INaCa_i__kna2) * mParameters[11] / var_INaCa_i__kna1 + var_INaCa_i__kasymm; // dimensionless
        const double var_INaCa_i__h11_i = pow(mParameters[11], 2) / (var_INaCa_i__h10_i * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h11_ss = pow(mParameters[11], 2) / (var_INaCa_i__h10_ss * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h12_i = 1 / var_INaCa_i__h10_i; // dimensionless
        const double var_INaCa_i__h12_ss = 1 / var_INaCa_i__h10_ss; // dimensionless
        const double var_INaCa_i__k1_i = var_INaCa_i__h12_i * var_INaCa_i__kcaon * mParameters[9]; // dimensionless
        const double var_INaCa_i__k1_ss = var_INaCa_i__h12_ss * var_INaCa_i__kcaon * mParameters[9]; // dimensionless
        const double var_IKs__KsCa = 1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__intracellular_ions__cai), 1.3999999999999999)); // dimensionless
        const double var_IKs__GKs_calc = var_IKs__GKs * var_IKs__KsCa; // milliS_per_microF
        const double var_INaCa_i__allo_i = 1 / (1.0 + pow(var_INaCa_i__KmCaAct, 2) / pow(var_chaste_interface__intracellular_ions__cai, 2)); // dimensionless
        const double var_IpCa__IpCa = mParameters[16] * var_chaste_interface__intracellular_ions__cai / (var_IpCa__KmCap + var_chaste_interface__intracellular_ions__cai); // microA_per_microF
        const double var_IpCa__IpCa_converted = HeartConfig::Instance()->GetCapacitance() * var_IpCa__IpCa; // uA_per_cm2
        const double var_CaMK__CaMKb = (1.0 - var_chaste_interface__CaMK__CaMKt) * var_CaMK__CaMKo / (1.0 + var_CaMK__KmCaM / var_chaste_interface__intracellular_ions__cass); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_ICaL__fICaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INa__fINap = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INaCa_i__allo_ss = 1 / (1.0 + pow(var_INaCa_i__KmCaAct, 2) / pow(var_chaste_interface__intracellular_ions__cass, 2)); // dimensionless
        const double var_INaL__fINaLp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_Ito__fItop = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_INaCa_i__h4_i = 1.0 + (1.0 + var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna2) * var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna1; // dimensionless
        const double var_INaCa_i__h5_i = pow(var_chaste_interface__intracellular_ions__nai, 2) / (var_INaCa_i__h4_i * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h6_i = 1 / var_INaCa_i__h4_i; // dimensionless
        const double var_INaCa_i__k6_i = var_INaCa_i__h6_i * var_INaCa_i__kcaon * var_chaste_interface__intracellular_ions__cai; // dimensionless
        const double var_INaK__P = var_INaK__eP / (1.0 + var_INaK__H / var_INaK__Khp + var_chaste_interface__intracellular_ions__nai / var_INaK__Knap + var_chaste_interface__intracellular_ions__ki / var_INaK__Kxkur); // dimensionless
        const double var_INaK__b3 = var_INaK__H * var_INaK__P * var_INaK__k3m / (1.0 + var_INaK__MgATP / var_INaK__Kmgatp); // dimensionless
        const double var_INaCa_i__h4_ss = 1.0 + (1.0 + var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna2) * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna1; // dimensionless
        const double var_INaCa_i__h5_ss = pow(var_chaste_interface__intracellular_ions__nass, 2) / (var_INaCa_i__h4_ss * var_INaCa_i__kna1 * var_INaCa_i__kna2); // dimensionless
        const double var_INaCa_i__h6_ss = 1 / var_INaCa_i__h4_ss; // dimensionless
        const double var_INaCa_i__k6_ss = var_INaCa_i__h6_ss * var_INaCa_i__kcaon * var_chaste_interface__intracellular_ions__cass; // dimensionless
        const double var_membrane__Istim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
        const double var_ICaL__Afcaf = 0.29999999999999999 + 0.59999999999999998 / (1.0 + exp(-1.0 + 0.10000000000000001 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_ICaL__Afcas = 1.0 - var_ICaL__Afcaf; // dimensionless
        const double var_ICaL__PhiCaK = ((fabs(var_chaste_interface__membrane__v) < 2.6712338705498262e-6) ? (2.671233870549826e-13 * (-0.75 * mParameters[10] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)) + 187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-0.75 * mParameters[10] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-0.75 * mParameters[10] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (0.037435883507802616 * pow(var_chaste_interface__membrane__v, 2) * (-0.75 * mParameters[10] + 0.75 * var_chaste_interface__intracellular_ions__kss * exp(0.037435883507802616 * var_chaste_interface__membrane__v)) / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__v)))); // dimensionless
        const double var_ICaL__PhiCaL = ((fabs(var_chaste_interface__membrane__v) < 1.3356169352749131e-6) ? (2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)) + 374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (0.14974353403121046 * pow(var_chaste_interface__membrane__v, 2) * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cass * exp(0.074871767015605231 * var_chaste_interface__membrane__v)) / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__v)))); // dimensionless
        const double var_ICaL__PhiCaNa = ((fabs(var_chaste_interface__membrane__v) < 2.6712338705498262e-6) ? (2.671233870549826e-13 * (-0.75 * mParameters[11] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)) + 187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-0.75 * mParameters[11] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-0.75 * mParameters[11] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8)))) : (0.037435883507802616 * pow(var_chaste_interface__membrane__v, 2) * (-0.75 * mParameters[11] + 0.75 * var_chaste_interface__intracellular_ions__nass * exp(0.037435883507802616 * var_chaste_interface__membrane__v)) / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__v)))); // dimensionless
        const double var_ICaL__fca = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcaf + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__fcap = var_ICaL__Afcaf * var_chaste_interface__ICaL__fcafp + var_ICaL__Afcas * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_ICaL__ICaK = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaK * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaKp * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaK_converted = HeartConfig::Instance()->GetCapacitance() * var_ICaL__ICaK; // uA_per_cm2
        const double var_ICaL__ICaL = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCa * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCap * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaL_converted = HeartConfig::Instance()->GetCapacitance() * var_ICaL__ICaL; // uA_per_cm2
        const double var_ICaL__ICaNa = (1.0 - var_ICaL__fICaLp) * ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__f + var_ICaL__fca * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaNa * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d + ((1.0 - var_chaste_interface__ICaL__nca) * var_ICaL__fp + var_ICaL__fcap * var_chaste_interface__ICaL__jca * var_chaste_interface__ICaL__nca) * var_ICaL__PCaNap * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * var_ICaL__fICaLp; // microA_per_microF
        const double var_ICaL__ICaNa_converted = HeartConfig::Instance()->GetCapacitance() * var_ICaL__ICaNa; // uA_per_cm2
        const double var_ICab__ICab = ((fabs(var_chaste_interface__membrane__v) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cai * exp(9.9999999999999995e-8)) * mParameters[13] / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cai * exp(-9.9999999999999995e-8)) * mParameters[13] / (-1.0 + exp(-9.9999999999999995e-8))) + 2.671233870549826e-13 * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cai * exp(-9.9999999999999995e-8)) * mParameters[13] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.14974353403121046 * pow(var_chaste_interface__membrane__v, 2) * (-0.34100000000000003 * mParameters[9] + var_chaste_interface__intracellular_ions__cai * exp(0.074871767015605231 * var_chaste_interface__membrane__v)) * mParameters[13] / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__v)))); // microA_per_microF
        const double var_ICab__ICab_converted = HeartConfig::Instance()->GetCapacitance() * var_ICab__ICab; // uA_per_cm2
        const double var_IK1__rk1 = 1 / (1.0 + exp(11.145054250500367 + 0.10534077741493732 * var_chaste_interface__membrane__v - 0.27388602127883704 * mParameters[10])); // millisecond
        const double var_IKb__xkb = 1 / (1.0 + exp(0.78953107960741553 - 0.054525627044711013 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_INab__INab = ((fabs(var_chaste_interface__membrane__v) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__v) * (2.671233870549826e-13 * (-mParameters[11] + var_chaste_interface__intracellular_ions__nai * exp(9.9999999999999995e-8)) * mParameters[15] / (-1.0 + exp(9.9999999999999995e-8)) - 2.671233870549826e-13 * (-mParameters[11] + var_chaste_interface__intracellular_ions__nai * exp(-9.9999999999999995e-8)) * mParameters[15] / (-1.0 + exp(-9.9999999999999995e-8))) + 2.671233870549826e-13 * (-mParameters[11] + var_chaste_interface__intracellular_ions__nai * exp(-9.9999999999999995e-8)) * mParameters[15] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.037435883507802616 * pow(var_chaste_interface__membrane__v, 2) * (-mParameters[11] + var_chaste_interface__intracellular_ions__nai * exp(0.037435883507802616 * var_chaste_interface__membrane__v)) * mParameters[15] / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__v)))); // microA_per_microF
        const double var_INab__INab_converted = HeartConfig::Instance()->GetCapacitance() * var_INab__INab; // uA_per_cm2
        const double var_Ito__AiF = 1 / (1.0 + exp(-1.4126984126984128 + 0.0066137566137566143 * var_chaste_interface__membrane__v)); // dimensionless
        const double var_Ito__AiS = 1.0 - var_Ito__AiF; // dimensionless
        const double var_Ito__i = var_Ito__AiF * var_chaste_interface__Ito__iF + var_Ito__AiS * var_chaste_interface__Ito__iS; // dimensionless
        const double var_Ito__ip = var_Ito__AiF * var_chaste_interface__Ito__iFp + var_Ito__AiS * var_chaste_interface__Ito__iSp; // dimensionless
        const double var_physical_constants__F = 96485.0; // coulomb_per_mole
        const double var_physical_constants__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_physical_constants__T = 310.0; // kelvin
        const double var_INaCa_i__hca = exp(var_INaCa_i__qca * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // dimensionless
        const double var_INaCa_i__hna = exp(var_INaCa_i__qna * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // dimensionless
        const double var_INaCa_i__h1_i = 1.0 + (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nai / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h1_ss = 1.0 + (1.0 + var_INaCa_i__hna) * var_chaste_interface__intracellular_ions__nass / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h2_i = var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nai / (var_INaCa_i__h1_i * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h2_ss = var_INaCa_i__hna * var_chaste_interface__intracellular_ions__nass / (var_INaCa_i__h1_ss * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h3_i = 1 / var_INaCa_i__h1_i; // dimensionless
        const double var_INaCa_i__h3_ss = 1 / var_INaCa_i__h1_ss; // dimensionless
        const double var_INaCa_i__h7_i = 1.0 + (1.0 + 1 / var_INaCa_i__hna) * mParameters[11] / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h7_ss = 1.0 + (1.0 + 1 / var_INaCa_i__hna) * mParameters[11] / var_INaCa_i__kna3; // dimensionless
        const double var_INaCa_i__h8_i = mParameters[11] / (var_INaCa_i__h7_i * var_INaCa_i__hna * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h8_ss = mParameters[11] / (var_INaCa_i__h7_ss * var_INaCa_i__hna * var_INaCa_i__kna3); // dimensionless
        const double var_INaCa_i__h9_i = 1 / var_INaCa_i__h7_i; // dimensionless
        const double var_INaCa_i__h9_ss = 1 / var_INaCa_i__h7_ss; // dimensionless
        const double var_INaCa_i__k3p_i = var_INaCa_i__h9_i * var_INaCa_i__wca; // dimensionless
        const double var_INaCa_i__k3p_ss = var_INaCa_i__h9_ss * var_INaCa_i__wca; // dimensionless
        const double var_INaCa_i__k3pp_i = var_INaCa_i__h8_i * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k3_i = var_INaCa_i__k3p_i + var_INaCa_i__k3pp_i; // dimensionless
        const double var_INaCa_i__k3pp_ss = var_INaCa_i__h8_ss * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k3_ss = var_INaCa_i__k3p_ss + var_INaCa_i__k3pp_ss; // dimensionless
        const double var_INaCa_i__k4p_i = var_INaCa_i__h3_i * var_INaCa_i__wca / var_INaCa_i__hca; // dimensionless
        const double var_INaCa_i__k4p_ss = var_INaCa_i__h3_ss * var_INaCa_i__wca / var_INaCa_i__hca; // dimensionless
        const double var_INaCa_i__k4pp_i = var_INaCa_i__h2_i * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k4_i = var_INaCa_i__k4p_i + var_INaCa_i__k4pp_i; // dimensionless
        const double var_INaCa_i__k4pp_ss = var_INaCa_i__h2_ss * var_INaCa_i__wnaca; // dimensionless
        const double var_INaCa_i__k4_ss = var_INaCa_i__k4p_ss + var_INaCa_i__k4pp_ss; // dimensionless
        const double var_INaCa_i__k7_i = var_INaCa_i__h2_i * var_INaCa_i__h5_i * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k7_ss = var_INaCa_i__h2_ss * var_INaCa_i__h5_ss * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k8_i = var_INaCa_i__h11_i * var_INaCa_i__h8_i * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__k8_ss = var_INaCa_i__h11_ss * var_INaCa_i__h8_ss * var_INaCa_i__wna; // dimensionless
        const double var_INaCa_i__x1_i = (var_INaCa_i__k2_i + var_INaCa_i__k3_i) * var_INaCa_i__k5_i * var_INaCa_i__k7_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k2_i * var_INaCa_i__k4_i; // dimensionless
        const double var_INaCa_i__x1_ss = (var_INaCa_i__k2_ss + var_INaCa_i__k3_ss) * var_INaCa_i__k5_ss * var_INaCa_i__k7_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k2_ss * var_INaCa_i__k4_ss; // dimensionless
        const double var_INaCa_i__x2_i = (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k4_i * var_INaCa_i__k6_i + (var_INaCa_i__k4_i + var_INaCa_i__k5_i) * var_INaCa_i__k1_i * var_INaCa_i__k7_i; // dimensionless
        const double var_INaCa_i__x2_ss = (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k4_ss * var_INaCa_i__k6_ss + (var_INaCa_i__k4_ss + var_INaCa_i__k5_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k7_ss; // dimensionless
        const double var_INaCa_i__x3_i = (var_INaCa_i__k2_i + var_INaCa_i__k3_i) * var_INaCa_i__k6_i * var_INaCa_i__k8_i + (var_INaCa_i__k6_i + var_INaCa_i__k7_i) * var_INaCa_i__k1_i * var_INaCa_i__k3_i; // dimensionless
        const double var_INaCa_i__x3_ss = (var_INaCa_i__k2_ss + var_INaCa_i__k3_ss) * var_INaCa_i__k6_ss * var_INaCa_i__k8_ss + (var_INaCa_i__k6_ss + var_INaCa_i__k7_ss) * var_INaCa_i__k1_ss * var_INaCa_i__k3_ss; // dimensionless
        const double var_INaCa_i__x4_i = (var_INaCa_i__k1_i + var_INaCa_i__k8_i) * var_INaCa_i__k3_i * var_INaCa_i__k5_i + (var_INaCa_i__k4_i + var_INaCa_i__k5_i) * var_INaCa_i__k2_i * var_INaCa_i__k8_i; // dimensionless
        const double var_INaCa_i__E1_i = var_INaCa_i__x1_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E2_i = var_INaCa_i__x2_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E3_i = var_INaCa_i__x3_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E4_i = var_INaCa_i__x4_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__JncxCa_i = var_INaCa_i__E2_i * var_INaCa_i__k2_i - var_INaCa_i__E1_i * var_INaCa_i__k1_i; // millimolar_per_millisecond
        const double var_INaCa_i__JncxNa_i = var_INaCa_i__E3_i * var_INaCa_i__k4pp_i - var_INaCa_i__E2_i * var_INaCa_i__k3pp_i + 3.0 * var_INaCa_i__E4_i * var_INaCa_i__k7_i - 3.0 * var_INaCa_i__E1_i * var_INaCa_i__k8_i; // millimolar_per_millisecond
        const double var_INaCa_i__x4_ss = (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss) * var_INaCa_i__k3_ss * var_INaCa_i__k5_ss + (var_INaCa_i__k4_ss + var_INaCa_i__k5_ss) * var_INaCa_i__k2_ss * var_INaCa_i__k8_ss; // dimensionless
        const double var_INaCa_i__E1_ss = var_INaCa_i__x1_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E2_ss = var_INaCa_i__x2_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E3_ss = var_INaCa_i__x3_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E4_ss = var_INaCa_i__x4_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__JncxCa_ss = var_INaCa_i__E2_ss * var_INaCa_i__k2_ss - var_INaCa_i__E1_ss * var_INaCa_i__k1_ss; // millimolar_per_millisecond
        const double var_INaCa_i__JncxNa_ss = var_INaCa_i__E3_ss * var_INaCa_i__k4pp_ss - var_INaCa_i__E2_ss * var_INaCa_i__k3pp_ss + 3.0 * var_INaCa_i__E4_ss * var_INaCa_i__k7_ss - 3.0 * var_INaCa_i__E1_ss * var_INaCa_i__k8_ss; // millimolar_per_millisecond
        const double var_INaK__Knai = var_INaK__Knai0 * exp(0.33333333333333331 * var_INaK__delta * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // millimolar
        const double var_INaK__Knao = var_INaK__Knao0 * exp(0.33333333333333331 * (1.0 - var_INaK__delta) * var_chaste_interface__membrane__v * var_physical_constants__F / (var_physical_constants__R * var_physical_constants__T)); // millimolar
        const double var_INaK__a1 = pow(var_chaste_interface__intracellular_ions__nai, 3) * var_INaK__k1p / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__ki / var_INaK__Kki), 2) + pow((1.0 + var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3)) * pow(var_INaK__Knai, 3)); // dimensionless
        const double var_INaK__a3 = pow(mParameters[10], 2) * var_INaK__k3p / ((-1.0 + pow((1.0 + mParameters[10] / var_INaK__Kko), 2) + pow((1.0 + mParameters[11] / var_INaK__Knao), 3)) * pow(var_INaK__Kko, 2)); // dimensionless
        const double var_INaK__b2 = pow(mParameters[11], 3) * var_INaK__k2m / ((-1.0 + pow((1.0 + mParameters[10] / var_INaK__Kko), 2) + pow((1.0 + mParameters[11] / var_INaK__Knao), 3)) * pow(var_INaK__Knao, 3)); // dimensionless
        const double var_INaK__b4 = pow(var_chaste_interface__intracellular_ions__ki, 2) * var_INaK__k4m / ((-1.0 + pow((1.0 + var_chaste_interface__intracellular_ions__ki / var_INaK__Kki), 2) + pow((1.0 + var_chaste_interface__intracellular_ions__nai / var_INaK__Knai), 3)) * pow(var_INaK__Kki, 2)); // dimensionless
        const double var_INaK__x1 = var_INaK__a1 * var_INaK__a2 * var_INaK__a4 + var_INaK__a1 * var_INaK__a2 * var_INaK__b3 + var_INaK__a2 * var_INaK__b3 * var_INaK__b4 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__x2 = var_INaK__a1 * var_INaK__a2 * var_INaK__a3 + var_INaK__a2 * var_INaK__a3 * var_INaK__b4 + var_INaK__a3 * var_INaK__b1 * var_INaK__b4 + var_INaK__b1 * var_INaK__b2 * var_INaK__b4; // dimensionless
        const double var_INaK__x3 = var_INaK__a2 * var_INaK__a3 * var_INaK__a4 + var_INaK__a3 * var_INaK__a4 * var_INaK__b1 + var_INaK__a4 * var_INaK__b1 * var_INaK__b2 + var_INaK__b1 * var_INaK__b2 * var_INaK__b3; // dimensionless
        const double var_INaK__x4 = var_INaK__a1 * var_INaK__a3 * var_INaK__a4 + var_INaK__a1 * var_INaK__a4 * var_INaK__b2 + var_INaK__a1 * var_INaK__b2 * var_INaK__b3 + var_INaK__b2 * var_INaK__b3 * var_INaK__b4; // dimensionless
        const double var_INaK__E1 = var_INaK__x1 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E2 = var_INaK__x2 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E3 = var_INaK__x3 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__E4 = var_INaK__x4 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4); // dimensionless
        const double var_INaK__JnakK = 2.0 * var_INaK__E4 * var_INaK__b1 - 2.0 * var_INaK__E3 * var_INaK__a1; // millimolar_per_millisecond
        const double var_INaK__JnakNa = 3.0 * var_INaK__E1 * var_INaK__a3 - 3.0 * var_INaK__E2 * var_INaK__b3; // millimolar_per_millisecond
        const double var_physical_constants__zca = 2.0; // dimensionless
        const double var_physical_constants__zk = 1.0; // dimensionless
        const double var_physical_constants__zna = 1.0; // dimensionless
        const double var_INaCa_i__INaCa_i = 0.80000000000000004 * (var_INaCa_i__JncxCa_i * var_physical_constants__zca + var_INaCa_i__JncxNa_i * var_physical_constants__zna) * var_INaCa_i__Gncx * var_INaCa_i__allo_i; // microA_per_microF
        const double var_INaCa_i__INaCa_i_converted = HeartConfig::Instance()->GetCapacitance() * var_INaCa_i__INaCa_i; // uA_per_cm2
        const double var_INaCa_i__INaCa_ss = 0.20000000000000001 * (var_INaCa_i__JncxCa_ss * var_physical_constants__zca + var_INaCa_i__JncxNa_ss * var_physical_constants__zna) * var_INaCa_i__Gncx * var_INaCa_i__allo_ss; // microA_per_microF
        const double var_INaCa_i__INaCa_ss_converted = HeartConfig::Instance()->GetCapacitance() * var_INaCa_i__INaCa_ss; // uA_per_cm2
        const double var_INaK__INaK = (var_INaK__JnakK * var_physical_constants__zk + var_INaK__JnakNa * var_physical_constants__zna) * var_INaK__Pnak; // microA_per_microF
        const double var_INaK__INaK_converted = HeartConfig::Instance()->GetCapacitance() * var_INaK__INaK; // uA_per_cm2
        const double var_reversal_potentials__EK = var_physical_constants__R * var_physical_constants__T * log(mParameters[10] / var_chaste_interface__intracellular_ions__ki) / var_physical_constants__F; // millivolt
        const double var_IK1__IK1 = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IK1__GK1_calc * var_IK1__rk1 * var_chaste_interface__IK1__xk1; // microA_per_microF
        const double var_IK1__IK1_converted = HeartConfig::Instance()->GetCapacitance() * var_IK1__IK1; // uA_per_cm2
        const double var_IKb__IKb = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IKb__GKb * var_IKb__xkb; // microA_per_microF
        const double var_IKb__IKb_converted = HeartConfig::Instance()->GetCapacitance() * var_IKb__IKb; // uA_per_cm2
        const double var_IKr__IKr = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * var_IKr__GKr_calc * var_chaste_interface__IKr__O; // microA_per_microF
        const double var_IKr__IKr_converted = HeartConfig::Instance()->GetCapacitance() * var_IKr__IKr; // uA_per_cm2
        const double var_Ito__Ito = (-var_reversal_potentials__EK + var_chaste_interface__membrane__v) * ((1.0 - var_Ito__fItop) * var_chaste_interface__Ito__a * var_Ito__i + var_chaste_interface__Ito__ap * var_Ito__fItop * var_Ito__ip) * var_Ito__Gto; // microA_per_microF
        const double var_Ito__Ito_converted = HeartConfig::Instance()->GetCapacitance() * var_Ito__Ito; // uA_per_cm2
        const double var_reversal_potentials__ENa = var_physical_constants__R * var_physical_constants__T * log(mParameters[11] / var_chaste_interface__intracellular_ions__nai) / var_physical_constants__F; // millivolt
        const double var_INa__INa = pow(var_chaste_interface__INa__m, 3) * (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - var_INa__fINap) * var_INa__h * var_chaste_interface__INa__j + var_INa__fINap * var_INa__hp * var_chaste_interface__INa__jp) * mParameters[17]; // microA_per_microF
        const double var_INa__INa_converted = HeartConfig::Instance()->GetCapacitance() * var_INa__INa; // uA_per_cm2
        const double var_INaL__INaL = (-var_reversal_potentials__ENa + var_chaste_interface__membrane__v) * ((1.0 - var_INaL__fINaLp) * var_chaste_interface__INaL__hL + var_INaL__fINaLp * var_chaste_interface__INaL__hLp) * var_INaL__GNaL * var_chaste_interface__INaL__mL; // microA_per_microF
        const double var_INaL__INaL_converted = HeartConfig::Instance()->GetCapacitance() * var_INaL__INaL; // uA_per_cm2
        const double var_reversal_potentials__PKNa = 0.018329999999999999; // dimensionless
        const double var_reversal_potentials__EKs = var_physical_constants__R * var_physical_constants__T * log((mParameters[11] * var_reversal_potentials__PKNa + mParameters[10]) / (var_chaste_interface__intracellular_ions__nai * var_reversal_potentials__PKNa + var_chaste_interface__intracellular_ions__ki)) / var_physical_constants__F; // millivolt
        const double var_IKs__IKs = (-var_reversal_potentials__EKs + var_chaste_interface__membrane__v) * var_IKs__GKs_calc * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2; // microA_per_microF
        const double var_IKs__IKs_converted = HeartConfig::Instance()->GetCapacitance() * var_IKs__IKs; // uA_per_cm2
        const double var_ryr__fJrelp = 1 / (1.0 + var_CaMK__KmCaMK / var_CaMK__CaMKa); // dimensionless
        const double var_ryr__Jrel = ((1.0 - var_ryr__fJrelp) * var_chaste_interface__ryr__Jrelnp + var_chaste_interface__ryr__Jrelp * var_ryr__fJrelp) * mParameters[7]; // millimolar_per_millisecond

        std::vector<double> dqs(25);
        dqs[0] = var_ryr__Jrel;
        dqs[1] = var_ICaL__ICaK_converted;
        dqs[2] = var_ICaL__ICaNa_converted;
        dqs[3] = var_ICaL__ICaL_converted;
        dqs[4] = var_ICab__ICab_converted;
        dqs[5] = var_IKb__IKb_converted;
        dqs[6] = var_INab__INab_converted;
        dqs[7] = var_IpCa__IpCa_converted;
        dqs[8] = var_INa__INa_converted;
        dqs[9] = var_INa__h;
        dqs[10] = var_IK1__IK1_converted;
        dqs[11] = var_IK1__GK1_calc;
        dqs[12] = var_INaL__INaL_converted;
        dqs[13] = var_INaL__GNaL;
        dqs[14] = var_IKr__IKr_converted;
        dqs[15] = var_IKr__GKr_calc;
        dqs[16] = var_IKs__IKs_converted;
        dqs[17] = var_IKs__GKs_calc;
        dqs[18] = var_INaCa_i__INaCa_i_converted;
        dqs[19] = var_INaCa_i__INaCa_ss_converted;
        dqs[20] = var_INaK__INaK_converted;
        dqs[21] = var_membrane__Istim_converted;
        dqs[22] = var_Ito__Ito_converted;
        dqs[23] = var_Ito__Gto;
        dqs[24] = var_chaste_interface__environment__time;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellohara_rudy_cipa_v1_2017FromCellMLGRL2>::Initialise(void)
{
    this->mSystemName = "ohara_rudy_cipa_v1_2017";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-88.00190465);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.6e-05);

    // rY[2]:
    this->mVariableNames.push_back("CaMK__CaMKt");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0125840447);

    // rY[3]:
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.268004498);

    // rY[4]:
    this->mVariableNames.push_back("intracellular_ions__nass");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.268089977);

    // rY[5]:
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(144.6555918);

    // rY[6]:
    this->mVariableNames.push_back("intracellular_ions__kss");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(144.6555651);

    // rY[7]:
    this->mVariableNames.push_back("intracellular_ions__cass");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.49e-05);

    // rY[8]:
    this->mVariableNames.push_back("intracellular_ions__cansr");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.619574538);

    // rY[9]:
    this->mVariableNames.push_back("intracellular_ions__cajsr");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.571234014);

    // rY[10]:
    this->mVariableNames.push_back("INa__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.007344121102);

    // rY[11]:
    this->mVariableNames.push_back("INa__hf");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.6981071913);

    // rY[12]:
    this->mVariableNames.push_back("INa__hs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.6980895801);

    // rY[13]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.6979908432);

    // rY[14]:
    this->mVariableNames.push_back("INa__hsp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.4549485525);

    // rY[15]:
    this->mVariableNames.push_back("INa__jp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.6979245865);

    // rY[16]:
    this->mVariableNames.push_back("INaL__mL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0001882617273);

    // rY[17]:
    this->mVariableNames.push_back("INaL__hL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.5008548855);

    // rY[18]:
    this->mVariableNames.push_back("INaL__hLp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.2693065357);

    // rY[19]:
    this->mVariableNames.push_back("Ito__a");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.001001097687);

    // rY[20]:
    this->mVariableNames.push_back("Ito__iF");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9995541745);

    // rY[21]:
    this->mVariableNames.push_back("Ito__iS");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.5865061736);

    // rY[22]:
    this->mVariableNames.push_back("Ito__ap");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0005100862934);

    // rY[23]:
    this->mVariableNames.push_back("Ito__iFp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9995541823);

    // rY[24]:
    this->mVariableNames.push_back("Ito__iSp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.6393399482);

    // rY[25]:
    this->mVariableNames.push_back("ICaL__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.34e-09);

    // rY[26]:
    this->mVariableNames.push_back("ICaL__ff");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9999999909);

    // rY[27]:
    this->mVariableNames.push_back("ICaL__fs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9102412777);

    // rY[28]:
    this->mVariableNames.push_back("ICaL__fcaf");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9999999909);

    // rY[29]:
    this->mVariableNames.push_back("ICaL__fcas");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9998046777);

    // rY[30]:
    this->mVariableNames.push_back("ICaL__jca");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9999738312);

    // rY[31]:
    this->mVariableNames.push_back("ICaL__ffp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9999999909);

    // rY[32]:
    this->mVariableNames.push_back("ICaL__fcafp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9999999909);

    // rY[33]:
    this->mVariableNames.push_back("ICaL__nca");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.002749414044);

    // rY[34]:
    this->mVariableNames.push_back("IKr__IC1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999637);

    // rY[35]:
    this->mVariableNames.push_back("IKr__IC2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(6.83208e-05);

    // rY[36]:
    this->mVariableNames.push_back("IKr__C1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.80145e-08);

    // rY[37]:
    this->mVariableNames.push_back("IKr__C2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.26619e-05);

    // rY[38]:
    this->mVariableNames.push_back("IKr__O");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00015551);

    // rY[39]:
    this->mVariableNames.push_back("IKr__IO");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(5.67623e-05);

    // rY[40]:
    this->mVariableNames.push_back("IKr__IObound");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[41]:
    this->mVariableNames.push_back("IKr__Obound");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[42]:
    this->mVariableNames.push_back("IKr__Cbound");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[43]:
    this->mVariableNames.push_back("IKs__xs1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.2707758025);

    // rY[44]:
    this->mVariableNames.push_back("IKs__xs2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0001928503426);

    // rY[45]:
    this->mVariableNames.push_back("IK1__xk1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9967597594);

    // rY[46]:
    this->mVariableNames.push_back("ryr__Jrelnp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.5e-07);

    // rY[47]:
    this->mVariableNames.push_back("ryr__Jrelp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.12e-07);

    // mParameters[0]:
    this->mParameterNames.push_back("Dynamic_hERG_D");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[1]:
    this->mParameterNames.push_back("Dynamic_hERG_Kmax");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[2]:
    this->mParameterNames.push_back("Dynamic_hERG_Kt");
    this->mParameterUnits.push_back("per_millisecond");

    // mParameters[3]:
    this->mParameterNames.push_back("Dynamic_hERG_Ku");
    this->mParameterUnits.push_back("per_millisecond");

    // mParameters[4]:
    this->mParameterNames.push_back("Dynamic_hERG_Vhalf");
    this->mParameterUnits.push_back("millivolt");

    // mParameters[5]:
    this->mParameterNames.push_back("Dynamic_hERG_halfmax");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[6]:
    this->mParameterNames.push_back("Dynamic_hERG_n");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[7]:
    this->mParameterNames.push_back("SR_release_current_max");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[8]:
    this->mParameterNames.push_back("SR_uptake_current_max");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[9]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[10]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[11]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[12]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[13]:
    this->mParameterNames.push_back("membrane_background_calcium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[14]:
    this->mParameterNames.push_back("membrane_background_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[15]:
    this->mParameterNames.push_back("membrane_background_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[16]:
    this->mParameterNames.push_back("membrane_calcium_pump_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[17]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[18]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[19]:
    this->mParameterNames.push_back("membrane_persistent_sodium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[20]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[21]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[22]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[23]:
    this->mParameterNames.push_back("membrane_sodium_potassium_pump_current_permeability");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[24]:
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("milliS_per_microF");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("SR_release_current");
    this->mDerivedQuantityUnits.push_back("millimolar_per_millisecond");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_channel_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_channel_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_background_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_background_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_background_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_calcium_pump_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mDerivedQuantityUnits.push_back("dimensionless");

    // Derived Quantity index [10]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [11]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mDerivedQuantityUnits.push_back("milliS_per_microF");

    // Derived Quantity index [12]:
    this->mDerivedQuantityNames.push_back("membrane_persistent_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [13]:
    this->mDerivedQuantityNames.push_back("membrane_persistent_sodium_current_conductance");
    this->mDerivedQuantityUnits.push_back("milliS_per_microF");

    // Derived Quantity index [14]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [15]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mDerivedQuantityUnits.push_back("milliS_per_microF");

    // Derived Quantity index [16]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [17]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mDerivedQuantityUnits.push_back("milliS_per_microF");

    // Derived Quantity index [18]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [19]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_dyadic_space_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [20]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_potassium_pump_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [21]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [22]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [23]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current_conductance");
    this->mDerivedQuantityUnits.push_back("milliS_per_microF");

    // Derived Quantity index [24]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellohara_rudy_cipa_v1_2017FromCellMLGRL2)

