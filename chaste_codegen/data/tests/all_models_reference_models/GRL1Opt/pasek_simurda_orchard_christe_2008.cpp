//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: pasek_model_2008
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: GeneralizedRushLarsenFirstOrderOpt)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "pasek_simurda_orchard_christe_2008.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables : public AbstractLookupTableCollection
{
public:
    static Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables);
        }
        return mpInstance.get();
    }

    void FreeMemory()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }

    // Row lookup methods
    // using linear-interpolation

    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<23; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }


    const double * IndexTable0(double var_chaste_interface__Vm_s__Vm_s)
    {
        const double _offset_0 = var_chaste_interface__Vm_s__Vm_s - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }


// LCOV_EXCL_START
    bool CheckIndex0(double& var_chaste_interface__Vm_s__Vm_s)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__Vm_s__Vm_s>mTableMaxs[0] || var_chaste_interface__Vm_s__Vm_s<mTableMins[0])
        {
// LCOV_EXCL_START
            _oob_0 = true;
// LCOV_EXCL_STOP
        }
        return _oob_0;
    }
// LCOV_EXCL_STOP

    ~Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

    }

protected:
    Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables(const Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables&);
    Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables& operator= (const Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables&);
    Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);

        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 23;
        mTableMins[0] = -250.0;
        mTableMaxs[0] = 550.0;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;

        Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::RegenerateTables();
    }

    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);


        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][23];

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm_s__Vm_s = mTableMins[0] + i*mTableSteps[0];
                double val = exp(0.037459725942315905 * var_chaste_interface__Vm_s__Vm_s);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[0] < 2){
                    double left = _lookup_table_0[i-1][0];
                    double right = _lookup_table_0[i+1][0];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 0 at ["<<i<<"][0] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[0] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[0] >= 2){
                    EXCEPTION("Lookup table 0 at ["<<i<<"][0] has non-finite value: " << val);
                }
                _lookup_table_0[i][0] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm_s__Vm_s = mTableMins[0] + i*mTableSteps[0];
                double val = -1.0 + exp(0.037459725942315905 * var_chaste_interface__Vm_s__Vm_s);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[1] < 2){
                    double left = _lookup_table_0[i-1][1];
                    double right = _lookup_table_0[i+1][1];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 1 at ["<<i<<"][1] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[1] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[1] >= 2){
                    EXCEPTION("Lookup table 1 at ["<<i<<"][1] has non-finite value: " << val);
                }
                _lookup_table_0[i][1] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm_s__Vm_s = mTableMins[0] + i*mTableSteps[0];
                double val = -1.0 + exp(0.07491945188463181 * var_chaste_interface__Vm_s__Vm_s);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[2] < 2){
                    double left = _lookup_table_0[i-1][2];
                    double right = _lookup_table_0[i+1][2];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 2 at ["<<i<<"][2] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[2] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[2] >= 2){
                    EXCEPTION("Lookup table 2 at ["<<i<<"][2] has non-finite value: " << val);
                }
                _lookup_table_0[i][2] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm_s__Vm_s = mTableMins[0] + i*mTableSteps[0];
                double val = -0.61380000000000001 + 0.001 * exp(0.07491945188463181 * var_chaste_interface__Vm_s__Vm_s);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[3] < 2){
                    double left = _lookup_table_0[i-1][3];
                    double right = _lookup_table_0[i+1][3];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 3 at ["<<i<<"][3] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[3] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[3] >= 2){
                    EXCEPTION("Lookup table 3 at ["<<i<<"][3] has non-finite value: " << val);
                }
                _lookup_table_0[i][3] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm_s__Vm_s = mTableMins[0] + i*mTableSteps[0];
                double val = 0.80000000000000004 - 0.65000000000000002 / (1.0 + exp(8.3333333333333339 + 0.066666666666666666 * var_chaste_interface__Vm_s__Vm_s));

                _lookup_table_0[i][4] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm_s__Vm_s = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + exp(4.0 - 0.20000000000000001 * var_chaste_interface__Vm_s__Vm_s);

                _lookup_table_0[i][5] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm_s__Vm_s = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + exp(-1.7703904136064939 + 0.038654812524159254 * var_chaste_interface__Vm_s__Vm_s);

                _lookup_table_0[i][6] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm_s__Vm_s = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + exp(-9.8123827392120067 - 0.17056114617090226 * var_chaste_interface__Vm_s__Vm_s);

                _lookup_table_0[i][7] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm_s__Vm_s = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + exp(-6.75 - 0.125 * var_chaste_interface__Vm_s__Vm_s);

                _lookup_table_0[i][8] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm_s__Vm_s = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-0.03184076705096852 * var_chaste_interface__Vm_s__Vm_s);

                _lookup_table_0[i][9] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm_s__Vm_s = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + 0.1245 * exp(-0.0037459725942315908 * var_chaste_interface__Vm_s__Vm_s) + 0.0052142857142857138 * (-1.0 + exp(2.0802377414561666)) * exp(-0.037459725942315905 * var_chaste_interface__Vm_s__Vm_s);

                _lookup_table_0[i][10] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm_s__Vm_s = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + exp(0.4017857142857143 + 0.044642857142857144 * var_chaste_interface__Vm_s__Vm_s);

                _lookup_table_0[i][11] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm_s__Vm_s = mTableMins[0] + i*mTableSteps[0];
                double val = 400.0 * exp(1.2 + 0.10000000000000001 * var_chaste_interface__Vm_s__Vm_s);

                _lookup_table_0[i][12] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm_s__Vm_s = mTableMins[0] + i*mTableSteps[0];
                double val = 50.0 * exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__Vm_s__Vm_s);

                _lookup_table_0[i][13] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm_s__Vm_s = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(5.833333333333333 + 0.16666666666666666 * var_chaste_interface__Vm_s__Vm_s));

                _lookup_table_0[i][14] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm_s__Vm_s = mTableMins[0] + i*mTableSteps[0];
                double val = 0.001 / (0.02 + 0.019699999999999999 * exp(-0.113569 * pow((1 + 0.10000000000000001 * var_chaste_interface__Vm_s__Vm_s), 2))) + 0.55000000000000004 / (1.0 + exp(16.842105263157894 + 0.42105263157894735 * var_chaste_interface__Vm_s__Vm_s));

                _lookup_table_0[i][15] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm_s__Vm_s = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-2.8666666666666667 - 0.13333333333333333 * var_chaste_interface__Vm_s__Vm_s));

                _lookup_table_0[i][16] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm_s__Vm_s = mTableMins[0] + i*mTableSteps[0];
                double val = ((fabs(38.899999999999999 + var_chaste_interface__Vm_s__Vm_s) < 6.896551724422384e-7) ? (-4.2068965517283449e-7 / (-1.0 + exp(-1.000000000001e-7)) + 724999999.97009683 * (38.900000689655172 + var_chaste_interface__Vm_s__Vm_s) * (4.2068965517283451e-10 / (-1.0 + exp(-1.000000000001e-7)) + 4.2068965520669629e-10 / (-1.0 + exp(1.0000000000814911e-7))) + 1.3799999999999999 * (14.199999999999999 + var_chaste_interface__Vm_s__Vm_s) / (1.0 - exp(-1.7465999999999999 - 0.123 * var_chaste_interface__Vm_s__Vm_s))) : ((fabs(14.199999999999999 + var_chaste_interface__Vm_s__Vm_s) < 8.1300813007528783e-7) ? (1.1219512195134728e-6 / (1.0 - exp(-1.0000000000011388e-7)) + 0.60999999999999999 * (38.899999999999999 + var_chaste_interface__Vm_s__Vm_s) / (-1.0 + exp(5.6404999999999994 + 0.14499999999999999 * var_chaste_interface__Vm_s__Vm_s)) - 615000000.00454855 * (14.199999186991869 + var_chaste_interface__Vm_s__Vm_s) * (-1.1219512194943214e-9 / (1.0 - exp(9.9999999998406912e-8)) - 1.1219512195134727e-9 / (1.0 - exp(-1.0000000000011388e-7)))) : (0.60999999999999999 * (38.899999999999999 + var_chaste_interface__Vm_s__Vm_s) / (-1.0 + exp(5.6404999999999994 + 0.14499999999999999 * var_chaste_interface__Vm_s__Vm_s)) + 1.3799999999999999 * (14.199999999999999 + var_chaste_interface__Vm_s__Vm_s) / (1.0 - exp(-1.7465999999999999 - 0.123 * var_chaste_interface__Vm_s__Vm_s)))));
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[17] < 2){
                    double left = _lookup_table_0[i-1][17];
                    double right = _lookup_table_0[i+1][17];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 17 at ["<<i<<"][17] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[17] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[17] >= 2){
                    EXCEPTION("Lookup table 17 at ["<<i<<"][17] has non-finite value: " << val);
                }
                _lookup_table_0[i][17] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm_s__Vm_s = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__Vm_s__Vm_s));

                _lookup_table_0[i][18] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm_s__Vm_s = mTableMins[0] + i*mTableSteps[0];
                double val = ((fabs(30.0 + var_chaste_interface__Vm_s__Vm_s) < 1.455604075689676e-6) ? (-1.9068413391534758e-7 / (-1.0 + exp(-9.9999999999880736e-8)) - 1.046579330420877e-7 / (1.0 - exp(2.1542940320207204e-7)) + 343500000.00040966 * (30.000001455604075 + var_chaste_interface__Vm_s__Vm_s) * (1.0465793304208771e-10 / (1.0 - exp(2.1542940320207204e-7)) + 1.0465793304208771e-10 / (1.0 - exp(-2.1542940320207204e-7)) + 1.9068413391534758e-10 / (-1.0 + exp(9.9999999999880736e-8)) + 1.9068413391534758e-10 / (-1.0 + exp(-9.9999999999880736e-8)))) : (0.13100000000000001 * (30.0 + var_chaste_interface__Vm_s__Vm_s) / (-1.0 + exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__Vm_s__Vm_s)) + 0.071899999999999992 * (30.0 + var_chaste_interface__Vm_s__Vm_s) / (1.0 - exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__Vm_s__Vm_s))));
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[19] < 2){
                    double left = _lookup_table_0[i-1][19];
                    double right = _lookup_table_0[i+1][19];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 19 at ["<<i<<"][19] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[19] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[19] >= 2){
                    EXCEPTION("Lookup table 19 at ["<<i<<"][19] has non-finite value: " << val);
                }
                _lookup_table_0[i][19] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm_s__Vm_s = mTableMins[0] + i*mTableSteps[0];
                double val = 1.006 / (1.0 + exp(3.7562349155269508 + 0.080450522928399035 * var_chaste_interface__Vm_s__Vm_s));

                _lookup_table_0[i][20] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm_s__Vm_s = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-5.8378378378378377 - 0.13513513513513511 * var_chaste_interface__Vm_s__Vm_s));

                _lookup_table_0[i][21] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Vm_s__Vm_s = mTableMins[0] + i*mTableSteps[0];
                double val = 2.070393374741201e-5 + 0.00020703933747412008 / (0.022679999999999999 * exp(-0.0717 * var_chaste_interface__Vm_s__Vm_s) + 101.59999999999999 * exp(0.1135 * var_chaste_interface__Vm_s__Vm_s));

                _lookup_table_0[i][22] = val;
            }

            mNeedsRegeneration[0] = false;
        }

        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }

private:
    /** The single instance of the class */
    static std::shared_ptr<Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[23];

    // Lookup tables
    double (*_lookup_table_0)[23];
    int _lookup_table_0_num_misshit_piecewise[23] = {0};

};

std::shared_ptr<Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables> Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::mpInstance;

    boost::shared_ptr<RegularStimulus> Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__i_Stim__stim_duration_converted = 1.0; // millisecond
        const double var_chaste_interface__i_Stim__stim_period_converted = 1000.0; // millisecond
        const double var_chaste_interface__i_Stim__stim_start_converted = 100.0; // millisecond
        const double var_chaste_interface__i_Stim__real_stim_amplitude_converted = 94.956550116431615 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__i_Stim__real_stim_amplitude_converted),
                var_chaste_interface__i_Stim__stim_duration_converted,
                var_chaste_interface__i_Stim__stim_period_converted,
                var_chaste_interface__i_Stim__stim_start_converted
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractGeneralizedRushLarsenCardiacCell(
                55,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        
        this->mParameters[0] = 1250.0; // (var_JCaSRleak__SR_leak_max) [per_cm3_second]
        this->mParameters[1] = 1800.0; // (var_JCaSRrel__K_m_rel) [per_cm3_second]
        this->mParameters[2] = 1.0; // (var_JCaSRup__uptake_factor) [dimensionless]
        this->mParameters[3] = 1.0; // (var_ion_concentrations__conc_clamp) [dimensionless]
        this->mParameters[4] = 0.0047999999999999996; // (var_membrane_permeabilities__P_CaL) [litre_per_second_cm2]
        this->mParameters[5] = 30.0; // (var_membrane_permeabilities__g_Na) [milliS_per_cm2]
        this->mParameters[6] = 0; // (var_i_Na_s__perc_reduced_inact_for_IpNa) [dimensionless]
        this->mParameters[7] = 0; // (var_i_Na_s__shift_INa_inact) [millivolt]
        this->mParameters[8] = 0.75; // (var_membrane_permeabilities__g_K1) [milliS_per_cm2]
        this->mParameters[9] = 0.80000000000000004; // (var_membrane_permeabilities__q_Kr) [milliS_per_cm2]
        this->mParameters[10] = 0.19750000000000001; // (var_membrane_permeabilities__q_Ks) [milliS_per_cm2]
        this->mParameters[11] = 0.00025000000000000001; // (var_membrane_permeabilities__i_NaCa_max) [microA_per_cm2]
        this->mParameters[12] = 0; // (var_membrane_permeabilities__g_Kto) [milliS_per_cm2]
    }

    Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::~Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt()
    {
    }

    AbstractLookupTableCollection* Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::GetLookupTableCollection()
    {
        return Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance();
    }
    
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.207812
        double var_chaste_interface__ion_concentrations__Ca_i = rY[1];
        // Units: millimolar; Initial value: 8.8787034e-05
        double var_chaste_interface__i_Na_s_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.0034130493
        double var_chaste_interface__i_Na_s_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.82699973
        double var_chaste_interface__i_CaL_s__Co = rY[11];
        // Units: dimensionless; Initial value: -1.3496934e-17
        double var_chaste_interface__i_CaL_s__Ccao = rY[17];
        // Units: dimensionless; Initial value: 3.7986638e-22
        double var_chaste_interface__i_CaL_s_y_gate__y = rY[18];
        // Units: dimensionless; Initial value: 0.78134852
        double var_chaste_interface__i_CaL_t__TCo = rY[24];
        // Units: dimensionless; Initial value: -1.3449454e-17
        double var_chaste_interface__i_CaL_t__TCcao = rY[30];
        // Units: dimensionless; Initial value: 3.75926e-22
        double var_chaste_interface__i_CaL_t_y_gate__y = rY[31];
        // Units: dimensionless; Initial value: 0.7813477
        double var_chaste_interface__i_Kr_s_xr_gate__xr = rY[32];
        // Units: dimensionless; Initial value: 0.00020469344
        double var_chaste_interface__i_Ks_s_xs_gate__xs = rY[34];
        // Units: dimensionless; Initial value: 0.0061359896
        double var_chaste_interface__i_Kto_s_r2_gate__r2 = rY[36];
        // Units: dimensionless; Initial value: 0.9625701
        double var_chaste_interface__ion_concentrations__Ca_t = rY[48];
        // Units: millimolar; Initial value: 1.8476402
        double var_chaste_interface__ion_concentrations__K_i = rY[49];
        // Units: millimolar; Initial value: 136.78926
        double var_chaste_interface__ion_concentrations__Na_i = rY[50];
        // Units: millimolar; Initial value: 11.120279
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        
        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

        const double var_i_nsK_s__i_nsK_s = ((fabs(var_chaste_interface__Vm_s__Vm_s) < 2.6695336787564767e-6) ? (187298.62971157953 * (2.6695336787564767e-6 + var_chaste_interface__Vm_s__Vm_s) * (8.554716652752149e-14 * (-4.0500000000000007 + 0.75 * var_chaste_interface__ion_concentrations__K_i * exp(9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(9.9999999999999995e-8))) + 8.554716652752149e-14 * (-4.0500000000000007 + 0.75 * var_chaste_interface__ion_concentrations__K_i * exp(-9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(-9.9999999999999995e-8)))) - 8.554716652752149e-14 * (-4.0500000000000007 + 0.75 * var_chaste_interface__ion_concentrations__K_i * exp(-9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(-9.9999999999999995e-8)))) : (3.2045734132626158e-8 * (-4.0500000000000007 + 0.75 * var_chaste_interface__ion_concentrations__K_i * _lt_0_row[0]) * var_chaste_interface__Vm_s__Vm_s / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (_lt_0_row[1])))); // microA
        const double var_i_nsNa_s__i_nsNa_s = ((fabs(var_chaste_interface__Vm_s__Vm_s) < 2.6695336787564767e-6) ? (187298.62971157953 * (2.6695336787564767e-6 + var_chaste_interface__Vm_s__Vm_s) * (8.554716652752149e-14 * (-105.0 + 0.75 * var_chaste_interface__ion_concentrations__Na_i * exp(9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(9.9999999999999995e-8))) + 8.554716652752149e-14 * (-105.0 + 0.75 * var_chaste_interface__ion_concentrations__Na_i * exp(-9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(-9.9999999999999995e-8)))) - 8.554716652752149e-14 * (-105.0 + 0.75 * var_chaste_interface__ion_concentrations__Na_i * exp(-9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(-9.9999999999999995e-8)))) : (3.2045734132626158e-8 * (-105.0 + 0.75 * var_chaste_interface__ion_concentrations__Na_i * _lt_0_row[0]) * var_chaste_interface__Vm_s__Vm_s / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (_lt_0_row[1])))); // microA
        const double var_i_CaL_s__i_CaL_s = ((fabs(var_chaste_interface__Vm_s__Vm_s) < 1.3347668393782383e-6) ? (374597.25942315906 * (1.3347668393782383e-6 + var_chaste_interface__Vm_s__Vm_s) * (7.425432175987399e-7 * (-0.61380000000000001 + 0.001 * exp(9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 7.425432175987399e-7 * (-0.61380000000000001 + 0.001 * exp(-9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 7.425432175987399e-7 * (-0.61380000000000001 + 0.001 * exp(-9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.55630930863148487 * (_lt_0_row[3]) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__Vm_s__Vm_s * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (_lt_0_row[2]))); // microA
        const double var_i_CaL_s__i_KL_s = ((fabs(var_chaste_interface__Vm_s__Vm_s) < 2.6695336787564767e-6) ? (187298.62971157953 * (2.6695336787564767e-6 + var_chaste_interface__Vm_s__Vm_s) * (1.7821037222369756e-12 * (-5.4000000000000004 + var_chaste_interface__ion_concentrations__K_i * exp(9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y / ((-1.0 + exp(9.9999999999999995e-8)) * (1.0 - 20430.198966619231 * var_i_CaL_s__i_CaL_s - 20205.350866353103 * (0.001 * exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t) - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y * mParameters[4] / (-1.0 + exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t)))) + 1.7821037222369756e-12 * (-5.4000000000000004 + var_chaste_interface__ion_concentrations__K_i * exp(-9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y / ((-1.0 + exp(-9.9999999999999995e-8)) * (1.0 - 20430.198966619231 * var_i_CaL_s__i_CaL_s - 20205.350866353103 * (0.001 * exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t) - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y * mParameters[4] / (-1.0 + exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t))))) - 1.7821037222369756e-12 * (-5.4000000000000004 + var_chaste_interface__ion_concentrations__K_i * exp(-9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y / ((-1.0 + exp(-9.9999999999999995e-8)) * (1.0 - 20430.198966619231 * var_i_CaL_s__i_CaL_s - 20205.350866353103 * (0.001 * exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t) - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y * mParameters[4] / (-1.0 + exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t))))) : (6.6757117035778174e-7 * (-5.4000000000000004 + var_chaste_interface__ion_concentrations__K_i * _lt_0_row[0]) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__Vm_s__Vm_s * var_chaste_interface__i_CaL_s_y_gate__y / ((_lt_0_row[1]) * (1.0 - 20430.198966619231 * var_i_CaL_s__i_CaL_s - 20205.350866353103 * (0.001 * exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t) - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y * mParameters[4] / (-1.0 + exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t)))))); // microA
        const double var_i_Kr_s__E_Kr_s = 26.695336787564766 * log(5.4000000000000004 / var_chaste_interface__ion_concentrations__K_i); // millivolt
        const double var_i_K1_s__E_K1_s = var_i_Kr_s__E_Kr_s; // millivolt
        const double var_i_CaL_s__i_CaL_s_converted = 19744.697669435584 * HeartConfig::Instance()->GetCapacitance() * var_i_CaL_s__i_CaL_s; // uA_per_cm2
        const double var_i_circ__i_circ = 0.028426299315597002 * var_chaste_interface__Vm_t__Vm_t - 0.028426299315597002 * var_chaste_interface__Vm_s__Vm_s; // microA
        const double var_i_Cab_s__i_Cab_s = 1.0637989620002672e-7 * var_chaste_interface__Vm_s__Vm_s - 1.4199235782429474e-6 * log(1.8 / var_chaste_interface__ion_concentrations__Ca_i); // microA
        const double var_i_K1_s__i_K1_s_converted = 430.46969386115654 * (-var_i_K1_s__E_K1_s + var_chaste_interface__Vm_s__Vm_s) * HeartConfig::Instance()->GetCapacitance() * mParameters[8] / ((1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__Vm_s__Vm_s - 0.23849999999999999 * var_i_K1_s__E_K1_s)) * (1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__Vm_s__Vm_s - 0.23849999999999999 * var_i_K1_s__E_K1_s)) + 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__Vm_s__Vm_s - 0.080320000000000003 * var_i_K1_s__E_K1_s) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__Vm_s__Vm_s - 0.061749999999999999 * var_i_K1_s__E_K1_s)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_i_K1_s__E_K1_s - 0.51429999999999998 * var_chaste_interface__Vm_s__Vm_s)))); // uA_per_cm2
        const double var_i_KATP_s__i_KATP_s = 1.529643429454676e-8 * var_chaste_interface__Vm_s__Vm_s - 1.529643429454676e-8 * var_i_Kr_s__E_Kr_s; // microA
        const double var_i_KNa_s__i_KNa_s = 5.5321598591488189e-6 * (_lt_0_row[4]) * (-var_i_Kr_s__E_Kr_s + var_chaste_interface__Vm_s__Vm_s) / (1.0 + 124372.1149330912 * pow((1 / var_chaste_interface__ion_concentrations__Na_i), 2.7999999999999998)); // microA
        const double var_i_Kp_s__i_Kp_s = 3.0394256057150496e-7 * (-var_i_Kr_s__E_Kr_s + var_chaste_interface__Vm_s__Vm_s) / (_lt_0_row[5]); // microA
        const double var_i_Kto_s__i_Kto_s_converted = 1.0002089945597463 * (-var_i_Kr_s__E_Kr_s + var_chaste_interface__Vm_s__Vm_s) * HeartConfig::Instance()->GetCapacitance() * var_chaste_interface__i_Kto_s_r2_gate__r2 * mParameters[12] / ((_lt_0_row[6]) * (_lt_0_row[7])); // uA_per_cm2
        const double var_i_Na_s__i_Na_s_converted = 0.75965240093145292 * pow(var_chaste_interface__i_Na_s_m_gate__m, 3) * (-26.695336787564766 * log(140.648 / (var_chaste_interface__ion_concentrations__Na_i + 0.12 * var_chaste_interface__ion_concentrations__K_i)) + var_chaste_interface__Vm_s__Vm_s) * HeartConfig::Instance()->GetCapacitance() * var_chaste_interface__i_Na_s_h_gate__h * mParameters[5]; // uA_per_cm2
        const double var_i_Nab_s__i_Nab_s = 3.7992820071438121e-8 * var_chaste_interface__Vm_s__Vm_s - 1.0142311273163911e-6 * log(140.0 / var_chaste_interface__ion_concentrations__Na_i); // microA
        const double var_i_Naps_s__i_Naps_s = 2.6848259517149603e-7 * (-26.695336787564766 * log(140.648 / (var_chaste_interface__ion_concentrations__Na_i + 0.12 * var_chaste_interface__ion_concentrations__K_i)) + var_chaste_interface__Vm_s__Vm_s) / (_lt_0_row[8]); // microA
        const double var_i_NaCa_s__i_NaCa_s_converted = 1.0002089945597463 * (-2744000.0 * var_chaste_interface__ion_concentrations__Ca_i + 1.8 * pow(var_chaste_interface__ion_concentrations__Na_i, 3) * _lt_0_row[0]) * HeartConfig::Instance()->GetCapacitance() * mParameters[11] * _lt_0_row[9] / (1.0 + 0.0001 * (2744000.0 * var_chaste_interface__ion_concentrations__Ca_i + 1.8 * pow(var_chaste_interface__ion_concentrations__Na_i, 3) * _lt_0_row[0]) * _lt_0_row[9]); // uA_per_cm2
        const double var_i_NaK_s__i_NaK_s = 5.9467022720511838e-5 / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__ion_concentrations__Na_i), 1.5)) * (_lt_0_row[10])); // microA
        const double var_i_pCa_s__i_pCa_s = 9.8321784713707638e-5 * var_chaste_interface__ion_concentrations__Ca_i / (0.00050000000000000001 + var_chaste_interface__ion_concentrations__Ca_i); // microA
        const double var_i_Kr_s__i_Kr_s_converted = 0.026145463117791767 * (-var_i_Kr_s__E_Kr_s + var_chaste_interface__Vm_s__Vm_s) * HeartConfig::Instance()->GetCapacitance() * var_chaste_interface__i_Kr_s_xr_gate__xr * mParameters[9] / (_lt_0_row[11]); // uA_per_cm2
        const double var_i_Ks_s__i_Ks_s_converted = 1.0002089945597463 * pow(var_chaste_interface__i_Ks_s_xs_gate__xs, 2) * (0.23080000000000001 + 0.76919999999999999 / (1.0 + exp(-7.0000000000000009 - 1.6666666666666667 * log10(var_chaste_interface__ion_concentrations__Ca_i)))) * (-26.695336787564766 * log(7.9662000000000006 / (0.018329999999999999 * var_chaste_interface__ion_concentrations__Na_i + var_chaste_interface__ion_concentrations__K_i)) + var_chaste_interface__Vm_s__Vm_s) * HeartConfig::Instance()->GetCapacitance() * mParameters[10]; // uA_per_cm2
        const double var_chaste_interface__i_ionic = var_i_CaL_s__i_CaL_s_converted + var_i_K1_s__i_K1_s_converted + var_i_Kr_s__i_Kr_s_converted + var_i_Ks_s__i_Ks_s_converted + var_i_Kto_s__i_Kto_s_converted + var_i_NaCa_s__i_NaCa_s_converted + var_i_Na_s__i_Na_s_converted + 19744.697669435584 * HeartConfig::Instance()->GetCapacitance() * var_i_CaL_s__i_KL_s + 19744.697669435584 * HeartConfig::Instance()->GetCapacitance() * var_i_Cab_s__i_Cab_s + 19744.697669435584 * HeartConfig::Instance()->GetCapacitance() * var_i_KATP_s__i_KATP_s + 19744.697669435584 * HeartConfig::Instance()->GetCapacitance() * var_i_KNa_s__i_KNa_s + 19744.697669435584 * HeartConfig::Instance()->GetCapacitance() * var_i_Kp_s__i_Kp_s + 19744.697669435584 * HeartConfig::Instance()->GetCapacitance() * var_i_NaK_s__i_NaK_s + 19744.697669435584 * HeartConfig::Instance()->GetCapacitance() * var_i_Nab_s__i_Nab_s + 19744.697669435584 * HeartConfig::Instance()->GetCapacitance() * var_i_Naps_s__i_Naps_s + 19744.697669435584 * HeartConfig::Instance()->GetCapacitance() * var_i_circ__i_circ + 19744.697669435584 * HeartConfig::Instance()->GetCapacitance() * var_i_nsK_s__i_nsK_s + 19744.697669435584 * HeartConfig::Instance()->GetCapacitance() * var_i_nsNa_s__i_nsNa_s + 19744.697669435584 * HeartConfig::Instance()->GetCapacitance() * var_i_pCa_s__i_pCa_s; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::UpdateTransmembranePotential(double var_chaste_interface__environment__time_converted)
    {
        std::vector<double>& rY = rGetStateVariables();
        unsigned v_index = GetVoltageIndex();
        const double delta = 1e-8;

        double d_dt_chaste_interface_var_Vm_s__Vm_s;
        double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.207812
        double var_chaste_interface__ion_concentrations__Ca_i = rY[1];
        // Units: millimolar; Initial value: 8.8787034e-05
        double var_chaste_interface__i_Na_s_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.0034130493
        double var_chaste_interface__i_Na_s_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.82699973
        double var_chaste_interface__i_CaL_s__Co = rY[11];
        // Units: dimensionless; Initial value: -1.3496934e-17
        double var_chaste_interface__i_CaL_s__Ccao = rY[17];
        // Units: dimensionless; Initial value: 3.7986638e-22
        double var_chaste_interface__i_CaL_s_y_gate__y = rY[18];
        // Units: dimensionless; Initial value: 0.78134852
        double var_chaste_interface__i_CaL_t__TCo = rY[24];
        // Units: dimensionless; Initial value: -1.3449454e-17
        double var_chaste_interface__i_CaL_t__TCcao = rY[30];
        // Units: dimensionless; Initial value: 3.75926e-22
        double var_chaste_interface__i_CaL_t_y_gate__y = rY[31];
        // Units: dimensionless; Initial value: 0.7813477
        double var_chaste_interface__i_Kr_s_xr_gate__xr = rY[32];
        // Units: dimensionless; Initial value: 0.00020469344
        double var_chaste_interface__i_Ks_s_xs_gate__xs = rY[34];
        // Units: dimensionless; Initial value: 0.0061359896
        double var_chaste_interface__i_Kto_s_r2_gate__r2 = rY[36];
        // Units: dimensionless; Initial value: 0.9625701
        double var_chaste_interface__ion_concentrations__Ca_t = rY[48];
        // Units: millimolar; Initial value: 1.8476402
        double var_chaste_interface__ion_concentrations__K_i = rY[49];
        // Units: millimolar; Initial value: 136.78926
        double var_chaste_interface__ion_concentrations__Na_i = rY[50];
        // Units: millimolar; Initial value: 11.120279
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

        // Mathematics
        const double var_i_nsK_s__i_nsK_s = ((fabs(var_chaste_interface__Vm_s__Vm_s) < 2.6695336787564767e-6) ? (187298.62971157953 * (2.6695336787564767e-6 + var_chaste_interface__Vm_s__Vm_s) * (8.554716652752149e-14 * (-4.0500000000000007 + 0.75 * var_chaste_interface__ion_concentrations__K_i * exp(9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(9.9999999999999995e-8))) + 8.554716652752149e-14 * (-4.0500000000000007 + 0.75 * var_chaste_interface__ion_concentrations__K_i * exp(-9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(-9.9999999999999995e-8)))) - 8.554716652752149e-14 * (-4.0500000000000007 + 0.75 * var_chaste_interface__ion_concentrations__K_i * exp(-9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(-9.9999999999999995e-8)))) : (3.2045734132626158e-8 * (-4.0500000000000007 + 0.75 * var_chaste_interface__ion_concentrations__K_i * _lt_0_row[0]) * var_chaste_interface__Vm_s__Vm_s / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (_lt_0_row[1])))); // microA
        const double var_i_nsNa_s__i_nsNa_s = ((fabs(var_chaste_interface__Vm_s__Vm_s) < 2.6695336787564767e-6) ? (187298.62971157953 * (2.6695336787564767e-6 + var_chaste_interface__Vm_s__Vm_s) * (8.554716652752149e-14 * (-105.0 + 0.75 * var_chaste_interface__ion_concentrations__Na_i * exp(9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(9.9999999999999995e-8))) + 8.554716652752149e-14 * (-105.0 + 0.75 * var_chaste_interface__ion_concentrations__Na_i * exp(-9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(-9.9999999999999995e-8)))) - 8.554716652752149e-14 * (-105.0 + 0.75 * var_chaste_interface__ion_concentrations__Na_i * exp(-9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(-9.9999999999999995e-8)))) : (3.2045734132626158e-8 * (-105.0 + 0.75 * var_chaste_interface__ion_concentrations__Na_i * _lt_0_row[0]) * var_chaste_interface__Vm_s__Vm_s / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (_lt_0_row[1])))); // microA
        const double var_i_CaL_s__i_CaL_s = ((fabs(var_chaste_interface__Vm_s__Vm_s) < 1.3347668393782383e-6) ? (374597.25942315906 * (1.3347668393782383e-6 + var_chaste_interface__Vm_s__Vm_s) * (7.425432175987399e-7 * (-0.61380000000000001 + 0.001 * exp(9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 7.425432175987399e-7 * (-0.61380000000000001 + 0.001 * exp(-9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 7.425432175987399e-7 * (-0.61380000000000001 + 0.001 * exp(-9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.55630930863148487 * (_lt_0_row[3]) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__Vm_s__Vm_s * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (_lt_0_row[2]))); // microA
        const double var_i_CaL_s__i_KL_s = ((fabs(var_chaste_interface__Vm_s__Vm_s) < 2.6695336787564767e-6) ? (187298.62971157953 * (2.6695336787564767e-6 + var_chaste_interface__Vm_s__Vm_s) * (1.7821037222369756e-12 * (-5.4000000000000004 + var_chaste_interface__ion_concentrations__K_i * exp(9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y / ((-1.0 + exp(9.9999999999999995e-8)) * (1.0 - 20430.198966619231 * var_i_CaL_s__i_CaL_s - 20205.350866353103 * (0.001 * exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t) - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y * mParameters[4] / (-1.0 + exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t)))) + 1.7821037222369756e-12 * (-5.4000000000000004 + var_chaste_interface__ion_concentrations__K_i * exp(-9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y / ((-1.0 + exp(-9.9999999999999995e-8)) * (1.0 - 20430.198966619231 * var_i_CaL_s__i_CaL_s - 20205.350866353103 * (0.001 * exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t) - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y * mParameters[4] / (-1.0 + exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t))))) - 1.7821037222369756e-12 * (-5.4000000000000004 + var_chaste_interface__ion_concentrations__K_i * exp(-9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y / ((-1.0 + exp(-9.9999999999999995e-8)) * (1.0 - 20430.198966619231 * var_i_CaL_s__i_CaL_s - 20205.350866353103 * (0.001 * exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t) - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y * mParameters[4] / (-1.0 + exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t))))) : (6.6757117035778174e-7 * (-5.4000000000000004 + var_chaste_interface__ion_concentrations__K_i * _lt_0_row[0]) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__Vm_s__Vm_s * var_chaste_interface__i_CaL_s_y_gate__y / ((_lt_0_row[1]) * (1.0 - 20430.198966619231 * var_i_CaL_s__i_CaL_s - 20205.350866353103 * (0.001 * exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t) - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y * mParameters[4] / (-1.0 + exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t)))))); // microA
        const double var_i_Kr_s__E_Kr_s = 26.695336787564766 * log(5.4000000000000004 / var_chaste_interface__ion_concentrations__K_i); // millivolt
        const double var_i_K1_s__E_K1_s = var_i_Kr_s__E_Kr_s; // millivolt
        const double var_i_circ__i_circ = 0.028426299315597002 * var_chaste_interface__Vm_t__Vm_t - 0.028426299315597002 * var_chaste_interface__Vm_s__Vm_s; // microA
        const double var_i_Cab_s__i_Cab_s = 1.0637989620002672e-7 * var_chaste_interface__Vm_s__Vm_s - 1.4199235782429474e-6 * log(1.8 / var_chaste_interface__ion_concentrations__Ca_i); // microA
        const double var_i_K1_s__i_K1_s = 0.02180178704521343 * (-var_i_K1_s__E_K1_s + var_chaste_interface__Vm_s__Vm_s) * mParameters[8] / ((1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__Vm_s__Vm_s - 0.23849999999999999 * var_i_K1_s__E_K1_s)) * (1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__Vm_s__Vm_s - 0.23849999999999999 * var_i_K1_s__E_K1_s)) + 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__Vm_s__Vm_s - 0.080320000000000003 * var_i_K1_s__E_K1_s) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__Vm_s__Vm_s - 0.061749999999999999 * var_i_K1_s__E_K1_s)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_i_K1_s__E_K1_s - 0.51429999999999998 * var_chaste_interface__Vm_s__Vm_s)))); // microA
        const double var_i_KATP_s__i_KATP_s = 1.529643429454676e-8 * var_chaste_interface__Vm_s__Vm_s - 1.529643429454676e-8 * var_i_Kr_s__E_Kr_s; // microA
        const double var_i_KNa_s__i_KNa_s = 5.5321598591488189e-6 * (_lt_0_row[4]) * (-var_i_Kr_s__E_Kr_s + var_chaste_interface__Vm_s__Vm_s) / (1.0 + 124372.1149330912 * pow((1 / var_chaste_interface__ion_concentrations__Na_i), 2.7999999999999998)); // microA
        const double var_i_Kp_s__i_Kp_s = 3.0394256057150496e-7 * (-var_i_Kr_s__E_Kr_s + var_chaste_interface__Vm_s__Vm_s) / (_lt_0_row[5]); // microA
        const double var_i_Kto_s__i_Kto_s = 5.0657093428584157e-5 * (-var_i_Kr_s__E_Kr_s + var_chaste_interface__Vm_s__Vm_s) * var_chaste_interface__i_Kto_s_r2_gate__r2 * mParameters[12] / ((_lt_0_row[6]) * (_lt_0_row[7])); // microA
        const double var_i_Na_s__i_Na_s = 3.8473741844494297e-5 * pow(var_chaste_interface__i_Na_s_m_gate__m, 3) * (-26.695336787564766 * log(140.648 / (var_chaste_interface__ion_concentrations__Na_i + 0.12 * var_chaste_interface__ion_concentrations__K_i)) + var_chaste_interface__Vm_s__Vm_s) * var_chaste_interface__i_Na_s_h_gate__h * mParameters[5]; // microA
        const double var_i_Nab_s__i_Nab_s = 3.7992820071438121e-8 * var_chaste_interface__Vm_s__Vm_s - 1.0142311273163911e-6 * log(140.0 / var_chaste_interface__ion_concentrations__Na_i); // microA
        const double var_i_Naps_s__i_Naps_s = 2.6848259517149603e-7 * (-26.695336787564766 * log(140.648 / (var_chaste_interface__ion_concentrations__Na_i + 0.12 * var_chaste_interface__ion_concentrations__K_i)) + var_chaste_interface__Vm_s__Vm_s) / (_lt_0_row[8]); // microA
        const double var_i_NaCa_s__i_NaCa_s = 5.0657093428584157e-5 * (-2744000.0 * var_chaste_interface__ion_concentrations__Ca_i + 1.8 * pow(var_chaste_interface__ion_concentrations__Na_i, 3) * _lt_0_row[0]) * mParameters[11] * _lt_0_row[9] / (1.0 + 0.0001 * (2744000.0 * var_chaste_interface__ion_concentrations__Ca_i + 1.8 * pow(var_chaste_interface__ion_concentrations__Na_i, 3) * _lt_0_row[0]) * _lt_0_row[9]); // microA
        const double var_i_NaK_s__i_NaK_s = 5.9467022720511838e-5 / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__ion_concentrations__Na_i), 1.5)) * (_lt_0_row[10])); // microA
        const double var_i_pCa_s__i_pCa_s = 9.8321784713707638e-5 * var_chaste_interface__ion_concentrations__Ca_i / (0.00050000000000000001 + var_chaste_interface__ion_concentrations__Ca_i); // microA
        const double var_i_Kr_s__i_Kr_s = 1.3241764222231898e-6 * (-var_i_Kr_s__E_Kr_s + var_chaste_interface__Vm_s__Vm_s) * var_chaste_interface__i_Kr_s_xr_gate__xr * mParameters[9] / (_lt_0_row[11]); // microA
        const double var_i_Ks_s__i_Ks_s = 5.0657093428584157e-5 * pow(var_chaste_interface__i_Ks_s_xs_gate__xs, 2) * (0.23080000000000001 + 0.76919999999999999 / (1.0 + exp(-7.0000000000000009 - 1.6666666666666667 * log10(var_chaste_interface__ion_concentrations__Ca_i)))) * (-26.695336787564766 * log(7.9662000000000006 / (0.018329999999999999 * var_chaste_interface__ion_concentrations__Na_i + var_chaste_interface__ion_concentrations__K_i)) + var_chaste_interface__Vm_s__Vm_s) * mParameters[10]; // microA
        d_dt_chaste_interface_var_Vm_s__Vm_s = 19744.697669435584 * var_i_circ__i_circ - 19744.697669435584 * var_i_CaL_s__i_CaL_s - 19744.697669435584 * var_i_CaL_s__i_KL_s - 19744.697669435584 * var_i_Cab_s__i_Cab_s - 19744.697669435584 * var_i_K1_s__i_K1_s - 19744.697669435584 * var_i_KATP_s__i_KATP_s - 19744.697669435584 * var_i_KNa_s__i_KNa_s - 19744.697669435584 * var_i_Kp_s__i_Kp_s - 19744.697669435584 * var_i_Kr_s__i_Kr_s - 19744.697669435584 * var_i_Ks_s__i_Ks_s - 19744.697669435584 * var_i_Kto_s__i_Kto_s - 19744.697669435584 * var_i_NaCa_s__i_NaCa_s - 19744.697669435584 * var_i_NaK_s__i_NaK_s - 19744.697669435584 * var_i_Na_s__i_Na_s - 19744.697669435584 * var_i_Nab_s__i_Nab_s - 19744.697669435584 * var_i_Naps_s__i_Naps_s - 19744.697669435584 * var_i_nsK_s__i_nsK_s - 19744.697669435584 * var_i_nsNa_s__i_nsNa_s - 19744.697669435584 * var_i_pCa_s__i_pCa_s - GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted) / HeartConfig::Instance()->GetCapacitance(); // millivolt / millisecond

        double evalF = d_dt_chaste_interface_var_Vm_s__Vm_s;
        mEvalF[0] = d_dt_chaste_interface_var_Vm_s__Vm_s;
        double partialF = EvaluatePartialDerivative0(var_chaste_interface__environment__time_converted, rY, delta, true);
        if (fabs(partialF) < delta)
        {
            rY[v_index] += evalF*mDt;
        }
        else
        {
            rY[v_index] += (evalF/partialF)*(exp(partialF*mDt)-1.0);
        }
    }

    void Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::ComputeOneStepExceptVoltage(double var_chaste_interface__environment__time_converted)
    {
        std::vector<double>& rY = rGetStateVariables();
        const double delta = 1e-8;

        double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.207812
        double var_chaste_interface__ion_concentrations__Ca_i = rY[1];
        // Units: millimolar; Initial value: 8.8787034e-05
        double var_chaste_interface__i_Na_s_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.0034130493
        double var_chaste_interface__i_Na_s_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.82699973
        double var_chaste_interface__i_Na_t_m_gate__m = rY[4];
        // Units: dimensionless; Initial value: 0.0034129472
        double var_chaste_interface__i_Na_t_h_gate__h = rY[5];
        // Units: dimensionless; Initial value: 0.82700551
        double var_chaste_interface__i_CaL_s__Cst = rY[6];
        // Units: dimensionless; Initial value: 0.99797984
        double var_chaste_interface__i_CaL_s__C1 = rY[7];
        // Units: dimensionless; Initial value: 7.5722514e-05
        double var_chaste_interface__i_CaL_s__C2 = rY[8];
        // Units: dimensionless; Initial value: 2.1545646e-09
        double var_chaste_interface__i_CaL_s__C3 = rY[9];
        // Units: dimensionless; Initial value: 2.7463178e-14
        double var_chaste_interface__i_CaL_s__C4 = rY[10];
        // Units: dimensionless; Initial value: -5.7569102e-17
        double var_chaste_interface__i_CaL_s__Co = rY[11];
        // Units: dimensionless; Initial value: -1.3496934e-17
        double var_chaste_interface__i_CaL_s__Ccast = rY[12];
        // Units: dimensionless; Initial value: 0.0019155065
        double var_chaste_interface__i_CaL_s__Cca1 = rY[13];
        // Units: dimensionless; Initial value: 5.8135383e-07
        double var_chaste_interface__i_CaL_s__Cca2 = rY[14];
        // Units: dimensionless; Initial value: 6.615513e-11
        double var_chaste_interface__i_CaL_s__Cca3 = rY[15];
        // Units: dimensionless; Initial value: 3.3426555e-15
        double var_chaste_interface__i_CaL_s__Cca4 = rY[16];
        // Units: dimensionless; Initial value: 4.6640361e-19
        double var_chaste_interface__i_CaL_s__Ccao = rY[17];
        // Units: dimensionless; Initial value: 3.7986638e-22
        double var_chaste_interface__i_CaL_s_y_gate__y = rY[18];
        // Units: dimensionless; Initial value: 0.78134852
        double var_chaste_interface__i_CaL_t__TCst = rY[19];
        // Units: dimensionless; Initial value: 0.99798934
        double var_chaste_interface__i_CaL_t__TC1 = rY[20];
        // Units: dimensionless; Initial value: 7.5720257e-05
        double var_chaste_interface__i_CaL_t__TC2 = rY[21];
        // Units: dimensionless; Initial value: 2.1544156e-09
        double var_chaste_interface__i_CaL_t__TC3 = rY[22];
        // Units: dimensionless; Initial value: 2.7459475e-14
        double var_chaste_interface__i_CaL_t__TC4 = rY[23];
        // Units: dimensionless; Initial value: -5.7367189e-17
        double var_chaste_interface__i_CaL_t__TCo = rY[24];
        // Units: dimensionless; Initial value: -1.3449454e-17
        double var_chaste_interface__i_CaL_t__TCcast = rY[25];
        // Units: dimensionless; Initial value: 0.0019155245
        double var_chaste_interface__i_CaL_t__TCca1 = rY[26];
        // Units: dimensionless; Initial value: 5.8133643e-07
        double var_chaste_interface__i_CaL_t__TCca2 = rY[27];
        // Units: dimensionless; Initial value: 6.6150547e-11
        double var_chaste_interface__i_CaL_t__TCca3 = rY[28];
        // Units: dimensionless; Initial value: 3.3423167e-15
        double var_chaste_interface__i_CaL_t__TCca4 = rY[29];
        // Units: dimensionless; Initial value: 4.6165955e-19
        double var_chaste_interface__i_CaL_t__TCcao = rY[30];
        // Units: dimensionless; Initial value: 3.75926e-22
        double var_chaste_interface__i_CaL_t_y_gate__y = rY[31];
        // Units: dimensionless; Initial value: 0.7813477
        double var_chaste_interface__i_Kr_s_xr_gate__xr = rY[32];
        // Units: dimensionless; Initial value: 0.00020469344
        double var_chaste_interface__i_Kr_t_xr_gate__xr = rY[33];
        // Units: dimensionless; Initial value: 0.00020469344
        double var_chaste_interface__i_Ks_s_xs_gate__xs = rY[34];
        // Units: dimensionless; Initial value: 0.0061359896
        double var_chaste_interface__i_Ks_t_xs_gate__xs = rY[35];
        // Units: dimensionless; Initial value: 0.0061359896
        double var_chaste_interface__i_Kto_s_r2_gate__r2 = rY[36];
        // Units: dimensionless; Initial value: 0.9625701
        double var_chaste_interface__i_Kto_s_r3_gate__r3 = rY[37];
        // Units: dimensionless; Initial value: 0.96250049
        double var_chaste_interface__i_Kto_t_r2_gate__r2 = rY[38];
        // Units: dimensionless; Initial value: 0.9625701
        double var_chaste_interface__i_Kto_t_r3_gate__r3 = rY[39];
        // Units: dimensionless; Initial value: 0.96250049
        double var_chaste_interface__JCaSRrel__F1 = rY[40];
        // Units: dimensionless; Initial value: 0.8053082
        double var_chaste_interface__JCaSRrel__F2 = rY[41];
        // Units: dimensionless; Initial value: 0.00026639195
        double var_chaste_interface__JCaSRrel__F3 = rY[42];
        // Units: dimensionless; Initial value: 4.9455459e-10
        double var_chaste_interface__JCaSRrel__F4 = rY[43];
        // Units: dimensionless; Initial value: 0.19442578
        double var_chaste_interface__CaSRrel__CaSRrel = rY[44];
        // Units: millimolar; Initial value: 1.0326252
        double var_chaste_interface__CaSRup__CaSRup = rY[45];
        // Units: millimolar; Initial value: 1.0200296
        double var_chaste_interface__ion_concentrations__K_t = rY[46];
        // Units: millimolar; Initial value: 5.4140321
        double var_chaste_interface__ion_concentrations__Na_t = rY[47];
        // Units: millimolar; Initial value: 139.93239
        double var_chaste_interface__ion_concentrations__Ca_t = rY[48];
        // Units: millimolar; Initial value: 1.8476402
        double var_chaste_interface__ion_concentrations__K_i = rY[49];
        // Units: millimolar; Initial value: 136.78926
        double var_chaste_interface__ion_concentrations__Na_i = rY[50];
        // Units: millimolar; Initial value: 11.120279
        double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
        // Units: millimolar; Initial value: 9.5977033e-05
        double var_chaste_interface__ion_concentrations__BTRH = rY[52];
        // Units: millimolar; Initial value: 0.96700747
        double var_chaste_interface__ion_concentrations__BTRL = rY[53];
        // Units: millimolar; Initial value: 0.081740868
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

        // Mathematics
        const double d_dt_chaste_interface_var_JCaSRrel__F4 = 0.017999999999999999 * var_chaste_interface__JCaSRrel__F2 - 0.00080000000000000004 * var_chaste_interface__JCaSRrel__F4; // 1 / millisecond
        const double var_i_CaL_s__alfas = _lt_0_row[12]; // per_second
        const double var_i_CaL_s__alfa2s = 2.0 * var_i_CaL_s__alfas; // per_second
        const double var_i_CaL_s__betas = _lt_0_row[13]; // per_second
        const double var_i_CaL_s__beta2s = 0.5 * var_i_CaL_s__betas; // per_second
        const double d_dt_chaste_interface_var_i_CaL_s__Co = 0.29999999999999999 * var_chaste_interface__i_CaL_s__C4 - 2.0 * var_chaste_interface__i_CaL_s__Co; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaL_s__Ccao = 0.0050000000000000001 * var_chaste_interface__i_CaL_s__Cca4 - 7.0 * var_chaste_interface__i_CaL_s__Ccao; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaL_s_y_gate__y = 0.001 * (-var_chaste_interface__i_CaL_s_y_gate__y + _lt_0_row[14]) / (_lt_0_row[15]); // 1 / millisecond
        const double var_i_CaL_t__alfat = 400.0 * exp(1.2 + 0.10000000000000001 * var_chaste_interface__Vm_t__Vm_t); // per_second
        const double var_i_CaL_t__alfa2t = 2.0 * var_i_CaL_t__alfat; // per_second
        const double var_i_CaL_t__betat = 50.0 * exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__Vm_t__Vm_t); // per_second
        const double var_i_CaL_t__beta2t = 0.5 * var_i_CaL_t__betat; // per_second
        const double d_dt_chaste_interface_var_i_CaL_t__TCo = 0.29999999999999999 * var_chaste_interface__i_CaL_t__TC4 - 2.0 * var_chaste_interface__i_CaL_t__TCo; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaL_t__TCcao = 0.0050000000000000001 * var_chaste_interface__i_CaL_t__TCca4 - 7.0 * var_chaste_interface__i_CaL_t__TCcao; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaL_t_y_gate__y = 0.001 * (-var_chaste_interface__i_CaL_t_y_gate__y + 1 / (1.0 + exp(5.833333333333333 + 0.16666666666666666 * var_chaste_interface__Vm_t__Vm_t))) / (0.001 / (0.02 + 0.019699999999999999 * exp(-0.113569 * pow((1 + 0.10000000000000001 * var_chaste_interface__Vm_t__Vm_t), 2))) + 0.55000000000000004 / (1.0 + exp(16.842105263157894 + 0.42105263157894735 * var_chaste_interface__Vm_t__Vm_t))); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Kr_s_xr_gate__xr = 0.001 * (-var_chaste_interface__i_Kr_s_xr_gate__xr + _lt_0_row[16]) * _lt_0_row[17]; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Kr_t_xr_gate__xr = 0.001 * (-var_chaste_interface__i_Kr_t_xr_gate__xr + 1 / (1.0 + exp(-2.8666666666666667 - 0.13333333333333333 * var_chaste_interface__Vm_t__Vm_t))) * (0.60999999999999999 * (38.899999999999999 + var_chaste_interface__Vm_t__Vm_t) / (-1.0 + exp(5.6404999999999994 + 0.14499999999999999 * var_chaste_interface__Vm_t__Vm_t)) + 1.3799999999999999 * (14.199999999999999 + var_chaste_interface__Vm_t__Vm_t) / (1.0 - exp(-1.7465999999999999 - 0.123 * var_chaste_interface__Vm_t__Vm_t))); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Ks_s_xs_gate__xs = 0.001 * (-var_chaste_interface__i_Ks_s_xs_gate__xs + _lt_0_row[18]) * _lt_0_row[19]; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Ks_t_xs_gate__xs = 0.001 * (-var_chaste_interface__i_Ks_t_xs_gate__xs + 1 / (1.0 + exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__Vm_t__Vm_t))) * (0.13100000000000001 * (30.0 + var_chaste_interface__Vm_t__Vm_t) / (-1.0 + exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__Vm_t__Vm_t)) + 0.071899999999999992 * (30.0 + var_chaste_interface__Vm_t__Vm_t) / (1.0 - exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__Vm_t__Vm_t))); // 1 / millisecond
        const double var_i_Kto_s_r2_gate__r2_infinity = _lt_0_row[20]; // dimensionless
        const double d_dt_chaste_interface_var_i_Kto_s_r2_gate__r2 = 0.049999999999999996 * var_i_Kto_s_r2_gate__r2_infinity - 0.049999999999999996 * var_chaste_interface__i_Kto_s_r2_gate__r2; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Kto_s_r3_gate__r3 = 0.012499999999999999 * var_i_Kto_s_r2_gate__r2_infinity - 0.012499999999999999 * var_chaste_interface__i_Kto_s_r3_gate__r3; // 1 / millisecond
        const double var_i_Kto_t_r2_gate__r2_infinity = 1.006 / (1.0 + exp(3.7562349155269508 + 0.080450522928399035 * var_chaste_interface__Vm_t__Vm_t)); // dimensionless
        const double d_dt_chaste_interface_var_i_Kto_t_r2_gate__r2 = 0.049999999999999996 * var_i_Kto_t_r2_gate__r2_infinity - 0.049999999999999996 * var_chaste_interface__i_Kto_t_r2_gate__r2; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Kto_t_r3_gate__r3 = 0.012499999999999999 * var_i_Kto_t_r2_gate__r2_infinity - 0.012499999999999999 * var_chaste_interface__i_Kto_t_r3_gate__r3; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Na_s_h_gate__h = 0.001 * (-var_chaste_interface__i_Na_s_h_gate__h + 0.01 * mParameters[6] + (1.0 - 0.01 * mParameters[6]) / (1.0 + exp(13.927272727272726 + 0.18181818181818182 * var_chaste_interface__Vm_s__Vm_s - 0.18181818181818182 * mParameters[7]))) / (0.00010351966873706004 + 0.00020703933747412008 / (1.1381e-6 * exp(0.1017 * mParameters[7] - 0.1017 * var_chaste_interface__Vm_s__Vm_s) + 6.5369999999999999 * exp(0.080159999999999995 * var_chaste_interface__Vm_s__Vm_s - 0.080159999999999995 * mParameters[7]))); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Na_s_m_gate__m = 0.001 * (-var_chaste_interface__i_Na_s_m_gate__m + _lt_0_row[21]) / (_lt_0_row[22]); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Na_t_h_gate__h = 0.001 * (-var_chaste_interface__i_Na_t_h_gate__h + 1 / (1.0 + exp(13.927272727272726 + 0.18181818181818182 * var_chaste_interface__Vm_t__Vm_t))) / (0.00010351966873706004 + 0.00020703933747412008 / (1.1381e-6 * exp(-0.1017 * var_chaste_interface__Vm_t__Vm_t) + 6.5369999999999999 * exp(0.080159999999999995 * var_chaste_interface__Vm_t__Vm_t))); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Na_t_m_gate__m = 0.001 * (-var_chaste_interface__i_Na_t_m_gate__m + 1 / (1.0 + exp(-5.8378378378378377 - 0.13513513513513511 * var_chaste_interface__Vm_t__Vm_t))) / (2.070393374741201e-5 + 0.00020703933747412008 / (0.022679999999999999 * exp(-0.0717 * var_chaste_interface__Vm_t__Vm_t) + 101.59999999999999 * exp(0.1135 * var_chaste_interface__Vm_t__Vm_t))); // 1 / millisecond
        const double d_dt_chaste_interface_var_JCaSRrel__F1 = 0.57599999999999996 * var_chaste_interface__JCaSRrel__F2 - 36450000000.0 * pow(var_chaste_interface__ion_concentrations__Ca_ss, 4) * var_chaste_interface__JCaSRrel__F1; // 1 / millisecond
        const double d_dt_chaste_interface_var_JCaSRrel__F2 = 0.00080000000000000004 * var_chaste_interface__JCaSRrel__F4 + 1.9299999999999999 * var_chaste_interface__JCaSRrel__F3 + 36450000000.0 * pow(var_chaste_interface__ion_concentrations__Ca_ss, 4) * var_chaste_interface__JCaSRrel__F1 - 0.001 * (594.0 + 4050000000.0 * pow(var_chaste_interface__ion_concentrations__Ca_ss, 3)) * var_chaste_interface__JCaSRrel__F2; // 1 / millisecond
        const double d_dt_chaste_interface_var_JCaSRrel__F3 = -1.9299999999999999 * var_chaste_interface__JCaSRrel__F3 + 4050000.0 * pow(var_chaste_interface__ion_concentrations__Ca_ss, 3) * var_chaste_interface__JCaSRrel__F2; // 1 / millisecond
        const double var_i_CaL_s__gama = 187.5 * var_chaste_interface__ion_concentrations__Ca_ss; // per_second
        const double d_dt_chaste_interface_var_i_CaL_s__C1 = 0.0050000000000000001 * var_chaste_interface__i_CaL_s__Cca1 + 0.002 * var_chaste_interface__i_CaL_s__C2 * var_i_CaL_s__betas + 0.0040000000000000001 * var_chaste_interface__i_CaL_s__Cst * var_i_CaL_s__alfas - 0.001 * (2.0 * var_i_CaL_s__gama + 3.0 * var_i_CaL_s__alfas + var_i_CaL_s__betas) * var_chaste_interface__i_CaL_s__C1; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaL_s__C2 = 0.0025000000000000001 * var_chaste_interface__i_CaL_s__Cca2 + 0.0030000000000000001 * var_chaste_interface__i_CaL_s__C1 * var_i_CaL_s__alfas + 0.0030000000000000001 * var_chaste_interface__i_CaL_s__C3 * var_i_CaL_s__betas - 0.001 * (2.0 * var_i_CaL_s__alfas + 2.0 * var_i_CaL_s__betas + 4.0 * var_i_CaL_s__gama) * var_chaste_interface__i_CaL_s__C2; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaL_s__C3 = 0.00125 * var_chaste_interface__i_CaL_s__Cca3 + 0.002 * var_chaste_interface__i_CaL_s__C2 * var_i_CaL_s__alfas + 0.0040000000000000001 * var_chaste_interface__i_CaL_s__C4 * var_i_CaL_s__betas - 0.001 * (8.0 * var_i_CaL_s__gama + 3.0 * var_i_CaL_s__betas + var_i_CaL_s__alfas) * var_chaste_interface__i_CaL_s__C3; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaL_s__C4 = 2.0 * var_chaste_interface__i_CaL_s__Co + 0.00062500000000000001 * var_chaste_interface__i_CaL_s__Cca4 + 0.001 * var_chaste_interface__i_CaL_s__C3 * var_i_CaL_s__alfas - 0.001 * (300.0 + 4.0 * var_i_CaL_s__betas + 16.0 * var_i_CaL_s__gama) * var_chaste_interface__i_CaL_s__C4; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaL_s__Cca1 = 0.002 * var_chaste_interface__i_CaL_s__C1 * var_i_CaL_s__gama + 0.002 * var_chaste_interface__i_CaL_s__Cca2 * var_i_CaL_s__beta2s + 0.0040000000000000001 * var_chaste_interface__i_CaL_s__Ccast * var_i_CaL_s__alfa2s - 0.001 * (5.0 + 3.0 * var_i_CaL_s__alfa2s + var_i_CaL_s__beta2s) * var_chaste_interface__i_CaL_s__Cca1; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaL_s__Cca2 = 0.0040000000000000001 * var_chaste_interface__i_CaL_s__C2 * var_i_CaL_s__gama + 0.0030000000000000001 * var_chaste_interface__i_CaL_s__Cca1 * var_i_CaL_s__alfa2s + 0.0030000000000000001 * var_chaste_interface__i_CaL_s__Cca3 * var_i_CaL_s__beta2s - 0.001 * (2.5 + 2.0 * var_i_CaL_s__alfa2s + 2.0 * var_i_CaL_s__beta2s) * var_chaste_interface__i_CaL_s__Cca2; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaL_s__Cca3 = 0.002 * var_chaste_interface__i_CaL_s__Cca2 * var_i_CaL_s__alfa2s + 0.0040000000000000001 * var_chaste_interface__i_CaL_s__Cca4 * var_i_CaL_s__beta2s + 0.0080000000000000002 * var_chaste_interface__i_CaL_s__C3 * var_i_CaL_s__gama - 0.001 * (1.25 + 3.0 * var_i_CaL_s__beta2s + var_i_CaL_s__alfa2s) * var_chaste_interface__i_CaL_s__Cca3; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaL_s__Cca4 = 7.0 * var_chaste_interface__i_CaL_s__Ccao + 0.001 * var_chaste_interface__i_CaL_s__Cca3 * var_i_CaL_s__alfa2s + 0.016 * var_chaste_interface__i_CaL_s__C4 * var_i_CaL_s__gama - 0.001 * (5.625 + 4.0 * var_i_CaL_s__beta2s) * var_chaste_interface__i_CaL_s__Cca4; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaL_s__Ccast = 0.001 * var_chaste_interface__i_CaL_s__Cca1 * var_i_CaL_s__beta2s + 0.001 * var_chaste_interface__i_CaL_s__Cst * var_i_CaL_s__gama - 0.001 * (10.0 + 4.0 * var_i_CaL_s__alfa2s) * var_chaste_interface__i_CaL_s__Ccast; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaL_s__Cst = 0.01 * var_chaste_interface__i_CaL_s__Ccast + 0.001 * var_chaste_interface__i_CaL_s__C1 * var_i_CaL_s__betas - 0.001 * (4.0 * var_i_CaL_s__alfas + var_i_CaL_s__gama) * var_chaste_interface__i_CaL_s__Cst; // 1 / millisecond
        const double var_i_CaL_t__gama = 187.5 * var_chaste_interface__ion_concentrations__Ca_ss; // per_second
        const double d_dt_chaste_interface_var_i_CaL_t__TC1 = 0.0050000000000000001 * var_chaste_interface__i_CaL_t__TCca1 + 0.002 * var_chaste_interface__i_CaL_t__TC2 * var_i_CaL_t__betat + 0.0040000000000000001 * var_chaste_interface__i_CaL_t__TCst * var_i_CaL_t__alfat - 0.001 * (2.0 * var_i_CaL_t__gama + 3.0 * var_i_CaL_t__alfat + var_i_CaL_t__betat) * var_chaste_interface__i_CaL_t__TC1; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaL_t__TC2 = 0.0025000000000000001 * var_chaste_interface__i_CaL_t__TCca2 + 0.0030000000000000001 * var_chaste_interface__i_CaL_t__TC1 * var_i_CaL_t__alfat + 0.0030000000000000001 * var_chaste_interface__i_CaL_t__TC3 * var_i_CaL_t__betat - 0.001 * (2.0 * var_i_CaL_t__alfat + 2.0 * var_i_CaL_t__betat + 4.0 * var_i_CaL_t__gama) * var_chaste_interface__i_CaL_t__TC2; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaL_t__TC3 = 0.00125 * var_chaste_interface__i_CaL_t__TCca3 + 0.002 * var_chaste_interface__i_CaL_t__TC2 * var_i_CaL_t__alfat + 0.0040000000000000001 * var_chaste_interface__i_CaL_t__TC4 * var_i_CaL_t__betat - 0.001 * (8.0 * var_i_CaL_t__gama + 3.0 * var_i_CaL_t__betat + var_i_CaL_t__alfat) * var_chaste_interface__i_CaL_t__TC3; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaL_t__TC4 = 2.0 * var_chaste_interface__i_CaL_t__TCo + 0.00062500000000000001 * var_chaste_interface__i_CaL_t__TCca4 + 0.001 * var_chaste_interface__i_CaL_t__TC3 * var_i_CaL_t__alfat - 0.001 * (300.0 + 4.0 * var_i_CaL_t__betat + 16.0 * var_i_CaL_t__gama) * var_chaste_interface__i_CaL_t__TC4; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaL_t__TCca1 = 0.002 * var_chaste_interface__i_CaL_t__TC1 * var_i_CaL_t__gama + 0.002 * var_chaste_interface__i_CaL_t__TCca2 * var_i_CaL_t__beta2t + 0.0040000000000000001 * var_chaste_interface__i_CaL_t__TCcast * var_i_CaL_t__alfa2t - 0.001 * (5.0 + 3.0 * var_i_CaL_t__alfa2t + var_i_CaL_t__beta2t) * var_chaste_interface__i_CaL_t__TCca1; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaL_t__TCca2 = 0.0040000000000000001 * var_chaste_interface__i_CaL_t__TC2 * var_i_CaL_t__gama + 0.0030000000000000001 * var_chaste_interface__i_CaL_t__TCca1 * var_i_CaL_t__alfa2t + 0.0030000000000000001 * var_chaste_interface__i_CaL_t__TCca3 * var_i_CaL_t__beta2t - 0.001 * (2.5 + 2.0 * var_i_CaL_t__alfa2t + 2.0 * var_i_CaL_t__beta2t) * var_chaste_interface__i_CaL_t__TCca2; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaL_t__TCca3 = 0.002 * var_chaste_interface__i_CaL_t__TCca2 * var_i_CaL_t__alfa2t + 0.0040000000000000001 * var_chaste_interface__i_CaL_t__TCca4 * var_i_CaL_t__beta2t + 0.0080000000000000002 * var_chaste_interface__i_CaL_t__TC3 * var_i_CaL_t__gama - 0.001 * (1.25 + 3.0 * var_i_CaL_t__beta2t + var_i_CaL_t__alfa2t) * var_chaste_interface__i_CaL_t__TCca3; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaL_t__TCca4 = 7.0 * var_chaste_interface__i_CaL_t__TCcao + 0.001 * var_chaste_interface__i_CaL_t__TCca3 * var_i_CaL_t__alfa2t + 0.016 * var_chaste_interface__i_CaL_t__TC4 * var_i_CaL_t__gama - 0.001 * (5.625 + 4.0 * var_i_CaL_t__beta2t) * var_chaste_interface__i_CaL_t__TCca4; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaL_t__TCcast = 0.001 * var_chaste_interface__i_CaL_t__TCca1 * var_i_CaL_t__beta2t + 0.001 * var_chaste_interface__i_CaL_t__TCst * var_i_CaL_t__gama - 0.001 * (10.0 + 4.0 * var_i_CaL_t__alfa2t) * var_chaste_interface__i_CaL_t__TCcast; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaL_t__TCst = 0.01 * var_chaste_interface__i_CaL_t__TCcast + 0.001 * var_chaste_interface__i_CaL_t__TC1 * var_i_CaL_t__betat - 0.001 * (4.0 * var_i_CaL_t__alfat + var_i_CaL_t__gama) * var_chaste_interface__i_CaL_t__TCst; // 1 / millisecond
        const double var_i_nsK_s__i_nsK_s = ((fabs(var_chaste_interface__Vm_s__Vm_s) < 2.6695336787564767e-6) ? (187298.62971157953 * (2.6695336787564767e-6 + var_chaste_interface__Vm_s__Vm_s) * (8.554716652752149e-14 * (-4.0500000000000007 + 0.75 * var_chaste_interface__ion_concentrations__K_i * exp(9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(9.9999999999999995e-8))) + 8.554716652752149e-14 * (-4.0500000000000007 + 0.75 * var_chaste_interface__ion_concentrations__K_i * exp(-9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(-9.9999999999999995e-8)))) - 8.554716652752149e-14 * (-4.0500000000000007 + 0.75 * var_chaste_interface__ion_concentrations__K_i * exp(-9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(-9.9999999999999995e-8)))) : (3.2045734132626158e-8 * (-4.0500000000000007 + 0.75 * var_chaste_interface__ion_concentrations__K_i * _lt_0_row[0]) * var_chaste_interface__Vm_s__Vm_s / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (_lt_0_row[1])))); // microA
        const double var_i_nsNa_s__i_nsNa_s = ((fabs(var_chaste_interface__Vm_s__Vm_s) < 2.6695336787564767e-6) ? (187298.62971157953 * (2.6695336787564767e-6 + var_chaste_interface__Vm_s__Vm_s) * (8.554716652752149e-14 * (-105.0 + 0.75 * var_chaste_interface__ion_concentrations__Na_i * exp(9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(9.9999999999999995e-8))) + 8.554716652752149e-14 * (-105.0 + 0.75 * var_chaste_interface__ion_concentrations__Na_i * exp(-9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(-9.9999999999999995e-8)))) - 8.554716652752149e-14 * (-105.0 + 0.75 * var_chaste_interface__ion_concentrations__Na_i * exp(-9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(-9.9999999999999995e-8)))) : (3.2045734132626158e-8 * (-105.0 + 0.75 * var_chaste_interface__ion_concentrations__Na_i * _lt_0_row[0]) * var_chaste_interface__Vm_s__Vm_s / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (_lt_0_row[1])))); // microA
        const double var_ion_concentrations__dBTRH = -0.070000000000000007 * var_chaste_interface__ion_concentrations__BTRH + 20000.0 * (1.0 - var_chaste_interface__ion_concentrations__BTRH) * var_chaste_interface__ion_concentrations__Ca_i; // millimolar_per_second
        const double d_dt_chaste_interface_var_ion_concentrations__BTRH = 0.001 * var_ion_concentrations__dBTRH; // millimolar / millisecond
        const double var_ion_concentrations__dBTRL = -40.0 * var_chaste_interface__ion_concentrations__BTRL + 40000.0 * (1.0 - var_chaste_interface__ion_concentrations__BTRL) * var_chaste_interface__ion_concentrations__Ca_i; // millimolar_per_second
        const double d_dt_chaste_interface_var_ion_concentrations__BTRL = 0.001 * var_ion_concentrations__dBTRL; // millimolar / millisecond
        const double var_i_CaL_s__i_CaL_s = ((fabs(var_chaste_interface__Vm_s__Vm_s) < 1.3347668393782383e-6) ? (374597.25942315906 * (1.3347668393782383e-6 + var_chaste_interface__Vm_s__Vm_s) * (7.425432175987399e-7 * (-0.61380000000000001 + 0.001 * exp(9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 7.425432175987399e-7 * (-0.61380000000000001 + 0.001 * exp(-9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 7.425432175987399e-7 * (-0.61380000000000001 + 0.001 * exp(-9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.55630930863148487 * (_lt_0_row[3]) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__Vm_s__Vm_s * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (_lt_0_row[2]))); // microA
        const double var_i_CaL_s__i_KL_s = ((fabs(var_chaste_interface__Vm_s__Vm_s) < 2.6695336787564767e-6) ? (187298.62971157953 * (2.6695336787564767e-6 + var_chaste_interface__Vm_s__Vm_s) * (1.7821037222369756e-12 * (-5.4000000000000004 + var_chaste_interface__ion_concentrations__K_i * exp(9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y / ((-1.0 + exp(9.9999999999999995e-8)) * (1.0 - 20430.198966619231 * var_i_CaL_s__i_CaL_s - 20205.350866353103 * (0.001 * exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t) - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y * mParameters[4] / (-1.0 + exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t)))) + 1.7821037222369756e-12 * (-5.4000000000000004 + var_chaste_interface__ion_concentrations__K_i * exp(-9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y / ((-1.0 + exp(-9.9999999999999995e-8)) * (1.0 - 20430.198966619231 * var_i_CaL_s__i_CaL_s - 20205.350866353103 * (0.001 * exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t) - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y * mParameters[4] / (-1.0 + exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t))))) - 1.7821037222369756e-12 * (-5.4000000000000004 + var_chaste_interface__ion_concentrations__K_i * exp(-9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y / ((-1.0 + exp(-9.9999999999999995e-8)) * (1.0 - 20430.198966619231 * var_i_CaL_s__i_CaL_s - 20205.350866353103 * (0.001 * exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t) - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y * mParameters[4] / (-1.0 + exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t))))) : (6.6757117035778174e-7 * (-5.4000000000000004 + var_chaste_interface__ion_concentrations__K_i * _lt_0_row[0]) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__Vm_s__Vm_s * var_chaste_interface__i_CaL_s_y_gate__y / ((_lt_0_row[1]) * (1.0 - 20430.198966619231 * var_i_CaL_s__i_CaL_s - 20205.350866353103 * (0.001 * exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t) - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y * mParameters[4] / (-1.0 + exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t)))))); // microA
        const double var_i_Kr_s__E_Kr_s = 26.695336787564766 * log(5.4000000000000004 / var_chaste_interface__ion_concentrations__K_i); // millivolt
        const double var_i_K1_s__E_K1_s = var_i_Kr_s__E_Kr_s; // millivolt
        const double var_i_Kr_t__E_Kr_t = 26.695336787564766 * log(var_chaste_interface__ion_concentrations__K_t / var_chaste_interface__ion_concentrations__K_i); // millivolt
        const double var_i_K1_t__E_K1_t = var_i_Kr_t__E_Kr_t; // millivolt
        const double var_JCaSRrel__JCaSRrel = 4.5382595216862795e-11 * (-var_chaste_interface__ion_concentrations__Ca_ss + var_chaste_interface__CaSRrel__CaSRrel) * (var_chaste_interface__JCaSRrel__F2 + var_chaste_interface__JCaSRrel__F3) * mParameters[1]; // millimolar_per_second
        const double var_Jtr__Jtr = 1.316200557333608e-9 * var_chaste_interface__CaSRup__CaSRup - 1.316200557333608e-9 * var_chaste_interface__CaSRrel__CaSRrel; // millimolar_per_second
        const double d_dt_chaste_interface_var_CaSRrel__CaSRrel = 22034879.125388369 * (-var_JCaSRrel__JCaSRrel + var_Jtr__Jtr) / (1.0 + 12.0 / pow((0.80000000000000004 + var_chaste_interface__CaSRrel__CaSRrel), 2)); // millimolar / millisecond
        const double var_JCaSRleak__JCaSRleak = 5.6642074536489521e-13 * (-var_chaste_interface__ion_concentrations__Ca_i + var_chaste_interface__CaSRup__CaSRup) * mParameters[0]; // millimolar_per_second
        const double var_JCaSRup__JCaSRup = 1.757857485615192e-8 * pow(var_chaste_interface__ion_concentrations__Ca_i, 2) * mParameters[2] / (2.4999999999999999e-7 + pow(var_chaste_interface__ion_concentrations__Ca_i, 2)); // millimolar_per_second
        const double d_dt_chaste_interface_var_CaSRup__CaSRup = 1266003.9642950408 * var_JCaSRup__JCaSRup - 1266003.9642950408 * var_JCaSRleak__JCaSRleak - 1266003.9642950408 * var_Jtr__Jtr; // millimolar / millisecond
        const double var_JCad__JCad = 3.1250799744270079e-6 * var_chaste_interface__ion_concentrations__Ca_ss - 3.1250799744270079e-6 * var_chaste_interface__ion_concentrations__Ca_i; // millimolar_per_second
        const double var_i_circ__i_circ = 0.028426299315597002 * var_chaste_interface__Vm_t__Vm_t - 0.028426299315597002 * var_chaste_interface__Vm_s__Vm_s; // microA
        const double var_i_CaL_t__i_CaL_t = 0.98899432645597307 * (0.001 * exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t) - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y * mParameters[4] / (-1.0 + exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t)); // microA
        const double d_dt_chaste_interface_var_ion_concentrations__Ca_ss = 0.001 * (1706622991084.001 * var_JCaSRrel__JCaSRrel - 8842606.1714196932 * var_i_CaL_s__i_CaL_s - 8842606.1714196932 * var_i_CaL_t__i_CaL_t - 1706622991084.001 * var_JCad__JCad) / (1.0 + 0.00011900000000000002 / pow((0.0023800000000000002 + var_chaste_interface__ion_concentrations__Ca_ss), 2)); // millimolar / millisecond
        const double var_i_CaL_t__i_KL_t = 1.1867931917471675e-6 * (-var_chaste_interface__ion_concentrations__K_t + var_chaste_interface__ion_concentrations__K_i * exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t)) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y / ((-1.0 + exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t)) * (1.0 - 20430.198966619231 * var_i_CaL_s__i_CaL_s - 20430.198966619231 * var_i_CaL_t__i_CaL_t)); // microA
        const double var_i_nsK_t__i_nsK_t = 3.5561299902450127e-8 * (-0.75 * var_chaste_interface__ion_concentrations__K_t + 0.75 * var_chaste_interface__ion_concentrations__K_i * exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t)) * var_chaste_interface__Vm_t__Vm_t / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t))); // microA
        const double var_i_nsNa_t__i_nsNa_t = 3.5561299902450127e-8 * (-0.75 * var_chaste_interface__ion_concentrations__Na_t + 0.75 * var_chaste_interface__ion_concentrations__Na_i * exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t)) * var_chaste_interface__Vm_t__Vm_t / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t))); // microA
        const double var_i_Cab_s__i_Cab_s = 1.0637989620002672e-7 * var_chaste_interface__Vm_s__Vm_s - 1.4199235782429474e-6 * log(1.8 / var_chaste_interface__ion_concentrations__Ca_i); // microA
        const double var_i_Cab_t__i_Cab_t = 1.1805026455952333e-7 * var_chaste_interface__Vm_t__Vm_t - 1.5756957851387983e-6 * log(var_chaste_interface__ion_concentrations__Ca_t / var_chaste_interface__ion_concentrations__Ca_i); // microA
        const double var_i_K1_s__i_K1_s = 0.02180178704521343 * (-var_i_K1_s__E_K1_s + var_chaste_interface__Vm_s__Vm_s) * mParameters[8] / ((1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__Vm_s__Vm_s - 0.23849999999999999 * var_i_K1_s__E_K1_s)) * (1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__Vm_s__Vm_s - 0.23849999999999999 * var_i_K1_s__E_K1_s)) + 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__Vm_s__Vm_s - 0.080320000000000003 * var_i_K1_s__E_K1_s) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__Vm_s__Vm_s - 0.061749999999999999 * var_i_K1_s__E_K1_s)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_i_K1_s__E_K1_s - 0.51429999999999998 * var_chaste_interface__Vm_s__Vm_s)))); // microA
        const double var_i_K1_t__i_K1_t = 0.037527981397187667 * sqrt(var_chaste_interface__ion_concentrations__K_t) * (-var_i_K1_t__E_K1_t + var_chaste_interface__Vm_t__Vm_t) * mParameters[8] / ((1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__Vm_t__Vm_t - 0.23849999999999999 * var_i_K1_t__E_K1_t)) * (1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__Vm_t__Vm_t - 0.23849999999999999 * var_i_K1_t__E_K1_t)) + 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__Vm_t__Vm_t - 0.080320000000000003 * var_i_K1_t__E_K1_t) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__Vm_t__Vm_t - 0.061749999999999999 * var_i_K1_t__E_K1_t)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_i_K1_t__E_K1_t - 0.51429999999999998 * var_chaste_interface__Vm_t__Vm_t)))); // microA
        const double var_i_KATP_s__i_KATP_s = 1.529643429454676e-8 * var_chaste_interface__Vm_s__Vm_s - 1.529643429454676e-8 * var_i_Kr_s__E_Kr_s; // microA
        const double var_i_KATP_t__i_KATP_t = 1.1324606116668949e-8 * pow(var_chaste_interface__ion_concentrations__K_t, 0.23999999999999999) * (-var_i_Kr_t__E_Kr_t + var_chaste_interface__Vm_t__Vm_t); // microA
        const double var_i_KNa_s__i_KNa_s = 5.5321598591488189e-6 * (_lt_0_row[4]) * (-var_i_Kr_s__E_Kr_s + var_chaste_interface__Vm_s__Vm_s) / (1.0 + 124372.1149330912 * pow((1 / var_chaste_interface__ion_concentrations__Na_i), 2.7999999999999998)); // microA
        const double var_i_KNa_t__i_KNa_t = 6.1390634723887744e-6 * (0.80000000000000004 - 0.65000000000000002 / (1.0 + exp(8.3333333333333339 + 0.066666666666666666 * var_chaste_interface__Vm_t__Vm_t))) * (-var_i_Kr_t__E_Kr_t + var_chaste_interface__Vm_t__Vm_t) / (1.0 + 124372.1149330912 * pow((1 / var_chaste_interface__ion_concentrations__Na_i), 2.7999999999999998)); // microA
        const double var_i_Kp_s__i_Kp_s = 3.0394256057150496e-7 * (-var_i_Kr_s__E_Kr_s + var_chaste_interface__Vm_s__Vm_s) / (_lt_0_row[5]); // microA
        const double var_i_Kp_t__i_Kp_t = 3.3728647017006672e-7 * (-var_i_Kr_t__E_Kr_t + var_chaste_interface__Vm_t__Vm_t) / (1.0 + exp(4.0 - 0.20000000000000001 * var_chaste_interface__Vm_t__Vm_t)); // microA
        const double var_i_Kto_s__i_Kto_s = 5.0657093428584157e-5 * (-var_i_Kr_s__E_Kr_s + var_chaste_interface__Vm_s__Vm_s) * var_chaste_interface__i_Kto_s_r2_gate__r2 * mParameters[12] / ((_lt_0_row[6]) * (_lt_0_row[7])); // microA
        const double var_i_Kto_t__i_Kto_t = 5.6214411695011118e-5 * (-var_i_Kr_t__E_Kr_t + var_chaste_interface__Vm_t__Vm_t) * var_chaste_interface__i_Kto_t_r2_gate__r2 * mParameters[12] / ((1.0 + exp(-1.7703904136064939 + 0.038654812524159254 * var_chaste_interface__Vm_t__Vm_t)) * (1.0 + exp(-9.8123827392120067 - 0.17056114617090226 * var_chaste_interface__Vm_t__Vm_t))); // microA
        const double var_i_Na_s__i_Na_s = 3.8473741844494297e-5 * pow(var_chaste_interface__i_Na_s_m_gate__m, 3) * (-26.695336787564766 * log(140.648 / (var_chaste_interface__ion_concentrations__Na_i + 0.12 * var_chaste_interface__ion_concentrations__K_i)) + var_chaste_interface__Vm_s__Vm_s) * var_chaste_interface__i_Na_s_h_gate__h * mParameters[5]; // microA
        const double var_i_Na_t__i_Na_t = 6.8397763279100978e-5 * pow(var_chaste_interface__i_Na_t_m_gate__m, 3) * (-26.695336787564766 * log((var_chaste_interface__ion_concentrations__Na_t + 0.12 * var_chaste_interface__ion_concentrations__K_t) / (var_chaste_interface__ion_concentrations__Na_i + 0.12 * var_chaste_interface__ion_concentrations__K_i)) + var_chaste_interface__Vm_t__Vm_t) * var_chaste_interface__i_Na_t_h_gate__h * mParameters[5]; // microA
        const double var_i_Nab_s__i_Nab_s = 3.7992820071438121e-8 * var_chaste_interface__Vm_s__Vm_s - 1.0142311273163911e-6 * log(140.0 / var_chaste_interface__ion_concentrations__Na_i); // microA
        const double var_i_Nab_t__i_Nab_t = 4.216080877125834e-8 * var_chaste_interface__Vm_t__Vm_t - 1.125496989384856e-6 * log(var_chaste_interface__ion_concentrations__Na_t / var_chaste_interface__ion_concentrations__Na_i); // microA
        const double var_i_Naps_s__i_Naps_s = 2.6848259517149603e-7 * (-26.695336787564766 * log(140.648 / (var_chaste_interface__ion_concentrations__Na_i + 0.12 * var_chaste_interface__ion_concentrations__K_i)) + var_chaste_interface__Vm_s__Vm_s) / (_lt_0_row[8]); // microA
        const double var_i_Naps_t__i_Naps_t = 2.9793638198355892e-7 * (-26.695336787564766 * log((var_chaste_interface__ion_concentrations__Na_t + 0.12 * var_chaste_interface__ion_concentrations__K_t) / (var_chaste_interface__ion_concentrations__Na_i + 0.12 * var_chaste_interface__ion_concentrations__K_i)) + var_chaste_interface__Vm_t__Vm_t) / (1.0 + exp(-6.75 - 0.125 * var_chaste_interface__Vm_t__Vm_t)); // microA
        const double var_i_NaCa_s__i_NaCa_s = 5.0657093428584157e-5 * (-2744000.0 * var_chaste_interface__ion_concentrations__Ca_i + 1.8 * pow(var_chaste_interface__ion_concentrations__Na_i, 3) * _lt_0_row[0]) * mParameters[11] * _lt_0_row[9] / (1.0 + 0.0001 * (2744000.0 * var_chaste_interface__ion_concentrations__Ca_i + 1.8 * pow(var_chaste_interface__ion_concentrations__Na_i, 3) * _lt_0_row[0]) * _lt_0_row[9]); // microA
        const double var_i_NaCa_t__i_NaCa_t = 5.6214411695011118e-5 * (-pow(var_chaste_interface__ion_concentrations__Na_t, 3) * var_chaste_interface__ion_concentrations__Ca_i + pow(var_chaste_interface__ion_concentrations__Na_i, 3) * var_chaste_interface__ion_concentrations__Ca_t * exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t)) * mParameters[11] * exp(-0.03184076705096852 * var_chaste_interface__Vm_t__Vm_t) / (1.0 + 0.0001 * (pow(var_chaste_interface__ion_concentrations__Na_t, 3) * var_chaste_interface__ion_concentrations__Ca_i + pow(var_chaste_interface__ion_concentrations__Na_i, 3) * var_chaste_interface__ion_concentrations__Ca_t * exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t)) * exp(-0.03184076705096852 * var_chaste_interface__Vm_t__Vm_t)); // microA
        const double var_i_NaK_s__i_NaK_s = 5.9467022720511838e-5 / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__ion_concentrations__Na_i), 1.5)) * (_lt_0_row[10])); // microA
        const double var_i_NaK_t__i_NaK_t = 8.432161754251667e-5 * var_chaste_interface__ion_concentrations__K_t / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__ion_concentrations__Na_i), 1.5)) * (1.5 + var_chaste_interface__ion_concentrations__K_t) * (1.0 + 0.1245 * exp(-0.0037459725942315908 * var_chaste_interface__Vm_t__Vm_t) + 0.0052142857142857138 * (-1.0 + exp(0.01485884101040119 * var_chaste_interface__ion_concentrations__Na_t)) * exp(-0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t))); // microA
        const double d_dt_chaste_interface_var_ion_concentrations__Na_i = -1.0611127405703633 * (3.0 * var_i_NaCa_s__i_NaCa_s + 3.0 * var_i_NaCa_t__i_NaCa_t + 3.0 * var_i_NaK_s__i_NaK_s + 3.0 * var_i_NaK_t__i_NaK_t + var_i_Na_s__i_Na_s + var_i_Na_t__i_Na_t + var_i_Nab_s__i_Nab_s + var_i_Nab_t__i_Nab_t + var_i_Naps_s__i_Naps_s + var_i_Naps_t__i_Naps_t + var_i_nsNa_s__i_nsNa_s + var_i_nsNa_t__i_nsNa_t) * mParameters[3]; // millimolar / millisecond
        const double var_i_pCa_s__i_pCa_s = 9.8321784713707638e-5 * var_chaste_interface__ion_concentrations__Ca_i / (0.00050000000000000001 + var_chaste_interface__ion_concentrations__Ca_i); // microA
        const double var_i_pCa_t__i_pCa_t = 2.4580446178426913e-5 * var_chaste_interface__ion_concentrations__Ca_i / (0.00050000000000000001 + var_chaste_interface__ion_concentrations__Ca_i); // microA
        const double d_dt_chaste_interface_var_ion_concentrations__Ca_i = 0.001 * (1061.1127405703633 * var_i_NaCa_s__i_NaCa_s + 1061.1127405703633 * var_i_NaCa_t__i_NaCa_t + 102397379.46504006 * var_JCaSRleak__JCaSRleak + 102397379.46504006 * var_JCad__JCad - 0.070000000000000007 * var_ion_concentrations__dBTRL - 0.14000000000000001 * var_ion_concentrations__dBTRH - 530.55637028518163 * var_i_Cab_s__i_Cab_s - 530.55637028518163 * var_i_Cab_t__i_Cab_t - 530.55637028518163 * var_i_pCa_s__i_pCa_s - 530.55637028518163 * var_i_pCa_t__i_pCa_t - 102397379.46504006 * var_JCaSRup__JCaSRup) / (1.0 + 0.00011900000000000002 / pow((0.0023800000000000002 + var_chaste_interface__ion_concentrations__Ca_i), 2)); // millimolar / millisecond
        const double var_i_Kr_s__i_Kr_s = 1.3241764222231898e-6 * (-var_i_Kr_s__E_Kr_s + var_chaste_interface__Vm_s__Vm_s) * var_chaste_interface__i_Kr_s_xr_gate__xr * mParameters[9] / (_lt_0_row[11]); // microA
        const double var_i_Kr_t__i_Kr_t = 6.3234832614954339e-7 * sqrt(var_chaste_interface__ion_concentrations__K_t) * (-var_i_Kr_t__E_Kr_t + var_chaste_interface__Vm_t__Vm_t) * var_chaste_interface__i_Kr_t_xr_gate__xr * mParameters[9] / (1.0 + exp(0.4017857142857143 + 0.044642857142857144 * var_chaste_interface__Vm_t__Vm_t)); // microA
        const double var_i_Ks_s__i_Ks_s = 5.0657093428584157e-5 * pow(var_chaste_interface__i_Ks_s_xs_gate__xs, 2) * (0.23080000000000001 + 0.76919999999999999 / (1.0 + exp(-7.0000000000000009 - 1.6666666666666667 * log10(var_chaste_interface__ion_concentrations__Ca_i)))) * (-26.695336787564766 * log(7.9662000000000006 / (0.018329999999999999 * var_chaste_interface__ion_concentrations__Na_i + var_chaste_interface__ion_concentrations__K_i)) + var_chaste_interface__Vm_s__Vm_s) * mParameters[10]; // microA
        const double var_i_Ks_t__i_Ks_t = 5.6214411695011118e-5 * pow(var_chaste_interface__i_Ks_t_xs_gate__xs, 2) * (0.23080000000000001 + 0.76919999999999999 / (1.0 + exp(-7.0000000000000009 - 1.6666666666666667 * log10(var_chaste_interface__ion_concentrations__Ca_i)))) * (-26.695336787564766 * log((0.018329999999999999 * var_chaste_interface__ion_concentrations__Na_t + var_chaste_interface__ion_concentrations__K_t) / (0.018329999999999999 * var_chaste_interface__ion_concentrations__Na_i + var_chaste_interface__ion_concentrations__K_i)) + var_chaste_interface__Vm_t__Vm_t) * mParameters[10]; // microA
        const double d_dt_chaste_interface_var_ion_concentrations__K_i = -1.0611127405703633 * (-2.0 * var_i_NaK_s__i_NaK_s - 2.0 * var_i_NaK_t__i_NaK_t + var_i_CaL_s__i_KL_s + var_i_CaL_t__i_KL_t + var_i_K1_s__i_K1_s + var_i_K1_t__i_K1_t + var_i_KATP_s__i_KATP_s + var_i_KATP_t__i_KATP_t + var_i_KNa_s__i_KNa_s + var_i_KNa_t__i_KNa_t + var_i_Kp_s__i_Kp_s + var_i_Kp_t__i_Kp_t + var_i_Kr_s__i_Kr_s + var_i_Kr_t__i_Kr_t + var_i_Ks_s__i_Ks_s + var_i_Ks_t__i_Ks_t + var_i_Kto_s__i_Kto_s + var_i_Kto_t__i_Kto_t + var_i_nsK_s__i_nsK_s + var_i_nsK_t__i_nsK_t) * mParameters[3]; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Vm_t__Vm_t = -17785.683620141612 * var_i_CaL_t__i_CaL_t - 17785.683620141612 * var_i_CaL_t__i_KL_t - 17785.683620141612 * var_i_Cab_t__i_Cab_t - 17785.683620141612 * var_i_K1_t__i_K1_t - 17785.683620141612 * var_i_KATP_t__i_KATP_t - 17785.683620141612 * var_i_KNa_t__i_KNa_t - 17785.683620141612 * var_i_Kp_t__i_Kp_t - 17785.683620141612 * var_i_Kr_t__i_Kr_t - 17785.683620141612 * var_i_Ks_t__i_Ks_t - 17785.683620141612 * var_i_Kto_t__i_Kto_t - 17785.683620141612 * var_i_NaCa_t__i_NaCa_t - 17785.683620141612 * var_i_NaK_t__i_NaK_t - 17785.683620141612 * var_i_Na_t__i_Na_t - 17785.683620141612 * var_i_Nab_t__i_Nab_t - 17785.683620141612 * var_i_Naps_t__i_Naps_t - 17785.683620141612 * var_i_circ__i_circ - 17785.683620141612 * var_i_nsK_t__i_nsK_t - 17785.683620141612 * var_i_nsNa_t__i_nsNa_t - 17785.683620141612 * var_i_pCa_t__i_pCa_t; // millivolt / millisecond
        const double d_dt_chaste_interface_var_ion_concentrations__Ca_t = 2401037.2757531707 * (3.1236499640128904e-9 + 5.1813471502590676e-6 * var_i_CaL_t__i_CaL_t + 5.1813471502590676e-6 * var_i_Cab_t__i_Cab_t + 5.1813471502590676e-6 * var_i_pCa_t__i_pCa_t - 1.7353610911182723e-9 * var_chaste_interface__ion_concentrations__Ca_t - 1.0362694300518135e-5 * var_i_NaCa_t__i_NaCa_t) * mParameters[3]; // millimolar / millisecond
        const double d_dt_chaste_interface_var_ion_concentrations__K_t = 2401037.2757531707 * (1.1245139870446404e-8 + 1.0362694300518135e-5 * var_i_CaL_t__i_KL_t + 1.0362694300518135e-5 * var_i_K1_t__i_K1_t + 1.0362694300518135e-5 * var_i_KATP_t__i_KATP_t + 1.0362694300518135e-5 * var_i_KNa_t__i_KNa_t + 1.0362694300518135e-5 * var_i_Kp_t__i_Kp_t + 1.0362694300518135e-5 * var_i_Kr_t__i_Kr_t + 1.0362694300518135e-5 * var_i_Ks_t__i_Ks_t + 1.0362694300518135e-5 * var_i_Kto_t__i_Kto_t + 1.0362694300518135e-5 * var_i_nsK_t__i_nsK_t - 2.072538860103627e-5 * var_i_NaK_t__i_NaK_t - 2.0824333093419268e-9 * var_chaste_interface__ion_concentrations__K_t) * mParameters[3]; // millimolar / millisecond
        const double d_dt_chaste_interface_var_ion_concentrations__Na_t = 2401037.2757531707 * (2.9154066330786974e-7 + 3.1088082901554407e-5 * var_i_NaCa_t__i_NaCa_t + 3.1088082901554407e-5 * var_i_NaK_t__i_NaK_t + 1.0362694300518135e-5 * var_i_Na_t__i_Na_t + 1.0362694300518135e-5 * var_i_Nab_t__i_Nab_t + 1.0362694300518135e-5 * var_i_Naps_t__i_Naps_t + 1.0362694300518135e-5 * var_i_nsNa_t__i_nsNa_t - 2.0824333093419268e-9 * var_chaste_interface__ion_concentrations__Na_t) * mParameters[3]; // millimolar / millisecond
        
        mEvalF[1] = d_dt_chaste_interface_var_ion_concentrations__Ca_i;
        mPartialF[1] = EvaluatePartialDerivative1(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[2] = d_dt_chaste_interface_var_i_Na_s_m_gate__m;
        mPartialF[2] = EvaluatePartialDerivative2(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[3] = d_dt_chaste_interface_var_i_Na_s_h_gate__h;
        mPartialF[3] = EvaluatePartialDerivative3(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[4] = d_dt_chaste_interface_var_i_Na_t_m_gate__m;
        mPartialF[4] = EvaluatePartialDerivative4(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[5] = d_dt_chaste_interface_var_i_Na_t_h_gate__h;
        mPartialF[5] = EvaluatePartialDerivative5(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[6] = d_dt_chaste_interface_var_i_CaL_s__Cst;
        mPartialF[6] = EvaluatePartialDerivative6(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[7] = d_dt_chaste_interface_var_i_CaL_s__C1;
        mPartialF[7] = EvaluatePartialDerivative7(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[8] = d_dt_chaste_interface_var_i_CaL_s__C2;
        mPartialF[8] = EvaluatePartialDerivative8(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[9] = d_dt_chaste_interface_var_i_CaL_s__C3;
        mPartialF[9] = EvaluatePartialDerivative9(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[10] = d_dt_chaste_interface_var_i_CaL_s__C4;
        mPartialF[10] = EvaluatePartialDerivative10(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[11] = d_dt_chaste_interface_var_i_CaL_s__Co;
        mPartialF[11] = EvaluatePartialDerivative11(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[12] = d_dt_chaste_interface_var_i_CaL_s__Ccast;
        mPartialF[12] = EvaluatePartialDerivative12(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[13] = d_dt_chaste_interface_var_i_CaL_s__Cca1;
        mPartialF[13] = EvaluatePartialDerivative13(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[14] = d_dt_chaste_interface_var_i_CaL_s__Cca2;
        mPartialF[14] = EvaluatePartialDerivative14(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[15] = d_dt_chaste_interface_var_i_CaL_s__Cca3;
        mPartialF[15] = EvaluatePartialDerivative15(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[16] = d_dt_chaste_interface_var_i_CaL_s__Cca4;
        mPartialF[16] = EvaluatePartialDerivative16(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[17] = d_dt_chaste_interface_var_i_CaL_s__Ccao;
        mPartialF[17] = EvaluatePartialDerivative17(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[18] = d_dt_chaste_interface_var_i_CaL_s_y_gate__y;
        mPartialF[18] = EvaluatePartialDerivative18(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[19] = d_dt_chaste_interface_var_i_CaL_t__TCst;
        mPartialF[19] = EvaluatePartialDerivative19(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[20] = d_dt_chaste_interface_var_i_CaL_t__TC1;
        mPartialF[20] = EvaluatePartialDerivative20(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[21] = d_dt_chaste_interface_var_i_CaL_t__TC2;
        mPartialF[21] = EvaluatePartialDerivative21(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[22] = d_dt_chaste_interface_var_i_CaL_t__TC3;
        mPartialF[22] = EvaluatePartialDerivative22(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[23] = d_dt_chaste_interface_var_i_CaL_t__TC4;
        mPartialF[23] = EvaluatePartialDerivative23(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[24] = d_dt_chaste_interface_var_i_CaL_t__TCo;
        mPartialF[24] = EvaluatePartialDerivative24(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[25] = d_dt_chaste_interface_var_i_CaL_t__TCcast;
        mPartialF[25] = EvaluatePartialDerivative25(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[26] = d_dt_chaste_interface_var_i_CaL_t__TCca1;
        mPartialF[26] = EvaluatePartialDerivative26(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[27] = d_dt_chaste_interface_var_i_CaL_t__TCca2;
        mPartialF[27] = EvaluatePartialDerivative27(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[28] = d_dt_chaste_interface_var_i_CaL_t__TCca3;
        mPartialF[28] = EvaluatePartialDerivative28(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[29] = d_dt_chaste_interface_var_i_CaL_t__TCca4;
        mPartialF[29] = EvaluatePartialDerivative29(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[30] = d_dt_chaste_interface_var_i_CaL_t__TCcao;
        mPartialF[30] = EvaluatePartialDerivative30(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[31] = d_dt_chaste_interface_var_i_CaL_t_y_gate__y;
        mPartialF[31] = EvaluatePartialDerivative31(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[32] = d_dt_chaste_interface_var_i_Kr_s_xr_gate__xr;
        mPartialF[32] = EvaluatePartialDerivative32(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[33] = d_dt_chaste_interface_var_i_Kr_t_xr_gate__xr;
        mPartialF[33] = EvaluatePartialDerivative33(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[34] = d_dt_chaste_interface_var_i_Ks_s_xs_gate__xs;
        mPartialF[34] = EvaluatePartialDerivative34(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[35] = d_dt_chaste_interface_var_i_Ks_t_xs_gate__xs;
        mPartialF[35] = EvaluatePartialDerivative35(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[36] = d_dt_chaste_interface_var_i_Kto_s_r2_gate__r2;
        mPartialF[36] = EvaluatePartialDerivative36(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[37] = d_dt_chaste_interface_var_i_Kto_s_r3_gate__r3;
        mPartialF[37] = EvaluatePartialDerivative37(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[38] = d_dt_chaste_interface_var_i_Kto_t_r2_gate__r2;
        mPartialF[38] = EvaluatePartialDerivative38(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[39] = d_dt_chaste_interface_var_i_Kto_t_r3_gate__r3;
        mPartialF[39] = EvaluatePartialDerivative39(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[40] = d_dt_chaste_interface_var_JCaSRrel__F1;
        mPartialF[40] = EvaluatePartialDerivative40(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[41] = d_dt_chaste_interface_var_JCaSRrel__F2;
        mPartialF[41] = EvaluatePartialDerivative41(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[42] = d_dt_chaste_interface_var_JCaSRrel__F3;
        mPartialF[42] = EvaluatePartialDerivative42(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[43] = d_dt_chaste_interface_var_JCaSRrel__F4;
        mPartialF[43] = EvaluatePartialDerivative43(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[44] = d_dt_chaste_interface_var_CaSRrel__CaSRrel;
        mPartialF[44] = EvaluatePartialDerivative44(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[45] = d_dt_chaste_interface_var_CaSRup__CaSRup;
        mPartialF[45] = EvaluatePartialDerivative45(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[46] = d_dt_chaste_interface_var_ion_concentrations__K_t;
        mPartialF[46] = EvaluatePartialDerivative46(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[47] = d_dt_chaste_interface_var_ion_concentrations__Na_t;
        mPartialF[47] = EvaluatePartialDerivative47(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[48] = d_dt_chaste_interface_var_ion_concentrations__Ca_t;
        mPartialF[48] = EvaluatePartialDerivative48(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[49] = d_dt_chaste_interface_var_ion_concentrations__K_i;
        mPartialF[49] = EvaluatePartialDerivative49(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[50] = d_dt_chaste_interface_var_ion_concentrations__Na_i;
        mPartialF[50] = EvaluatePartialDerivative50(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[51] = d_dt_chaste_interface_var_ion_concentrations__Ca_ss;
        mPartialF[51] = EvaluatePartialDerivative51(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[52] = d_dt_chaste_interface_var_ion_concentrations__BTRH;
        mPartialF[52] = EvaluatePartialDerivative52(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[53] = d_dt_chaste_interface_var_ion_concentrations__BTRL;
        mPartialF[53] = EvaluatePartialDerivative53(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[54] = d_dt_chaste_interface_var_Vm_t__Vm_t;
        mPartialF[54] = EvaluatePartialDerivative54(var_chaste_interface__environment__time_converted, rY, delta);
        
        {
            if (fabs(mPartialF[1]) < delta){
                rY[1] += mDt*d_dt_chaste_interface_var_ion_concentrations__Ca_i;
            }
            else
            {
                rY[1] += (d_dt_chaste_interface_var_ion_concentrations__Ca_i/mPartialF[1])*(exp(mPartialF[1]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[2]) < delta){
                rY[2] += mDt*d_dt_chaste_interface_var_i_Na_s_m_gate__m;
            }
            else
            {
                rY[2] += (d_dt_chaste_interface_var_i_Na_s_m_gate__m/mPartialF[2])*(exp(mPartialF[2]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[3]) < delta){
                rY[3] += mDt*d_dt_chaste_interface_var_i_Na_s_h_gate__h;
            }
            else
            {
                rY[3] += (d_dt_chaste_interface_var_i_Na_s_h_gate__h/mPartialF[3])*(exp(mPartialF[3]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[4]) < delta){
                rY[4] += mDt*d_dt_chaste_interface_var_i_Na_t_m_gate__m;
            }
            else
            {
                rY[4] += (d_dt_chaste_interface_var_i_Na_t_m_gate__m/mPartialF[4])*(exp(mPartialF[4]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[5]) < delta){
                rY[5] += mDt*d_dt_chaste_interface_var_i_Na_t_h_gate__h;
            }
            else
            {
                rY[5] += (d_dt_chaste_interface_var_i_Na_t_h_gate__h/mPartialF[5])*(exp(mPartialF[5]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[6]) < delta){
                rY[6] += mDt*d_dt_chaste_interface_var_i_CaL_s__Cst;
            }
            else
            {
                rY[6] += (d_dt_chaste_interface_var_i_CaL_s__Cst/mPartialF[6])*(exp(mPartialF[6]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[7]) < delta){
                rY[7] += mDt*d_dt_chaste_interface_var_i_CaL_s__C1;
            }
            else
            {
                rY[7] += (d_dt_chaste_interface_var_i_CaL_s__C1/mPartialF[7])*(exp(mPartialF[7]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[8]) < delta){
                rY[8] += mDt*d_dt_chaste_interface_var_i_CaL_s__C2;
            }
            else
            {
                rY[8] += (d_dt_chaste_interface_var_i_CaL_s__C2/mPartialF[8])*(exp(mPartialF[8]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[9]) < delta){
                rY[9] += mDt*d_dt_chaste_interface_var_i_CaL_s__C3;
            }
            else
            {
                rY[9] += (d_dt_chaste_interface_var_i_CaL_s__C3/mPartialF[9])*(exp(mPartialF[9]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[10]) < delta){
                rY[10] += mDt*d_dt_chaste_interface_var_i_CaL_s__C4;
            }
            else
            {
                rY[10] += (d_dt_chaste_interface_var_i_CaL_s__C4/mPartialF[10])*(exp(mPartialF[10]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[11]) < delta){
                rY[11] += mDt*d_dt_chaste_interface_var_i_CaL_s__Co;
            }
            else
            {
                rY[11] += (d_dt_chaste_interface_var_i_CaL_s__Co/mPartialF[11])*(exp(mPartialF[11]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[12]) < delta){
                rY[12] += mDt*d_dt_chaste_interface_var_i_CaL_s__Ccast;
            }
            else
            {
                rY[12] += (d_dt_chaste_interface_var_i_CaL_s__Ccast/mPartialF[12])*(exp(mPartialF[12]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[13]) < delta){
                rY[13] += mDt*d_dt_chaste_interface_var_i_CaL_s__Cca1;
            }
            else
            {
                rY[13] += (d_dt_chaste_interface_var_i_CaL_s__Cca1/mPartialF[13])*(exp(mPartialF[13]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[14]) < delta){
                rY[14] += mDt*d_dt_chaste_interface_var_i_CaL_s__Cca2;
            }
            else
            {
                rY[14] += (d_dt_chaste_interface_var_i_CaL_s__Cca2/mPartialF[14])*(exp(mPartialF[14]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[15]) < delta){
                rY[15] += mDt*d_dt_chaste_interface_var_i_CaL_s__Cca3;
            }
            else
            {
                rY[15] += (d_dt_chaste_interface_var_i_CaL_s__Cca3/mPartialF[15])*(exp(mPartialF[15]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[16]) < delta){
                rY[16] += mDt*d_dt_chaste_interface_var_i_CaL_s__Cca4;
            }
            else
            {
                rY[16] += (d_dt_chaste_interface_var_i_CaL_s__Cca4/mPartialF[16])*(exp(mPartialF[16]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[17]) < delta){
                rY[17] += mDt*d_dt_chaste_interface_var_i_CaL_s__Ccao;
            }
            else
            {
                rY[17] += (d_dt_chaste_interface_var_i_CaL_s__Ccao/mPartialF[17])*(exp(mPartialF[17]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[18]) < delta){
                rY[18] += mDt*d_dt_chaste_interface_var_i_CaL_s_y_gate__y;
            }
            else
            {
                rY[18] += (d_dt_chaste_interface_var_i_CaL_s_y_gate__y/mPartialF[18])*(exp(mPartialF[18]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[19]) < delta){
                rY[19] += mDt*d_dt_chaste_interface_var_i_CaL_t__TCst;
            }
            else
            {
                rY[19] += (d_dt_chaste_interface_var_i_CaL_t__TCst/mPartialF[19])*(exp(mPartialF[19]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[20]) < delta){
                rY[20] += mDt*d_dt_chaste_interface_var_i_CaL_t__TC1;
            }
            else
            {
                rY[20] += (d_dt_chaste_interface_var_i_CaL_t__TC1/mPartialF[20])*(exp(mPartialF[20]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[21]) < delta){
                rY[21] += mDt*d_dt_chaste_interface_var_i_CaL_t__TC2;
            }
            else
            {
                rY[21] += (d_dt_chaste_interface_var_i_CaL_t__TC2/mPartialF[21])*(exp(mPartialF[21]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[22]) < delta){
                rY[22] += mDt*d_dt_chaste_interface_var_i_CaL_t__TC3;
            }
            else
            {
                rY[22] += (d_dt_chaste_interface_var_i_CaL_t__TC3/mPartialF[22])*(exp(mPartialF[22]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[23]) < delta){
                rY[23] += mDt*d_dt_chaste_interface_var_i_CaL_t__TC4;
            }
            else
            {
                rY[23] += (d_dt_chaste_interface_var_i_CaL_t__TC4/mPartialF[23])*(exp(mPartialF[23]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[24]) < delta){
                rY[24] += mDt*d_dt_chaste_interface_var_i_CaL_t__TCo;
            }
            else
            {
                rY[24] += (d_dt_chaste_interface_var_i_CaL_t__TCo/mPartialF[24])*(exp(mPartialF[24]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[25]) < delta){
                rY[25] += mDt*d_dt_chaste_interface_var_i_CaL_t__TCcast;
            }
            else
            {
                rY[25] += (d_dt_chaste_interface_var_i_CaL_t__TCcast/mPartialF[25])*(exp(mPartialF[25]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[26]) < delta){
                rY[26] += mDt*d_dt_chaste_interface_var_i_CaL_t__TCca1;
            }
            else
            {
                rY[26] += (d_dt_chaste_interface_var_i_CaL_t__TCca1/mPartialF[26])*(exp(mPartialF[26]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[27]) < delta){
                rY[27] += mDt*d_dt_chaste_interface_var_i_CaL_t__TCca2;
            }
            else
            {
                rY[27] += (d_dt_chaste_interface_var_i_CaL_t__TCca2/mPartialF[27])*(exp(mPartialF[27]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[28]) < delta){
                rY[28] += mDt*d_dt_chaste_interface_var_i_CaL_t__TCca3;
            }
            else
            {
                rY[28] += (d_dt_chaste_interface_var_i_CaL_t__TCca3/mPartialF[28])*(exp(mPartialF[28]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[29]) < delta){
                rY[29] += mDt*d_dt_chaste_interface_var_i_CaL_t__TCca4;
            }
            else
            {
                rY[29] += (d_dt_chaste_interface_var_i_CaL_t__TCca4/mPartialF[29])*(exp(mPartialF[29]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[30]) < delta){
                rY[30] += mDt*d_dt_chaste_interface_var_i_CaL_t__TCcao;
            }
            else
            {
                rY[30] += (d_dt_chaste_interface_var_i_CaL_t__TCcao/mPartialF[30])*(exp(mPartialF[30]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[31]) < delta){
                rY[31] += mDt*d_dt_chaste_interface_var_i_CaL_t_y_gate__y;
            }
            else
            {
                rY[31] += (d_dt_chaste_interface_var_i_CaL_t_y_gate__y/mPartialF[31])*(exp(mPartialF[31]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[32]) < delta){
                rY[32] += mDt*d_dt_chaste_interface_var_i_Kr_s_xr_gate__xr;
            }
            else
            {
                rY[32] += (d_dt_chaste_interface_var_i_Kr_s_xr_gate__xr/mPartialF[32])*(exp(mPartialF[32]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[33]) < delta){
                rY[33] += mDt*d_dt_chaste_interface_var_i_Kr_t_xr_gate__xr;
            }
            else
            {
                rY[33] += (d_dt_chaste_interface_var_i_Kr_t_xr_gate__xr/mPartialF[33])*(exp(mPartialF[33]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[34]) < delta){
                rY[34] += mDt*d_dt_chaste_interface_var_i_Ks_s_xs_gate__xs;
            }
            else
            {
                rY[34] += (d_dt_chaste_interface_var_i_Ks_s_xs_gate__xs/mPartialF[34])*(exp(mPartialF[34]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[35]) < delta){
                rY[35] += mDt*d_dt_chaste_interface_var_i_Ks_t_xs_gate__xs;
            }
            else
            {
                rY[35] += (d_dt_chaste_interface_var_i_Ks_t_xs_gate__xs/mPartialF[35])*(exp(mPartialF[35]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[36]) < delta){
                rY[36] += mDt*d_dt_chaste_interface_var_i_Kto_s_r2_gate__r2;
            }
            else
            {
                rY[36] += (d_dt_chaste_interface_var_i_Kto_s_r2_gate__r2/mPartialF[36])*(exp(mPartialF[36]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[37]) < delta){
                rY[37] += mDt*d_dt_chaste_interface_var_i_Kto_s_r3_gate__r3;
            }
            else
            {
                rY[37] += (d_dt_chaste_interface_var_i_Kto_s_r3_gate__r3/mPartialF[37])*(exp(mPartialF[37]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[38]) < delta){
                rY[38] += mDt*d_dt_chaste_interface_var_i_Kto_t_r2_gate__r2;
            }
            else
            {
                rY[38] += (d_dt_chaste_interface_var_i_Kto_t_r2_gate__r2/mPartialF[38])*(exp(mPartialF[38]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[39]) < delta){
                rY[39] += mDt*d_dt_chaste_interface_var_i_Kto_t_r3_gate__r3;
            }
            else
            {
                rY[39] += (d_dt_chaste_interface_var_i_Kto_t_r3_gate__r3/mPartialF[39])*(exp(mPartialF[39]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[40]) < delta){
                rY[40] += mDt*d_dt_chaste_interface_var_JCaSRrel__F1;
            }
            else
            {
                rY[40] += (d_dt_chaste_interface_var_JCaSRrel__F1/mPartialF[40])*(exp(mPartialF[40]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[41]) < delta){
                rY[41] += mDt*d_dt_chaste_interface_var_JCaSRrel__F2;
            }
            else
            {
                rY[41] += (d_dt_chaste_interface_var_JCaSRrel__F2/mPartialF[41])*(exp(mPartialF[41]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[42]) < delta){
                rY[42] += mDt*d_dt_chaste_interface_var_JCaSRrel__F3;
            }
            else
            {
                rY[42] += (d_dt_chaste_interface_var_JCaSRrel__F3/mPartialF[42])*(exp(mPartialF[42]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[43]) < delta){
                rY[43] += mDt*d_dt_chaste_interface_var_JCaSRrel__F4;
            }
            else
            {
                rY[43] += (d_dt_chaste_interface_var_JCaSRrel__F4/mPartialF[43])*(exp(mPartialF[43]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[44]) < delta){
                rY[44] += mDt*d_dt_chaste_interface_var_CaSRrel__CaSRrel;
            }
            else
            {
                rY[44] += (d_dt_chaste_interface_var_CaSRrel__CaSRrel/mPartialF[44])*(exp(mPartialF[44]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[45]) < delta){
                rY[45] += mDt*d_dt_chaste_interface_var_CaSRup__CaSRup;
            }
            else
            {
                rY[45] += (d_dt_chaste_interface_var_CaSRup__CaSRup/mPartialF[45])*(exp(mPartialF[45]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[46]) < delta){
                rY[46] += mDt*d_dt_chaste_interface_var_ion_concentrations__K_t;
            }
            else
            {
                rY[46] += (d_dt_chaste_interface_var_ion_concentrations__K_t/mPartialF[46])*(exp(mPartialF[46]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[47]) < delta){
                rY[47] += mDt*d_dt_chaste_interface_var_ion_concentrations__Na_t;
            }
            else
            {
                rY[47] += (d_dt_chaste_interface_var_ion_concentrations__Na_t/mPartialF[47])*(exp(mPartialF[47]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[48]) < delta){
                rY[48] += mDt*d_dt_chaste_interface_var_ion_concentrations__Ca_t;
            }
            else
            {
                rY[48] += (d_dt_chaste_interface_var_ion_concentrations__Ca_t/mPartialF[48])*(exp(mPartialF[48]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[49]) < delta){
                rY[49] += mDt*d_dt_chaste_interface_var_ion_concentrations__K_i;
            }
            else
            {
                rY[49] += (d_dt_chaste_interface_var_ion_concentrations__K_i/mPartialF[49])*(exp(mPartialF[49]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[50]) < delta){
                rY[50] += mDt*d_dt_chaste_interface_var_ion_concentrations__Na_i;
            }
            else
            {
                rY[50] += (d_dt_chaste_interface_var_ion_concentrations__Na_i/mPartialF[50])*(exp(mPartialF[50]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[51]) < delta){
                rY[51] += mDt*d_dt_chaste_interface_var_ion_concentrations__Ca_ss;
            }
            else
            {
                rY[51] += (d_dt_chaste_interface_var_ion_concentrations__Ca_ss/mPartialF[51])*(exp(mPartialF[51]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[52]) < delta){
                rY[52] += mDt*d_dt_chaste_interface_var_ion_concentrations__BTRH;
            }
            else
            {
                rY[52] += (d_dt_chaste_interface_var_ion_concentrations__BTRH/mPartialF[52])*(exp(mPartialF[52]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[53]) < delta){
                rY[53] += mDt*d_dt_chaste_interface_var_ion_concentrations__BTRL;
            }
            else
            {
                rY[53] += (d_dt_chaste_interface_var_ion_concentrations__BTRL/mPartialF[53])*(exp(mPartialF[53]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[54]) < delta){
                rY[54] += mDt*d_dt_chaste_interface_var_Vm_t__Vm_t;
            }
            else
            {
                rY[54] += (d_dt_chaste_interface_var_Vm_t__Vm_t/mPartialF[54])*(exp(mPartialF[54]*mDt)-1.0);
            }
            
        }        
        
    }
   
    
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative0(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        double d_dt_chaste_interface_var_Vm_s__Vm_s;
        double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.207812
        double var_chaste_interface__ion_concentrations__Ca_i = rY[1];
        // Units: millimolar; Initial value: 8.8787034e-05
        double var_chaste_interface__i_Na_s_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.0034130493
        double var_chaste_interface__i_Na_s_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.82699973
        double var_chaste_interface__i_CaL_s__Co = rY[11];
        // Units: dimensionless; Initial value: -1.3496934e-17
        double var_chaste_interface__i_CaL_s__Ccao = rY[17];
        // Units: dimensionless; Initial value: 3.7986638e-22
        double var_chaste_interface__i_CaL_s_y_gate__y = rY[18];
        // Units: dimensionless; Initial value: 0.78134852
        double var_chaste_interface__i_CaL_t__TCo = rY[24];
        // Units: dimensionless; Initial value: -1.3449454e-17
        double var_chaste_interface__i_CaL_t__TCcao = rY[30];
        // Units: dimensionless; Initial value: 3.75926e-22
        double var_chaste_interface__i_CaL_t_y_gate__y = rY[31];
        // Units: dimensionless; Initial value: 0.7813477
        double var_chaste_interface__i_Kr_s_xr_gate__xr = rY[32];
        // Units: dimensionless; Initial value: 0.00020469344
        double var_chaste_interface__i_Ks_s_xs_gate__xs = rY[34];
        // Units: dimensionless; Initial value: 0.0061359896
        double var_chaste_interface__i_Kto_s_r2_gate__r2 = rY[36];
        // Units: dimensionless; Initial value: 0.9625701
        double var_chaste_interface__ion_concentrations__Ca_t = rY[48];
        // Units: millimolar; Initial value: 1.8476402
        double var_chaste_interface__ion_concentrations__K_i = rY[49];
        // Units: millimolar; Initial value: 136.78926
        double var_chaste_interface__ion_concentrations__Na_i = rY[50];
        // Units: millimolar; Initial value: 11.120279
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

        // Mathematics
        const double var_i_nsK_s__i_nsK_s = ((fabs(var_chaste_interface__Vm_s__Vm_s) < 2.6695336787564767e-6) ? (187298.62971157953 * (2.6695336787564767e-6 + var_chaste_interface__Vm_s__Vm_s) * (8.554716652752149e-14 * (-4.0500000000000007 + 0.75 * var_chaste_interface__ion_concentrations__K_i * exp(9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(9.9999999999999995e-8))) + 8.554716652752149e-14 * (-4.0500000000000007 + 0.75 * var_chaste_interface__ion_concentrations__K_i * exp(-9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(-9.9999999999999995e-8)))) - 8.554716652752149e-14 * (-4.0500000000000007 + 0.75 * var_chaste_interface__ion_concentrations__K_i * exp(-9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(-9.9999999999999995e-8)))) : (3.2045734132626158e-8 * (-4.0500000000000007 + 0.75 * var_chaste_interface__ion_concentrations__K_i * _lt_0_row[0]) * var_chaste_interface__Vm_s__Vm_s / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (_lt_0_row[1])))); // microA
        const double var_i_nsNa_s__i_nsNa_s = ((fabs(var_chaste_interface__Vm_s__Vm_s) < 2.6695336787564767e-6) ? (187298.62971157953 * (2.6695336787564767e-6 + var_chaste_interface__Vm_s__Vm_s) * (8.554716652752149e-14 * (-105.0 + 0.75 * var_chaste_interface__ion_concentrations__Na_i * exp(9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(9.9999999999999995e-8))) + 8.554716652752149e-14 * (-105.0 + 0.75 * var_chaste_interface__ion_concentrations__Na_i * exp(-9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(-9.9999999999999995e-8)))) - 8.554716652752149e-14 * (-105.0 + 0.75 * var_chaste_interface__ion_concentrations__Na_i * exp(-9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(-9.9999999999999995e-8)))) : (3.2045734132626158e-8 * (-105.0 + 0.75 * var_chaste_interface__ion_concentrations__Na_i * _lt_0_row[0]) * var_chaste_interface__Vm_s__Vm_s / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (_lt_0_row[1])))); // microA
        const double var_i_CaL_s__i_CaL_s = ((fabs(var_chaste_interface__Vm_s__Vm_s) < 1.3347668393782383e-6) ? (374597.25942315906 * (1.3347668393782383e-6 + var_chaste_interface__Vm_s__Vm_s) * (7.425432175987399e-7 * (-0.61380000000000001 + 0.001 * exp(9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 7.425432175987399e-7 * (-0.61380000000000001 + 0.001 * exp(-9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 7.425432175987399e-7 * (-0.61380000000000001 + 0.001 * exp(-9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.55630930863148487 * (_lt_0_row[3]) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__Vm_s__Vm_s * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (_lt_0_row[2]))); // microA
        const double var_i_CaL_s__i_KL_s = ((fabs(var_chaste_interface__Vm_s__Vm_s) < 2.6695336787564767e-6) ? (187298.62971157953 * (2.6695336787564767e-6 + var_chaste_interface__Vm_s__Vm_s) * (1.7821037222369756e-12 * (-5.4000000000000004 + var_chaste_interface__ion_concentrations__K_i * exp(9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y / ((-1.0 + exp(9.9999999999999995e-8)) * (1.0 - 20430.198966619231 * var_i_CaL_s__i_CaL_s - 20205.350866353103 * (0.001 * exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t) - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y * mParameters[4] / (-1.0 + exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t)))) + 1.7821037222369756e-12 * (-5.4000000000000004 + var_chaste_interface__ion_concentrations__K_i * exp(-9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y / ((-1.0 + exp(-9.9999999999999995e-8)) * (1.0 - 20430.198966619231 * var_i_CaL_s__i_CaL_s - 20205.350866353103 * (0.001 * exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t) - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y * mParameters[4] / (-1.0 + exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t))))) - 1.7821037222369756e-12 * (-5.4000000000000004 + var_chaste_interface__ion_concentrations__K_i * exp(-9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y / ((-1.0 + exp(-9.9999999999999995e-8)) * (1.0 - 20430.198966619231 * var_i_CaL_s__i_CaL_s - 20205.350866353103 * (0.001 * exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t) - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y * mParameters[4] / (-1.0 + exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t))))) : (6.6757117035778174e-7 * (-5.4000000000000004 + var_chaste_interface__ion_concentrations__K_i * _lt_0_row[0]) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__Vm_s__Vm_s * var_chaste_interface__i_CaL_s_y_gate__y / ((_lt_0_row[1]) * (1.0 - 20430.198966619231 * var_i_CaL_s__i_CaL_s - 20205.350866353103 * (0.001 * exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t) - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y * mParameters[4] / (-1.0 + exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t)))))); // microA
        const double var_i_Kr_s__E_Kr_s = 26.695336787564766 * log(5.4000000000000004 / var_chaste_interface__ion_concentrations__K_i); // millivolt
        const double var_i_K1_s__E_K1_s = var_i_Kr_s__E_Kr_s; // millivolt
        const double var_i_circ__i_circ = 0.028426299315597002 * var_chaste_interface__Vm_t__Vm_t - 0.028426299315597002 * var_chaste_interface__Vm_s__Vm_s; // microA
        const double var_i_Cab_s__i_Cab_s = 1.0637989620002672e-7 * var_chaste_interface__Vm_s__Vm_s - 1.4199235782429474e-6 * log(1.8 / var_chaste_interface__ion_concentrations__Ca_i); // microA
        const double var_i_K1_s__i_K1_s = 0.02180178704521343 * (-var_i_K1_s__E_K1_s + var_chaste_interface__Vm_s__Vm_s) * mParameters[8] / ((1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__Vm_s__Vm_s - 0.23849999999999999 * var_i_K1_s__E_K1_s)) * (1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__Vm_s__Vm_s - 0.23849999999999999 * var_i_K1_s__E_K1_s)) + 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__Vm_s__Vm_s - 0.080320000000000003 * var_i_K1_s__E_K1_s) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__Vm_s__Vm_s - 0.061749999999999999 * var_i_K1_s__E_K1_s)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_i_K1_s__E_K1_s - 0.51429999999999998 * var_chaste_interface__Vm_s__Vm_s)))); // microA
        const double var_i_KATP_s__i_KATP_s = 1.529643429454676e-8 * var_chaste_interface__Vm_s__Vm_s - 1.529643429454676e-8 * var_i_Kr_s__E_Kr_s; // microA
        const double var_i_KNa_s__i_KNa_s = 5.5321598591488189e-6 * (_lt_0_row[4]) * (-var_i_Kr_s__E_Kr_s + var_chaste_interface__Vm_s__Vm_s) / (1.0 + 124372.1149330912 * pow((1 / var_chaste_interface__ion_concentrations__Na_i), 2.7999999999999998)); // microA
        const double var_i_Kp_s__i_Kp_s = 3.0394256057150496e-7 * (-var_i_Kr_s__E_Kr_s + var_chaste_interface__Vm_s__Vm_s) / (_lt_0_row[5]); // microA
        const double var_i_Kto_s__i_Kto_s = 5.0657093428584157e-5 * (-var_i_Kr_s__E_Kr_s + var_chaste_interface__Vm_s__Vm_s) * var_chaste_interface__i_Kto_s_r2_gate__r2 * mParameters[12] / ((_lt_0_row[6]) * (_lt_0_row[7])); // microA
        const double var_i_Na_s__i_Na_s = 3.8473741844494297e-5 * pow(var_chaste_interface__i_Na_s_m_gate__m, 3) * (-26.695336787564766 * log(140.648 / (var_chaste_interface__ion_concentrations__Na_i + 0.12 * var_chaste_interface__ion_concentrations__K_i)) + var_chaste_interface__Vm_s__Vm_s) * var_chaste_interface__i_Na_s_h_gate__h * mParameters[5]; // microA
        const double var_i_Nab_s__i_Nab_s = 3.7992820071438121e-8 * var_chaste_interface__Vm_s__Vm_s - 1.0142311273163911e-6 * log(140.0 / var_chaste_interface__ion_concentrations__Na_i); // microA
        const double var_i_Naps_s__i_Naps_s = 2.6848259517149603e-7 * (-26.695336787564766 * log(140.648 / (var_chaste_interface__ion_concentrations__Na_i + 0.12 * var_chaste_interface__ion_concentrations__K_i)) + var_chaste_interface__Vm_s__Vm_s) / (_lt_0_row[8]); // microA
        const double var_i_NaCa_s__i_NaCa_s = 5.0657093428584157e-5 * (-2744000.0 * var_chaste_interface__ion_concentrations__Ca_i + 1.8 * pow(var_chaste_interface__ion_concentrations__Na_i, 3) * _lt_0_row[0]) * mParameters[11] * _lt_0_row[9] / (1.0 + 0.0001 * (2744000.0 * var_chaste_interface__ion_concentrations__Ca_i + 1.8 * pow(var_chaste_interface__ion_concentrations__Na_i, 3) * _lt_0_row[0]) * _lt_0_row[9]); // microA
        const double var_i_NaK_s__i_NaK_s = 5.9467022720511838e-5 / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__ion_concentrations__Na_i), 1.5)) * (_lt_0_row[10])); // microA
        const double var_i_pCa_s__i_pCa_s = 9.8321784713707638e-5 * var_chaste_interface__ion_concentrations__Ca_i / (0.00050000000000000001 + var_chaste_interface__ion_concentrations__Ca_i); // microA
        const double var_i_Kr_s__i_Kr_s = 1.3241764222231898e-6 * (-var_i_Kr_s__E_Kr_s + var_chaste_interface__Vm_s__Vm_s) * var_chaste_interface__i_Kr_s_xr_gate__xr * mParameters[9] / (_lt_0_row[11]); // microA
        const double var_i_Ks_s__i_Ks_s = 5.0657093428584157e-5 * pow(var_chaste_interface__i_Ks_s_xs_gate__xs, 2) * (0.23080000000000001 + 0.76919999999999999 / (1.0 + exp(-7.0000000000000009 - 1.6666666666666667 * log10(var_chaste_interface__ion_concentrations__Ca_i)))) * (-26.695336787564766 * log(7.9662000000000006 / (0.018329999999999999 * var_chaste_interface__ion_concentrations__Na_i + var_chaste_interface__ion_concentrations__K_i)) + var_chaste_interface__Vm_s__Vm_s) * mParameters[10]; // microA
        d_dt_chaste_interface_var_Vm_s__Vm_s = 19744.697669435584 * var_i_circ__i_circ - 19744.697669435584 * var_i_CaL_s__i_CaL_s - 19744.697669435584 * var_i_CaL_s__i_KL_s - 19744.697669435584 * var_i_Cab_s__i_Cab_s - 19744.697669435584 * var_i_K1_s__i_K1_s - 19744.697669435584 * var_i_KATP_s__i_KATP_s - 19744.697669435584 * var_i_KNa_s__i_KNa_s - 19744.697669435584 * var_i_Kp_s__i_Kp_s - 19744.697669435584 * var_i_Kr_s__i_Kr_s - 19744.697669435584 * var_i_Ks_s__i_Ks_s - 19744.697669435584 * var_i_Kto_s__i_Kto_s - 19744.697669435584 * var_i_NaCa_s__i_NaCa_s - 19744.697669435584 * var_i_NaK_s__i_NaK_s - 19744.697669435584 * var_i_Na_s__i_Na_s - 19744.697669435584 * var_i_Nab_s__i_Nab_s - 19744.697669435584 * var_i_Naps_s__i_Naps_s - 19744.697669435584 * var_i_nsK_s__i_nsK_s - 19744.697669435584 * var_i_nsNa_s__i_nsNa_s - 19744.697669435584 * var_i_pCa_s__i_pCa_s - GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted) / HeartConfig::Instance()->GetCapacitance(); // millivolt / millisecond

        return d_dt_chaste_interface_var_Vm_s__Vm_s;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative0(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -85.207812
            double var_chaste_interface__ion_concentrations__Ca_i = rY[1];
            // Units: millimolar; Initial value: 8.8787034e-05
            double var_chaste_interface__i_Na_s_m_gate__m = rY[2];
            // Units: dimensionless; Initial value: 0.0034130493
            double var_chaste_interface__i_Na_s_h_gate__h = rY[3];
            // Units: dimensionless; Initial value: 0.82699973
            double var_chaste_interface__i_CaL_s__Co = rY[11];
            // Units: dimensionless; Initial value: -1.3496934e-17
            double var_chaste_interface__i_CaL_s__Ccao = rY[17];
            // Units: dimensionless; Initial value: 3.7986638e-22
            double var_chaste_interface__i_CaL_s_y_gate__y = rY[18];
            // Units: dimensionless; Initial value: 0.78134852
            double var_chaste_interface__i_CaL_t__TCo = rY[24];
            // Units: dimensionless; Initial value: -1.3449454e-17
            double var_chaste_interface__i_CaL_t__TCcao = rY[30];
            // Units: dimensionless; Initial value: 3.75926e-22
            double var_chaste_interface__i_CaL_t_y_gate__y = rY[31];
            // Units: dimensionless; Initial value: 0.7813477
            double var_chaste_interface__i_Kr_s_xr_gate__xr = rY[32];
            // Units: dimensionless; Initial value: 0.00020469344
            double var_chaste_interface__i_Ks_s_xs_gate__xs = rY[34];
            // Units: dimensionless; Initial value: 0.0061359896
            double var_chaste_interface__i_Kto_s_r2_gate__r2 = rY[36];
            // Units: dimensionless; Initial value: 0.9625701
            double var_chaste_interface__ion_concentrations__Ca_t = rY[48];
            // Units: millimolar; Initial value: 1.8476402
            double var_chaste_interface__ion_concentrations__K_i = rY[49];
            // Units: millimolar; Initial value: 136.78926
            double var_chaste_interface__ion_concentrations__Na_i = rY[50];
            // Units: millimolar; Initial value: 11.120279
            double var_chaste_interface__Vm_t__Vm_t = rY[54];
            // Units: millivolt; Initial value: -85.208034
            

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

            const double var_x0 = exp(-6.75 - 0.125 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x1 = 1.0 + var_x0;
            const double var_x2 = 1 / var_x1;
            const double var_x3 = pow(var_chaste_interface__ion_concentrations__Ca_i, 3);
            const double var_x4 = 1.0 + 1.5625000000000003e-8 / var_x3;
            const double var_x5 = 1 / var_x4;
            const double var_x6 = 1.6022867066313079e-8 * var_x5;
            const double var_x7 = exp(9.9999999999999995e-8);
            const double var_x8 = 1 / (-1.0 + var_x7);
            const double var_x9 = 0.75 * var_chaste_interface__ion_concentrations__Na_i;
            const double var_x10 = var_x8 * (-105.0 + var_x7 * var_x9);
            const double var_x11 = exp(-9.9999999999999995e-8);
            const double var_x12 = -105.0 + var_x11 * var_x9;
            const double var_x13 = 1 / (-1.0 + var_x11);
            const double var_x14 = var_x13 * var_x6;
            const double var_x15 = fabs(var_chaste_interface__Vm_s__Vm_s);
            const double var_x16 = var_x15 < 2.6695336787564767e-6;
            const double var_x17 = 0.037459725942315905 * var_chaste_interface__Vm_s__Vm_s;
            const double var_x18 = exp(var_x17);
            const double var_x19 = -105.0 + var_x18 * var_x9;
            const double var_x20 = -1.0 + var_x18;
            const double var_x21 = 1 / var_x20;
            const double var_x22 = var_x21 * var_x5;
            const double var_x23 = 3.2045734132626158e-8 * var_x22;
            const double var_x24 = var_x18 * var_chaste_interface__Vm_s__Vm_s;
            const double var_x25 = var_x22 * var_x24;
            const double var_x26 = var_x24 / pow(var_x20, 2);
            const double var_x27 = 1.2004244182284942e-9 * var_x26 * var_x5;
            const double var_x28 = ((var_x16) ? (var_x10 * var_x6 + var_x12 * var_x14) : (var_x19 * var_x23 - var_x19 * var_x27 + 9.003183136713707e-10 * var_x25 * var_chaste_interface__ion_concentrations__Na_i));
            const double var_x29 = var_x7 * var_chaste_interface__ion_concentrations__K_i;
            const double var_x30 = var_x8 * (-4.0500000000000007 + 0.75 * var_x29);
            const double var_x31 = var_x11 * var_chaste_interface__ion_concentrations__K_i;
            const double var_x32 = -4.0500000000000007 + 0.75 * var_x31;
            const double var_x33 = var_x18 * var_chaste_interface__ion_concentrations__K_i;
            const double var_x34 = -4.0500000000000007 + 0.75 * var_x33;
            const double var_x35 = var_x33 * var_chaste_interface__Vm_s__Vm_s;
            const double var_x36 = ((var_x16) ? (var_x14 * var_x32 + var_x30 * var_x6) : (var_x23 * var_x34 - var_x27 * var_x34 + 9.003183136713707e-10 * var_x22 * var_x35));
            const double var_x37 = -0.61380000000000001 + 0.001 * var_x7;
            const double var_x38 = var_x8 * var_chaste_interface__i_CaL_s_y_gate__y;
            const double var_x39 = var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co;
            const double var_x40 = var_x39 * mParameters[4];
            const double var_x41 = 0.27815465431574243 * var_x40;
            const double var_x42 = -0.61380000000000001 + 0.001 * var_x11;
            const double var_x43 = var_x13 * var_chaste_interface__i_CaL_s_y_gate__y;
            const double var_x44 = var_x15 < 1.3347668393782383e-6;
            const double var_x45 = exp(0.07491945188463181 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x46 = -1.0 + var_x45;
            const double var_x47 = 1 / var_x46;
            const double var_x48 = var_x40 * var_chaste_interface__i_CaL_s_y_gate__y;
            const double var_x49 = var_x47 * var_x48;
            const double var_x50 = -0.61380000000000001 + 0.001 * var_x45;
            const double var_x51 = 0.55630930863148487 * var_x50;
            const double var_x52 = var_x49 * var_x51;
            const double var_x53 = var_x45 * var_chaste_interface__Vm_s__Vm_s;
            const double var_x54 = ((var_x44) ? (var_x37 * var_x38 * var_x41 + var_x41 * var_x42 * var_x43) : (var_x52 + 4.1678388480989317e-5 * var_x49 * var_x53 - 0.041678388480989315 * var_x48 * var_x50 * var_x53 / pow(var_x46, 2)));
            const double var_x55 = 0.5 + 187298.62971157953 * var_chaste_interface__Vm_s__Vm_s;
            const double var_x56 = -5.4000000000000004 + var_x29;
            const double var_x57 = var_x38 * var_x56;
            const double var_x58 = exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x59 = 0.001 * var_x58 - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t;
            const double var_x60 = var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo;
            const double var_x61 = var_x60 * var_chaste_interface__i_CaL_t_y_gate__y;
            const double var_x62 = -1.0 + var_x58;
            const double var_x63 = 1 / var_x62;
            const double var_x64 = var_x63 * mParameters[4];
            const double var_x65 = var_x61 * var_x64;
            const double var_x66 = var_x59 * var_x65;
            const double var_x67 = var_x66 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x68 = 7.425432175987399e-7 * mParameters[4];
            const double var_x69 = var_x37 * var_x68;
            const double var_x70 = var_x38 * var_x69;
            const double var_x71 = var_x42 * var_x68;
            const double var_x72 = var_x43 * var_x71;
            const double var_x73 = var_x39 * var_x72;
            const double var_x74 = ((var_x44) ? (-var_x73 + 374597.25942315906 * (1.3347668393782383e-6 + var_chaste_interface__Vm_s__Vm_s) * (var_x73 + var_x39 * var_x70)) : (var_x52 * var_chaste_interface__Vm_s__Vm_s));
            const double var_x75 = 4.8947149346606639e-5 - var_x74;
            const double var_x76 = pow((var_x75 - 0.98899432645597307 * var_x67), (-2));
            const double var_x77 = var_x39 * var_x76;
            const double var_x78 = 8.7228897043476842e-17 * var_x77;
            const double var_x79 = var_x54 * var_x78;
            const double var_x80 = -5.4000000000000004 + var_x31;
            const double var_x81 = var_x43 * var_x80;
            const double var_x82 = var_x79 * var_x81;
            const double var_x83 = 20205.350866353103 * var_x66;
            const double var_x84 = 1.0 - 20430.198966619231 * var_x74;
            const double var_x85 = 1 / (var_x84 - var_x83 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x86 = var_x39 * var_x85;
            const double var_x87 = 3.3378558517889087e-7 * var_x86;
            const double var_x88 = var_x86 * var_chaste_interface__i_CaL_s_y_gate__y;
            const double var_x89 = -5.4000000000000004 + var_x33;
            const double var_x90 = var_x21 * var_x89;
            const double var_x91 = 6.6757117035778174e-7 * var_x90;
            const double var_x92 = var_x21 * var_x88;
            const double var_x93 = var_chaste_interface__Vm_s__Vm_s * var_chaste_interface__i_CaL_s_y_gate__y;
            const double var_x94 = var_x90 * var_x93;
            const double var_x95 = 3.2675705774991325e-11 * var_x77 * var_x94;
            const double var_x96 = ((var_x16) ? (-var_x82 + var_x55 * (var_x82 + var_x57 * var_x79) + var_x57 * var_x87 + var_x81 * var_x87) : (var_x54 * var_x95 + var_x88 * var_x91 + 2.5007033088593585e-8 * var_x35 * var_x92 - 2.5007033088593585e-8 * var_x26 * var_x88 * var_x89));
            const double var_x97 = exp(4.0 - 0.20000000000000001 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x98 = 1.0 + var_x97;
            const double var_x99 = 1 / var_x98;
            const double var_x100 = 1 / var_chaste_interface__ion_concentrations__Na_i;
            const double var_x101 = pow(var_x100, 2.7999999999999998);
            const double var_x102 = 1 / (1.0 + 124372.1149330912 * var_x101);
            const double var_x103 = exp(8.3333333333333339 + 0.066666666666666666 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x104 = 1.0 + var_x103;
            const double var_x105 = 0.80000000000000004 - 0.65000000000000002 / var_x104;
            const double var_x106 = var_x102 * var_x105;
            const double var_x107 = pow(var_chaste_interface__i_Ks_s_xs_gate__xs, 2);
            const double var_x108 = exp(-7.0000000000000009 - 1.6666666666666667 * log10(var_chaste_interface__ion_concentrations__Ca_i));
            const double var_x109 = 1.0 + var_x108;
            const double var_x110 = (0.23080000000000001 + 0.76919999999999999 / var_x109) * mParameters[10];
            const double var_x111 = var_x107 * var_x110;
            const double var_x112 = var_chaste_interface__ion_concentrations__Na_i + 0.12 * var_chaste_interface__ion_concentrations__K_i;
            const double var_x113 = 1 / var_x112;
            const double var_x114 = -26.695336787564766 * log(140.648 * var_x113) + var_chaste_interface__Vm_s__Vm_s;
            const double var_x115 = var_x0 * var_x114 / pow(var_x1, 2);
            const double var_x116 = pow(var_x100, 1.5);
            const double var_x117 = 1 / (1.0 + 31.622776601683793 * var_x116);
            const double var_x118 = exp(-0.0037459725942315908 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x119 = exp(2.0802377414561666);
            const double var_x120 = exp(-var_x17);
            const double var_x121 = 1.0 + 0.1245 * var_x118 + 0.0052142857142857138 * var_x120 * (-1.0 + var_x119);
            const double var_x122 = var_x117 * (0.00046637358798183305 * var_x118 + 0.037459725942315905 * var_x120 * (-0.0052142857142857138 + 0.0052142857142857138 * var_x119)) / pow(var_x121, 2);
            const double var_x123 = var_chaste_interface__i_Na_s_h_gate__h * mParameters[5];
            const double var_x124 = pow(var_chaste_interface__i_Na_s_m_gate__m, 3);
            const double var_x125 = 0.75965240093145292 * var_x124;
            const double var_x126 = 1 / var_chaste_interface__ion_concentrations__K_i;
            const double var_x127 = log(5.4000000000000004 * var_x126);
            const double var_x128 = -26.695336787564766 * var_x127 + var_chaste_interface__Vm_s__Vm_s;
            const double var_x129 = var_x128 * var_x97 / pow(var_x98, 2);
            const double var_x130 = exp(0.4017857142857143 + 0.044642857142857144 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x131 = 1.0 + var_x130;
            const double var_x132 = mParameters[9] / var_x131;
            const double var_x133 = 0.026145463117791767 * var_x132;
            const double var_x134 = exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__Vm_s__Vm_s - 6.3668378238341967 * var_x127);
            const double var_x135 = 1.0 + var_x134;
            const double var_x136 = 1 / var_x135;
            const double var_x137 = exp(-2.4444678999999998 + 13.729411709844559 * var_x127 - 0.51429999999999998 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x138 = 1.0 + var_x137;
            const double var_x139 = 1 / var_x138;
            const double var_x140 = exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__Vm_s__Vm_s - 2.144169450777202 * var_x127);
            const double var_x141 = exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__Vm_s__Vm_s - 1.6484370466321243 * var_x127);
            const double var_x142 = var_x141 + 0.49124000000000001 * var_x140;
            const double var_x143 = var_x139 * var_x142;
            const double var_x144 = mParameters[8] / (1000.0 * var_x143 + 1020.0 * var_x136);
            const double var_x145 = var_x136 * var_x144;
            const double var_x146 = 2744000.0 * var_chaste_interface__ion_concentrations__Ca_i;
            const double var_x147 = pow(var_chaste_interface__ion_concentrations__Na_i, 3);
            const double var_x148 = var_x147 * var_x18;
            const double var_x149 = 1.8 * var_x148;
            const double var_x150 = var_x149 - var_x146;
            const double var_x151 = _lt_0_row[9];
            const double var_x152 = 1.0 + 0.0001 * var_x151 * (var_x146 + var_x149);
            const double var_x153 = 1 / var_x152;
            const double var_x154 = var_x151 * mParameters[11];
            const double var_x155 = var_x153 * var_x154;
            const double var_x156 = var_x150 * var_x155;
            const double var_x157 = exp(-1.7703904136064939 + 0.038654812524159254 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x158 = 1.0 + var_x157;
            const double var_x159 = 1 / var_x158;
            const double var_x160 = exp(-9.8123827392120067 - 0.17056114617090226 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x161 = 1.0 + var_x160;
            const double var_x162 = 1 / var_x161;
            const double var_x163 = var_x159 * var_x162 * mParameters[12];
            const double var_x164 = 1.0002089945597463 * var_x163;
            const double var_x165 = var_x102 * var_x103 * var_x128 / pow(var_x104, 2);
            const double var_x166 = var_x128 * var_x130 * var_chaste_interface__i_Kr_s_xr_gate__xr * mParameters[9] / pow(var_x131, 2);
            const double var_x167 = var_x134 / pow(var_x135, 2);
            const double var_x168 = var_x128 * var_x144 * var_x167;
            const double var_x169 = var_x148 * var_x151;
            const double var_x170 = var_x150 / pow(var_x152, 2);
            const double var_x171 = var_x154 * var_x170 * (-6.7427506696168633e-6 * var_x169 + 0.03184076705096852 * var_x151 * (0.00018000000000000001 * var_x148 + 274.40000000000003 * var_chaste_interface__ion_concentrations__Ca_i));
            const double var_x172 = 1000.0 * var_x139;
            const double var_x173 = var_x137 * var_x142 / pow(var_x138, 2);
            const double var_x174 = 243.26999999999998 * var_x167 - 514.29999999999995 * var_x173 - var_x172 * (0.061749999999999999 * var_x141 + 0.039456396800000001 * var_x140);
            const double var_x175 = var_x128 * var_x136 * mParameters[8] / pow((var_x136 + 0.98039215686274506 * var_x143), 2);
            const double var_x176 = 0.00041375403100841649 * var_x175;
            const double var_x177 = var_x153 * var_x169 * mParameters[11];
            const double var_x178 = var_x128 * var_chaste_interface__i_Kto_s_r2_gate__r2 * mParameters[12];
            const double var_x179 = var_x157 * var_x162 * var_x178 / pow(var_x158, 2);
            const double var_x180 = var_x159 * var_x160 * var_x178 / pow(var_x161, 2);
            
            partialF = -561.27183846645153 + 0.03866289116968482 * var_x179 + 0.031847421598060317 * var_x156 + 0.0011672081749014183 * var_x166 + 102.66702198588584 * var_x168 - 1.0002089945597463 * var_x111 - 1.0002089945597463 * var_x171 - 0.00066263845889583193 * var_x115 - 0.0053011076711666555 * var_x2 - 1.1741583849179631 * var_x122 - 0.17059679252255605 * var_x180 - 0.10923082387788077 * var_x106 - 0.0047333357013748341 * var_x165 - 0.067441598678245382 * var_x177 - 19744.697669435584 * var_x28 - 19744.697669435584 * var_x36 - 19744.697669435584 * var_x54 - 19744.697669435584 * var_x96 - 0.0012002507934716956 * var_x129 - 0.0060012539673584778 * var_x99 - 430.46969386115654 * var_x145 - var_x123 * var_x125 - var_x133 * var_chaste_interface__i_Kr_s_xr_gate__xr - var_x164 * var_chaste_interface__i_Kto_s_r2_gate__r2 - var_x174 * var_x176;
        }
        else
        {
            const double y_save = rY[0];
            rY[0] += delta;
            const double temp = EvaluateYDerivative0(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[0])/delta;
            rY[0] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative1(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.207812
        double var_chaste_interface__ion_concentrations__Ca_i = rY[1];
        // Units: millimolar; Initial value: 8.8787034e-05
        double var_chaste_interface__CaSRup__CaSRup = rY[45];
        // Units: millimolar; Initial value: 1.0200296
        double var_chaste_interface__ion_concentrations__Na_t = rY[47];
        // Units: millimolar; Initial value: 139.93239
        double var_chaste_interface__ion_concentrations__Ca_t = rY[48];
        // Units: millimolar; Initial value: 1.8476402
        double var_chaste_interface__ion_concentrations__Na_i = rY[50];
        // Units: millimolar; Initial value: 11.120279
        double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
        // Units: millimolar; Initial value: 9.5977033e-05
        double var_chaste_interface__ion_concentrations__BTRH = rY[52];
        // Units: millimolar; Initial value: 0.96700747
        double var_chaste_interface__ion_concentrations__BTRL = rY[53];
        // Units: millimolar; Initial value: 0.081740868
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

        // Mathematics
        const double var_ion_concentrations__dBTRH = -0.070000000000000007 * var_chaste_interface__ion_concentrations__BTRH + 20000.0 * (1.0 - var_chaste_interface__ion_concentrations__BTRH) * var_chaste_interface__ion_concentrations__Ca_i; // millimolar_per_second
        const double var_ion_concentrations__dBTRL = -40.0 * var_chaste_interface__ion_concentrations__BTRL + 40000.0 * (1.0 - var_chaste_interface__ion_concentrations__BTRL) * var_chaste_interface__ion_concentrations__Ca_i; // millimolar_per_second
        const double var_JCaSRleak__JCaSRleak = 5.6642074536489521e-13 * (-var_chaste_interface__ion_concentrations__Ca_i + var_chaste_interface__CaSRup__CaSRup) * mParameters[0]; // millimolar_per_second
        const double var_JCaSRup__JCaSRup = 1.757857485615192e-8 * pow(var_chaste_interface__ion_concentrations__Ca_i, 2) * mParameters[2] / (2.4999999999999999e-7 + pow(var_chaste_interface__ion_concentrations__Ca_i, 2)); // millimolar_per_second
        const double var_JCad__JCad = 3.1250799744270079e-6 * var_chaste_interface__ion_concentrations__Ca_ss - 3.1250799744270079e-6 * var_chaste_interface__ion_concentrations__Ca_i; // millimolar_per_second
        const double var_i_Cab_s__i_Cab_s = 1.0637989620002672e-7 * var_chaste_interface__Vm_s__Vm_s - 1.4199235782429474e-6 * log(1.8 / var_chaste_interface__ion_concentrations__Ca_i); // microA
        const double var_i_Cab_t__i_Cab_t = 1.1805026455952333e-7 * var_chaste_interface__Vm_t__Vm_t - 1.5756957851387983e-6 * log(var_chaste_interface__ion_concentrations__Ca_t / var_chaste_interface__ion_concentrations__Ca_i); // microA
        const double var_i_NaCa_s__i_NaCa_s = 5.0657093428584157e-5 * (-2744000.0 * var_chaste_interface__ion_concentrations__Ca_i + 1.8 * pow(var_chaste_interface__ion_concentrations__Na_i, 3) * _lt_0_row[0]) * mParameters[11] * _lt_0_row[9] / (1.0 + 0.0001 * (2744000.0 * var_chaste_interface__ion_concentrations__Ca_i + 1.8 * pow(var_chaste_interface__ion_concentrations__Na_i, 3) * _lt_0_row[0]) * _lt_0_row[9]); // microA
        const double var_i_NaCa_t__i_NaCa_t = 5.6214411695011118e-5 * (-pow(var_chaste_interface__ion_concentrations__Na_t, 3) * var_chaste_interface__ion_concentrations__Ca_i + pow(var_chaste_interface__ion_concentrations__Na_i, 3) * var_chaste_interface__ion_concentrations__Ca_t * exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t)) * mParameters[11] * exp(-0.03184076705096852 * var_chaste_interface__Vm_t__Vm_t) / (1.0 + 0.0001 * (pow(var_chaste_interface__ion_concentrations__Na_t, 3) * var_chaste_interface__ion_concentrations__Ca_i + pow(var_chaste_interface__ion_concentrations__Na_i, 3) * var_chaste_interface__ion_concentrations__Ca_t * exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t)) * exp(-0.03184076705096852 * var_chaste_interface__Vm_t__Vm_t)); // microA
        const double var_i_pCa_s__i_pCa_s = 9.8321784713707638e-5 * var_chaste_interface__ion_concentrations__Ca_i / (0.00050000000000000001 + var_chaste_interface__ion_concentrations__Ca_i); // microA
        const double var_i_pCa_t__i_pCa_t = 2.4580446178426913e-5 * var_chaste_interface__ion_concentrations__Ca_i / (0.00050000000000000001 + var_chaste_interface__ion_concentrations__Ca_i); // microA
        const double d_dt_chaste_interface_var_ion_concentrations__Ca_i = 0.001 * (1061.1127405703633 * var_i_NaCa_s__i_NaCa_s + 1061.1127405703633 * var_i_NaCa_t__i_NaCa_t + 102397379.46504006 * var_JCaSRleak__JCaSRleak + 102397379.46504006 * var_JCad__JCad - 0.070000000000000007 * var_ion_concentrations__dBTRL - 0.14000000000000001 * var_ion_concentrations__dBTRH - 530.55637028518163 * var_i_Cab_s__i_Cab_s - 530.55637028518163 * var_i_Cab_t__i_Cab_t - 530.55637028518163 * var_i_pCa_s__i_pCa_s - 530.55637028518163 * var_i_pCa_t__i_pCa_t - 102397379.46504006 * var_JCaSRup__JCaSRup) / (1.0 + 0.00011900000000000002 / pow((0.0023800000000000002 + var_chaste_interface__ion_concentrations__Ca_i), 2)); // millimolar / millisecond

        return d_dt_chaste_interface_var_ion_concentrations__Ca_i;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative1(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -85.207812
            double var_chaste_interface__ion_concentrations__Ca_i = rY[1];
            // Units: millimolar; Initial value: 8.8787034e-05
            double var_chaste_interface__CaSRup__CaSRup = rY[45];
            // Units: millimolar; Initial value: 1.0200296
            double var_chaste_interface__ion_concentrations__Na_t = rY[47];
            // Units: millimolar; Initial value: 139.93239
            double var_chaste_interface__ion_concentrations__Ca_t = rY[48];
            // Units: millimolar; Initial value: 1.8476402
            double var_chaste_interface__ion_concentrations__Na_i = rY[50];
            // Units: millimolar; Initial value: 11.120279
            double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
            // Units: millimolar; Initial value: 9.5977033e-05
            double var_chaste_interface__ion_concentrations__BTRH = rY[52];
            // Units: millimolar; Initial value: 0.96700747
            double var_chaste_interface__ion_concentrations__BTRL = rY[53];
            // Units: millimolar; Initial value: 0.081740868
            double var_chaste_interface__Vm_t__Vm_t = rY[54];
            // Units: millivolt; Initial value: -85.208034
            

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

            const double var_x3 = pow(var_chaste_interface__ion_concentrations__Ca_i, 3);
            const double var_x17 = 0.037459725942315905 * var_chaste_interface__Vm_s__Vm_s;
            const double var_x18 = exp(var_x17);
            const double var_x146 = 2744000.0 * var_chaste_interface__ion_concentrations__Ca_i;
            const double var_x147 = pow(var_chaste_interface__ion_concentrations__Na_i, 3);
            const double var_x148 = var_x147 * var_x18;
            const double var_x149 = 1.8 * var_x148;
            const double var_x150 = var_x149 - var_x146;
            const double var_x151 = _lt_0_row[9];
            const double var_x152 = 1.0 + 0.0001 * var_x151 * (var_x146 + var_x149);
            const double var_x153 = 1 / var_x152;
            const double var_x154 = var_x151 * mParameters[11];
            const double var_x155 = var_x153 * var_x154;
            const double var_x156 = var_x150 * var_x155;
            const double var_x170 = var_x150 / pow(var_x152, 2);
            const double var_x181 = 1 / var_chaste_interface__ion_concentrations__Ca_i;
            const double var_x182 = 0.00050000000000000001 + var_chaste_interface__ion_concentrations__Ca_i;
            const double var_x183 = 1 / var_x182;
            const double var_x192 = var_chaste_interface__ion_concentrations__Ca_i / pow(var_x182, 2);
            const double var_x193 = var_x170 * pow(var_x151, 2) * mParameters[11];
            const double var_x281 = 0.0023800000000000002 + var_chaste_interface__ion_concentrations__Ca_i;
            const double var_x282 = 1.0 + 0.00011900000000000002 / pow(var_x281, 2);
            const double var_x283 = 1 / var_x282;
            const double var_x284 = 0.001 * var_x283;
            const double var_x285 = 5.8e-5 * mParameters[0];
            const double var_x286 = 0.065206561522082235 * var_x183;
            const double var_x287 = 3.6000000000000001 * mParameters[2];
            const double var_x288 = pow(var_chaste_interface__ion_concentrations__Ca_i, 2);
            const double var_x289 = 2.4999999999999999e-7 + var_x288;
            const double var_x290 = var_x3 / pow(var_x289, 2);
            const double var_x291 = 1 / var_x289;
            const double var_x292 = var_x291 * var_chaste_interface__ion_concentrations__Ca_i;
            const double var_x293 = pow(var_chaste_interface__ion_concentrations__Na_t, 3);
            const double var_x294 = var_x293 * mParameters[11];
            const double var_x295 = exp(-0.03184076705096852 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x296 = var_x293 * var_chaste_interface__ion_concentrations__Ca_i;
            const double var_x297 = 0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x298 = exp(var_x297);
            const double var_x299 = var_x147 * var_x298;
            const double var_x300 = var_x299 * var_chaste_interface__ion_concentrations__Ca_t;
            const double var_x301 = 1.0 + 0.0001 * var_x295 * (var_x296 + var_x300);
            const double var_x302 = var_x295 / var_x301;
            const double var_x303 = 0.059649828453243924 * var_x302;
            const double var_x304 = pow(var_x301, (-2));
            const double var_x305 = var_x304 * pow(var_x295, 2);
            const double var_x306 = 5.9649828453243924e-6 * var_x305;
            const double var_x307 = var_x300 - var_x296;
            const double var_x308 = var_x294 * var_x307;
            const double var_x309 = 2800.0000000000005 * var_chaste_interface__ion_concentrations__Ca_i;
            const double var_x310 = var_x307 * mParameters[11];
            
            partialF = var_x284 * (-5920.0000000000009 - var_x285 - var_x286 + 0.065206561522082235 * var_x192 + 2800.0000000000005 * var_chaste_interface__ion_concentrations__BTRH + 2800.0000000000005 * var_chaste_interface__ion_concentrations__BTRL - 147497.92257924416 * var_x155 - 0.0015893449361918256 * var_x181 - 14.749792257924415 * var_x193 + var_x287 * var_x290 - var_x287 * var_x292 - var_x294 * var_x303 - var_x306 * var_x308) + 2.3800000000000004e-7 * (2.8000000000000003 * var_chaste_interface__ion_concentrations__BTRL + 320.0 * var_chaste_interface__ion_concentrations__Ca_ss + 0.00075334949975492521 * log(1.8 * var_x181) + 0.0098000000000000014 * var_chaste_interface__ion_concentrations__BTRH + 0.00083599543643690026 * log(var_x181 * var_chaste_interface__ion_concentrations__Ca_t) + 0.053752887237333874 * var_x156 - 320.0 * var_chaste_interface__ion_concentrations__Ca_i - 6.263231987590611e-5 * var_chaste_interface__Vm_t__Vm_t - 5.6440531599200561e-5 * var_chaste_interface__Vm_s__Vm_s + var_x285 * (-var_chaste_interface__ion_concentrations__Ca_i + var_chaste_interface__CaSRup__CaSRup) + var_x303 * var_x310 - var_x286 * var_chaste_interface__ion_concentrations__Ca_i - var_x309 * (1.0 - var_chaste_interface__ion_concentrations__BTRH) - var_x309 * (1.0 - var_chaste_interface__ion_concentrations__BTRL) - 1.8 * var_x288 * var_x291 * mParameters[2]) / (pow(var_x281, 3) * pow(var_x282, 2));
        }
        else
        {
            const double y_save = rY[1];
            rY[1] += delta;
            const double temp = EvaluateYDerivative1(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[1])/delta;
            rY[1] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative2(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.207812
        double var_chaste_interface__i_Na_s_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.0034130493
        

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

        // Mathematics
        const double d_dt_chaste_interface_var_i_Na_s_m_gate__m = 0.001 * (-var_chaste_interface__i_Na_s_m_gate__m + _lt_0_row[21]) / (_lt_0_row[22]); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Na_s_m_gate__m;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative2(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -85.207812
            


            const double var_x324 = exp(-0.0717 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x325 = exp(0.1135 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x326 = 1 / (0.022679999999999999 * var_x324 + 101.59999999999999 * var_x325);
            const double var_x327 = 1 / (2.070393374741201e-5 + 0.00020703933747412008 * var_x326);
            
            partialF = -0.001 * var_x327;
        }
        else
        {
            const double y_save = rY[2];
            rY[2] += delta;
            const double temp = EvaluateYDerivative2(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[2])/delta;
            rY[2] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative3(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.207812
        double var_chaste_interface__i_Na_s_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.82699973
        


        // Mathematics
        const double d_dt_chaste_interface_var_i_Na_s_h_gate__h = 0.001 * (-var_chaste_interface__i_Na_s_h_gate__h + 0.01 * mParameters[6] + (1.0 - 0.01 * mParameters[6]) / (1.0 + exp(13.927272727272726 + 0.18181818181818182 * var_chaste_interface__Vm_s__Vm_s - 0.18181818181818182 * mParameters[7]))) / (0.00010351966873706004 + 0.00020703933747412008 / (1.1381e-6 * exp(0.1017 * mParameters[7] - 0.1017 * var_chaste_interface__Vm_s__Vm_s) + 6.5369999999999999 * exp(0.080159999999999995 * var_chaste_interface__Vm_s__Vm_s - 0.080159999999999995 * mParameters[7]))); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Na_s_h_gate__h;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative3(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -85.207812
            


            const double var_x328 = exp(0.1017 * mParameters[7] - 0.1017 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x329 = exp(0.080159999999999995 * var_chaste_interface__Vm_s__Vm_s - 0.080159999999999995 * mParameters[7]);
            const double var_x330 = 1 / (1.1381e-6 * var_x328 + 6.5369999999999999 * var_x329);
            const double var_x335 = 1 / (0.00010351966873706004 + 0.00020703933747412008 * var_x330);
            
            partialF = -0.001 * var_x335;
        }
        else
        {
            const double y_save = rY[3];
            rY[3] += delta;
            const double temp = EvaluateYDerivative3(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[3])/delta;
            rY[3] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative4(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_Na_t_m_gate__m = rY[4];
        // Units: dimensionless; Initial value: 0.0034129472
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        


        // Mathematics
        const double d_dt_chaste_interface_var_i_Na_t_m_gate__m = 0.001 * (-var_chaste_interface__i_Na_t_m_gate__m + 1 / (1.0 + exp(-5.8378378378378377 - 0.13513513513513511 * var_chaste_interface__Vm_t__Vm_t))) / (2.070393374741201e-5 + 0.00020703933747412008 / (0.022679999999999999 * exp(-0.0717 * var_chaste_interface__Vm_t__Vm_t) + 101.59999999999999 * exp(0.1135 * var_chaste_interface__Vm_t__Vm_t))); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Na_t_m_gate__m;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative4(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_t__Vm_t = rY[54];
            // Units: millivolt; Initial value: -85.208034
            


            const double var_x336 = exp(-0.0717 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x337 = exp(0.1135 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x338 = 1 / (0.022679999999999999 * var_x336 + 101.59999999999999 * var_x337);
            const double var_x339 = 1 / (2.070393374741201e-5 + 0.00020703933747412008 * var_x338);
            
            partialF = -0.001 * var_x339;
        }
        else
        {
            const double y_save = rY[4];
            rY[4] += delta;
            const double temp = EvaluateYDerivative4(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[4])/delta;
            rY[4] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative5(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_Na_t_h_gate__h = rY[5];
        // Units: dimensionless; Initial value: 0.82700551
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        


        // Mathematics
        const double d_dt_chaste_interface_var_i_Na_t_h_gate__h = 0.001 * (-var_chaste_interface__i_Na_t_h_gate__h + 1 / (1.0 + exp(13.927272727272726 + 0.18181818181818182 * var_chaste_interface__Vm_t__Vm_t))) / (0.00010351966873706004 + 0.00020703933747412008 / (1.1381e-6 * exp(-0.1017 * var_chaste_interface__Vm_t__Vm_t) + 6.5369999999999999 * exp(0.080159999999999995 * var_chaste_interface__Vm_t__Vm_t))); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Na_t_h_gate__h;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative5(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_t__Vm_t = rY[54];
            // Units: millivolt; Initial value: -85.208034
            


            const double var_x342 = exp(-0.1017 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x343 = exp(0.080159999999999995 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x344 = 1 / (1.1381e-6 * var_x342 + 6.5369999999999999 * var_x343);
            const double var_x345 = 1 / (0.00010351966873706004 + 0.00020703933747412008 * var_x344);
            
            partialF = -0.001 * var_x345;
        }
        else
        {
            const double y_save = rY[5];
            rY[5] += delta;
            const double temp = EvaluateYDerivative5(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[5])/delta;
            rY[5] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative6(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.207812
        double var_chaste_interface__i_CaL_s__Cst = rY[6];
        // Units: dimensionless; Initial value: 0.99797984
        double var_chaste_interface__i_CaL_s__C1 = rY[7];
        // Units: dimensionless; Initial value: 7.5722514e-05
        double var_chaste_interface__i_CaL_s__Ccast = rY[12];
        // Units: dimensionless; Initial value: 0.0019155065
        double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
        // Units: millimolar; Initial value: 9.5977033e-05
        

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

        // Mathematics
        const double var_i_CaL_s__alfas = _lt_0_row[12]; // per_second
        const double var_i_CaL_s__betas = _lt_0_row[13]; // per_second
        const double var_i_CaL_s__gama = 187.5 * var_chaste_interface__ion_concentrations__Ca_ss; // per_second
        const double d_dt_chaste_interface_var_i_CaL_s__Cst = 0.01 * var_chaste_interface__i_CaL_s__Ccast + 0.001 * var_chaste_interface__i_CaL_s__C1 * var_i_CaL_s__betas - 0.001 * (4.0 * var_i_CaL_s__alfas + var_i_CaL_s__gama) * var_chaste_interface__i_CaL_s__Cst; // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_s__Cst;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative6(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -85.207812
            double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
            // Units: millimolar; Initial value: 9.5977033e-05
            


            const double var_x350 = 0.10000000000000001 * var_chaste_interface__Vm_s__Vm_s;
            const double var_x351 = exp(1.2 + var_x350);
            const double var_x354 = 0.1875 * var_chaste_interface__ion_concentrations__Ca_ss;
            const double var_x355 = -var_x354;
            const double var_x356 = 1.6000000000000001 * var_x351;
            const double var_x357 = -var_x356;
            
            partialF = var_x355 + var_x357;
        }
        else
        {
            const double y_save = rY[6];
            rY[6] += delta;
            const double temp = EvaluateYDerivative6(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[6])/delta;
            rY[6] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative7(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.207812
        double var_chaste_interface__i_CaL_s__Cst = rY[6];
        // Units: dimensionless; Initial value: 0.99797984
        double var_chaste_interface__i_CaL_s__C1 = rY[7];
        // Units: dimensionless; Initial value: 7.5722514e-05
        double var_chaste_interface__i_CaL_s__C2 = rY[8];
        // Units: dimensionless; Initial value: 2.1545646e-09
        double var_chaste_interface__i_CaL_s__Cca1 = rY[13];
        // Units: dimensionless; Initial value: 5.8135383e-07
        double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
        // Units: millimolar; Initial value: 9.5977033e-05
        

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

        // Mathematics
        const double var_i_CaL_s__alfas = _lt_0_row[12]; // per_second
        const double var_i_CaL_s__betas = _lt_0_row[13]; // per_second
        const double var_i_CaL_s__gama = 187.5 * var_chaste_interface__ion_concentrations__Ca_ss; // per_second
        const double d_dt_chaste_interface_var_i_CaL_s__C1 = 0.0050000000000000001 * var_chaste_interface__i_CaL_s__Cca1 + 0.002 * var_chaste_interface__i_CaL_s__C2 * var_i_CaL_s__betas + 0.0040000000000000001 * var_chaste_interface__i_CaL_s__Cst * var_i_CaL_s__alfas - 0.001 * (2.0 * var_i_CaL_s__gama + 3.0 * var_i_CaL_s__alfas + var_i_CaL_s__betas) * var_chaste_interface__i_CaL_s__C1; // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_s__C1;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative7(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -85.207812
            double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
            // Units: millimolar; Initial value: 9.5977033e-05
            


            const double var_x348 = exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x350 = 0.10000000000000001 * var_chaste_interface__Vm_s__Vm_s;
            const double var_x351 = exp(1.2 + var_x350);
            const double var_x358 = 0.050000000000000003 * var_x348;
            const double var_x362 = 0.375 * var_chaste_interface__ion_concentrations__Ca_ss;
            const double var_x363 = -var_x362;
            const double var_x364 = 1.2 * var_x351;
            const double var_x365 = -var_x358;
            
            partialF = var_x363 + var_x365 - var_x364;
        }
        else
        {
            const double y_save = rY[7];
            rY[7] += delta;
            const double temp = EvaluateYDerivative7(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[7])/delta;
            rY[7] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative8(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.207812
        double var_chaste_interface__i_CaL_s__C1 = rY[7];
        // Units: dimensionless; Initial value: 7.5722514e-05
        double var_chaste_interface__i_CaL_s__C2 = rY[8];
        // Units: dimensionless; Initial value: 2.1545646e-09
        double var_chaste_interface__i_CaL_s__C3 = rY[9];
        // Units: dimensionless; Initial value: 2.7463178e-14
        double var_chaste_interface__i_CaL_s__Cca2 = rY[14];
        // Units: dimensionless; Initial value: 6.615513e-11
        double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
        // Units: millimolar; Initial value: 9.5977033e-05
        

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

        // Mathematics
        const double var_i_CaL_s__alfas = _lt_0_row[12]; // per_second
        const double var_i_CaL_s__betas = _lt_0_row[13]; // per_second
        const double var_i_CaL_s__gama = 187.5 * var_chaste_interface__ion_concentrations__Ca_ss; // per_second
        const double d_dt_chaste_interface_var_i_CaL_s__C2 = 0.0025000000000000001 * var_chaste_interface__i_CaL_s__Cca2 + 0.0030000000000000001 * var_chaste_interface__i_CaL_s__C1 * var_i_CaL_s__alfas + 0.0030000000000000001 * var_chaste_interface__i_CaL_s__C3 * var_i_CaL_s__betas - 0.001 * (2.0 * var_i_CaL_s__alfas + 2.0 * var_i_CaL_s__betas + 4.0 * var_i_CaL_s__gama) * var_chaste_interface__i_CaL_s__C2; // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_s__C2;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative8(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -85.207812
            double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
            // Units: millimolar; Initial value: 9.5977033e-05
            


            const double var_x348 = exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x350 = 0.10000000000000001 * var_chaste_interface__Vm_s__Vm_s;
            const double var_x351 = exp(1.2 + var_x350);
            const double var_x366 = 0.10000000000000001 * var_x348;
            const double var_x370 = 0.75 * var_chaste_interface__ion_concentrations__Ca_ss;
            const double var_x371 = -var_x370;
            const double var_x372 = -var_x366;
            const double var_x373 = 0.80000000000000004 * var_x351;
            const double var_x374 = -var_x373;
            
            partialF = var_x371 + var_x372 + var_x374;
        }
        else
        {
            const double y_save = rY[8];
            rY[8] += delta;
            const double temp = EvaluateYDerivative8(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[8])/delta;
            rY[8] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative9(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.207812
        double var_chaste_interface__i_CaL_s__C2 = rY[8];
        // Units: dimensionless; Initial value: 2.1545646e-09
        double var_chaste_interface__i_CaL_s__C3 = rY[9];
        // Units: dimensionless; Initial value: 2.7463178e-14
        double var_chaste_interface__i_CaL_s__C4 = rY[10];
        // Units: dimensionless; Initial value: -5.7569102e-17
        double var_chaste_interface__i_CaL_s__Cca3 = rY[15];
        // Units: dimensionless; Initial value: 3.3426555e-15
        double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
        // Units: millimolar; Initial value: 9.5977033e-05
        

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

        // Mathematics
        const double var_i_CaL_s__alfas = _lt_0_row[12]; // per_second
        const double var_i_CaL_s__betas = _lt_0_row[13]; // per_second
        const double var_i_CaL_s__gama = 187.5 * var_chaste_interface__ion_concentrations__Ca_ss; // per_second
        const double d_dt_chaste_interface_var_i_CaL_s__C3 = 0.00125 * var_chaste_interface__i_CaL_s__Cca3 + 0.002 * var_chaste_interface__i_CaL_s__C2 * var_i_CaL_s__alfas + 0.0040000000000000001 * var_chaste_interface__i_CaL_s__C4 * var_i_CaL_s__betas - 0.001 * (8.0 * var_i_CaL_s__gama + 3.0 * var_i_CaL_s__betas + var_i_CaL_s__alfas) * var_chaste_interface__i_CaL_s__C3; // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_s__C3;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative9(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -85.207812
            double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
            // Units: millimolar; Initial value: 9.5977033e-05
            


            const double var_x348 = exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x350 = 0.10000000000000001 * var_chaste_interface__Vm_s__Vm_s;
            const double var_x351 = exp(1.2 + var_x350);
            const double var_x375 = 0.14999999999999999 * var_x348;
            const double var_x379 = 1.5 * var_chaste_interface__ion_concentrations__Ca_ss;
            const double var_x380 = -var_x379;
            const double var_x381 = 0.40000000000000002 * var_x351;
            
            partialF = var_x380 - var_x375 - var_x381;
        }
        else
        {
            const double y_save = rY[9];
            rY[9] += delta;
            const double temp = EvaluateYDerivative9(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[9])/delta;
            rY[9] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative10(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.207812
        double var_chaste_interface__i_CaL_s__C3 = rY[9];
        // Units: dimensionless; Initial value: 2.7463178e-14
        double var_chaste_interface__i_CaL_s__C4 = rY[10];
        // Units: dimensionless; Initial value: -5.7569102e-17
        double var_chaste_interface__i_CaL_s__Co = rY[11];
        // Units: dimensionless; Initial value: -1.3496934e-17
        double var_chaste_interface__i_CaL_s__Cca4 = rY[16];
        // Units: dimensionless; Initial value: 4.6640361e-19
        double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
        // Units: millimolar; Initial value: 9.5977033e-05
        

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

        // Mathematics
        const double var_i_CaL_s__alfas = _lt_0_row[12]; // per_second
        const double var_i_CaL_s__betas = _lt_0_row[13]; // per_second
        const double var_i_CaL_s__gama = 187.5 * var_chaste_interface__ion_concentrations__Ca_ss; // per_second
        const double d_dt_chaste_interface_var_i_CaL_s__C4 = 2.0 * var_chaste_interface__i_CaL_s__Co + 0.00062500000000000001 * var_chaste_interface__i_CaL_s__Cca4 + 0.001 * var_chaste_interface__i_CaL_s__C3 * var_i_CaL_s__alfas - 0.001 * (300.0 + 4.0 * var_i_CaL_s__betas + 16.0 * var_i_CaL_s__gama) * var_chaste_interface__i_CaL_s__C4; // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_s__C4;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative10(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -85.207812
            double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
            // Units: millimolar; Initial value: 9.5977033e-05
            


            const double var_x348 = exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x382 = 0.20000000000000001 * var_x348;
            const double var_x384 = 3.0 * var_chaste_interface__ion_concentrations__Ca_ss;
            const double var_x385 = -0.29999999999999999 - var_x384;
            
            partialF = var_x385 - var_x382;
        }
        else
        {
            const double y_save = rY[10];
            rY[10] += delta;
            const double temp = EvaluateYDerivative10(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[10])/delta;
            rY[10] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative11(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_CaL_s__C4 = rY[10];
        // Units: dimensionless; Initial value: -5.7569102e-17
        double var_chaste_interface__i_CaL_s__Co = rY[11];
        // Units: dimensionless; Initial value: -1.3496934e-17
        


        // Mathematics
        const double d_dt_chaste_interface_var_i_CaL_s__Co = 0.29999999999999999 * var_chaste_interface__i_CaL_s__C4 - 2.0 * var_chaste_interface__i_CaL_s__Co; // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_s__Co;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative11(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            


            
            partialF = -2.0;
        }
        else
        {
            const double y_save = rY[11];
            rY[11] += delta;
            const double temp = EvaluateYDerivative11(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[11])/delta;
            rY[11] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative12(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.207812
        double var_chaste_interface__i_CaL_s__Cst = rY[6];
        // Units: dimensionless; Initial value: 0.99797984
        double var_chaste_interface__i_CaL_s__Ccast = rY[12];
        // Units: dimensionless; Initial value: 0.0019155065
        double var_chaste_interface__i_CaL_s__Cca1 = rY[13];
        // Units: dimensionless; Initial value: 5.8135383e-07
        double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
        // Units: millimolar; Initial value: 9.5977033e-05
        

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

        // Mathematics
        const double var_i_CaL_s__alfas = _lt_0_row[12]; // per_second
        const double var_i_CaL_s__alfa2s = 2.0 * var_i_CaL_s__alfas; // per_second
        const double var_i_CaL_s__betas = _lt_0_row[13]; // per_second
        const double var_i_CaL_s__beta2s = 0.5 * var_i_CaL_s__betas; // per_second
        const double var_i_CaL_s__gama = 187.5 * var_chaste_interface__ion_concentrations__Ca_ss; // per_second
        const double d_dt_chaste_interface_var_i_CaL_s__Ccast = 0.001 * var_chaste_interface__i_CaL_s__Cca1 * var_i_CaL_s__beta2s + 0.001 * var_chaste_interface__i_CaL_s__Cst * var_i_CaL_s__gama - 0.001 * (10.0 + 4.0 * var_i_CaL_s__alfa2s) * var_chaste_interface__i_CaL_s__Ccast; // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_s__Ccast;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative12(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -85.207812
            


            const double var_x350 = 0.10000000000000001 * var_chaste_interface__Vm_s__Vm_s;
            const double var_x351 = exp(1.2 + var_x350);
            const double var_x389 = 3.2000000000000002 * var_x351;
            
            partialF = -0.01 - var_x389;
        }
        else
        {
            const double y_save = rY[12];
            rY[12] += delta;
            const double temp = EvaluateYDerivative12(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[12])/delta;
            rY[12] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative13(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.207812
        double var_chaste_interface__i_CaL_s__C1 = rY[7];
        // Units: dimensionless; Initial value: 7.5722514e-05
        double var_chaste_interface__i_CaL_s__Ccast = rY[12];
        // Units: dimensionless; Initial value: 0.0019155065
        double var_chaste_interface__i_CaL_s__Cca1 = rY[13];
        // Units: dimensionless; Initial value: 5.8135383e-07
        double var_chaste_interface__i_CaL_s__Cca2 = rY[14];
        // Units: dimensionless; Initial value: 6.615513e-11
        double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
        // Units: millimolar; Initial value: 9.5977033e-05
        

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

        // Mathematics
        const double var_i_CaL_s__alfas = _lt_0_row[12]; // per_second
        const double var_i_CaL_s__alfa2s = 2.0 * var_i_CaL_s__alfas; // per_second
        const double var_i_CaL_s__betas = _lt_0_row[13]; // per_second
        const double var_i_CaL_s__beta2s = 0.5 * var_i_CaL_s__betas; // per_second
        const double var_i_CaL_s__gama = 187.5 * var_chaste_interface__ion_concentrations__Ca_ss; // per_second
        const double d_dt_chaste_interface_var_i_CaL_s__Cca1 = 0.002 * var_chaste_interface__i_CaL_s__C1 * var_i_CaL_s__gama + 0.002 * var_chaste_interface__i_CaL_s__Cca2 * var_i_CaL_s__beta2s + 0.0040000000000000001 * var_chaste_interface__i_CaL_s__Ccast * var_i_CaL_s__alfa2s - 0.001 * (5.0 + 3.0 * var_i_CaL_s__alfa2s + var_i_CaL_s__beta2s) * var_chaste_interface__i_CaL_s__Cca1; // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_s__Cca1;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative13(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -85.207812
            


            const double var_x348 = exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x350 = 0.10000000000000001 * var_chaste_interface__Vm_s__Vm_s;
            const double var_x351 = exp(1.2 + var_x350);
            const double var_x390 = 0.025000000000000001 * var_x348;
            const double var_x392 = 2.3999999999999999 * var_x351;
            
            partialF = -0.0050000000000000001 - var_x390 - var_x392;
        }
        else
        {
            const double y_save = rY[13];
            rY[13] += delta;
            const double temp = EvaluateYDerivative13(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[13])/delta;
            rY[13] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative14(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.207812
        double var_chaste_interface__i_CaL_s__C2 = rY[8];
        // Units: dimensionless; Initial value: 2.1545646e-09
        double var_chaste_interface__i_CaL_s__Cca1 = rY[13];
        // Units: dimensionless; Initial value: 5.8135383e-07
        double var_chaste_interface__i_CaL_s__Cca2 = rY[14];
        // Units: dimensionless; Initial value: 6.615513e-11
        double var_chaste_interface__i_CaL_s__Cca3 = rY[15];
        // Units: dimensionless; Initial value: 3.3426555e-15
        double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
        // Units: millimolar; Initial value: 9.5977033e-05
        

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

        // Mathematics
        const double var_i_CaL_s__alfas = _lt_0_row[12]; // per_second
        const double var_i_CaL_s__alfa2s = 2.0 * var_i_CaL_s__alfas; // per_second
        const double var_i_CaL_s__betas = _lt_0_row[13]; // per_second
        const double var_i_CaL_s__beta2s = 0.5 * var_i_CaL_s__betas; // per_second
        const double var_i_CaL_s__gama = 187.5 * var_chaste_interface__ion_concentrations__Ca_ss; // per_second
        const double d_dt_chaste_interface_var_i_CaL_s__Cca2 = 0.0040000000000000001 * var_chaste_interface__i_CaL_s__C2 * var_i_CaL_s__gama + 0.0030000000000000001 * var_chaste_interface__i_CaL_s__Cca1 * var_i_CaL_s__alfa2s + 0.0030000000000000001 * var_chaste_interface__i_CaL_s__Cca3 * var_i_CaL_s__beta2s - 0.001 * (2.5 + 2.0 * var_i_CaL_s__alfa2s + 2.0 * var_i_CaL_s__beta2s) * var_chaste_interface__i_CaL_s__Cca2; // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_s__Cca2;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative14(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -85.207812
            


            const double var_x348 = exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x350 = 0.10000000000000001 * var_chaste_interface__Vm_s__Vm_s;
            const double var_x351 = exp(1.2 + var_x350);
            const double var_x356 = 1.6000000000000001 * var_x351;
            const double var_x357 = -var_x356;
            const double var_x358 = 0.050000000000000003 * var_x348;
            const double var_x365 = -var_x358;
            
            partialF = -0.0025000000000000001 + var_x357 + var_x365;
        }
        else
        {
            const double y_save = rY[14];
            rY[14] += delta;
            const double temp = EvaluateYDerivative14(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[14])/delta;
            rY[14] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative15(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.207812
        double var_chaste_interface__i_CaL_s__C3 = rY[9];
        // Units: dimensionless; Initial value: 2.7463178e-14
        double var_chaste_interface__i_CaL_s__Cca2 = rY[14];
        // Units: dimensionless; Initial value: 6.615513e-11
        double var_chaste_interface__i_CaL_s__Cca3 = rY[15];
        // Units: dimensionless; Initial value: 3.3426555e-15
        double var_chaste_interface__i_CaL_s__Cca4 = rY[16];
        // Units: dimensionless; Initial value: 4.6640361e-19
        double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
        // Units: millimolar; Initial value: 9.5977033e-05
        

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

        // Mathematics
        const double var_i_CaL_s__alfas = _lt_0_row[12]; // per_second
        const double var_i_CaL_s__alfa2s = 2.0 * var_i_CaL_s__alfas; // per_second
        const double var_i_CaL_s__betas = _lt_0_row[13]; // per_second
        const double var_i_CaL_s__beta2s = 0.5 * var_i_CaL_s__betas; // per_second
        const double var_i_CaL_s__gama = 187.5 * var_chaste_interface__ion_concentrations__Ca_ss; // per_second
        const double d_dt_chaste_interface_var_i_CaL_s__Cca3 = 0.002 * var_chaste_interface__i_CaL_s__Cca2 * var_i_CaL_s__alfa2s + 0.0040000000000000001 * var_chaste_interface__i_CaL_s__Cca4 * var_i_CaL_s__beta2s + 0.0080000000000000002 * var_chaste_interface__i_CaL_s__C3 * var_i_CaL_s__gama - 0.001 * (1.25 + 3.0 * var_i_CaL_s__beta2s + var_i_CaL_s__alfa2s) * var_chaste_interface__i_CaL_s__Cca3; // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_s__Cca3;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative15(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -85.207812
            


            const double var_x348 = exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x350 = 0.10000000000000001 * var_chaste_interface__Vm_s__Vm_s;
            const double var_x351 = exp(1.2 + var_x350);
            const double var_x373 = 0.80000000000000004 * var_x351;
            const double var_x374 = -var_x373;
            const double var_x393 = 0.074999999999999997 * var_x348;
            
            partialF = -0.00125 + var_x374 - var_x393;
        }
        else
        {
            const double y_save = rY[15];
            rY[15] += delta;
            const double temp = EvaluateYDerivative15(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[15])/delta;
            rY[15] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative16(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.207812
        double var_chaste_interface__i_CaL_s__C4 = rY[10];
        // Units: dimensionless; Initial value: -5.7569102e-17
        double var_chaste_interface__i_CaL_s__Cca3 = rY[15];
        // Units: dimensionless; Initial value: 3.3426555e-15
        double var_chaste_interface__i_CaL_s__Cca4 = rY[16];
        // Units: dimensionless; Initial value: 4.6640361e-19
        double var_chaste_interface__i_CaL_s__Ccao = rY[17];
        // Units: dimensionless; Initial value: 3.7986638e-22
        double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
        // Units: millimolar; Initial value: 9.5977033e-05
        

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

        // Mathematics
        const double var_i_CaL_s__alfas = _lt_0_row[12]; // per_second
        const double var_i_CaL_s__alfa2s = 2.0 * var_i_CaL_s__alfas; // per_second
        const double var_i_CaL_s__betas = _lt_0_row[13]; // per_second
        const double var_i_CaL_s__beta2s = 0.5 * var_i_CaL_s__betas; // per_second
        const double var_i_CaL_s__gama = 187.5 * var_chaste_interface__ion_concentrations__Ca_ss; // per_second
        const double d_dt_chaste_interface_var_i_CaL_s__Cca4 = 7.0 * var_chaste_interface__i_CaL_s__Ccao + 0.001 * var_chaste_interface__i_CaL_s__Cca3 * var_i_CaL_s__alfa2s + 0.016 * var_chaste_interface__i_CaL_s__C4 * var_i_CaL_s__gama - 0.001 * (5.625 + 4.0 * var_i_CaL_s__beta2s) * var_chaste_interface__i_CaL_s__Cca4; // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_s__Cca4;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative16(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -85.207812
            


            const double var_x348 = exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x366 = 0.10000000000000001 * var_x348;
            const double var_x372 = -var_x366;
            
            partialF = -0.0056249999999999998 + var_x372;
        }
        else
        {
            const double y_save = rY[16];
            rY[16] += delta;
            const double temp = EvaluateYDerivative16(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[16])/delta;
            rY[16] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative17(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_CaL_s__Cca4 = rY[16];
        // Units: dimensionless; Initial value: 4.6640361e-19
        double var_chaste_interface__i_CaL_s__Ccao = rY[17];
        // Units: dimensionless; Initial value: 3.7986638e-22
        


        // Mathematics
        const double d_dt_chaste_interface_var_i_CaL_s__Ccao = 0.0050000000000000001 * var_chaste_interface__i_CaL_s__Cca4 - 7.0 * var_chaste_interface__i_CaL_s__Ccao; // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_s__Ccao;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative17(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            


            
            partialF = -7.0;
        }
        else
        {
            const double y_save = rY[17];
            rY[17] += delta;
            const double temp = EvaluateYDerivative17(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[17])/delta;
            rY[17] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative18(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.207812
        double var_chaste_interface__i_CaL_s_y_gate__y = rY[18];
        // Units: dimensionless; Initial value: 0.78134852
        

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

        // Mathematics
        const double d_dt_chaste_interface_var_i_CaL_s_y_gate__y = 0.001 * (-var_chaste_interface__i_CaL_s_y_gate__y + _lt_0_row[14]) / (_lt_0_row[15]); // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_s_y_gate__y;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative18(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -85.207812
            


            const double var_x350 = 0.10000000000000001 * var_chaste_interface__Vm_s__Vm_s;
            const double var_x395 = exp(16.842105263157894 + 0.42105263157894735 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x396 = 1.0 + var_x395;
            const double var_x397 = 1 / var_x396;
            const double var_x398 = exp(-0.113569 * pow((1 + var_x350), 2));
            const double var_x399 = 1 / (0.02 + 0.019699999999999999 * var_x398);
            const double var_x402 = 1 / (0.001 * var_x399 + 0.55000000000000004 * var_x397);
            
            partialF = -0.001 * var_x402;
        }
        else
        {
            const double y_save = rY[18];
            rY[18] += delta;
            const double temp = EvaluateYDerivative18(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[18])/delta;
            rY[18] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative19(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_CaL_t__TCst = rY[19];
        // Units: dimensionless; Initial value: 0.99798934
        double var_chaste_interface__i_CaL_t__TC1 = rY[20];
        // Units: dimensionless; Initial value: 7.5720257e-05
        double var_chaste_interface__i_CaL_t__TCcast = rY[25];
        // Units: dimensionless; Initial value: 0.0019155245
        double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
        // Units: millimolar; Initial value: 9.5977033e-05
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        


        // Mathematics
        const double var_i_CaL_t__alfat = 400.0 * exp(1.2 + 0.10000000000000001 * var_chaste_interface__Vm_t__Vm_t); // per_second
        const double var_i_CaL_t__betat = 50.0 * exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__Vm_t__Vm_t); // per_second
        const double var_i_CaL_t__gama = 187.5 * var_chaste_interface__ion_concentrations__Ca_ss; // per_second
        const double d_dt_chaste_interface_var_i_CaL_t__TCst = 0.01 * var_chaste_interface__i_CaL_t__TCcast + 0.001 * var_chaste_interface__i_CaL_t__TC1 * var_i_CaL_t__betat - 0.001 * (4.0 * var_i_CaL_t__alfat + var_i_CaL_t__gama) * var_chaste_interface__i_CaL_t__TCst; // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_t__TCst;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative19(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
            // Units: millimolar; Initial value: 9.5977033e-05
            double var_chaste_interface__Vm_t__Vm_t = rY[54];
            // Units: millivolt; Initial value: -85.208034
            


            const double var_x354 = 0.1875 * var_chaste_interface__ion_concentrations__Ca_ss;
            const double var_x355 = -var_x354;
            const double var_x403 = 0.10000000000000001 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x404 = exp(1.2 + var_x403);
            const double var_x405 = 1.6000000000000001 * var_x404;
            const double var_x406 = -var_x405;
            
            partialF = var_x355 + var_x406;
        }
        else
        {
            const double y_save = rY[19];
            rY[19] += delta;
            const double temp = EvaluateYDerivative19(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[19])/delta;
            rY[19] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative20(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_CaL_t__TCst = rY[19];
        // Units: dimensionless; Initial value: 0.99798934
        double var_chaste_interface__i_CaL_t__TC1 = rY[20];
        // Units: dimensionless; Initial value: 7.5720257e-05
        double var_chaste_interface__i_CaL_t__TC2 = rY[21];
        // Units: dimensionless; Initial value: 2.1544156e-09
        double var_chaste_interface__i_CaL_t__TCca1 = rY[26];
        // Units: dimensionless; Initial value: 5.8133643e-07
        double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
        // Units: millimolar; Initial value: 9.5977033e-05
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        


        // Mathematics
        const double var_i_CaL_t__alfat = 400.0 * exp(1.2 + 0.10000000000000001 * var_chaste_interface__Vm_t__Vm_t); // per_second
        const double var_i_CaL_t__betat = 50.0 * exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__Vm_t__Vm_t); // per_second
        const double var_i_CaL_t__gama = 187.5 * var_chaste_interface__ion_concentrations__Ca_ss; // per_second
        const double d_dt_chaste_interface_var_i_CaL_t__TC1 = 0.0050000000000000001 * var_chaste_interface__i_CaL_t__TCca1 + 0.002 * var_chaste_interface__i_CaL_t__TC2 * var_i_CaL_t__betat + 0.0040000000000000001 * var_chaste_interface__i_CaL_t__TCst * var_i_CaL_t__alfat - 0.001 * (2.0 * var_i_CaL_t__gama + 3.0 * var_i_CaL_t__alfat + var_i_CaL_t__betat) * var_chaste_interface__i_CaL_t__TC1; // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_t__TC1;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative20(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
            // Units: millimolar; Initial value: 9.5977033e-05
            double var_chaste_interface__Vm_t__Vm_t = rY[54];
            // Units: millivolt; Initial value: -85.208034
            


            const double var_x362 = 0.375 * var_chaste_interface__ion_concentrations__Ca_ss;
            const double var_x363 = -var_x362;
            const double var_x403 = 0.10000000000000001 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x404 = exp(1.2 + var_x403);
            const double var_x407 = exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x408 = 0.050000000000000003 * var_x407;
            const double var_x413 = 1.2 * var_x404;
            const double var_x414 = -var_x408;
            
            partialF = var_x363 + var_x414 - var_x413;
        }
        else
        {
            const double y_save = rY[20];
            rY[20] += delta;
            const double temp = EvaluateYDerivative20(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[20])/delta;
            rY[20] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative21(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_CaL_t__TC1 = rY[20];
        // Units: dimensionless; Initial value: 7.5720257e-05
        double var_chaste_interface__i_CaL_t__TC2 = rY[21];
        // Units: dimensionless; Initial value: 2.1544156e-09
        double var_chaste_interface__i_CaL_t__TC3 = rY[22];
        // Units: dimensionless; Initial value: 2.7459475e-14
        double var_chaste_interface__i_CaL_t__TCca2 = rY[27];
        // Units: dimensionless; Initial value: 6.6150547e-11
        double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
        // Units: millimolar; Initial value: 9.5977033e-05
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        


        // Mathematics
        const double var_i_CaL_t__alfat = 400.0 * exp(1.2 + 0.10000000000000001 * var_chaste_interface__Vm_t__Vm_t); // per_second
        const double var_i_CaL_t__betat = 50.0 * exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__Vm_t__Vm_t); // per_second
        const double var_i_CaL_t__gama = 187.5 * var_chaste_interface__ion_concentrations__Ca_ss; // per_second
        const double d_dt_chaste_interface_var_i_CaL_t__TC2 = 0.0025000000000000001 * var_chaste_interface__i_CaL_t__TCca2 + 0.0030000000000000001 * var_chaste_interface__i_CaL_t__TC1 * var_i_CaL_t__alfat + 0.0030000000000000001 * var_chaste_interface__i_CaL_t__TC3 * var_i_CaL_t__betat - 0.001 * (2.0 * var_i_CaL_t__alfat + 2.0 * var_i_CaL_t__betat + 4.0 * var_i_CaL_t__gama) * var_chaste_interface__i_CaL_t__TC2; // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_t__TC2;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative21(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
            // Units: millimolar; Initial value: 9.5977033e-05
            double var_chaste_interface__Vm_t__Vm_t = rY[54];
            // Units: millivolt; Initial value: -85.208034
            


            const double var_x370 = 0.75 * var_chaste_interface__ion_concentrations__Ca_ss;
            const double var_x371 = -var_x370;
            const double var_x403 = 0.10000000000000001 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x404 = exp(1.2 + var_x403);
            const double var_x407 = exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x415 = 0.10000000000000001 * var_x407;
            const double var_x419 = -var_x415;
            const double var_x420 = 0.80000000000000004 * var_x404;
            const double var_x421 = -var_x420;
            
            partialF = var_x371 + var_x419 + var_x421;
        }
        else
        {
            const double y_save = rY[21];
            rY[21] += delta;
            const double temp = EvaluateYDerivative21(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[21])/delta;
            rY[21] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative22(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_CaL_t__TC2 = rY[21];
        // Units: dimensionless; Initial value: 2.1544156e-09
        double var_chaste_interface__i_CaL_t__TC3 = rY[22];
        // Units: dimensionless; Initial value: 2.7459475e-14
        double var_chaste_interface__i_CaL_t__TC4 = rY[23];
        // Units: dimensionless; Initial value: -5.7367189e-17
        double var_chaste_interface__i_CaL_t__TCca3 = rY[28];
        // Units: dimensionless; Initial value: 3.3423167e-15
        double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
        // Units: millimolar; Initial value: 9.5977033e-05
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        


        // Mathematics
        const double var_i_CaL_t__alfat = 400.0 * exp(1.2 + 0.10000000000000001 * var_chaste_interface__Vm_t__Vm_t); // per_second
        const double var_i_CaL_t__betat = 50.0 * exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__Vm_t__Vm_t); // per_second
        const double var_i_CaL_t__gama = 187.5 * var_chaste_interface__ion_concentrations__Ca_ss; // per_second
        const double d_dt_chaste_interface_var_i_CaL_t__TC3 = 0.00125 * var_chaste_interface__i_CaL_t__TCca3 + 0.002 * var_chaste_interface__i_CaL_t__TC2 * var_i_CaL_t__alfat + 0.0040000000000000001 * var_chaste_interface__i_CaL_t__TC4 * var_i_CaL_t__betat - 0.001 * (8.0 * var_i_CaL_t__gama + 3.0 * var_i_CaL_t__betat + var_i_CaL_t__alfat) * var_chaste_interface__i_CaL_t__TC3; // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_t__TC3;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative22(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
            // Units: millimolar; Initial value: 9.5977033e-05
            double var_chaste_interface__Vm_t__Vm_t = rY[54];
            // Units: millivolt; Initial value: -85.208034
            


            const double var_x379 = 1.5 * var_chaste_interface__ion_concentrations__Ca_ss;
            const double var_x380 = -var_x379;
            const double var_x403 = 0.10000000000000001 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x404 = exp(1.2 + var_x403);
            const double var_x407 = exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x422 = 0.14999999999999999 * var_x407;
            const double var_x426 = 0.40000000000000002 * var_x404;
            
            partialF = var_x380 - var_x422 - var_x426;
        }
        else
        {
            const double y_save = rY[22];
            rY[22] += delta;
            const double temp = EvaluateYDerivative22(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[22])/delta;
            rY[22] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative23(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_CaL_t__TC3 = rY[22];
        // Units: dimensionless; Initial value: 2.7459475e-14
        double var_chaste_interface__i_CaL_t__TC4 = rY[23];
        // Units: dimensionless; Initial value: -5.7367189e-17
        double var_chaste_interface__i_CaL_t__TCo = rY[24];
        // Units: dimensionless; Initial value: -1.3449454e-17
        double var_chaste_interface__i_CaL_t__TCca4 = rY[29];
        // Units: dimensionless; Initial value: 4.6165955e-19
        double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
        // Units: millimolar; Initial value: 9.5977033e-05
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        


        // Mathematics
        const double var_i_CaL_t__alfat = 400.0 * exp(1.2 + 0.10000000000000001 * var_chaste_interface__Vm_t__Vm_t); // per_second
        const double var_i_CaL_t__betat = 50.0 * exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__Vm_t__Vm_t); // per_second
        const double var_i_CaL_t__gama = 187.5 * var_chaste_interface__ion_concentrations__Ca_ss; // per_second
        const double d_dt_chaste_interface_var_i_CaL_t__TC4 = 2.0 * var_chaste_interface__i_CaL_t__TCo + 0.00062500000000000001 * var_chaste_interface__i_CaL_t__TCca4 + 0.001 * var_chaste_interface__i_CaL_t__TC3 * var_i_CaL_t__alfat - 0.001 * (300.0 + 4.0 * var_i_CaL_t__betat + 16.0 * var_i_CaL_t__gama) * var_chaste_interface__i_CaL_t__TC4; // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_t__TC4;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative23(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
            // Units: millimolar; Initial value: 9.5977033e-05
            double var_chaste_interface__Vm_t__Vm_t = rY[54];
            // Units: millivolt; Initial value: -85.208034
            


            const double var_x384 = 3.0 * var_chaste_interface__ion_concentrations__Ca_ss;
            const double var_x385 = -0.29999999999999999 - var_x384;
            const double var_x407 = exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x427 = 0.20000000000000001 * var_x407;
            
            partialF = var_x385 - var_x427;
        }
        else
        {
            const double y_save = rY[23];
            rY[23] += delta;
            const double temp = EvaluateYDerivative23(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[23])/delta;
            rY[23] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative24(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_CaL_t__TC4 = rY[23];
        // Units: dimensionless; Initial value: -5.7367189e-17
        double var_chaste_interface__i_CaL_t__TCo = rY[24];
        // Units: dimensionless; Initial value: -1.3449454e-17
        


        // Mathematics
        const double d_dt_chaste_interface_var_i_CaL_t__TCo = 0.29999999999999999 * var_chaste_interface__i_CaL_t__TC4 - 2.0 * var_chaste_interface__i_CaL_t__TCo; // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_t__TCo;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative24(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            


            
            partialF = -2.0;
        }
        else
        {
            const double y_save = rY[24];
            rY[24] += delta;
            const double temp = EvaluateYDerivative24(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[24])/delta;
            rY[24] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative25(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_CaL_t__TCst = rY[19];
        // Units: dimensionless; Initial value: 0.99798934
        double var_chaste_interface__i_CaL_t__TCcast = rY[25];
        // Units: dimensionless; Initial value: 0.0019155245
        double var_chaste_interface__i_CaL_t__TCca1 = rY[26];
        // Units: dimensionless; Initial value: 5.8133643e-07
        double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
        // Units: millimolar; Initial value: 9.5977033e-05
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        


        // Mathematics
        const double var_i_CaL_t__alfat = 400.0 * exp(1.2 + 0.10000000000000001 * var_chaste_interface__Vm_t__Vm_t); // per_second
        const double var_i_CaL_t__alfa2t = 2.0 * var_i_CaL_t__alfat; // per_second
        const double var_i_CaL_t__betat = 50.0 * exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__Vm_t__Vm_t); // per_second
        const double var_i_CaL_t__beta2t = 0.5 * var_i_CaL_t__betat; // per_second
        const double var_i_CaL_t__gama = 187.5 * var_chaste_interface__ion_concentrations__Ca_ss; // per_second
        const double d_dt_chaste_interface_var_i_CaL_t__TCcast = 0.001 * var_chaste_interface__i_CaL_t__TCca1 * var_i_CaL_t__beta2t + 0.001 * var_chaste_interface__i_CaL_t__TCst * var_i_CaL_t__gama - 0.001 * (10.0 + 4.0 * var_i_CaL_t__alfa2t) * var_chaste_interface__i_CaL_t__TCcast; // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_t__TCcast;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative25(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_t__Vm_t = rY[54];
            // Units: millivolt; Initial value: -85.208034
            


            const double var_x403 = 0.10000000000000001 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x404 = exp(1.2 + var_x403);
            const double var_x432 = 3.2000000000000002 * var_x404;
            
            partialF = -0.01 - var_x432;
        }
        else
        {
            const double y_save = rY[25];
            rY[25] += delta;
            const double temp = EvaluateYDerivative25(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[25])/delta;
            rY[25] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative26(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_CaL_t__TC1 = rY[20];
        // Units: dimensionless; Initial value: 7.5720257e-05
        double var_chaste_interface__i_CaL_t__TCcast = rY[25];
        // Units: dimensionless; Initial value: 0.0019155245
        double var_chaste_interface__i_CaL_t__TCca1 = rY[26];
        // Units: dimensionless; Initial value: 5.8133643e-07
        double var_chaste_interface__i_CaL_t__TCca2 = rY[27];
        // Units: dimensionless; Initial value: 6.6150547e-11
        double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
        // Units: millimolar; Initial value: 9.5977033e-05
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        


        // Mathematics
        const double var_i_CaL_t__alfat = 400.0 * exp(1.2 + 0.10000000000000001 * var_chaste_interface__Vm_t__Vm_t); // per_second
        const double var_i_CaL_t__alfa2t = 2.0 * var_i_CaL_t__alfat; // per_second
        const double var_i_CaL_t__betat = 50.0 * exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__Vm_t__Vm_t); // per_second
        const double var_i_CaL_t__beta2t = 0.5 * var_i_CaL_t__betat; // per_second
        const double var_i_CaL_t__gama = 187.5 * var_chaste_interface__ion_concentrations__Ca_ss; // per_second
        const double d_dt_chaste_interface_var_i_CaL_t__TCca1 = 0.002 * var_chaste_interface__i_CaL_t__TC1 * var_i_CaL_t__gama + 0.002 * var_chaste_interface__i_CaL_t__TCca2 * var_i_CaL_t__beta2t + 0.0040000000000000001 * var_chaste_interface__i_CaL_t__TCcast * var_i_CaL_t__alfa2t - 0.001 * (5.0 + 3.0 * var_i_CaL_t__alfa2t + var_i_CaL_t__beta2t) * var_chaste_interface__i_CaL_t__TCca1; // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_t__TCca1;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative26(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_t__Vm_t = rY[54];
            // Units: millivolt; Initial value: -85.208034
            


            const double var_x403 = 0.10000000000000001 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x404 = exp(1.2 + var_x403);
            const double var_x407 = exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x433 = 0.025000000000000001 * var_x407;
            const double var_x436 = 2.3999999999999999 * var_x404;
            
            partialF = -0.0050000000000000001 - var_x433 - var_x436;
        }
        else
        {
            const double y_save = rY[26];
            rY[26] += delta;
            const double temp = EvaluateYDerivative26(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[26])/delta;
            rY[26] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative27(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_CaL_t__TC2 = rY[21];
        // Units: dimensionless; Initial value: 2.1544156e-09
        double var_chaste_interface__i_CaL_t__TCca1 = rY[26];
        // Units: dimensionless; Initial value: 5.8133643e-07
        double var_chaste_interface__i_CaL_t__TCca2 = rY[27];
        // Units: dimensionless; Initial value: 6.6150547e-11
        double var_chaste_interface__i_CaL_t__TCca3 = rY[28];
        // Units: dimensionless; Initial value: 3.3423167e-15
        double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
        // Units: millimolar; Initial value: 9.5977033e-05
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        


        // Mathematics
        const double var_i_CaL_t__alfat = 400.0 * exp(1.2 + 0.10000000000000001 * var_chaste_interface__Vm_t__Vm_t); // per_second
        const double var_i_CaL_t__alfa2t = 2.0 * var_i_CaL_t__alfat; // per_second
        const double var_i_CaL_t__betat = 50.0 * exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__Vm_t__Vm_t); // per_second
        const double var_i_CaL_t__beta2t = 0.5 * var_i_CaL_t__betat; // per_second
        const double var_i_CaL_t__gama = 187.5 * var_chaste_interface__ion_concentrations__Ca_ss; // per_second
        const double d_dt_chaste_interface_var_i_CaL_t__TCca2 = 0.0040000000000000001 * var_chaste_interface__i_CaL_t__TC2 * var_i_CaL_t__gama + 0.0030000000000000001 * var_chaste_interface__i_CaL_t__TCca1 * var_i_CaL_t__alfa2t + 0.0030000000000000001 * var_chaste_interface__i_CaL_t__TCca3 * var_i_CaL_t__beta2t - 0.001 * (2.5 + 2.0 * var_i_CaL_t__alfa2t + 2.0 * var_i_CaL_t__beta2t) * var_chaste_interface__i_CaL_t__TCca2; // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_t__TCca2;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative27(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_t__Vm_t = rY[54];
            // Units: millivolt; Initial value: -85.208034
            


            const double var_x403 = 0.10000000000000001 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x404 = exp(1.2 + var_x403);
            const double var_x405 = 1.6000000000000001 * var_x404;
            const double var_x406 = -var_x405;
            const double var_x407 = exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x408 = 0.050000000000000003 * var_x407;
            const double var_x414 = -var_x408;
            
            partialF = -0.0025000000000000001 + var_x406 + var_x414;
        }
        else
        {
            const double y_save = rY[27];
            rY[27] += delta;
            const double temp = EvaluateYDerivative27(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[27])/delta;
            rY[27] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative28(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_CaL_t__TC3 = rY[22];
        // Units: dimensionless; Initial value: 2.7459475e-14
        double var_chaste_interface__i_CaL_t__TCca2 = rY[27];
        // Units: dimensionless; Initial value: 6.6150547e-11
        double var_chaste_interface__i_CaL_t__TCca3 = rY[28];
        // Units: dimensionless; Initial value: 3.3423167e-15
        double var_chaste_interface__i_CaL_t__TCca4 = rY[29];
        // Units: dimensionless; Initial value: 4.6165955e-19
        double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
        // Units: millimolar; Initial value: 9.5977033e-05
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        


        // Mathematics
        const double var_i_CaL_t__alfat = 400.0 * exp(1.2 + 0.10000000000000001 * var_chaste_interface__Vm_t__Vm_t); // per_second
        const double var_i_CaL_t__alfa2t = 2.0 * var_i_CaL_t__alfat; // per_second
        const double var_i_CaL_t__betat = 50.0 * exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__Vm_t__Vm_t); // per_second
        const double var_i_CaL_t__beta2t = 0.5 * var_i_CaL_t__betat; // per_second
        const double var_i_CaL_t__gama = 187.5 * var_chaste_interface__ion_concentrations__Ca_ss; // per_second
        const double d_dt_chaste_interface_var_i_CaL_t__TCca3 = 0.002 * var_chaste_interface__i_CaL_t__TCca2 * var_i_CaL_t__alfa2t + 0.0040000000000000001 * var_chaste_interface__i_CaL_t__TCca4 * var_i_CaL_t__beta2t + 0.0080000000000000002 * var_chaste_interface__i_CaL_t__TC3 * var_i_CaL_t__gama - 0.001 * (1.25 + 3.0 * var_i_CaL_t__beta2t + var_i_CaL_t__alfa2t) * var_chaste_interface__i_CaL_t__TCca3; // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_t__TCca3;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative28(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_t__Vm_t = rY[54];
            // Units: millivolt; Initial value: -85.208034
            


            const double var_x403 = 0.10000000000000001 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x404 = exp(1.2 + var_x403);
            const double var_x407 = exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x420 = 0.80000000000000004 * var_x404;
            const double var_x421 = -var_x420;
            const double var_x438 = 0.074999999999999997 * var_x407;
            
            partialF = -0.00125 + var_x421 - var_x438;
        }
        else
        {
            const double y_save = rY[28];
            rY[28] += delta;
            const double temp = EvaluateYDerivative28(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[28])/delta;
            rY[28] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative29(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_CaL_t__TC4 = rY[23];
        // Units: dimensionless; Initial value: -5.7367189e-17
        double var_chaste_interface__i_CaL_t__TCca3 = rY[28];
        // Units: dimensionless; Initial value: 3.3423167e-15
        double var_chaste_interface__i_CaL_t__TCca4 = rY[29];
        // Units: dimensionless; Initial value: 4.6165955e-19
        double var_chaste_interface__i_CaL_t__TCcao = rY[30];
        // Units: dimensionless; Initial value: 3.75926e-22
        double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
        // Units: millimolar; Initial value: 9.5977033e-05
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        


        // Mathematics
        const double var_i_CaL_t__alfat = 400.0 * exp(1.2 + 0.10000000000000001 * var_chaste_interface__Vm_t__Vm_t); // per_second
        const double var_i_CaL_t__alfa2t = 2.0 * var_i_CaL_t__alfat; // per_second
        const double var_i_CaL_t__betat = 50.0 * exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__Vm_t__Vm_t); // per_second
        const double var_i_CaL_t__beta2t = 0.5 * var_i_CaL_t__betat; // per_second
        const double var_i_CaL_t__gama = 187.5 * var_chaste_interface__ion_concentrations__Ca_ss; // per_second
        const double d_dt_chaste_interface_var_i_CaL_t__TCca4 = 7.0 * var_chaste_interface__i_CaL_t__TCcao + 0.001 * var_chaste_interface__i_CaL_t__TCca3 * var_i_CaL_t__alfa2t + 0.016 * var_chaste_interface__i_CaL_t__TC4 * var_i_CaL_t__gama - 0.001 * (5.625 + 4.0 * var_i_CaL_t__beta2t) * var_chaste_interface__i_CaL_t__TCca4; // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_t__TCca4;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative29(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_t__Vm_t = rY[54];
            // Units: millivolt; Initial value: -85.208034
            


            const double var_x407 = exp(-0.92307692307692313 - 0.076923076923076927 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x415 = 0.10000000000000001 * var_x407;
            const double var_x419 = -var_x415;
            
            partialF = -0.0056249999999999998 + var_x419;
        }
        else
        {
            const double y_save = rY[29];
            rY[29] += delta;
            const double temp = EvaluateYDerivative29(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[29])/delta;
            rY[29] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative30(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_CaL_t__TCca4 = rY[29];
        // Units: dimensionless; Initial value: 4.6165955e-19
        double var_chaste_interface__i_CaL_t__TCcao = rY[30];
        // Units: dimensionless; Initial value: 3.75926e-22
        


        // Mathematics
        const double d_dt_chaste_interface_var_i_CaL_t__TCcao = 0.0050000000000000001 * var_chaste_interface__i_CaL_t__TCca4 - 7.0 * var_chaste_interface__i_CaL_t__TCcao; // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_t__TCcao;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative30(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            


            
            partialF = -7.0;
        }
        else
        {
            const double y_save = rY[30];
            rY[30] += delta;
            const double temp = EvaluateYDerivative30(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[30])/delta;
            rY[30] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative31(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_CaL_t_y_gate__y = rY[31];
        // Units: dimensionless; Initial value: 0.7813477
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        


        // Mathematics
        const double d_dt_chaste_interface_var_i_CaL_t_y_gate__y = 0.001 * (-var_chaste_interface__i_CaL_t_y_gate__y + 1 / (1.0 + exp(5.833333333333333 + 0.16666666666666666 * var_chaste_interface__Vm_t__Vm_t))) / (0.001 / (0.02 + 0.019699999999999999 * exp(-0.113569 * pow((1 + 0.10000000000000001 * var_chaste_interface__Vm_t__Vm_t), 2))) + 0.55000000000000004 / (1.0 + exp(16.842105263157894 + 0.42105263157894735 * var_chaste_interface__Vm_t__Vm_t))); // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_t_y_gate__y;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative31(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_t__Vm_t = rY[54];
            // Units: millivolt; Initial value: -85.208034
            


            const double var_x403 = 0.10000000000000001 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x440 = exp(-0.113569 * pow((1 + var_x403), 2));
            const double var_x441 = 1 / (0.02 + 0.019699999999999999 * var_x440);
            const double var_x442 = exp(16.842105263157894 + 0.42105263157894735 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x443 = 1.0 + var_x442;
            const double var_x444 = 1 / var_x443;
            const double var_x445 = 1 / (0.001 * var_x441 + 0.55000000000000004 * var_x444);
            
            partialF = -0.001 * var_x445;
        }
        else
        {
            const double y_save = rY[31];
            rY[31] += delta;
            const double temp = EvaluateYDerivative31(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[31])/delta;
            rY[31] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative32(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.207812
        double var_chaste_interface__i_Kr_s_xr_gate__xr = rY[32];
        // Units: dimensionless; Initial value: 0.00020469344
        

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

        // Mathematics
        const double d_dt_chaste_interface_var_i_Kr_s_xr_gate__xr = 0.001 * (-var_chaste_interface__i_Kr_s_xr_gate__xr + _lt_0_row[16]) * _lt_0_row[17]; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Kr_s_xr_gate__xr;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative32(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -85.207812
            


            const double var_x451 = 1 / (-1.0 + exp(-1.000000000001e-7));
            const double var_x452 = 1 / (-1.0 + exp(1.0000000000814911e-7));
            const double var_x453 = exp(-1.7465999999999999 - 0.123 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x454 = 1.0 - var_x453;
            const double var_x455 = 1 / var_x454;
            const double var_x457 = 14.199999999999999 + var_chaste_interface__Vm_s__Vm_s;
            const double var_x459 = (38.900000689655172 + var_chaste_interface__Vm_s__Vm_s) * (4.2068965517283451e-10 * var_x451 + 4.2068965520669629e-10 * var_x452);
            const double var_x462 = 38.899999999999999 + var_chaste_interface__Vm_s__Vm_s;
            const double var_x463 = fabs(var_x462) < 6.896551724422384e-7;
            const double var_x464 = 1 / (1.0 - exp(9.9999999998406912e-8));
            const double var_x465 = 1 / (1.0 - exp(-1.0000000000011388e-7));
            const double var_x466 = exp(5.6404999999999994 + 0.14499999999999999 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x467 = -1.0 + var_x466;
            const double var_x468 = 1 / var_x467;
            const double var_x472 = (14.199999186991869 + var_chaste_interface__Vm_s__Vm_s) * (-1.1219512194943214e-9 * var_x464 - 1.1219512195134727e-9 * var_x465);
            const double var_x473 = fabs(var_x457) < 8.1300813007528783e-7;
            const double var_x474 = -0.0013799999999999999 * var_x455 * var_x457;
            const double var_x475 = -0.00060999999999999997 * var_x462 * var_x468;
            
            partialF = ((var_x463) ? (var_x474 + 4.2068965517283451e-10 * var_x451 - 724999.99997009686 * var_x459) : ((var_x473) ? (var_x475 + 615000.00000454846 * var_x472 - 1.1219512195134727e-9 * var_x465) : (var_x474 + var_x475)));
        }
        else
        {
            const double y_save = rY[32];
            rY[32] += delta;
            const double temp = EvaluateYDerivative32(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[32])/delta;
            rY[32] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative33(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_Kr_t_xr_gate__xr = rY[33];
        // Units: dimensionless; Initial value: 0.00020469344
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        


        // Mathematics
        const double d_dt_chaste_interface_var_i_Kr_t_xr_gate__xr = 0.001 * (-var_chaste_interface__i_Kr_t_xr_gate__xr + 1 / (1.0 + exp(-2.8666666666666667 - 0.13333333333333333 * var_chaste_interface__Vm_t__Vm_t))) * (0.60999999999999999 * (38.899999999999999 + var_chaste_interface__Vm_t__Vm_t) / (-1.0 + exp(5.6404999999999994 + 0.14499999999999999 * var_chaste_interface__Vm_t__Vm_t)) + 1.3799999999999999 * (14.199999999999999 + var_chaste_interface__Vm_t__Vm_t) / (1.0 - exp(-1.7465999999999999 - 0.123 * var_chaste_interface__Vm_t__Vm_t))); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Kr_t_xr_gate__xr;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative33(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_t__Vm_t = rY[54];
            // Units: millivolt; Initial value: -85.208034
            


            const double var_x476 = exp(-1.7465999999999999 - 0.123 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x477 = 1.0 - var_x476;
            const double var_x478 = 1 / var_x477;
            const double var_x479 = 14.199999999999999 + var_chaste_interface__Vm_t__Vm_t;
            const double var_x480 = exp(5.6404999999999994 + 0.14499999999999999 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x481 = -1.0 + var_x480;
            const double var_x482 = 1 / var_x481;
            const double var_x483 = 38.899999999999999 + var_chaste_interface__Vm_t__Vm_t;
            
            partialF = -0.0013799999999999999 * var_x478 * var_x479 - 0.00060999999999999997 * var_x482 * var_x483;
        }
        else
        {
            const double y_save = rY[33];
            rY[33] += delta;
            const double temp = EvaluateYDerivative33(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[33])/delta;
            rY[33] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative34(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.207812
        double var_chaste_interface__i_Ks_s_xs_gate__xs = rY[34];
        // Units: dimensionless; Initial value: 0.0061359896
        

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

        // Mathematics
        const double d_dt_chaste_interface_var_i_Ks_s_xs_gate__xs = 0.001 * (-var_chaste_interface__i_Ks_s_xs_gate__xs + _lt_0_row[18]) * _lt_0_row[19]; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Ks_s_xs_gate__xs;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative34(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -85.207812
            


            const double var_x491 = 1 / (-1.0 + exp(9.9999999999880736e-8));
            const double var_x492 = 1 / (-1.0 + exp(-9.9999999999880736e-8));
            const double var_x493 = 1 / (1.0 - exp(2.1542940320207204e-7));
            const double var_x494 = 1 / (1.0 - exp(-2.1542940320207204e-7));
            const double var_x495 = (30.000001455604075 + var_chaste_interface__Vm_s__Vm_s) * (1.0465793304208771e-10 * var_x493 + 1.0465793304208771e-10 * var_x494 + 1.9068413391534758e-10 * var_x491 + 1.9068413391534758e-10 * var_x492);
            const double var_x497 = 30.0 + var_chaste_interface__Vm_s__Vm_s;
            const double var_x498 = fabs(var_x497) < 1.455604075689676e-6;
            const double var_x499 = exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x500 = -1.0 + var_x499;
            const double var_x501 = 1 / var_x500;
            const double var_x503 = exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x504 = 1.0 - var_x503;
            const double var_x505 = 1 / var_x504;
            
            partialF = ((var_x498) ? (1.9068413391534758e-10 * var_x492 + 1.0465793304208771e-10 * var_x493 - 343500.00000040967 * var_x495) : (-0.00013100000000000001 * var_x497 * var_x501 - 7.1899999999999999e-5 * var_x497 * var_x505));
        }
        else
        {
            const double y_save = rY[34];
            rY[34] += delta;
            const double temp = EvaluateYDerivative34(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[34])/delta;
            rY[34] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative35(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_Ks_t_xs_gate__xs = rY[35];
        // Units: dimensionless; Initial value: 0.0061359896
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        


        // Mathematics
        const double d_dt_chaste_interface_var_i_Ks_t_xs_gate__xs = 0.001 * (-var_chaste_interface__i_Ks_t_xs_gate__xs + 1 / (1.0 + exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__Vm_t__Vm_t))) * (0.13100000000000001 * (30.0 + var_chaste_interface__Vm_t__Vm_t) / (-1.0 + exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__Vm_t__Vm_t)) + 0.071899999999999992 * (30.0 + var_chaste_interface__Vm_t__Vm_t) / (1.0 - exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__Vm_t__Vm_t))); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Ks_t_xs_gate__xs;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative35(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_t__Vm_t = rY[54];
            // Units: millivolt; Initial value: -85.208034
            


            const double var_x507 = exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x508 = -1.0 + var_x507;
            const double var_x509 = 1 / var_x508;
            const double var_x510 = 30.0 + var_chaste_interface__Vm_t__Vm_t;
            const double var_x511 = exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x512 = 1.0 - var_x511;
            const double var_x513 = 1 / var_x512;
            
            partialF = -0.00013100000000000001 * var_x509 * var_x510 - 7.1899999999999999e-5 * var_x510 * var_x513;
        }
        else
        {
            const double y_save = rY[35];
            rY[35] += delta;
            const double temp = EvaluateYDerivative35(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[35])/delta;
            rY[35] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative36(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.207812
        double var_chaste_interface__i_Kto_s_r2_gate__r2 = rY[36];
        // Units: dimensionless; Initial value: 0.9625701
        

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

        // Mathematics
        const double var_i_Kto_s_r2_gate__r2_infinity = _lt_0_row[20]; // dimensionless
        const double d_dt_chaste_interface_var_i_Kto_s_r2_gate__r2 = 0.049999999999999996 * var_i_Kto_s_r2_gate__r2_infinity - 0.049999999999999996 * var_chaste_interface__i_Kto_s_r2_gate__r2; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Kto_s_r2_gate__r2;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative36(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            


            
            partialF = -0.049999999999999996;
        }
        else
        {
            const double y_save = rY[36];
            rY[36] += delta;
            const double temp = EvaluateYDerivative36(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[36])/delta;
            rY[36] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative37(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.207812
        double var_chaste_interface__i_Kto_s_r3_gate__r3 = rY[37];
        // Units: dimensionless; Initial value: 0.96250049
        

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

        // Mathematics
        const double var_i_Kto_s_r2_gate__r2_infinity = _lt_0_row[20]; // dimensionless
        const double d_dt_chaste_interface_var_i_Kto_s_r3_gate__r3 = 0.012499999999999999 * var_i_Kto_s_r2_gate__r2_infinity - 0.012499999999999999 * var_chaste_interface__i_Kto_s_r3_gate__r3; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Kto_s_r3_gate__r3;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative37(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            


            
            partialF = -0.012499999999999999;
        }
        else
        {
            const double y_save = rY[37];
            rY[37] += delta;
            const double temp = EvaluateYDerivative37(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[37])/delta;
            rY[37] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative38(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_Kto_t_r2_gate__r2 = rY[38];
        // Units: dimensionless; Initial value: 0.9625701
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        


        // Mathematics
        const double var_i_Kto_t_r2_gate__r2_infinity = 1.006 / (1.0 + exp(3.7562349155269508 + 0.080450522928399035 * var_chaste_interface__Vm_t__Vm_t)); // dimensionless
        const double d_dt_chaste_interface_var_i_Kto_t_r2_gate__r2 = 0.049999999999999996 * var_i_Kto_t_r2_gate__r2_infinity - 0.049999999999999996 * var_chaste_interface__i_Kto_t_r2_gate__r2; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Kto_t_r2_gate__r2;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative38(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            


            
            partialF = -0.049999999999999996;
        }
        else
        {
            const double y_save = rY[38];
            rY[38] += delta;
            const double temp = EvaluateYDerivative38(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[38])/delta;
            rY[38] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative39(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_Kto_t_r3_gate__r3 = rY[39];
        // Units: dimensionless; Initial value: 0.96250049
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        


        // Mathematics
        const double var_i_Kto_t_r2_gate__r2_infinity = 1.006 / (1.0 + exp(3.7562349155269508 + 0.080450522928399035 * var_chaste_interface__Vm_t__Vm_t)); // dimensionless
        const double d_dt_chaste_interface_var_i_Kto_t_r3_gate__r3 = 0.012499999999999999 * var_i_Kto_t_r2_gate__r2_infinity - 0.012499999999999999 * var_chaste_interface__i_Kto_t_r3_gate__r3; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Kto_t_r3_gate__r3;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative39(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            


            
            partialF = -0.012499999999999999;
        }
        else
        {
            const double y_save = rY[39];
            rY[39] += delta;
            const double temp = EvaluateYDerivative39(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[39])/delta;
            rY[39] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative40(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__JCaSRrel__F1 = rY[40];
        // Units: dimensionless; Initial value: 0.8053082
        double var_chaste_interface__JCaSRrel__F2 = rY[41];
        // Units: dimensionless; Initial value: 0.00026639195
        double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
        // Units: millimolar; Initial value: 9.5977033e-05
        


        // Mathematics
        const double d_dt_chaste_interface_var_JCaSRrel__F1 = 0.57599999999999996 * var_chaste_interface__JCaSRrel__F2 - 36450000000.0 * pow(var_chaste_interface__ion_concentrations__Ca_ss, 4) * var_chaste_interface__JCaSRrel__F1; // 1 / millisecond

        return d_dt_chaste_interface_var_JCaSRrel__F1;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative40(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
            // Units: millimolar; Initial value: 9.5977033e-05
            


            const double var_x522 = 36450000000.0 * pow(var_chaste_interface__ion_concentrations__Ca_ss, 4);
            
            partialF = -var_x522;
        }
        else
        {
            const double y_save = rY[40];
            rY[40] += delta;
            const double temp = EvaluateYDerivative40(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[40])/delta;
            rY[40] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative41(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__JCaSRrel__F1 = rY[40];
        // Units: dimensionless; Initial value: 0.8053082
        double var_chaste_interface__JCaSRrel__F2 = rY[41];
        // Units: dimensionless; Initial value: 0.00026639195
        double var_chaste_interface__JCaSRrel__F3 = rY[42];
        // Units: dimensionless; Initial value: 4.9455459e-10
        double var_chaste_interface__JCaSRrel__F4 = rY[43];
        // Units: dimensionless; Initial value: 0.19442578
        double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
        // Units: millimolar; Initial value: 9.5977033e-05
        


        // Mathematics
        const double d_dt_chaste_interface_var_JCaSRrel__F2 = 0.00080000000000000004 * var_chaste_interface__JCaSRrel__F4 + 1.9299999999999999 * var_chaste_interface__JCaSRrel__F3 + 36450000000.0 * pow(var_chaste_interface__ion_concentrations__Ca_ss, 4) * var_chaste_interface__JCaSRrel__F1 - 0.001 * (594.0 + 4050000000.0 * pow(var_chaste_interface__ion_concentrations__Ca_ss, 3)) * var_chaste_interface__JCaSRrel__F2; // 1 / millisecond

        return d_dt_chaste_interface_var_JCaSRrel__F2;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative41(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
            // Units: millimolar; Initial value: 9.5977033e-05
            


            const double var_x523 = pow(var_chaste_interface__ion_concentrations__Ca_ss, 3);
            const double var_x525 = 4050000.0 * var_x523;
            
            partialF = -0.59399999999999997 - var_x525;
        }
        else
        {
            const double y_save = rY[41];
            rY[41] += delta;
            const double temp = EvaluateYDerivative41(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[41])/delta;
            rY[41] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative42(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__JCaSRrel__F2 = rY[41];
        // Units: dimensionless; Initial value: 0.00026639195
        double var_chaste_interface__JCaSRrel__F3 = rY[42];
        // Units: dimensionless; Initial value: 4.9455459e-10
        double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
        // Units: millimolar; Initial value: 9.5977033e-05
        


        // Mathematics
        const double d_dt_chaste_interface_var_JCaSRrel__F3 = -1.9299999999999999 * var_chaste_interface__JCaSRrel__F3 + 4050000.0 * pow(var_chaste_interface__ion_concentrations__Ca_ss, 3) * var_chaste_interface__JCaSRrel__F2; // 1 / millisecond

        return d_dt_chaste_interface_var_JCaSRrel__F3;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative42(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            


            
            partialF = -1.9299999999999999;
        }
        else
        {
            const double y_save = rY[42];
            rY[42] += delta;
            const double temp = EvaluateYDerivative42(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[42])/delta;
            rY[42] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative43(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__JCaSRrel__F2 = rY[41];
        // Units: dimensionless; Initial value: 0.00026639195
        double var_chaste_interface__JCaSRrel__F4 = rY[43];
        // Units: dimensionless; Initial value: 0.19442578
        


        // Mathematics
        const double d_dt_chaste_interface_var_JCaSRrel__F4 = 0.017999999999999999 * var_chaste_interface__JCaSRrel__F2 - 0.00080000000000000004 * var_chaste_interface__JCaSRrel__F4; // 1 / millisecond

        return d_dt_chaste_interface_var_JCaSRrel__F4;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative43(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            


            
            partialF = -0.00080000000000000004;
        }
        else
        {
            const double y_save = rY[43];
            rY[43] += delta;
            const double temp = EvaluateYDerivative43(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[43])/delta;
            rY[43] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative44(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__JCaSRrel__F2 = rY[41];
        // Units: dimensionless; Initial value: 0.00026639195
        double var_chaste_interface__JCaSRrel__F3 = rY[42];
        // Units: dimensionless; Initial value: 4.9455459e-10
        double var_chaste_interface__CaSRrel__CaSRrel = rY[44];
        // Units: millimolar; Initial value: 1.0326252
        double var_chaste_interface__CaSRup__CaSRup = rY[45];
        // Units: millimolar; Initial value: 1.0200296
        double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
        // Units: millimolar; Initial value: 9.5977033e-05
        


        // Mathematics
        const double var_JCaSRrel__JCaSRrel = 4.5382595216862795e-11 * (-var_chaste_interface__ion_concentrations__Ca_ss + var_chaste_interface__CaSRrel__CaSRrel) * (var_chaste_interface__JCaSRrel__F2 + var_chaste_interface__JCaSRrel__F3) * mParameters[1]; // millimolar_per_second
        const double var_Jtr__Jtr = 1.316200557333608e-9 * var_chaste_interface__CaSRup__CaSRup - 1.316200557333608e-9 * var_chaste_interface__CaSRrel__CaSRrel; // millimolar_per_second
        const double d_dt_chaste_interface_var_CaSRrel__CaSRrel = 22034879.125388369 * (-var_JCaSRrel__JCaSRrel + var_Jtr__Jtr) / (1.0 + 12.0 / pow((0.80000000000000004 + var_chaste_interface__CaSRrel__CaSRrel), 2)); // millimolar / millisecond

        return d_dt_chaste_interface_var_CaSRrel__CaSRrel;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative44(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__JCaSRrel__F2 = rY[41];
            // Units: dimensionless; Initial value: 0.00026639195
            double var_chaste_interface__JCaSRrel__F3 = rY[42];
            // Units: dimensionless; Initial value: 4.9455459e-10
            double var_chaste_interface__CaSRrel__CaSRrel = rY[44];
            // Units: millimolar; Initial value: 1.0326252
            double var_chaste_interface__CaSRup__CaSRup = rY[45];
            // Units: millimolar; Initial value: 1.0200296
            double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
            // Units: millimolar; Initial value: 9.5977033e-05
            


            const double var_x527 = 0.80000000000000004 + var_chaste_interface__CaSRrel__CaSRrel;
            const double var_x528 = pow(var_x527, (-2));
            const double var_x529 = 1 / (1.0 + 12.0 * var_x528);
            const double var_x530 = 22034879.125388369 * var_x529;
            const double var_x533 = 4.5382595216862795e-11 * var_chaste_interface__JCaSRrel__F2;
            const double var_x534 = 4.5382595216862795e-11 * var_chaste_interface__JCaSRrel__F3;
            const double var_x535 = (-var_chaste_interface__ion_concentrations__Ca_ss + var_chaste_interface__CaSRrel__CaSRrel) * (var_chaste_interface__JCaSRrel__F2 + var_chaste_interface__JCaSRrel__F3) * mParameters[1];
            
            partialF = var_x530 * (-1.316200557333608e-9 + (-var_x533 - var_x534) * mParameters[1]) + 3672479.8542313944 * (1.316200557333608e-9 * var_chaste_interface__CaSRup__CaSRup - 1.316200557333608e-9 * var_chaste_interface__CaSRrel__CaSRrel - 4.5382595216862795e-11 * var_x535) / (pow(var_x527, 3) * pow((0.083333333333333329 + var_x528), 2));
        }
        else
        {
            const double y_save = rY[44];
            rY[44] += delta;
            const double temp = EvaluateYDerivative44(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[44])/delta;
            rY[44] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative45(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__ion_concentrations__Ca_i = rY[1];
        // Units: millimolar; Initial value: 8.8787034e-05
        double var_chaste_interface__CaSRrel__CaSRrel = rY[44];
        // Units: millimolar; Initial value: 1.0326252
        double var_chaste_interface__CaSRup__CaSRup = rY[45];
        // Units: millimolar; Initial value: 1.0200296
        


        // Mathematics
        const double var_Jtr__Jtr = 1.316200557333608e-9 * var_chaste_interface__CaSRup__CaSRup - 1.316200557333608e-9 * var_chaste_interface__CaSRrel__CaSRrel; // millimolar_per_second
        const double var_JCaSRleak__JCaSRleak = 5.6642074536489521e-13 * (-var_chaste_interface__ion_concentrations__Ca_i + var_chaste_interface__CaSRup__CaSRup) * mParameters[0]; // millimolar_per_second
        const double var_JCaSRup__JCaSRup = 1.757857485615192e-8 * pow(var_chaste_interface__ion_concentrations__Ca_i, 2) * mParameters[2] / (2.4999999999999999e-7 + pow(var_chaste_interface__ion_concentrations__Ca_i, 2)); // millimolar_per_second
        const double d_dt_chaste_interface_var_CaSRup__CaSRup = 1266003.9642950408 * var_JCaSRup__JCaSRup - 1266003.9642950408 * var_JCaSRleak__JCaSRleak - 1266003.9642950408 * var_Jtr__Jtr; // millimolar / millisecond

        return d_dt_chaste_interface_var_CaSRup__CaSRup;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative45(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            


            const double var_x536 = 7.1709090909090912e-7 * mParameters[0];
            
            partialF = -0.0016663151233916897 - var_x536;
        }
        else
        {
            const double y_save = rY[45];
            rY[45] += delta;
            const double temp = EvaluateYDerivative45(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[45])/delta;
            rY[45] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative46(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.207812
        double var_chaste_interface__ion_concentrations__Ca_i = rY[1];
        // Units: millimolar; Initial value: 8.8787034e-05
        double var_chaste_interface__i_CaL_s__Co = rY[11];
        // Units: dimensionless; Initial value: -1.3496934e-17
        double var_chaste_interface__i_CaL_s__Ccao = rY[17];
        // Units: dimensionless; Initial value: 3.7986638e-22
        double var_chaste_interface__i_CaL_s_y_gate__y = rY[18];
        // Units: dimensionless; Initial value: 0.78134852
        double var_chaste_interface__i_CaL_t__TCo = rY[24];
        // Units: dimensionless; Initial value: -1.3449454e-17
        double var_chaste_interface__i_CaL_t__TCcao = rY[30];
        // Units: dimensionless; Initial value: 3.75926e-22
        double var_chaste_interface__i_CaL_t_y_gate__y = rY[31];
        // Units: dimensionless; Initial value: 0.7813477
        double var_chaste_interface__i_Kr_t_xr_gate__xr = rY[33];
        // Units: dimensionless; Initial value: 0.00020469344
        double var_chaste_interface__i_Ks_t_xs_gate__xs = rY[35];
        // Units: dimensionless; Initial value: 0.0061359896
        double var_chaste_interface__i_Kto_t_r2_gate__r2 = rY[38];
        // Units: dimensionless; Initial value: 0.9625701
        double var_chaste_interface__ion_concentrations__K_t = rY[46];
        // Units: millimolar; Initial value: 5.4140321
        double var_chaste_interface__ion_concentrations__Na_t = rY[47];
        // Units: millimolar; Initial value: 139.93239
        double var_chaste_interface__ion_concentrations__Ca_t = rY[48];
        // Units: millimolar; Initial value: 1.8476402
        double var_chaste_interface__ion_concentrations__K_i = rY[49];
        // Units: millimolar; Initial value: 136.78926
        double var_chaste_interface__ion_concentrations__Na_i = rY[50];
        // Units: millimolar; Initial value: 11.120279
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

        // Mathematics
        const double var_i_CaL_s__i_CaL_s = ((fabs(var_chaste_interface__Vm_s__Vm_s) < 1.3347668393782383e-6) ? (374597.25942315906 * (1.3347668393782383e-6 + var_chaste_interface__Vm_s__Vm_s) * (7.425432175987399e-7 * (-0.61380000000000001 + 0.001 * exp(9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 7.425432175987399e-7 * (-0.61380000000000001 + 0.001 * exp(-9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 7.425432175987399e-7 * (-0.61380000000000001 + 0.001 * exp(-9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.55630930863148487 * (_lt_0_row[3]) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__Vm_s__Vm_s * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (_lt_0_row[2]))); // microA
        const double var_i_Kr_t__E_Kr_t = 26.695336787564766 * log(var_chaste_interface__ion_concentrations__K_t / var_chaste_interface__ion_concentrations__K_i); // millivolt
        const double var_i_K1_t__E_K1_t = var_i_Kr_t__E_Kr_t; // millivolt
        const double var_i_CaL_t__i_CaL_t = 0.98899432645597307 * (0.001 * exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t) - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y * mParameters[4] / (-1.0 + exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t)); // microA
        const double var_i_CaL_t__i_KL_t = 1.1867931917471675e-6 * (-var_chaste_interface__ion_concentrations__K_t + var_chaste_interface__ion_concentrations__K_i * exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t)) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y / ((-1.0 + exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t)) * (1.0 - 20430.198966619231 * var_i_CaL_s__i_CaL_s - 20430.198966619231 * var_i_CaL_t__i_CaL_t)); // microA
        const double var_i_nsK_t__i_nsK_t = 3.5561299902450127e-8 * (-0.75 * var_chaste_interface__ion_concentrations__K_t + 0.75 * var_chaste_interface__ion_concentrations__K_i * exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t)) * var_chaste_interface__Vm_t__Vm_t / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t))); // microA
        const double var_i_K1_t__i_K1_t = 0.037527981397187667 * sqrt(var_chaste_interface__ion_concentrations__K_t) * (-var_i_K1_t__E_K1_t + var_chaste_interface__Vm_t__Vm_t) * mParameters[8] / ((1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__Vm_t__Vm_t - 0.23849999999999999 * var_i_K1_t__E_K1_t)) * (1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__Vm_t__Vm_t - 0.23849999999999999 * var_i_K1_t__E_K1_t)) + 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__Vm_t__Vm_t - 0.080320000000000003 * var_i_K1_t__E_K1_t) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__Vm_t__Vm_t - 0.061749999999999999 * var_i_K1_t__E_K1_t)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_i_K1_t__E_K1_t - 0.51429999999999998 * var_chaste_interface__Vm_t__Vm_t)))); // microA
        const double var_i_KATP_t__i_KATP_t = 1.1324606116668949e-8 * pow(var_chaste_interface__ion_concentrations__K_t, 0.23999999999999999) * (-var_i_Kr_t__E_Kr_t + var_chaste_interface__Vm_t__Vm_t); // microA
        const double var_i_KNa_t__i_KNa_t = 6.1390634723887744e-6 * (0.80000000000000004 - 0.65000000000000002 / (1.0 + exp(8.3333333333333339 + 0.066666666666666666 * var_chaste_interface__Vm_t__Vm_t))) * (-var_i_Kr_t__E_Kr_t + var_chaste_interface__Vm_t__Vm_t) / (1.0 + 124372.1149330912 * pow((1 / var_chaste_interface__ion_concentrations__Na_i), 2.7999999999999998)); // microA
        const double var_i_Kp_t__i_Kp_t = 3.3728647017006672e-7 * (-var_i_Kr_t__E_Kr_t + var_chaste_interface__Vm_t__Vm_t) / (1.0 + exp(4.0 - 0.20000000000000001 * var_chaste_interface__Vm_t__Vm_t)); // microA
        const double var_i_Kto_t__i_Kto_t = 5.6214411695011118e-5 * (-var_i_Kr_t__E_Kr_t + var_chaste_interface__Vm_t__Vm_t) * var_chaste_interface__i_Kto_t_r2_gate__r2 * mParameters[12] / ((1.0 + exp(-1.7703904136064939 + 0.038654812524159254 * var_chaste_interface__Vm_t__Vm_t)) * (1.0 + exp(-9.8123827392120067 - 0.17056114617090226 * var_chaste_interface__Vm_t__Vm_t))); // microA
        const double var_i_NaK_t__i_NaK_t = 8.432161754251667e-5 * var_chaste_interface__ion_concentrations__K_t / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__ion_concentrations__Na_i), 1.5)) * (1.5 + var_chaste_interface__ion_concentrations__K_t) * (1.0 + 0.1245 * exp(-0.0037459725942315908 * var_chaste_interface__Vm_t__Vm_t) + 0.0052142857142857138 * (-1.0 + exp(0.01485884101040119 * var_chaste_interface__ion_concentrations__Na_t)) * exp(-0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t))); // microA
        const double var_i_Kr_t__i_Kr_t = 6.3234832614954339e-7 * sqrt(var_chaste_interface__ion_concentrations__K_t) * (-var_i_Kr_t__E_Kr_t + var_chaste_interface__Vm_t__Vm_t) * var_chaste_interface__i_Kr_t_xr_gate__xr * mParameters[9] / (1.0 + exp(0.4017857142857143 + 0.044642857142857144 * var_chaste_interface__Vm_t__Vm_t)); // microA
        const double var_i_Ks_t__i_Ks_t = 5.6214411695011118e-5 * pow(var_chaste_interface__i_Ks_t_xs_gate__xs, 2) * (0.23080000000000001 + 0.76919999999999999 / (1.0 + exp(-7.0000000000000009 - 1.6666666666666667 * log10(var_chaste_interface__ion_concentrations__Ca_i)))) * (-26.695336787564766 * log((0.018329999999999999 * var_chaste_interface__ion_concentrations__Na_t + var_chaste_interface__ion_concentrations__K_t) / (0.018329999999999999 * var_chaste_interface__ion_concentrations__Na_i + var_chaste_interface__ion_concentrations__K_i)) + var_chaste_interface__Vm_t__Vm_t) * mParameters[10]; // microA
        const double d_dt_chaste_interface_var_ion_concentrations__K_t = 2401037.2757531707 * (1.1245139870446404e-8 + 1.0362694300518135e-5 * var_i_CaL_t__i_KL_t + 1.0362694300518135e-5 * var_i_K1_t__i_K1_t + 1.0362694300518135e-5 * var_i_KATP_t__i_KATP_t + 1.0362694300518135e-5 * var_i_KNa_t__i_KNa_t + 1.0362694300518135e-5 * var_i_Kp_t__i_Kp_t + 1.0362694300518135e-5 * var_i_Kr_t__i_Kr_t + 1.0362694300518135e-5 * var_i_Ks_t__i_Ks_t + 1.0362694300518135e-5 * var_i_Kto_t__i_Kto_t + 1.0362694300518135e-5 * var_i_nsK_t__i_nsK_t - 2.072538860103627e-5 * var_i_NaK_t__i_NaK_t - 2.0824333093419268e-9 * var_chaste_interface__ion_concentrations__K_t) * mParameters[3]; // millimolar / millisecond

        return d_dt_chaste_interface_var_ion_concentrations__K_t;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative46(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -85.207812
            double var_chaste_interface__ion_concentrations__Ca_i = rY[1];
            // Units: millimolar; Initial value: 8.8787034e-05
            double var_chaste_interface__i_CaL_s__Co = rY[11];
            // Units: dimensionless; Initial value: -1.3496934e-17
            double var_chaste_interface__i_CaL_s__Ccao = rY[17];
            // Units: dimensionless; Initial value: 3.7986638e-22
            double var_chaste_interface__i_CaL_s_y_gate__y = rY[18];
            // Units: dimensionless; Initial value: 0.78134852
            double var_chaste_interface__i_CaL_t__TCo = rY[24];
            // Units: dimensionless; Initial value: -1.3449454e-17
            double var_chaste_interface__i_CaL_t__TCcao = rY[30];
            // Units: dimensionless; Initial value: 3.75926e-22
            double var_chaste_interface__i_CaL_t_y_gate__y = rY[31];
            // Units: dimensionless; Initial value: 0.7813477
            double var_chaste_interface__i_Kr_t_xr_gate__xr = rY[33];
            // Units: dimensionless; Initial value: 0.00020469344
            double var_chaste_interface__i_Ks_t_xs_gate__xs = rY[35];
            // Units: dimensionless; Initial value: 0.0061359896
            double var_chaste_interface__i_Kto_t_r2_gate__r2 = rY[38];
            // Units: dimensionless; Initial value: 0.9625701
            double var_chaste_interface__ion_concentrations__K_t = rY[46];
            // Units: millimolar; Initial value: 5.4140321
            double var_chaste_interface__ion_concentrations__Na_t = rY[47];
            // Units: millimolar; Initial value: 139.93239
            double var_chaste_interface__ion_concentrations__Ca_t = rY[48];
            // Units: millimolar; Initial value: 1.8476402
            double var_chaste_interface__ion_concentrations__K_i = rY[49];
            // Units: millimolar; Initial value: 136.78926
            double var_chaste_interface__ion_concentrations__Na_i = rY[50];
            // Units: millimolar; Initial value: 11.120279
            double var_chaste_interface__Vm_t__Vm_t = rY[54];
            // Units: millivolt; Initial value: -85.208034
            


            const double var_x3 = pow(var_chaste_interface__ion_concentrations__Ca_i, 3);
            const double var_x4 = 1.0 + 1.5625000000000003e-8 / var_x3;
            const double var_x5 = 1 / var_x4;
            const double var_x7 = exp(9.9999999999999995e-8);
            const double var_x8 = 1 / (-1.0 + var_x7);
            const double var_x11 = exp(-9.9999999999999995e-8);
            const double var_x13 = 1 / (-1.0 + var_x11);
            const double var_x15 = fabs(var_chaste_interface__Vm_s__Vm_s);
            const double var_x37 = -0.61380000000000001 + 0.001 * var_x7;
            const double var_x38 = var_x8 * var_chaste_interface__i_CaL_s_y_gate__y;
            const double var_x39 = var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co;
            const double var_x40 = var_x39 * mParameters[4];
            const double var_x42 = -0.61380000000000001 + 0.001 * var_x11;
            const double var_x43 = var_x13 * var_chaste_interface__i_CaL_s_y_gate__y;
            const double var_x44 = var_x15 < 1.3347668393782383e-6;
            const double var_x45 = exp(0.07491945188463181 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x46 = -1.0 + var_x45;
            const double var_x47 = 1 / var_x46;
            const double var_x48 = var_x40 * var_chaste_interface__i_CaL_s_y_gate__y;
            const double var_x49 = var_x47 * var_x48;
            const double var_x50 = -0.61380000000000001 + 0.001 * var_x45;
            const double var_x51 = 0.55630930863148487 * var_x50;
            const double var_x52 = var_x49 * var_x51;
            const double var_x58 = exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x59 = 0.001 * var_x58 - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t;
            const double var_x60 = var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo;
            const double var_x61 = var_x60 * var_chaste_interface__i_CaL_t_y_gate__y;
            const double var_x62 = -1.0 + var_x58;
            const double var_x63 = 1 / var_x62;
            const double var_x64 = var_x63 * mParameters[4];
            const double var_x65 = var_x61 * var_x64;
            const double var_x66 = var_x59 * var_x65;
            const double var_x68 = 7.425432175987399e-7 * mParameters[4];
            const double var_x69 = var_x37 * var_x68;
            const double var_x70 = var_x38 * var_x69;
            const double var_x71 = var_x42 * var_x68;
            const double var_x72 = var_x43 * var_x71;
            const double var_x73 = var_x39 * var_x72;
            const double var_x74 = ((var_x44) ? (-var_x73 + 374597.25942315906 * (1.3347668393782383e-6 + var_chaste_interface__Vm_s__Vm_s) * (var_x73 + var_x39 * var_x70)) : (var_x52 * var_chaste_interface__Vm_s__Vm_s));
            const double var_x84 = 1.0 - 20430.198966619231 * var_x74;
            const double var_x100 = 1 / var_chaste_interface__ion_concentrations__Na_i;
            const double var_x101 = pow(var_x100, 2.7999999999999998);
            const double var_x102 = 1 / (1.0 + 124372.1149330912 * var_x101);
            const double var_x108 = exp(-7.0000000000000009 - 1.6666666666666667 * log10(var_chaste_interface__ion_concentrations__Ca_i));
            const double var_x109 = 1.0 + var_x108;
            const double var_x110 = (0.23080000000000001 + 0.76919999999999999 / var_x109) * mParameters[10];
            const double var_x116 = pow(var_x100, 1.5);
            const double var_x117 = 1 / (1.0 + 31.622776601683793 * var_x116);
            const double var_x126 = 1 / var_chaste_interface__ion_concentrations__K_i;
            const double var_x297 = 0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x298 = exp(var_x297);
            const double var_x539 = -1.0 + var_x298;
            const double var_x540 = 1 / var_x539;
            const double var_x541 = var_x540 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x550 = pow(var_chaste_interface__i_Ks_t_xs_gate__xs, 2);
            const double var_x551 = 0.018329999999999999 * var_chaste_interface__ion_concentrations__Na_t + var_chaste_interface__ion_concentrations__K_t;
            const double var_x556 = 20205.350866353103 * var_x66;
            const double var_x557 = 1 / (var_x84 - var_x556 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x558 = var_x541 * var_x557;
            const double var_x559 = 2.9528856911865595e-5 * var_x558;
            const double var_x568 = exp(0.4017857142857143 + 0.044642857142857144 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x569 = 1.0 + var_x568;
            const double var_x570 = mParameters[9] / var_x569;
            const double var_x571 = log(var_x126 * var_chaste_interface__ion_concentrations__K_t);
            const double var_x572 = -26.695336787564766 * var_x571 + var_chaste_interface__Vm_t__Vm_t;
            const double var_x573 = sqrt(var_chaste_interface__ion_concentrations__K_t);
            const double var_x574 = var_x572 * var_x573;
            const double var_x579 = exp(-1.7703904136064939 + 0.038654812524159254 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x580 = 1.0 + var_x579;
            const double var_x581 = 1 / var_x580;
            const double var_x582 = exp(-9.8123827392120067 - 0.17056114617090226 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x583 = 1.0 + var_x582;
            const double var_x584 = 1 / var_x583;
            const double var_x585 = var_x581 * var_x584 * mParameters[12];
            const double var_x588 = pow(var_chaste_interface__ion_concentrations__K_t, (-0.76000000000000001));
            const double var_x589 = var_x572 * var_x588;
            const double var_x590 = 1 / var_chaste_interface__ion_concentrations__K_t;
            const double var_x591 = exp(4.0 - 0.20000000000000001 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x592 = 1.0 + var_x591;
            const double var_x593 = 1 / var_x592;
            const double var_x594 = 0.00022402986323407338 * var_x593;
            const double var_x595 = exp(8.3333333333333339 + 0.066666666666666666 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x596 = 1.0 + var_x595;
            const double var_x597 = 0.80000000000000004 - 0.65000000000000002 / var_x596;
            const double var_x598 = var_x102 * var_x597;
            const double var_x599 = 0.0040776422173444474 * var_x598;
            const double var_x600 = 1 / (1.5 + var_chaste_interface__ion_concentrations__K_t);
            const double var_x601 = exp(-0.0037459725942315908 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x602 = exp(0.01485884101040119 * var_chaste_interface__ion_concentrations__Na_t);
            const double var_x603 = exp(-var_x297);
            const double var_x604 = 1.0 + 0.1245 * var_x601 + 0.0052142857142857138 * var_x603 * (-1.0 + var_x602);
            const double var_x605 = 1 / var_x604;
            const double var_x606 = var_x117 * var_x605;
            const double var_x607 = var_x600 * var_x606;
            const double var_x608 = var_x606 * var_chaste_interface__ion_concentrations__K_t / pow((1 + 0.66666666666666663 * var_chaste_interface__ion_concentrations__K_t), 2);
            const double var_x609 = 1 / var_x573;
            const double var_x610 = var_x570 * var_chaste_interface__i_Kr_t_xr_gate__xr;
            const double var_x611 = var_x609 * var_x610;
            const double var_x612 = var_x110 * var_x550;
            const double var_x613 = var_x612 / var_x551;
            const double var_x614 = exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__Vm_t__Vm_t - 6.3668378238341967 * var_x571);
            const double var_x615 = 1.0 + var_x614;
            const double var_x616 = 1 / var_x615;
            const double var_x617 = exp(-2.4444678999999998 + 13.729411709844559 * var_x571 - 0.51429999999999998 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x618 = 1.0 + var_x617;
            const double var_x619 = 1 / var_x618;
            const double var_x620 = exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__Vm_t__Vm_t - 2.144169450777202 * var_x571);
            const double var_x621 = exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__Vm_t__Vm_t - 1.6484370466321243 * var_x571);
            const double var_x622 = var_x621 + 0.49124000000000001 * var_x620;
            const double var_x623 = var_x619 * var_x622;
            const double var_x624 = 1 / (1000.0 * var_x623 + 1020.0 * var_x616);
            const double var_x625 = var_x616 * mParameters[8];
            const double var_x626 = var_x624 * var_x625;
            const double var_x627 = var_x609 * var_x626;
            const double var_x628 = var_x572 * var_x611;
            const double var_x629 = var_x572 * var_x627;
            const double var_x630 = var_x585 * var_chaste_interface__i_Kto_t_r2_gate__r2;
            const double var_x631 = 0.03733831053901223 * var_x630;
            const double var_x632 = var_x559 * var_x61;
            const double var_x633 = 1000.0 * var_x619;
            const double var_x634 = var_x614 / pow(var_x615, 2);
            const double var_x635 = var_x617 * var_x622 / pow(var_x618, 2);
            const double var_x636 = -var_x633 * (-1.0533018009997928 * var_x590 * var_x620 - 1.6484370466321243 * var_x590 * var_x621) + 13729.411709844559 * var_x590 * var_x635 - 6494.1745803108806 * var_x590 * var_x634;
            const double var_x637 = var_x574 * var_x625 / pow((var_x616 + 0.98039215686274506 * var_x623), 2);
            const double var_x638 = 8.9748345313997547e-7 * var_x637;
            const double var_x639 = var_x624 * var_x634 * mParameters[8];
            const double var_x640 = 5.944982512183886 * var_x639;
            const double var_x641 = var_x572 * var_x609;
            const double var_x642 = var_x5 * var_x540;
            const double var_x643 = var_x642 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x644 = 6.6360626922295608e-7 * var_x643;
            const double var_x645 = -0.0050000000000000001 - var_x644;
            
            partialF = (var_x645 - var_x632 + 7.8667974214776017e-6 * var_x628 + 6.7624791094742814e-8 * var_x589 + 0.46687089232341528 * var_x629 + 0.0018649105065873116 * var_x608 - 0.00042001361321178138 * var_x611 - 0.004196048639821451 * var_x607 - 0.03733831053901223 * var_x613 - 24.926551413768912 * var_x627 - 7.5219440560952926e-6 * var_x588 + var_x636 * var_x638 + var_x640 * var_x641 - var_x590 * var_x594 - var_x590 * var_x599 - var_x590 * var_x631) * mParameters[3];
        }
        else
        {
            const double y_save = rY[46];
            rY[46] += delta;
            const double temp = EvaluateYDerivative46(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[46])/delta;
            rY[46] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative47(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__ion_concentrations__Ca_i = rY[1];
        // Units: millimolar; Initial value: 8.8787034e-05
        double var_chaste_interface__i_Na_t_m_gate__m = rY[4];
        // Units: dimensionless; Initial value: 0.0034129472
        double var_chaste_interface__i_Na_t_h_gate__h = rY[5];
        // Units: dimensionless; Initial value: 0.82700551
        double var_chaste_interface__ion_concentrations__K_t = rY[46];
        // Units: millimolar; Initial value: 5.4140321
        double var_chaste_interface__ion_concentrations__Na_t = rY[47];
        // Units: millimolar; Initial value: 139.93239
        double var_chaste_interface__ion_concentrations__Ca_t = rY[48];
        // Units: millimolar; Initial value: 1.8476402
        double var_chaste_interface__ion_concentrations__K_i = rY[49];
        // Units: millimolar; Initial value: 136.78926
        double var_chaste_interface__ion_concentrations__Na_i = rY[50];
        // Units: millimolar; Initial value: 11.120279
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        


        // Mathematics
        const double var_i_nsNa_t__i_nsNa_t = 3.5561299902450127e-8 * (-0.75 * var_chaste_interface__ion_concentrations__Na_t + 0.75 * var_chaste_interface__ion_concentrations__Na_i * exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t)) * var_chaste_interface__Vm_t__Vm_t / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t))); // microA
        const double var_i_Na_t__i_Na_t = 6.8397763279100978e-5 * pow(var_chaste_interface__i_Na_t_m_gate__m, 3) * (-26.695336787564766 * log((var_chaste_interface__ion_concentrations__Na_t + 0.12 * var_chaste_interface__ion_concentrations__K_t) / (var_chaste_interface__ion_concentrations__Na_i + 0.12 * var_chaste_interface__ion_concentrations__K_i)) + var_chaste_interface__Vm_t__Vm_t) * var_chaste_interface__i_Na_t_h_gate__h * mParameters[5]; // microA
        const double var_i_Nab_t__i_Nab_t = 4.216080877125834e-8 * var_chaste_interface__Vm_t__Vm_t - 1.125496989384856e-6 * log(var_chaste_interface__ion_concentrations__Na_t / var_chaste_interface__ion_concentrations__Na_i); // microA
        const double var_i_Naps_t__i_Naps_t = 2.9793638198355892e-7 * (-26.695336787564766 * log((var_chaste_interface__ion_concentrations__Na_t + 0.12 * var_chaste_interface__ion_concentrations__K_t) / (var_chaste_interface__ion_concentrations__Na_i + 0.12 * var_chaste_interface__ion_concentrations__K_i)) + var_chaste_interface__Vm_t__Vm_t) / (1.0 + exp(-6.75 - 0.125 * var_chaste_interface__Vm_t__Vm_t)); // microA
        const double var_i_NaCa_t__i_NaCa_t = 5.6214411695011118e-5 * (-pow(var_chaste_interface__ion_concentrations__Na_t, 3) * var_chaste_interface__ion_concentrations__Ca_i + pow(var_chaste_interface__ion_concentrations__Na_i, 3) * var_chaste_interface__ion_concentrations__Ca_t * exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t)) * mParameters[11] * exp(-0.03184076705096852 * var_chaste_interface__Vm_t__Vm_t) / (1.0 + 0.0001 * (pow(var_chaste_interface__ion_concentrations__Na_t, 3) * var_chaste_interface__ion_concentrations__Ca_i + pow(var_chaste_interface__ion_concentrations__Na_i, 3) * var_chaste_interface__ion_concentrations__Ca_t * exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t)) * exp(-0.03184076705096852 * var_chaste_interface__Vm_t__Vm_t)); // microA
        const double var_i_NaK_t__i_NaK_t = 8.432161754251667e-5 * var_chaste_interface__ion_concentrations__K_t / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__ion_concentrations__Na_i), 1.5)) * (1.5 + var_chaste_interface__ion_concentrations__K_t) * (1.0 + 0.1245 * exp(-0.0037459725942315908 * var_chaste_interface__Vm_t__Vm_t) + 0.0052142857142857138 * (-1.0 + exp(0.01485884101040119 * var_chaste_interface__ion_concentrations__Na_t)) * exp(-0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t))); // microA
        const double d_dt_chaste_interface_var_ion_concentrations__Na_t = 2401037.2757531707 * (2.9154066330786974e-7 + 3.1088082901554407e-5 * var_i_NaCa_t__i_NaCa_t + 3.1088082901554407e-5 * var_i_NaK_t__i_NaK_t + 1.0362694300518135e-5 * var_i_Na_t__i_Na_t + 1.0362694300518135e-5 * var_i_Nab_t__i_Nab_t + 1.0362694300518135e-5 * var_i_Naps_t__i_Naps_t + 1.0362694300518135e-5 * var_i_nsNa_t__i_nsNa_t - 2.0824333093419268e-9 * var_chaste_interface__ion_concentrations__Na_t) * mParameters[3]; // millimolar / millisecond

        return d_dt_chaste_interface_var_ion_concentrations__Na_t;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative47(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__ion_concentrations__Ca_i = rY[1];
            // Units: millimolar; Initial value: 8.8787034e-05
            double var_chaste_interface__i_Na_t_m_gate__m = rY[4];
            // Units: dimensionless; Initial value: 0.0034129472
            double var_chaste_interface__i_Na_t_h_gate__h = rY[5];
            // Units: dimensionless; Initial value: 0.82700551
            double var_chaste_interface__ion_concentrations__K_t = rY[46];
            // Units: millimolar; Initial value: 5.4140321
            double var_chaste_interface__ion_concentrations__Na_t = rY[47];
            // Units: millimolar; Initial value: 139.93239
            double var_chaste_interface__ion_concentrations__Ca_t = rY[48];
            // Units: millimolar; Initial value: 1.8476402
            double var_chaste_interface__ion_concentrations__Na_i = rY[50];
            // Units: millimolar; Initial value: 11.120279
            double var_chaste_interface__Vm_t__Vm_t = rY[54];
            // Units: millivolt; Initial value: -85.208034
            


            const double var_x3 = pow(var_chaste_interface__ion_concentrations__Ca_i, 3);
            const double var_x4 = 1.0 + 1.5625000000000003e-8 / var_x3;
            const double var_x5 = 1 / var_x4;
            const double var_x100 = 1 / var_chaste_interface__ion_concentrations__Na_i;
            const double var_x116 = pow(var_x100, 1.5);
            const double var_x117 = 1 / (1.0 + 31.622776601683793 * var_x116);
            const double var_x147 = pow(var_chaste_interface__ion_concentrations__Na_i, 3);
            const double var_x293 = pow(var_chaste_interface__ion_concentrations__Na_t, 3);
            const double var_x295 = exp(-0.03184076705096852 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x296 = var_x293 * var_chaste_interface__ion_concentrations__Ca_i;
            const double var_x297 = 0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x298 = exp(var_x297);
            const double var_x299 = var_x147 * var_x298;
            const double var_x300 = var_x299 * var_chaste_interface__ion_concentrations__Ca_t;
            const double var_x301 = 1.0 + 0.0001 * var_x295 * (var_x296 + var_x300);
            const double var_x302 = var_x295 / var_x301;
            const double var_x304 = pow(var_x301, (-2));
            const double var_x305 = var_x304 * pow(var_x295, 2);
            const double var_x307 = var_x300 - var_x296;
            const double var_x310 = var_x307 * mParameters[11];
            const double var_x311 = pow(var_chaste_interface__ion_concentrations__Na_t, 2) * var_chaste_interface__ion_concentrations__Ca_i;
            const double var_x312 = var_x302 * mParameters[11];
            const double var_x314 = var_x305 * var_x310;
            const double var_x315 = var_x311 * var_x314;
            const double var_x539 = -1.0 + var_x298;
            const double var_x540 = 1 / var_x539;
            const double var_x600 = 1 / (1.5 + var_chaste_interface__ion_concentrations__K_t);
            const double var_x601 = exp(-0.0037459725942315908 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x602 = exp(0.01485884101040119 * var_chaste_interface__ion_concentrations__Na_t);
            const double var_x603 = exp(-var_x297);
            const double var_x604 = 1.0 + 0.1245 * var_x601 + 0.0052142857142857138 * var_x603 * (-1.0 + var_x602);
            const double var_x642 = var_x5 * var_x540;
            const double var_x643 = var_x642 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x644 = 6.6360626922295608e-7 * var_x643;
            const double var_x645 = -0.0050000000000000001 - var_x644;
            const double var_x646 = var_x600 * var_chaste_interface__ion_concentrations__K_t;
            const double var_x647 = var_x117 * var_x646 / pow(var_x604, 2);
            const double var_x648 = var_x602 * var_x603 * var_x647;
            const double var_x683 = var_chaste_interface__ion_concentrations__Na_t + 0.12 * var_chaste_interface__ion_concentrations__K_t;
            const double var_x687 = pow(var_chaste_interface__i_Na_t_m_gate__m, 3) * mParameters[5];
            const double var_x690 = exp(-6.75 - 0.125 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x691 = 1.0 + var_x690;
            const double var_x692 = 1 / var_x691;
            const double var_x693 = 1 / var_x683;
            const double var_x694 = var_x692 * var_x693;
            const double var_x695 = var_x687 * var_chaste_interface__i_Na_t_h_gate__h;
            const double var_x696 = var_x693 * var_x695;
            const double var_x697 = 1 / var_chaste_interface__ion_concentrations__Na_t;
            const double var_x698 = var_x311 * var_x312;
            
            partialF = (var_x645 - 1.2588145919464355e-6 * var_x315 - 2.8003732904259173e-5 * var_x697 - 0.012588145919464354 * var_x698 - 4.8765371052902662e-7 * var_x648 - 0.045430644001839972 * var_x696 - 0.00019789304585676482 * var_x694) * mParameters[3];
        }
        else
        {
            const double y_save = rY[47];
            rY[47] += delta;
            const double temp = EvaluateYDerivative47(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[47])/delta;
            rY[47] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative48(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__ion_concentrations__Ca_i = rY[1];
        // Units: millimolar; Initial value: 8.8787034e-05
        double var_chaste_interface__i_CaL_t__TCo = rY[24];
        // Units: dimensionless; Initial value: -1.3449454e-17
        double var_chaste_interface__i_CaL_t__TCcao = rY[30];
        // Units: dimensionless; Initial value: 3.75926e-22
        double var_chaste_interface__i_CaL_t_y_gate__y = rY[31];
        // Units: dimensionless; Initial value: 0.7813477
        double var_chaste_interface__ion_concentrations__Na_t = rY[47];
        // Units: millimolar; Initial value: 139.93239
        double var_chaste_interface__ion_concentrations__Ca_t = rY[48];
        // Units: millimolar; Initial value: 1.8476402
        double var_chaste_interface__ion_concentrations__Na_i = rY[50];
        // Units: millimolar; Initial value: 11.120279
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        


        // Mathematics
        const double var_i_CaL_t__i_CaL_t = 0.98899432645597307 * (0.001 * exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t) - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y * mParameters[4] / (-1.0 + exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t)); // microA
        const double var_i_Cab_t__i_Cab_t = 1.1805026455952333e-7 * var_chaste_interface__Vm_t__Vm_t - 1.5756957851387983e-6 * log(var_chaste_interface__ion_concentrations__Ca_t / var_chaste_interface__ion_concentrations__Ca_i); // microA
        const double var_i_NaCa_t__i_NaCa_t = 5.6214411695011118e-5 * (-pow(var_chaste_interface__ion_concentrations__Na_t, 3) * var_chaste_interface__ion_concentrations__Ca_i + pow(var_chaste_interface__ion_concentrations__Na_i, 3) * var_chaste_interface__ion_concentrations__Ca_t * exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t)) * mParameters[11] * exp(-0.03184076705096852 * var_chaste_interface__Vm_t__Vm_t) / (1.0 + 0.0001 * (pow(var_chaste_interface__ion_concentrations__Na_t, 3) * var_chaste_interface__ion_concentrations__Ca_i + pow(var_chaste_interface__ion_concentrations__Na_i, 3) * var_chaste_interface__ion_concentrations__Ca_t * exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t)) * exp(-0.03184076705096852 * var_chaste_interface__Vm_t__Vm_t)); // microA
        const double var_i_pCa_t__i_pCa_t = 2.4580446178426913e-5 * var_chaste_interface__ion_concentrations__Ca_i / (0.00050000000000000001 + var_chaste_interface__ion_concentrations__Ca_i); // microA
        const double d_dt_chaste_interface_var_ion_concentrations__Ca_t = 2401037.2757531707 * (3.1236499640128904e-9 + 5.1813471502590676e-6 * var_i_CaL_t__i_CaL_t + 5.1813471502590676e-6 * var_i_Cab_t__i_Cab_t + 5.1813471502590676e-6 * var_i_pCa_t__i_pCa_t - 1.7353610911182723e-9 * var_chaste_interface__ion_concentrations__Ca_t - 1.0362694300518135e-5 * var_i_NaCa_t__i_NaCa_t) * mParameters[3]; // millimolar / millisecond

        return d_dt_chaste_interface_var_ion_concentrations__Ca_t;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative48(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__ion_concentrations__Ca_i = rY[1];
            // Units: millimolar; Initial value: 8.8787034e-05
            double var_chaste_interface__i_CaL_t__TCo = rY[24];
            // Units: dimensionless; Initial value: -1.3449454e-17
            double var_chaste_interface__i_CaL_t__TCcao = rY[30];
            // Units: dimensionless; Initial value: 3.75926e-22
            double var_chaste_interface__i_CaL_t_y_gate__y = rY[31];
            // Units: dimensionless; Initial value: 0.7813477
            double var_chaste_interface__ion_concentrations__Na_t = rY[47];
            // Units: millimolar; Initial value: 139.93239
            double var_chaste_interface__ion_concentrations__Ca_t = rY[48];
            // Units: millimolar; Initial value: 1.8476402
            double var_chaste_interface__ion_concentrations__Na_i = rY[50];
            // Units: millimolar; Initial value: 11.120279
            double var_chaste_interface__Vm_t__Vm_t = rY[54];
            // Units: millivolt; Initial value: -85.208034
            


            const double var_x58 = exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x60 = var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo;
            const double var_x61 = var_x60 * var_chaste_interface__i_CaL_t_y_gate__y;
            const double var_x62 = -1.0 + var_x58;
            const double var_x63 = 1 / var_x62;
            const double var_x64 = var_x63 * mParameters[4];
            const double var_x65 = var_x61 * var_x64;
            const double var_x147 = pow(var_chaste_interface__ion_concentrations__Na_i, 3);
            const double var_x274 = var_x65 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x293 = pow(var_chaste_interface__ion_concentrations__Na_t, 3);
            const double var_x295 = exp(-0.03184076705096852 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x296 = var_x293 * var_chaste_interface__ion_concentrations__Ca_i;
            const double var_x297 = 0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x298 = exp(var_x297);
            const double var_x299 = var_x147 * var_x298;
            const double var_x300 = var_x299 * var_chaste_interface__ion_concentrations__Ca_t;
            const double var_x301 = 1.0 + 0.0001 * var_x295 * (var_x296 + var_x300);
            const double var_x302 = var_x295 / var_x301;
            const double var_x304 = pow(var_x301, (-2));
            const double var_x305 = var_x304 * pow(var_x295, 2);
            const double var_x307 = var_x300 - var_x296;
            const double var_x310 = var_x307 * mParameters[11];
            const double var_x312 = var_x302 * mParameters[11];
            const double var_x314 = var_x305 * var_x310;
            const double var_x316 = 1 / var_chaste_interface__ion_concentrations__Ca_t;
            const double var_x699 = var_x299 * var_x312;
            const double var_x700 = var_x299 * var_x314;
            
            partialF = (-0.0041666666666666666 + 1.3986828799404838e-7 * var_x700 - 0.0013986828799404838 * var_x699 - 4.1955584195609035 * var_x274 - 1.960261303298142e-5 * var_x316) * mParameters[3];
        }
        else
        {
            const double y_save = rY[48];
            rY[48] += delta;
            const double temp = EvaluateYDerivative48(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[48])/delta;
            rY[48] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative49(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.207812
        double var_chaste_interface__ion_concentrations__Ca_i = rY[1];
        // Units: millimolar; Initial value: 8.8787034e-05
        double var_chaste_interface__i_CaL_s__Co = rY[11];
        // Units: dimensionless; Initial value: -1.3496934e-17
        double var_chaste_interface__i_CaL_s__Ccao = rY[17];
        // Units: dimensionless; Initial value: 3.7986638e-22
        double var_chaste_interface__i_CaL_s_y_gate__y = rY[18];
        // Units: dimensionless; Initial value: 0.78134852
        double var_chaste_interface__i_CaL_t__TCo = rY[24];
        // Units: dimensionless; Initial value: -1.3449454e-17
        double var_chaste_interface__i_CaL_t__TCcao = rY[30];
        // Units: dimensionless; Initial value: 3.75926e-22
        double var_chaste_interface__i_CaL_t_y_gate__y = rY[31];
        // Units: dimensionless; Initial value: 0.7813477
        double var_chaste_interface__i_Kr_s_xr_gate__xr = rY[32];
        // Units: dimensionless; Initial value: 0.00020469344
        double var_chaste_interface__i_Kr_t_xr_gate__xr = rY[33];
        // Units: dimensionless; Initial value: 0.00020469344
        double var_chaste_interface__i_Ks_s_xs_gate__xs = rY[34];
        // Units: dimensionless; Initial value: 0.0061359896
        double var_chaste_interface__i_Ks_t_xs_gate__xs = rY[35];
        // Units: dimensionless; Initial value: 0.0061359896
        double var_chaste_interface__i_Kto_s_r2_gate__r2 = rY[36];
        // Units: dimensionless; Initial value: 0.9625701
        double var_chaste_interface__i_Kto_t_r2_gate__r2 = rY[38];
        // Units: dimensionless; Initial value: 0.9625701
        double var_chaste_interface__ion_concentrations__K_t = rY[46];
        // Units: millimolar; Initial value: 5.4140321
        double var_chaste_interface__ion_concentrations__Na_t = rY[47];
        // Units: millimolar; Initial value: 139.93239
        double var_chaste_interface__ion_concentrations__Ca_t = rY[48];
        // Units: millimolar; Initial value: 1.8476402
        double var_chaste_interface__ion_concentrations__K_i = rY[49];
        // Units: millimolar; Initial value: 136.78926
        double var_chaste_interface__ion_concentrations__Na_i = rY[50];
        // Units: millimolar; Initial value: 11.120279
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

        // Mathematics
        const double var_i_nsK_s__i_nsK_s = ((fabs(var_chaste_interface__Vm_s__Vm_s) < 2.6695336787564767e-6) ? (187298.62971157953 * (2.6695336787564767e-6 + var_chaste_interface__Vm_s__Vm_s) * (8.554716652752149e-14 * (-4.0500000000000007 + 0.75 * var_chaste_interface__ion_concentrations__K_i * exp(9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(9.9999999999999995e-8))) + 8.554716652752149e-14 * (-4.0500000000000007 + 0.75 * var_chaste_interface__ion_concentrations__K_i * exp(-9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(-9.9999999999999995e-8)))) - 8.554716652752149e-14 * (-4.0500000000000007 + 0.75 * var_chaste_interface__ion_concentrations__K_i * exp(-9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(-9.9999999999999995e-8)))) : (3.2045734132626158e-8 * (-4.0500000000000007 + 0.75 * var_chaste_interface__ion_concentrations__K_i * _lt_0_row[0]) * var_chaste_interface__Vm_s__Vm_s / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (_lt_0_row[1])))); // microA
        const double var_i_CaL_s__i_CaL_s = ((fabs(var_chaste_interface__Vm_s__Vm_s) < 1.3347668393782383e-6) ? (374597.25942315906 * (1.3347668393782383e-6 + var_chaste_interface__Vm_s__Vm_s) * (7.425432175987399e-7 * (-0.61380000000000001 + 0.001 * exp(9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 7.425432175987399e-7 * (-0.61380000000000001 + 0.001 * exp(-9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 7.425432175987399e-7 * (-0.61380000000000001 + 0.001 * exp(-9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.55630930863148487 * (_lt_0_row[3]) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__Vm_s__Vm_s * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (_lt_0_row[2]))); // microA
        const double var_i_CaL_s__i_KL_s = ((fabs(var_chaste_interface__Vm_s__Vm_s) < 2.6695336787564767e-6) ? (187298.62971157953 * (2.6695336787564767e-6 + var_chaste_interface__Vm_s__Vm_s) * (1.7821037222369756e-12 * (-5.4000000000000004 + var_chaste_interface__ion_concentrations__K_i * exp(9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y / ((-1.0 + exp(9.9999999999999995e-8)) * (1.0 - 20430.198966619231 * var_i_CaL_s__i_CaL_s - 20205.350866353103 * (0.001 * exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t) - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y * mParameters[4] / (-1.0 + exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t)))) + 1.7821037222369756e-12 * (-5.4000000000000004 + var_chaste_interface__ion_concentrations__K_i * exp(-9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y / ((-1.0 + exp(-9.9999999999999995e-8)) * (1.0 - 20430.198966619231 * var_i_CaL_s__i_CaL_s - 20205.350866353103 * (0.001 * exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t) - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y * mParameters[4] / (-1.0 + exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t))))) - 1.7821037222369756e-12 * (-5.4000000000000004 + var_chaste_interface__ion_concentrations__K_i * exp(-9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y / ((-1.0 + exp(-9.9999999999999995e-8)) * (1.0 - 20430.198966619231 * var_i_CaL_s__i_CaL_s - 20205.350866353103 * (0.001 * exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t) - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y * mParameters[4] / (-1.0 + exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t))))) : (6.6757117035778174e-7 * (-5.4000000000000004 + var_chaste_interface__ion_concentrations__K_i * _lt_0_row[0]) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__Vm_s__Vm_s * var_chaste_interface__i_CaL_s_y_gate__y / ((_lt_0_row[1]) * (1.0 - 20430.198966619231 * var_i_CaL_s__i_CaL_s - 20205.350866353103 * (0.001 * exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t) - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y * mParameters[4] / (-1.0 + exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t)))))); // microA
        const double var_i_Kr_s__E_Kr_s = 26.695336787564766 * log(5.4000000000000004 / var_chaste_interface__ion_concentrations__K_i); // millivolt
        const double var_i_K1_s__E_K1_s = var_i_Kr_s__E_Kr_s; // millivolt
        const double var_i_Kr_t__E_Kr_t = 26.695336787564766 * log(var_chaste_interface__ion_concentrations__K_t / var_chaste_interface__ion_concentrations__K_i); // millivolt
        const double var_i_K1_t__E_K1_t = var_i_Kr_t__E_Kr_t; // millivolt
        const double var_i_CaL_t__i_CaL_t = 0.98899432645597307 * (0.001 * exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t) - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y * mParameters[4] / (-1.0 + exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t)); // microA
        const double var_i_CaL_t__i_KL_t = 1.1867931917471675e-6 * (-var_chaste_interface__ion_concentrations__K_t + var_chaste_interface__ion_concentrations__K_i * exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t)) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y / ((-1.0 + exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t)) * (1.0 - 20430.198966619231 * var_i_CaL_s__i_CaL_s - 20430.198966619231 * var_i_CaL_t__i_CaL_t)); // microA
        const double var_i_nsK_t__i_nsK_t = 3.5561299902450127e-8 * (-0.75 * var_chaste_interface__ion_concentrations__K_t + 0.75 * var_chaste_interface__ion_concentrations__K_i * exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t)) * var_chaste_interface__Vm_t__Vm_t / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t))); // microA
        const double var_i_K1_s__i_K1_s = 0.02180178704521343 * (-var_i_K1_s__E_K1_s + var_chaste_interface__Vm_s__Vm_s) * mParameters[8] / ((1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__Vm_s__Vm_s - 0.23849999999999999 * var_i_K1_s__E_K1_s)) * (1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__Vm_s__Vm_s - 0.23849999999999999 * var_i_K1_s__E_K1_s)) + 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__Vm_s__Vm_s - 0.080320000000000003 * var_i_K1_s__E_K1_s) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__Vm_s__Vm_s - 0.061749999999999999 * var_i_K1_s__E_K1_s)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_i_K1_s__E_K1_s - 0.51429999999999998 * var_chaste_interface__Vm_s__Vm_s)))); // microA
        const double var_i_K1_t__i_K1_t = 0.037527981397187667 * sqrt(var_chaste_interface__ion_concentrations__K_t) * (-var_i_K1_t__E_K1_t + var_chaste_interface__Vm_t__Vm_t) * mParameters[8] / ((1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__Vm_t__Vm_t - 0.23849999999999999 * var_i_K1_t__E_K1_t)) * (1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__Vm_t__Vm_t - 0.23849999999999999 * var_i_K1_t__E_K1_t)) + 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__Vm_t__Vm_t - 0.080320000000000003 * var_i_K1_t__E_K1_t) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__Vm_t__Vm_t - 0.061749999999999999 * var_i_K1_t__E_K1_t)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_i_K1_t__E_K1_t - 0.51429999999999998 * var_chaste_interface__Vm_t__Vm_t)))); // microA
        const double var_i_KATP_s__i_KATP_s = 1.529643429454676e-8 * var_chaste_interface__Vm_s__Vm_s - 1.529643429454676e-8 * var_i_Kr_s__E_Kr_s; // microA
        const double var_i_KATP_t__i_KATP_t = 1.1324606116668949e-8 * pow(var_chaste_interface__ion_concentrations__K_t, 0.23999999999999999) * (-var_i_Kr_t__E_Kr_t + var_chaste_interface__Vm_t__Vm_t); // microA
        const double var_i_KNa_s__i_KNa_s = 5.5321598591488189e-6 * (_lt_0_row[4]) * (-var_i_Kr_s__E_Kr_s + var_chaste_interface__Vm_s__Vm_s) / (1.0 + 124372.1149330912 * pow((1 / var_chaste_interface__ion_concentrations__Na_i), 2.7999999999999998)); // microA
        const double var_i_KNa_t__i_KNa_t = 6.1390634723887744e-6 * (0.80000000000000004 - 0.65000000000000002 / (1.0 + exp(8.3333333333333339 + 0.066666666666666666 * var_chaste_interface__Vm_t__Vm_t))) * (-var_i_Kr_t__E_Kr_t + var_chaste_interface__Vm_t__Vm_t) / (1.0 + 124372.1149330912 * pow((1 / var_chaste_interface__ion_concentrations__Na_i), 2.7999999999999998)); // microA
        const double var_i_Kp_s__i_Kp_s = 3.0394256057150496e-7 * (-var_i_Kr_s__E_Kr_s + var_chaste_interface__Vm_s__Vm_s) / (_lt_0_row[5]); // microA
        const double var_i_Kp_t__i_Kp_t = 3.3728647017006672e-7 * (-var_i_Kr_t__E_Kr_t + var_chaste_interface__Vm_t__Vm_t) / (1.0 + exp(4.0 - 0.20000000000000001 * var_chaste_interface__Vm_t__Vm_t)); // microA
        const double var_i_Kto_s__i_Kto_s = 5.0657093428584157e-5 * (-var_i_Kr_s__E_Kr_s + var_chaste_interface__Vm_s__Vm_s) * var_chaste_interface__i_Kto_s_r2_gate__r2 * mParameters[12] / ((_lt_0_row[6]) * (_lt_0_row[7])); // microA
        const double var_i_Kto_t__i_Kto_t = 5.6214411695011118e-5 * (-var_i_Kr_t__E_Kr_t + var_chaste_interface__Vm_t__Vm_t) * var_chaste_interface__i_Kto_t_r2_gate__r2 * mParameters[12] / ((1.0 + exp(-1.7703904136064939 + 0.038654812524159254 * var_chaste_interface__Vm_t__Vm_t)) * (1.0 + exp(-9.8123827392120067 - 0.17056114617090226 * var_chaste_interface__Vm_t__Vm_t))); // microA
        const double var_i_NaK_s__i_NaK_s = 5.9467022720511838e-5 / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__ion_concentrations__Na_i), 1.5)) * (_lt_0_row[10])); // microA
        const double var_i_NaK_t__i_NaK_t = 8.432161754251667e-5 * var_chaste_interface__ion_concentrations__K_t / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__ion_concentrations__Na_i), 1.5)) * (1.5 + var_chaste_interface__ion_concentrations__K_t) * (1.0 + 0.1245 * exp(-0.0037459725942315908 * var_chaste_interface__Vm_t__Vm_t) + 0.0052142857142857138 * (-1.0 + exp(0.01485884101040119 * var_chaste_interface__ion_concentrations__Na_t)) * exp(-0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t))); // microA
        const double var_i_Kr_s__i_Kr_s = 1.3241764222231898e-6 * (-var_i_Kr_s__E_Kr_s + var_chaste_interface__Vm_s__Vm_s) * var_chaste_interface__i_Kr_s_xr_gate__xr * mParameters[9] / (_lt_0_row[11]); // microA
        const double var_i_Kr_t__i_Kr_t = 6.3234832614954339e-7 * sqrt(var_chaste_interface__ion_concentrations__K_t) * (-var_i_Kr_t__E_Kr_t + var_chaste_interface__Vm_t__Vm_t) * var_chaste_interface__i_Kr_t_xr_gate__xr * mParameters[9] / (1.0 + exp(0.4017857142857143 + 0.044642857142857144 * var_chaste_interface__Vm_t__Vm_t)); // microA
        const double var_i_Ks_s__i_Ks_s = 5.0657093428584157e-5 * pow(var_chaste_interface__i_Ks_s_xs_gate__xs, 2) * (0.23080000000000001 + 0.76919999999999999 / (1.0 + exp(-7.0000000000000009 - 1.6666666666666667 * log10(var_chaste_interface__ion_concentrations__Ca_i)))) * (-26.695336787564766 * log(7.9662000000000006 / (0.018329999999999999 * var_chaste_interface__ion_concentrations__Na_i + var_chaste_interface__ion_concentrations__K_i)) + var_chaste_interface__Vm_s__Vm_s) * mParameters[10]; // microA
        const double var_i_Ks_t__i_Ks_t = 5.6214411695011118e-5 * pow(var_chaste_interface__i_Ks_t_xs_gate__xs, 2) * (0.23080000000000001 + 0.76919999999999999 / (1.0 + exp(-7.0000000000000009 - 1.6666666666666667 * log10(var_chaste_interface__ion_concentrations__Ca_i)))) * (-26.695336787564766 * log((0.018329999999999999 * var_chaste_interface__ion_concentrations__Na_t + var_chaste_interface__ion_concentrations__K_t) / (0.018329999999999999 * var_chaste_interface__ion_concentrations__Na_i + var_chaste_interface__ion_concentrations__K_i)) + var_chaste_interface__Vm_t__Vm_t) * mParameters[10]; // microA
        const double d_dt_chaste_interface_var_ion_concentrations__K_i = -1.0611127405703633 * (-2.0 * var_i_NaK_s__i_NaK_s - 2.0 * var_i_NaK_t__i_NaK_t + var_i_CaL_s__i_KL_s + var_i_CaL_t__i_KL_t + var_i_K1_s__i_K1_s + var_i_K1_t__i_K1_t + var_i_KATP_s__i_KATP_s + var_i_KATP_t__i_KATP_t + var_i_KNa_s__i_KNa_s + var_i_KNa_t__i_KNa_t + var_i_Kp_s__i_Kp_s + var_i_Kp_t__i_Kp_t + var_i_Kr_s__i_Kr_s + var_i_Kr_t__i_Kr_t + var_i_Ks_s__i_Ks_s + var_i_Ks_t__i_Ks_t + var_i_Kto_s__i_Kto_s + var_i_Kto_t__i_Kto_t + var_i_nsK_s__i_nsK_s + var_i_nsK_t__i_nsK_t) * mParameters[3]; // millimolar / millisecond

        return d_dt_chaste_interface_var_ion_concentrations__K_i;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative49(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -85.207812
            double var_chaste_interface__ion_concentrations__Ca_i = rY[1];
            // Units: millimolar; Initial value: 8.8787034e-05
            double var_chaste_interface__i_CaL_s__Co = rY[11];
            // Units: dimensionless; Initial value: -1.3496934e-17
            double var_chaste_interface__i_CaL_s__Ccao = rY[17];
            // Units: dimensionless; Initial value: 3.7986638e-22
            double var_chaste_interface__i_CaL_s_y_gate__y = rY[18];
            // Units: dimensionless; Initial value: 0.78134852
            double var_chaste_interface__i_CaL_t__TCo = rY[24];
            // Units: dimensionless; Initial value: -1.3449454e-17
            double var_chaste_interface__i_CaL_t__TCcao = rY[30];
            // Units: dimensionless; Initial value: 3.75926e-22
            double var_chaste_interface__i_CaL_t_y_gate__y = rY[31];
            // Units: dimensionless; Initial value: 0.7813477
            double var_chaste_interface__i_Kr_s_xr_gate__xr = rY[32];
            // Units: dimensionless; Initial value: 0.00020469344
            double var_chaste_interface__i_Kr_t_xr_gate__xr = rY[33];
            // Units: dimensionless; Initial value: 0.00020469344
            double var_chaste_interface__i_Ks_s_xs_gate__xs = rY[34];
            // Units: dimensionless; Initial value: 0.0061359896
            double var_chaste_interface__i_Ks_t_xs_gate__xs = rY[35];
            // Units: dimensionless; Initial value: 0.0061359896
            double var_chaste_interface__i_Kto_s_r2_gate__r2 = rY[36];
            // Units: dimensionless; Initial value: 0.9625701
            double var_chaste_interface__i_Kto_t_r2_gate__r2 = rY[38];
            // Units: dimensionless; Initial value: 0.9625701
            double var_chaste_interface__ion_concentrations__K_t = rY[46];
            // Units: millimolar; Initial value: 5.4140321
            double var_chaste_interface__ion_concentrations__Ca_t = rY[48];
            // Units: millimolar; Initial value: 1.8476402
            double var_chaste_interface__ion_concentrations__K_i = rY[49];
            // Units: millimolar; Initial value: 136.78926
            double var_chaste_interface__ion_concentrations__Na_i = rY[50];
            // Units: millimolar; Initial value: 11.120279
            double var_chaste_interface__Vm_t__Vm_t = rY[54];
            // Units: millivolt; Initial value: -85.208034
            


            const double var_x3 = pow(var_chaste_interface__ion_concentrations__Ca_i, 3);
            const double var_x4 = 1.0 + 1.5625000000000003e-8 / var_x3;
            const double var_x5 = 1 / var_x4;
            const double var_x7 = exp(9.9999999999999995e-8);
            const double var_x8 = 1 / (-1.0 + var_x7);
            const double var_x11 = exp(-9.9999999999999995e-8);
            const double var_x13 = 1 / (-1.0 + var_x11);
            const double var_x15 = fabs(var_chaste_interface__Vm_s__Vm_s);
            const double var_x16 = var_x15 < 2.6695336787564767e-6;
            const double var_x17 = 0.037459725942315905 * var_chaste_interface__Vm_s__Vm_s;
            const double var_x18 = exp(var_x17);
            const double var_x20 = -1.0 + var_x18;
            const double var_x21 = 1 / var_x20;
            const double var_x22 = var_x21 * var_x5;
            const double var_x24 = var_x18 * var_chaste_interface__Vm_s__Vm_s;
            const double var_x25 = var_x22 * var_x24;
            const double var_x37 = -0.61380000000000001 + 0.001 * var_x7;
            const double var_x38 = var_x8 * var_chaste_interface__i_CaL_s_y_gate__y;
            const double var_x39 = var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co;
            const double var_x40 = var_x39 * mParameters[4];
            const double var_x42 = -0.61380000000000001 + 0.001 * var_x11;
            const double var_x43 = var_x13 * var_chaste_interface__i_CaL_s_y_gate__y;
            const double var_x44 = var_x15 < 1.3347668393782383e-6;
            const double var_x45 = exp(0.07491945188463181 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x46 = -1.0 + var_x45;
            const double var_x47 = 1 / var_x46;
            const double var_x48 = var_x40 * var_chaste_interface__i_CaL_s_y_gate__y;
            const double var_x49 = var_x47 * var_x48;
            const double var_x50 = -0.61380000000000001 + 0.001 * var_x45;
            const double var_x51 = 0.55630930863148487 * var_x50;
            const double var_x52 = var_x49 * var_x51;
            const double var_x55 = 0.5 + 187298.62971157953 * var_chaste_interface__Vm_s__Vm_s;
            const double var_x58 = exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x59 = 0.001 * var_x58 - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t;
            const double var_x60 = var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo;
            const double var_x61 = var_x60 * var_chaste_interface__i_CaL_t_y_gate__y;
            const double var_x62 = -1.0 + var_x58;
            const double var_x63 = 1 / var_x62;
            const double var_x64 = var_x63 * mParameters[4];
            const double var_x65 = var_x61 * var_x64;
            const double var_x66 = var_x59 * var_x65;
            const double var_x68 = 7.425432175987399e-7 * mParameters[4];
            const double var_x69 = var_x37 * var_x68;
            const double var_x70 = var_x38 * var_x69;
            const double var_x71 = var_x42 * var_x68;
            const double var_x72 = var_x43 * var_x71;
            const double var_x73 = var_x39 * var_x72;
            const double var_x74 = ((var_x44) ? (-var_x73 + 374597.25942315906 * (1.3347668393782383e-6 + var_chaste_interface__Vm_s__Vm_s) * (var_x73 + var_x39 * var_x70)) : (var_x52 * var_chaste_interface__Vm_s__Vm_s));
            const double var_x83 = 20205.350866353103 * var_x66;
            const double var_x84 = 1.0 - 20430.198966619231 * var_x74;
            const double var_x85 = 1 / (var_x84 - var_x83 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x86 = var_x39 * var_x85;
            const double var_x88 = var_x86 * var_chaste_interface__i_CaL_s_y_gate__y;
            const double var_x92 = var_x21 * var_x88;
            const double var_x97 = exp(4.0 - 0.20000000000000001 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x98 = 1.0 + var_x97;
            const double var_x99 = 1 / var_x98;
            const double var_x100 = 1 / var_chaste_interface__ion_concentrations__Na_i;
            const double var_x101 = pow(var_x100, 2.7999999999999998);
            const double var_x102 = 1 / (1.0 + 124372.1149330912 * var_x101);
            const double var_x103 = exp(8.3333333333333339 + 0.066666666666666666 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x104 = 1.0 + var_x103;
            const double var_x105 = 0.80000000000000004 - 0.65000000000000002 / var_x104;
            const double var_x106 = var_x102 * var_x105;
            const double var_x107 = pow(var_chaste_interface__i_Ks_s_xs_gate__xs, 2);
            const double var_x108 = exp(-7.0000000000000009 - 1.6666666666666667 * log10(var_chaste_interface__ion_concentrations__Ca_i));
            const double var_x109 = 1.0 + var_x108;
            const double var_x110 = (0.23080000000000001 + 0.76919999999999999 / var_x109) * mParameters[10];
            const double var_x111 = var_x107 * var_x110;
            const double var_x126 = 1 / var_chaste_interface__ion_concentrations__K_i;
            const double var_x127 = log(5.4000000000000004 * var_x126);
            const double var_x128 = -26.695336787564766 * var_x127 + var_chaste_interface__Vm_s__Vm_s;
            const double var_x130 = exp(0.4017857142857143 + 0.044642857142857144 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x131 = 1.0 + var_x130;
            const double var_x132 = mParameters[9] / var_x131;
            const double var_x134 = exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__Vm_s__Vm_s - 6.3668378238341967 * var_x127);
            const double var_x135 = 1.0 + var_x134;
            const double var_x136 = 1 / var_x135;
            const double var_x137 = exp(-2.4444678999999998 + 13.729411709844559 * var_x127 - 0.51429999999999998 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x138 = 1.0 + var_x137;
            const double var_x139 = 1 / var_x138;
            const double var_x140 = exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__Vm_s__Vm_s - 2.144169450777202 * var_x127);
            const double var_x141 = exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__Vm_s__Vm_s - 1.6484370466321243 * var_x127);
            const double var_x142 = var_x141 + 0.49124000000000001 * var_x140;
            const double var_x143 = var_x139 * var_x142;
            const double var_x144 = mParameters[8] / (1000.0 * var_x143 + 1020.0 * var_x136);
            const double var_x145 = var_x136 * var_x144;
            const double var_x157 = exp(-1.7703904136064939 + 0.038654812524159254 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x158 = 1.0 + var_x157;
            const double var_x159 = 1 / var_x158;
            const double var_x160 = exp(-9.8123827392120067 - 0.17056114617090226 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x161 = 1.0 + var_x160;
            const double var_x162 = 1 / var_x161;
            const double var_x163 = var_x159 * var_x162 * mParameters[12];
            const double var_x167 = var_x134 / pow(var_x135, 2);
            const double var_x168 = var_x128 * var_x144 * var_x167;
            const double var_x172 = 1000.0 * var_x139;
            const double var_x173 = var_x137 * var_x142 / pow(var_x138, 2);
            const double var_x175 = var_x128 * var_x136 * mParameters[8] / pow((var_x136 + 0.98039215686274506 * var_x143), 2);
            const double var_x194 = 0.018329999999999999 * var_chaste_interface__ion_concentrations__Na_i + var_chaste_interface__ion_concentrations__K_i;
            const double var_x195 = 1 / var_x194;
            const double var_x204 = 1.7821037222369756e-12 * var_x85;
            const double var_x240 = 6.4160374895641114e-14 * var_x5;
            const double var_x241 = var_x7 * var_x8;
            const double var_x242 = var_x11 * var_x13;
            const double var_x243 = var_x240 * var_x242;
            const double var_x244 = ((var_x16) ? (-var_x243 + var_x55 * (var_x243 + var_x240 * var_x241)) : (2.4034300599469617e-8 * var_x25));
            const double var_x246 = var_x204 * var_x39 * var_chaste_interface__i_CaL_s_y_gate__y;
            const double var_x247 = var_x242 * var_x246;
            const double var_x248 = ((var_x16) ? (-var_x247 + var_x55 * (var_x247 + var_x241 * var_x246)) : (6.6757117035778174e-7 * var_x24 * var_x92));
            const double var_x249 = var_x126 * var_x99;
            const double var_x252 = var_x106 * var_x126;
            const double var_x253 = var_x132 * var_chaste_interface__i_Kr_s_xr_gate__xr;
            const double var_x254 = var_x126 * var_x253;
            const double var_x255 = var_x126 * var_x145;
            const double var_x256 = var_x163 * var_chaste_interface__i_Kto_s_r2_gate__r2;
            const double var_x257 = var_x126 * var_x256;
            const double var_x258 = 1.0533018009997928 * var_x126;
            const double var_x259 = 1.6484370466321243 * var_x126;
            const double var_x260 = 6494.1745803108806 * var_x126;
            const double var_x261 = 13729.411709844559 * var_x126;
            const double var_x262 = var_x167 * var_x260 - var_x172 * (var_x140 * var_x258 + var_x141 * var_x259) - var_x173 * var_x261;
            const double var_x264 = var_x111 * (0.12553036579548593 * var_chaste_interface__ion_concentrations__K_i + 0.002300971605031257 * var_chaste_interface__ion_concentrations__Na_i) / pow(var_x194, 2);
            const double var_x265 = var_x126 * var_x168;
            const double var_x297 = 0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x298 = exp(var_x297);
            const double var_x539 = -1.0 + var_x298;
            const double var_x540 = 1 / var_x539;
            const double var_x541 = var_x540 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x550 = pow(var_chaste_interface__i_Ks_t_xs_gate__xs, 2);
            const double var_x556 = 20205.350866353103 * var_x66;
            const double var_x557 = 1 / (var_x84 - var_x556 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x558 = var_x541 * var_x557;
            const double var_x568 = exp(0.4017857142857143 + 0.044642857142857144 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x569 = 1.0 + var_x568;
            const double var_x570 = mParameters[9] / var_x569;
            const double var_x571 = log(var_x126 * var_chaste_interface__ion_concentrations__K_t);
            const double var_x572 = -26.695336787564766 * var_x571 + var_chaste_interface__Vm_t__Vm_t;
            const double var_x573 = sqrt(var_chaste_interface__ion_concentrations__K_t);
            const double var_x574 = var_x572 * var_x573;
            const double var_x579 = exp(-1.7703904136064939 + 0.038654812524159254 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x580 = 1.0 + var_x579;
            const double var_x581 = 1 / var_x580;
            const double var_x582 = exp(-9.8123827392120067 - 0.17056114617090226 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x583 = 1.0 + var_x582;
            const double var_x584 = 1 / var_x583;
            const double var_x585 = var_x581 * var_x584 * mParameters[12];
            const double var_x591 = exp(4.0 - 0.20000000000000001 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x592 = 1.0 + var_x591;
            const double var_x593 = 1 / var_x592;
            const double var_x595 = exp(8.3333333333333339 + 0.066666666666666666 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x596 = 1.0 + var_x595;
            const double var_x597 = 0.80000000000000004 - 0.65000000000000002 / var_x596;
            const double var_x598 = var_x102 * var_x597;
            const double var_x610 = var_x570 * var_chaste_interface__i_Kr_t_xr_gate__xr;
            const double var_x612 = var_x110 * var_x550;
            const double var_x614 = exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__Vm_t__Vm_t - 6.3668378238341967 * var_x571);
            const double var_x615 = 1.0 + var_x614;
            const double var_x616 = 1 / var_x615;
            const double var_x617 = exp(-2.4444678999999998 + 13.729411709844559 * var_x571 - 0.51429999999999998 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x618 = 1.0 + var_x617;
            const double var_x619 = 1 / var_x618;
            const double var_x620 = exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__Vm_t__Vm_t - 2.144169450777202 * var_x571);
            const double var_x621 = exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__Vm_t__Vm_t - 1.6484370466321243 * var_x571);
            const double var_x622 = var_x621 + 0.49124000000000001 * var_x620;
            const double var_x623 = var_x619 * var_x622;
            const double var_x624 = 1 / (1000.0 * var_x623 + 1020.0 * var_x616);
            const double var_x625 = var_x616 * mParameters[8];
            const double var_x626 = var_x624 * var_x625;
            const double var_x630 = var_x585 * var_chaste_interface__i_Kto_t_r2_gate__r2;
            const double var_x633 = 1000.0 * var_x619;
            const double var_x634 = var_x614 / pow(var_x615, 2);
            const double var_x635 = var_x617 * var_x622 / pow(var_x618, 2);
            const double var_x637 = var_x574 * var_x625 / pow((var_x616 + 0.98039215686274506 * var_x623), 2);
            const double var_x639 = var_x624 * var_x634 * mParameters[8];
            const double var_x642 = var_x5 * var_x540;
            const double var_x643 = var_x642 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x650 = pow(var_chaste_interface__ion_concentrations__K_t, 0.23999999999999999);
            const double var_x651 = var_x126 * var_x650;
            const double var_x652 = var_x195 * var_x612;
            const double var_x654 = var_x573 * var_x610;
            const double var_x655 = var_x126 * var_x654;
            const double var_x656 = var_x573 * var_x626;
            const double var_x657 = var_x126 * var_x656;
            const double var_x658 = var_x260 * var_x634 - var_x261 * var_x635 - var_x633 * (var_x258 * var_x620 + var_x259 * var_x621);
            const double var_x676 = var_x574 * var_x639;
            const double var_x711 = 2.2235826605995642e-8 * var_x175;
            const double var_x715 = 1.2593213761850856e-6 * var_x558;
            const double var_x719 = 9.5542335592788613e-6 * var_x593;
            const double var_x720 = 0.00017389978975695432 * var_x598;
            const double var_x721 = 2.8300911298300084e-8 * var_x643;
            const double var_x722 = var_x61 * var_x715;
            const double var_x723 = 0.00159237225987981 * var_x630;
            const double var_x725 = 3.8275104948523082e-8 * var_x637;
            const double var_x726 = var_x126 * var_x676;
            const double var_x727 = -1.0611127405703633 * var_x244 - var_x298 * var_x721;
            
            partialF = (var_x727 + 0.2535365178877384 * var_x726 + 0.14729140671519442 * var_x265 - 4.3329845339059426e-7 * var_x126 - 1.0611127405703633 * var_x248 - 0.011431110066567021 * var_x264 - 1.7912380522721477e-5 * var_x655 - 0.00159237225987981 * var_x652 - 3.7509630330654754e-5 * var_x254 - 0.00015670817556044932 * var_x252 - 0.0014349514281046195 * var_x257 - 1.063046196594291 * var_x657 - 8.6097085686277171e-6 * var_x249 - 0.61757403234882358 * var_x255 - 3.2078942197396038e-7 * var_x651 - var_x126 * var_x719 - var_x126 * var_x720 - var_x126 * var_x723 - var_x262 * var_x711 - var_x298 * var_x722 - var_x658 * var_x725) * mParameters[3];
        }
        else
        {
            const double y_save = rY[49];
            rY[49] += delta;
            const double temp = EvaluateYDerivative49(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[49])/delta;
            rY[49] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative50(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.207812
        double var_chaste_interface__ion_concentrations__Ca_i = rY[1];
        // Units: millimolar; Initial value: 8.8787034e-05
        double var_chaste_interface__i_Na_s_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.0034130493
        double var_chaste_interface__i_Na_s_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.82699973
        double var_chaste_interface__i_Na_t_m_gate__m = rY[4];
        // Units: dimensionless; Initial value: 0.0034129472
        double var_chaste_interface__i_Na_t_h_gate__h = rY[5];
        // Units: dimensionless; Initial value: 0.82700551
        double var_chaste_interface__ion_concentrations__K_t = rY[46];
        // Units: millimolar; Initial value: 5.4140321
        double var_chaste_interface__ion_concentrations__Na_t = rY[47];
        // Units: millimolar; Initial value: 139.93239
        double var_chaste_interface__ion_concentrations__Ca_t = rY[48];
        // Units: millimolar; Initial value: 1.8476402
        double var_chaste_interface__ion_concentrations__K_i = rY[49];
        // Units: millimolar; Initial value: 136.78926
        double var_chaste_interface__ion_concentrations__Na_i = rY[50];
        // Units: millimolar; Initial value: 11.120279
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

        // Mathematics
        const double var_i_nsNa_s__i_nsNa_s = ((fabs(var_chaste_interface__Vm_s__Vm_s) < 2.6695336787564767e-6) ? (187298.62971157953 * (2.6695336787564767e-6 + var_chaste_interface__Vm_s__Vm_s) * (8.554716652752149e-14 * (-105.0 + 0.75 * var_chaste_interface__ion_concentrations__Na_i * exp(9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(9.9999999999999995e-8))) + 8.554716652752149e-14 * (-105.0 + 0.75 * var_chaste_interface__ion_concentrations__Na_i * exp(-9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(-9.9999999999999995e-8)))) - 8.554716652752149e-14 * (-105.0 + 0.75 * var_chaste_interface__ion_concentrations__Na_i * exp(-9.9999999999999995e-8)) / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(-9.9999999999999995e-8)))) : (3.2045734132626158e-8 * (-105.0 + 0.75 * var_chaste_interface__ion_concentrations__Na_i * _lt_0_row[0]) * var_chaste_interface__Vm_s__Vm_s / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (_lt_0_row[1])))); // microA
        const double var_i_nsNa_t__i_nsNa_t = 3.5561299902450127e-8 * (-0.75 * var_chaste_interface__ion_concentrations__Na_t + 0.75 * var_chaste_interface__ion_concentrations__Na_i * exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t)) * var_chaste_interface__Vm_t__Vm_t / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t))); // microA
        const double var_i_Na_s__i_Na_s = 3.8473741844494297e-5 * pow(var_chaste_interface__i_Na_s_m_gate__m, 3) * (-26.695336787564766 * log(140.648 / (var_chaste_interface__ion_concentrations__Na_i + 0.12 * var_chaste_interface__ion_concentrations__K_i)) + var_chaste_interface__Vm_s__Vm_s) * var_chaste_interface__i_Na_s_h_gate__h * mParameters[5]; // microA
        const double var_i_Na_t__i_Na_t = 6.8397763279100978e-5 * pow(var_chaste_interface__i_Na_t_m_gate__m, 3) * (-26.695336787564766 * log((var_chaste_interface__ion_concentrations__Na_t + 0.12 * var_chaste_interface__ion_concentrations__K_t) / (var_chaste_interface__ion_concentrations__Na_i + 0.12 * var_chaste_interface__ion_concentrations__K_i)) + var_chaste_interface__Vm_t__Vm_t) * var_chaste_interface__i_Na_t_h_gate__h * mParameters[5]; // microA
        const double var_i_Nab_s__i_Nab_s = 3.7992820071438121e-8 * var_chaste_interface__Vm_s__Vm_s - 1.0142311273163911e-6 * log(140.0 / var_chaste_interface__ion_concentrations__Na_i); // microA
        const double var_i_Nab_t__i_Nab_t = 4.216080877125834e-8 * var_chaste_interface__Vm_t__Vm_t - 1.125496989384856e-6 * log(var_chaste_interface__ion_concentrations__Na_t / var_chaste_interface__ion_concentrations__Na_i); // microA
        const double var_i_Naps_s__i_Naps_s = 2.6848259517149603e-7 * (-26.695336787564766 * log(140.648 / (var_chaste_interface__ion_concentrations__Na_i + 0.12 * var_chaste_interface__ion_concentrations__K_i)) + var_chaste_interface__Vm_s__Vm_s) / (_lt_0_row[8]); // microA
        const double var_i_Naps_t__i_Naps_t = 2.9793638198355892e-7 * (-26.695336787564766 * log((var_chaste_interface__ion_concentrations__Na_t + 0.12 * var_chaste_interface__ion_concentrations__K_t) / (var_chaste_interface__ion_concentrations__Na_i + 0.12 * var_chaste_interface__ion_concentrations__K_i)) + var_chaste_interface__Vm_t__Vm_t) / (1.0 + exp(-6.75 - 0.125 * var_chaste_interface__Vm_t__Vm_t)); // microA
        const double var_i_NaCa_s__i_NaCa_s = 5.0657093428584157e-5 * (-2744000.0 * var_chaste_interface__ion_concentrations__Ca_i + 1.8 * pow(var_chaste_interface__ion_concentrations__Na_i, 3) * _lt_0_row[0]) * mParameters[11] * _lt_0_row[9] / (1.0 + 0.0001 * (2744000.0 * var_chaste_interface__ion_concentrations__Ca_i + 1.8 * pow(var_chaste_interface__ion_concentrations__Na_i, 3) * _lt_0_row[0]) * _lt_0_row[9]); // microA
        const double var_i_NaCa_t__i_NaCa_t = 5.6214411695011118e-5 * (-pow(var_chaste_interface__ion_concentrations__Na_t, 3) * var_chaste_interface__ion_concentrations__Ca_i + pow(var_chaste_interface__ion_concentrations__Na_i, 3) * var_chaste_interface__ion_concentrations__Ca_t * exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t)) * mParameters[11] * exp(-0.03184076705096852 * var_chaste_interface__Vm_t__Vm_t) / (1.0 + 0.0001 * (pow(var_chaste_interface__ion_concentrations__Na_t, 3) * var_chaste_interface__ion_concentrations__Ca_i + pow(var_chaste_interface__ion_concentrations__Na_i, 3) * var_chaste_interface__ion_concentrations__Ca_t * exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t)) * exp(-0.03184076705096852 * var_chaste_interface__Vm_t__Vm_t)); // microA
        const double var_i_NaK_s__i_NaK_s = 5.9467022720511838e-5 / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__ion_concentrations__Na_i), 1.5)) * (_lt_0_row[10])); // microA
        const double var_i_NaK_t__i_NaK_t = 8.432161754251667e-5 * var_chaste_interface__ion_concentrations__K_t / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__ion_concentrations__Na_i), 1.5)) * (1.5 + var_chaste_interface__ion_concentrations__K_t) * (1.0 + 0.1245 * exp(-0.0037459725942315908 * var_chaste_interface__Vm_t__Vm_t) + 0.0052142857142857138 * (-1.0 + exp(0.01485884101040119 * var_chaste_interface__ion_concentrations__Na_t)) * exp(-0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t))); // microA
        const double d_dt_chaste_interface_var_ion_concentrations__Na_i = -1.0611127405703633 * (3.0 * var_i_NaCa_s__i_NaCa_s + 3.0 * var_i_NaCa_t__i_NaCa_t + 3.0 * var_i_NaK_s__i_NaK_s + 3.0 * var_i_NaK_t__i_NaK_t + var_i_Na_s__i_Na_s + var_i_Na_t__i_Na_t + var_i_Nab_s__i_Nab_s + var_i_Nab_t__i_Nab_t + var_i_Naps_s__i_Naps_s + var_i_Naps_t__i_Naps_t + var_i_nsNa_s__i_nsNa_s + var_i_nsNa_t__i_nsNa_t) * mParameters[3]; // millimolar / millisecond

        return d_dt_chaste_interface_var_ion_concentrations__Na_i;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative50(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -85.207812
            double var_chaste_interface__ion_concentrations__Ca_i = rY[1];
            // Units: millimolar; Initial value: 8.8787034e-05
            double var_chaste_interface__i_Na_s_m_gate__m = rY[2];
            // Units: dimensionless; Initial value: 0.0034130493
            double var_chaste_interface__i_Na_s_h_gate__h = rY[3];
            // Units: dimensionless; Initial value: 0.82699973
            double var_chaste_interface__i_Na_t_m_gate__m = rY[4];
            // Units: dimensionless; Initial value: 0.0034129472
            double var_chaste_interface__i_Na_t_h_gate__h = rY[5];
            // Units: dimensionless; Initial value: 0.82700551
            double var_chaste_interface__ion_concentrations__K_t = rY[46];
            // Units: millimolar; Initial value: 5.4140321
            double var_chaste_interface__ion_concentrations__Na_t = rY[47];
            // Units: millimolar; Initial value: 139.93239
            double var_chaste_interface__ion_concentrations__Ca_t = rY[48];
            // Units: millimolar; Initial value: 1.8476402
            double var_chaste_interface__ion_concentrations__K_i = rY[49];
            // Units: millimolar; Initial value: 136.78926
            double var_chaste_interface__ion_concentrations__Na_i = rY[50];
            // Units: millimolar; Initial value: 11.120279
            double var_chaste_interface__Vm_t__Vm_t = rY[54];
            // Units: millivolt; Initial value: -85.208034
            

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

            const double var_x0 = exp(-6.75 - 0.125 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x1 = 1.0 + var_x0;
            const double var_x2 = 1 / var_x1;
            const double var_x3 = pow(var_chaste_interface__ion_concentrations__Ca_i, 3);
            const double var_x4 = 1.0 + 1.5625000000000003e-8 / var_x3;
            const double var_x5 = 1 / var_x4;
            const double var_x7 = exp(9.9999999999999995e-8);
            const double var_x8 = 1 / (-1.0 + var_x7);
            const double var_x11 = exp(-9.9999999999999995e-8);
            const double var_x13 = 1 / (-1.0 + var_x11);
            const double var_x15 = fabs(var_chaste_interface__Vm_s__Vm_s);
            const double var_x16 = var_x15 < 2.6695336787564767e-6;
            const double var_x17 = 0.037459725942315905 * var_chaste_interface__Vm_s__Vm_s;
            const double var_x18 = exp(var_x17);
            const double var_x20 = -1.0 + var_x18;
            const double var_x21 = 1 / var_x20;
            const double var_x22 = var_x21 * var_x5;
            const double var_x24 = var_x18 * var_chaste_interface__Vm_s__Vm_s;
            const double var_x25 = var_x22 * var_x24;
            const double var_x55 = 0.5 + 187298.62971157953 * var_chaste_interface__Vm_s__Vm_s;
            const double var_x100 = 1 / var_chaste_interface__ion_concentrations__Na_i;
            const double var_x112 = var_chaste_interface__ion_concentrations__Na_i + 0.12 * var_chaste_interface__ion_concentrations__K_i;
            const double var_x113 = 1 / var_x112;
            const double var_x116 = pow(var_x100, 1.5);
            const double var_x118 = exp(-0.0037459725942315908 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x119 = exp(2.0802377414561666);
            const double var_x120 = exp(-var_x17);
            const double var_x121 = 1.0 + 0.1245 * var_x118 + 0.0052142857142857138 * var_x120 * (-1.0 + var_x119);
            const double var_x123 = var_chaste_interface__i_Na_s_h_gate__h * mParameters[5];
            const double var_x124 = pow(var_chaste_interface__i_Na_s_m_gate__m, 3);
            const double var_x146 = 2744000.0 * var_chaste_interface__ion_concentrations__Ca_i;
            const double var_x147 = pow(var_chaste_interface__ion_concentrations__Na_i, 3);
            const double var_x148 = var_x147 * var_x18;
            const double var_x149 = 1.8 * var_x148;
            const double var_x150 = var_x149 - var_x146;
            const double var_x151 = _lt_0_row[9];
            const double var_x152 = 1.0 + 0.0001 * var_x151 * (var_x146 + var_x149);
            const double var_x153 = 1 / var_x152;
            const double var_x154 = var_x151 * mParameters[11];
            const double var_x155 = var_x153 * var_x154;
            const double var_x170 = var_x150 / pow(var_x152, 2);
            const double var_x193 = var_x170 * pow(var_x151, 2) * mParameters[11];
            const double var_x240 = 6.4160374895641114e-14 * var_x5;
            const double var_x241 = var_x7 * var_x8;
            const double var_x242 = var_x11 * var_x13;
            const double var_x243 = var_x240 * var_x242;
            const double var_x244 = ((var_x16) ? (-var_x243 + var_x55 * (var_x243 + var_x240 * var_x241)) : (2.4034300599469617e-8 * var_x25));
            const double var_x250 = (0.00085319378874921788 * var_chaste_interface__ion_concentrations__K_i + 0.0071099482395768155 * var_chaste_interface__ion_concentrations__Na_i) / pow(var_x112, 2);
            const double var_x251 = var_x2 * var_x250;
            const double var_x263 = var_x123 * var_x124 * var_x250;
            const double var_x266 = var_x100 * var_x116 / pow((0.031622776601683791 + var_x116), 2);
            const double var_x267 = var_x266 / var_x121;
            const double var_x270 = pow(var_chaste_interface__ion_concentrations__Na_i, 2);
            const double var_x271 = var_x18 * var_x270;
            const double var_x272 = var_x155 * var_x271;
            const double var_x273 = var_x193 * var_x271;
            const double var_x293 = pow(var_chaste_interface__ion_concentrations__Na_t, 3);
            const double var_x295 = exp(-0.03184076705096852 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x296 = var_x293 * var_chaste_interface__ion_concentrations__Ca_i;
            const double var_x297 = 0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x298 = exp(var_x297);
            const double var_x299 = var_x147 * var_x298;
            const double var_x300 = var_x299 * var_chaste_interface__ion_concentrations__Ca_t;
            const double var_x301 = 1.0 + 0.0001 * var_x295 * (var_x296 + var_x300);
            const double var_x302 = var_x295 / var_x301;
            const double var_x304 = pow(var_x301, (-2));
            const double var_x305 = var_x304 * pow(var_x295, 2);
            const double var_x307 = var_x300 - var_x296;
            const double var_x310 = var_x307 * mParameters[11];
            const double var_x312 = var_x302 * mParameters[11];
            const double var_x314 = var_x305 * var_x310;
            const double var_x317 = var_x270 * var_x298 * var_chaste_interface__ion_concentrations__Ca_t;
            const double var_x318 = var_x314 * var_x317;
            const double var_x539 = -1.0 + var_x298;
            const double var_x540 = 1 / var_x539;
            const double var_x600 = 1 / (1.5 + var_chaste_interface__ion_concentrations__K_t);
            const double var_x601 = exp(-0.0037459725942315908 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x602 = exp(0.01485884101040119 * var_chaste_interface__ion_concentrations__Na_t);
            const double var_x603 = exp(-var_x297);
            const double var_x604 = 1.0 + 0.1245 * var_x601 + 0.0052142857142857138 * var_x603 * (-1.0 + var_x602);
            const double var_x605 = 1 / var_x604;
            const double var_x642 = var_x5 * var_x540;
            const double var_x643 = var_x642 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x646 = var_x600 * var_chaste_interface__ion_concentrations__K_t;
            const double var_x660 = var_x266 * var_x605 * var_x646;
            const double var_x687 = pow(var_chaste_interface__i_Na_t_m_gate__m, 3) * mParameters[5];
            const double var_x690 = exp(-6.75 - 0.125 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x691 = 1.0 + var_x690;
            const double var_x692 = 1 / var_x691;
            const double var_x695 = var_x687 * var_chaste_interface__i_Na_t_h_gate__h;
            const double var_x701 = var_x113 * var_x692;
            const double var_x702 = var_x113 * var_x695;
            const double var_x703 = var_x312 * var_x317;
            const double var_x721 = 2.8300911298300084e-8 * var_x643;
            const double var_x727 = -1.0611127405703633 * var_x244 - var_x298 * var_x721;
            
            partialF = (var_x727 + 5.3684845607919537e-8 * var_x318 + 8.7079677324480881e-8 * var_x273 - 0.0010696621568383102 * var_x251 - 2.2704927659883223e-6 * var_x100 - 0.00053684845607919528 * var_x703 - 1.2732479096663435e-5 * var_x660 - 8.4395729773629928e-6 * var_x701 - 8.9794603779742462e-6 * var_x267 - 0.15328332794434826 * var_x263 - 0.00087079677324480875 * var_x272 - 0.0019374871603100351 * var_x702) * mParameters[3];
        }
        else
        {
            const double y_save = rY[50];
            rY[50] += delta;
            const double temp = EvaluateYDerivative50(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[50])/delta;
            rY[50] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative51(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.207812
        double var_chaste_interface__ion_concentrations__Ca_i = rY[1];
        // Units: millimolar; Initial value: 8.8787034e-05
        double var_chaste_interface__i_CaL_s__Co = rY[11];
        // Units: dimensionless; Initial value: -1.3496934e-17
        double var_chaste_interface__i_CaL_s__Ccao = rY[17];
        // Units: dimensionless; Initial value: 3.7986638e-22
        double var_chaste_interface__i_CaL_s_y_gate__y = rY[18];
        // Units: dimensionless; Initial value: 0.78134852
        double var_chaste_interface__i_CaL_t__TCo = rY[24];
        // Units: dimensionless; Initial value: -1.3449454e-17
        double var_chaste_interface__i_CaL_t__TCcao = rY[30];
        // Units: dimensionless; Initial value: 3.75926e-22
        double var_chaste_interface__i_CaL_t_y_gate__y = rY[31];
        // Units: dimensionless; Initial value: 0.7813477
        double var_chaste_interface__JCaSRrel__F2 = rY[41];
        // Units: dimensionless; Initial value: 0.00026639195
        double var_chaste_interface__JCaSRrel__F3 = rY[42];
        // Units: dimensionless; Initial value: 4.9455459e-10
        double var_chaste_interface__CaSRrel__CaSRrel = rY[44];
        // Units: millimolar; Initial value: 1.0326252
        double var_chaste_interface__ion_concentrations__Ca_t = rY[48];
        // Units: millimolar; Initial value: 1.8476402
        double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
        // Units: millimolar; Initial value: 9.5977033e-05
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

        // Mathematics
        const double var_i_CaL_s__i_CaL_s = ((fabs(var_chaste_interface__Vm_s__Vm_s) < 1.3347668393782383e-6) ? (374597.25942315906 * (1.3347668393782383e-6 + var_chaste_interface__Vm_s__Vm_s) * (7.425432175987399e-7 * (-0.61380000000000001 + 0.001 * exp(9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 7.425432175987399e-7 * (-0.61380000000000001 + 0.001 * exp(-9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 7.425432175987399e-7 * (-0.61380000000000001 + 0.001 * exp(-9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.55630930863148487 * (_lt_0_row[3]) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__Vm_s__Vm_s * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (_lt_0_row[2]))); // microA
        const double var_JCaSRrel__JCaSRrel = 4.5382595216862795e-11 * (-var_chaste_interface__ion_concentrations__Ca_ss + var_chaste_interface__CaSRrel__CaSRrel) * (var_chaste_interface__JCaSRrel__F2 + var_chaste_interface__JCaSRrel__F3) * mParameters[1]; // millimolar_per_second
        const double var_JCad__JCad = 3.1250799744270079e-6 * var_chaste_interface__ion_concentrations__Ca_ss - 3.1250799744270079e-6 * var_chaste_interface__ion_concentrations__Ca_i; // millimolar_per_second
        const double var_i_CaL_t__i_CaL_t = 0.98899432645597307 * (0.001 * exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t) - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y * mParameters[4] / (-1.0 + exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t)); // microA
        const double d_dt_chaste_interface_var_ion_concentrations__Ca_ss = 0.001 * (1706622991084.001 * var_JCaSRrel__JCaSRrel - 8842606.1714196932 * var_i_CaL_s__i_CaL_s - 8842606.1714196932 * var_i_CaL_t__i_CaL_t - 1706622991084.001 * var_JCad__JCad) / (1.0 + 0.00011900000000000002 / pow((0.0023800000000000002 + var_chaste_interface__ion_concentrations__Ca_ss), 2)); // millimolar / millisecond

        return d_dt_chaste_interface_var_ion_concentrations__Ca_ss;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative51(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -85.207812
            double var_chaste_interface__ion_concentrations__Ca_i = rY[1];
            // Units: millimolar; Initial value: 8.8787034e-05
            double var_chaste_interface__i_CaL_s__Co = rY[11];
            // Units: dimensionless; Initial value: -1.3496934e-17
            double var_chaste_interface__i_CaL_s__Ccao = rY[17];
            // Units: dimensionless; Initial value: 3.7986638e-22
            double var_chaste_interface__i_CaL_s_y_gate__y = rY[18];
            // Units: dimensionless; Initial value: 0.78134852
            double var_chaste_interface__i_CaL_t__TCo = rY[24];
            // Units: dimensionless; Initial value: -1.3449454e-17
            double var_chaste_interface__i_CaL_t__TCcao = rY[30];
            // Units: dimensionless; Initial value: 3.75926e-22
            double var_chaste_interface__i_CaL_t_y_gate__y = rY[31];
            // Units: dimensionless; Initial value: 0.7813477
            double var_chaste_interface__JCaSRrel__F2 = rY[41];
            // Units: dimensionless; Initial value: 0.00026639195
            double var_chaste_interface__JCaSRrel__F3 = rY[42];
            // Units: dimensionless; Initial value: 4.9455459e-10
            double var_chaste_interface__CaSRrel__CaSRrel = rY[44];
            // Units: millimolar; Initial value: 1.0326252
            double var_chaste_interface__ion_concentrations__Ca_t = rY[48];
            // Units: millimolar; Initial value: 1.8476402
            double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
            // Units: millimolar; Initial value: 9.5977033e-05
            double var_chaste_interface__Vm_t__Vm_t = rY[54];
            // Units: millivolt; Initial value: -85.208034
            


            const double var_x7 = exp(9.9999999999999995e-8);
            const double var_x8 = 1 / (-1.0 + var_x7);
            const double var_x11 = exp(-9.9999999999999995e-8);
            const double var_x13 = 1 / (-1.0 + var_x11);
            const double var_x15 = fabs(var_chaste_interface__Vm_s__Vm_s);
            const double var_x37 = -0.61380000000000001 + 0.001 * var_x7;
            const double var_x38 = var_x8 * var_chaste_interface__i_CaL_s_y_gate__y;
            const double var_x39 = var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co;
            const double var_x40 = var_x39 * mParameters[4];
            const double var_x42 = -0.61380000000000001 + 0.001 * var_x11;
            const double var_x43 = var_x13 * var_chaste_interface__i_CaL_s_y_gate__y;
            const double var_x44 = var_x15 < 1.3347668393782383e-6;
            const double var_x45 = exp(0.07491945188463181 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x46 = -1.0 + var_x45;
            const double var_x47 = 1 / var_x46;
            const double var_x48 = var_x40 * var_chaste_interface__i_CaL_s_y_gate__y;
            const double var_x49 = var_x47 * var_x48;
            const double var_x50 = -0.61380000000000001 + 0.001 * var_x45;
            const double var_x51 = 0.55630930863148487 * var_x50;
            const double var_x52 = var_x49 * var_x51;
            const double var_x58 = exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x59 = 0.001 * var_x58 - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t;
            const double var_x60 = var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo;
            const double var_x61 = var_x60 * var_chaste_interface__i_CaL_t_y_gate__y;
            const double var_x62 = -1.0 + var_x58;
            const double var_x63 = 1 / var_x62;
            const double var_x64 = var_x63 * mParameters[4];
            const double var_x65 = var_x61 * var_x64;
            const double var_x66 = var_x59 * var_x65;
            const double var_x68 = 7.425432175987399e-7 * mParameters[4];
            const double var_x69 = var_x37 * var_x68;
            const double var_x70 = var_x38 * var_x69;
            const double var_x71 = var_x42 * var_x68;
            const double var_x72 = var_x43 * var_x71;
            const double var_x73 = var_x39 * var_x72;
            const double var_x74 = ((var_x44) ? (-var_x73 + 374597.25942315906 * (1.3347668393782383e-6 + var_chaste_interface__Vm_s__Vm_s) * (var_x73 + var_x39 * var_x70)) : (var_x52 * var_chaste_interface__Vm_s__Vm_s));
            const double var_x535 = (-var_chaste_interface__ion_concentrations__Ca_ss + var_chaste_interface__CaSRrel__CaSRrel) * (var_chaste_interface__JCaSRrel__F2 + var_chaste_interface__JCaSRrel__F3) * mParameters[1];
            const double var_x732 = 0.0023800000000000002 + var_chaste_interface__ion_concentrations__Ca_ss;
            const double var_x733 = 1.0 + 0.00011900000000000002 / pow(var_x732, 2);
            const double var_x734 = 1 / var_x733;
            const double var_x739 = 0.001 * var_x734;
            const double var_x742 = 77.45098039215685 * var_chaste_interface__JCaSRrel__F2;
            const double var_x743 = 77.45098039215685 * var_chaste_interface__JCaSRrel__F3;
            const double var_x744 = 8745287.3346186504 * var_x66;
            
            partialF = var_x739 * (-5333333.333333333 + (-var_x742 - var_x743) * mParameters[1]) + 2.3800000000000004e-7 * (77.45098039215685 * var_x535 + 5333333.333333333 * var_chaste_interface__ion_concentrations__Ca_i - 8842606.1714196932 * var_x74 - 5333333.333333333 * var_chaste_interface__ion_concentrations__Ca_ss - var_x744 * var_chaste_interface__Vm_t__Vm_t) / (pow(var_x732, 3) * pow(var_x733, 2));
        }
        else
        {
            const double y_save = rY[51];
            rY[51] += delta;
            const double temp = EvaluateYDerivative51(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[51])/delta;
            rY[51] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative52(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__ion_concentrations__Ca_i = rY[1];
        // Units: millimolar; Initial value: 8.8787034e-05
        double var_chaste_interface__ion_concentrations__BTRH = rY[52];
        // Units: millimolar; Initial value: 0.96700747
        


        // Mathematics
        const double var_ion_concentrations__dBTRH = -0.070000000000000007 * var_chaste_interface__ion_concentrations__BTRH + 20000.0 * (1.0 - var_chaste_interface__ion_concentrations__BTRH) * var_chaste_interface__ion_concentrations__Ca_i; // millimolar_per_second
        const double d_dt_chaste_interface_var_ion_concentrations__BTRH = 0.001 * var_ion_concentrations__dBTRH; // millimolar / millisecond

        return d_dt_chaste_interface_var_ion_concentrations__BTRH;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative52(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__ion_concentrations__Ca_i = rY[1];
            // Units: millimolar; Initial value: 8.8787034e-05
            


            
            partialF = -7.0000000000000007e-5 - 20.0 * var_chaste_interface__ion_concentrations__Ca_i;
        }
        else
        {
            const double y_save = rY[52];
            rY[52] += delta;
            const double temp = EvaluateYDerivative52(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[52])/delta;
            rY[52] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative53(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__ion_concentrations__Ca_i = rY[1];
        // Units: millimolar; Initial value: 8.8787034e-05
        double var_chaste_interface__ion_concentrations__BTRL = rY[53];
        // Units: millimolar; Initial value: 0.081740868
        


        // Mathematics
        const double var_ion_concentrations__dBTRL = -40.0 * var_chaste_interface__ion_concentrations__BTRL + 40000.0 * (1.0 - var_chaste_interface__ion_concentrations__BTRL) * var_chaste_interface__ion_concentrations__Ca_i; // millimolar_per_second
        const double d_dt_chaste_interface_var_ion_concentrations__BTRL = 0.001 * var_ion_concentrations__dBTRL; // millimolar / millisecond

        return d_dt_chaste_interface_var_ion_concentrations__BTRL;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative53(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__ion_concentrations__Ca_i = rY[1];
            // Units: millimolar; Initial value: 8.8787034e-05
            


            
            partialF = -0.040000000000000001 - 40.0 * var_chaste_interface__ion_concentrations__Ca_i;
        }
        else
        {
            const double y_save = rY[53];
            rY[53] += delta;
            const double temp = EvaluateYDerivative53(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[53])/delta;
            rY[53] = y_save;
        }
        return partialF;
    }
    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluateYDerivative54(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.207812
        double var_chaste_interface__ion_concentrations__Ca_i = rY[1];
        // Units: millimolar; Initial value: 8.8787034e-05
        double var_chaste_interface__i_Na_t_m_gate__m = rY[4];
        // Units: dimensionless; Initial value: 0.0034129472
        double var_chaste_interface__i_Na_t_h_gate__h = rY[5];
        // Units: dimensionless; Initial value: 0.82700551
        double var_chaste_interface__i_CaL_s__Co = rY[11];
        // Units: dimensionless; Initial value: -1.3496934e-17
        double var_chaste_interface__i_CaL_s__Ccao = rY[17];
        // Units: dimensionless; Initial value: 3.7986638e-22
        double var_chaste_interface__i_CaL_s_y_gate__y = rY[18];
        // Units: dimensionless; Initial value: 0.78134852
        double var_chaste_interface__i_CaL_t__TCo = rY[24];
        // Units: dimensionless; Initial value: -1.3449454e-17
        double var_chaste_interface__i_CaL_t__TCcao = rY[30];
        // Units: dimensionless; Initial value: 3.75926e-22
        double var_chaste_interface__i_CaL_t_y_gate__y = rY[31];
        // Units: dimensionless; Initial value: 0.7813477
        double var_chaste_interface__i_Kr_t_xr_gate__xr = rY[33];
        // Units: dimensionless; Initial value: 0.00020469344
        double var_chaste_interface__i_Ks_t_xs_gate__xs = rY[35];
        // Units: dimensionless; Initial value: 0.0061359896
        double var_chaste_interface__i_Kto_t_r2_gate__r2 = rY[38];
        // Units: dimensionless; Initial value: 0.9625701
        double var_chaste_interface__ion_concentrations__K_t = rY[46];
        // Units: millimolar; Initial value: 5.4140321
        double var_chaste_interface__ion_concentrations__Na_t = rY[47];
        // Units: millimolar; Initial value: 139.93239
        double var_chaste_interface__ion_concentrations__Ca_t = rY[48];
        // Units: millimolar; Initial value: 1.8476402
        double var_chaste_interface__ion_concentrations__K_i = rY[49];
        // Units: millimolar; Initial value: 136.78926
        double var_chaste_interface__ion_concentrations__Na_i = rY[50];
        // Units: millimolar; Initial value: 11.120279
        double var_chaste_interface__Vm_t__Vm_t = rY[54];
        // Units: millivolt; Initial value: -85.208034
        

        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

        // Mathematics
        const double var_i_CaL_s__i_CaL_s = ((fabs(var_chaste_interface__Vm_s__Vm_s) < 1.3347668393782383e-6) ? (374597.25942315906 * (1.3347668393782383e-6 + var_chaste_interface__Vm_s__Vm_s) * (7.425432175987399e-7 * (-0.61380000000000001 + 0.001 * exp(9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 7.425432175987399e-7 * (-0.61380000000000001 + 0.001 * exp(-9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 7.425432175987399e-7 * (-0.61380000000000001 + 0.001 * exp(-9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.55630930863148487 * (_lt_0_row[3]) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__Vm_s__Vm_s * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (_lt_0_row[2]))); // microA
        const double var_i_Kr_t__E_Kr_t = 26.695336787564766 * log(var_chaste_interface__ion_concentrations__K_t / var_chaste_interface__ion_concentrations__K_i); // millivolt
        const double var_i_K1_t__E_K1_t = var_i_Kr_t__E_Kr_t; // millivolt
        const double var_i_circ__i_circ = 0.028426299315597002 * var_chaste_interface__Vm_t__Vm_t - 0.028426299315597002 * var_chaste_interface__Vm_s__Vm_s; // microA
        const double var_i_CaL_t__i_CaL_t = 0.98899432645597307 * (0.001 * exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t) - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y * mParameters[4] / (-1.0 + exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t)); // microA
        const double var_i_CaL_t__i_KL_t = 1.1867931917471675e-6 * (-var_chaste_interface__ion_concentrations__K_t + var_chaste_interface__ion_concentrations__K_i * exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t)) * (var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo) * var_chaste_interface__Vm_t__Vm_t * var_chaste_interface__i_CaL_t_y_gate__y / ((-1.0 + exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t)) * (1.0 - 20430.198966619231 * var_i_CaL_s__i_CaL_s - 20430.198966619231 * var_i_CaL_t__i_CaL_t)); // microA
        const double var_i_nsK_t__i_nsK_t = 3.5561299902450127e-8 * (-0.75 * var_chaste_interface__ion_concentrations__K_t + 0.75 * var_chaste_interface__ion_concentrations__K_i * exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t)) * var_chaste_interface__Vm_t__Vm_t / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t))); // microA
        const double var_i_nsNa_t__i_nsNa_t = 3.5561299902450127e-8 * (-0.75 * var_chaste_interface__ion_concentrations__Na_t + 0.75 * var_chaste_interface__ion_concentrations__Na_i * exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t)) * var_chaste_interface__Vm_t__Vm_t / ((1.0 + 1.5625000000000003e-8 / pow(var_chaste_interface__ion_concentrations__Ca_i, 3)) * (-1.0 + exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t))); // microA
        const double var_i_Cab_t__i_Cab_t = 1.1805026455952333e-7 * var_chaste_interface__Vm_t__Vm_t - 1.5756957851387983e-6 * log(var_chaste_interface__ion_concentrations__Ca_t / var_chaste_interface__ion_concentrations__Ca_i); // microA
        const double var_i_K1_t__i_K1_t = 0.037527981397187667 * sqrt(var_chaste_interface__ion_concentrations__K_t) * (-var_i_K1_t__E_K1_t + var_chaste_interface__Vm_t__Vm_t) * mParameters[8] / ((1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__Vm_t__Vm_t - 0.23849999999999999 * var_i_K1_t__E_K1_t)) * (1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__Vm_t__Vm_t - 0.23849999999999999 * var_i_K1_t__E_K1_t)) + 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__Vm_t__Vm_t - 0.080320000000000003 * var_i_K1_t__E_K1_t) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__Vm_t__Vm_t - 0.061749999999999999 * var_i_K1_t__E_K1_t)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_i_K1_t__E_K1_t - 0.51429999999999998 * var_chaste_interface__Vm_t__Vm_t)))); // microA
        const double var_i_KATP_t__i_KATP_t = 1.1324606116668949e-8 * pow(var_chaste_interface__ion_concentrations__K_t, 0.23999999999999999) * (-var_i_Kr_t__E_Kr_t + var_chaste_interface__Vm_t__Vm_t); // microA
        const double var_i_KNa_t__i_KNa_t = 6.1390634723887744e-6 * (0.80000000000000004 - 0.65000000000000002 / (1.0 + exp(8.3333333333333339 + 0.066666666666666666 * var_chaste_interface__Vm_t__Vm_t))) * (-var_i_Kr_t__E_Kr_t + var_chaste_interface__Vm_t__Vm_t) / (1.0 + 124372.1149330912 * pow((1 / var_chaste_interface__ion_concentrations__Na_i), 2.7999999999999998)); // microA
        const double var_i_Kp_t__i_Kp_t = 3.3728647017006672e-7 * (-var_i_Kr_t__E_Kr_t + var_chaste_interface__Vm_t__Vm_t) / (1.0 + exp(4.0 - 0.20000000000000001 * var_chaste_interface__Vm_t__Vm_t)); // microA
        const double var_i_Kto_t__i_Kto_t = 5.6214411695011118e-5 * (-var_i_Kr_t__E_Kr_t + var_chaste_interface__Vm_t__Vm_t) * var_chaste_interface__i_Kto_t_r2_gate__r2 * mParameters[12] / ((1.0 + exp(-1.7703904136064939 + 0.038654812524159254 * var_chaste_interface__Vm_t__Vm_t)) * (1.0 + exp(-9.8123827392120067 - 0.17056114617090226 * var_chaste_interface__Vm_t__Vm_t))); // microA
        const double var_i_Na_t__i_Na_t = 6.8397763279100978e-5 * pow(var_chaste_interface__i_Na_t_m_gate__m, 3) * (-26.695336787564766 * log((var_chaste_interface__ion_concentrations__Na_t + 0.12 * var_chaste_interface__ion_concentrations__K_t) / (var_chaste_interface__ion_concentrations__Na_i + 0.12 * var_chaste_interface__ion_concentrations__K_i)) + var_chaste_interface__Vm_t__Vm_t) * var_chaste_interface__i_Na_t_h_gate__h * mParameters[5]; // microA
        const double var_i_Nab_t__i_Nab_t = 4.216080877125834e-8 * var_chaste_interface__Vm_t__Vm_t - 1.125496989384856e-6 * log(var_chaste_interface__ion_concentrations__Na_t / var_chaste_interface__ion_concentrations__Na_i); // microA
        const double var_i_Naps_t__i_Naps_t = 2.9793638198355892e-7 * (-26.695336787564766 * log((var_chaste_interface__ion_concentrations__Na_t + 0.12 * var_chaste_interface__ion_concentrations__K_t) / (var_chaste_interface__ion_concentrations__Na_i + 0.12 * var_chaste_interface__ion_concentrations__K_i)) + var_chaste_interface__Vm_t__Vm_t) / (1.0 + exp(-6.75 - 0.125 * var_chaste_interface__Vm_t__Vm_t)); // microA
        const double var_i_NaCa_t__i_NaCa_t = 5.6214411695011118e-5 * (-pow(var_chaste_interface__ion_concentrations__Na_t, 3) * var_chaste_interface__ion_concentrations__Ca_i + pow(var_chaste_interface__ion_concentrations__Na_i, 3) * var_chaste_interface__ion_concentrations__Ca_t * exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t)) * mParameters[11] * exp(-0.03184076705096852 * var_chaste_interface__Vm_t__Vm_t) / (1.0 + 0.0001 * (pow(var_chaste_interface__ion_concentrations__Na_t, 3) * var_chaste_interface__ion_concentrations__Ca_i + pow(var_chaste_interface__ion_concentrations__Na_i, 3) * var_chaste_interface__ion_concentrations__Ca_t * exp(0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t)) * exp(-0.03184076705096852 * var_chaste_interface__Vm_t__Vm_t)); // microA
        const double var_i_NaK_t__i_NaK_t = 8.432161754251667e-5 * var_chaste_interface__ion_concentrations__K_t / ((1.0 + 31.622776601683793 * pow((1 / var_chaste_interface__ion_concentrations__Na_i), 1.5)) * (1.5 + var_chaste_interface__ion_concentrations__K_t) * (1.0 + 0.1245 * exp(-0.0037459725942315908 * var_chaste_interface__Vm_t__Vm_t) + 0.0052142857142857138 * (-1.0 + exp(0.01485884101040119 * var_chaste_interface__ion_concentrations__Na_t)) * exp(-0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t))); // microA
        const double var_i_pCa_t__i_pCa_t = 2.4580446178426913e-5 * var_chaste_interface__ion_concentrations__Ca_i / (0.00050000000000000001 + var_chaste_interface__ion_concentrations__Ca_i); // microA
        const double var_i_Kr_t__i_Kr_t = 6.3234832614954339e-7 * sqrt(var_chaste_interface__ion_concentrations__K_t) * (-var_i_Kr_t__E_Kr_t + var_chaste_interface__Vm_t__Vm_t) * var_chaste_interface__i_Kr_t_xr_gate__xr * mParameters[9] / (1.0 + exp(0.4017857142857143 + 0.044642857142857144 * var_chaste_interface__Vm_t__Vm_t)); // microA
        const double var_i_Ks_t__i_Ks_t = 5.6214411695011118e-5 * pow(var_chaste_interface__i_Ks_t_xs_gate__xs, 2) * (0.23080000000000001 + 0.76919999999999999 / (1.0 + exp(-7.0000000000000009 - 1.6666666666666667 * log10(var_chaste_interface__ion_concentrations__Ca_i)))) * (-26.695336787564766 * log((0.018329999999999999 * var_chaste_interface__ion_concentrations__Na_t + var_chaste_interface__ion_concentrations__K_t) / (0.018329999999999999 * var_chaste_interface__ion_concentrations__Na_i + var_chaste_interface__ion_concentrations__K_i)) + var_chaste_interface__Vm_t__Vm_t) * mParameters[10]; // microA
        const double d_dt_chaste_interface_var_Vm_t__Vm_t = -17785.683620141612 * var_i_CaL_t__i_CaL_t - 17785.683620141612 * var_i_CaL_t__i_KL_t - 17785.683620141612 * var_i_Cab_t__i_Cab_t - 17785.683620141612 * var_i_K1_t__i_K1_t - 17785.683620141612 * var_i_KATP_t__i_KATP_t - 17785.683620141612 * var_i_KNa_t__i_KNa_t - 17785.683620141612 * var_i_Kp_t__i_Kp_t - 17785.683620141612 * var_i_Kr_t__i_Kr_t - 17785.683620141612 * var_i_Ks_t__i_Ks_t - 17785.683620141612 * var_i_Kto_t__i_Kto_t - 17785.683620141612 * var_i_NaCa_t__i_NaCa_t - 17785.683620141612 * var_i_NaK_t__i_NaK_t - 17785.683620141612 * var_i_Na_t__i_Na_t - 17785.683620141612 * var_i_Nab_t__i_Nab_t - 17785.683620141612 * var_i_Naps_t__i_Naps_t - 17785.683620141612 * var_i_circ__i_circ - 17785.683620141612 * var_i_nsK_t__i_nsK_t - 17785.683620141612 * var_i_nsNa_t__i_nsNa_t - 17785.683620141612 * var_i_pCa_t__i_pCa_t; // millivolt / millisecond

        return d_dt_chaste_interface_var_Vm_t__Vm_t;
    }

    double Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::EvaluatePartialDerivative54(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -85.207812
            double var_chaste_interface__ion_concentrations__Ca_i = rY[1];
            // Units: millimolar; Initial value: 8.8787034e-05
            double var_chaste_interface__i_Na_t_m_gate__m = rY[4];
            // Units: dimensionless; Initial value: 0.0034129472
            double var_chaste_interface__i_Na_t_h_gate__h = rY[5];
            // Units: dimensionless; Initial value: 0.82700551
            double var_chaste_interface__i_CaL_s__Co = rY[11];
            // Units: dimensionless; Initial value: -1.3496934e-17
            double var_chaste_interface__i_CaL_s__Ccao = rY[17];
            // Units: dimensionless; Initial value: 3.7986638e-22
            double var_chaste_interface__i_CaL_s_y_gate__y = rY[18];
            // Units: dimensionless; Initial value: 0.78134852
            double var_chaste_interface__i_CaL_t__TCo = rY[24];
            // Units: dimensionless; Initial value: -1.3449454e-17
            double var_chaste_interface__i_CaL_t__TCcao = rY[30];
            // Units: dimensionless; Initial value: 3.75926e-22
            double var_chaste_interface__i_CaL_t_y_gate__y = rY[31];
            // Units: dimensionless; Initial value: 0.7813477
            double var_chaste_interface__i_Kr_t_xr_gate__xr = rY[33];
            // Units: dimensionless; Initial value: 0.00020469344
            double var_chaste_interface__i_Ks_t_xs_gate__xs = rY[35];
            // Units: dimensionless; Initial value: 0.0061359896
            double var_chaste_interface__i_Kto_t_r2_gate__r2 = rY[38];
            // Units: dimensionless; Initial value: 0.9625701
            double var_chaste_interface__ion_concentrations__K_t = rY[46];
            // Units: millimolar; Initial value: 5.4140321
            double var_chaste_interface__ion_concentrations__Na_t = rY[47];
            // Units: millimolar; Initial value: 139.93239
            double var_chaste_interface__ion_concentrations__Ca_t = rY[48];
            // Units: millimolar; Initial value: 1.8476402
            double var_chaste_interface__ion_concentrations__K_i = rY[49];
            // Units: millimolar; Initial value: 136.78926
            double var_chaste_interface__ion_concentrations__Na_i = rY[50];
            // Units: millimolar; Initial value: 11.120279
            double var_chaste_interface__Vm_t__Vm_t = rY[54];
            // Units: millivolt; Initial value: -85.208034
            


            const double var_x3 = pow(var_chaste_interface__ion_concentrations__Ca_i, 3);
            const double var_x4 = 1.0 + 1.5625000000000003e-8 / var_x3;
            const double var_x5 = 1 / var_x4;
            const double var_x7 = exp(9.9999999999999995e-8);
            const double var_x8 = 1 / (-1.0 + var_x7);
            const double var_x9 = 0.75 * var_chaste_interface__ion_concentrations__Na_i;
            const double var_x11 = exp(-9.9999999999999995e-8);
            const double var_x13 = 1 / (-1.0 + var_x11);
            const double var_x15 = fabs(var_chaste_interface__Vm_s__Vm_s);
            const double var_x37 = -0.61380000000000001 + 0.001 * var_x7;
            const double var_x38 = var_x8 * var_chaste_interface__i_CaL_s_y_gate__y;
            const double var_x39 = var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co;
            const double var_x40 = var_x39 * mParameters[4];
            const double var_x42 = -0.61380000000000001 + 0.001 * var_x11;
            const double var_x43 = var_x13 * var_chaste_interface__i_CaL_s_y_gate__y;
            const double var_x44 = var_x15 < 1.3347668393782383e-6;
            const double var_x45 = exp(0.07491945188463181 * var_chaste_interface__Vm_s__Vm_s);
            const double var_x46 = -1.0 + var_x45;
            const double var_x47 = 1 / var_x46;
            const double var_x48 = var_x40 * var_chaste_interface__i_CaL_s_y_gate__y;
            const double var_x49 = var_x47 * var_x48;
            const double var_x50 = -0.61380000000000001 + 0.001 * var_x45;
            const double var_x51 = 0.55630930863148487 * var_x50;
            const double var_x52 = var_x49 * var_x51;
            const double var_x58 = exp(0.07491945188463181 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x59 = 0.001 * var_x58 - 0.34100000000000003 * var_chaste_interface__ion_concentrations__Ca_t;
            const double var_x60 = var_chaste_interface__i_CaL_t__TCcao + var_chaste_interface__i_CaL_t__TCo;
            const double var_x61 = var_x60 * var_chaste_interface__i_CaL_t_y_gate__y;
            const double var_x62 = -1.0 + var_x58;
            const double var_x63 = 1 / var_x62;
            const double var_x64 = var_x63 * mParameters[4];
            const double var_x65 = var_x61 * var_x64;
            const double var_x66 = var_x59 * var_x65;
            const double var_x67 = var_x66 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x68 = 7.425432175987399e-7 * mParameters[4];
            const double var_x69 = var_x37 * var_x68;
            const double var_x70 = var_x38 * var_x69;
            const double var_x71 = var_x42 * var_x68;
            const double var_x72 = var_x43 * var_x71;
            const double var_x73 = var_x39 * var_x72;
            const double var_x74 = ((var_x44) ? (-var_x73 + 374597.25942315906 * (1.3347668393782383e-6 + var_chaste_interface__Vm_s__Vm_s) * (var_x73 + var_x39 * var_x70)) : (var_x52 * var_chaste_interface__Vm_s__Vm_s));
            const double var_x75 = 4.8947149346606639e-5 - var_x74;
            const double var_x84 = 1.0 - 20430.198966619231 * var_x74;
            const double var_x100 = 1 / var_chaste_interface__ion_concentrations__Na_i;
            const double var_x101 = pow(var_x100, 2.7999999999999998);
            const double var_x102 = 1 / (1.0 + 124372.1149330912 * var_x101);
            const double var_x108 = exp(-7.0000000000000009 - 1.6666666666666667 * log10(var_chaste_interface__ion_concentrations__Ca_i));
            const double var_x109 = 1.0 + var_x108;
            const double var_x110 = (0.23080000000000001 + 0.76919999999999999 / var_x109) * mParameters[10];
            const double var_x112 = var_chaste_interface__ion_concentrations__Na_i + 0.12 * var_chaste_interface__ion_concentrations__K_i;
            const double var_x113 = 1 / var_x112;
            const double var_x116 = pow(var_x100, 1.5);
            const double var_x117 = 1 / (1.0 + 31.622776601683793 * var_x116);
            const double var_x126 = 1 / var_chaste_interface__ion_concentrations__K_i;
            const double var_x147 = pow(var_chaste_interface__ion_concentrations__Na_i, 3);
            const double var_x222 = var_x59 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x274 = var_x65 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x275 = var_x274 * var_x58;
            const double var_x276 = var_x222 * var_x58 * var_x61 * mParameters[4] / pow(var_x62, 2);
            const double var_x293 = pow(var_chaste_interface__ion_concentrations__Na_t, 3);
            const double var_x295 = exp(-0.03184076705096852 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x296 = var_x293 * var_chaste_interface__ion_concentrations__Ca_i;
            const double var_x297 = 0.037459725942315905 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x298 = exp(var_x297);
            const double var_x299 = var_x147 * var_x298;
            const double var_x300 = var_x299 * var_chaste_interface__ion_concentrations__Ca_t;
            const double var_x301 = 1.0 + 0.0001 * var_x295 * (var_x296 + var_x300);
            const double var_x302 = var_x295 / var_x301;
            const double var_x304 = pow(var_x301, (-2));
            const double var_x307 = var_x300 - var_x296;
            const double var_x310 = var_x307 * mParameters[11];
            const double var_x312 = var_x302 * mParameters[11];
            const double var_x319 = var_x302 * var_x310;
            const double var_x320 = var_x295 * var_x304 * var_x310 * (0.03184076705096852 * var_x295 * (0.0001 * var_x296 + 0.0001 * var_x300) - 3.7459725942315904e-6 * var_x295 * var_x300);
            const double var_x321 = var_x300 * var_x312;
            const double var_x538 = pow((var_x75 - 0.98899432645597307 * var_x67), (-2));
            const double var_x539 = -1.0 + var_x298;
            const double var_x540 = 1 / var_x539;
            const double var_x541 = var_x540 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x542 = var_x298 * var_chaste_interface__ion_concentrations__K_i;
            const double var_x543 = var_x542 - var_chaste_interface__ion_concentrations__K_t;
            const double var_x544 = var_x543 * var_x61;
            const double var_x545 = var_x538 * var_x541 * var_x544;
            const double var_x547 = 0.75 * var_x542 - 0.75 * var_chaste_interface__ion_concentrations__K_t;
            const double var_x550 = pow(var_chaste_interface__i_Ks_t_xs_gate__xs, 2);
            const double var_x556 = 20205.350866353103 * var_x66;
            const double var_x557 = 1 / (var_x84 - var_x556 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x558 = var_x541 * var_x557;
            const double var_x568 = exp(0.4017857142857143 + 0.044642857142857144 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x569 = 1.0 + var_x568;
            const double var_x570 = mParameters[9] / var_x569;
            const double var_x571 = log(var_x126 * var_chaste_interface__ion_concentrations__K_t);
            const double var_x572 = -26.695336787564766 * var_x571 + var_chaste_interface__Vm_t__Vm_t;
            const double var_x573 = sqrt(var_chaste_interface__ion_concentrations__K_t);
            const double var_x574 = var_x572 * var_x573;
            const double var_x579 = exp(-1.7703904136064939 + 0.038654812524159254 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x580 = 1.0 + var_x579;
            const double var_x581 = 1 / var_x580;
            const double var_x582 = exp(-9.8123827392120067 - 0.17056114617090226 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x583 = 1.0 + var_x582;
            const double var_x584 = 1 / var_x583;
            const double var_x585 = var_x581 * var_x584 * mParameters[12];
            const double var_x591 = exp(4.0 - 0.20000000000000001 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x592 = 1.0 + var_x591;
            const double var_x593 = 1 / var_x592;
            const double var_x595 = exp(8.3333333333333339 + 0.066666666666666666 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x596 = 1.0 + var_x595;
            const double var_x597 = 0.80000000000000004 - 0.65000000000000002 / var_x596;
            const double var_x598 = var_x102 * var_x597;
            const double var_x600 = 1 / (1.5 + var_chaste_interface__ion_concentrations__K_t);
            const double var_x601 = exp(-0.0037459725942315908 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x602 = exp(0.01485884101040119 * var_chaste_interface__ion_concentrations__Na_t);
            const double var_x603 = exp(-var_x297);
            const double var_x604 = 1.0 + 0.1245 * var_x601 + 0.0052142857142857138 * var_x603 * (-1.0 + var_x602);
            const double var_x610 = var_x570 * var_chaste_interface__i_Kr_t_xr_gate__xr;
            const double var_x612 = var_x110 * var_x550;
            const double var_x614 = exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__Vm_t__Vm_t - 6.3668378238341967 * var_x571);
            const double var_x615 = 1.0 + var_x614;
            const double var_x616 = 1 / var_x615;
            const double var_x617 = exp(-2.4444678999999998 + 13.729411709844559 * var_x571 - 0.51429999999999998 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x618 = 1.0 + var_x617;
            const double var_x619 = 1 / var_x618;
            const double var_x620 = exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__Vm_t__Vm_t - 2.144169450777202 * var_x571);
            const double var_x621 = exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__Vm_t__Vm_t - 1.6484370466321243 * var_x571);
            const double var_x622 = var_x621 + 0.49124000000000001 * var_x620;
            const double var_x623 = var_x619 * var_x622;
            const double var_x624 = 1 / (1000.0 * var_x623 + 1020.0 * var_x616);
            const double var_x625 = var_x616 * mParameters[8];
            const double var_x626 = var_x624 * var_x625;
            const double var_x630 = var_x585 * var_chaste_interface__i_Kto_t_r2_gate__r2;
            const double var_x633 = 1000.0 * var_x619;
            const double var_x634 = var_x614 / pow(var_x615, 2);
            const double var_x635 = var_x617 * var_x622 / pow(var_x618, 2);
            const double var_x637 = var_x574 * var_x625 / pow((var_x616 + 0.98039215686274506 * var_x623), 2);
            const double var_x639 = var_x624 * var_x634 * mParameters[8];
            const double var_x642 = var_x5 * var_x540;
            const double var_x643 = var_x642 * var_chaste_interface__Vm_t__Vm_t;
            const double var_x646 = var_x600 * var_chaste_interface__ion_concentrations__K_t;
            const double var_x647 = var_x117 * var_x646 / pow(var_x604, 2);
            const double var_x650 = pow(var_chaste_interface__ion_concentrations__K_t, 0.23999999999999999);
            const double var_x654 = var_x573 * var_x610;
            const double var_x656 = var_x573 * var_x626;
            const double var_x662 = var_x572 * var_x591 / pow(var_x592, 2);
            const double var_x663 = var_x102 * var_x572 * var_x595 / pow(var_x596, 2);
            const double var_x665 = var_x544 * var_x557;
            const double var_x666 = var_x540 * var_x665;
            const double var_x667 = var_x647 * (0.00046637358798183305 * var_x601 + 0.037459725942315905 * var_x603 * (-0.0052142857142857138 + 0.0052142857142857138 * var_x602));
            const double var_x668 = var_x298 * var_chaste_interface__Vm_t__Vm_t / pow(var_x539, 2);
            const double var_x669 = var_x5 * var_x668;
            const double var_x671 = 243.26999999999998 * var_x634 - 514.29999999999995 * var_x635 - var_x633 * (0.061749999999999999 * var_x621 + 0.039456396800000001 * var_x620);
            const double var_x672 = var_x572 * var_chaste_interface__i_Kto_t_r2_gate__r2 * mParameters[12];
            const double var_x673 = var_x581 * var_x582 * var_x672 / pow(var_x583, 2);
            const double var_x674 = var_x579 * var_x584 * var_x672 / pow(var_x580, 2);
            const double var_x675 = var_x568 * var_x574 * var_chaste_interface__i_Kr_t_xr_gate__xr * mParameters[9] / pow(var_x569, 2);
            const double var_x676 = var_x574 * var_x639;
            const double var_x677 = var_x545 * (var_x556 + 1.5137738120438449 * var_x275 - 1513.7738120438448 * var_x276);
            const double var_x678 = var_x542 * var_x558 * var_x61;
            const double var_x679 = var_x665 * var_x668;
            const double var_x681 = -0.75 * var_chaste_interface__ion_concentrations__Na_t + var_x298 * var_x9;
            const double var_x683 = var_chaste_interface__ion_concentrations__Na_t + 0.12 * var_chaste_interface__ion_concentrations__K_t;
            const double var_x684 = -26.695336787564766 * log(var_x113 * var_x683) + var_chaste_interface__Vm_t__Vm_t;
            const double var_x687 = pow(var_chaste_interface__i_Na_t_m_gate__m, 3) * mParameters[5];
            const double var_x690 = exp(-6.75 - 0.125 * var_chaste_interface__Vm_t__Vm_t);
            const double var_x691 = 1.0 + var_x690;
            const double var_x692 = 1 / var_x691;
            const double var_x695 = var_x687 * var_chaste_interface__i_Na_t_h_gate__h;
            const double var_x704 = var_x684 * var_x690 / pow(var_x691, 2);
            const double var_x705 = var_x298 * var_chaste_interface__ion_concentrations__Na_i;
            const double var_x757 = 0.00064154248753646654 * var_x637;
            const double var_x759 = 0.00063248202918595071 * var_x642;
            const double var_x760 = 2.3692603476745565e-5 * var_x669;
            const double var_x761 = 1.7769452607559171e-5 * var_x643;
            
            partialF = -505.58401558211904 + 1317.8286779026321 * var_x276 + 0.00050208693154562059 * var_x675 + 0.031834772749551925 * var_x319 + 0.038647535419399158 * var_x674 + 159.18940176185615 * var_x676 + 0.00079069720674157919 * var_x679 - 5.0570868996724627e-11 * var_x677 - 0.021107928230953185 * var_x666 - 0.99981174129985628 * var_x320 - 0.99981174129985628 * var_x612 - 0.99981174129985628 * var_x630 - 1.2165009780074296 * var_x695 - 667.46080403293979 * var_x656 - 0.00066237527861115486 * var_x704 - 0.0052990022288892389 * var_x692 - 17589.940192460988 * var_x66 - 0.037452673823002262 * var_x321 - 0.0047314557612345709 * var_x663 - 0.0011997740895598277 * var_x662 - 1.317828677902632 * var_x275 - 0.17052903655122911 * var_x673 - 0.0112467472666219 * var_x654 - 1.4997176119497846 * var_x667 - 0.0059988704477991379 * var_x593 - 0.00079069720674157919 * var_x678 - 0.00020141586151379442 * var_x650 - 0.10918744064387471 * var_x598 + var_x547 * var_x760 + var_x681 * var_x760 - var_x542 * var_x761 - var_x547 * var_x759 - var_x671 * var_x757 - var_x681 * var_x759 - var_x705 * var_x761;
        }
        else
        {
            const double y_save = rY[54];
            rY[54] += delta;
            const double temp = EvaluateYDerivative54(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[54])/delta;
            rY[54] = y_save;
        }
        return partialF;
    }

    std::vector<double> Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt::ComputeDerivedQuantities(double var_chaste_interface__environment__time_converted, const std::vector<double> & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__Vm_s__Vm_s = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.207812
        double var_chaste_interface__ion_concentrations__Ca_i = rY[1];
        // Units: millimolar; Initial value: 8.8787034e-05
        double var_chaste_interface__i_Na_s_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.0034130493
        double var_chaste_interface__i_Na_s_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.82699973
        double var_chaste_interface__i_CaL_s__Co = rY[11];
        // Units: dimensionless; Initial value: -1.3496934e-17
        double var_chaste_interface__i_CaL_s__Ccao = rY[17];
        // Units: dimensionless; Initial value: 3.7986638e-22
        double var_chaste_interface__i_CaL_s_y_gate__y = rY[18];
        // Units: dimensionless; Initial value: 0.78134852
        double var_chaste_interface__i_Kr_s_xr_gate__xr = rY[32];
        // Units: dimensionless; Initial value: 0.00020469344
        double var_chaste_interface__i_Ks_s_xs_gate__xs = rY[34];
        // Units: dimensionless; Initial value: 0.0061359896
        double var_chaste_interface__i_Kto_s_r2_gate__r2 = rY[36];
        // Units: dimensionless; Initial value: 0.9625701
        double var_chaste_interface__i_Kto_s_r3_gate__r3 = rY[37];
        // Units: dimensionless; Initial value: 0.96250049
        double var_chaste_interface__JCaSRrel__F2 = rY[41];
        // Units: dimensionless; Initial value: 0.00026639195
        double var_chaste_interface__JCaSRrel__F3 = rY[42];
        // Units: dimensionless; Initial value: 4.9455459e-10
        double var_chaste_interface__CaSRrel__CaSRrel = rY[44];
        // Units: millimolar; Initial value: 1.0326252
        double var_chaste_interface__ion_concentrations__K_i = rY[49];
        // Units: millimolar; Initial value: 136.78926
        double var_chaste_interface__ion_concentrations__Na_i = rY[50];
        // Units: millimolar; Initial value: 11.120279
        double var_chaste_interface__ion_concentrations__Ca_ss = rY[51];
        // Units: millimolar; Initial value: 9.5977033e-05
        
        // Lookup table indexing
        const bool _oob_0 = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Vm_s__Vm_s);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__Vm_s__Vm_s);

        // Mathematics
        const double var_i_CaL_s_y_gate__tau_y = _lt_0_row[15]; // second
        const double var_i_Kr_s_xri_gate__xri = 1 / (_lt_0_row[11]); // dimensionless
        const double var_i_Ks_s__PRNaK = 0.018329999999999999; // dimensionless
        const double var_i_Kto_s__fr2 = 1.0; // dimensionless
        const double var_i_Na_s_h_gate__tau_h = 0.00010351966873706004 + 0.00020703933747412008 / (1.1381e-6 * exp(0.1017 * mParameters[7] - 0.1017 * var_chaste_interface__Vm_s__Vm_s) + 6.5369999999999999 * exp(0.080159999999999995 * var_chaste_interface__Vm_s__Vm_s - 0.080159999999999995 * mParameters[7])); // second
        const double var_i_Stim__i_Stim_converted = -GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_i_CaL_s__i_CaL_s = ((fabs(var_chaste_interface__Vm_s__Vm_s) < 1.3347668393782383e-6) ? (374597.25942315906 * (1.3347668393782383e-6 + var_chaste_interface__Vm_s__Vm_s) * (7.425432175987399e-7 * (-0.61380000000000001 + 0.001 * exp(9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 7.425432175987399e-7 * (-0.61380000000000001 + 0.001 * exp(-9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 7.425432175987399e-7 * (-0.61380000000000001 + 0.001 * exp(-9.9999999999999995e-8)) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.55630930863148487 * (_lt_0_row[3]) * (var_chaste_interface__i_CaL_s__Ccao + var_chaste_interface__i_CaL_s__Co) * var_chaste_interface__Vm_s__Vm_s * var_chaste_interface__i_CaL_s_y_gate__y * mParameters[4] / (_lt_0_row[2]))); // microA
        const double var_membrane_permeabilities__fK1t = 0.80000000000000004; // dimensionless
        const double var_membrane_permeabilities__fKrt = 0.52600000000000002; // dimensionless
        const double var_membrane_permeabilities__fKst = 0.52600000000000002; // dimensionless
        const double var_membrane_permeabilities__fKtot = 0.52600000000000002; // dimensionless
        const double var_membrane_permeabilities__fNaCat = 0.52600000000000002; // dimensionless
        const double var_membrane_permeabilities__fNat = 0.64000000000000001; // dimensionless
        const double var_model_parameters__Ca_e = 1.8; // millimolar
        const double var_model_parameters__F = 96500.0; // coulomb_per_mole
        const double var_model_parameters__K_e = 5.4000000000000004; // millimolar
        const double var_model_parameters__Lc = 0.012999999999999999; // cm
        const double var_model_parameters__Lt = 0.00059299999999999999; // cm
        const double var_model_parameters__Na_e = 140.0; // millimolar
        const double var_model_parameters__R = 8310.0; // joule_per_kilomole_kelvin
        const double var_model_parameters__T = 310.0; // kelvin
        const double var_i_Kr_s__E_Kr_s = var_model_parameters__R * var_model_parameters__T * log(var_model_parameters__K_e / var_chaste_interface__ion_concentrations__K_i) / var_model_parameters__F; // millivolt
        const double var_i_K1_s__E_K1_s = var_i_Kr_s__E_Kr_s; // millivolt
        const double var_i_K1_s__aK1s = 1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__Vm_s__Vm_s - 0.23849999999999999 * var_i_K1_s__E_K1_s)); // dimensionless
        const double var_i_K1_s__bK1s = 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__Vm_s__Vm_s - 0.080320000000000003 * var_i_K1_s__E_K1_s) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__Vm_s__Vm_s - 0.061749999999999999 * var_i_K1_s__E_K1_s)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_i_K1_s__E_K1_s - 0.51429999999999998 * var_chaste_interface__Vm_s__Vm_s)); // dimensionless
        const double var_i_Ks_s__E_Ks_s = var_model_parameters__R * var_model_parameters__T * log((var_i_Ks_s__PRNaK * var_model_parameters__Na_e + var_model_parameters__K_e) / (var_i_Ks_s__PRNaK * var_chaste_interface__ion_concentrations__Na_i + var_chaste_interface__ion_concentrations__K_i)) / var_model_parameters__F; // millivolt
        const double var_i_Kto_s__E_Kto_s = var_i_Kr_s__E_Kr_s; // millivolt
        const double var_model_parameters__ptcm = 21028875.0; // per_cm2
        const double var_model_parameters__rc = 0.00059299999999999999; // cm
        const double var_model_parameters__Sms = 6.2831799999999998 * pow(var_model_parameters__rc, 2) + 6.2831799999999998 * var_model_parameters__Lc * var_model_parameters__rc; // cm2
        const double var_model_parameters__Cms = var_model_parameters__Sms; // microF
        const double var_i_CaL_s__i_CaL_s_converted = HeartConfig::Instance()->GetCapacitance() * var_i_CaL_s__i_CaL_s / var_model_parameters__Cms; // uA_per_cm2
        const double var_model_parameters__Vc = 3.1415899999999999 * pow(var_model_parameters__rc, 2) * var_model_parameters__Lc; // cm3
        const double var_model_parameters__VSRrel = 0.00316 * var_model_parameters__Vc; // cm3
        const double var_JCaSRrel__JCaSRrel = (-var_chaste_interface__ion_concentrations__Ca_ss + var_chaste_interface__CaSRrel__CaSRrel) * (var_chaste_interface__JCaSRrel__F2 + var_chaste_interface__JCaSRrel__F3) * mParameters[1] * var_model_parameters__VSRrel; // millimolar_per_second
        const double var_model_parameters__pt = 6.2831799999999998 * var_model_parameters__Lc * var_model_parameters__ptcm * var_model_parameters__rc; // dimensionless
        const double var_model_parameters__rt = 1.4815e-5; // cm
        const double var_model_parameters__Smt = 6.2831799999999998 * var_model_parameters__Lt * var_model_parameters__pt * var_model_parameters__rt; // cm2
        const double var_membrane_permeabilities__g_K1_s = (1.0 - var_membrane_permeabilities__fK1t) * (var_model_parameters__Sms + var_model_parameters__Smt) * mParameters[8]; // milliS
        const double var_i_K1_s__i_K1_s = 0.43033148291193518 * sqrt(var_model_parameters__K_e) * (-var_i_K1_s__E_K1_s + var_chaste_interface__Vm_s__Vm_s) * var_i_K1_s__aK1s * var_membrane_permeabilities__g_K1_s / (var_i_K1_s__aK1s + var_i_K1_s__bK1s); // microA
        const double var_i_K1_s__i_K1_s_converted = HeartConfig::Instance()->GetCapacitance() * var_i_K1_s__i_K1_s / var_model_parameters__Cms; // uA_per_cm2
        const double var_membrane_permeabilities__g_Kto_s = (1.0 - var_membrane_permeabilities__fKtot) * (var_model_parameters__Sms + var_model_parameters__Smt) * mParameters[12]; // milliS
        const double var_i_Kto_s__i_Kto_s = (-var_i_Kto_s__E_Kto_s + var_chaste_interface__Vm_s__Vm_s) * ((1.0 - var_i_Kto_s__fr2) * var_chaste_interface__i_Kto_s_r3_gate__r3 + var_i_Kto_s__fr2 * var_chaste_interface__i_Kto_s_r2_gate__r2) * var_membrane_permeabilities__g_Kto_s / ((_lt_0_row[6]) * (_lt_0_row[7])); // microA
        const double var_i_Kto_s__i_Kto_s_converted = HeartConfig::Instance()->GetCapacitance() * var_i_Kto_s__i_Kto_s / var_model_parameters__Cms; // uA_per_cm2
        const double var_membrane_permeabilities__g_Na_s = (1.0 - var_membrane_permeabilities__fNat) * (var_model_parameters__Sms + var_model_parameters__Smt) * mParameters[5]; // milliS
        const double var_i_Na_s__i_Na_s = pow(var_chaste_interface__i_Na_s_m_gate__m, 3) * (-var_model_parameters__R * var_model_parameters__T * log((var_model_parameters__Na_e + 0.12 * var_model_parameters__K_e) / (var_chaste_interface__ion_concentrations__Na_i + 0.12 * var_chaste_interface__ion_concentrations__K_i)) / var_model_parameters__F + var_chaste_interface__Vm_s__Vm_s) * var_chaste_interface__i_Na_s_h_gate__h * var_membrane_permeabilities__g_Na_s; // microA
        const double var_i_Na_s__i_Na_s_converted = HeartConfig::Instance()->GetCapacitance() * var_i_Na_s__i_Na_s / var_model_parameters__Cms; // uA_per_cm2
        const double var_membrane_permeabilities__i_NaCa_max_s = (1.0 - var_membrane_permeabilities__fNaCat) * (var_model_parameters__Sms + var_model_parameters__Smt) * mParameters[11]; // microA
        const double var_i_NaCa_s__i_NaCa_s = (-pow(var_model_parameters__Na_e, 3) * var_chaste_interface__ion_concentrations__Ca_i + pow(var_chaste_interface__ion_concentrations__Na_i, 3) * var_model_parameters__Ca_e * exp(var_chaste_interface__Vm_s__Vm_s * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))) * var_membrane_permeabilities__i_NaCa_max_s * exp(-0.84999999999999998 * var_chaste_interface__Vm_s__Vm_s * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)) / (1.0 + 0.0001 * (pow(var_model_parameters__Na_e, 3) * var_chaste_interface__ion_concentrations__Ca_i + pow(var_chaste_interface__ion_concentrations__Na_i, 3) * var_model_parameters__Ca_e * exp(var_chaste_interface__Vm_s__Vm_s * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))) * exp(-0.84999999999999998 * var_chaste_interface__Vm_s__Vm_s * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))); // microA
        const double var_i_NaCa_s__i_NaCa_s_converted = HeartConfig::Instance()->GetCapacitance() * var_i_NaCa_s__i_NaCa_s / var_model_parameters__Cms; // uA_per_cm2
        const double var_membrane_permeabilities__q_Kr_s = (1.0 - var_membrane_permeabilities__fKrt) * (var_model_parameters__Sms + var_model_parameters__Smt) * mParameters[9]; // milliS
        const double var_i_Kr_s__i_Kr_s = 0.011248864963317985 * sqrt(var_model_parameters__K_e) * (-var_i_Kr_s__E_Kr_s + var_chaste_interface__Vm_s__Vm_s) * var_chaste_interface__i_Kr_s_xr_gate__xr * var_i_Kr_s_xri_gate__xri * var_membrane_permeabilities__q_Kr_s; // microA
        const double var_i_Kr_s__i_Kr_s_converted = HeartConfig::Instance()->GetCapacitance() * var_i_Kr_s__i_Kr_s / var_model_parameters__Cms; // uA_per_cm2
        const double var_membrane_permeabilities__q_Ks_s = (1.0 - var_membrane_permeabilities__fKst) * (var_model_parameters__Sms + var_model_parameters__Smt) * mParameters[10]; // milliS
        const double var_i_Ks_s__i_Ks_s = pow(var_chaste_interface__i_Ks_s_xs_gate__xs, 2) * (0.23080000000000001 + 0.76919999999999999 / (1.0 + exp(-7.0000000000000009 - 1.6666666666666667 * log10(var_chaste_interface__ion_concentrations__Ca_i)))) * (-var_i_Ks_s__E_Ks_s + var_chaste_interface__Vm_s__Vm_s) * var_membrane_permeabilities__q_Ks_s; // microA
        const double var_i_Ks_s__i_Ks_s_converted = HeartConfig::Instance()->GetCapacitance() * var_i_Ks_s__i_Ks_s / var_model_parameters__Cms; // uA_per_cm2

        std::vector<double> dqs(13);
        dqs[0] = var_JCaSRrel__JCaSRrel;
        dqs[1] = var_i_CaL_s__i_CaL_s_converted;
        dqs[2] = var_i_CaL_s_y_gate__tau_y;
        dqs[3] = var_model_parameters__Cms;
        dqs[4] = var_i_Na_s__i_Na_s_converted;
        dqs[5] = var_i_Na_s_h_gate__tau_h;
        dqs[6] = var_i_K1_s__i_K1_s_converted;
        dqs[7] = var_i_Kr_s__i_Kr_s_converted;
        dqs[8] = var_i_Ks_s__i_Ks_s_converted;
        dqs[9] = var_i_NaCa_s__i_NaCa_s_converted;
        dqs[10] = var_i_Stim__i_Stim_converted;
        dqs[11] = var_i_Kto_s__i_Kto_s_converted;
        dqs[12] = var_chaste_interface__environment__time_converted;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt>::Initialise(void)
{
    this->mSystemName = "pasek_model_2008";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-85.207812);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.8787034e-05);

    // rY[2]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0034130493);

    // rY[3]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.82699973);

    // rY[4]:
    this->mVariableNames.push_back("i_Na_t_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0034129472);

    // rY[5]:
    this->mVariableNames.push_back("i_Na_t_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.82700551);

    // rY[6]:
    this->mVariableNames.push_back("i_CaL_s__Cst");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99797984);

    // rY[7]:
    this->mVariableNames.push_back("i_CaL_s__C1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(7.5722514e-05);

    // rY[8]:
    this->mVariableNames.push_back("i_CaL_s__C2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.1545646e-09);

    // rY[9]:
    this->mVariableNames.push_back("i_CaL_s__C3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.7463178e-14);

    // rY[10]:
    this->mVariableNames.push_back("i_CaL_s__C4");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(-5.7569102e-17);

    // rY[11]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(-1.3496934e-17);

    // rY[12]:
    this->mVariableNames.push_back("i_CaL_s__Ccast");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0019155065);

    // rY[13]:
    this->mVariableNames.push_back("i_CaL_s__Cca1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(5.8135383e-07);

    // rY[14]:
    this->mVariableNames.push_back("i_CaL_s__Cca2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(6.615513e-11);

    // rY[15]:
    this->mVariableNames.push_back("i_CaL_s__Cca3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.3426555e-15);

    // rY[16]:
    this->mVariableNames.push_back("i_CaL_s__Cca4");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(4.6640361e-19);

    // rY[17]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d2_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.7986638e-22);

    // rY[18]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.78134852);

    // rY[19]:
    this->mVariableNames.push_back("i_CaL_t__TCst");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99798934);

    // rY[20]:
    this->mVariableNames.push_back("i_CaL_t__TC1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(7.5720257e-05);

    // rY[21]:
    this->mVariableNames.push_back("i_CaL_t__TC2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.1544156e-09);

    // rY[22]:
    this->mVariableNames.push_back("i_CaL_t__TC3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.7459475e-14);

    // rY[23]:
    this->mVariableNames.push_back("i_CaL_t__TC4");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(-5.7367189e-17);

    // rY[24]:
    this->mVariableNames.push_back("i_CaL_t__TCo");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(-1.3449454e-17);

    // rY[25]:
    this->mVariableNames.push_back("i_CaL_t__TCcast");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0019155245);

    // rY[26]:
    this->mVariableNames.push_back("i_CaL_t__TCca1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(5.8133643e-07);

    // rY[27]:
    this->mVariableNames.push_back("i_CaL_t__TCca2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(6.6150547e-11);

    // rY[28]:
    this->mVariableNames.push_back("i_CaL_t__TCca3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.3423167e-15);

    // rY[29]:
    this->mVariableNames.push_back("i_CaL_t__TCca4");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(4.6165955e-19);

    // rY[30]:
    this->mVariableNames.push_back("i_CaL_t__TCcao");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.75926e-22);

    // rY[31]:
    this->mVariableNames.push_back("i_CaL_t_y_gate__y");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7813477);

    // rY[32]:
    this->mVariableNames.push_back("i_Kr_s_xr_gate__xr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00020469344);

    // rY[33]:
    this->mVariableNames.push_back("i_Kr_t_xr_gate__xr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00020469344);

    // rY[34]:
    this->mVariableNames.push_back("i_Ks_s_xs_gate__xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0061359896);

    // rY[35]:
    this->mVariableNames.push_back("i_Ks_t_xs_gate__xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0061359896);

    // rY[36]:
    this->mVariableNames.push_back("i_Kto_s_r2_gate__r2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9625701);

    // rY[37]:
    this->mVariableNames.push_back("i_Kto_s_r3_gate__r3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.96250049);

    // rY[38]:
    this->mVariableNames.push_back("i_Kto_t_r2_gate__r2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9625701);

    // rY[39]:
    this->mVariableNames.push_back("i_Kto_t_r3_gate__r3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.96250049);

    // rY[40]:
    this->mVariableNames.push_back("JCaSRrel__F1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.8053082);

    // rY[41]:
    this->mVariableNames.push_back("JCaSRrel__F2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00026639195);

    // rY[42]:
    this->mVariableNames.push_back("JCaSRrel__F3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(4.9455459e-10);

    // rY[43]:
    this->mVariableNames.push_back("JCaSRrel__F4");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.19442578);

    // rY[44]:
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.0326252);

    // rY[45]:
    this->mVariableNames.push_back("CaSRup__CaSRup");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.0200296);

    // rY[46]:
    this->mVariableNames.push_back("extracellular_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(5.4140321);

    // rY[47]:
    this->mVariableNames.push_back("extracellular_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(139.93239);

    // rY[48]:
    this->mVariableNames.push_back("extracellular_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.8476402);

    // rY[49]:
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(136.78926);

    // rY[50]:
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(11.120279);

    // rY[51]:
    this->mVariableNames.push_back("dyadic_space_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(9.5977033e-05);

    // rY[52]:
    this->mVariableNames.push_back("ion_concentrations__BTRH");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.96700747);

    // rY[53]:
    this->mVariableNames.push_back("ion_concentrations__BTRL");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.081740868);

    // rY[54]:
    this->mVariableNames.push_back("Vm_t__Vm_t");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-85.208034);

    // mParameters[0]:
    this->mParameterNames.push_back("SR_leak_current_max");
    this->mParameterUnits.push_back("per_cm3_second");

    // mParameters[1]:
    this->mParameterNames.push_back("SR_release_current_max");
    this->mParameterUnits.push_back("per_cm3_second");

    // mParameters[2]:
    this->mParameterNames.push_back("SR_uptake_current_max");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[3]:
    this->mParameterNames.push_back("concentration_clamp_onoff");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[4]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("litre_per_second_cm2");

    // mParameters[5]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_cm2");

    // mParameters[6]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_reduced_inactivation");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_shift_inactivation");
    this->mParameterUnits.push_back("millivolt");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_cm2");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_cm2");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_cm2");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("microA_per_cm2");

    // mParameters[12]:
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
    this->mParameterUnits.push_back("milliS_per_cm2");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("SR_release_current");
    this->mDerivedQuantityUnits.push_back("millimolar_per_second");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current_f_gate_tau");
    this->mDerivedQuantityUnits.push_back("second");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_capacitance");
    this->mDerivedQuantityUnits.push_back("microF");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_h_gate_tau");
    this->mDerivedQuantityUnits.push_back("second");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [10]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [11]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [12]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellpasek_simurda_orchard_christe_2008FromCellMLGRL1Opt)

