//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: noble_model_1991
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: GeneralizedRushLarsenFirstOrderOpt)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "noble_model_1991.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables : public AbstractLookupTableCollection
{
public:
    static Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables);
        }
        return mpInstance.get();
    }

    void FreeMemory()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }

    // Row lookup methods
    // using linear-interpolation

    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<20; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }


    const double * IndexTable0(double var_chaste_interface__membrane__V)
    {
        const double _offset_0 = var_chaste_interface__membrane__V - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }


// LCOV_EXCL_START
    bool CheckIndex0(double& var_chaste_interface__membrane__V)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__membrane__V>mTableMaxs[0] || var_chaste_interface__membrane__V<mTableMins[0])
        {
// LCOV_EXCL_START
            _oob_0 = true;
// LCOV_EXCL_STOP
        }
        return _oob_0;
    }
// LCOV_EXCL_STOP

    ~Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

    }

protected:
    Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables(const Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables&);
    Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables& operator= (const Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables&);
    Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);

        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 20;
        mTableMins[0] = -250.0;
        mTableMaxs[0] = 550.0;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;

        Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::RegenerateTables();
    }

    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);


        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][20];

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(3.7433890822745473 - 0.074867781645490947 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[0] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[0] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[0] >= 2){
                    EXCEPTION("Lookup table 0 at ["<<i<<"][0] has non-finite value: " << val);
                }
                _lookup_table_0[i][0] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return 1.0 - exp(3.7433890822745473 - 0.074867781645490947 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[1] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[1] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[1] >= 2){
                    EXCEPTION("Lookup table 1 at ["<<i<<"][1] has non-finite value: " << val);
                }
                _lookup_table_0[i][1] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(1.8716945411372736 - 0.037433890822745473 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[2] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[2] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[2] >= 2){
                    EXCEPTION("Lookup table 2 at ["<<i<<"][2] has non-finite value: " << val);
                }
                _lookup_table_0[i][2] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return 1.0 - exp(1.8716945411372736 - 0.037433890822745473 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[3] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[3] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[3] >= 2){
                    EXCEPTION("Lookup table 3 at ["<<i<<"][3] has non-finite value: " << val);
                }
                _lookup_table_0[i][3] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(0.018716945411372737 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][4] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(-0.018716945411372737 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][5] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(-0.037433890822745473 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][6] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return ((fabs(19.0 + var_chaste_interface__membrane__V) < 4.0000000001150227e-7) ? (1.2000000000345068e-5 / (1.0 - exp(-1.0000000000287557e-7)) - 1249999.9999640554 * (18.999999599999999 + var_chaste_interface__membrane__V) * (-1.2000000000345068e-5 / (1.0 - exp(1.0000000000287557e-7)) - 1.2000000000345068e-5 / (1.0 - exp(-1.0000000000287557e-7)))) : (30.0 * (19.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.75 - 0.25 * var_chaste_interface__membrane__V))));
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[7] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[7] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[7] >= 2){
                    EXCEPTION("Lookup table 7 at ["<<i<<"][7] has non-finite value: " << val);
                }
                _lookup_table_0[i][7] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return ((fabs(19.0 + var_chaste_interface__membrane__V) < 9.999999999871223e-7) ? (-1.1999999999678934e-5 / (-1.0 + exp(-9.9999999997324457e-8)) + 500000.00000643887 * (19.000001000000001 + var_chaste_interface__membrane__V) * (1.1999999999678934e-5 / (-1.0 + exp(-9.9999999997324457e-8)) + 1.2000000000012001e-5 / (-1.0 + exp(1.0000000000010001e-7)))) : (12.0 * (19.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(1.8999999999999999 + 0.10000000000000001 * var_chaste_interface__membrane__V))));
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[8] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[8] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[8] >= 2){
                    EXCEPTION("Lookup table 8 at ["<<i<<"][8] has non-finite value: " << val);
                }
                _lookup_table_0[i][8] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return ((fabs(34.0 + var_chaste_interface__membrane__V) < 4.0000000001150227e-7) ? (-2.5000000000718892e-6 / (-1.0 + exp(-1.0000000000287557e-7)) + 1249999.9999640554 * (34.000000399999998 + var_chaste_interface__membrane__V) * (2.5000000000718892e-6 / (-1.0 + exp(1.0000000000287557e-7)) + 2.5000000000718892e-6 / (-1.0 + exp(-1.0000000000287557e-7)))) : (6.25 * (34.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(8.5 + 0.25 * var_chaste_interface__membrane__V))));
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[9] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[9] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[9] >= 2){
                    EXCEPTION("Lookup table 9 at ["<<i<<"][9] has non-finite value: " << val);
                }
                _lookup_table_0[i][9] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return 1.0 + exp(-8.5 - 0.25 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][10] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return ((fabs(41.0 + var_chaste_interface__membrane__V) < 1.0000000000287557e-6) ? (0.00020000000000575113 / (1.0 - exp(-1.0000000000287557e-7)) - 499999.99998562218 * (40.999999000000003 + var_chaste_interface__membrane__V) * (-0.00020000000000575113 / (1.0 - exp(1.0000000000287557e-7)) - 0.00020000000000575113 / (1.0 - exp(-1.0000000000287557e-7)))) : (200.0 * (41.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.1000000000000005 - 0.10000000000000001 * var_chaste_interface__membrane__V))));
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[11] < 2){
                    double left = f(var_chaste_interface__membrane__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[11] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[11] >= 2){
                    EXCEPTION("Lookup table 11 at ["<<i<<"][11] has non-finite value: " << val);
                }
                _lookup_table_0[i][11] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(-3.6960000000000002 - 0.056000000000000001 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][12] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return 1.0 + exp(2.8500000000000001 + 0.057000000000000002 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][13] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(4.1300000000000008 + 0.082600000000000007 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][14] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return 1.0 + exp(-0.80000000000000004 - 0.040000000000000001 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][15] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(-1.2 - 0.059999999999999998 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][16] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return 0.33300000000000002 / (1.0 + exp(-0.80000000000000004 - 0.20000000000000001 * var_chaste_interface__membrane__V));
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][17] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return exp(-0.058823529411764705 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][18] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane__V) {
                    return 1.0 + exp(-1.25 - 0.125 * var_chaste_interface__membrane__V);
                };
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane__V);

                _lookup_table_0[i][19] = val;
            }

            mNeedsRegeneration[0] = false;
        }

        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }

private:
    /** The single instance of the class */
    static std::shared_ptr<Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[20];

    // Lookup tables
    double (*_lookup_table_0)[20];
    int _lookup_table_0_num_misshit_piecewise[20] = {0};

};

std::shared_ptr<Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables> Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::mpInstance;


    boost::shared_ptr<RegularStimulus> Cellnoble_model_1991FromCellMLGRL1Opt::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__stim_amplitude_converted = -0.0060000000000000001 * HeartConfig::Instance()->GetCapacitance() / mParameters[9]; // uA_per_cm2
        const double var_chaste_interface__membrane__stim_duration_converted = 2.0; // millisecond
        const double var_chaste_interface__membrane__stim_period_converted = 1000.0; // millisecond
        const double var_chaste_interface__membrane__stim_start_converted = 100.0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__stim_amplitude_converted),
                var_chaste_interface__membrane__stim_duration_converted,
                var_chaste_interface__membrane__stim_period_converted,
                var_chaste_interface__membrane__stim_start_converted
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    double Cellnoble_model_1991FromCellMLGRL1Opt::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    Cellnoble_model_1991FromCellMLGRL1Opt::Cellnoble_model_1991FromCellMLGRL1Opt(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractGeneralizedRushLarsenCardiacCell(
                17,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellnoble_model_1991FromCellMLGRL1Opt>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        
        this->mParameters[0] = 0; // (var_calcium_release__K_leak_rate) [per_second]
        this->mParameters[1] = 250.0; // (var_calcium_release__K_m_rel) [per_second]
        this->mParameters[2] = 0.00050000000000000001; // (var_calcium_release__K_m_Ca) [millimolar]
        this->mParameters[3] = 1.0; // (var_sarcoplasmic_reticulum_calcium_pump__uptake_factor) [dimensionless]
        this->mParameters[4] = 1.0; // (var_intracellular_sodium_concentration__conc_clamp) [dimensionless]
        this->mParameters[5] = 2.0; // (var_extracellular_calcium_concentration__Ca_o) [millimolar]
        this->mParameters[6] = 4.0; // (var_extracellular_potassium_concentration__K_o) [millimolar]
        this->mParameters[7] = 140.0; // (var_extracellular_sodium_concentration__Na_o) [millimolar]
        this->mParameters[8] = 0.25; // (var_L_type_Ca_channel__P_Ca_L) [nanoA_per_millimolar]
        this->mParameters[9] = 9.5000000000000005e-5; // (var_membrane__Cm) [microF]
        this->mParameters[10] = 1.0; // (var_time_dependent_potassium_current__i_K_max) [nanoA]
        this->mParameters[11] = 2.5; // (var_fast_sodium_current__g_Na) [microS]
        this->mParameters[12] = 0; // (var_fast_sodium_current__perc_reduced_inact_for_IpNa) [dimensionless]
        this->mParameters[13] = 0; // (var_fast_sodium_current__shift_INa_inact) [millivolt]
        this->mParameters[14] = 1.0; // (var_time_independent_potassium_current__g_K1) [microS]
        this->mParameters[15] = 0.00050000000000000001; // (var_sodium_calcium_exchanger__k_NaCa) [nanoA]
        this->mParameters[16] = 0.0050000000000000001; // (var_transient_outward_current__g_to) [microS]
    }

    Cellnoble_model_1991FromCellMLGRL1Opt::~Cellnoble_model_1991FromCellMLGRL1Opt()
    {
    }

    AbstractLookupTableCollection* Cellnoble_model_1991FromCellMLGRL1Opt::GetLookupTableCollection()
    {
        return Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance();
    }
    
    double Cellnoble_model_1991FromCellMLGRL1Opt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -93.7400119196694
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
        // Units: millimolar; Initial value: 1.34858164771406e-05
        double var_chaste_interface__time_dependent_potassium_current_x_gate__x = rY[2];
        // Units: dimensionless; Initial value: 0.00938586574433011
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[3];
        // Units: dimensionless; Initial value: 0.00143405969732302
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[4];
        // Units: dimensionless; Initial value: 0.995414125415674
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 1.91821833548952e-08
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[6];
        // Units: dimensionless; Initial value: 0.999999956287155
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[7];
        // Units: dimensionless; Initial value: 0.997644968939185
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[8];
        // Units: dimensionless; Initial value: 1.60424507876553e-08
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[11];
        // Units: millimolar; Initial value: 7.50547214142684
        double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[12];
        // Units: millimolar; Initial value: 136.604284305878
        
        // Lookup table indexing
        const bool _oob_0 = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        const double var_L_type_Ca_channel__i_Ca_L_Ca = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 1.3356880329551402e-6) ? (-374338.90823576227 * (-50.000001335688033 + var_chaste_interface__membrane__V) * (-1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[5] * exp(9.9999999997780743e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999997780743e-8)) - 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[5] * exp(-9.9999999997780743e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) + 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[5] * exp(-9.9999999997780743e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) : (0.14973556329098189 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[5] * _lt_0_row[0]) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[1]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[6] * exp(9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[6] * exp(-9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[6] * exp(-9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (7.4867781645490941e-5 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[6] * _lt_0_row[2]) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[7] * exp(9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[7] * exp(-9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[7] * exp(-9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (0.00037433890822745472 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[7] * _lt_0_row[2]) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_calcium_background_current__i_b_Ca = 0.00025000000000000001 * var_chaste_interface__membrane__V - 0.0033392200824619565 * log(mParameters[5] / var_chaste_interface__intracellular_calcium_concentration__Ca_i); // nanoA
        const double var_reversal_potentials__E_K = 26.713760659695652 * log(mParameters[6] / var_chaste_interface__intracellular_potassium_concentration__K_i); // millivolt
        const double var_potassium_background_current__i_b_K = 0.00059999999999999995 * var_chaste_interface__membrane__V - 0.00059999999999999995 * var_reversal_potentials__E_K; // nanoA
        const double var_fast_sodium_current__i_Na_converted = 0.001 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-26.713760659695652 * log((mParameters[7] + 0.12 * mParameters[6]) / (var_chaste_interface__intracellular_sodium_concentration__Na_i + 0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i)) + var_chaste_interface__membrane__V) * HeartConfig::Instance()->GetCapacitance() * mParameters[11] * var_chaste_interface__fast_sodium_current_h_gate__h / mParameters[9]; // uA_per_cm2
        const double var_sodium_background_current__i_b_Na = 0.00059999999999999995 * var_chaste_interface__membrane__V - 0.016028256395817387 * log(mParameters[7] / var_chaste_interface__intracellular_sodium_concentration__Na_i); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa_converted = 0.001 * (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * mParameters[5] * _lt_0_row[4] - pow(mParameters[7], 3.0) * var_chaste_interface__intracellular_calcium_concentration__Ca_i * _lt_0_row[5]) * HeartConfig::Instance()->GetCapacitance() * mParameters[15] / ((1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i) * mParameters[9]); // uA_per_cm2
        const double var_sodium_potassium_pump__i_NaK = 0.69999999999999996 * mParameters[6] * var_chaste_interface__intracellular_sodium_concentration__Na_i / ((1.0 + mParameters[6]) * (40.0 + var_chaste_interface__intracellular_sodium_concentration__Na_i)); // nanoA
        const double var_time_dependent_potassium_current__i_K_converted = 7.1428571428571427e-6 * (-mParameters[6] * _lt_0_row[6] + var_chaste_interface__intracellular_potassium_concentration__K_i) * HeartConfig::Instance()->GetCapacitance() * mParameters[10] * var_chaste_interface__time_dependent_potassium_current_x_gate__x / mParameters[9]; // uA_per_cm2
        const double var_time_independent_potassium_current__i_K1_converted = 0.001 * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * HeartConfig::Instance()->GetCapacitance() * mParameters[6] * mParameters[14] / ((1.0 + exp(-0.74867781645490938 + 0.074867781645490947 * var_chaste_interface__membrane__V - 0.074867781645490947 * var_reversal_potentials__E_K)) * (10.0 + mParameters[6]) * mParameters[9]); // uA_per_cm2
        const double var_transient_outward_current__i_to_converted = 0.001 * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * HeartConfig::Instance()->GetCapacitance() * mParameters[16] * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s / mParameters[9]; // uA_per_cm2
        const double var_chaste_interface__i_ionic = ((var_fast_sodium_current__i_Na_converted + var_sodium_calcium_exchanger__i_NaCa_converted + var_time_dependent_potassium_current__i_K_converted + var_time_independent_potassium_current__i_K1_converted + var_transient_outward_current__i_to_converted) * mParameters[9] + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L_Ca + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L_K + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L_Na + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_calcium_background_current__i_b_Ca + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_potassium_background_current__i_b_K + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_sodium_background_current__i_b_Na + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_sodium_potassium_pump__i_NaK) / mParameters[9]; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellnoble_model_1991FromCellMLGRL1Opt::UpdateTransmembranePotential(double var_chaste_interface__environment__time_converted)
    {
        std::vector<double>& rY = rGetStateVariables();
        unsigned v_index = GetVoltageIndex();
        const double delta = 1e-8;

        double d_dt_chaste_interface_var_membrane__V;
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -93.7400119196694
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
        // Units: millimolar; Initial value: 1.34858164771406e-05
        double var_chaste_interface__time_dependent_potassium_current_x_gate__x = rY[2];
        // Units: dimensionless; Initial value: 0.00938586574433011
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[3];
        // Units: dimensionless; Initial value: 0.00143405969732302
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[4];
        // Units: dimensionless; Initial value: 0.995414125415674
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 1.91821833548952e-08
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[6];
        // Units: dimensionless; Initial value: 0.999999956287155
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[7];
        // Units: dimensionless; Initial value: 0.997644968939185
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[8];
        // Units: dimensionless; Initial value: 1.60424507876553e-08
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[11];
        // Units: millimolar; Initial value: 7.50547214142684
        double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[12];
        // Units: millimolar; Initial value: 136.604284305878
        

        // Lookup table indexing
        const bool _oob_0 = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_L_type_Ca_channel__i_Ca_L_Ca = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 1.3356880329551402e-6) ? (-374338.90823576227 * (-50.000001335688033 + var_chaste_interface__membrane__V) * (-1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[5] * exp(9.9999999997780743e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999997780743e-8)) - 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[5] * exp(-9.9999999997780743e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) + 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[5] * exp(-9.9999999997780743e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) : (0.14973556329098189 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[5] * _lt_0_row[0]) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[1]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[6] * exp(9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[6] * exp(-9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[6] * exp(-9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (7.4867781645490941e-5 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[6] * _lt_0_row[2]) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[7] * exp(9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[7] * exp(-9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[7] * exp(-9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (0.00037433890822745472 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[7] * _lt_0_row[2]) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_calcium_background_current__i_b_Ca = 0.00025000000000000001 * var_chaste_interface__membrane__V - 0.0033392200824619565 * log(mParameters[5] / var_chaste_interface__intracellular_calcium_concentration__Ca_i); // nanoA
        const double var_reversal_potentials__E_K = 26.713760659695652 * log(mParameters[6] / var_chaste_interface__intracellular_potassium_concentration__K_i); // millivolt
        const double var_potassium_background_current__i_b_K = 0.00059999999999999995 * var_chaste_interface__membrane__V - 0.00059999999999999995 * var_reversal_potentials__E_K; // nanoA
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-26.713760659695652 * log((mParameters[7] + 0.12 * mParameters[6]) / (var_chaste_interface__intracellular_sodium_concentration__Na_i + 0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i)) + var_chaste_interface__membrane__V) * mParameters[11] * var_chaste_interface__fast_sodium_current_h_gate__h; // nanoA
        const double var_sodium_background_current__i_b_Na = 0.00059999999999999995 * var_chaste_interface__membrane__V - 0.016028256395817387 * log(mParameters[7] / var_chaste_interface__intracellular_sodium_concentration__Na_i); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa = (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * mParameters[5] * _lt_0_row[4] - pow(mParameters[7], 3.0) * var_chaste_interface__intracellular_calcium_concentration__Ca_i * _lt_0_row[5]) * mParameters[15] / (1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i); // nanoA
        const double var_sodium_potassium_pump__i_NaK = 0.69999999999999996 * mParameters[6] * var_chaste_interface__intracellular_sodium_concentration__Na_i / ((1.0 + mParameters[6]) * (40.0 + var_chaste_interface__intracellular_sodium_concentration__Na_i)); // nanoA
        const double var_time_dependent_potassium_current__i_K = 0.0071428571428571426 * (-mParameters[6] * _lt_0_row[6] + var_chaste_interface__intracellular_potassium_concentration__K_i) * mParameters[10] * var_chaste_interface__time_dependent_potassium_current_x_gate__x; // nanoA
        const double var_time_independent_potassium_current__i_K1 = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * mParameters[6] * mParameters[14] / ((1.0 + exp(-0.74867781645490938 + 0.074867781645490947 * var_chaste_interface__membrane__V - 0.074867781645490947 * var_reversal_potentials__E_K)) * (10.0 + mParameters[6])); // nanoA
        const double var_transient_outward_current__i_to = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * mParameters[16] * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s; // nanoA
        d_dt_chaste_interface_var_membrane__V = -0.001 * (1000.0 * GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted) * mParameters[9] / HeartConfig::Instance()->GetCapacitance() + var_L_type_Ca_channel__i_Ca_L_Ca + var_L_type_Ca_channel__i_Ca_L_K + var_L_type_Ca_channel__i_Ca_L_Na + var_calcium_background_current__i_b_Ca + var_fast_sodium_current__i_Na + var_potassium_background_current__i_b_K + var_sodium_background_current__i_b_Na + var_sodium_calcium_exchanger__i_NaCa + var_sodium_potassium_pump__i_NaK + var_time_dependent_potassium_current__i_K + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) / mParameters[9]; // millivolt / millisecond

        double evalF = d_dt_chaste_interface_var_membrane__V;
        mEvalF[0] = d_dt_chaste_interface_var_membrane__V;
        double partialF = EvaluatePartialDerivative0(var_chaste_interface__environment__time_converted, rY, delta, true);
        if (fabs(partialF) < delta)
        {
            rY[v_index] += evalF*mDt;
        }
        else
        {
            rY[v_index] += (evalF/partialF)*(exp(partialF*mDt)-1.0);
        }
    }

    void Cellnoble_model_1991FromCellMLGRL1Opt::ComputeOneStepExceptVoltage(double var_chaste_interface__environment__time_converted)
    {
        std::vector<double>& rY = rGetStateVariables();
        const double delta = 1e-8;

        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -93.7400119196694
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
        // Units: millimolar; Initial value: 1.34858164771406e-05
        double var_chaste_interface__time_dependent_potassium_current_x_gate__x = rY[2];
        // Units: dimensionless; Initial value: 0.00938586574433011
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[3];
        // Units: dimensionless; Initial value: 0.00143405969732302
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[4];
        // Units: dimensionless; Initial value: 0.995414125415674
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 1.91821833548952e-08
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[6];
        // Units: dimensionless; Initial value: 0.999999956287155
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[7];
        // Units: dimensionless; Initial value: 0.997644968939185
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[8];
        // Units: dimensionless; Initial value: 1.60424507876553e-08
        double var_chaste_interface__calcium_release__ActFrac = rY[9];
        // Units: dimensionless; Initial value: 0.00267040300939318
        double var_chaste_interface__calcium_release__ProdFrac = rY[10];
        // Units: dimensionless; Initial value: 0.522949441962453
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[11];
        // Units: millimolar; Initial value: 7.50547214142684
        double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[12];
        // Units: millimolar; Initial value: 136.604284305878
        double var_chaste_interface__intracellular_calcium_concentration__Ca_up = rY[13];
        // Units: millimolar; Initial value: 0.59333810408885
        double var_chaste_interface__intracellular_calcium_concentration__Ca_rel = rY[14];
        // Units: millimolar; Initial value: 0.591323137897127
        double var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod = rY[15];
        // Units: millimolar; Initial value: 0.000524570960945961
        double var_chaste_interface__intracellular_calcium_concentration__Ca_Trop = rY[16];
        // Units: millimolar; Initial value: 0.00033477224086766
        

        // Lookup table indexing
        const bool _oob_0 = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_calcium_release__RegBindSite = pow(var_chaste_interface__intracellular_calcium_concentration__Ca_i, 2) / pow((mParameters[2] + var_chaste_interface__intracellular_calcium_concentration__Ca_i), 2); // dimensionless
        const double var_calcium_release__InactRate = 60.0 + 500.0 * var_calcium_release__RegBindSite; // per_second
        const double d_dt_chaste_interface_var_calcium_release__ActFrac = 0.5 * (1.0 - var_chaste_interface__calcium_release__ActFrac - var_chaste_interface__calcium_release__ProdFrac) * var_calcium_release__RegBindSite - 0.001 * var_chaste_interface__calcium_release__ActFrac * var_calcium_release__InactRate; // 1 / millisecond
        const double d_dt_chaste_interface_var_calcium_release__ProdFrac = -0.001 * var_chaste_interface__calcium_release__ProdFrac + 0.001 * var_chaste_interface__calcium_release__ActFrac * var_calcium_release__InactRate; // 1 / millisecond
        const double var_calcium_release__i_rel = (pow(var_chaste_interface__calcium_release__ActFrac, 2) * mParameters[1] / pow((0.25 + var_chaste_interface__calcium_release__ActFrac), 2) + mParameters[0]) * var_chaste_interface__intracellular_calcium_concentration__Ca_rel; // millimolar_per_second
        const double var_calcium_translocation__i_trans = 50.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_up - 50.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_rel; // millimolar_per_second
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_rel = 9.9999999999999991e-5 * var_calcium_translocation__i_trans - 0.001 * var_calcium_release__i_rel; // millimolar / millisecond
        const double var_intracellular_calcium_concentration__Ca_Calmod_orig_deriv = -50.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod + 100000.0 * (0.02 - var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod) * var_chaste_interface__intracellular_calcium_concentration__Ca_i; // millimolar / second
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_Calmod = 0.001 * var_intracellular_calcium_concentration__Ca_Calmod_orig_deriv; // millimolar / millisecond
        const double var_intracellular_calcium_concentration__Ca_Trop_orig_deriv = -200.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_Trop + 100000.0 * (0.050000000000000003 - var_chaste_interface__intracellular_calcium_concentration__Ca_Trop) * var_chaste_interface__intracellular_calcium_concentration__Ca_i; // millimolar / second
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_Trop = 0.001 * var_intracellular_calcium_concentration__Ca_Trop_orig_deriv; // millimolar / millisecond
        const double var_L_type_Ca_channel__i_Ca_L_Ca = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 1.3356880329551402e-6) ? (-374338.90823576227 * (-50.000001335688033 + var_chaste_interface__membrane__V) * (-1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[5] * exp(9.9999999997780743e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999997780743e-8)) - 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[5] * exp(-9.9999999997780743e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) + 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[5] * exp(-9.9999999997780743e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) : (0.14973556329098189 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[5] * _lt_0_row[0]) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[1]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[6] * exp(9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[6] * exp(-9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[6] * exp(-9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (7.4867781645490941e-5 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[6] * _lt_0_row[2]) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[7] * exp(9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[7] * exp(-9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[7] * exp(-9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (0.00037433890822745472 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[7] * _lt_0_row[2]) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d = 0.0030000000000000001 * (1.0 - var_chaste_interface__L_type_Ca_channel_d_gate__d) * _lt_0_row[7] - 0.0030000000000000001 * _lt_0_row[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d; // 1 / millisecond
        const double d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f = 0.00050000000000000001 * (1.0 - var_chaste_interface__L_type_Ca_channel_f_gate__f) * _lt_0_row[9] - 0.025000000000000001 * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[10]); // 1 / millisecond
        const double var_fast_sodium_current_h_gate__alpha_h = 20.0 * exp(-9.375 + 0.125 * mParameters[13] - 0.125 * var_chaste_interface__membrane__V); // per_second
        const double var_fast_sodium_current_h_gate__beta_h = 2000.0 / (1.0 + 320.0 * exp(-7.5 + 0.10000000000000001 * mParameters[13] - 0.10000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double d_dt_chaste_interface_var_fast_sodium_current_h_gate__h = 0.001 * (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h) * (-var_chaste_interface__fast_sodium_current_h_gate__h + 0.01 * mParameters[12] + (1.0 - 0.01 * mParameters[12]) * var_fast_sodium_current_h_gate__alpha_h / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h)); // 1 / millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_m_gate__m = 0.001 * (1.0 - var_chaste_interface__fast_sodium_current_m_gate__m) * _lt_0_row[11] - 8.0 * var_chaste_interface__fast_sodium_current_m_gate__m * _lt_0_row[12]; // 1 / millisecond
        const double var_calcium_background_current__i_b_Ca = 0.00025000000000000001 * var_chaste_interface__membrane__V - 0.0033392200824619565 * log(mParameters[5] / var_chaste_interface__intracellular_calcium_concentration__Ca_i); // nanoA
        const double var_reversal_potentials__E_K = 26.713760659695652 * log(mParameters[6] / var_chaste_interface__intracellular_potassium_concentration__K_i); // millivolt
        const double var_potassium_background_current__i_b_K = 0.00059999999999999995 * var_chaste_interface__membrane__V - 0.00059999999999999995 * var_reversal_potentials__E_K; // nanoA
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-26.713760659695652 * log((mParameters[7] + 0.12 * mParameters[6]) / (var_chaste_interface__intracellular_sodium_concentration__Na_i + 0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i)) + var_chaste_interface__membrane__V) * mParameters[11] * var_chaste_interface__fast_sodium_current_h_gate__h; // nanoA
        const double var_sarcoplasmic_reticulum_calcium_pump__i_up = (0.40000000000000002 * var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.00041999999999999996 + 0.00023999999999999998 * var_chaste_interface__intracellular_calcium_concentration__Ca_up + var_chaste_interface__intracellular_calcium_concentration__Ca_i) - 7.1999999999999997e-6 * var_chaste_interface__intracellular_calcium_concentration__Ca_up / (0.00041999999999999996 + 0.00023999999999999998 * var_chaste_interface__intracellular_calcium_concentration__Ca_up + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * mParameters[3]; // millimolar_per_second
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_up = 0.048999999999999995 * var_sarcoplasmic_reticulum_calcium_pump__i_up - 0.001 * var_calcium_translocation__i_trans; // millimolar / millisecond
        const double var_sodium_background_current__i_b_Na = 0.00059999999999999995 * var_chaste_interface__membrane__V - 0.016028256395817387 * log(mParameters[7] / var_chaste_interface__intracellular_sodium_concentration__Na_i); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa = (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * mParameters[5] * _lt_0_row[4] - pow(mParameters[7], 3.0) * var_chaste_interface__intracellular_calcium_concentration__Ca_i * _lt_0_row[5]) * mParameters[15] / (1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i); // nanoA
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_i = 0.00063182746016849224 * var_sodium_calcium_exchanger__i_NaCa + 0.00020408163265306126 * var_calcium_release__i_rel - 0.001 * var_intracellular_calcium_concentration__Ca_Calmod_orig_deriv - 0.001 * var_intracellular_calcium_concentration__Ca_Trop_orig_deriv - 0.001 * var_sarcoplasmic_reticulum_calcium_pump__i_up - 0.00031591373008424612 * var_L_type_Ca_channel__i_Ca_L_Ca - 0.00031591373008424612 * var_calcium_background_current__i_b_Ca; // millimolar / millisecond
        const double var_sodium_potassium_pump__i_NaK = 0.69999999999999996 * mParameters[6] * var_chaste_interface__intracellular_sodium_concentration__Na_i / ((1.0 + mParameters[6]) * (40.0 + var_chaste_interface__intracellular_sodium_concentration__Na_i)); // nanoA
        const double d_dt_chaste_interface_var_intracellular_sodium_concentration__Na_i = -0.00063182746016849224 * (3.0 * var_sodium_calcium_exchanger__i_NaCa + 3.0 * var_sodium_potassium_pump__i_NaK + var_L_type_Ca_channel__i_Ca_L_Na + var_fast_sodium_current__i_Na + var_sodium_background_current__i_b_Na) * mParameters[4]; // millimolar / millisecond
        const double var_time_dependent_potassium_current__i_K = 0.0071428571428571426 * (-mParameters[6] * _lt_0_row[6] + var_chaste_interface__intracellular_potassium_concentration__K_i) * mParameters[10] * var_chaste_interface__time_dependent_potassium_current_x_gate__x; // nanoA
        const double d_dt_chaste_interface_var_time_dependent_potassium_current_x_gate__x = 0.00050000000000000001 * (1.0 - var_chaste_interface__time_dependent_potassium_current_x_gate__x) * _lt_0_row[14] / (_lt_0_row[13]) - 0.0012999999999999999 * var_chaste_interface__time_dependent_potassium_current_x_gate__x * _lt_0_row[16] / (_lt_0_row[15]); // 1 / millisecond
        const double var_time_independent_potassium_current__i_K1 = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * mParameters[6] * mParameters[14] / ((1.0 + exp(-0.74867781645490938 + 0.074867781645490947 * var_chaste_interface__membrane__V - 0.074867781645490947 * var_reversal_potentials__E_K)) * (10.0 + mParameters[6])); // nanoA
        const double d_dt_chaste_interface_var_transient_outward_current_r_gate__r = _lt_0_row[17] - 0.33300000000000002 * var_chaste_interface__transient_outward_current_r_gate__r; // 1 / millisecond
        const double var_transient_outward_current__i_to = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * mParameters[16] * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s; // nanoA
        const double d_dt_chaste_interface_var_intracellular_potassium_concentration__K_i = -0.00063182746016849224 * (-2.0 * var_sodium_potassium_pump__i_NaK + var_L_type_Ca_channel__i_Ca_L_K + var_potassium_background_current__i_b_K + var_time_dependent_potassium_current__i_K + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) * mParameters[4]; // millimolar / millisecond
        const double d_dt_chaste_interface_var_transient_outward_current_s_gate__s = 3.3000000000000003e-5 * (1.0 - var_chaste_interface__transient_outward_current_s_gate__s) * _lt_0_row[18] - 0.033000000000000002 * var_chaste_interface__transient_outward_current_s_gate__s / (_lt_0_row[19]); // 1 / millisecond
        
        mEvalF[1] = d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_i;
        mPartialF[1] = EvaluatePartialDerivative1(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[2] = d_dt_chaste_interface_var_time_dependent_potassium_current_x_gate__x;
        mPartialF[2] = EvaluatePartialDerivative2(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[3] = d_dt_chaste_interface_var_fast_sodium_current_m_gate__m;
        mPartialF[3] = EvaluatePartialDerivative3(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[4] = d_dt_chaste_interface_var_fast_sodium_current_h_gate__h;
        mPartialF[4] = EvaluatePartialDerivative4(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[5] = d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d;
        mPartialF[5] = EvaluatePartialDerivative5(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[6] = d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f;
        mPartialF[6] = EvaluatePartialDerivative6(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[7] = d_dt_chaste_interface_var_transient_outward_current_s_gate__s;
        mPartialF[7] = EvaluatePartialDerivative7(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[8] = d_dt_chaste_interface_var_transient_outward_current_r_gate__r;
        mPartialF[8] = EvaluatePartialDerivative8(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[9] = d_dt_chaste_interface_var_calcium_release__ActFrac;
        mPartialF[9] = EvaluatePartialDerivative9(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[10] = d_dt_chaste_interface_var_calcium_release__ProdFrac;
        mPartialF[10] = EvaluatePartialDerivative10(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[11] = d_dt_chaste_interface_var_intracellular_sodium_concentration__Na_i;
        mPartialF[11] = EvaluatePartialDerivative11(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[12] = d_dt_chaste_interface_var_intracellular_potassium_concentration__K_i;
        mPartialF[12] = EvaluatePartialDerivative12(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[13] = d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_up;
        mPartialF[13] = EvaluatePartialDerivative13(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[14] = d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_rel;
        mPartialF[14] = EvaluatePartialDerivative14(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[15] = d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_Calmod;
        mPartialF[15] = EvaluatePartialDerivative15(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[16] = d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_Trop;
        mPartialF[16] = EvaluatePartialDerivative16(var_chaste_interface__environment__time_converted, rY, delta);
        
        {
            if (fabs(mPartialF[1]) < delta){
                rY[1] += mDt*d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_i;
            }
            else
            {
                rY[1] += (d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_i/mPartialF[1])*(exp(mPartialF[1]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[2]) < delta){
                rY[2] += mDt*d_dt_chaste_interface_var_time_dependent_potassium_current_x_gate__x;
            }
            else
            {
                rY[2] += (d_dt_chaste_interface_var_time_dependent_potassium_current_x_gate__x/mPartialF[2])*(exp(mPartialF[2]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[3]) < delta){
                rY[3] += mDt*d_dt_chaste_interface_var_fast_sodium_current_m_gate__m;
            }
            else
            {
                rY[3] += (d_dt_chaste_interface_var_fast_sodium_current_m_gate__m/mPartialF[3])*(exp(mPartialF[3]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[4]) < delta){
                rY[4] += mDt*d_dt_chaste_interface_var_fast_sodium_current_h_gate__h;
            }
            else
            {
                rY[4] += (d_dt_chaste_interface_var_fast_sodium_current_h_gate__h/mPartialF[4])*(exp(mPartialF[4]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[5]) < delta){
                rY[5] += mDt*d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d;
            }
            else
            {
                rY[5] += (d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d/mPartialF[5])*(exp(mPartialF[5]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[6]) < delta){
                rY[6] += mDt*d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f;
            }
            else
            {
                rY[6] += (d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f/mPartialF[6])*(exp(mPartialF[6]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[7]) < delta){
                rY[7] += mDt*d_dt_chaste_interface_var_transient_outward_current_s_gate__s;
            }
            else
            {
                rY[7] += (d_dt_chaste_interface_var_transient_outward_current_s_gate__s/mPartialF[7])*(exp(mPartialF[7]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[8]) < delta){
                rY[8] += mDt*d_dt_chaste_interface_var_transient_outward_current_r_gate__r;
            }
            else
            {
                rY[8] += (d_dt_chaste_interface_var_transient_outward_current_r_gate__r/mPartialF[8])*(exp(mPartialF[8]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[9]) < delta){
                rY[9] += mDt*d_dt_chaste_interface_var_calcium_release__ActFrac;
            }
            else
            {
                rY[9] += (d_dt_chaste_interface_var_calcium_release__ActFrac/mPartialF[9])*(exp(mPartialF[9]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[10]) < delta){
                rY[10] += mDt*d_dt_chaste_interface_var_calcium_release__ProdFrac;
            }
            else
            {
                rY[10] += (d_dt_chaste_interface_var_calcium_release__ProdFrac/mPartialF[10])*(exp(mPartialF[10]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[11]) < delta){
                rY[11] += mDt*d_dt_chaste_interface_var_intracellular_sodium_concentration__Na_i;
            }
            else
            {
                rY[11] += (d_dt_chaste_interface_var_intracellular_sodium_concentration__Na_i/mPartialF[11])*(exp(mPartialF[11]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[12]) < delta){
                rY[12] += mDt*d_dt_chaste_interface_var_intracellular_potassium_concentration__K_i;
            }
            else
            {
                rY[12] += (d_dt_chaste_interface_var_intracellular_potassium_concentration__K_i/mPartialF[12])*(exp(mPartialF[12]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[13]) < delta){
                rY[13] += mDt*d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_up;
            }
            else
            {
                rY[13] += (d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_up/mPartialF[13])*(exp(mPartialF[13]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[14]) < delta){
                rY[14] += mDt*d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_rel;
            }
            else
            {
                rY[14] += (d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_rel/mPartialF[14])*(exp(mPartialF[14]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[15]) < delta){
                rY[15] += mDt*d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_Calmod;
            }
            else
            {
                rY[15] += (d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_Calmod/mPartialF[15])*(exp(mPartialF[15]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[16]) < delta){
                rY[16] += mDt*d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_Trop;
            }
            else
            {
                rY[16] += (d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_Trop/mPartialF[16])*(exp(mPartialF[16]*mDt)-1.0);
            }
            
        }        
        
    }
   
    
    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluateYDerivative0(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        double d_dt_chaste_interface_var_membrane__V;
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -93.7400119196694
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
        // Units: millimolar; Initial value: 1.34858164771406e-05
        double var_chaste_interface__time_dependent_potassium_current_x_gate__x = rY[2];
        // Units: dimensionless; Initial value: 0.00938586574433011
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[3];
        // Units: dimensionless; Initial value: 0.00143405969732302
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[4];
        // Units: dimensionless; Initial value: 0.995414125415674
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 1.91821833548952e-08
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[6];
        // Units: dimensionless; Initial value: 0.999999956287155
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[7];
        // Units: dimensionless; Initial value: 0.997644968939185
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[8];
        // Units: dimensionless; Initial value: 1.60424507876553e-08
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[11];
        // Units: millimolar; Initial value: 7.50547214142684
        double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[12];
        // Units: millimolar; Initial value: 136.604284305878
        

        // Lookup table indexing
        const bool _oob_0 = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_L_type_Ca_channel__i_Ca_L_Ca = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 1.3356880329551402e-6) ? (-374338.90823576227 * (-50.000001335688033 + var_chaste_interface__membrane__V) * (-1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[5] * exp(9.9999999997780743e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999997780743e-8)) - 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[5] * exp(-9.9999999997780743e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) + 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[5] * exp(-9.9999999997780743e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) : (0.14973556329098189 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[5] * _lt_0_row[0]) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[1]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[6] * exp(9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[6] * exp(-9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[6] * exp(-9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (7.4867781645490941e-5 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[6] * _lt_0_row[2]) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[7] * exp(9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[7] * exp(-9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[7] * exp(-9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (0.00037433890822745472 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[7] * _lt_0_row[2]) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_calcium_background_current__i_b_Ca = 0.00025000000000000001 * var_chaste_interface__membrane__V - 0.0033392200824619565 * log(mParameters[5] / var_chaste_interface__intracellular_calcium_concentration__Ca_i); // nanoA
        const double var_reversal_potentials__E_K = 26.713760659695652 * log(mParameters[6] / var_chaste_interface__intracellular_potassium_concentration__K_i); // millivolt
        const double var_potassium_background_current__i_b_K = 0.00059999999999999995 * var_chaste_interface__membrane__V - 0.00059999999999999995 * var_reversal_potentials__E_K; // nanoA
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-26.713760659695652 * log((mParameters[7] + 0.12 * mParameters[6]) / (var_chaste_interface__intracellular_sodium_concentration__Na_i + 0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i)) + var_chaste_interface__membrane__V) * mParameters[11] * var_chaste_interface__fast_sodium_current_h_gate__h; // nanoA
        const double var_sodium_background_current__i_b_Na = 0.00059999999999999995 * var_chaste_interface__membrane__V - 0.016028256395817387 * log(mParameters[7] / var_chaste_interface__intracellular_sodium_concentration__Na_i); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa = (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * mParameters[5] * _lt_0_row[4] - pow(mParameters[7], 3.0) * var_chaste_interface__intracellular_calcium_concentration__Ca_i * _lt_0_row[5]) * mParameters[15] / (1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i); // nanoA
        const double var_sodium_potassium_pump__i_NaK = 0.69999999999999996 * mParameters[6] * var_chaste_interface__intracellular_sodium_concentration__Na_i / ((1.0 + mParameters[6]) * (40.0 + var_chaste_interface__intracellular_sodium_concentration__Na_i)); // nanoA
        const double var_time_dependent_potassium_current__i_K = 0.0071428571428571426 * (-mParameters[6] * _lt_0_row[6] + var_chaste_interface__intracellular_potassium_concentration__K_i) * mParameters[10] * var_chaste_interface__time_dependent_potassium_current_x_gate__x; // nanoA
        const double var_time_independent_potassium_current__i_K1 = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * mParameters[6] * mParameters[14] / ((1.0 + exp(-0.74867781645490938 + 0.074867781645490947 * var_chaste_interface__membrane__V - 0.074867781645490947 * var_reversal_potentials__E_K)) * (10.0 + mParameters[6])); // nanoA
        const double var_transient_outward_current__i_to = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * mParameters[16] * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s; // nanoA
        d_dt_chaste_interface_var_membrane__V = -0.001 * (1000.0 * GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted) * mParameters[9] / HeartConfig::Instance()->GetCapacitance() + var_L_type_Ca_channel__i_Ca_L_Ca + var_L_type_Ca_channel__i_Ca_L_K + var_L_type_Ca_channel__i_Ca_L_Na + var_calcium_background_current__i_b_Ca + var_fast_sodium_current__i_Na + var_potassium_background_current__i_b_K + var_sodium_background_current__i_b_Na + var_sodium_calcium_exchanger__i_NaCa + var_sodium_potassium_pump__i_NaK + var_time_dependent_potassium_current__i_K + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) / mParameters[9]; // millivolt / millisecond

        return d_dt_chaste_interface_var_membrane__V;
    }

    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluatePartialDerivative0(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -93.7400119196694
            double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
            // Units: millimolar; Initial value: 1.34858164771406e-05
            double var_chaste_interface__time_dependent_potassium_current_x_gate__x = rY[2];
            // Units: dimensionless; Initial value: 0.00938586574433011
            double var_chaste_interface__fast_sodium_current_m_gate__m = rY[3];
            // Units: dimensionless; Initial value: 0.00143405969732302
            double var_chaste_interface__fast_sodium_current_h_gate__h = rY[4];
            // Units: dimensionless; Initial value: 0.995414125415674
            double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[5];
            // Units: dimensionless; Initial value: 1.91821833548952e-08
            double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[6];
            // Units: dimensionless; Initial value: 0.999999956287155
            double var_chaste_interface__transient_outward_current_s_gate__s = rY[7];
            // Units: dimensionless; Initial value: 0.997644968939185
            double var_chaste_interface__transient_outward_current_r_gate__r = rY[8];
            // Units: dimensionless; Initial value: 1.60424507876553e-08
            double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[11];
            // Units: millimolar; Initial value: 7.50547214142684
            double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[12];
            // Units: millimolar; Initial value: 136.604284305878
            


            const double var_x0 = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * mParameters[11];
            const double var_x1 = var_x0 * var_chaste_interface__fast_sodium_current_h_gate__h;
            const double var_x2 = 0.018716945411372737 * var_chaste_interface__membrane__V;
            const double var_x3 = pow(mParameters[7], 3.0) * exp(-var_x2);
            const double var_x4 = var_x3 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
            const double var_x5 = mParameters[5] * exp(var_x2);
            const double var_x6 = var_x5 * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0);
            const double var_x7 = mParameters[15] / (1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i);
            const double var_x8 = var_x7 * (0.018716945411372737 * var_x4 + 0.018716945411372737 * var_x6);
            const double var_x9 = mParameters[16] * var_chaste_interface__transient_outward_current_r_gate__r;
            const double var_x10 = var_x9 * var_chaste_interface__transient_outward_current_s_gate__s;
            const double var_x11 = 0.074867781645490947 * var_chaste_interface__membrane__V;
            const double var_x12 = 1 / var_chaste_interface__intracellular_potassium_concentration__K_i;
            const double var_x13 = var_x12 * mParameters[6];
            const double var_x14 = log(var_x13);
            const double var_x15 = exp(-0.74867781645490938 + var_x11 - 2.0 * var_x14);
            const double var_x16 = 1.0 + var_x15;
            const double var_x17 = mParameters[14] / (10.0 + mParameters[6]);
            const double var_x18 = var_x17 / var_x16;
            const double var_x19 = var_x18 * mParameters[6];
            const double var_x20 = -0.037433890822745473 * var_chaste_interface__membrane__V;
            const double var_x21 = mParameters[6] * exp(var_x20);
            const double var_x22 = mParameters[10] * var_chaste_interface__time_dependent_potassium_current_x_gate__x;
            const double var_x23 = var_x21 * var_x22;
            const double var_x24 = -26.713760659695652 * var_x14;
            const double var_x25 = var_x15 * var_x17 * (var_x24 + var_chaste_interface__membrane__V) / pow(var_x16, 2);
            const double var_x26 = var_x25 * mParameters[6];
            const double var_x27 = exp(9.9999999999858739e-8);
            const double var_x28 = 1 / (1.0 - var_x27);
            const double var_x29 = exp(1.8716945411372736);
            const double var_x30 = var_x29 * var_chaste_interface__intracellular_potassium_concentration__K_i;
            const double var_x31 = var_x28 * (var_x30 - var_x27 * mParameters[6]);
            const double var_x32 = mParameters[8] * var_chaste_interface__L_type_Ca_channel_f_gate__f;
            const double var_x33 = var_x32 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
            const double var_x34 = 3.743389082274547e-5 * var_x33;
            const double var_x35 = exp(-9.9999999999858739e-8);
            const double var_x36 = 1 / (1.0 - var_x35);
            const double var_x37 = var_x36 * (var_x30 - var_x35 * mParameters[6]);
            const double var_x38 = -50.0 + var_chaste_interface__membrane__V;
            const double var_x39 = fabs(var_x38);
            const double var_x40 = var_x39 < 2.6713760659657915e-6;
            const double var_x41 = exp(1.8716945411372736 + var_x20);
            const double var_x42 = 1.0 - var_x41;
            const double var_x43 = 1 / var_x42;
            const double var_x44 = var_x33 * var_x43;
            const double var_x45 = var_x41 * mParameters[6];
            const double var_x46 = var_x30 - var_x45;
            const double var_x47 = 7.4867781645490941e-5 * var_x46;
            const double var_x48 = var_x38 * var_x44;
            const double var_x49 = var_x33 * var_x38;
            const double var_x50 = var_x41 * var_x49 / pow(var_x42, 2);
            const double var_x51 = ((var_x40) ? (var_x31 * var_x34 + var_x34 * var_x37) : (var_x44 * var_x47 + 2.8025923642584555e-6 * var_x45 * var_x48 - 2.8025923642584555e-6 * var_x46 * var_x50));
            const double var_x52 = var_x29 * var_chaste_interface__intracellular_sodium_concentration__Na_i;
            const double var_x53 = var_x28 * (var_x52 - var_x27 * mParameters[7]);
            const double var_x54 = 0.00018716945411372736 * var_x33;
            const double var_x55 = var_x36 * (var_x52 - var_x35 * mParameters[7]);
            const double var_x56 = var_x41 * mParameters[7];
            const double var_x57 = var_x52 - var_x56;
            const double var_x58 = 0.00037433890822745472 * var_x57;
            const double var_x59 = ((var_x40) ? (var_x53 * var_x54 + var_x54 * var_x55) : (var_x44 * var_x58 + 1.4012961821292276e-5 * var_x48 * var_x56 - 1.4012961821292276e-5 * var_x50 * var_x57));
            const double var_x60 = exp(9.9999999997780743e-8);
            const double var_x61 = 1 / (1.0 - var_x60);
            const double var_x62 = exp(3.7433890822745473);
            const double var_x63 = var_x62 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
            const double var_x64 = var_x61 * (var_x63 - var_x60 * mParameters[5]);
            const double var_x65 = 0.074867781645490947 * var_x33;
            const double var_x66 = exp(-9.9999999997780743e-8);
            const double var_x67 = 1 / (1.0 - var_x66);
            const double var_x68 = var_x67 * (var_x63 - var_x66 * mParameters[5]);
            const double var_x69 = var_x39 < 1.3356880329551402e-6;
            const double var_x70 = exp(3.7433890822745473 - var_x11);
            const double var_x71 = 1.0 - var_x70;
            const double var_x72 = 1 / var_x71;
            const double var_x73 = var_x33 * var_x72;
            const double var_x74 = var_x70 * mParameters[5];
            const double var_x75 = var_x63 - var_x74;
            const double var_x76 = 0.14973556329098189 * var_x75;
            const double var_x77 = var_x38 * var_x73;
            const double var_x78 = ((var_x69) ? (var_x64 * var_x65 + var_x65 * var_x68) : (var_x73 * var_x76 + 0.011210369457033822 * var_x74 * var_x77 - 0.011210369457033822 * var_x49 * var_x70 * var_x75 / pow(var_x71, 2)));
            const double var_x79 = 1 / mParameters[9];
            const double var_x80 = 0.001 * var_x79;
            
            partialF = -var_x80 * (0.0014499999999999999 + var_x1 + var_x19 + var_x51 + var_x59 + var_x78 + var_x10 + var_x8 + 0.00026738493444818193 * var_x23 - 0.074867781645490947 * var_x26);
        }
        else
        {
            const double y_save = rY[0];
            rY[0] += delta;
            const double temp = EvaluateYDerivative0(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[0])/delta;
            rY[0] = y_save;
        }
        return partialF;
    }
    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluateYDerivative1(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -93.7400119196694
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
        // Units: millimolar; Initial value: 1.34858164771406e-05
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 1.91821833548952e-08
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[6];
        // Units: dimensionless; Initial value: 0.999999956287155
        double var_chaste_interface__calcium_release__ActFrac = rY[9];
        // Units: dimensionless; Initial value: 0.00267040300939318
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[11];
        // Units: millimolar; Initial value: 7.50547214142684
        double var_chaste_interface__intracellular_calcium_concentration__Ca_up = rY[13];
        // Units: millimolar; Initial value: 0.59333810408885
        double var_chaste_interface__intracellular_calcium_concentration__Ca_rel = rY[14];
        // Units: millimolar; Initial value: 0.591323137897127
        double var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod = rY[15];
        // Units: millimolar; Initial value: 0.000524570960945961
        double var_chaste_interface__intracellular_calcium_concentration__Ca_Trop = rY[16];
        // Units: millimolar; Initial value: 0.00033477224086766
        

        // Lookup table indexing
        const bool _oob_0 = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_calcium_release__i_rel = (pow(var_chaste_interface__calcium_release__ActFrac, 2) * mParameters[1] / pow((0.25 + var_chaste_interface__calcium_release__ActFrac), 2) + mParameters[0]) * var_chaste_interface__intracellular_calcium_concentration__Ca_rel; // millimolar_per_second
        const double var_intracellular_calcium_concentration__Ca_Calmod_orig_deriv = -50.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod + 100000.0 * (0.02 - var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod) * var_chaste_interface__intracellular_calcium_concentration__Ca_i; // millimolar / second
        const double var_intracellular_calcium_concentration__Ca_Trop_orig_deriv = -200.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_Trop + 100000.0 * (0.050000000000000003 - var_chaste_interface__intracellular_calcium_concentration__Ca_Trop) * var_chaste_interface__intracellular_calcium_concentration__Ca_i; // millimolar / second
        const double var_L_type_Ca_channel__i_Ca_L_Ca = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 1.3356880329551402e-6) ? (-374338.90823576227 * (-50.000001335688033 + var_chaste_interface__membrane__V) * (-1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[5] * exp(9.9999999997780743e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999997780743e-8)) - 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[5] * exp(-9.9999999997780743e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) + 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[5] * exp(-9.9999999997780743e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) : (0.14973556329098189 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[5] * _lt_0_row[0]) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[1]))); // nanoA
        const double var_calcium_background_current__i_b_Ca = 0.00025000000000000001 * var_chaste_interface__membrane__V - 0.0033392200824619565 * log(mParameters[5] / var_chaste_interface__intracellular_calcium_concentration__Ca_i); // nanoA
        const double var_sarcoplasmic_reticulum_calcium_pump__i_up = (0.40000000000000002 * var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.00041999999999999996 + 0.00023999999999999998 * var_chaste_interface__intracellular_calcium_concentration__Ca_up + var_chaste_interface__intracellular_calcium_concentration__Ca_i) - 7.1999999999999997e-6 * var_chaste_interface__intracellular_calcium_concentration__Ca_up / (0.00041999999999999996 + 0.00023999999999999998 * var_chaste_interface__intracellular_calcium_concentration__Ca_up + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * mParameters[3]; // millimolar_per_second
        const double var_sodium_calcium_exchanger__i_NaCa = (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * mParameters[5] * _lt_0_row[4] - pow(mParameters[7], 3.0) * var_chaste_interface__intracellular_calcium_concentration__Ca_i * _lt_0_row[5]) * mParameters[15] / (1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i); // nanoA
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_i = 0.00063182746016849224 * var_sodium_calcium_exchanger__i_NaCa + 0.00020408163265306126 * var_calcium_release__i_rel - 0.001 * var_intracellular_calcium_concentration__Ca_Calmod_orig_deriv - 0.001 * var_intracellular_calcium_concentration__Ca_Trop_orig_deriv - 0.001 * var_sarcoplasmic_reticulum_calcium_pump__i_up - 0.00031591373008424612 * var_L_type_Ca_channel__i_Ca_L_Ca - 0.00031591373008424612 * var_calcium_background_current__i_b_Ca; // millimolar / millisecond

        return d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_i;
    }

    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluatePartialDerivative1(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -93.7400119196694
            double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
            // Units: millimolar; Initial value: 1.34858164771406e-05
            double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[5];
            // Units: dimensionless; Initial value: 1.91821833548952e-08
            double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[6];
            // Units: dimensionless; Initial value: 0.999999956287155
            double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[11];
            // Units: millimolar; Initial value: 7.50547214142684
            double var_chaste_interface__intracellular_calcium_concentration__Ca_up = rY[13];
            // Units: millimolar; Initial value: 0.59333810408885
            double var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod = rY[15];
            // Units: millimolar; Initial value: 0.000524570960945961
            double var_chaste_interface__intracellular_calcium_concentration__Ca_Trop = rY[16];
            // Units: millimolar; Initial value: 0.00033477224086766
            


            const double var_x2 = 0.018716945411372737 * var_chaste_interface__membrane__V;
            const double var_x3 = pow(mParameters[7], 3.0) * exp(-var_x2);
            const double var_x4 = var_x3 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
            const double var_x5 = mParameters[5] * exp(var_x2);
            const double var_x6 = var_x5 * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0);
            const double var_x7 = mParameters[15] / (1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i);
            const double var_x11 = 0.074867781645490947 * var_chaste_interface__membrane__V;
            const double var_x32 = mParameters[8] * var_chaste_interface__L_type_Ca_channel_f_gate__f;
            const double var_x33 = var_x32 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
            const double var_x38 = -50.0 + var_chaste_interface__membrane__V;
            const double var_x39 = fabs(var_x38);
            const double var_x60 = exp(9.9999999997780743e-8);
            const double var_x61 = 1 / (1.0 - var_x60);
            const double var_x62 = exp(3.7433890822745473);
            const double var_x66 = exp(-9.9999999997780743e-8);
            const double var_x67 = 1 / (1.0 - var_x66);
            const double var_x69 = var_x39 < 1.3356880329551402e-6;
            const double var_x70 = exp(3.7433890822745473 - var_x11);
            const double var_x71 = 1.0 - var_x70;
            const double var_x72 = 1 / var_x71;
            const double var_x73 = var_x33 * var_x72;
            const double var_x77 = var_x38 * var_x73;
            const double var_x81 = 1 / var_chaste_interface__intracellular_calcium_concentration__Ca_i;
            const double var_x82 = (var_x6 - var_x4) * mParameters[15] / pow((0.0068999999999999999 + var_chaste_interface__intracellular_calcium_concentration__Ca_i), 2);
            const double var_x83 = var_x3 * var_x7;
            const double var_x84 = 18716945.911788113 - 374338.90823576227 * var_chaste_interface__membrane__V;
            const double var_x85 = 1.9999999999556149e-7 * var_x32;
            const double var_x86 = var_x62 * var_x85 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
            const double var_x87 = var_x67 * var_x86;
            const double var_x88 = ((var_x69) ? (var_x87 + var_x84 * (-var_x87 - var_x61 * var_x86)) : (0.14973556329098189 * var_x62 * var_x77));
            const double var_x138 = 100.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod;
            const double var_x139 = 100.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_Trop;
            const double var_x140 = 0.00041999999999999996 + 0.00023999999999999998 * var_chaste_interface__intracellular_calcium_concentration__Ca_up + var_chaste_interface__intracellular_calcium_concentration__Ca_i;
            const double var_x141 = 1 / var_x140;
            const double var_x142 = pow(var_x140, (-2));
            const double var_x143 = var_x142 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
            const double var_x144 = var_x142 * var_chaste_interface__intracellular_calcium_concentration__Ca_up;
            
            partialF = -7.0 + var_x138 + var_x139 - 4.3596094751625959e-6 * var_x82 - 0.00031591373008424612 * var_x88 - 0.00063182746016849224 * var_x83 - 1.0549054718227806e-6 * var_x81 + (0.00040000000000000002 * var_x143 - 0.00040000000000000002 * var_x141 - 7.1999999999999991e-9 * var_x144) * mParameters[3];
        }
        else
        {
            const double y_save = rY[1];
            rY[1] += delta;
            const double temp = EvaluateYDerivative1(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[1])/delta;
            rY[1] = y_save;
        }
        return partialF;
    }
    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluateYDerivative2(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -93.7400119196694
        double var_chaste_interface__time_dependent_potassium_current_x_gate__x = rY[2];
        // Units: dimensionless; Initial value: 0.00938586574433011
        

        // Lookup table indexing
        const bool _oob_0 = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double d_dt_chaste_interface_var_time_dependent_potassium_current_x_gate__x = 0.00050000000000000001 * (1.0 - var_chaste_interface__time_dependent_potassium_current_x_gate__x) * _lt_0_row[14] / (_lt_0_row[13]) - 0.0012999999999999999 * var_chaste_interface__time_dependent_potassium_current_x_gate__x * _lt_0_row[16] / (_lt_0_row[15]); // 1 / millisecond

        return d_dt_chaste_interface_var_time_dependent_potassium_current_x_gate__x;
    }

    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluatePartialDerivative2(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -93.7400119196694
            

        // Lookup table indexing
        const bool _oob_0 = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

            const double var_x153 = exp(-0.80000000000000004 - 0.040000000000000001 * var_chaste_interface__membrane__V);
            const double var_x154 = 1.0 + var_x153;
            const double var_x155 = _lt_0_row[16];
            const double var_x156 = var_x155 / var_x154;
            const double var_x158 = exp(2.8500000000000001 + 0.057000000000000002 * var_chaste_interface__membrane__V);
            const double var_x159 = 1.0 + var_x158;
            const double var_x160 = _lt_0_row[14];
            const double var_x161 = var_x160 / var_x159;
            
            partialF = -0.00050000000000000001 * var_x161 - 0.0012999999999999999 * var_x156;
        }
        else
        {
            const double y_save = rY[2];
            rY[2] += delta;
            const double temp = EvaluateYDerivative2(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[2])/delta;
            rY[2] = y_save;
        }
        return partialF;
    }
    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluateYDerivative3(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -93.7400119196694
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[3];
        // Units: dimensionless; Initial value: 0.00143405969732302
        

        // Lookup table indexing
        const bool _oob_0 = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double d_dt_chaste_interface_var_fast_sodium_current_m_gate__m = 0.001 * (1.0 - var_chaste_interface__fast_sodium_current_m_gate__m) * _lt_0_row[11] - 8.0 * var_chaste_interface__fast_sodium_current_m_gate__m * _lt_0_row[12]; // 1 / millisecond

        return d_dt_chaste_interface_var_fast_sodium_current_m_gate__m;
    }

    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluatePartialDerivative3(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -93.7400119196694
            

        // Lookup table indexing
        const bool _oob_0 = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

            const double var_x162 = 1 / (1.0 - exp(1.0000000000287557e-7));
            const double var_x163 = 1 / (1.0 - exp(-1.0000000000287557e-7));
            const double var_x164 = _lt_0_row[12];
            const double var_x166 = 41.0 + var_chaste_interface__membrane__V;
            const double var_x167 = fabs(var_x166) < 1.0000000000287557e-6;
            const double var_x169 = -0.10000000000000001 * var_chaste_interface__membrane__V;
            const double var_x170 = exp(-4.1000000000000005 + var_x169);
            const double var_x171 = 1.0 - var_x170;
            const double var_x172 = 0.20000000000000001 / var_x171;
            const double var_x173 = -8.0 * var_x164;
            
            partialF = ((var_x167) ? (var_x173 - 2.0000000000575113e-7 * var_x163 + 499.9999999856222 * (40.999999000000003 + var_chaste_interface__membrane__V) * (-0.00020000000000575113 * var_x162 - 0.00020000000000575113 * var_x163)) : (var_x173 - var_x166 * var_x172));
        }
        else
        {
            const double y_save = rY[3];
            rY[3] += delta;
            const double temp = EvaluateYDerivative3(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[3])/delta;
            rY[3] = y_save;
        }
        return partialF;
    }
    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluateYDerivative4(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -93.7400119196694
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[4];
        // Units: dimensionless; Initial value: 0.995414125415674
        


        // Mathematics
        const double var_fast_sodium_current_h_gate__alpha_h = 20.0 * exp(-9.375 + 0.125 * mParameters[13] - 0.125 * var_chaste_interface__membrane__V); // per_second
        const double var_fast_sodium_current_h_gate__beta_h = 2000.0 / (1.0 + 320.0 * exp(-7.5 + 0.10000000000000001 * mParameters[13] - 0.10000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double d_dt_chaste_interface_var_fast_sodium_current_h_gate__h = 0.001 * (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h) * (-var_chaste_interface__fast_sodium_current_h_gate__h + 0.01 * mParameters[12] + (1.0 - 0.01 * mParameters[12]) * var_fast_sodium_current_h_gate__alpha_h / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h)); // 1 / millisecond

        return d_dt_chaste_interface_var_fast_sodium_current_h_gate__h;
    }

    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluatePartialDerivative4(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -93.7400119196694
            


            const double var_x169 = -0.10000000000000001 * var_chaste_interface__membrane__V;
            const double var_x174 = exp(-7.5 + var_x169 + 0.10000000000000001 * mParameters[13]);
            const double var_x175 = 1 / (1.0 + 320.0 * var_x174);
            const double var_x176 = 2.0 * var_x175;
            const double var_x177 = -0.125 * var_chaste_interface__membrane__V;
            const double var_x178 = exp(-9.375 + var_x177 + 0.125 * mParameters[13]);
            const double var_x179 = 0.02 * var_x178;
            
            partialF = -var_x176 - var_x179;
        }
        else
        {
            const double y_save = rY[4];
            rY[4] += delta;
            const double temp = EvaluateYDerivative4(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[4])/delta;
            rY[4] = y_save;
        }
        return partialF;
    }
    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluateYDerivative5(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -93.7400119196694
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 1.91821833548952e-08
        

        // Lookup table indexing
        const bool _oob_0 = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d = 0.0030000000000000001 * (1.0 - var_chaste_interface__L_type_Ca_channel_d_gate__d) * _lt_0_row[7] - 0.0030000000000000001 * _lt_0_row[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d; // 1 / millisecond

        return d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d;
    }

    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluatePartialDerivative5(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -93.7400119196694
            


            const double var_x186 = exp(1.0000000000287557e-7);
            const double var_x187 = 1 / (1.0 - var_x186);
            const double var_x188 = exp(-1.0000000000287557e-7);
            const double var_x189 = 1 / (1.0 - var_x188);
            const double var_x190 = 1 / (-1.0 + exp(-9.9999999997324457e-8));
            const double var_x191 = 1 / (-1.0 + exp(1.0000000000010001e-7));
            const double var_x193 = 19.0 + var_chaste_interface__membrane__V;
            const double var_x194 = fabs(var_x193);
            const double var_x195 = var_x194 < 4.0000000001150227e-7;
            const double var_x197 = 0.25 * var_chaste_interface__membrane__V;
            const double var_x198 = -var_x197;
            const double var_x199 = exp(-4.75 + var_x198);
            const double var_x200 = 1.0 - var_x199;
            const double var_x201 = 0.089999999999999997 / var_x200;
            const double var_x203 = var_x194 < 9.999999999871223e-7;
            const double var_x204 = exp(1.8999999999999999 + 0.10000000000000001 * var_chaste_interface__membrane__V);
            const double var_x205 = -1.0 + var_x204;
            const double var_x206 = 0.035999999999999997 / var_x205;
            const double var_x207 = 3.5999999999036803e-8 * var_x190 - 1500.0000000193165 * (19.000001000000001 + var_chaste_interface__membrane__V) * (1.1999999999678934e-5 * var_x190 + 1.2000000000012001e-5 * var_x191);
            const double var_x208 = -var_x193 * var_x201;
            
            partialF = ((var_x195) ? (var_x207 - 3.6000000001035205e-8 * var_x189 + 3749.9999998921662 * (18.999999599999999 + var_chaste_interface__membrane__V) * (-1.2000000000345068e-5 * var_x187 - 1.2000000000345068e-5 * var_x189)) : ((var_x203) ? (var_x207 + var_x208) : (var_x208 - var_x193 * var_x206)));
        }
        else
        {
            const double y_save = rY[5];
            rY[5] += delta;
            const double temp = EvaluateYDerivative5(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[5])/delta;
            rY[5] = y_save;
        }
        return partialF;
    }
    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluateYDerivative6(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -93.7400119196694
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[6];
        // Units: dimensionless; Initial value: 0.999999956287155
        

        // Lookup table indexing
        const bool _oob_0 = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f = 0.00050000000000000001 * (1.0 - var_chaste_interface__L_type_Ca_channel_f_gate__f) * _lt_0_row[9] - 0.025000000000000001 * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[10]); // 1 / millisecond

        return d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f;
    }

    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluatePartialDerivative6(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -93.7400119196694
            


            const double var_x186 = exp(1.0000000000287557e-7);
            const double var_x188 = exp(-1.0000000000287557e-7);
            const double var_x197 = 0.25 * var_chaste_interface__membrane__V;
            const double var_x198 = -var_x197;
            const double var_x209 = 1 / (-1.0 + var_x186);
            const double var_x210 = 1 / (-1.0 + var_x188);
            const double var_x211 = exp(-8.5 + var_x198);
            const double var_x212 = 1.0 + var_x211;
            const double var_x214 = 34.0 + var_chaste_interface__membrane__V;
            const double var_x215 = fabs(var_x214) < 4.0000000001150227e-7;
            const double var_x217 = exp(8.5 + var_x197);
            const double var_x218 = -1.0 + var_x217;
            const double var_x219 = 0.0031250000000000002 / var_x218;
            const double var_x220 = -0.025000000000000001 / var_x212;
            
            partialF = ((var_x215) ? (var_x220 + 1.2500000000359445e-9 * var_x210 - 624.9999999820277 * (34.000000399999998 + var_chaste_interface__membrane__V) * (2.5000000000718892e-6 * var_x209 + 2.5000000000718892e-6 * var_x210)) : (var_x220 - var_x214 * var_x219));
        }
        else
        {
            const double y_save = rY[6];
            rY[6] += delta;
            const double temp = EvaluateYDerivative6(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[6])/delta;
            rY[6] = y_save;
        }
        return partialF;
    }
    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluateYDerivative7(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -93.7400119196694
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[7];
        // Units: dimensionless; Initial value: 0.997644968939185
        

        // Lookup table indexing
        const bool _oob_0 = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double d_dt_chaste_interface_var_transient_outward_current_s_gate__s = 3.3000000000000003e-5 * (1.0 - var_chaste_interface__transient_outward_current_s_gate__s) * _lt_0_row[18] - 0.033000000000000002 * var_chaste_interface__transient_outward_current_s_gate__s / (_lt_0_row[19]); // 1 / millisecond

        return d_dt_chaste_interface_var_transient_outward_current_s_gate__s;
    }

    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluatePartialDerivative7(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -93.7400119196694
            

        // Lookup table indexing
        const bool _oob_0 = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

            const double var_x177 = -0.125 * var_chaste_interface__membrane__V;
            const double var_x221 = _lt_0_row[18];
            const double var_x222 = exp(-1.25 + var_x177);
            const double var_x223 = 1.0 + var_x222;
            
            partialF = -0.033000000000000002 / var_x223 - 3.3000000000000003e-5 * var_x221;
        }
        else
        {
            const double y_save = rY[7];
            rY[7] += delta;
            const double temp = EvaluateYDerivative7(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[7])/delta;
            rY[7] = y_save;
        }
        return partialF;
    }
    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluateYDerivative8(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -93.7400119196694
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[8];
        // Units: dimensionless; Initial value: 1.60424507876553e-08
        

        // Lookup table indexing
        const bool _oob_0 = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double d_dt_chaste_interface_var_transient_outward_current_r_gate__r = _lt_0_row[17] - 0.33300000000000002 * var_chaste_interface__transient_outward_current_r_gate__r; // 1 / millisecond

        return d_dt_chaste_interface_var_transient_outward_current_r_gate__r;
    }

    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluatePartialDerivative8(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            


            
            partialF = -0.33300000000000002;
        }
        else
        {
            const double y_save = rY[8];
            rY[8] += delta;
            const double temp = EvaluateYDerivative8(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[8])/delta;
            rY[8] = y_save;
        }
        return partialF;
    }
    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluateYDerivative9(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
        // Units: millimolar; Initial value: 1.34858164771406e-05
        double var_chaste_interface__calcium_release__ActFrac = rY[9];
        // Units: dimensionless; Initial value: 0.00267040300939318
        double var_chaste_interface__calcium_release__ProdFrac = rY[10];
        // Units: dimensionless; Initial value: 0.522949441962453
        


        // Mathematics
        const double var_calcium_release__RegBindSite = pow(var_chaste_interface__intracellular_calcium_concentration__Ca_i, 2) / pow((mParameters[2] + var_chaste_interface__intracellular_calcium_concentration__Ca_i), 2); // dimensionless
        const double var_calcium_release__InactRate = 60.0 + 500.0 * var_calcium_release__RegBindSite; // per_second
        const double d_dt_chaste_interface_var_calcium_release__ActFrac = 0.5 * (1.0 - var_chaste_interface__calcium_release__ActFrac - var_chaste_interface__calcium_release__ProdFrac) * var_calcium_release__RegBindSite - 0.001 * var_chaste_interface__calcium_release__ActFrac * var_calcium_release__InactRate; // 1 / millisecond

        return d_dt_chaste_interface_var_calcium_release__ActFrac;
    }

    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluatePartialDerivative9(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
            // Units: millimolar; Initial value: 1.34858164771406e-05
            


            const double var_x225 = mParameters[2] + var_chaste_interface__intracellular_calcium_concentration__Ca_i;
            const double var_x226 = pow(var_chaste_interface__intracellular_calcium_concentration__Ca_i, 2);
            const double var_x227 = var_x226;
            const double var_x229 = pow(var_x225, (-2));
            
            partialF = -0.059999999999999998 - var_x227 * var_x229;
        }
        else
        {
            const double y_save = rY[9];
            rY[9] += delta;
            const double temp = EvaluateYDerivative9(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[9])/delta;
            rY[9] = y_save;
        }
        return partialF;
    }
    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluateYDerivative10(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
        // Units: millimolar; Initial value: 1.34858164771406e-05
        double var_chaste_interface__calcium_release__ActFrac = rY[9];
        // Units: dimensionless; Initial value: 0.00267040300939318
        double var_chaste_interface__calcium_release__ProdFrac = rY[10];
        // Units: dimensionless; Initial value: 0.522949441962453
        


        // Mathematics
        const double var_calcium_release__RegBindSite = pow(var_chaste_interface__intracellular_calcium_concentration__Ca_i, 2) / pow((mParameters[2] + var_chaste_interface__intracellular_calcium_concentration__Ca_i), 2); // dimensionless
        const double var_calcium_release__InactRate = 60.0 + 500.0 * var_calcium_release__RegBindSite; // per_second
        const double d_dt_chaste_interface_var_calcium_release__ProdFrac = -0.001 * var_chaste_interface__calcium_release__ProdFrac + 0.001 * var_chaste_interface__calcium_release__ActFrac * var_calcium_release__InactRate; // 1 / millisecond

        return d_dt_chaste_interface_var_calcium_release__ProdFrac;
    }

    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluatePartialDerivative10(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            


            
            partialF = -0.001;
        }
        else
        {
            const double y_save = rY[10];
            rY[10] += delta;
            const double temp = EvaluateYDerivative10(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[10])/delta;
            rY[10] = y_save;
        }
        return partialF;
    }
    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluateYDerivative11(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -93.7400119196694
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
        // Units: millimolar; Initial value: 1.34858164771406e-05
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[3];
        // Units: dimensionless; Initial value: 0.00143405969732302
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[4];
        // Units: dimensionless; Initial value: 0.995414125415674
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 1.91821833548952e-08
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[6];
        // Units: dimensionless; Initial value: 0.999999956287155
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[11];
        // Units: millimolar; Initial value: 7.50547214142684
        double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[12];
        // Units: millimolar; Initial value: 136.604284305878
        

        // Lookup table indexing
        const bool _oob_0 = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_L_type_Ca_channel__i_Ca_L_Na = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[7] * exp(9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[7] * exp(-9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[7] * exp(-9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (0.00037433890822745472 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[7] * _lt_0_row[2]) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-26.713760659695652 * log((mParameters[7] + 0.12 * mParameters[6]) / (var_chaste_interface__intracellular_sodium_concentration__Na_i + 0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i)) + var_chaste_interface__membrane__V) * mParameters[11] * var_chaste_interface__fast_sodium_current_h_gate__h; // nanoA
        const double var_sodium_background_current__i_b_Na = 0.00059999999999999995 * var_chaste_interface__membrane__V - 0.016028256395817387 * log(mParameters[7] / var_chaste_interface__intracellular_sodium_concentration__Na_i); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa = (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3.0) * mParameters[5] * _lt_0_row[4] - pow(mParameters[7], 3.0) * var_chaste_interface__intracellular_calcium_concentration__Ca_i * _lt_0_row[5]) * mParameters[15] / (1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i); // nanoA
        const double var_sodium_potassium_pump__i_NaK = 0.69999999999999996 * mParameters[6] * var_chaste_interface__intracellular_sodium_concentration__Na_i / ((1.0 + mParameters[6]) * (40.0 + var_chaste_interface__intracellular_sodium_concentration__Na_i)); // nanoA
        const double d_dt_chaste_interface_var_intracellular_sodium_concentration__Na_i = -0.00063182746016849224 * (3.0 * var_sodium_calcium_exchanger__i_NaCa + 3.0 * var_sodium_potassium_pump__i_NaK + var_L_type_Ca_channel__i_Ca_L_Na + var_fast_sodium_current__i_Na + var_sodium_background_current__i_b_Na) * mParameters[4]; // millimolar / millisecond

        return d_dt_chaste_interface_var_intracellular_sodium_concentration__Na_i;
    }

    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluatePartialDerivative11(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -93.7400119196694
            double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
            // Units: millimolar; Initial value: 1.34858164771406e-05
            double var_chaste_interface__fast_sodium_current_m_gate__m = rY[3];
            // Units: dimensionless; Initial value: 0.00143405969732302
            double var_chaste_interface__fast_sodium_current_h_gate__h = rY[4];
            // Units: dimensionless; Initial value: 0.995414125415674
            double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[5];
            // Units: dimensionless; Initial value: 1.91821833548952e-08
            double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[6];
            // Units: dimensionless; Initial value: 0.999999956287155
            double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[11];
            // Units: millimolar; Initial value: 7.50547214142684
            double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[12];
            // Units: millimolar; Initial value: 136.604284305878
            


            const double var_x0 = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * mParameters[11];
            const double var_x1 = var_x0 * var_chaste_interface__fast_sodium_current_h_gate__h;
            const double var_x2 = 0.018716945411372737 * var_chaste_interface__membrane__V;
            const double var_x5 = mParameters[5] * exp(var_x2);
            const double var_x7 = mParameters[15] / (1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i);
            const double var_x20 = -0.037433890822745473 * var_chaste_interface__membrane__V;
            const double var_x27 = exp(9.9999999999858739e-8);
            const double var_x28 = 1 / (1.0 - var_x27);
            const double var_x29 = exp(1.8716945411372736);
            const double var_x32 = mParameters[8] * var_chaste_interface__L_type_Ca_channel_f_gate__f;
            const double var_x33 = var_x32 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
            const double var_x35 = exp(-9.9999999999858739e-8);
            const double var_x36 = 1 / (1.0 - var_x35);
            const double var_x38 = -50.0 + var_chaste_interface__membrane__V;
            const double var_x39 = fabs(var_x38);
            const double var_x40 = var_x39 < 2.6713760659657915e-6;
            const double var_x41 = exp(1.8716945411372736 + var_x20);
            const double var_x42 = 1.0 - var_x41;
            const double var_x43 = 1 / var_x42;
            const double var_x44 = var_x33 * var_x43;
            const double var_x48 = var_x38 * var_x44;
            const double var_x90 = 1 / (var_chaste_interface__intracellular_sodium_concentration__Na_i + 0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i);
            const double var_x94 = 9358473.2056995872 - 187169.45411399176 * var_chaste_interface__membrane__V;
            const double var_x95 = 9.9999999999858744e-10 * var_x32;
            const double var_x121 = 1 / var_chaste_interface__intracellular_sodium_concentration__Na_i;
            const double var_x122 = mParameters[6] / (1.0 + mParameters[6]);
            const double var_x123 = var_x122 / (40.0 + var_chaste_interface__intracellular_sodium_concentration__Na_i);
            const double var_x124 = var_x1 * var_x90;
            const double var_x125 = var_x122 * var_chaste_interface__intracellular_sodium_concentration__Na_i / pow((1 + 0.025000000000000001 * var_chaste_interface__intracellular_sodium_concentration__Na_i), 2);
            const double var_x126 = var_x5 * var_x7 * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 2.0);
            const double var_x127 = var_x29 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
            const double var_x128 = var_x127 * var_x95;
            const double var_x129 = var_x128 * var_x36;
            const double var_x130 = var_x29 * var_x48;
            const double var_x131 = ((var_x40) ? (var_x129 + var_x94 * (-var_x129 - var_x128 * var_x28)) : (0.00037433890822745472 * var_x130));
            
            partialF = (8.2927354147114598e-7 * var_x125 - 0.00063182746016849224 * var_x131 - 1.0127092529498693e-5 * var_x121 - 0.0013268376663538336 * var_x123 - 0.016878487549164489 * var_x124 - 0.0056864471415164304 * var_x126) * mParameters[4];
        }
        else
        {
            const double y_save = rY[11];
            rY[11] += delta;
            const double temp = EvaluateYDerivative11(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[11])/delta;
            rY[11] = y_save;
        }
        return partialF;
    }
    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluateYDerivative12(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -93.7400119196694
        double var_chaste_interface__time_dependent_potassium_current_x_gate__x = rY[2];
        // Units: dimensionless; Initial value: 0.00938586574433011
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 1.91821833548952e-08
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[6];
        // Units: dimensionless; Initial value: 0.999999956287155
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[7];
        // Units: dimensionless; Initial value: 0.997644968939185
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[8];
        // Units: dimensionless; Initial value: 1.60424507876553e-08
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[11];
        // Units: millimolar; Initial value: 7.50547214142684
        double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[12];
        // Units: millimolar; Initial value: 136.604284305878
        

        // Lookup table indexing
        const bool _oob_0 = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_L_type_Ca_channel__i_Ca_L_K = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[6] * exp(9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[6] * exp(-9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[6] * exp(-9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (7.4867781645490941e-5 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[6] * _lt_0_row[2]) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_reversal_potentials__E_K = 26.713760659695652 * log(mParameters[6] / var_chaste_interface__intracellular_potassium_concentration__K_i); // millivolt
        const double var_potassium_background_current__i_b_K = 0.00059999999999999995 * var_chaste_interface__membrane__V - 0.00059999999999999995 * var_reversal_potentials__E_K; // nanoA
        const double var_sodium_potassium_pump__i_NaK = 0.69999999999999996 * mParameters[6] * var_chaste_interface__intracellular_sodium_concentration__Na_i / ((1.0 + mParameters[6]) * (40.0 + var_chaste_interface__intracellular_sodium_concentration__Na_i)); // nanoA
        const double var_time_dependent_potassium_current__i_K = 0.0071428571428571426 * (-mParameters[6] * _lt_0_row[6] + var_chaste_interface__intracellular_potassium_concentration__K_i) * mParameters[10] * var_chaste_interface__time_dependent_potassium_current_x_gate__x; // nanoA
        const double var_time_independent_potassium_current__i_K1 = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * mParameters[6] * mParameters[14] / ((1.0 + exp(-0.74867781645490938 + 0.074867781645490947 * var_chaste_interface__membrane__V - 0.074867781645490947 * var_reversal_potentials__E_K)) * (10.0 + mParameters[6])); // nanoA
        const double var_transient_outward_current__i_to = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * mParameters[16] * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s; // nanoA
        const double d_dt_chaste_interface_var_intracellular_potassium_concentration__K_i = -0.00063182746016849224 * (-2.0 * var_sodium_potassium_pump__i_NaK + var_L_type_Ca_channel__i_Ca_L_K + var_potassium_background_current__i_b_K + var_time_dependent_potassium_current__i_K + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) * mParameters[4]; // millimolar / millisecond

        return d_dt_chaste_interface_var_intracellular_potassium_concentration__K_i;
    }

    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluatePartialDerivative12(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -93.7400119196694
            double var_chaste_interface__time_dependent_potassium_current_x_gate__x = rY[2];
            // Units: dimensionless; Initial value: 0.00938586574433011
            double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[5];
            // Units: dimensionless; Initial value: 1.91821833548952e-08
            double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[6];
            // Units: dimensionless; Initial value: 0.999999956287155
            double var_chaste_interface__transient_outward_current_s_gate__s = rY[7];
            // Units: dimensionless; Initial value: 0.997644968939185
            double var_chaste_interface__transient_outward_current_r_gate__r = rY[8];
            // Units: dimensionless; Initial value: 1.60424507876553e-08
            double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[12];
            // Units: millimolar; Initial value: 136.604284305878
            


            const double var_x9 = mParameters[16] * var_chaste_interface__transient_outward_current_r_gate__r;
            const double var_x10 = var_x9 * var_chaste_interface__transient_outward_current_s_gate__s;
            const double var_x11 = 0.074867781645490947 * var_chaste_interface__membrane__V;
            const double var_x12 = 1 / var_chaste_interface__intracellular_potassium_concentration__K_i;
            const double var_x13 = var_x12 * mParameters[6];
            const double var_x14 = log(var_x13);
            const double var_x15 = exp(-0.74867781645490938 + var_x11 - 2.0 * var_x14);
            const double var_x16 = 1.0 + var_x15;
            const double var_x17 = mParameters[14] / (10.0 + mParameters[6]);
            const double var_x18 = var_x17 / var_x16;
            const double var_x20 = -0.037433890822745473 * var_chaste_interface__membrane__V;
            const double var_x22 = mParameters[10] * var_chaste_interface__time_dependent_potassium_current_x_gate__x;
            const double var_x24 = -26.713760659695652 * var_x14;
            const double var_x25 = var_x15 * var_x17 * (var_x24 + var_chaste_interface__membrane__V) / pow(var_x16, 2);
            const double var_x27 = exp(9.9999999999858739e-8);
            const double var_x28 = 1 / (1.0 - var_x27);
            const double var_x29 = exp(1.8716945411372736);
            const double var_x32 = mParameters[8] * var_chaste_interface__L_type_Ca_channel_f_gate__f;
            const double var_x33 = var_x32 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
            const double var_x35 = exp(-9.9999999999858739e-8);
            const double var_x36 = 1 / (1.0 - var_x35);
            const double var_x38 = -50.0 + var_chaste_interface__membrane__V;
            const double var_x39 = fabs(var_x38);
            const double var_x40 = var_x39 < 2.6713760659657915e-6;
            const double var_x41 = exp(1.8716945411372736 + var_x20);
            const double var_x42 = 1.0 - var_x41;
            const double var_x43 = 1 / var_x42;
            const double var_x44 = var_x33 * var_x43;
            const double var_x48 = var_x38 * var_x44;
            const double var_x94 = 9358473.2056995872 - 187169.45411399176 * var_chaste_interface__membrane__V;
            const double var_x100 = 1.999999999997175e-10 * var_x32;
            const double var_x127 = var_x29 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
            const double var_x130 = var_x29 * var_x48;
            const double var_x132 = var_x10 * var_x12;
            const double var_x133 = var_x13 * var_x18;
            const double var_x134 = var_x13 * var_x25;
            const double var_x135 = var_x100 * var_x127;
            const double var_x136 = var_x135 * var_x36;
            const double var_x137 = ((var_x40) ? (var_x136 + var_x94 * (-var_x136 - var_x135 * var_x28)) : (7.4867781645490941e-5 * var_x130));
            
            partialF = (0.0012636549203369845 * var_x134 - 4.5130532869178019e-6 * var_x22 - 0.00063182746016849224 * var_x137 - 1.0127092529498693e-5 * var_x12 - 0.016878487549164489 * var_x132 - 0.016878487549164489 * var_x133) * mParameters[4];
        }
        else
        {
            const double y_save = rY[12];
            rY[12] += delta;
            const double temp = EvaluateYDerivative12(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[12])/delta;
            rY[12] = y_save;
        }
        return partialF;
    }
    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluateYDerivative13(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
        // Units: millimolar; Initial value: 1.34858164771406e-05
        double var_chaste_interface__intracellular_calcium_concentration__Ca_up = rY[13];
        // Units: millimolar; Initial value: 0.59333810408885
        double var_chaste_interface__intracellular_calcium_concentration__Ca_rel = rY[14];
        // Units: millimolar; Initial value: 0.591323137897127
        


        // Mathematics
        const double var_calcium_translocation__i_trans = 50.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_up - 50.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_rel; // millimolar_per_second
        const double var_sarcoplasmic_reticulum_calcium_pump__i_up = (0.40000000000000002 * var_chaste_interface__intracellular_calcium_concentration__Ca_i / (0.00041999999999999996 + 0.00023999999999999998 * var_chaste_interface__intracellular_calcium_concentration__Ca_up + var_chaste_interface__intracellular_calcium_concentration__Ca_i) - 7.1999999999999997e-6 * var_chaste_interface__intracellular_calcium_concentration__Ca_up / (0.00041999999999999996 + 0.00023999999999999998 * var_chaste_interface__intracellular_calcium_concentration__Ca_up + var_chaste_interface__intracellular_calcium_concentration__Ca_i)) * mParameters[3]; // millimolar_per_second
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_up = 0.048999999999999995 * var_sarcoplasmic_reticulum_calcium_pump__i_up - 0.001 * var_calcium_translocation__i_trans; // millimolar / millisecond

        return d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_up;
    }

    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluatePartialDerivative13(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
            // Units: millimolar; Initial value: 1.34858164771406e-05
            double var_chaste_interface__intracellular_calcium_concentration__Ca_up = rY[13];
            // Units: millimolar; Initial value: 0.59333810408885
            


            const double var_x140 = 0.00041999999999999996 + 0.00023999999999999998 * var_chaste_interface__intracellular_calcium_concentration__Ca_up + var_chaste_interface__intracellular_calcium_concentration__Ca_i;
            const double var_x141 = 1 / var_x140;
            const double var_x142 = pow(var_x140, (-2));
            const double var_x143 = var_x142 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
            const double var_x144 = var_x142 * var_chaste_interface__intracellular_calcium_concentration__Ca_up;
            
            partialF = -0.050000000000000003 + (8.4671999999999982e-11 * var_x144 - 4.7039999999999993e-6 * var_x143 - 3.5279999999999993e-7 * var_x141) * mParameters[3];
        }
        else
        {
            const double y_save = rY[13];
            rY[13] += delta;
            const double temp = EvaluateYDerivative13(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[13])/delta;
            rY[13] = y_save;
        }
        return partialF;
    }
    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluateYDerivative14(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__calcium_release__ActFrac = rY[9];
        // Units: dimensionless; Initial value: 0.00267040300939318
        double var_chaste_interface__intracellular_calcium_concentration__Ca_up = rY[13];
        // Units: millimolar; Initial value: 0.59333810408885
        double var_chaste_interface__intracellular_calcium_concentration__Ca_rel = rY[14];
        // Units: millimolar; Initial value: 0.591323137897127
        


        // Mathematics
        const double var_calcium_release__i_rel = (pow(var_chaste_interface__calcium_release__ActFrac, 2) * mParameters[1] / pow((0.25 + var_chaste_interface__calcium_release__ActFrac), 2) + mParameters[0]) * var_chaste_interface__intracellular_calcium_concentration__Ca_rel; // millimolar_per_second
        const double var_calcium_translocation__i_trans = 50.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_up - 50.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_rel; // millimolar_per_second
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_rel = 9.9999999999999991e-5 * var_calcium_translocation__i_trans - 0.001 * var_calcium_release__i_rel; // millimolar / millisecond

        return d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_rel;
    }

    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluatePartialDerivative14(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__calcium_release__ActFrac = rY[9];
            // Units: dimensionless; Initial value: 0.00267040300939318
            


            const double var_x146 = 0.25 + var_chaste_interface__calcium_release__ActFrac;
            const double var_x147 = pow(var_x146, (-2));
            const double var_x149 = pow(var_chaste_interface__calcium_release__ActFrac, 2);
            const double var_x151 = var_x147 * var_x149 * mParameters[1];
            
            partialF = -0.0050000000000000001 - 0.001 * var_x151 - 0.001 * mParameters[0];
        }
        else
        {
            const double y_save = rY[14];
            rY[14] += delta;
            const double temp = EvaluateYDerivative14(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[14])/delta;
            rY[14] = y_save;
        }
        return partialF;
    }
    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluateYDerivative15(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
        // Units: millimolar; Initial value: 1.34858164771406e-05
        double var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod = rY[15];
        // Units: millimolar; Initial value: 0.000524570960945961
        


        // Mathematics
        const double var_intracellular_calcium_concentration__Ca_Calmod_orig_deriv = -50.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod + 100000.0 * (0.02 - var_chaste_interface__intracellular_calcium_concentration__Ca_Calmod) * var_chaste_interface__intracellular_calcium_concentration__Ca_i; // millimolar / second
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_Calmod = 0.001 * var_intracellular_calcium_concentration__Ca_Calmod_orig_deriv; // millimolar / millisecond

        return d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_Calmod;
    }

    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluatePartialDerivative15(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
            // Units: millimolar; Initial value: 1.34858164771406e-05
            


            const double var_x152 = 100.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
            const double var_x236 = -var_x152;
            
            partialF = -0.050000000000000003 + var_x236;
        }
        else
        {
            const double y_save = rY[15];
            rY[15] += delta;
            const double temp = EvaluateYDerivative15(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[15])/delta;
            rY[15] = y_save;
        }
        return partialF;
    }
    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluateYDerivative16(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
        // Units: millimolar; Initial value: 1.34858164771406e-05
        double var_chaste_interface__intracellular_calcium_concentration__Ca_Trop = rY[16];
        // Units: millimolar; Initial value: 0.00033477224086766
        


        // Mathematics
        const double var_intracellular_calcium_concentration__Ca_Trop_orig_deriv = -200.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_Trop + 100000.0 * (0.050000000000000003 - var_chaste_interface__intracellular_calcium_concentration__Ca_Trop) * var_chaste_interface__intracellular_calcium_concentration__Ca_i; // millimolar / second
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_Trop = 0.001 * var_intracellular_calcium_concentration__Ca_Trop_orig_deriv; // millimolar / millisecond

        return d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_Trop;
    }

    double Cellnoble_model_1991FromCellMLGRL1Opt::EvaluatePartialDerivative16(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
            // Units: millimolar; Initial value: 1.34858164771406e-05
            


            const double var_x152 = 100.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
            const double var_x236 = -var_x152;
            
            partialF = -0.20000000000000001 + var_x236;
        }
        else
        {
            const double y_save = rY[16];
            rY[16] += delta;
            const double temp = EvaluateYDerivative16(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[16])/delta;
            rY[16] = y_save;
        }
        return partialF;
    }

    std::vector<double> Cellnoble_model_1991FromCellMLGRL1Opt::ComputeDerivedQuantities(double var_chaste_interface__environment__time_converted, const std::vector<double> & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -93.7400119196694
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
        // Units: millimolar; Initial value: 1.34858164771406e-05
        double var_chaste_interface__time_dependent_potassium_current_x_gate__x = rY[2];
        // Units: dimensionless; Initial value: 0.00938586574433011
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[3];
        // Units: dimensionless; Initial value: 0.00143405969732302
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[4];
        // Units: dimensionless; Initial value: 0.995414125415674
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 1.91821833548952e-08
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[6];
        // Units: dimensionless; Initial value: 0.999999956287155
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[7];
        // Units: dimensionless; Initial value: 0.997644968939185
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[8];
        // Units: dimensionless; Initial value: 1.60424507876553e-08
        double var_chaste_interface__calcium_release__ActFrac = rY[9];
        // Units: dimensionless; Initial value: 0.00267040300939318
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[11];
        // Units: millimolar; Initial value: 7.50547214142684
        double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[12];
        // Units: millimolar; Initial value: 136.604284305878
        double var_chaste_interface__intracellular_calcium_concentration__Ca_rel = rY[14];
        // Units: millimolar; Initial value: 0.591323137897127
        
        // Lookup table indexing
        const bool _oob_0 = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellnoble_model_1991FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_calcium_release__i_rel = (pow(var_chaste_interface__calcium_release__ActFrac, 2) * mParameters[1] / pow((0.25 + var_chaste_interface__calcium_release__ActFrac), 2) + mParameters[0]) * var_chaste_interface__intracellular_calcium_concentration__Ca_rel; // millimolar_per_second
        const double var_membrane__F = 96485.341499999995; // coulomb_per_mole
        const double var_membrane__R = 8314.4719999999998; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_L_type_Ca_channel__i_Ca_L_Ca = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 1.3356880329551402e-6) ? (-374338.90823576227 * (-50.000001335688033 + var_chaste_interface__membrane__V) * (-1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[5] * exp(9.9999999997780743e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999997780743e-8)) - 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[5] * exp(-9.9999999997780743e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) + 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[5] * exp(-9.9999999997780743e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) : (0.14973556329098189 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[5] * _lt_0_row[0]) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[1]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[6] * exp(9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[6] * exp(-9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[6] * exp(-9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (7.4867781645490941e-5 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[6] * _lt_0_row[2]) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na = ((fabs(-50.0 + var_chaste_interface__membrane__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane__V) * (-9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[7] * exp(9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[7] * exp(-9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[7] * exp(-9.9999999999858739e-8)) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (0.00037433890822745472 * (-50.0 + var_chaste_interface__membrane__V) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[7] * _lt_0_row[2]) * mParameters[8] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_Ca_L_Ca + var_L_type_Ca_channel__i_Ca_L_K + var_L_type_Ca_channel__i_Ca_L_Na; // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L / mParameters[9]; // uA_per_cm2
        const double var_L_type_Ca_channel_f_gate__alpha_f = _lt_0_row[9]; // per_second
        const double var_L_type_Ca_channel_f_gate__beta_f = 50.0 / (_lt_0_row[10]); // per_second
        const double var_L_type_Ca_channel_f_gate__tau_f = 1 / (var_L_type_Ca_channel_f_gate__alpha_f + var_L_type_Ca_channel_f_gate__beta_f); // second
        const double var_fast_sodium_current_h_gate__alpha_h = 20.0 * exp(-9.375 + 0.125 * mParameters[13] - 0.125 * var_chaste_interface__membrane__V); // per_second
        const double var_fast_sodium_current_h_gate__beta_h = 2000.0 / (1.0 + 320.0 * exp(-7.5 + 0.10000000000000001 * mParameters[13] - 0.10000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_fast_sodium_current_h_gate__tau_h = 1 / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h); // second
        const double var_membrane__i_Stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_reversal_potentials__E_K = var_membrane__R * var_membrane__T * log(mParameters[6] / var_chaste_interface__intracellular_potassium_concentration__K_i) / var_membrane__F; // millivolt
        const double var_reversal_potentials__E_mh = var_membrane__R * var_membrane__T * log((mParameters[7] + 0.12 * mParameters[6]) / (var_chaste_interface__intracellular_sodium_concentration__Na_i + 0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i)) / var_membrane__F; // millivolt
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_reversal_potentials__E_mh + var_chaste_interface__membrane__V) * mParameters[11] * var_chaste_interface__fast_sodium_current_h_gate__h; // nanoA
        const double var_fast_sodium_current__i_Na_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na / mParameters[9]; // uA_per_cm2
        const double var_sodium_calcium_exchanger__d_NaCa = 0; // dimensionless
        const double var_sodium_calcium_exchanger__gamma = 0.5; // dimensionless
        const double var_sodium_calcium_exchanger__n_NaCa = 3.0; // dimensionless
        const double var_sodium_calcium_exchanger__i_NaCa = (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, var_sodium_calcium_exchanger__n_NaCa) * mParameters[5] * exp((-2.0 + var_sodium_calcium_exchanger__n_NaCa) * var_membrane__F * var_chaste_interface__membrane__V * var_sodium_calcium_exchanger__gamma / (var_membrane__R * var_membrane__T)) - pow(mParameters[7], var_sodium_calcium_exchanger__n_NaCa) * var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp((-1.0 + var_sodium_calcium_exchanger__gamma) * (-2.0 + var_sodium_calcium_exchanger__n_NaCa) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * mParameters[15] / ((1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i) * (1.0 + (pow(mParameters[7], var_sodium_calcium_exchanger__n_NaCa) * var_chaste_interface__intracellular_calcium_concentration__Ca_i + pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, var_sodium_calcium_exchanger__n_NaCa) * mParameters[5]) * var_sodium_calcium_exchanger__d_NaCa)); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_sodium_calcium_exchanger__i_NaCa / mParameters[9]; // uA_per_cm2
        const double var_time_dependent_potassium_current__I_K = 0.0071428571428571426 * (-mParameters[6] * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + var_chaste_interface__intracellular_potassium_concentration__K_i) * mParameters[10]; // nanoA
        const double var_time_dependent_potassium_current__i_K = var_time_dependent_potassium_current__I_K * var_chaste_interface__time_dependent_potassium_current_x_gate__x; // nanoA
        const double var_time_dependent_potassium_current__i_K_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_time_dependent_potassium_current__i_K / mParameters[9]; // uA_per_cm2
        const double var_time_independent_potassium_current__K_mk1 = 10.0; // millimolar
        const double var_time_independent_potassium_current__i_K1 = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * mParameters[6] * mParameters[14] / ((1.0 + exp(2.0 * (-10.0 - var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * var_membrane__F / (var_membrane__R * var_membrane__T))) * (mParameters[6] + var_time_independent_potassium_current__K_mk1)); // nanoA
        const double var_time_independent_potassium_current__i_K1_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_time_independent_potassium_current__i_K1 / mParameters[9]; // uA_per_cm2
        const double var_transient_outward_current__g_tos = 0; // dimensionless
        const double var_transient_outward_current__i_to = (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * ((1.0 - var_transient_outward_current__g_tos) * var_chaste_interface__transient_outward_current_s_gate__s + var_transient_outward_current__g_tos) * mParameters[16] * var_chaste_interface__transient_outward_current_r_gate__r; // nanoA
        const double var_transient_outward_current__i_to_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_transient_outward_current__i_to / mParameters[9]; // uA_per_cm2

        std::vector<double> dqs(11);
        dqs[0] = var_calcium_release__i_rel;
        dqs[1] = var_L_type_Ca_channel__i_Ca_L_converted;
        dqs[2] = var_L_type_Ca_channel_f_gate__tau_f;
        dqs[3] = var_time_dependent_potassium_current__i_K_converted;
        dqs[4] = var_fast_sodium_current__i_Na_converted;
        dqs[5] = var_fast_sodium_current_h_gate__tau_h;
        dqs[6] = var_time_independent_potassium_current__i_K1_converted;
        dqs[7] = var_sodium_calcium_exchanger__i_NaCa_converted;
        dqs[8] = var_membrane__i_Stim_converted;
        dqs[9] = var_transient_outward_current__i_to_converted;
        dqs[10] = var_chaste_interface__environment__time_converted;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellnoble_model_1991FromCellMLGRL1Opt>::Initialise(void)
{
    this->mSystemName = "noble_model_1991";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-93.7400119196694);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.34858164771406e-05);

    // rY[2]:
    this->mVariableNames.push_back("time_dependent_potassium_current_x_gate__x");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00938586574433011);

    // rY[3]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00143405969732302);

    // rY[4]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.995414125415674);

    // rY[5]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.91821833548952e-08);

    // rY[6]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999999956287155);

    // rY[7]:
    this->mVariableNames.push_back("transient_outward_current_s_gate__s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.997644968939185);

    // rY[8]:
    this->mVariableNames.push_back("transient_outward_current_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.60424507876553e-08);

    // rY[9]:
    this->mVariableNames.push_back("calcium_release__ActFrac");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00267040300939318);

    // rY[10]:
    this->mVariableNames.push_back("calcium_release__ProdFrac");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.522949441962453);

    // rY[11]:
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.50547214142684);

    // rY[12]:
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(136.604284305878);

    // rY[13]:
    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_up");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.59333810408885);

    // rY[14]:
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.591323137897127);

    // rY[15]:
    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_Calmod");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.000524570960945961);

    // rY[16]:
    this->mVariableNames.push_back("intracellular_calcium_concentration__Ca_Trop");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.00033477224086766);

    // mParameters[0]:
    this->mParameterNames.push_back("SR_leak_current_max");
    this->mParameterUnits.push_back("per_second");

    // mParameters[1]:
    this->mParameterNames.push_back("SR_release_current_max");
    this->mParameterUnits.push_back("per_second");

    // mParameters[2]:
    this->mParameterNames.push_back("SR_release_kmcacyt");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[3]:
    this->mParameterNames.push_back("SR_uptake_current_max");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[4]:
    this->mParameterNames.push_back("concentration_clamp_onoff");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[5]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[6]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[7]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("nanoA_per_millimolar");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_capacitance");
    this->mParameterUnits.push_back("microF");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("nanoA");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("microS");

    // mParameters[12]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_reduced_inactivation");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[13]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_shift_inactivation");
    this->mParameterUnits.push_back("millivolt");

    // mParameters[14]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("microS");

    // mParameters[15]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("nanoA");

    // mParameters[16]:
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
    this->mParameterUnits.push_back("microS");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("SR_release_current");
    this->mDerivedQuantityUnits.push_back("millimolar_per_second");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current_f_gate_tau");
    this->mDerivedQuantityUnits.push_back("second");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_h_gate_tau");
    this->mDerivedQuantityUnits.push_back("second");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [10]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellnoble_model_1991FromCellMLGRL1Opt)

