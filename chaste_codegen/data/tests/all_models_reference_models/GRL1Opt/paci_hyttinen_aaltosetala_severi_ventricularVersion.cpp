//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: paci_hyttinen_aaltosetala_severi_ventricularVersion
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: GeneralizedRushLarsenFirstOrderOpt)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "paci_hyttinen_aaltosetala_severi_ventricularVersion.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt_LookupTables : public AbstractLookupTableCollection
{
public:
    static Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt_LookupTables);
        }
        return mpInstance.get();
    }

    void FreeMemory()
    {

        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }

    // Row lookup methods
    // using linear-interpolation



    ~Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt_LookupTables()
    {

    }

protected:
    Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt_LookupTables(const Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt_LookupTables&);
    Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt_LookupTables& operator= (const Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt_LookupTables&);
    Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(0);
        mNumberOfTables.resize(0);
        mTableMins.resize(0);
        mTableSteps.resize(0);
        mTableStepInverses.resize(0);
        mTableMaxs.resize(0);
        mNeedsRegeneration.resize(0);

        Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt_LookupTables::RegenerateTables();
    }

    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);

        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }

private:
    /** The single instance of the class */
    static std::shared_ptr<Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt_LookupTables> mpInstance;

};

std::shared_ptr<Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt_LookupTables> Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt_LookupTables::mpInstance;

    boost::shared_ptr<RegularStimulus> Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__stim_mode__i_stim_Amplitude_converted = 5.5718264182641404 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        const double var_chaste_interface__stim_mode__i_stim_Period_converted = 1000.0; // millisecond
        const double var_chaste_interface__stim_mode__i_stim_PulseDuration_converted = 5.0; // millisecond
        const double var_chaste_interface__stim_mode__i_stim_Start_converted = 0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__stim_mode__i_stim_Amplitude_converted),
                var_chaste_interface__stim_mode__i_stim_PulseDuration_converted,
                var_chaste_interface__stim_mode__i_stim_Period_converted,
                var_chaste_interface__stim_mode__i_stim_Start_converted
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractGeneralizedRushLarsenCardiacCell(
                18,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        
        this->mParameters[0] = 150.0; // (var_model_parameters__Ki) [millimolar]
        this->mParameters[1] = 1.8; // (var_model_parameters__Cao) [millimolar]
        this->mParameters[2] = 5.4000000000000004; // (var_model_parameters__Ko) [millimolar]
        this->mParameters[3] = 151.0; // (var_model_parameters__Nao) [millimolar]
        this->mParameters[4] = 8.6357020000000001e-5; // (var_i_CaL__g_CaL) [metre_cube_per_F_per_s]
        this->mParameters[5] = 3671.2302; // (var_i_Na__g_Na) [S_per_F]
        this->mParameters[6] = 30.103120000000001; // (var_i_f__g_f) [S_per_F]
        this->mParameters[7] = 28.1492; // (var_i_K1__g_K1) [S_per_F]
        this->mParameters[8] = 29.866700000000002; // (var_i_Kr__g_Kr) [S_per_F]
        this->mParameters[9] = 2.0409999999999999; // (var_i_Ks__g_Ks) [S_per_F]
        this->mParameters[10] = 29.9038; // (var_i_to__g_to) [S_per_F]
        this->mParameters[11] = 9.8710900000000003e-11; // (var_model_parameters__Cm) [farad]
        this->mParameters[12] = 310.0; // (var_model_parameters__T) [kelvin]
    }

    Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::~Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt()
    {
    }

    AbstractLookupTableCollection* Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::GetLookupTableCollection()
    {
        return Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt_LookupTables::Instance();
    }
    
    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057623841
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 1.80773974140477e-05
        double var_chaste_interface__i_Na_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.102953468725004
        double var_chaste_interface__i_Na_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.786926637881461
        double var_chaste_interface__i_Na_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.253943221774722
        double var_chaste_interface__i_CaL_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 8.96088425225182e-05
        double var_chaste_interface__i_CaL_f1_gate__f1 = rY[6];
        // Units: dimensionless; Initial value: 0.970411811263976
        double var_chaste_interface__i_CaL_f2_gate__f2 = rY[7];
        // Units: dimensionless; Initial value: 0.999965815466749
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[8];
        // Units: dimensionless; Initial value: 0.998925296531804
        double var_chaste_interface__i_Kr_Xr1_gate__Xr1 = rY[9];
        // Units: dimensionless; Initial value: 0.00778547011240132
        double var_chaste_interface__i_Kr_Xr2_gate__Xr2 = rY[10];
        // Units: dimensionless; Initial value: 0.432162576531617
        double var_chaste_interface__i_Ks_Xs_gate__Xs = rY[11];
        // Units: dimensionless; Initial value: 0.0322944866983666
        double var_chaste_interface__i_f_Xf_gate__Xf = rY[12];
        // Units: dimensionless; Initial value: 0.100615100568753
        double var_chaste_interface__i_to_q_gate__q = rY[13];
        // Units: dimensionless; Initial value: 0.839295925773219
        double var_chaste_interface__i_to_r_gate__r = rY[14];
        // Units: dimensionless; Initial value: 0.00573289893326379
        double var_chaste_interface__sodium_dynamics__Nai = rY[15];
        // Units: millimolar; Initial value: 10.9248496211574
        
        const double var_Membrane__Vm = 0.001 * var_chaste_interface__Membrane__Vm_converted; // volt
        const double var_i_PCa__i_PCa_converted = 0.41249999999999998 * HeartConfig::Instance()->GetCapacitance() * var_chaste_interface__calcium_dynamics__Cai / (0.00050000000000000001 + var_chaste_interface__calcium_dynamics__Cai); // uA_per_cm2
        const double var_i_f__i_f_converted = (0.017000000000000001 + var_Membrane__Vm) * HeartConfig::Instance()->GetCapacitance() * mParameters[6] * var_chaste_interface__i_f_Xf_gate__Xf; // uA_per_cm2
        const double var_electric_potentials__E_K = 8.6173421482889202e-5 * mParameters[12] * log(mParameters[2] / mParameters[0]); // volt
        const double var_i_CaL__i_CaL_converted = HeartConfig::Instance()->GetCapacitance() * ((fabs(var_chaste_interface__Membrane__Vm_converted) < 4.30867107414446e-9 * fabs(mParameters[12])) ? (116045061.55051096 * (4.30867107414446e-9 * mParameters[12] + var_chaste_interface__Membrane__Vm_converted) * (0.019297068299999998 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(9.9999999999999995e-8)) + 0.019297068299999998 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(-9.9999999999999995e-8))) / mParameters[12] - 0.019297068299999998 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(-9.9999999999999995e-8))) : (4478658.9572358271 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(23.209012310102192 * var_chaste_interface__Membrane__Vm_converted / mParameters[12])) * var_chaste_interface__Membrane__Vm_converted * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / ((-1.0 + exp(23.209012310102192 * var_chaste_interface__Membrane__Vm_converted / mParameters[12])) * mParameters[12]))); // uA_per_cm2
        const double var_i_K1__i_K1_converted = 1.6825960981856667 * sqrt(mParameters[2]) * (-var_electric_potentials__E_K + var_Membrane__Vm) * HeartConfig::Instance()->GetCapacitance() * mParameters[7] / ((1.0 + exp(-118.83999999999999 + 594.19999999999993 * var_Membrane__Vm - 594.19999999999993 * var_electric_potentials__E_K)) * (3.9100000000000001 / (1.0 + exp(-118.83999999999999 + 594.19999999999993 * var_Membrane__Vm - 594.19999999999993 * var_electric_potentials__E_K)) + (-1.5089999999999999 * exp(0.02 + 0.20000000000000001 * var_Membrane__Vm - 0.20000000000000001 * var_electric_potentials__E_K) + exp(-5.8860000000000001 + 588.60000000000002 * var_Membrane__Vm - 588.60000000000002 * var_electric_potentials__E_K)) / (1.0 + exp(454.69999999999999 * var_Membrane__Vm - 454.69999999999999 * var_electric_potentials__E_K)))); // uA_per_cm2
        const double var_i_Kr__i_Kr_converted = 0.43033148291193518 * sqrt(mParameters[2]) * (-var_electric_potentials__E_K + var_Membrane__Vm) * HeartConfig::Instance()->GetCapacitance() * mParameters[8] * var_chaste_interface__i_Kr_Xr1_gate__Xr1 * var_chaste_interface__i_Kr_Xr2_gate__Xr2; // uA_per_cm2
        const double var_i_b_Ca__i_b_Ca = 0.69264000000000003 * var_Membrane__Vm - 2.9843579327954189e-5 * mParameters[12] * log(mParameters[1] / var_chaste_interface__calcium_dynamics__Cai); // A_per_F
        const double var_i_to__i_to_converted = (-var_electric_potentials__E_K + var_Membrane__Vm) * HeartConfig::Instance()->GetCapacitance() * mParameters[10] * var_chaste_interface__i_to_q_gate__q * var_chaste_interface__i_to_r_gate__r; // uA_per_cm2
        const double var_electric_potentials__E_Na = 8.6173421482889202e-5 * mParameters[12] * log(mParameters[3] / var_chaste_interface__sodium_dynamics__Nai); // volt
        const double var_i_Ks__i_Ks_converted = pow(var_chaste_interface__i_Ks_Xs_gate__Xs, 2) * (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * (-8.6173421482889202e-5 * mParameters[12] * log((0.029999999999999999 * mParameters[3] + mParameters[2]) / (0.029999999999999999 * var_chaste_interface__sodium_dynamics__Nai + mParameters[0])) + var_Membrane__Vm) * HeartConfig::Instance()->GetCapacitance() * mParameters[9]; // uA_per_cm2
        const double var_i_Na__i_Na_converted = pow(var_chaste_interface__i_Na_m_gate__m, 3) * (-var_electric_potentials__E_Na + var_Membrane__Vm) * HeartConfig::Instance()->GetCapacitance() * mParameters[5] * var_chaste_interface__i_Na_h_gate__h * var_chaste_interface__i_Na_j_gate__j; // uA_per_cm2
        const double var_i_NaCa__i_NaCa_converted = 4900.0 * (pow(var_chaste_interface__sodium_dynamics__Nai, 3) * mParameters[1] * exp(4061.5771542678831 * var_Membrane__Vm / mParameters[12]) - 2.8571431999999999 * pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai * exp(-7542.9290007832124 * var_Membrane__Vm / mParameters[12])) * HeartConfig::Instance()->GetCapacitance() / ((1.0 + 0.10000000000000001 * exp(-7542.9290007832124 * var_Membrane__Vm / mParameters[12])) * (669921.875 + pow(mParameters[3], 3)) * (1.3799999999999999 + mParameters[1])); // uA_per_cm2
        const double var_i_NaK__i_NaK_converted = 1.8414239999999999 * HeartConfig::Instance()->GetCapacitance() * mParameters[2] * var_chaste_interface__sodium_dynamics__Nai / ((1.0 + mParameters[2]) * (40.0 + var_chaste_interface__sodium_dynamics__Nai) * (1.0 + 0.035299999999999998 * exp(-11604.506155051095 * var_Membrane__Vm / mParameters[12]) + 0.1245 * exp(-1160.4506155051097 * var_Membrane__Vm / mParameters[12]))); // uA_per_cm2
        const double var_i_b_Na__i_b_Na = 0.90000000000000002 * var_Membrane__Vm - 0.90000000000000002 * var_electric_potentials__E_Na; // A_per_F
        const double var_chaste_interface__i_ionic = HeartConfig::Instance()->GetCapacitance() * var_i_b_Ca__i_b_Ca + HeartConfig::Instance()->GetCapacitance() * var_i_b_Na__i_b_Na + var_i_CaL__i_CaL_converted + var_i_K1__i_K1_converted + var_i_Kr__i_Kr_converted + var_i_Ks__i_Ks_converted + var_i_Na__i_Na_converted + var_i_NaCa__i_NaCa_converted + var_i_NaK__i_NaK_converted + var_i_PCa__i_PCa_converted + var_i_f__i_f_converted + var_i_to__i_to_converted; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::UpdateTransmembranePotential(double var_chaste_interface__environment__time_converted)
    {
        std::vector<double>& rY = rGetStateVariables();
        unsigned v_index = GetVoltageIndex();
        const double delta = 1e-8;

        double d_dt_chaste_interface_var_Membrane__Vm_converted;
        double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057623841
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 1.80773974140477e-05
        double var_chaste_interface__i_Na_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.102953468725004
        double var_chaste_interface__i_Na_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.786926637881461
        double var_chaste_interface__i_Na_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.253943221774722
        double var_chaste_interface__i_CaL_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 8.96088425225182e-05
        double var_chaste_interface__i_CaL_f1_gate__f1 = rY[6];
        // Units: dimensionless; Initial value: 0.970411811263976
        double var_chaste_interface__i_CaL_f2_gate__f2 = rY[7];
        // Units: dimensionless; Initial value: 0.999965815466749
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[8];
        // Units: dimensionless; Initial value: 0.998925296531804
        double var_chaste_interface__i_Kr_Xr1_gate__Xr1 = rY[9];
        // Units: dimensionless; Initial value: 0.00778547011240132
        double var_chaste_interface__i_Kr_Xr2_gate__Xr2 = rY[10];
        // Units: dimensionless; Initial value: 0.432162576531617
        double var_chaste_interface__i_Ks_Xs_gate__Xs = rY[11];
        // Units: dimensionless; Initial value: 0.0322944866983666
        double var_chaste_interface__i_f_Xf_gate__Xf = rY[12];
        // Units: dimensionless; Initial value: 0.100615100568753
        double var_chaste_interface__i_to_q_gate__q = rY[13];
        // Units: dimensionless; Initial value: 0.839295925773219
        double var_chaste_interface__i_to_r_gate__r = rY[14];
        // Units: dimensionless; Initial value: 0.00573289893326379
        double var_chaste_interface__sodium_dynamics__Nai = rY[15];
        // Units: millimolar; Initial value: 10.9248496211574
        

        // Mathematics
        const double var_Membrane__Vm = 0.001 * var_chaste_interface__Membrane__Vm_converted; // volt
        const double var_i_PCa__i_PCa = 0.41249999999999998 * var_chaste_interface__calcium_dynamics__Cai / (0.00050000000000000001 + var_chaste_interface__calcium_dynamics__Cai); // A_per_F
        const double var_electric_potentials__E_K = 8.6173421482889202e-5 * mParameters[12] * log(mParameters[2] / mParameters[0]); // volt
        const double var_i_CaL__i_CaL = ((fabs(var_chaste_interface__Membrane__Vm_converted) < 4.30867107414446e-9 * fabs(mParameters[12])) ? (116045061.55051096 * (4.30867107414446e-9 * mParameters[12] + var_chaste_interface__Membrane__Vm_converted) * (0.019297068299999998 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(9.9999999999999995e-8)) + 0.019297068299999998 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(-9.9999999999999995e-8))) / mParameters[12] - 0.019297068299999998 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(-9.9999999999999995e-8))) : (4478658.9572358271 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(23.209012310102192 * var_chaste_interface__Membrane__Vm_converted / mParameters[12])) * var_chaste_interface__Membrane__Vm_converted * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / ((-1.0 + exp(23.209012310102192 * var_chaste_interface__Membrane__Vm_converted / mParameters[12])) * mParameters[12]))); // A_per_F
        const double var_i_b_Ca__i_b_Ca = 0.69264000000000003 * var_Membrane__Vm - 2.9843579327954189e-5 * mParameters[12] * log(mParameters[1] / var_chaste_interface__calcium_dynamics__Cai); // A_per_F
        const double var_electric_potentials__E_Na = 8.6173421482889202e-5 * mParameters[12] * log(mParameters[3] / var_chaste_interface__sodium_dynamics__Nai); // volt
        const double var_i_Na__i_Na = pow(var_chaste_interface__i_Na_m_gate__m, 3) * (-var_electric_potentials__E_Na + var_Membrane__Vm) * mParameters[5] * var_chaste_interface__i_Na_h_gate__h * var_chaste_interface__i_Na_j_gate__j; // A_per_F
        const double var_i_NaCa__i_NaCa = 4900.0 * (pow(var_chaste_interface__sodium_dynamics__Nai, 3) * mParameters[1] * exp(4061.5771542678831 * var_Membrane__Vm / mParameters[12]) - 2.8571431999999999 * pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai * exp(-7542.9290007832124 * var_Membrane__Vm / mParameters[12])) / ((1.0 + 0.10000000000000001 * exp(-7542.9290007832124 * var_Membrane__Vm / mParameters[12])) * (669921.875 + pow(mParameters[3], 3)) * (1.3799999999999999 + mParameters[1])); // A_per_F
        const double var_i_NaK__i_NaK = 1.8414239999999999 * mParameters[2] * var_chaste_interface__sodium_dynamics__Nai / ((1.0 + mParameters[2]) * (40.0 + var_chaste_interface__sodium_dynamics__Nai) * (1.0 + 0.035299999999999998 * exp(-11604.506155051095 * var_Membrane__Vm / mParameters[12]) + 0.1245 * exp(-1160.4506155051097 * var_Membrane__Vm / mParameters[12]))); // A_per_F
        const double var_i_b_Na__i_b_Na = 0.90000000000000002 * var_Membrane__Vm - 0.90000000000000002 * var_electric_potentials__E_Na; // A_per_F
        d_dt_chaste_interface_var_Membrane__Vm_converted = -var_i_CaL__i_CaL - var_i_Na__i_Na - var_i_NaCa__i_NaCa - var_i_NaK__i_NaK - var_i_PCa__i_PCa - var_i_b_Ca__i_b_Ca - var_i_b_Na__i_b_Na - GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted) / HeartConfig::Instance()->GetCapacitance() - (0.017000000000000001 + var_Membrane__Vm) * mParameters[6] * var_chaste_interface__i_f_Xf_gate__Xf - pow(var_chaste_interface__i_Ks_Xs_gate__Xs, 2) * (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * (-8.6173421482889202e-5 * mParameters[12] * log((0.029999999999999999 * mParameters[3] + mParameters[2]) / (0.029999999999999999 * var_chaste_interface__sodium_dynamics__Nai + mParameters[0])) + var_Membrane__Vm) * mParameters[9] - (-var_electric_potentials__E_K + var_Membrane__Vm) * mParameters[10] * var_chaste_interface__i_to_q_gate__q * var_chaste_interface__i_to_r_gate__r - 1.6825960981856667 * sqrt(mParameters[2]) * (-var_electric_potentials__E_K + var_Membrane__Vm) * mParameters[7] / ((1.0 + exp(-118.83999999999999 + 594.19999999999993 * var_Membrane__Vm - 594.19999999999993 * var_electric_potentials__E_K)) * (3.9100000000000001 / (1.0 + exp(-118.83999999999999 + 594.19999999999993 * var_Membrane__Vm - 594.19999999999993 * var_electric_potentials__E_K)) + (-1.5089999999999999 * exp(0.02 + 0.20000000000000001 * var_Membrane__Vm - 0.20000000000000001 * var_electric_potentials__E_K) + exp(-5.8860000000000001 + 588.60000000000002 * var_Membrane__Vm - 588.60000000000002 * var_electric_potentials__E_K)) / (1.0 + exp(454.69999999999999 * var_Membrane__Vm - 454.69999999999999 * var_electric_potentials__E_K)))) - 0.43033148291193518 * sqrt(mParameters[2]) * (-var_electric_potentials__E_K + var_Membrane__Vm) * mParameters[8] * var_chaste_interface__i_Kr_Xr1_gate__Xr1 * var_chaste_interface__i_Kr_Xr2_gate__Xr2; // millivolt / millisecond

        double evalF = d_dt_chaste_interface_var_Membrane__Vm_converted;
        mEvalF[0] = d_dt_chaste_interface_var_Membrane__Vm_converted;
        double partialF = EvaluatePartialDerivative0(var_chaste_interface__environment__time_converted, rY, delta, true);
        if (fabs(partialF) < delta)
        {
            rY[v_index] += evalF*mDt;
        }
        else
        {
            rY[v_index] += (evalF/partialF)*(exp(partialF*mDt)-1.0);
        }
    }

    void Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::ComputeOneStepExceptVoltage(double var_chaste_interface__environment__time_converted)
    {
        std::vector<double>& rY = rGetStateVariables();
        const double delta = 1e-8;

        double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057623841
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 1.80773974140477e-05
        double var_chaste_interface__i_Na_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.102953468725004
        double var_chaste_interface__i_Na_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.786926637881461
        double var_chaste_interface__i_Na_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.253943221774722
        double var_chaste_interface__i_CaL_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 8.96088425225182e-05
        double var_chaste_interface__i_CaL_f1_gate__f1 = rY[6];
        // Units: dimensionless; Initial value: 0.970411811263976
        double var_chaste_interface__i_CaL_f2_gate__f2 = rY[7];
        // Units: dimensionless; Initial value: 0.999965815466749
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[8];
        // Units: dimensionless; Initial value: 0.998925296531804
        double var_chaste_interface__i_Kr_Xr1_gate__Xr1 = rY[9];
        // Units: dimensionless; Initial value: 0.00778547011240132
        double var_chaste_interface__i_Kr_Xr2_gate__Xr2 = rY[10];
        // Units: dimensionless; Initial value: 0.432162576531617
        double var_chaste_interface__i_Ks_Xs_gate__Xs = rY[11];
        // Units: dimensionless; Initial value: 0.0322944866983666
        double var_chaste_interface__i_f_Xf_gate__Xf = rY[12];
        // Units: dimensionless; Initial value: 0.100615100568753
        double var_chaste_interface__i_to_q_gate__q = rY[13];
        // Units: dimensionless; Initial value: 0.839295925773219
        double var_chaste_interface__i_to_r_gate__r = rY[14];
        // Units: dimensionless; Initial value: 0.00573289893326379
        double var_chaste_interface__sodium_dynamics__Nai = rY[15];
        // Units: millimolar; Initial value: 10.9248496211574
        double var_chaste_interface__calcium_dynamics__Ca_SR = rY[16];
        // Units: millimolar; Initial value: -0.2734234751931
        double var_chaste_interface__calcium_dynamics__g = rY[17];
        // Units: dimensionless; Initial value: 0.999999981028517
        

        // Mathematics
        const double var_Membrane__Vm = 0.001 * var_chaste_interface__Membrane__Vm_converted; // volt
        const double var_calcium_dynamics__g_inf = ((var_chaste_interface__calcium_dynamics__Cai <= 0.00035) ? (1 / (1.0 + 5.439910241481016e+20 * pow(var_chaste_interface__calcium_dynamics__Cai, 6))) : (1 / (1.0 + 1.9720198874049176e+55 * pow(var_chaste_interface__calcium_dynamics__Cai, 16)))); // dimensionless
        const double var_calcium_dynamics__i_leak = 0.00044443999999999999 * var_chaste_interface__calcium_dynamics__Ca_SR - 0.00044443999999999999 * var_chaste_interface__calcium_dynamics__Cai; // millimolar_per_second
        const double var_calcium_dynamics__i_up = 0.56064000000000003 / (1.0 + 6.2499999999999997e-8 / pow(var_chaste_interface__calcium_dynamics__Cai, 2)); // millimolar_per_second
        const double d_dt_chaste_interface_var_calcium_dynamics__g = 0.5 * (-var_chaste_interface__calcium_dynamics__g + var_calcium_dynamics__g_inf) * (((var_Membrane__Vm > -0.059999999999999998) && (var_chaste_interface__calcium_dynamics__g < var_calcium_dynamics__g_inf)) ? (0) : (1.0)); // 1 / millisecond
        const double var_calcium_dynamics__i_rel = 0.041099999999999998 * (8.2319999999999993 + 16.463999999999999 * pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2) / (0.0625 + pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2))) * var_chaste_interface__calcium_dynamics__g * var_chaste_interface__i_CaL_d_gate__d; // millimolar_per_second
        const double d_dt_chaste_interface_var_i_CaL_d_gate__d = 0.001 * (-var_chaste_interface__i_CaL_d_gate__d + 1 / (1.0 + exp(-1.3 - 142.85714285714286 * var_Membrane__Vm))) / (0.001 / (1.0 + exp(2.5 - 50.0 * var_Membrane__Vm)) + 0.0014 * (0.25 + 1.3999999999999999 / (1.0 + exp(-2.6923076923076925 - 76.92307692307692 * var_Membrane__Vm))) / (1.0 + exp(1.0 + 200.0 * var_Membrane__Vm))); // 1 / millisecond
        const double var_i_CaL_f1_gate__f1_inf = 1 / (1.0 + exp(8.6666666666666661 + 333.33333333333331 * var_Membrane__Vm)); // dimensionless
        const double d_dt_chaste_interface_var_i_CaL_f1_gate__f1 = (-var_chaste_interface__i_CaL_f1_gate__f1 + var_i_CaL_f1_gate__f1_inf) * ((-var_i_CaL_f1_gate__f1_inf + var_chaste_interface__i_CaL_f1_gate__f1 < 0) ? (1 / (0.92835000000000001 + 1433.0 * var_chaste_interface__calcium_dynamics__Cai)) : (1.0)) / (20.0 + 200.0 / (1.0 + exp(1.3 - 100.0 * var_Membrane__Vm)) + 180.0 / (1.0 + exp(3.0 + 100.0 * var_Membrane__Vm)) + 1102.5 * exp(-4444444444.4444447 * pow((0.027 + var_Membrane__Vm), 4))); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_CaL_f2_gate__f2 = 0.001 * (0.33000000000000002 - var_chaste_interface__i_CaL_f2_gate__f2 + 0.67000000000000004 / (1.0 + exp(8.75 + 250.0 * var_Membrane__Vm))) / (0.016 / (1.0 + exp(3.0 + 100.0 * var_Membrane__Vm)) + 0.59999999999999998 * exp(-5882.3529411764703 * pow((0.025000000000000001 + var_Membrane__Vm), 2)) + 0.031 / (1.0 + exp(2.5 - 100.0 * var_Membrane__Vm))); // 1 / millisecond
        const double var_i_CaL_fCa_gate__fCa_inf = 0.22803283672848887 / (1.0 + exp(-0.9375 + 1250.0 * var_chaste_interface__calcium_dynamics__Cai)) + 0.076010945576162961 / (1.0 + exp(-9.0 + 10000.0 * var_chaste_interface__calcium_dynamics__Cai)) + 0.76010945576162958 / (1.0 + 5.9537418076512766e+25 * pow(var_chaste_interface__calcium_dynamics__Cai, 8)); // dimensionless
        const double d_dt_chaste_interface_var_i_CaL_fCa_gate__fCa = 0.5 * (-var_chaste_interface__i_CaL_fCa_gate__fCa + var_i_CaL_fCa_gate__fCa_inf) * (((var_Membrane__Vm > -0.059999999999999998) && (var_chaste_interface__i_CaL_fCa_gate__fCa < var_i_CaL_fCa_gate__fCa_inf)) ? (0) : (1.0)); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Kr_Xr2_gate__Xr2 = 0.29761904761904762 * (1.0 + exp(-3.0 + 50.0 * var_Membrane__Vm)) * (1.0 + exp(-3.0 - 50.0 * var_Membrane__Vm)) * (-var_chaste_interface__i_Kr_Xr2_gate__Xr2 + 1 / (1.0 + exp(1.76 + 20.0 * var_Membrane__Vm))); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Ks_Xs_gate__Xs = 0.00090909090909090909 * sqrt(1.0 + exp(-1.6666666666666667 - 166.66666666666666 * var_Membrane__Vm)) * (1.0 + exp(-3.0 + 50.0 * var_Membrane__Vm)) * (-var_chaste_interface__i_Ks_Xs_gate__Xs + 1 / (1.0 + exp(-1.25 - 62.5 * var_Membrane__Vm))); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Na_h_gate__h = 0.001 * (-var_chaste_interface__i_Na_h_gate__h + 1 / sqrt(1.0 + exp(12.649122807017543 + 175.43859649122805 * var_Membrane__Vm))) * ((var_Membrane__Vm < -0.040000000000000001) ? (38.0 * exp(-11.764705882352942 - 147.05882352941177 * var_Membrane__Vm) + 206666666.66666669 * exp(348.5 * var_Membrane__Vm) + 1800.0000000000002 * exp(79.0 * var_Membrane__Vm)) : (393.39103068450044)); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Na_j_gate__j = 0.001 * (-var_chaste_interface__i_Na_j_gate__j + 1 / sqrt(1.0 + exp(12.649122807017543 + 175.43859649122805 * var_Membrane__Vm))) * (142.85714285714286 * ((var_Membrane__Vm < -0.040000000000000001) ? (0.024240000000000001 * exp(-10.52 * var_Membrane__Vm) / (1.0 + exp(-5.5312920000000005 - 137.80000000000001 * var_Membrane__Vm))) : (0.59999999999999998 * exp(57.0 * var_Membrane__Vm) / (1.0 + exp(-3.2000000000000002 - 100.0 * var_Membrane__Vm)))) + 142.85714285714286 * ((var_Membrane__Vm < -0.040000000000000001) ? ((37.780000000000001 + 1000.0 * var_Membrane__Vm) * (-25428.0 * exp(244.40000000000001 * var_Membrane__Vm) - 6.9480000000000002e-6 * exp(-43.909999999999997 * var_Membrane__Vm)) / (1.0 + exp(24.640530000000002 + 311.0 * var_Membrane__Vm))) : (0))); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Na_m_gate__m = (1.0 + exp(-12.0 - 200.0 * var_Membrane__Vm)) * (-var_chaste_interface__i_Na_m_gate__m + pow((1.0 + exp(-5.7796610169491522 - 169.4915254237288 * var_Membrane__Vm)), (-0.33333333333333331))) / (0.10000000000000001 / (1.0 + exp(7.0 + 200.0 * var_Membrane__Vm)) + 0.10000000000000001 / (1.0 + exp(-0.25 + 5.0 * var_Membrane__Vm))); // 1 / millisecond
        const double var_i_PCa__i_PCa = 0.41249999999999998 * var_chaste_interface__calcium_dynamics__Cai / (0.00050000000000000001 + var_chaste_interface__calcium_dynamics__Cai); // A_per_F
        const double d_dt_chaste_interface_var_i_f_Xf_gate__Xf = 0.001 * (0.52631578947368418 + 0.52631578947368418 * exp(1.5 + 100.0 * var_Membrane__Vm)) * (-var_chaste_interface__i_f_Xf_gate__Xf + 1 / (1.0 + exp(15.569999999999999 + 200.0 * var_Membrane__Vm))); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_to_q_gate__q = 0.001 * (-var_chaste_interface__i_to_q_gate__q + 1 / (1.0 + exp(4.0769230769230766 + 76.92307692307692 * var_Membrane__Vm))) / (0.0060599999999999994 + 0.039101999999999998 / (0.065000000000000002 * exp(4.593 + 100.0 * var_Membrane__Vm) + 0.56999999999999995 * exp(-3.52 - 80.0 * var_Membrane__Vm))); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_to_r_gate__r = 0.001 * (-var_chaste_interface__i_to_r_gate__r + 1 / (1.0 + exp(1.1893333333333334 - 53.333333333333336 * var_Membrane__Vm))) / (0.0027535199999999998 + 0.01440516 / (1.0369999999999999 * exp(2.7548999999999997 + 90.0 * var_Membrane__Vm) + 0.36899999999999999 * exp(-2.8607999999999998 - 120.0 * var_Membrane__Vm))); // 1 / millisecond
        const double var_i_CaL__i_CaL = ((fabs(var_chaste_interface__Membrane__Vm_converted) < 4.30867107414446e-9 * fabs(mParameters[12])) ? (116045061.55051096 * (4.30867107414446e-9 * mParameters[12] + var_chaste_interface__Membrane__Vm_converted) * (0.019297068299999998 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(9.9999999999999995e-8)) + 0.019297068299999998 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(-9.9999999999999995e-8))) / mParameters[12] - 0.019297068299999998 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(-9.9999999999999995e-8))) : (4478658.9572358271 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(23.209012310102192 * var_chaste_interface__Membrane__Vm_converted / mParameters[12])) * var_chaste_interface__Membrane__Vm_converted * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / ((-1.0 + exp(23.209012310102192 * var_chaste_interface__Membrane__Vm_converted / mParameters[12])) * mParameters[12]))); // A_per_F
        const double d_dt_chaste_interface_var_i_Kr_Xr1_gate__Xr1 = 0.00037037037037037035 * (1.0 + exp(2.6086956521739131 + 86.956521739130437 * var_Membrane__Vm)) * (1.0 + exp(-4.5 - 100.0 * var_Membrane__Vm)) * (-var_chaste_interface__i_Kr_Xr1_gate__Xr1 + 1 / (1.0 + exp(-3.8775510204081627 - 204.08163265306121 * var_Membrane__Vm - 0.0076462663250123509 * (-2.1789087017666886 + log(40.0 * pow((1.0 + 0.38461538461538458 * mParameters[1]), 4) / pow((0.57999999999999996 + mParameters[1]), 4))) * mParameters[12]))); // 1 / millisecond
        const double var_i_b_Ca__i_b_Ca = 0.69264000000000003 * var_Membrane__Vm - 2.9843579327954189e-5 * mParameters[12] * log(mParameters[1] / var_chaste_interface__calcium_dynamics__Cai); // A_per_F
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_SR = 0.015075462970894076 * (-var_calcium_dynamics__i_leak - var_calcium_dynamics__i_rel + var_calcium_dynamics__i_up) / (1.0 + 3.0 / pow((0.29999999999999999 + var_chaste_interface__calcium_dynamics__Ca_SR), 2)); // millimolar / millisecond
        const double var_electric_potentials__E_Na = 8.6173421482889202e-5 * mParameters[12] * log(mParameters[3] / var_chaste_interface__sodium_dynamics__Nai); // volt
        const double var_i_Na__i_Na = pow(var_chaste_interface__i_Na_m_gate__m, 3) * (-var_electric_potentials__E_Na + var_Membrane__Vm) * mParameters[5] * var_chaste_interface__i_Na_h_gate__h * var_chaste_interface__i_Na_j_gate__j; // A_per_F
        const double var_i_NaCa__i_NaCa = 4900.0 * (pow(var_chaste_interface__sodium_dynamics__Nai, 3) * mParameters[1] * exp(4061.5771542678831 * var_Membrane__Vm / mParameters[12]) - 2.8571431999999999 * pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai * exp(-7542.9290007832124 * var_Membrane__Vm / mParameters[12])) / ((1.0 + 0.10000000000000001 * exp(-7542.9290007832124 * var_Membrane__Vm / mParameters[12])) * (669921.875 + pow(mParameters[3], 3)) * (1.3799999999999999 + mParameters[1])); // A_per_F
        const double d_dt_chaste_interface_var_calcium_dynamics__Cai = 0.001 * (-var_calcium_dynamics__i_up - 588878900.51341963 * (-2.0 * var_i_NaCa__i_NaCa + var_i_CaL__i_CaL + var_i_PCa__i_PCa + var_i_b_Ca__i_b_Ca) * mParameters[11] + var_calcium_dynamics__i_leak + var_calcium_dynamics__i_rel) / (1.0 + 0.00025000000000000001 / pow((0.001 + var_chaste_interface__calcium_dynamics__Cai), 2)); // millimolar / millisecond
        const double var_i_NaK__i_NaK = 1.8414239999999999 * mParameters[2] * var_chaste_interface__sodium_dynamics__Nai / ((1.0 + mParameters[2]) * (40.0 + var_chaste_interface__sodium_dynamics__Nai) * (1.0 + 0.035299999999999998 * exp(-11604.506155051095 * var_Membrane__Vm / mParameters[12]) + 0.1245 * exp(-1160.4506155051097 * var_Membrane__Vm / mParameters[12]))); // A_per_F
        const double var_i_b_Na__i_b_Na = 0.90000000000000002 * var_Membrane__Vm - 0.90000000000000002 * var_electric_potentials__E_Na; // A_per_F
        const double d_dt_chaste_interface_var_sodium_dynamics__Nai = -1177757.8010268393 * (3.0 * var_i_NaCa__i_NaCa + 3.0 * var_i_NaK__i_NaK + var_i_Na__i_Na + var_i_b_Na__i_b_Na) * mParameters[11]; // millimolar / millisecond
        
        mEvalF[1] = d_dt_chaste_interface_var_calcium_dynamics__Cai;
        mPartialF[1] = EvaluatePartialDerivative1(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[2] = d_dt_chaste_interface_var_i_Na_m_gate__m;
        mPartialF[2] = EvaluatePartialDerivative2(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[3] = d_dt_chaste_interface_var_i_Na_h_gate__h;
        mPartialF[3] = EvaluatePartialDerivative3(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[4] = d_dt_chaste_interface_var_i_Na_j_gate__j;
        mPartialF[4] = EvaluatePartialDerivative4(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[5] = d_dt_chaste_interface_var_i_CaL_d_gate__d;
        mPartialF[5] = EvaluatePartialDerivative5(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[6] = d_dt_chaste_interface_var_i_CaL_f1_gate__f1;
        mPartialF[6] = EvaluatePartialDerivative6(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[7] = d_dt_chaste_interface_var_i_CaL_f2_gate__f2;
        mPartialF[7] = EvaluatePartialDerivative7(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[8] = d_dt_chaste_interface_var_i_CaL_fCa_gate__fCa;
        mPartialF[8] = EvaluatePartialDerivative8(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[9] = d_dt_chaste_interface_var_i_Kr_Xr1_gate__Xr1;
        mPartialF[9] = EvaluatePartialDerivative9(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[10] = d_dt_chaste_interface_var_i_Kr_Xr2_gate__Xr2;
        mPartialF[10] = EvaluatePartialDerivative10(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[11] = d_dt_chaste_interface_var_i_Ks_Xs_gate__Xs;
        mPartialF[11] = EvaluatePartialDerivative11(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[12] = d_dt_chaste_interface_var_i_f_Xf_gate__Xf;
        mPartialF[12] = EvaluatePartialDerivative12(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[13] = d_dt_chaste_interface_var_i_to_q_gate__q;
        mPartialF[13] = EvaluatePartialDerivative13(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[14] = d_dt_chaste_interface_var_i_to_r_gate__r;
        mPartialF[14] = EvaluatePartialDerivative14(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[15] = d_dt_chaste_interface_var_sodium_dynamics__Nai;
        mPartialF[15] = EvaluatePartialDerivative15(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[16] = d_dt_chaste_interface_var_calcium_dynamics__Ca_SR;
        mPartialF[16] = EvaluatePartialDerivative16(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[17] = d_dt_chaste_interface_var_calcium_dynamics__g;
        mPartialF[17] = EvaluatePartialDerivative17(var_chaste_interface__environment__time_converted, rY, delta);
        
        {
            if (fabs(mPartialF[1]) < delta){
                rY[1] += mDt*d_dt_chaste_interface_var_calcium_dynamics__Cai;
            }
            else
            {
                rY[1] += (d_dt_chaste_interface_var_calcium_dynamics__Cai/mPartialF[1])*(exp(mPartialF[1]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[2]) < delta){
                rY[2] += mDt*d_dt_chaste_interface_var_i_Na_m_gate__m;
            }
            else
            {
                rY[2] += (d_dt_chaste_interface_var_i_Na_m_gate__m/mPartialF[2])*(exp(mPartialF[2]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[3]) < delta){
                rY[3] += mDt*d_dt_chaste_interface_var_i_Na_h_gate__h;
            }
            else
            {
                rY[3] += (d_dt_chaste_interface_var_i_Na_h_gate__h/mPartialF[3])*(exp(mPartialF[3]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[4]) < delta){
                rY[4] += mDt*d_dt_chaste_interface_var_i_Na_j_gate__j;
            }
            else
            {
                rY[4] += (d_dt_chaste_interface_var_i_Na_j_gate__j/mPartialF[4])*(exp(mPartialF[4]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[5]) < delta){
                rY[5] += mDt*d_dt_chaste_interface_var_i_CaL_d_gate__d;
            }
            else
            {
                rY[5] += (d_dt_chaste_interface_var_i_CaL_d_gate__d/mPartialF[5])*(exp(mPartialF[5]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[6]) < delta){
                rY[6] += mDt*d_dt_chaste_interface_var_i_CaL_f1_gate__f1;
            }
            else
            {
                rY[6] += (d_dt_chaste_interface_var_i_CaL_f1_gate__f1/mPartialF[6])*(exp(mPartialF[6]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[7]) < delta){
                rY[7] += mDt*d_dt_chaste_interface_var_i_CaL_f2_gate__f2;
            }
            else
            {
                rY[7] += (d_dt_chaste_interface_var_i_CaL_f2_gate__f2/mPartialF[7])*(exp(mPartialF[7]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[8]) < delta){
                rY[8] += mDt*d_dt_chaste_interface_var_i_CaL_fCa_gate__fCa;
            }
            else
            {
                rY[8] += (d_dt_chaste_interface_var_i_CaL_fCa_gate__fCa/mPartialF[8])*(exp(mPartialF[8]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[9]) < delta){
                rY[9] += mDt*d_dt_chaste_interface_var_i_Kr_Xr1_gate__Xr1;
            }
            else
            {
                rY[9] += (d_dt_chaste_interface_var_i_Kr_Xr1_gate__Xr1/mPartialF[9])*(exp(mPartialF[9]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[10]) < delta){
                rY[10] += mDt*d_dt_chaste_interface_var_i_Kr_Xr2_gate__Xr2;
            }
            else
            {
                rY[10] += (d_dt_chaste_interface_var_i_Kr_Xr2_gate__Xr2/mPartialF[10])*(exp(mPartialF[10]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[11]) < delta){
                rY[11] += mDt*d_dt_chaste_interface_var_i_Ks_Xs_gate__Xs;
            }
            else
            {
                rY[11] += (d_dt_chaste_interface_var_i_Ks_Xs_gate__Xs/mPartialF[11])*(exp(mPartialF[11]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[12]) < delta){
                rY[12] += mDt*d_dt_chaste_interface_var_i_f_Xf_gate__Xf;
            }
            else
            {
                rY[12] += (d_dt_chaste_interface_var_i_f_Xf_gate__Xf/mPartialF[12])*(exp(mPartialF[12]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[13]) < delta){
                rY[13] += mDt*d_dt_chaste_interface_var_i_to_q_gate__q;
            }
            else
            {
                rY[13] += (d_dt_chaste_interface_var_i_to_q_gate__q/mPartialF[13])*(exp(mPartialF[13]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[14]) < delta){
                rY[14] += mDt*d_dt_chaste_interface_var_i_to_r_gate__r;
            }
            else
            {
                rY[14] += (d_dt_chaste_interface_var_i_to_r_gate__r/mPartialF[14])*(exp(mPartialF[14]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[15]) < delta){
                rY[15] += mDt*d_dt_chaste_interface_var_sodium_dynamics__Nai;
            }
            else
            {
                rY[15] += (d_dt_chaste_interface_var_sodium_dynamics__Nai/mPartialF[15])*(exp(mPartialF[15]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[16]) < delta){
                rY[16] += mDt*d_dt_chaste_interface_var_calcium_dynamics__Ca_SR;
            }
            else
            {
                rY[16] += (d_dt_chaste_interface_var_calcium_dynamics__Ca_SR/mPartialF[16])*(exp(mPartialF[16]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[17]) < delta){
                rY[17] += mDt*d_dt_chaste_interface_var_calcium_dynamics__g;
            }
            else
            {
                rY[17] += (d_dt_chaste_interface_var_calcium_dynamics__g/mPartialF[17])*(exp(mPartialF[17]*mDt)-1.0);
            }
            
        }        
        
    }
   
    
    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluateYDerivative0(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        double d_dt_chaste_interface_var_Membrane__Vm_converted;
        double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057623841
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 1.80773974140477e-05
        double var_chaste_interface__i_Na_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.102953468725004
        double var_chaste_interface__i_Na_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.786926637881461
        double var_chaste_interface__i_Na_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.253943221774722
        double var_chaste_interface__i_CaL_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 8.96088425225182e-05
        double var_chaste_interface__i_CaL_f1_gate__f1 = rY[6];
        // Units: dimensionless; Initial value: 0.970411811263976
        double var_chaste_interface__i_CaL_f2_gate__f2 = rY[7];
        // Units: dimensionless; Initial value: 0.999965815466749
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[8];
        // Units: dimensionless; Initial value: 0.998925296531804
        double var_chaste_interface__i_Kr_Xr1_gate__Xr1 = rY[9];
        // Units: dimensionless; Initial value: 0.00778547011240132
        double var_chaste_interface__i_Kr_Xr2_gate__Xr2 = rY[10];
        // Units: dimensionless; Initial value: 0.432162576531617
        double var_chaste_interface__i_Ks_Xs_gate__Xs = rY[11];
        // Units: dimensionless; Initial value: 0.0322944866983666
        double var_chaste_interface__i_f_Xf_gate__Xf = rY[12];
        // Units: dimensionless; Initial value: 0.100615100568753
        double var_chaste_interface__i_to_q_gate__q = rY[13];
        // Units: dimensionless; Initial value: 0.839295925773219
        double var_chaste_interface__i_to_r_gate__r = rY[14];
        // Units: dimensionless; Initial value: 0.00573289893326379
        double var_chaste_interface__sodium_dynamics__Nai = rY[15];
        // Units: millimolar; Initial value: 10.9248496211574
        

        // Mathematics
        const double var_Membrane__Vm = 0.001 * var_chaste_interface__Membrane__Vm_converted; // volt
        const double var_i_PCa__i_PCa = 0.41249999999999998 * var_chaste_interface__calcium_dynamics__Cai / (0.00050000000000000001 + var_chaste_interface__calcium_dynamics__Cai); // A_per_F
        const double var_electric_potentials__E_K = 8.6173421482889202e-5 * mParameters[12] * log(mParameters[2] / mParameters[0]); // volt
        const double var_i_CaL__i_CaL = ((fabs(var_chaste_interface__Membrane__Vm_converted) < 4.30867107414446e-9 * fabs(mParameters[12])) ? (116045061.55051096 * (4.30867107414446e-9 * mParameters[12] + var_chaste_interface__Membrane__Vm_converted) * (0.019297068299999998 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(9.9999999999999995e-8)) + 0.019297068299999998 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(-9.9999999999999995e-8))) / mParameters[12] - 0.019297068299999998 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(-9.9999999999999995e-8))) : (4478658.9572358271 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(23.209012310102192 * var_chaste_interface__Membrane__Vm_converted / mParameters[12])) * var_chaste_interface__Membrane__Vm_converted * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / ((-1.0 + exp(23.209012310102192 * var_chaste_interface__Membrane__Vm_converted / mParameters[12])) * mParameters[12]))); // A_per_F
        const double var_i_b_Ca__i_b_Ca = 0.69264000000000003 * var_Membrane__Vm - 2.9843579327954189e-5 * mParameters[12] * log(mParameters[1] / var_chaste_interface__calcium_dynamics__Cai); // A_per_F
        const double var_electric_potentials__E_Na = 8.6173421482889202e-5 * mParameters[12] * log(mParameters[3] / var_chaste_interface__sodium_dynamics__Nai); // volt
        const double var_i_Na__i_Na = pow(var_chaste_interface__i_Na_m_gate__m, 3) * (-var_electric_potentials__E_Na + var_Membrane__Vm) * mParameters[5] * var_chaste_interface__i_Na_h_gate__h * var_chaste_interface__i_Na_j_gate__j; // A_per_F
        const double var_i_NaCa__i_NaCa = 4900.0 * (pow(var_chaste_interface__sodium_dynamics__Nai, 3) * mParameters[1] * exp(4061.5771542678831 * var_Membrane__Vm / mParameters[12]) - 2.8571431999999999 * pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai * exp(-7542.9290007832124 * var_Membrane__Vm / mParameters[12])) / ((1.0 + 0.10000000000000001 * exp(-7542.9290007832124 * var_Membrane__Vm / mParameters[12])) * (669921.875 + pow(mParameters[3], 3)) * (1.3799999999999999 + mParameters[1])); // A_per_F
        const double var_i_NaK__i_NaK = 1.8414239999999999 * mParameters[2] * var_chaste_interface__sodium_dynamics__Nai / ((1.0 + mParameters[2]) * (40.0 + var_chaste_interface__sodium_dynamics__Nai) * (1.0 + 0.035299999999999998 * exp(-11604.506155051095 * var_Membrane__Vm / mParameters[12]) + 0.1245 * exp(-1160.4506155051097 * var_Membrane__Vm / mParameters[12]))); // A_per_F
        const double var_i_b_Na__i_b_Na = 0.90000000000000002 * var_Membrane__Vm - 0.90000000000000002 * var_electric_potentials__E_Na; // A_per_F
        d_dt_chaste_interface_var_Membrane__Vm_converted = -var_i_CaL__i_CaL - var_i_Na__i_Na - var_i_NaCa__i_NaCa - var_i_NaK__i_NaK - var_i_PCa__i_PCa - var_i_b_Ca__i_b_Ca - var_i_b_Na__i_b_Na - GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted) / HeartConfig::Instance()->GetCapacitance() - (0.017000000000000001 + var_Membrane__Vm) * mParameters[6] * var_chaste_interface__i_f_Xf_gate__Xf - pow(var_chaste_interface__i_Ks_Xs_gate__Xs, 2) * (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * (-8.6173421482889202e-5 * mParameters[12] * log((0.029999999999999999 * mParameters[3] + mParameters[2]) / (0.029999999999999999 * var_chaste_interface__sodium_dynamics__Nai + mParameters[0])) + var_Membrane__Vm) * mParameters[9] - (-var_electric_potentials__E_K + var_Membrane__Vm) * mParameters[10] * var_chaste_interface__i_to_q_gate__q * var_chaste_interface__i_to_r_gate__r - 1.6825960981856667 * sqrt(mParameters[2]) * (-var_electric_potentials__E_K + var_Membrane__Vm) * mParameters[7] / ((1.0 + exp(-118.83999999999999 + 594.19999999999993 * var_Membrane__Vm - 594.19999999999993 * var_electric_potentials__E_K)) * (3.9100000000000001 / (1.0 + exp(-118.83999999999999 + 594.19999999999993 * var_Membrane__Vm - 594.19999999999993 * var_electric_potentials__E_K)) + (-1.5089999999999999 * exp(0.02 + 0.20000000000000001 * var_Membrane__Vm - 0.20000000000000001 * var_electric_potentials__E_K) + exp(-5.8860000000000001 + 588.60000000000002 * var_Membrane__Vm - 588.60000000000002 * var_electric_potentials__E_K)) / (1.0 + exp(454.69999999999999 * var_Membrane__Vm - 454.69999999999999 * var_electric_potentials__E_K)))) - 0.43033148291193518 * sqrt(mParameters[2]) * (-var_electric_potentials__E_K + var_Membrane__Vm) * mParameters[8] * var_chaste_interface__i_Kr_Xr1_gate__Xr1 * var_chaste_interface__i_Kr_Xr2_gate__Xr2; // millivolt / millisecond

        return d_dt_chaste_interface_var_Membrane__Vm_converted;
    }

    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluatePartialDerivative0(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -74.3340057623841
            double var_chaste_interface__calcium_dynamics__Cai = rY[1];
            // Units: millimolar; Initial value: 1.80773974140477e-05
            double var_chaste_interface__i_Na_m_gate__m = rY[2];
            // Units: dimensionless; Initial value: 0.102953468725004
            double var_chaste_interface__i_Na_h_gate__h = rY[3];
            // Units: dimensionless; Initial value: 0.786926637881461
            double var_chaste_interface__i_Na_j_gate__j = rY[4];
            // Units: dimensionless; Initial value: 0.253943221774722
            double var_chaste_interface__i_CaL_d_gate__d = rY[5];
            // Units: dimensionless; Initial value: 8.96088425225182e-05
            double var_chaste_interface__i_CaL_f1_gate__f1 = rY[6];
            // Units: dimensionless; Initial value: 0.970411811263976
            double var_chaste_interface__i_CaL_f2_gate__f2 = rY[7];
            // Units: dimensionless; Initial value: 0.999965815466749
            double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[8];
            // Units: dimensionless; Initial value: 0.998925296531804
            double var_chaste_interface__i_Kr_Xr1_gate__Xr1 = rY[9];
            // Units: dimensionless; Initial value: 0.00778547011240132
            double var_chaste_interface__i_Kr_Xr2_gate__Xr2 = rY[10];
            // Units: dimensionless; Initial value: 0.432162576531617
            double var_chaste_interface__i_Ks_Xs_gate__Xs = rY[11];
            // Units: dimensionless; Initial value: 0.0322944866983666
            double var_chaste_interface__i_f_Xf_gate__Xf = rY[12];
            // Units: dimensionless; Initial value: 0.100615100568753
            double var_chaste_interface__i_to_q_gate__q = rY[13];
            // Units: dimensionless; Initial value: 0.839295925773219
            double var_chaste_interface__i_to_r_gate__r = rY[14];
            // Units: dimensionless; Initial value: 0.00573289893326379
            double var_chaste_interface__sodium_dynamics__Nai = rY[15];
            // Units: millimolar; Initial value: 10.9248496211574
            

            const double var_x0 = mParameters[4] * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa;
            const double var_x1 = 0.019297068299999998 * var_x0;
            const double var_x2 = var_x1 * var_chaste_interface__i_CaL_f1_gate__f1;
            const double var_x3 = exp(9.9999999999999995e-8);
            const double var_x4 = 1 / (-1.0 + var_x3);
            const double var_x5 = -0.34100000000000003 * mParameters[1];
            const double var_x6 = var_x4 * (var_x5 + var_x3 * var_chaste_interface__calcium_dynamics__Cai);
            const double var_x7 = var_x2 * var_x6;
            const double var_x8 = exp(-9.9999999999999995e-8);
            const double var_x9 = 1 / (-1.0 + var_x8);
            const double var_x10 = var_x9 * (var_x5 + var_x8 * var_chaste_interface__calcium_dynamics__Cai);
            const double var_x11 = var_x10 * var_x2;
            const double var_x12 = var_x11 * var_chaste_interface__i_CaL_d_gate__d;
            const double var_x13 = 1 / mParameters[12];
            const double var_x14 = 116045061.55051096 * var_x13;
            const double var_x15 = var_x14 * (var_x12 + var_x7 * var_chaste_interface__i_CaL_d_gate__d);
            const double var_x16 = fabs(var_chaste_interface__Membrane__Vm_converted) < 4.30867107414446e-9 * fabs(mParameters[12]);
            const double var_x17 = var_x13 * var_chaste_interface__Membrane__Vm_converted;
            const double var_x18 = exp(23.209012310102192 * var_x17);
            const double var_x19 = -1.0 + var_x18;
            const double var_x20 = 1 / var_x19;
            const double var_x21 = var_x18 * var_chaste_interface__calcium_dynamics__Cai;
            const double var_x22 = var_x21 + var_x5;
            const double var_x23 = 4478658.9572358271 * var_x20 * var_x22;
            const double var_x24 = var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1;
            const double var_x25 = var_x0 * var_x24;
            const double var_x26 = var_x23 * var_x25;
            const double var_x27 = var_x20 * var_x25;
            const double var_x28 = 103945250.87123576 * var_chaste_interface__Membrane__Vm_converted / pow(mParameters[12], 2);
            const double var_x29 = ((var_x16) ? (var_x15) : (var_x13 * var_x26 + var_x21 * var_x27 * var_x28 - var_x18 * var_x22 * var_x25 * var_x28 / pow(var_x19, 2)));
            const double var_x30 = pow(var_chaste_interface__i_Ks_Xs_gate__Xs, 2);
            const double var_x31 = 1 / var_chaste_interface__calcium_dynamics__Cai;
            const double var_x32 = pow(var_x31, 1.3999999999999999);
            const double var_x33 = 1.0 + 6.4818210260626455e-7 * var_x32;
            const double var_x34 = (1.0 + 0.59999999999999998 / var_x33) * mParameters[9];
            const double var_x35 = var_x30 * var_x34;
            const double var_x36 = mParameters[1] * exp(4.0615771542678836 * var_x17);
            const double var_x37 = var_x36 * pow(var_chaste_interface__sodium_dynamics__Nai, 3);
            const double var_x38 = exp(-7.5429290007832126 * var_x17);
            const double var_x39 = pow(mParameters[3], 3);
            const double var_x40 = var_x38 * var_x39;
            const double var_x41 = var_x40 * var_chaste_interface__calcium_dynamics__Cai;
            const double var_x42 = 1.0 + 0.10000000000000001 * var_x38;
            const double var_x43 = 1 / ((669921.875 + var_x39) * (1.3799999999999999 + mParameters[1]));
            const double var_x44 = var_x43 / var_x42;
            const double var_x45 = var_x44 * (4.0615771542678836 * var_x13 * var_x37 + 21.551228302670548 * var_x13 * var_x41);
            const double var_x46 = 0.001 * var_chaste_interface__i_Na_h_gate__h;
            const double var_x47 = pow(var_chaste_interface__i_Na_m_gate__m, 3) * mParameters[5];
            const double var_x48 = var_x47 * var_chaste_interface__i_Na_j_gate__j;
            const double var_x49 = mParameters[12] * log(mParameters[2] / mParameters[0]);
            const double var_x50 = exp(-118.83999999999999 + 0.59419999999999995 * var_chaste_interface__Membrane__Vm_converted - 0.05120424704513276 * var_x49);
            const double var_x51 = 1.0 + var_x50;
            const double var_x52 = 1 / var_x51;
            const double var_x53 = exp(0.45469999999999999 * var_chaste_interface__Membrane__Vm_converted - 0.039183054748269719 * var_x49);
            const double var_x54 = 1.0 + var_x53;
            const double var_x55 = 1 / var_x54;
            const double var_x56 = exp(0.02 + 0.00020000000000000001 * var_chaste_interface__Membrane__Vm_converted - 1.7234684296577842e-5 * var_x49);
            const double var_x57 = exp(-5.8860000000000001 + 0.58860000000000001 * var_chaste_interface__Membrane__Vm_converted - 0.050721675884828586 * var_x49);
            const double var_x58 = var_x57 - 1.5089999999999999 * var_x56;
            const double var_x59 = var_x55 * var_x58;
            const double var_x60 = sqrt(mParameters[2]);
            const double var_x61 = var_x60 * mParameters[7] / (var_x59 + 3.9100000000000001 * var_x52);
            const double var_x62 = var_x60 * mParameters[8] * var_chaste_interface__i_Kr_Xr2_gate__Xr2;
            const double var_x63 = 0.001 * var_chaste_interface__Membrane__Vm_converted;
            const double var_x64 = 8.6173421482889202e-5 * var_x49;
            const double var_x65 = var_x63 - var_x64;
            const double var_x66 = var_x50 / pow(var_x51, 2);
            const double var_x67 = 1 / (1.0 + mParameters[2]);
            const double var_x68 = 1 / (40.0 + var_chaste_interface__sodium_dynamics__Nai);
            const double var_x69 = exp(-11.604506155051096 * var_x17);
            const double var_x70 = exp(-1.1604506155051095 * var_x17);
            const double var_x71 = 1.0 + 0.035299999999999998 * var_x69 + 0.1245 * var_x70;
            const double var_x72 = var_x67 * var_x68 * (0.14447610163038616 * var_x13 * var_x70 + 0.40963906727330363 * var_x13 * var_x69) * mParameters[2] * var_chaste_interface__sodium_dynamics__Nai / pow(var_x71, 2);
            const double var_x73 = var_x37 - 2.8571431999999999 * var_x41;
            const double var_x74 = var_x13 * var_x38 * var_x43 * var_x73 / pow(var_x42, 2);
            
            partialF = -0.00159264 - var_x29 - 4900.0 * var_x45 - 1.8414239999999999 * var_x72 - 0.001 * var_x35 - 3696.035210383774 * var_x74 - var_x46 * var_x48 - 0.001 * mParameters[6] * var_chaste_interface__i_f_Xf_gate__Xf - 0.0016825960981856666 * var_x52 * var_x61 - 0.00043033148291193521 * var_x62 * var_chaste_interface__i_Kr_Xr1_gate__Xr1 + 0.99979860154192302 * var_x61 * var_x65 * var_x66 - 0.001 * mParameters[10] * var_chaste_interface__i_to_q_gate__q * var_chaste_interface__i_to_r_gate__r - 0.11005920279077626 * var_x52 * var_x60 * var_x65 * (2.3233220000000001 * var_x66 - var_x55 * (0.58860000000000001 * var_x57 - 0.00030180000000000002 * var_x56) + 0.45469999999999999 * var_x53 * var_x58 / pow(var_x54, 2)) * mParameters[7] / pow((var_x52 + 0.25575447570332482 * var_x59), 2);
        }
        else
        {
            const double y_save = rY[0];
            rY[0] += delta;
            const double temp = EvaluateYDerivative0(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[0])/delta;
            rY[0] = y_save;
        }
        return partialF;
    }
    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluateYDerivative1(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057623841
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 1.80773974140477e-05
        double var_chaste_interface__i_CaL_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 8.96088425225182e-05
        double var_chaste_interface__i_CaL_f1_gate__f1 = rY[6];
        // Units: dimensionless; Initial value: 0.970411811263976
        double var_chaste_interface__i_CaL_f2_gate__f2 = rY[7];
        // Units: dimensionless; Initial value: 0.999965815466749
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[8];
        // Units: dimensionless; Initial value: 0.998925296531804
        double var_chaste_interface__sodium_dynamics__Nai = rY[15];
        // Units: millimolar; Initial value: 10.9248496211574
        double var_chaste_interface__calcium_dynamics__Ca_SR = rY[16];
        // Units: millimolar; Initial value: -0.2734234751931
        double var_chaste_interface__calcium_dynamics__g = rY[17];
        // Units: dimensionless; Initial value: 0.999999981028517
        

        // Mathematics
        const double var_Membrane__Vm = 0.001 * var_chaste_interface__Membrane__Vm_converted; // volt
        const double var_calcium_dynamics__i_leak = 0.00044443999999999999 * var_chaste_interface__calcium_dynamics__Ca_SR - 0.00044443999999999999 * var_chaste_interface__calcium_dynamics__Cai; // millimolar_per_second
        const double var_calcium_dynamics__i_up = 0.56064000000000003 / (1.0 + 6.2499999999999997e-8 / pow(var_chaste_interface__calcium_dynamics__Cai, 2)); // millimolar_per_second
        const double var_calcium_dynamics__i_rel = 0.041099999999999998 * (8.2319999999999993 + 16.463999999999999 * pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2) / (0.0625 + pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2))) * var_chaste_interface__calcium_dynamics__g * var_chaste_interface__i_CaL_d_gate__d; // millimolar_per_second
        const double var_i_PCa__i_PCa = 0.41249999999999998 * var_chaste_interface__calcium_dynamics__Cai / (0.00050000000000000001 + var_chaste_interface__calcium_dynamics__Cai); // A_per_F
        const double var_i_CaL__i_CaL = ((fabs(var_chaste_interface__Membrane__Vm_converted) < 4.30867107414446e-9 * fabs(mParameters[12])) ? (116045061.55051096 * (4.30867107414446e-9 * mParameters[12] + var_chaste_interface__Membrane__Vm_converted) * (0.019297068299999998 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(9.9999999999999995e-8)) + 0.019297068299999998 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(-9.9999999999999995e-8))) / mParameters[12] - 0.019297068299999998 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(-9.9999999999999995e-8))) : (4478658.9572358271 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(23.209012310102192 * var_chaste_interface__Membrane__Vm_converted / mParameters[12])) * var_chaste_interface__Membrane__Vm_converted * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / ((-1.0 + exp(23.209012310102192 * var_chaste_interface__Membrane__Vm_converted / mParameters[12])) * mParameters[12]))); // A_per_F
        const double var_i_b_Ca__i_b_Ca = 0.69264000000000003 * var_Membrane__Vm - 2.9843579327954189e-5 * mParameters[12] * log(mParameters[1] / var_chaste_interface__calcium_dynamics__Cai); // A_per_F
        const double var_i_NaCa__i_NaCa = 4900.0 * (pow(var_chaste_interface__sodium_dynamics__Nai, 3) * mParameters[1] * exp(4061.5771542678831 * var_Membrane__Vm / mParameters[12]) - 2.8571431999999999 * pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai * exp(-7542.9290007832124 * var_Membrane__Vm / mParameters[12])) / ((1.0 + 0.10000000000000001 * exp(-7542.9290007832124 * var_Membrane__Vm / mParameters[12])) * (669921.875 + pow(mParameters[3], 3)) * (1.3799999999999999 + mParameters[1])); // A_per_F
        const double d_dt_chaste_interface_var_calcium_dynamics__Cai = 0.001 * (-var_calcium_dynamics__i_up - 588878900.51341963 * (-2.0 * var_i_NaCa__i_NaCa + var_i_CaL__i_CaL + var_i_PCa__i_PCa + var_i_b_Ca__i_b_Ca) * mParameters[11] + var_calcium_dynamics__i_leak + var_calcium_dynamics__i_rel) / (1.0 + 0.00025000000000000001 / pow((0.001 + var_chaste_interface__calcium_dynamics__Cai), 2)); // millimolar / millisecond

        return d_dt_chaste_interface_var_calcium_dynamics__Cai;
    }

    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluatePartialDerivative1(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -74.3340057623841
            double var_chaste_interface__calcium_dynamics__Cai = rY[1];
            // Units: millimolar; Initial value: 1.80773974140477e-05
            double var_chaste_interface__i_CaL_d_gate__d = rY[5];
            // Units: dimensionless; Initial value: 8.96088425225182e-05
            double var_chaste_interface__i_CaL_f1_gate__f1 = rY[6];
            // Units: dimensionless; Initial value: 0.970411811263976
            double var_chaste_interface__i_CaL_f2_gate__f2 = rY[7];
            // Units: dimensionless; Initial value: 0.999965815466749
            double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[8];
            // Units: dimensionless; Initial value: 0.998925296531804
            double var_chaste_interface__sodium_dynamics__Nai = rY[15];
            // Units: millimolar; Initial value: 10.9248496211574
            double var_chaste_interface__calcium_dynamics__Ca_SR = rY[16];
            // Units: millimolar; Initial value: -0.2734234751931
            double var_chaste_interface__calcium_dynamics__g = rY[17];
            // Units: dimensionless; Initial value: 0.999999981028517
            

            const double var_x0 = mParameters[4] * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa;
            const double var_x1 = 0.019297068299999998 * var_x0;
            const double var_x2 = var_x1 * var_chaste_interface__i_CaL_f1_gate__f1;
            const double var_x3 = exp(9.9999999999999995e-8);
            const double var_x4 = 1 / (-1.0 + var_x3);
            const double var_x5 = -0.34100000000000003 * mParameters[1];
            const double var_x6 = var_x4 * (var_x5 + var_x3 * var_chaste_interface__calcium_dynamics__Cai);
            const double var_x7 = var_x2 * var_x6;
            const double var_x8 = exp(-9.9999999999999995e-8);
            const double var_x9 = 1 / (-1.0 + var_x8);
            const double var_x10 = var_x9 * (var_x5 + var_x8 * var_chaste_interface__calcium_dynamics__Cai);
            const double var_x11 = var_x10 * var_x2;
            const double var_x12 = var_x11 * var_chaste_interface__i_CaL_d_gate__d;
            const double var_x13 = 1 / mParameters[12];
            const double var_x14 = 116045061.55051096 * var_x13;
            const double var_x15 = var_x14 * (var_x12 + var_x7 * var_chaste_interface__i_CaL_d_gate__d);
            const double var_x16 = fabs(var_chaste_interface__Membrane__Vm_converted) < 4.30867107414446e-9 * fabs(mParameters[12]);
            const double var_x17 = var_x13 * var_chaste_interface__Membrane__Vm_converted;
            const double var_x18 = exp(23.209012310102192 * var_x17);
            const double var_x19 = -1.0 + var_x18;
            const double var_x20 = 1 / var_x19;
            const double var_x21 = var_x18 * var_chaste_interface__calcium_dynamics__Cai;
            const double var_x22 = var_x21 + var_x5;
            const double var_x23 = 4478658.9572358271 * var_x20 * var_x22;
            const double var_x24 = var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1;
            const double var_x25 = var_x0 * var_x24;
            const double var_x26 = var_x23 * var_x25;
            const double var_x27 = var_x20 * var_x25;
            const double var_x31 = 1 / var_chaste_interface__calcium_dynamics__Cai;
            const double var_x36 = mParameters[1] * exp(4.0615771542678836 * var_x17);
            const double var_x37 = var_x36 * pow(var_chaste_interface__sodium_dynamics__Nai, 3);
            const double var_x38 = exp(-7.5429290007832126 * var_x17);
            const double var_x39 = pow(mParameters[3], 3);
            const double var_x40 = var_x38 * var_x39;
            const double var_x41 = var_x40 * var_chaste_interface__calcium_dynamics__Cai;
            const double var_x42 = 1.0 + 0.10000000000000001 * var_x38;
            const double var_x43 = 1 / ((669921.875 + var_x39) * (1.3799999999999999 + mParameters[1]));
            const double var_x44 = var_x43 / var_x42;
            const double var_x73 = var_x37 - 2.8571431999999999 * var_x41;
            const double var_x75 = var_x2 * var_chaste_interface__i_CaL_d_gate__d;
            const double var_x76 = var_x75 * var_x8 * var_x9;
            const double var_x77 = 4.30867107414446e-9 * mParameters[12] + var_chaste_interface__Membrane__Vm_converted;
            const double var_x78 = var_x14 * var_x77;
            const double var_x79 = ((var_x16) ? (-var_x76 + var_x78 * (var_x76 + var_x3 * var_x4 * var_x75)) : (4478658.9572358271 * var_x17 * var_x18 * var_x27));
            const double var_x80 = 0.00050000000000000001 + var_chaste_interface__calcium_dynamics__Cai;
            const double var_x81 = 1 / var_x80;
            const double var_x82 = 0.41249999999999998 * var_x81;
            const double var_x83 = var_chaste_interface__calcium_dynamics__Cai / pow(var_x80, 2);
            const double var_x84 = var_x31 * mParameters[12];
            const double var_x85 = var_x40 * var_x44;
            const double var_x118 = 0.001 + var_chaste_interface__calcium_dynamics__Cai;
            const double var_x119 = 1.0 + 0.00025000000000000001 / pow(var_x118, 2);
            const double var_x120 = 1 / var_x119;
            const double var_x121 = 0.001 * var_x120;
            const double var_x122 = 1.0 + 6.2499999999999997e-8 / pow(var_chaste_interface__calcium_dynamics__Cai, 2);
            const double var_x123 = 7.0080000000000003e-8 / (pow(var_x122, 2) * pow(var_chaste_interface__calcium_dynamics__Cai, 3));
            const double var_x124 = 0.00044443999999999999 * var_chaste_interface__calcium_dynamics__Ca_SR;
            const double var_x125 = 0.56064000000000003 / var_x122;
            const double var_x126 = 0.00044443999999999999 * var_chaste_interface__calcium_dynamics__Cai;
            const double var_x127 = 588878900.51341963 * mParameters[11];
            const double var_x128 = pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2);
            const double var_x129 = 0.0625 + var_x128;
            const double var_x130 = 1 / var_x129;
            const double var_x131 = var_x128 * var_x130;
            const double var_x132 = var_chaste_interface__calcium_dynamics__g * var_chaste_interface__i_CaL_d_gate__d;
            const double var_x133 = 0.041099999999999998 * var_x132 * (8.2319999999999993 + 16.463999999999999 * var_x131);
            
            partialF = var_x121 * (-0.00044443999999999999 - var_x123 + (242912546.46178558 * var_x83 - 588878900.51341963 * var_x79 - 17574.25418203068 * var_x84 - 242912546.46178558 * var_x81 - 16488611193008.854 * var_x85) * mParameters[11]) + 4.9999999999999998e-7 * (var_x124 + var_x133 - var_x125 - var_x126 - var_x127 * (0.00069264000000000001 * var_chaste_interface__Membrane__Vm_converted + var_x82 * var_chaste_interface__calcium_dynamics__Cai - 9800.0 * var_x44 * var_x73 - 2.9843579327954189e-5 * mParameters[12] * log(var_x31 * mParameters[1]) + ((var_x16) ? (-var_x12 + var_x15 * var_x77) : (var_x17 * var_x26)))) / (pow(var_x118, 3) * pow(var_x119, 2));
        }
        else
        {
            const double y_save = rY[1];
            rY[1] += delta;
            const double temp = EvaluateYDerivative1(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[1])/delta;
            rY[1] = y_save;
        }
        return partialF;
    }
    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluateYDerivative2(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057623841
        double var_chaste_interface__i_Na_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.102953468725004
        

        // Mathematics
        const double var_Membrane__Vm = 0.001 * var_chaste_interface__Membrane__Vm_converted; // volt
        const double d_dt_chaste_interface_var_i_Na_m_gate__m = (1.0 + exp(-12.0 - 200.0 * var_Membrane__Vm)) * (-var_chaste_interface__i_Na_m_gate__m + pow((1.0 + exp(-5.7796610169491522 - 169.4915254237288 * var_Membrane__Vm)), (-0.33333333333333331))) / (0.10000000000000001 / (1.0 + exp(7.0 + 200.0 * var_Membrane__Vm)) + 0.10000000000000001 / (1.0 + exp(-0.25 + 5.0 * var_Membrane__Vm))); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Na_m_gate__m;
    }

    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluatePartialDerivative2(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -74.3340057623841
            

            const double var_x140 = 0.20000000000000001 * var_chaste_interface__Membrane__Vm_converted;
            const double var_x141 = exp(7.0 + var_x140);
            const double var_x142 = 1.0 + var_x141;
            const double var_x143 = 1 / var_x142;
            const double var_x144 = exp(-0.25 + 0.0050000000000000001 * var_chaste_interface__Membrane__Vm_converted);
            const double var_x145 = 1.0 + var_x144;
            const double var_x146 = 1 / var_x145;
            const double var_x147 = 1 / (0.10000000000000001 * var_x143 + 0.10000000000000001 * var_x146);
            const double var_x151 = exp(-12.0 - var_x140);
            const double var_x152 = 1.0 + var_x151;
            const double var_x153 = var_x147 * var_x152;
            
            partialF = -var_x153;
        }
        else
        {
            const double y_save = rY[2];
            rY[2] += delta;
            const double temp = EvaluateYDerivative2(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[2])/delta;
            rY[2] = y_save;
        }
        return partialF;
    }
    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluateYDerivative3(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057623841
        double var_chaste_interface__i_Na_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.786926637881461
        

        // Mathematics
        const double var_Membrane__Vm = 0.001 * var_chaste_interface__Membrane__Vm_converted; // volt
        const double d_dt_chaste_interface_var_i_Na_h_gate__h = 0.001 * (-var_chaste_interface__i_Na_h_gate__h + 1 / sqrt(1.0 + exp(12.649122807017543 + 175.43859649122805 * var_Membrane__Vm))) * ((var_Membrane__Vm < -0.040000000000000001) ? (38.0 * exp(-11.764705882352942 - 147.05882352941177 * var_Membrane__Vm) + 206666666.66666669 * exp(348.5 * var_Membrane__Vm) + 1800.0000000000002 * exp(79.0 * var_Membrane__Vm)) : (393.39103068450044)); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Na_h_gate__h;
    }

    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluatePartialDerivative3(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -74.3340057623841
            

            const double var_x63 = 0.001 * var_chaste_interface__Membrane__Vm_converted;
            const double var_x158 = exp(0.34849999999999998 * var_chaste_interface__Membrane__Vm_converted);
            const double var_x159 = exp(0.079000000000000001 * var_chaste_interface__Membrane__Vm_converted);
            const double var_x160 = exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__Membrane__Vm_converted);
            const double var_x163 = var_x63 < -0.040000000000000001;
            
            partialF = ((var_x163) ? (-0.037999999999999999 * var_x160 - 1.8 * var_x159 - 206666.66666666669 * var_x158) : (-0.39339103068450043));
        }
        else
        {
            const double y_save = rY[3];
            rY[3] += delta;
            const double temp = EvaluateYDerivative3(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[3])/delta;
            rY[3] = y_save;
        }
        return partialF;
    }
    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluateYDerivative4(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057623841
        double var_chaste_interface__i_Na_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.253943221774722
        

        // Mathematics
        const double var_Membrane__Vm = 0.001 * var_chaste_interface__Membrane__Vm_converted; // volt
        const double d_dt_chaste_interface_var_i_Na_j_gate__j = 0.001 * (-var_chaste_interface__i_Na_j_gate__j + 1 / sqrt(1.0 + exp(12.649122807017543 + 175.43859649122805 * var_Membrane__Vm))) * (142.85714285714286 * ((var_Membrane__Vm < -0.040000000000000001) ? (0.024240000000000001 * exp(-10.52 * var_Membrane__Vm) / (1.0 + exp(-5.5312920000000005 - 137.80000000000001 * var_Membrane__Vm))) : (0.59999999999999998 * exp(57.0 * var_Membrane__Vm) / (1.0 + exp(-3.2000000000000002 - 100.0 * var_Membrane__Vm)))) + 142.85714285714286 * ((var_Membrane__Vm < -0.040000000000000001) ? ((37.780000000000001 + 1000.0 * var_Membrane__Vm) * (-25428.0 * exp(244.40000000000001 * var_Membrane__Vm) - 6.9480000000000002e-6 * exp(-43.909999999999997 * var_Membrane__Vm)) / (1.0 + exp(24.640530000000002 + 311.0 * var_Membrane__Vm))) : (0))); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Na_j_gate__j;
    }

    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluatePartialDerivative4(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -74.3340057623841
            

            const double var_x63 = 0.001 * var_chaste_interface__Membrane__Vm_converted;
            const double var_x163 = var_x63 < -0.040000000000000001;
            const double var_x164 = exp(0.24440000000000001 * var_chaste_interface__Membrane__Vm_converted);
            const double var_x165 = exp(-0.043909999999999998 * var_chaste_interface__Membrane__Vm_converted);
            const double var_x166 = -25428.0 * var_x164 - 6.9480000000000002e-6 * var_x165;
            const double var_x167 = exp(24.640530000000002 + 0.311 * var_chaste_interface__Membrane__Vm_converted);
            const double var_x168 = 1.0 + var_x167;
            const double var_x169 = 1 / var_x168;
            const double var_x172 = exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__Membrane__Vm_converted);
            const double var_x173 = 1.0 + var_x172;
            const double var_x174 = exp(-0.01052 * var_chaste_interface__Membrane__Vm_converted);
            const double var_x175 = var_x174 / var_x173;
            const double var_x176 = 37.780000000000001 + var_chaste_interface__Membrane__Vm_converted;
            const double var_x177 = var_x166 * var_x176;
            const double var_x179 = 0.10000000000000001 * var_chaste_interface__Membrane__Vm_converted;
            const double var_x180 = exp(-3.2000000000000002 - var_x179);
            const double var_x181 = 1.0 + var_x180;
            const double var_x182 = exp(0.057000000000000002 * var_chaste_interface__Membrane__Vm_converted);
            const double var_x183 = var_x182 / var_x181;
            
            partialF = ((var_x163) ? (-0.003462857142857143 * var_x175 - 0.14285714285714285 * var_x169 * var_x177) : (-0.085714285714285715 * var_x183));
        }
        else
        {
            const double y_save = rY[4];
            rY[4] += delta;
            const double temp = EvaluateYDerivative4(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[4])/delta;
            rY[4] = y_save;
        }
        return partialF;
    }
    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluateYDerivative5(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057623841
        double var_chaste_interface__i_CaL_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 8.96088425225182e-05
        

        // Mathematics
        const double var_Membrane__Vm = 0.001 * var_chaste_interface__Membrane__Vm_converted; // volt
        const double d_dt_chaste_interface_var_i_CaL_d_gate__d = 0.001 * (-var_chaste_interface__i_CaL_d_gate__d + 1 / (1.0 + exp(-1.3 - 142.85714285714286 * var_Membrane__Vm))) / (0.001 / (1.0 + exp(2.5 - 50.0 * var_Membrane__Vm)) + 0.0014 * (0.25 + 1.3999999999999999 / (1.0 + exp(-2.6923076923076925 - 76.92307692307692 * var_Membrane__Vm))) / (1.0 + exp(1.0 + 200.0 * var_Membrane__Vm))); // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_d_gate__d;
    }

    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluatePartialDerivative5(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -74.3340057623841
            

            const double var_x140 = 0.20000000000000001 * var_chaste_interface__Membrane__Vm_converted;
            const double var_x186 = 0.050000000000000003 * var_chaste_interface__Membrane__Vm_converted;
            const double var_x187 = -var_x186;
            const double var_x188 = exp(2.5 + var_x187);
            const double var_x189 = 1.0 + var_x188;
            const double var_x190 = 1 / var_x189;
            const double var_x191 = exp(1.0 + var_x140);
            const double var_x192 = 1.0 + var_x191;
            const double var_x193 = 1 / var_x192;
            const double var_x194 = 0.076923076923076927 * var_chaste_interface__Membrane__Vm_converted;
            const double var_x195 = exp(-2.6923076923076925 - var_x194);
            const double var_x196 = 1.0 + var_x195;
            const double var_x197 = 0.25 + 1.3999999999999999 / var_x196;
            const double var_x198 = var_x193 * var_x197;
            const double var_x199 = 1 / (0.001 * var_x190 + 0.0014 * var_x198);
            
            partialF = -0.001 * var_x199;
        }
        else
        {
            const double y_save = rY[5];
            rY[5] += delta;
            const double temp = EvaluateYDerivative5(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[5])/delta;
            rY[5] = y_save;
        }
        return partialF;
    }
    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluateYDerivative6(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057623841
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 1.80773974140477e-05
        double var_chaste_interface__i_CaL_f1_gate__f1 = rY[6];
        // Units: dimensionless; Initial value: 0.970411811263976
        

        // Mathematics
        const double var_Membrane__Vm = 0.001 * var_chaste_interface__Membrane__Vm_converted; // volt
        const double var_i_CaL_f1_gate__f1_inf = 1 / (1.0 + exp(8.6666666666666661 + 333.33333333333331 * var_Membrane__Vm)); // dimensionless
        const double d_dt_chaste_interface_var_i_CaL_f1_gate__f1 = (-var_chaste_interface__i_CaL_f1_gate__f1 + var_i_CaL_f1_gate__f1_inf) * ((-var_i_CaL_f1_gate__f1_inf + var_chaste_interface__i_CaL_f1_gate__f1 < 0) ? (1 / (0.92835000000000001 + 1433.0 * var_chaste_interface__calcium_dynamics__Cai)) : (1.0)) / (20.0 + 200.0 / (1.0 + exp(1.3 - 100.0 * var_Membrane__Vm)) + 180.0 / (1.0 + exp(3.0 + 100.0 * var_Membrane__Vm)) + 1102.5 * exp(-4444444444.4444447 * pow((0.027 + var_Membrane__Vm), 4))); // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_f1_gate__f1;
    }

    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluatePartialDerivative6(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -74.3340057623841
            double var_chaste_interface__calcium_dynamics__Cai = rY[1];
            // Units: millimolar; Initial value: 1.80773974140477e-05
            double var_chaste_interface__i_CaL_f1_gate__f1 = rY[6];
            // Units: dimensionless; Initial value: 0.970411811263976
            

            const double var_x200 = 1 / (0.92835000000000001 + 1433.0 * var_chaste_interface__calcium_dynamics__Cai);
            const double var_x201 = 0.10000000000000001 * var_chaste_interface__Membrane__Vm_converted;
            const double var_x202 = exp(3.0 + var_x201);
            const double var_x203 = 1.0 + var_x202;
            const double var_x204 = 1 / var_x203;
            const double var_x205 = -var_x201;
            const double var_x206 = exp(1.3 + var_x205);
            const double var_x207 = 1.0 + var_x206;
            const double var_x208 = 1 / var_x207;
            const double var_x209 = 1 + 0.037037037037037035 * var_chaste_interface__Membrane__Vm_converted;
            const double var_x210 = exp(-2361.96 * pow(var_x209, 4));
            const double var_x211 = exp(8.6666666666666661 + 0.33333333333333331 * var_chaste_interface__Membrane__Vm_converted);
            const double var_x212 = 1.0 + var_x211;
            const double var_x213 = 1 / var_x212;
            const double var_x217 = 1 / (20.0 + 200.0 * var_x208 + 180.0 * var_x204 + 1102.5 * var_x210);
            const double var_x219 = -var_x213 + var_chaste_interface__i_CaL_f1_gate__f1 < 0;
            const double var_x220 = var_x217;
            
            partialF = ((var_x219) ? (-var_x200 * var_x220) : (-var_x220));
        }
        else
        {
            const double y_save = rY[6];
            rY[6] += delta;
            const double temp = EvaluateYDerivative6(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[6])/delta;
            rY[6] = y_save;
        }
        return partialF;
    }
    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluateYDerivative7(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057623841
        double var_chaste_interface__i_CaL_f2_gate__f2 = rY[7];
        // Units: dimensionless; Initial value: 0.999965815466749
        

        // Mathematics
        const double var_Membrane__Vm = 0.001 * var_chaste_interface__Membrane__Vm_converted; // volt
        const double d_dt_chaste_interface_var_i_CaL_f2_gate__f2 = 0.001 * (0.33000000000000002 - var_chaste_interface__i_CaL_f2_gate__f2 + 0.67000000000000004 / (1.0 + exp(8.75 + 250.0 * var_Membrane__Vm))) / (0.016 / (1.0 + exp(3.0 + 100.0 * var_Membrane__Vm)) + 0.59999999999999998 * exp(-5882.3529411764703 * pow((0.025000000000000001 + var_Membrane__Vm), 2)) + 0.031 / (1.0 + exp(2.5 - 100.0 * var_Membrane__Vm))); // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_f2_gate__f2;
    }

    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluatePartialDerivative7(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -74.3340057623841
            

            const double var_x201 = 0.10000000000000001 * var_chaste_interface__Membrane__Vm_converted;
            const double var_x202 = exp(3.0 + var_x201);
            const double var_x203 = 1.0 + var_x202;
            const double var_x204 = 1 / var_x203;
            const double var_x205 = -var_x201;
            const double var_x221 = exp(2.5 + var_x205);
            const double var_x222 = 1.0 + var_x221;
            const double var_x223 = 1 / var_x222;
            const double var_x224 = exp(-3.6764705882352939 * pow((1 + 0.040000000000000001 * var_chaste_interface__Membrane__Vm_converted), 2));
            const double var_x227 = 0.59999999999999998 * var_x224;
            const double var_x228 = 1 / (var_x227 + 0.016 * var_x204 + 0.031 * var_x223);
            
            partialF = -0.001 * var_x228;
        }
        else
        {
            const double y_save = rY[7];
            rY[7] += delta;
            const double temp = EvaluateYDerivative7(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[7])/delta;
            rY[7] = y_save;
        }
        return partialF;
    }
    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluateYDerivative8(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057623841
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 1.80773974140477e-05
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[8];
        // Units: dimensionless; Initial value: 0.998925296531804
        

        // Mathematics
        const double var_Membrane__Vm = 0.001 * var_chaste_interface__Membrane__Vm_converted; // volt
        const double var_i_CaL_fCa_gate__fCa_inf = 0.22803283672848887 / (1.0 + exp(-0.9375 + 1250.0 * var_chaste_interface__calcium_dynamics__Cai)) + 0.076010945576162961 / (1.0 + exp(-9.0 + 10000.0 * var_chaste_interface__calcium_dynamics__Cai)) + 0.76010945576162958 / (1.0 + 5.9537418076512766e+25 * pow(var_chaste_interface__calcium_dynamics__Cai, 8)); // dimensionless
        const double d_dt_chaste_interface_var_i_CaL_fCa_gate__fCa = 0.5 * (-var_chaste_interface__i_CaL_fCa_gate__fCa + var_i_CaL_fCa_gate__fCa_inf) * (((var_Membrane__Vm > -0.059999999999999998) && (var_chaste_interface__i_CaL_fCa_gate__fCa < var_i_CaL_fCa_gate__fCa_inf)) ? (0) : (1.0)); // 1 / millisecond

        return d_dt_chaste_interface_var_i_CaL_fCa_gate__fCa;
    }

    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluatePartialDerivative8(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -74.3340057623841
            double var_chaste_interface__calcium_dynamics__Cai = rY[1];
            // Units: millimolar; Initial value: 1.80773974140477e-05
            double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[8];
            // Units: dimensionless; Initial value: 0.998925296531804
            

            const double var_x63 = 0.001 * var_chaste_interface__Membrane__Vm_converted;
            const double var_x229 = var_x63 > -0.059999999999999998;
            const double var_x230 = exp(-0.9375 + 1250.0 * var_chaste_interface__calcium_dynamics__Cai);
            const double var_x231 = 1.0 + var_x230;
            const double var_x232 = exp(-9.0 + 10000.0 * var_chaste_interface__calcium_dynamics__Cai);
            const double var_x233 = 1.0 + var_x232;
            const double var_x234 = pow(var_chaste_interface__calcium_dynamics__Cai, 8);
            const double var_x235 = (var_x229) && (var_chaste_interface__i_CaL_fCa_gate__fCa < 0.22803283672848887 / var_x231 + 0.076010945576162961 / var_x233 + 0.76010945576162958 / (1.0 + 5.9537418076512766e+25 * var_x234));
            
            partialF = ((var_x235) ? (0) : (-0.5));
        }
        else
        {
            const double y_save = rY[8];
            rY[8] += delta;
            const double temp = EvaluateYDerivative8(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[8])/delta;
            rY[8] = y_save;
        }
        return partialF;
    }
    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluateYDerivative9(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057623841
        double var_chaste_interface__i_Kr_Xr1_gate__Xr1 = rY[9];
        // Units: dimensionless; Initial value: 0.00778547011240132
        

        // Mathematics
        const double var_Membrane__Vm = 0.001 * var_chaste_interface__Membrane__Vm_converted; // volt
        const double d_dt_chaste_interface_var_i_Kr_Xr1_gate__Xr1 = 0.00037037037037037035 * (1.0 + exp(2.6086956521739131 + 86.956521739130437 * var_Membrane__Vm)) * (1.0 + exp(-4.5 - 100.0 * var_Membrane__Vm)) * (-var_chaste_interface__i_Kr_Xr1_gate__Xr1 + 1 / (1.0 + exp(-3.8775510204081627 - 204.08163265306121 * var_Membrane__Vm - 0.0076462663250123509 * (-2.1789087017666886 + log(40.0 * pow((1.0 + 0.38461538461538458 * mParameters[1]), 4) / pow((0.57999999999999996 + mParameters[1]), 4))) * mParameters[12]))); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Kr_Xr1_gate__Xr1;
    }

    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluatePartialDerivative9(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -74.3340057623841
            

            const double var_x201 = 0.10000000000000001 * var_chaste_interface__Membrane__Vm_converted;
            const double var_x205 = -var_x201;
            const double var_x236 = exp(-4.5 + var_x205);
            const double var_x237 = 1.0 + var_x236;
            const double var_x241 = exp(2.6086956521739131 + 0.086956521739130432 * var_chaste_interface__Membrane__Vm_converted);
            const double var_x242 = 0.00037037037037037035 + 0.00037037037037037035 * var_x241;
            const double var_x243 = var_x237 * var_x242;
            
            partialF = -var_x243;
        }
        else
        {
            const double y_save = rY[9];
            rY[9] += delta;
            const double temp = EvaluateYDerivative9(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[9])/delta;
            rY[9] = y_save;
        }
        return partialF;
    }
    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluateYDerivative10(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057623841
        double var_chaste_interface__i_Kr_Xr2_gate__Xr2 = rY[10];
        // Units: dimensionless; Initial value: 0.432162576531617
        

        // Mathematics
        const double var_Membrane__Vm = 0.001 * var_chaste_interface__Membrane__Vm_converted; // volt
        const double d_dt_chaste_interface_var_i_Kr_Xr2_gate__Xr2 = 0.29761904761904762 * (1.0 + exp(-3.0 + 50.0 * var_Membrane__Vm)) * (1.0 + exp(-3.0 - 50.0 * var_Membrane__Vm)) * (-var_chaste_interface__i_Kr_Xr2_gate__Xr2 + 1 / (1.0 + exp(1.76 + 20.0 * var_Membrane__Vm))); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Kr_Xr2_gate__Xr2;
    }

    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluatePartialDerivative10(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -74.3340057623841
            

            const double var_x186 = 0.050000000000000003 * var_chaste_interface__Membrane__Vm_converted;
            const double var_x187 = -var_x186;
            const double var_x244 = exp(-3.0 + var_x187);
            const double var_x245 = 1.0 + var_x244;
            const double var_x249 = exp(-3.0 + var_x186);
            const double var_x250 = 0.29761904761904762 + 0.29761904761904762 * var_x249;
            const double var_x251 = var_x245 * var_x250;
            
            partialF = -var_x251;
        }
        else
        {
            const double y_save = rY[10];
            rY[10] += delta;
            const double temp = EvaluateYDerivative10(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[10])/delta;
            rY[10] = y_save;
        }
        return partialF;
    }
    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluateYDerivative11(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057623841
        double var_chaste_interface__i_Ks_Xs_gate__Xs = rY[11];
        // Units: dimensionless; Initial value: 0.0322944866983666
        

        // Mathematics
        const double var_Membrane__Vm = 0.001 * var_chaste_interface__Membrane__Vm_converted; // volt
        const double d_dt_chaste_interface_var_i_Ks_Xs_gate__Xs = 0.00090909090909090909 * sqrt(1.0 + exp(-1.6666666666666667 - 166.66666666666666 * var_Membrane__Vm)) * (1.0 + exp(-3.0 + 50.0 * var_Membrane__Vm)) * (-var_chaste_interface__i_Ks_Xs_gate__Xs + 1 / (1.0 + exp(-1.25 - 62.5 * var_Membrane__Vm))); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Ks_Xs_gate__Xs;
    }

    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluatePartialDerivative11(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -74.3340057623841
            

            const double var_x186 = 0.050000000000000003 * var_chaste_interface__Membrane__Vm_converted;
            const double var_x249 = exp(-3.0 + var_x186);
            const double var_x252 = exp(-1.6666666666666667 - 0.16666666666666666 * var_chaste_interface__Membrane__Vm_converted);
            const double var_x253 = sqrt(1.0 + var_x252);
            const double var_x257 = 1.0 + var_x249;
            const double var_x258 = var_x253 * var_x257;
            
            partialF = -0.00090909090909090909 * var_x258;
        }
        else
        {
            const double y_save = rY[11];
            rY[11] += delta;
            const double temp = EvaluateYDerivative11(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[11])/delta;
            rY[11] = y_save;
        }
        return partialF;
    }
    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluateYDerivative12(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057623841
        double var_chaste_interface__i_f_Xf_gate__Xf = rY[12];
        // Units: dimensionless; Initial value: 0.100615100568753
        

        // Mathematics
        const double var_Membrane__Vm = 0.001 * var_chaste_interface__Membrane__Vm_converted; // volt
        const double d_dt_chaste_interface_var_i_f_Xf_gate__Xf = 0.001 * (0.52631578947368418 + 0.52631578947368418 * exp(1.5 + 100.0 * var_Membrane__Vm)) * (-var_chaste_interface__i_f_Xf_gate__Xf + 1 / (1.0 + exp(15.569999999999999 + 200.0 * var_Membrane__Vm))); // 1 / millisecond

        return d_dt_chaste_interface_var_i_f_Xf_gate__Xf;
    }

    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluatePartialDerivative12(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -74.3340057623841
            

            const double var_x201 = 0.10000000000000001 * var_chaste_interface__Membrane__Vm_converted;
            const double var_x261 = exp(1.5 + var_x201);
            const double var_x262 = 0.0005263157894736842 * var_x261;
            
            partialF = -0.0005263157894736842 - var_x262;
        }
        else
        {
            const double y_save = rY[12];
            rY[12] += delta;
            const double temp = EvaluateYDerivative12(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[12])/delta;
            rY[12] = y_save;
        }
        return partialF;
    }
    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluateYDerivative13(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057623841
        double var_chaste_interface__i_to_q_gate__q = rY[13];
        // Units: dimensionless; Initial value: 0.839295925773219
        

        // Mathematics
        const double var_Membrane__Vm = 0.001 * var_chaste_interface__Membrane__Vm_converted; // volt
        const double d_dt_chaste_interface_var_i_to_q_gate__q = 0.001 * (-var_chaste_interface__i_to_q_gate__q + 1 / (1.0 + exp(4.0769230769230766 + 76.92307692307692 * var_Membrane__Vm))) / (0.0060599999999999994 + 0.039101999999999998 / (0.065000000000000002 * exp(4.593 + 100.0 * var_Membrane__Vm) + 0.56999999999999995 * exp(-3.52 - 80.0 * var_Membrane__Vm))); // 1 / millisecond

        return d_dt_chaste_interface_var_i_to_q_gate__q;
    }

    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluatePartialDerivative13(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -74.3340057623841
            

            const double var_x179 = 0.10000000000000001 * var_chaste_interface__Membrane__Vm_converted;
            const double var_x265 = exp(4.593 + var_x179);
            const double var_x266 = exp(-3.52 - 0.080000000000000002 * var_chaste_interface__Membrane__Vm_converted);
            const double var_x267 = 1 / (0.065000000000000002 * var_x265 + 0.56999999999999995 * var_x266);
            const double var_x268 = 1 / (0.0060599999999999994 + 0.039101999999999998 * var_x267);
            
            partialF = -0.001 * var_x268;
        }
        else
        {
            const double y_save = rY[13];
            rY[13] += delta;
            const double temp = EvaluateYDerivative13(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[13])/delta;
            rY[13] = y_save;
        }
        return partialF;
    }
    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluateYDerivative14(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057623841
        double var_chaste_interface__i_to_r_gate__r = rY[14];
        // Units: dimensionless; Initial value: 0.00573289893326379
        

        // Mathematics
        const double var_Membrane__Vm = 0.001 * var_chaste_interface__Membrane__Vm_converted; // volt
        const double d_dt_chaste_interface_var_i_to_r_gate__r = 0.001 * (-var_chaste_interface__i_to_r_gate__r + 1 / (1.0 + exp(1.1893333333333334 - 53.333333333333336 * var_Membrane__Vm))) / (0.0027535199999999998 + 0.01440516 / (1.0369999999999999 * exp(2.7548999999999997 + 90.0 * var_Membrane__Vm) + 0.36899999999999999 * exp(-2.8607999999999998 - 120.0 * var_Membrane__Vm))); // 1 / millisecond

        return d_dt_chaste_interface_var_i_to_r_gate__r;
    }

    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluatePartialDerivative14(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -74.3340057623841
            

            const double var_x271 = exp(2.7548999999999997 + 0.089999999999999997 * var_chaste_interface__Membrane__Vm_converted);
            const double var_x272 = exp(-2.8607999999999998 - 0.12 * var_chaste_interface__Membrane__Vm_converted);
            const double var_x273 = 1 / (1.0369999999999999 * var_x271 + 0.36899999999999999 * var_x272);
            const double var_x274 = 1 / (0.0027535199999999998 + 0.01440516 * var_x273);
            
            partialF = -0.001 * var_x274;
        }
        else
        {
            const double y_save = rY[14];
            rY[14] += delta;
            const double temp = EvaluateYDerivative14(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[14])/delta;
            rY[14] = y_save;
        }
        return partialF;
    }
    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluateYDerivative15(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057623841
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 1.80773974140477e-05
        double var_chaste_interface__i_Na_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.102953468725004
        double var_chaste_interface__i_Na_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.786926637881461
        double var_chaste_interface__i_Na_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.253943221774722
        double var_chaste_interface__sodium_dynamics__Nai = rY[15];
        // Units: millimolar; Initial value: 10.9248496211574
        

        // Mathematics
        const double var_Membrane__Vm = 0.001 * var_chaste_interface__Membrane__Vm_converted; // volt
        const double var_electric_potentials__E_Na = 8.6173421482889202e-5 * mParameters[12] * log(mParameters[3] / var_chaste_interface__sodium_dynamics__Nai); // volt
        const double var_i_Na__i_Na = pow(var_chaste_interface__i_Na_m_gate__m, 3) * (-var_electric_potentials__E_Na + var_Membrane__Vm) * mParameters[5] * var_chaste_interface__i_Na_h_gate__h * var_chaste_interface__i_Na_j_gate__j; // A_per_F
        const double var_i_NaCa__i_NaCa = 4900.0 * (pow(var_chaste_interface__sodium_dynamics__Nai, 3) * mParameters[1] * exp(4061.5771542678831 * var_Membrane__Vm / mParameters[12]) - 2.8571431999999999 * pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai * exp(-7542.9290007832124 * var_Membrane__Vm / mParameters[12])) / ((1.0 + 0.10000000000000001 * exp(-7542.9290007832124 * var_Membrane__Vm / mParameters[12])) * (669921.875 + pow(mParameters[3], 3)) * (1.3799999999999999 + mParameters[1])); // A_per_F
        const double var_i_NaK__i_NaK = 1.8414239999999999 * mParameters[2] * var_chaste_interface__sodium_dynamics__Nai / ((1.0 + mParameters[2]) * (40.0 + var_chaste_interface__sodium_dynamics__Nai) * (1.0 + 0.035299999999999998 * exp(-11604.506155051095 * var_Membrane__Vm / mParameters[12]) + 0.1245 * exp(-1160.4506155051097 * var_Membrane__Vm / mParameters[12]))); // A_per_F
        const double var_i_b_Na__i_b_Na = 0.90000000000000002 * var_Membrane__Vm - 0.90000000000000002 * var_electric_potentials__E_Na; // A_per_F
        const double d_dt_chaste_interface_var_sodium_dynamics__Nai = -1177757.8010268393 * (3.0 * var_i_NaCa__i_NaCa + 3.0 * var_i_NaK__i_NaK + var_i_Na__i_Na + var_i_b_Na__i_b_Na) * mParameters[11]; // millimolar / millisecond

        return d_dt_chaste_interface_var_sodium_dynamics__Nai;
    }

    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluatePartialDerivative15(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -74.3340057623841
            double var_chaste_interface__i_Na_m_gate__m = rY[2];
            // Units: dimensionless; Initial value: 0.102953468725004
            double var_chaste_interface__i_Na_h_gate__h = rY[3];
            // Units: dimensionless; Initial value: 0.786926637881461
            double var_chaste_interface__i_Na_j_gate__j = rY[4];
            // Units: dimensionless; Initial value: 0.253943221774722
            double var_chaste_interface__sodium_dynamics__Nai = rY[15];
            // Units: millimolar; Initial value: 10.9248496211574
            

            const double var_x13 = 1 / mParameters[12];
            const double var_x17 = var_x13 * var_chaste_interface__Membrane__Vm_converted;
            const double var_x36 = mParameters[1] * exp(4.0615771542678836 * var_x17);
            const double var_x38 = exp(-7.5429290007832126 * var_x17);
            const double var_x39 = pow(mParameters[3], 3);
            const double var_x42 = 1.0 + 0.10000000000000001 * var_x38;
            const double var_x43 = 1 / ((669921.875 + var_x39) * (1.3799999999999999 + mParameters[1]));
            const double var_x44 = var_x43 / var_x42;
            const double var_x47 = pow(var_chaste_interface__i_Na_m_gate__m, 3) * mParameters[5];
            const double var_x48 = var_x47 * var_chaste_interface__i_Na_j_gate__j;
            const double var_x67 = 1 / (1.0 + mParameters[2]);
            const double var_x68 = 1 / (40.0 + var_chaste_interface__sodium_dynamics__Nai);
            const double var_x69 = exp(-11.604506155051096 * var_x17);
            const double var_x70 = exp(-1.1604506155051095 * var_x17);
            const double var_x71 = 1.0 + 0.035299999999999998 * var_x69 + 0.1245 * var_x70;
            const double var_x89 = 1 / var_chaste_interface__sodium_dynamics__Nai;
            const double var_x112 = var_x89 * mParameters[12];
            const double var_x113 = var_x67 * mParameters[2] / var_x71;
            const double var_x114 = var_x113 * var_x68;
            const double var_x115 = var_x113 * var_chaste_interface__sodium_dynamics__Nai / pow((1 + 0.025000000000000001 * var_chaste_interface__sodium_dynamics__Nai), 2);
            const double var_x116 = var_x36 * var_x44 * pow(var_chaste_interface__sodium_dynamics__Nai, 2);
            const double var_x117 = var_x48 * var_chaste_interface__i_Na_h_gate__h;
            
            partialF = (4066.4090268713371 * var_x115 - 51939119025.283607 * var_x116 - 91.342277453381911 * var_x112 - 6506254.4429941392 * var_x114 - 101.49141939264658 * var_x112 * var_x117) * mParameters[11];
        }
        else
        {
            const double y_save = rY[15];
            rY[15] += delta;
            const double temp = EvaluateYDerivative15(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[15])/delta;
            rY[15] = y_save;
        }
        return partialF;
    }
    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluateYDerivative16(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 1.80773974140477e-05
        double var_chaste_interface__i_CaL_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 8.96088425225182e-05
        double var_chaste_interface__calcium_dynamics__Ca_SR = rY[16];
        // Units: millimolar; Initial value: -0.2734234751931
        double var_chaste_interface__calcium_dynamics__g = rY[17];
        // Units: dimensionless; Initial value: 0.999999981028517
        

        // Mathematics
        const double var_calcium_dynamics__i_leak = 0.00044443999999999999 * var_chaste_interface__calcium_dynamics__Ca_SR - 0.00044443999999999999 * var_chaste_interface__calcium_dynamics__Cai; // millimolar_per_second
        const double var_calcium_dynamics__i_up = 0.56064000000000003 / (1.0 + 6.2499999999999997e-8 / pow(var_chaste_interface__calcium_dynamics__Cai, 2)); // millimolar_per_second
        const double var_calcium_dynamics__i_rel = 0.041099999999999998 * (8.2319999999999993 + 16.463999999999999 * pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2) / (0.0625 + pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2))) * var_chaste_interface__calcium_dynamics__g * var_chaste_interface__i_CaL_d_gate__d; // millimolar_per_second
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_SR = 0.015075462970894076 * (-var_calcium_dynamics__i_leak - var_calcium_dynamics__i_rel + var_calcium_dynamics__i_up) / (1.0 + 3.0 / pow((0.29999999999999999 + var_chaste_interface__calcium_dynamics__Ca_SR), 2)); // millimolar / millisecond

        return d_dt_chaste_interface_var_calcium_dynamics__Ca_SR;
    }

    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluatePartialDerivative16(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__calcium_dynamics__Cai = rY[1];
            // Units: millimolar; Initial value: 1.80773974140477e-05
            double var_chaste_interface__i_CaL_d_gate__d = rY[5];
            // Units: dimensionless; Initial value: 8.96088425225182e-05
            double var_chaste_interface__calcium_dynamics__Ca_SR = rY[16];
            // Units: millimolar; Initial value: -0.2734234751931
            double var_chaste_interface__calcium_dynamics__g = rY[17];
            // Units: dimensionless; Initial value: 0.999999981028517
            

            const double var_x122 = 1.0 + 6.2499999999999997e-8 / pow(var_chaste_interface__calcium_dynamics__Cai, 2);
            const double var_x124 = 0.00044443999999999999 * var_chaste_interface__calcium_dynamics__Ca_SR;
            const double var_x125 = 0.56064000000000003 / var_x122;
            const double var_x126 = 0.00044443999999999999 * var_chaste_interface__calcium_dynamics__Cai;
            const double var_x128 = pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2);
            const double var_x129 = 0.0625 + var_x128;
            const double var_x130 = 1 / var_x129;
            const double var_x131 = var_x128 * var_x130;
            const double var_x132 = var_chaste_interface__calcium_dynamics__g * var_chaste_interface__i_CaL_d_gate__d;
            const double var_x133 = 0.041099999999999998 * var_x132 * (8.2319999999999993 + 16.463999999999999 * var_x131);
            const double var_x138 = 1.3533407999999998 * var_x130 * var_chaste_interface__calcium_dynamics__Ca_SR;
            const double var_x139 = 1.3533407999999998 * pow(var_chaste_interface__calcium_dynamics__Ca_SR, 3) / pow(var_x129, 2);
            const double var_x276 = 0.29999999999999999 + var_chaste_interface__calcium_dynamics__Ca_SR;
            const double var_x277 = pow(var_x276, (-2));
            const double var_x278 = 0.015075462970894076 / (1.0 + 3.0 * var_x277);
            
            partialF = var_x278 * (-0.00044443999999999999 + var_x132 * (var_x139 - var_x138)) + 0.010050308647262718 * (var_x125 + var_x126 - var_x124 - var_x133) / (pow(var_x276, 3) * pow((0.33333333333333337 + var_x277), 2));
        }
        else
        {
            const double y_save = rY[16];
            rY[16] += delta;
            const double temp = EvaluateYDerivative16(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[16])/delta;
            rY[16] = y_save;
        }
        return partialF;
    }
    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluateYDerivative17(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057623841
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 1.80773974140477e-05
        double var_chaste_interface__calcium_dynamics__g = rY[17];
        // Units: dimensionless; Initial value: 0.999999981028517
        

        // Mathematics
        const double var_Membrane__Vm = 0.001 * var_chaste_interface__Membrane__Vm_converted; // volt
        const double var_calcium_dynamics__g_inf = ((var_chaste_interface__calcium_dynamics__Cai <= 0.00035) ? (1 / (1.0 + 5.439910241481016e+20 * pow(var_chaste_interface__calcium_dynamics__Cai, 6))) : (1 / (1.0 + 1.9720198874049176e+55 * pow(var_chaste_interface__calcium_dynamics__Cai, 16)))); // dimensionless
        const double d_dt_chaste_interface_var_calcium_dynamics__g = 0.5 * (-var_chaste_interface__calcium_dynamics__g + var_calcium_dynamics__g_inf) * (((var_Membrane__Vm > -0.059999999999999998) && (var_chaste_interface__calcium_dynamics__g < var_calcium_dynamics__g_inf)) ? (0) : (1.0)); // 1 / millisecond

        return d_dt_chaste_interface_var_calcium_dynamics__g;
    }

    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::EvaluatePartialDerivative17(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -74.3340057623841
            double var_chaste_interface__calcium_dynamics__Cai = rY[1];
            // Units: millimolar; Initial value: 1.80773974140477e-05
            double var_chaste_interface__calcium_dynamics__g = rY[17];
            // Units: dimensionless; Initial value: 0.999999981028517
            

            const double var_x63 = 0.001 * var_chaste_interface__Membrane__Vm_converted;
            const double var_x229 = var_x63 > -0.059999999999999998;
            const double var_x280 = var_chaste_interface__calcium_dynamics__Cai <= 0.00035;
            const double var_x281 = pow(var_chaste_interface__calcium_dynamics__Cai, 16);
            const double var_x282 = (var_x280) || (var_chaste_interface__calcium_dynamics__g < 1 / (1.0 + 1.9720198874049176e+55 * var_x281));
            const double var_x283 = pow(var_chaste_interface__calcium_dynamics__Cai, 6);
            const double var_x284 = (var_chaste_interface__calcium_dynamics__Cai > 0.00035) || (var_chaste_interface__calcium_dynamics__g < 1 / (1.0 + 5.439910241481016e+20 * var_x283));
            const double var_x285 = (var_x229) && (var_x280) && (var_x282) && (var_x284);
            const double var_x286 = (var_x229) && (var_x282) && (var_x284);
            
            partialF = ((var_x285) ? (0) : ((var_x280) ? (-0.5) : ((var_x286) ? (0) : (-0.5))));
        }
        else
        {
            const double y_save = rY[17];
            rY[17] += delta;
            const double temp = EvaluateYDerivative17(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[17])/delta;
            rY[17] = y_save;
        }
        return partialF;
    }

    std::vector<double> Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt::ComputeDerivedQuantities(double var_chaste_interface__environment__time_converted, const std::vector<double> & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__Membrane__Vm_converted = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057623841
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 1.80773974140477e-05
        double var_chaste_interface__i_Na_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.102953468725004
        double var_chaste_interface__i_Na_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.786926637881461
        double var_chaste_interface__i_Na_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.253943221774722
        double var_chaste_interface__i_CaL_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 8.96088425225182e-05
        double var_chaste_interface__i_CaL_f1_gate__f1 = rY[6];
        // Units: dimensionless; Initial value: 0.970411811263976
        double var_chaste_interface__i_CaL_f2_gate__f2 = rY[7];
        // Units: dimensionless; Initial value: 0.999965815466749
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[8];
        // Units: dimensionless; Initial value: 0.998925296531804
        double var_chaste_interface__i_Kr_Xr1_gate__Xr1 = rY[9];
        // Units: dimensionless; Initial value: 0.00778547011240132
        double var_chaste_interface__i_Kr_Xr2_gate__Xr2 = rY[10];
        // Units: dimensionless; Initial value: 0.432162576531617
        double var_chaste_interface__i_Ks_Xs_gate__Xs = rY[11];
        // Units: dimensionless; Initial value: 0.0322944866983666
        double var_chaste_interface__i_f_Xf_gate__Xf = rY[12];
        // Units: dimensionless; Initial value: 0.100615100568753
        double var_chaste_interface__i_to_q_gate__q = rY[13];
        // Units: dimensionless; Initial value: 0.839295925773219
        double var_chaste_interface__i_to_r_gate__r = rY[14];
        // Units: dimensionless; Initial value: 0.00573289893326379
        double var_chaste_interface__sodium_dynamics__Nai = rY[15];
        // Units: millimolar; Initial value: 10.9248496211574
        
        // Mathematics
        const double var_Membrane__Vm = 0.001 * var_chaste_interface__Membrane__Vm_converted; // volt
        const double var_calcium_dynamics__Buf_C = 0.25; // millimolar
        const double var_calcium_dynamics__Kbuf_C = 0.001; // millimolar
        const double var_calcium_dynamics__Cai_bufc = 1 / (1.0 + var_calcium_dynamics__Buf_C * var_calcium_dynamics__Kbuf_C / pow((var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__Kbuf_C), 2)); // dimensionless
        const double var_current_blockers__Chromanol_iKs30 = 0; // dimensionless
        const double var_current_blockers__Chromanol_iKs50 = 0; // dimensionless
        const double var_current_blockers__Chromanol_iKs70 = 0; // dimensionless
        const double var_current_blockers__Chromanol_iKs90 = 0; // dimensionless
        const double var_current_blockers__E4031_100nM = 0; // dimensionless
        const double var_current_blockers__E4031_30nM = 0; // dimensionless
        const double var_current_blockers__TTX_10uM = 0; // dimensionless
        const double var_current_blockers__TTX_30uM = 0; // dimensionless
        const double var_current_blockers__TTX_3uM = 0; // dimensionless
        const double var_electric_potentials__PkNa = 0.029999999999999999; // dimensionless
        const double var_i_Kr__E4031_coeff = ((var_current_blockers__E4031_30nM == 1.0) ? (0.77000000000000002) : ((var_current_blockers__E4031_100nM == 1.0) ? (0.5) : (1.0))); // dimensionless
        const double var_i_Ks__Chromanol_coeff = ((var_current_blockers__Chromanol_iKs30 == 1.0) ? (0.69999999999999996) : ((var_current_blockers__Chromanol_iKs50 == 1.0) ? (0.5) : ((var_current_blockers__Chromanol_iKs70 == 1.0) ? (0.29999999999999999) : ((var_current_blockers__Chromanol_iKs90 == 1.0) ? (0.10000000000000001) : (1.0))))); // dimensionless
        const double var_i_Ks__g_Ks_total = (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * mParameters[9]; // S_per_F
        const double var_i_Na__TTX_coeff = ((var_current_blockers__TTX_3uM == 1.0) ? (0.17999999999999999) : ((var_current_blockers__TTX_10uM == 1.0) ? (0.059999999999999998) : ((var_current_blockers__TTX_30uM == 1.0) ? (0.02) : (1.0)))); // dimensionless
        const double var_i_NaCa__KmCa = 1.3799999999999999; // millimolar
        const double var_i_NaCa__KmNai = 87.5; // millimolar
        const double var_i_NaCa__Ksat = 0.10000000000000001; // dimensionless
        const double var_i_NaCa__alpha = 2.8571431999999999; // dimensionless
        const double var_i_NaCa__gamma = 0.34999999999999998; // dimensionless
        const double var_i_NaCa__kNaCa = 4900.0; // A_per_F
        const double var_i_NaK__Km_K = 1.0; // millimolar
        const double var_i_NaK__Km_Na = 40.0; // millimolar
        const double var_i_NaK__PNaK = 1.8414239999999999; // A_per_F
        const double var_i_PCa__KPCa = 0.00050000000000000001; // millimolar
        const double var_i_PCa__g_PCa = 0.41249999999999998; // A_per_F
        const double var_i_PCa__i_PCa = var_chaste_interface__calcium_dynamics__Cai * var_i_PCa__g_PCa / (var_chaste_interface__calcium_dynamics__Cai + var_i_PCa__KPCa); // A_per_F
        const double var_i_PCa__i_PCa_converted = HeartConfig::Instance()->GetCapacitance() * var_i_PCa__i_PCa; // uA_per_cm2
        const double var_i_f__E_f = -0.017000000000000001; // volt
        const double var_i_f__i_f = (-var_i_f__E_f + var_Membrane__Vm) * mParameters[6] * var_chaste_interface__i_f_Xf_gate__Xf; // A_per_F
        const double var_i_f__i_f_converted = HeartConfig::Instance()->GetCapacitance() * var_i_f__i_f; // uA_per_cm2
        const double var_model_parameters__Cm_converted = 1000000.0 * mParameters[11]; // uF
        const double var_model_parameters__F = 96485.341499999995; // coulomb_per_mole
        const double var_i_K1__g_K1_total = 0.43033148291193518 * sqrt(mParameters[2]) * mParameters[7]; // S_per_F
        const double var_i_Kr__g_Kr_total = 0.43033148291193518 * sqrt(mParameters[2]) * mParameters[8]; // S_per_F
        const double var_model_parameters__R = 8.3144720000000003; // joule_per_mole_kelvin
        const double var_electric_potentials__E_K = var_model_parameters__R * mParameters[12] * log(mParameters[2] / mParameters[0]) / var_model_parameters__F; // volt
        const double var_i_CaL__i_CaL = ((fabs(var_chaste_interface__Membrane__Vm_converted) < 4.30867107414446e-9 * fabs(mParameters[12])) ? (116045061.55051096 * (4.30867107414446e-9 * mParameters[12] + var_chaste_interface__Membrane__Vm_converted) * (0.019297068299999998 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(9.9999999999999995e-8)) + 0.019297068299999998 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(-9.9999999999999995e-8))) / mParameters[12] - 0.019297068299999998 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / (-1.0 + exp(-9.9999999999999995e-8))) : (4478658.9572358271 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(23.209012310102192 * var_chaste_interface__Membrane__Vm_converted / mParameters[12])) * var_chaste_interface__Membrane__Vm_converted * mParameters[4] * var_chaste_interface__i_CaL_d_gate__d * var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa / ((-1.0 + exp(23.209012310102192 * var_chaste_interface__Membrane__Vm_converted / mParameters[12])) * mParameters[12]))); // A_per_F
        const double var_i_CaL__i_CaL_converted = HeartConfig::Instance()->GetCapacitance() * var_i_CaL__i_CaL; // uA_per_cm2
        const double var_i_K1__alpha_K1 = 3.9100000000000001 / (1.0 + exp(-118.83999999999999 + 594.19999999999993 * var_Membrane__Vm - 594.19999999999993 * var_electric_potentials__E_K)); // dimensionless
        const double var_i_K1__beta_K1 = (-1.5089999999999999 * exp(0.02 + 0.20000000000000001 * var_Membrane__Vm - 0.20000000000000001 * var_electric_potentials__E_K) + exp(-5.8860000000000001 + 588.60000000000002 * var_Membrane__Vm - 588.60000000000002 * var_electric_potentials__E_K)) / (1.0 + exp(454.69999999999999 * var_Membrane__Vm - 454.69999999999999 * var_electric_potentials__E_K)); // dimensionless
        const double var_i_K1__XK1_inf = var_i_K1__alpha_K1 / (var_i_K1__alpha_K1 + var_i_K1__beta_K1); // dimensionless
        const double var_i_K1__i_K1 = (-var_electric_potentials__E_K + var_Membrane__Vm) * var_i_K1__XK1_inf * var_i_K1__g_K1_total; // A_per_F
        const double var_i_K1__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_i_K1__i_K1; // uA_per_cm2
        const double var_i_Kr__i_Kr = (-var_electric_potentials__E_K + var_Membrane__Vm) * var_i_Kr__E4031_coeff * var_i_Kr__g_Kr_total * var_chaste_interface__i_Kr_Xr1_gate__Xr1 * var_chaste_interface__i_Kr_Xr2_gate__Xr2; // A_per_F
        const double var_i_Kr__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_i_Kr__i_Kr; // uA_per_cm2
        const double var_i_to__i_to = (-var_electric_potentials__E_K + var_Membrane__Vm) * mParameters[10] * var_chaste_interface__i_to_q_gate__q * var_chaste_interface__i_to_r_gate__r; // A_per_F
        const double var_i_to__i_to_converted = HeartConfig::Instance()->GetCapacitance() * var_i_to__i_to; // uA_per_cm2
        const double var_electric_potentials__E_Ks = var_model_parameters__R * mParameters[12] * log((var_electric_potentials__PkNa * mParameters[3] + mParameters[2]) / (var_electric_potentials__PkNa * var_chaste_interface__sodium_dynamics__Nai + mParameters[0])) / var_model_parameters__F; // volt
        const double var_electric_potentials__E_Na = var_model_parameters__R * mParameters[12] * log(mParameters[3] / var_chaste_interface__sodium_dynamics__Nai) / var_model_parameters__F; // volt
        const double var_i_Ks__i_Ks = pow(var_chaste_interface__i_Ks_Xs_gate__Xs, 2) * (-var_electric_potentials__E_Ks + var_Membrane__Vm) * var_i_Ks__Chromanol_coeff * var_i_Ks__g_Ks_total; // A_per_F
        const double var_i_Ks__i_Ks_converted = HeartConfig::Instance()->GetCapacitance() * var_i_Ks__i_Ks; // uA_per_cm2
        const double var_i_Na__i_Na = pow(var_chaste_interface__i_Na_m_gate__m, 3) * (-var_electric_potentials__E_Na + var_Membrane__Vm) * var_i_Na__TTX_coeff * mParameters[5] * var_chaste_interface__i_Na_h_gate__h * var_chaste_interface__i_Na_j_gate__j; // A_per_F
        const double var_i_Na__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_i_Na__i_Na; // uA_per_cm2
        const double var_i_NaCa__i_NaCa = (pow(var_chaste_interface__sodium_dynamics__Nai, 3) * mParameters[1] * exp(var_Membrane__Vm * var_i_NaCa__gamma * var_model_parameters__F / (var_model_parameters__R * mParameters[12])) - pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai * var_i_NaCa__alpha * exp((-1.0 + var_i_NaCa__gamma) * var_Membrane__Vm * var_model_parameters__F / (var_model_parameters__R * mParameters[12]))) * var_i_NaCa__kNaCa / ((1.0 + var_i_NaCa__Ksat * exp((-1.0 + var_i_NaCa__gamma) * var_Membrane__Vm * var_model_parameters__F / (var_model_parameters__R * mParameters[12]))) * (pow(var_i_NaCa__KmNai, 3) + pow(mParameters[3], 3)) * (var_i_NaCa__KmCa + mParameters[1])); // A_per_F
        const double var_i_NaCa__i_NaCa_converted = HeartConfig::Instance()->GetCapacitance() * var_i_NaCa__i_NaCa; // uA_per_cm2
        const double var_i_NaK__i_NaK = var_i_NaK__PNaK * mParameters[2] * var_chaste_interface__sodium_dynamics__Nai / ((var_i_NaK__Km_K + mParameters[2]) * (var_i_NaK__Km_Na + var_chaste_interface__sodium_dynamics__Nai) * (1.0 + 0.035299999999999998 * exp(-var_Membrane__Vm * var_model_parameters__F / (var_model_parameters__R * mParameters[12])) + 0.1245 * exp(-0.10000000000000001 * var_Membrane__Vm * var_model_parameters__F / (var_model_parameters__R * mParameters[12])))); // A_per_F
        const double var_i_NaK__i_NaK_converted = HeartConfig::Instance()->GetCapacitance() * var_i_NaK__i_NaK; // uA_per_cm2
        const double var_stim_mode__i_stim_converted = -GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2

        std::vector<double> dqs(18);
        dqs[0] = var_calcium_dynamics__Cai_bufc;
        dqs[1] = var_i_CaL__i_CaL_converted;
        dqs[2] = var_i_PCa__i_PCa_converted;
        dqs[3] = var_model_parameters__Cm_converted;
        dqs[4] = var_i_Na__i_Na_converted;
        dqs[5] = var_i_f__i_f_converted;
        dqs[6] = var_i_K1__i_K1_converted;
        dqs[7] = var_i_K1__g_K1_total;
        dqs[8] = var_i_Kr__i_Kr_converted;
        dqs[9] = var_i_Kr__g_Kr_total;
        dqs[10] = var_i_Ks__i_Ks_converted;
        dqs[11] = var_i_Ks__g_Ks_total;
        dqs[12] = var_i_NaCa__i_NaCa_converted;
        dqs[13] = var_i_NaK__i_NaK_converted;
        dqs[14] = var_stim_mode__i_stim_converted;
        dqs[15] = var_i_to__i_to_converted;
        dqs[16] = var_chaste_interface__Membrane__Vm_converted;
        dqs[17] = var_chaste_interface__environment__time_converted;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt>::Initialise(void)
{
    this->mSystemName = "paci_hyttinen_aaltosetala_severi_ventricularVersion";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-74.3340057623841);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.80773974140477e-05);

    // rY[2]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.102953468725004);

    // rY[3]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.786926637881461);

    // rY[4]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.253943221774722);

    // rY[5]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.96088425225182e-05);

    // rY[6]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.970411811263976);

    // rY[7]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f2_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999965815466749);

    // rY[8]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_fCa_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.998925296531804);

    // rY[9]:
    this->mVariableNames.push_back("i_Kr_Xr1_gate__Xr1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00778547011240132);

    // rY[10]:
    this->mVariableNames.push_back("i_Kr_Xr2_gate__Xr2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.432162576531617);

    // rY[11]:
    this->mVariableNames.push_back("i_Ks_Xs_gate__Xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0322944866983666);

    // rY[12]:
    this->mVariableNames.push_back("membrane_hyperpolarisation_activated_funny_current_single_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.100615100568753);

    // rY[13]:
    this->mVariableNames.push_back("i_to_q_gate__q");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.839295925773219);

    // rY[14]:
    this->mVariableNames.push_back("i_to_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00573289893326379);

    // rY[15]:
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(10.9248496211574);

    // rY[16]:
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(-0.2734234751931);

    // rY[17]:
    this->mVariableNames.push_back("calcium_dynamics__g");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999999981028517);

    // mParameters[0]:
    this->mParameterNames.push_back("cytosolic_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[1]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[2]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[3]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[4]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("metre_cube_per_F_per_s");

    // mParameters[5]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("S_per_F");

    // mParameters[6]:
    this->mParameterNames.push_back("membrane_hyperpolarisation_activated_funny_current_potassium_component_conductance");
    this->mParameterUnits.push_back("S_per_F");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("S_per_F");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("S_per_F");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance_scaling_factor");
    this->mParameterUnits.push_back("S_per_F");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
    this->mParameterUnits.push_back("S_per_F");

    // mParameters[11]:
    this->mParameterNames.push_back("model_parameters__Cm");
    this->mParameterUnits.push_back("farad");

    // mParameters[12]:
    this->mParameterNames.push_back("temperature");
    this->mParameterUnits.push_back("kelvin");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("cytosolic_calcium_flux_scaling_from_intrinsic_buffers");
    this->mDerivedQuantityUnits.push_back("dimensionless");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_calcium_pump_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_capacitance");
    this->mDerivedQuantityUnits.push_back("uF");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_hyperpolarisation_activated_funny_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mDerivedQuantityUnits.push_back("S_per_F");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mDerivedQuantityUnits.push_back("S_per_F");

    // Derived Quantity index [10]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [11]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mDerivedQuantityUnits.push_back("S_per_F");

    // Derived Quantity index [12]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [13]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_potassium_pump_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [14]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [15]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [16]:
    this->mDerivedQuantityNames.push_back("membrane_voltage");
    this->mDerivedQuantityUnits.push_back("millivolt");

    // Derived Quantity index [17]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLGRL1Opt)

