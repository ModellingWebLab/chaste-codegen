//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: aslanidi_2009
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: GeneralizedRushLarsenFirstOrderOpt)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "aslanidi_Purkinje_model_2009.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables : public AbstractLookupTableCollection
{
public:
    static Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables);
        }
        return mpInstance.get();
    }

    void FreeMemory()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }

    // Row lookup methods
    // using linear-interpolation

    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<35; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }


    const double * IndexTable0(double var_chaste_interface__membrane__V)
    {
        const double _offset_0 = var_chaste_interface__membrane__V - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }


// LCOV_EXCL_START
    bool CheckIndex0(double& var_chaste_interface__membrane__V)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__membrane__V>mTableMaxs[0] || var_chaste_interface__membrane__V<mTableMins[0])
        {
// LCOV_EXCL_START
            _oob_0 = true;
// LCOV_EXCL_STOP
        }
        return _oob_0;
    }
// LCOV_EXCL_STOP

    ~Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

    }

protected:
    Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables(const Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables&);
    Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables& operator= (const Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables&);
    Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);

        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 35;
        mTableMins[0] = -250.0;
        mTableMaxs[0] = 550.0;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;

        Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::RegenerateTables();
    }

    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);


        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][35];

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = -100.0 * exp(0.037435883507802616 * var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[0] < 2){
                    double left = _lookup_table_0[i-1][0];
                    double right = _lookup_table_0[i+1][0];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 0 at ["<<i<<"][0] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[0] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[0] >= 2){
                    EXCEPTION("Lookup table 0 at ["<<i<<"][0] has non-finite value: " << val);
                }
                _lookup_table_0[i][0] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 - exp(0.037435883507802616 * var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[1] < 2){
                    double left = _lookup_table_0[i-1][1];
                    double right = _lookup_table_0[i+1][1];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 1 at ["<<i<<"][1] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[1] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[1] >= 2){
                    EXCEPTION("Lookup table 1 at ["<<i<<"][1] has non-finite value: " << val);
                }
                _lookup_table_0[i][1] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][2] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-0.024333324280071702 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][3] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(0.013102559227730915 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][4] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + 0.27000000000000002 * exp(-0.024333324280071702 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][5] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-0.037435883507802616 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][6] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.1245 * exp(-0.003743588350780262 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][7] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0 + exp(-0.26470588235294124 + 0.049019607843137261 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][8] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(-1.1230765052340785 + 0.074871767015605231 * var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[9] < 2){
                    double left = _lookup_table_0[i-1][9];
                    double right = _lookup_table_0[i+1][9];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 9 at ["<<i<<"][9] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[9] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[9] >= 2){
                    EXCEPTION("Lookup table 9 at ["<<i<<"][9] has non-finite value: " << val);
                }
                _lookup_table_0[i][9] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = -1.0 + exp(-1.1230765052340785 + 0.074871767015605231 * var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[10] < 2){
                    double left = _lookup_table_0[i-1][10];
                    double right = _lookup_table_0[i+1][10];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 10 at ["<<i<<"][10] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[10] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[10] >= 2){
                    EXCEPTION("Lookup table 10 at ["<<i<<"][10] has non-finite value: " << val);
                }
                _lookup_table_0[i][10] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = exp(0.074871767015605231 * var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[11] < 2){
                    double left = _lookup_table_0[i-1][11];
                    double right = _lookup_table_0[i+1][11];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 11 at ["<<i<<"][11] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[11] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[11] >= 2){
                    EXCEPTION("Lookup table 11 at ["<<i<<"][11] has non-finite value: " << val);
                }
                _lookup_table_0[i][11] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = -1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[12] < 2){
                    double left = _lookup_table_0[i-1][12];
                    double right = _lookup_table_0[i+1][12];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 12 at ["<<i<<"][12] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[12] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[12] >= 2){
                    EXCEPTION("Lookup table 12 at ["<<i<<"][12] has non-finite value: " << val);
                }
                _lookup_table_0[i][12] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(0.59347181008902072 - 0.14836795252225518 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][13] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.58999999999999997 + 0.80000000000000004 * exp(0.67599999999999993 + 0.051999999999999998 * var_chaste_interface__membrane__V) / (1.0 + exp(1.7160000000000002 + 0.13200000000000001 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][14] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(1.8 + 0.10000000000000001 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][15] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-5.4098360655737707 - 0.16393442622950821 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][16] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1.0680000000000001 * exp(0.54333333333333333 + 0.033333333333333333 * var_chaste_interface__membrane__V) + 1.0680000000000001 * exp(-0.54333333333333333 - 0.033333333333333333 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][17] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(9.0909090909090917 + 0.15151515151515152 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][18] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.014999999999999999 * exp(4.6558441558441563 + 0.064935064935064929 * var_chaste_interface__membrane__V) + 0.014999999999999999 * exp(-0.86074429771908767 - 0.012004801920768308 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][19] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(-0.0069387755102040824 - 0.081632653061224483 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][20] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 100.0 + 900.0 / (1.0 + exp(0.20000000000000001 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][21] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(0.65693430656934315 - 0.072992700729927015 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][22] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = ((fabs(-0.55000000000000004 + var_chaste_interface__membrane__V) < 7.8124999999948028e-7) ? (-2.8124999999965681e-10 / (-1.0 + exp(-9.999999999987797e-8)) + 7.6100000000000007e-5 * (44.600000000000001 + var_chaste_interface__membrane__V) / (1.0 - exp(-444.66200000000003 - 9.9700000000000006 * var_chaste_interface__membrane__V)) + 640000.00000042573 * (-0.54999921875000002 + var_chaste_interface__membrane__V) * (2.8124999999996902e-10 / (-1.0 + exp(9.9999999999988984e-8)) + 2.8124999999965681e-10 / (-1.0 + exp(-9.999999999987797e-8)))) : ((fabs(44.600000000000001 + var_chaste_interface__membrane__V) < 1.0030090258350555e-8) ? (7.6328986866047728e-13 / (1.0 - exp(-9.9999999875755032e-8)) + 0.00036000000000000002 * (-0.55000000000000004 + var_chaste_interface__membrane__V) / (-1.0 + exp(-0.070400000000000004 + 0.128 * var_chaste_interface__membrane__V)) - 49850000.061936118 * (44.599999989969909 + var_chaste_interface__membrane__V) * (-7.6328986866047728e-13 / (1.0 - exp(9.9999999875755032e-8)) - 7.6328986866047728e-13 / (1.0 - exp(-9.9999999875755032e-8)))) : (7.6100000000000007e-5 * (44.600000000000001 + var_chaste_interface__membrane__V) / (1.0 - exp(-444.66200000000003 - 9.9700000000000006 * var_chaste_interface__membrane__V)) + 0.00036000000000000002 * (-0.55000000000000004 + var_chaste_interface__membrane__V) / (-1.0 + exp(-0.070400000000000004 + 0.128 * var_chaste_interface__membrane__V)))));
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[23] < 2){
                    double left = _lookup_table_0[i-1][23];
                    double right = _lookup_table_0[i+1][23];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 23 at ["<<i<<"][23] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[23] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[23] >= 2){
                    EXCEPTION("Lookup table 23 at ["<<i<<"][23] has non-finite value: " << val);
                }
                _lookup_table_0[i][23] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = ((fabs(-0.55000000000000004 + var_chaste_interface__membrane__V) < 7.8124999999948028e-7) ? (-1.406249999998284e-10 / (-1.0 + exp(-9.999999999987797e-8)) + 3.8050000000000003e-5 * (44.600000000000001 + var_chaste_interface__membrane__V) / (1.0 - exp(-444.66200000000003 - 9.9700000000000006 * var_chaste_interface__membrane__V)) + 320000.00000021287 * (-0.54999921875000002 + var_chaste_interface__membrane__V) * (2.8124999999996902e-10 / (-1.0 + exp(9.9999999999988984e-8)) + 2.8124999999965681e-10 / (-1.0 + exp(-9.999999999987797e-8)))) : ((fabs(44.600000000000001 + var_chaste_interface__membrane__V) < 1.0030090258350555e-8) ? (3.8164493433023864e-13 / (1.0 - exp(-9.9999999875755032e-8)) + 0.00018000000000000001 * (-0.55000000000000004 + var_chaste_interface__membrane__V) / (-1.0 + exp(-0.070400000000000004 + 0.128 * var_chaste_interface__membrane__V)) - 24925000.030968059 * (44.599999989969909 + var_chaste_interface__membrane__V) * (-7.6328986866047728e-13 / (1.0 - exp(9.9999999875755032e-8)) - 7.6328986866047728e-13 / (1.0 - exp(-9.9999999875755032e-8)))) : (3.8050000000000003e-5 * (44.600000000000001 + var_chaste_interface__membrane__V) / (1.0 - exp(-444.66200000000003 - 9.9700000000000006 * var_chaste_interface__membrane__V)) + 0.00018000000000000001 * (-0.55000000000000004 + var_chaste_interface__membrane__V) / (-1.0 + exp(-0.070400000000000004 + 0.128 * var_chaste_interface__membrane__V)))));
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[24] < 2){
                    double left = _lookup_table_0[i-1][24];
                    double right = _lookup_table_0[i+1][24];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 24 at ["<<i<<"][24] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[24] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[24] >= 2){
                    EXCEPTION("Lookup table 24 at ["<<i<<"][24] has non-finite value: " << val);
                }
                _lookup_table_0[i][24] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 1 / (1.0 + exp(11.311475409836067 + 0.16393442622950821 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][25] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 175.0 + 125.0 / (1.0 + exp(-4.166666666666667 - 0.16666666666666666 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][26] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = ((fabs(47.130000000000003 + var_chaste_interface__membrane__V) < 1.0000000000287557e-6) ? (3.200000000092018e-7 / (1.0 - exp(-1.0000000000287557e-7)) - 499999.99998562218 * (47.129999000000005 + var_chaste_interface__membrane__V) * (-3.200000000092018e-7 / (1.0 - exp(1.0000000000287557e-7)) - 3.200000000092018e-7 / (1.0 - exp(-1.0000000000287557e-7)))) : (0.32000000000000001 * (47.130000000000003 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.7130000000000001 - 0.10000000000000001 * var_chaste_interface__membrane__V))));
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) &&  i!=0 && (i+1)<_table_size_0 && _lookup_table_0_num_misshit_piecewise[27] < 2){
                    double left = _lookup_table_0[i-1][27];
                    double right = _lookup_table_0[i+1][27];
                    double new_val = (left + right) / 2.0;
                    WARNING("Lookup table 27 at ["<<i<<"][27] has non-finite value: " << val << " being terpolated to: "<<new_val);
                    val = new_val;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[27] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[27] >= 2){
                    EXCEPTION("Lookup table 27 at ["<<i<<"][27] has non-finite value: " << val);
                }
                _lookup_table_0[i][27] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.080000000000000002 * exp(-0.090909090909090912 * var_chaste_interface__membrane__V);

                _lookup_table_0[i][28] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 25.0 * exp(-3.7999999999999998 + 0.050000000000000003 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.7999999999999998 + 0.050000000000000003 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][29] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 25.0 * exp(-2.7000000000000002 - 0.050000000000000003 * var_chaste_interface__membrane__V) / (1.0 + exp(-2.7000000000000002 - 0.050000000000000003 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][30] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.0044200000000000003 / ((1.0 + exp(1.7333333333333334 + 0.066666666666666666 * var_chaste_interface__membrane__V)) * (0.0044200000000000003 / (1.0 + exp(1.7333333333333334 + 0.066666666666666666 * var_chaste_interface__membrane__V)) + 0.050000000000000003 * exp(-0.66666666666666663 + 0.066666666666666666 * var_chaste_interface__membrane__V) / (1.0 + exp(-0.66666666666666663 + 0.066666666666666666 * var_chaste_interface__membrane__V))));

                _lookup_table_0[i][31] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 21.5 + 30.0 / (1.0 + exp(-2.5 + 0.10000000000000001 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][32] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 0.029999999999999999 / ((1.0 + exp(1.6666666666666667 + 0.066666666666666666 * var_chaste_interface__membrane__V)) * (0.029999999999999999 / (1.0 + exp(1.6666666666666667 + 0.066666666666666666 * var_chaste_interface__membrane__V)) + 0.10000000000000001 * exp(-2.6666666666666665 + 0.066666666666666666 * var_chaste_interface__membrane__V) / (1.0 + exp(-2.6666666666666665 + 0.066666666666666666 * var_chaste_interface__membrane__V))));

                _lookup_table_0[i][33] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__V = mTableMins[0] + i*mTableSteps[0];
                double val = 6.0 + 5.0 / (1.0 + exp(-1.6499999999999999 + 0.10000000000000001 * var_chaste_interface__membrane__V));

                _lookup_table_0[i][34] = val;
            }

            mNeedsRegeneration[0] = false;
        }

        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }

private:
    /** The single instance of the class */
    static std::shared_ptr<Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[35];

    // Lookup tables
    double (*_lookup_table_0)[35];
    int _lookup_table_0_num_misshit_piecewise[35] = {0};

};

std::shared_ptr<Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables> Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::mpInstance;

    boost::shared_ptr<RegularStimulus> Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__stim_amplitude_converted = -80.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        const double var_chaste_interface__membrane__stim_duration = 1.0; // millisecond
        const double var_chaste_interface__membrane__stim_period = 800.0; // millisecond
        const double var_chaste_interface__membrane__stim_start = 100.0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__stim_amplitude_converted),
                var_chaste_interface__membrane__stim_duration,
                var_chaste_interface__membrane__stim_period,
                var_chaste_interface__membrane__stim_start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractGeneralizedRushLarsenCardiacCell(
                30,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        
        this->mParameters[0] = 0.0043750000000000004; // (var_q_leak__q_leak_max) [millimolar_per_millisecond]
        this->mParameters[1] = 3000.0; // (var_q_rel__g_rel_max) [per_millisecond]
        this->mParameters[2] = 0.0043750000000000004; // (var_q_up__q_up_max) [millimolar_per_millisecond]
        this->mParameters[3] = 1.0; // (var_intracellular_ion_concentrations__conc_clamp) [dimensionless]
        this->mParameters[4] = 1.8; // (var_model_parameters__Ca_o) [millimolar]
        this->mParameters[5] = 5.4000000000000004; // (var_model_parameters__K_o) [millimolar]
        this->mParameters[6] = 140.0; // (var_model_parameters__Na_o) [millimolar]
        this->mParameters[7] = 0.3392328; // (var_i_Ca_L__g_Ca_L) [dimensionless]
        this->mParameters[8] = 8.0; // (var_i_Na__g_Na) [milliS_per_microF]
        this->mParameters[9] = 0; // (var_i_Na__perc_reduced_inact_for_IpNa) [dimensionless]
        this->mParameters[10] = 0; // (var_i_Na__shift_INa_inact) [millivolt]
        this->mParameters[11] = 0.25; // (var_i_K1__g_K1_max) [milliS_per_microF]
        this->mParameters[12] = 0.040008488000000002; // (var_i_Kr__g_Kr_max) [milliS_per_microF]
        this->mParameters[13] = 0.052581329000000003; // (var_i_Ks__g_Ks_max) [milliS_per_microF]
        this->mParameters[14] = 4.5; // (var_i_NaCa__i_NaCa_max) [microA_per_microF]
        this->mParameters[15] = 0.14135944; // (var_i_to_1__g_to_1) [milliS_per_microF]
    }

    Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::~Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt()
    {
    }

    AbstractLookupTableCollection* Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::GetLookupTableCollection()
    {
        return Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance();
    }
    
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__Ca_i__Ca_i = rY[1];
        // Units: millimolar; Initial value: 0.00022355433459434943
        double var_chaste_interface__i_Na_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.002003390432234504
        double var_chaste_interface__i_Na_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.9786390933308567
        double var_chaste_interface__i_Na_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.09866447258167589
        double var_chaste_interface__i_Na_L_m_L_gate__m_L = rY[5];
        // Units: dimensionless; Initial value: 0.002003390432234504
        double var_chaste_interface__i_Na_L_h_L_gate__h_L = rY[6];
        // Units: dimensionless; Initial value: 0.8946968372659203
        double var_chaste_interface__i_Ca_L_d_gate__d = rY[7];
        // Units: dimensionless; Initial value: 2.322223865147363e-06
        double var_chaste_interface__i_Ca_L_f_gate__f = rY[8];
        // Units: dimensionless; Initial value: 0.9985607329462358
        double var_chaste_interface__i_Ca_L_f2_gate__f2 = rY[9];
        // Units: dimensionless; Initial value: 0.8173435436674658
        double var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca = rY[10];
        // Units: dimensionless; Initial value: 0.9610551285529658
        double var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 = rY[11];
        // Units: dimensionless; Initial value: 0.868690796671854
        double var_chaste_interface__i_Ca_T_b_gate__b = rY[12];
        // Units: dimensionless; Initial value: 0.0002563937630984438
        double var_chaste_interface__i_Ca_T_g_gate__g = rY[13];
        // Units: dimensionless; Initial value: 0.9720432601848331
        double var_chaste_interface__i_to_1_a_gate__a = rY[14];
        // Units: dimensionless; Initial value: 0.0004238729429342389
        double var_chaste_interface__i_to_1_i_gate__i = rY[15];
        // Units: dimensionless; Initial value: 0.9990935802459496
        double var_chaste_interface__i_to_1_i2_gate__i2 = rY[16];
        // Units: dimensionless; Initial value: 0.9777368439681764
        double var_chaste_interface__i_Kr_xr_gate__xr = rY[17];
        // Units: dimensionless; Initial value: 0.07084939408222911
        double var_chaste_interface__i_Ks_xs1_gate__xs1 = rY[18];
        // Units: dimensionless; Initial value: 0.0011737654433043125
        double var_chaste_interface__i_Ks_xs2_gate__xs2 = rY[19];
        // Units: dimensionless; Initial value: 0.001179442867470093
        double var_chaste_interface__i_to_2_a_gate__a = rY[20];
        // Units: dimensionless; Initial value: 0.0014909437525000811
        double var_chaste_interface__intracellular_ion_concentrations__Na_i = rY[21];
        // Units: millimolar; Initial value: 9.927155552932733
        double var_chaste_interface__intracellular_ion_concentrations__Cl_i = rY[22];
        // Units: millimolar; Initial value: 18.904682470140408
        double var_chaste_interface__intracellular_ion_concentrations__K_i = rY[23];
        // Units: millimolar; Initial value: 141.9670801746057
        double var_chaste_interface__Ca_r__Ca_r = rY[27];
        // Units: millimolar; Initial value: 0.00022418117117903934
        
        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        const double var_equilibrium_potentials__E_K = 26.712338705498265 * log(mParameters[5] / var_chaste_interface__intracellular_ion_concentrations__K_i); // millivolt
        const double var_equilibrium_potentials__E_Na = 26.712338705498265 * log(mParameters[6] / var_chaste_interface__intracellular_ion_concentrations__Na_i); // millivolt
        const double var_membrane__i_tot = 0.0077250000000000001 * var_chaste_interface__membrane__V + 0.0060102762087371094 * log(100.0 / var_chaste_interface__intracellular_ion_concentrations__Cl_i) - 0.0025000000000000001 * var_equilibrium_potentials__E_Na - 0.0050000000000000001 * var_equilibrium_potentials__E_K + (0.0040000000000000001 + 0.4389381125701739 * sqrt(mParameters[5]) * mParameters[11] / ((1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_equilibrium_potentials__E_K)) * (1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_equilibrium_potentials__E_K)) + (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_equilibrium_potentials__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_equilibrium_potentials__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_equilibrium_potentials__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V))))) * (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) + 20.0 * ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (3.8593999999999993e-9 * (-100.0 * exp(9.9999999999999995e-8) + var_chaste_interface__intracellular_ion_concentrations__Cl_i) / (1.0 - exp(9.9999999999999995e-8)) + 3.8593999999999993e-9 * (-100.0 * exp(-9.9999999999999995e-8) + var_chaste_interface__intracellular_ion_concentrations__Cl_i) / (1.0 - exp(-9.9999999999999995e-8))) - 3.8593999999999993e-9 * (-100.0 * exp(-9.9999999999999995e-8) + var_chaste_interface__intracellular_ion_concentrations__Cl_i) / (1.0 - exp(-9.9999999999999995e-8))) : (0.0014448004881001341 * (_lt_0_row[0] + var_chaste_interface__intracellular_ion_concentrations__Cl_i) * var_chaste_interface__membrane__V / (_lt_0_row[1]))) * var_chaste_interface__i_to_2_a_gate__a + 0.0027599999999999999 * (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) / (_lt_0_row[2]) + 0.057500000000000002 * var_chaste_interface__Ca_i__Ca_i / (0.00050000000000000001 + var_chaste_interface__Ca_i__Ca_i) + 0.13 * (-50.0 + var_chaste_interface__membrane__V) * var_chaste_interface__i_Ca_T_b_gate__b * var_chaste_interface__i_Ca_T_g_gate__g + 0.037374999999999999 * pow(var_chaste_interface__i_Na_L_m_L_gate__m_L, 3) * (-var_equilibrium_potentials__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__i_Na_L_h_L_gate__h_L + (-1.5 * pow(mParameters[6], 3) * var_chaste_interface__Ca_i__Ca_i * _lt_0_row[3] + 0.40000000000000002 * pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * mParameters[14] * mParameters[4] * _lt_0_row[4]) / ((_lt_0_row[5]) * (1.0 + 6.9444444444444451e-9 / pow(var_chaste_interface__Ca_i__Ca_i, 2)) * (1004882.8125 * var_chaste_interface__Ca_i__Ca_i + 1.3 * pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) + pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * mParameters[4] + 1.5 * pow(mParameters[6], 3) * var_chaste_interface__Ca_i__Ca_i + 0.0035999999999999999 * pow(mParameters[6], 3) * (1.0 + 0.081300813008130079 * var_chaste_interface__intracellular_ion_concentrations__Na_i) + 1860.8670000000004 * (1.0 + 416.66666666666669 * var_chaste_interface__Ca_i__Ca_i) * mParameters[4])) + pow(var_chaste_interface__i_Na_m_gate__m, 3) * (-var_equilibrium_potentials__E_Na + var_chaste_interface__membrane__V) * (0.20000000000000001 * var_chaste_interface__i_Na_j_gate__j + 0.80000000000000004 * var_chaste_interface__i_Na_h_gate__h) * mParameters[8] + (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * (0.20000000000000001 * var_chaste_interface__i_to_1_i2_gate__i2 + 0.80000000000000004 * var_chaste_interface__i_to_1_i_gate__i) * mParameters[15] * var_chaste_interface__i_to_1_a_gate__a + 0.61875000000000002 * mParameters[5] / ((1.0 + 100.0 / pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 2)) * (1.5 + mParameters[5]) * (1.0 + _lt_0_row[7] + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * mParameters[6])) * _lt_0_row[6])) + (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__Ca_i__Ca_i), 1.3999999999999999))) * (-26.712338705498265 * log((0.018329999999999999 * mParameters[6] + mParameters[5]) / (0.018329999999999999 * var_chaste_interface__intracellular_ion_concentrations__Na_i + var_chaste_interface__intracellular_ion_concentrations__K_i)) + var_chaste_interface__membrane__V) * mParameters[13] * var_chaste_interface__i_Ks_xs1_gate__xs1 * var_chaste_interface__i_Ks_xs2_gate__xs2 + 0.43033148291193518 * sqrt(mParameters[5]) * (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * mParameters[12] * var_chaste_interface__i_Kr_xr_gate__xr / (_lt_0_row[8]) + ((fabs(-15.0 + var_chaste_interface__membrane__V) < 1.3356169352718439e-6) ? (374358.83507888648 * (-14.999998664383064 + var_chaste_interface__membrane__V) * (4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(9.9999999999770198e-8)) / (-1.0 + exp(9.9999999999770198e-8)) + 4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(-9.9999999999770198e-8)) / (-1.0 + exp(-9.9999999999770198e-8))) - 4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(-9.9999999999770198e-8)) / (-1.0 + exp(-9.9999999999770198e-8))) : (3.510865186083326 * (-15.0 + var_chaste_interface__membrane__V) * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * _lt_0_row[9]) / (_lt_0_row[10]))) * mParameters[7] * var_chaste_interface__i_Ca_L_d_gate__d * var_chaste_interface__i_Ca_L_f2_gate__f2 * var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 * var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca * var_chaste_interface__i_Ca_L_f_gate__f + ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (3.8499135947999997e-9 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_i__Ca_i * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) + 3.8499135947999997e-9 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_i__Ca_i * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8))) - 3.8499135947999997e-9 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_i__Ca_i * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8))) : (0.0028824983370007683 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_i__Ca_i * _lt_0_row[11]) * var_chaste_interface__membrane__V / (_lt_0_row[12]))); // microA_per_microF
        const double var_chaste_interface__i_ionic = HeartConfig::Instance()->GetCapacitance() * var_membrane__i_tot; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::UpdateTransmembranePotential(double var_chaste_interface__environment__time)
    {
        std::vector<double>& rY = rGetStateVariables();
        unsigned v_index = GetVoltageIndex();
        const double delta = 1e-8;

        double d_dt_chaste_interface_var_membrane__V;
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__Ca_i__Ca_i = rY[1];
        // Units: millimolar; Initial value: 0.00022355433459434943
        double var_chaste_interface__i_Na_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.002003390432234504
        double var_chaste_interface__i_Na_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.9786390933308567
        double var_chaste_interface__i_Na_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.09866447258167589
        double var_chaste_interface__i_Na_L_m_L_gate__m_L = rY[5];
        // Units: dimensionless; Initial value: 0.002003390432234504
        double var_chaste_interface__i_Na_L_h_L_gate__h_L = rY[6];
        // Units: dimensionless; Initial value: 0.8946968372659203
        double var_chaste_interface__i_Ca_L_d_gate__d = rY[7];
        // Units: dimensionless; Initial value: 2.322223865147363e-06
        double var_chaste_interface__i_Ca_L_f_gate__f = rY[8];
        // Units: dimensionless; Initial value: 0.9985607329462358
        double var_chaste_interface__i_Ca_L_f2_gate__f2 = rY[9];
        // Units: dimensionless; Initial value: 0.8173435436674658
        double var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca = rY[10];
        // Units: dimensionless; Initial value: 0.9610551285529658
        double var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 = rY[11];
        // Units: dimensionless; Initial value: 0.868690796671854
        double var_chaste_interface__i_Ca_T_b_gate__b = rY[12];
        // Units: dimensionless; Initial value: 0.0002563937630984438
        double var_chaste_interface__i_Ca_T_g_gate__g = rY[13];
        // Units: dimensionless; Initial value: 0.9720432601848331
        double var_chaste_interface__i_to_1_a_gate__a = rY[14];
        // Units: dimensionless; Initial value: 0.0004238729429342389
        double var_chaste_interface__i_to_1_i_gate__i = rY[15];
        // Units: dimensionless; Initial value: 0.9990935802459496
        double var_chaste_interface__i_to_1_i2_gate__i2 = rY[16];
        // Units: dimensionless; Initial value: 0.9777368439681764
        double var_chaste_interface__i_Kr_xr_gate__xr = rY[17];
        // Units: dimensionless; Initial value: 0.07084939408222911
        double var_chaste_interface__i_Ks_xs1_gate__xs1 = rY[18];
        // Units: dimensionless; Initial value: 0.0011737654433043125
        double var_chaste_interface__i_Ks_xs2_gate__xs2 = rY[19];
        // Units: dimensionless; Initial value: 0.001179442867470093
        double var_chaste_interface__i_to_2_a_gate__a = rY[20];
        // Units: dimensionless; Initial value: 0.0014909437525000811
        double var_chaste_interface__intracellular_ion_concentrations__Na_i = rY[21];
        // Units: millimolar; Initial value: 9.927155552932733
        double var_chaste_interface__intracellular_ion_concentrations__Cl_i = rY[22];
        // Units: millimolar; Initial value: 18.904682470140408
        double var_chaste_interface__intracellular_ion_concentrations__K_i = rY[23];
        // Units: millimolar; Initial value: 141.9670801746057
        double var_chaste_interface__Ca_r__Ca_r = rY[27];
        // Units: millimolar; Initial value: 0.00022418117117903934
        

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_i_Ca_p__i_Ca_p = 0.057500000000000002 * var_chaste_interface__Ca_i__Ca_i / (0.00050000000000000001 + var_chaste_interface__Ca_i__Ca_i); // microA_per_microF
        const double var_i_to_2__i_to_2 = 20.0 * ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (3.8593999999999993e-9 * (-100.0 * exp(9.9999999999999995e-8) + var_chaste_interface__intracellular_ion_concentrations__Cl_i) / (1.0 - exp(9.9999999999999995e-8)) + 3.8593999999999993e-9 * (-100.0 * exp(-9.9999999999999995e-8) + var_chaste_interface__intracellular_ion_concentrations__Cl_i) / (1.0 - exp(-9.9999999999999995e-8))) - 3.8593999999999993e-9 * (-100.0 * exp(-9.9999999999999995e-8) + var_chaste_interface__intracellular_ion_concentrations__Cl_i) / (1.0 - exp(-9.9999999999999995e-8))) : (0.0014448004881001341 * (_lt_0_row[0] + var_chaste_interface__intracellular_ion_concentrations__Cl_i) * var_chaste_interface__membrane__V / (_lt_0_row[1]))) * var_chaste_interface__i_to_2_a_gate__a; // microA_per_microF
        const double var_background_currents__i_Ca_b = ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (3.8499135947999997e-9 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_i__Ca_i * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) + 3.8499135947999997e-9 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_i__Ca_i * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8))) - 3.8499135947999997e-9 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_i__Ca_i * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8))) : (0.0028824983370007683 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_i__Ca_i * _lt_0_row[11]) * var_chaste_interface__membrane__V / (_lt_0_row[12]))); // microA_per_microF
        const double var_i_Ca_L__i_Ca_L_max = ((fabs(-15.0 + var_chaste_interface__membrane__V) < 1.3356169352718439e-6) ? (374358.83507888648 * (-14.999998664383064 + var_chaste_interface__membrane__V) * (4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(9.9999999999770198e-8)) / (-1.0 + exp(9.9999999999770198e-8)) + 4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(-9.9999999999770198e-8)) / (-1.0 + exp(-9.9999999999770198e-8))) - 4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(-9.9999999999770198e-8)) / (-1.0 + exp(-9.9999999999770198e-8))) : (3.510865186083326 * (-15.0 + var_chaste_interface__membrane__V) * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * _lt_0_row[9]) / (_lt_0_row[10]))); // microA_per_microF
        const double var_i_Ca_L__i_Ca_L = mParameters[7] * var_i_Ca_L__i_Ca_L_max * var_chaste_interface__i_Ca_L_d_gate__d * var_chaste_interface__i_Ca_L_f2_gate__f2 * var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 * var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca * var_chaste_interface__i_Ca_L_f_gate__f; // microA_per_microF
        const double var_equilibrium_potentials__E_Cl = -26.712338705498265 * log(100.0 / var_chaste_interface__intracellular_ion_concentrations__Cl_i); // millivolt
        const double var_background_currents__i_Cl_b = 0.00022499999999999999 * var_chaste_interface__membrane__V - 0.00022499999999999999 * var_equilibrium_potentials__E_Cl; // microA_per_microF
        const double var_equilibrium_potentials__E_K = 26.712338705498265 * log(mParameters[5] / var_chaste_interface__intracellular_ion_concentrations__K_i); // millivolt
        const double var_background_currents__i_K_b = 0.0050000000000000001 * var_chaste_interface__membrane__V - 0.0050000000000000001 * var_equilibrium_potentials__E_K; // microA_per_microF
        const double var_equilibrium_potentials__E_Na = 26.712338705498265 * log(mParameters[6] / var_chaste_interface__intracellular_ion_concentrations__Na_i); // millivolt
        const double var_background_currents__i_Na_b = 0.0025000000000000001 * var_chaste_interface__membrane__V - 0.0025000000000000001 * var_equilibrium_potentials__E_Na; // microA_per_microF
        const double var_i_K1__i_K1 = (0.0040000000000000001 + 0.4389381125701739 * sqrt(mParameters[5]) * mParameters[11] / ((1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_equilibrium_potentials__E_K)) * (1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_equilibrium_potentials__E_K)) + (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_equilibrium_potentials__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_equilibrium_potentials__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_equilibrium_potentials__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V))))) * (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V); // microA_per_microF
        const double var_i_K_p__i_K_p = 0.0027599999999999999 * (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) / (_lt_0_row[2]); // microA_per_microF
        const double var_i_Kr__i_Kr = 0.43033148291193518 * sqrt(mParameters[5]) * (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * mParameters[12] * var_chaste_interface__i_Kr_xr_gate__xr / (_lt_0_row[8]); // microA_per_microF
        const double var_i_Ks__i_Ks = (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__Ca_i__Ca_i), 1.3999999999999999))) * (-26.712338705498265 * log((0.018329999999999999 * mParameters[6] + mParameters[5]) / (0.018329999999999999 * var_chaste_interface__intracellular_ion_concentrations__Na_i + var_chaste_interface__intracellular_ion_concentrations__K_i)) + var_chaste_interface__membrane__V) * mParameters[13] * var_chaste_interface__i_Ks_xs1_gate__xs1 * var_chaste_interface__i_Ks_xs2_gate__xs2; // microA_per_microF
        const double var_i_Na__i_Na = pow(var_chaste_interface__i_Na_m_gate__m, 3) * (-var_equilibrium_potentials__E_Na + var_chaste_interface__membrane__V) * (0.20000000000000001 * var_chaste_interface__i_Na_j_gate__j + 0.80000000000000004 * var_chaste_interface__i_Na_h_gate__h) * mParameters[8]; // microA_per_microF
        const double var_i_NaCa__i_NaCa = (-1.5 * pow(mParameters[6], 3) * var_chaste_interface__Ca_i__Ca_i * _lt_0_row[3] + 0.40000000000000002 * pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * mParameters[14] * mParameters[4] * _lt_0_row[4]) / ((_lt_0_row[5]) * (1.0 + 6.9444444444444451e-9 / pow(var_chaste_interface__Ca_i__Ca_i, 2)) * (1004882.8125 * var_chaste_interface__Ca_i__Ca_i + 1.3 * pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) + pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * mParameters[4] + 1.5 * pow(mParameters[6], 3) * var_chaste_interface__Ca_i__Ca_i + 0.0035999999999999999 * pow(mParameters[6], 3) * (1.0 + 0.081300813008130079 * var_chaste_interface__intracellular_ion_concentrations__Na_i) + 1860.8670000000004 * (1.0 + 416.66666666666669 * var_chaste_interface__Ca_i__Ca_i) * mParameters[4])); // microA_per_microF
        const double var_i_NaK__i_NaK = 0.61875000000000002 * mParameters[5] / ((1.0 + 100.0 / pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 2)) * (1.5 + mParameters[5]) * (1.0 + _lt_0_row[7] + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * mParameters[6])) * _lt_0_row[6])); // microA_per_microF
        const double var_i_Na_L__i_Na_L = 0.037374999999999999 * pow(var_chaste_interface__i_Na_L_m_L_gate__m_L, 3) * (-var_equilibrium_potentials__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__i_Na_L_h_L_gate__h_L; // microA_per_microF
        const double var_i_to_1__i_to_1 = (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * (0.20000000000000001 * var_chaste_interface__i_to_1_i2_gate__i2 + 0.80000000000000004 * var_chaste_interface__i_to_1_i_gate__i) * mParameters[15] * var_chaste_interface__i_to_1_a_gate__a; // microA_per_microF
        d_dt_chaste_interface_var_membrane__V = -var_background_currents__i_Ca_b - var_background_currents__i_Cl_b - var_background_currents__i_K_b - var_background_currents__i_Na_b - var_i_Ca_L__i_Ca_L - var_i_Ca_p__i_Ca_p - var_i_K1__i_K1 - var_i_K_p__i_K_p - var_i_Kr__i_Kr - var_i_Ks__i_Ks - var_i_Na__i_Na - var_i_NaCa__i_NaCa - var_i_NaK__i_NaK - var_i_Na_L__i_Na_L - var_i_to_1__i_to_1 - var_i_to_2__i_to_2 - GetIntracellularAreaStimulus(var_chaste_interface__environment__time) / HeartConfig::Instance()->GetCapacitance() - 0.13 * (-50.0 + var_chaste_interface__membrane__V) * var_chaste_interface__i_Ca_T_b_gate__b * var_chaste_interface__i_Ca_T_g_gate__g; // millivolt / millisecond

        double evalF = d_dt_chaste_interface_var_membrane__V;
        mEvalF[0] = d_dt_chaste_interface_var_membrane__V;
        double partialF = EvaluatePartialDerivative0(var_chaste_interface__environment__time, rY, delta, true);
        if (fabs(partialF) < delta)
        {
            rY[v_index] += evalF*mDt;
        }
        else
        {
            rY[v_index] += (evalF/partialF)*(exp(partialF*mDt)-1.0);
        }
    }

    void Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::ComputeOneStepExceptVoltage(double var_chaste_interface__environment__time)
    {
        std::vector<double>& rY = rGetStateVariables();
        const double delta = 1e-8;

        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__Ca_i__Ca_i = rY[1];
        // Units: millimolar; Initial value: 0.00022355433459434943
        double var_chaste_interface__i_Na_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.002003390432234504
        double var_chaste_interface__i_Na_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.9786390933308567
        double var_chaste_interface__i_Na_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.09866447258167589
        double var_chaste_interface__i_Na_L_m_L_gate__m_L = rY[5];
        // Units: dimensionless; Initial value: 0.002003390432234504
        double var_chaste_interface__i_Na_L_h_L_gate__h_L = rY[6];
        // Units: dimensionless; Initial value: 0.8946968372659203
        double var_chaste_interface__i_Ca_L_d_gate__d = rY[7];
        // Units: dimensionless; Initial value: 2.322223865147363e-06
        double var_chaste_interface__i_Ca_L_f_gate__f = rY[8];
        // Units: dimensionless; Initial value: 0.9985607329462358
        double var_chaste_interface__i_Ca_L_f2_gate__f2 = rY[9];
        // Units: dimensionless; Initial value: 0.8173435436674658
        double var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca = rY[10];
        // Units: dimensionless; Initial value: 0.9610551285529658
        double var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 = rY[11];
        // Units: dimensionless; Initial value: 0.868690796671854
        double var_chaste_interface__i_Ca_T_b_gate__b = rY[12];
        // Units: dimensionless; Initial value: 0.0002563937630984438
        double var_chaste_interface__i_Ca_T_g_gate__g = rY[13];
        // Units: dimensionless; Initial value: 0.9720432601848331
        double var_chaste_interface__i_to_1_a_gate__a = rY[14];
        // Units: dimensionless; Initial value: 0.0004238729429342389
        double var_chaste_interface__i_to_1_i_gate__i = rY[15];
        // Units: dimensionless; Initial value: 0.9990935802459496
        double var_chaste_interface__i_to_1_i2_gate__i2 = rY[16];
        // Units: dimensionless; Initial value: 0.9777368439681764
        double var_chaste_interface__i_Kr_xr_gate__xr = rY[17];
        // Units: dimensionless; Initial value: 0.07084939408222911
        double var_chaste_interface__i_Ks_xs1_gate__xs1 = rY[18];
        // Units: dimensionless; Initial value: 0.0011737654433043125
        double var_chaste_interface__i_Ks_xs2_gate__xs2 = rY[19];
        // Units: dimensionless; Initial value: 0.001179442867470093
        double var_chaste_interface__i_to_2_a_gate__a = rY[20];
        // Units: dimensionless; Initial value: 0.0014909437525000811
        double var_chaste_interface__intracellular_ion_concentrations__Na_i = rY[21];
        // Units: millimolar; Initial value: 9.927155552932733
        double var_chaste_interface__intracellular_ion_concentrations__Cl_i = rY[22];
        // Units: millimolar; Initial value: 18.904682470140408
        double var_chaste_interface__intracellular_ion_concentrations__K_i = rY[23];
        // Units: millimolar; Initial value: 141.9670801746057
        double var_chaste_interface__Ca_MK_act__Ca_MK_trap = rY[24];
        // Units: dimensionless; Initial value: 8.789168284782809e-06
        double var_chaste_interface__Ca_NSR__Ca_NSR = rY[25];
        // Units: millimolar; Initial value: 1.2132524695849454
        double var_chaste_interface__Ca_JSR__Ca_JSR = rY[26];
        // Units: millimolar; Initial value: 1.1433050636518596
        double var_chaste_interface__Ca_r__Ca_r = rY[27];
        // Units: millimolar; Initial value: 0.00022418117117903934
        double var_chaste_interface__q_rel_ri_gate__ri = rY[28];
        // Units: dimensionless; Initial value: 0.7802870066567904
        double var_chaste_interface__q_rel_ro_gate__ro = rY[29];
        // Units: dimensionless; Initial value: 1.2785734760674763e-09
        

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_Ca_MK_act__Ca_MK_bound = 0.050000000000000003 * (1.0 - var_chaste_interface__Ca_MK_act__Ca_MK_trap) / (1.0 + 0.14999999999999999 / var_chaste_interface__Ca_r__Ca_r); // dimensionless
        const double var_Ca_MK_act__Ca_MK_act = var_Ca_MK_act__Ca_MK_bound + var_chaste_interface__Ca_MK_act__Ca_MK_trap; // dimensionless
        const double var_Ca_r__q_diff = 5.0 * var_chaste_interface__Ca_r__Ca_r - 5.0 * var_chaste_interface__Ca_i__Ca_i; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_Ca_MK_act__Ca_MK_trap = -0.00068000000000000005 * var_chaste_interface__Ca_MK_act__Ca_MK_trap + 0.050000000000000003 * (var_Ca_MK_act__Ca_MK_bound + var_chaste_interface__Ca_MK_act__Ca_MK_trap) * var_Ca_MK_act__Ca_MK_bound; // 1 / millisecond
        const double var_i_Ca_p__i_Ca_p = 0.057500000000000002 * var_chaste_interface__Ca_i__Ca_i / (0.00050000000000000001 + var_chaste_interface__Ca_i__Ca_i); // microA_per_microF
        const double d_dt_chaste_interface_var_i_to_2_a_gate__a = 1 / (1.0 + 0.1502 / var_chaste_interface__Ca_r__Ca_r) - var_chaste_interface__i_to_2_a_gate__a; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Ca_L_d_gate__d = (-var_chaste_interface__i_Ca_L_d_gate__d + _lt_0_row[13]) / (_lt_0_row[14]); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Ca_L_f2_gate__f2 = (-var_chaste_interface__i_Ca_L_f2_gate__f2 + _lt_0_row[15]) / (38.0 + 24.217200000000005 * pow((-1 + 0.053763440860215048 * var_chaste_interface__membrane__V), 2)); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Ca_L_f_gate__f = (-var_chaste_interface__i_Ca_L_f_gate__f + _lt_0_row[15]) / (4.0 + 0.03125 * pow((-1 + 0.40000000000000002 * var_chaste_interface__membrane__V), 2)); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Ca_T_b_gate__b = (-var_chaste_interface__i_Ca_T_b_gate__b + _lt_0_row[16]) * (_lt_0_row[17]); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Ca_T_g_gate__g = (-var_chaste_interface__i_Ca_T_g_gate__g + _lt_0_row[18]) * (_lt_0_row[19]); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Kr_xr_gate__xr = (-var_chaste_interface__i_Kr_xr_gate__xr + _lt_0_row[20]) / (_lt_0_row[21]); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Ks_xs1_gate__xs1 = (-var_chaste_interface__i_Ks_xs1_gate__xs1 + _lt_0_row[22]) * _lt_0_row[23]; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Ks_xs2_gate__xs2 = (-var_chaste_interface__i_Ks_xs2_gate__xs2 + _lt_0_row[22]) * _lt_0_row[24]; // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Na_L_h_L_gate__h_L = (-var_chaste_interface__i_Na_L_h_L_gate__h_L + _lt_0_row[25]) / (_lt_0_row[26]); // 1 / millisecond
        const double var_i_Na_L_m_L_gate__alpha_m_L = _lt_0_row[27]; // per_millisecond
        const double var_i_Na_L_m_L_gate__beta_m_L = _lt_0_row[28]; // per_millisecond
        const double d_dt_chaste_interface_var_i_Na_L_m_L_gate__m_L = (-var_chaste_interface__i_Na_L_m_L_gate__m_L + var_i_Na_L_m_L_gate__alpha_m_L / (var_i_Na_L_m_L_gate__alpha_m_L + var_i_Na_L_m_L_gate__beta_m_L)) * (var_i_Na_L_m_L_gate__alpha_m_L + var_i_Na_L_m_L_gate__beta_m_L); // 1 / millisecond
        const double var_i_Na_h_gate__alpha_h = ((var_chaste_interface__membrane__V < -40.0) ? (0.13500000000000001 * exp(-11.764705882352942 + 0.14705882352941177 * mParameters[10] - 0.14705882352941177 * var_chaste_interface__membrane__V)) : (0)); // per_millisecond
        const double var_i_Na_h_gate__beta_h = ((var_chaste_interface__membrane__V < -40.0) ? (310000.0 * exp(0.34999999999999998 * var_chaste_interface__membrane__V - 0.34999999999999998 * mParameters[10]) + 3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__membrane__V - 0.079000000000000001 * mParameters[10])) : (7.6923076923076916 / (1.0 + exp(-0.96036036036036043 + 0.0900900900900901 * mParameters[10] - 0.0900900900900901 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double d_dt_chaste_interface_var_i_Na_h_gate__h = (var_i_Na_h_gate__alpha_h + var_i_Na_h_gate__beta_h) * (-var_chaste_interface__i_Na_h_gate__h + 0.01 * mParameters[9] + (1.0 - 0.01 * mParameters[9]) * var_i_Na_h_gate__alpha_h / (var_i_Na_h_gate__alpha_h + var_i_Na_h_gate__beta_h)); // 1 / millisecond
        const double var_i_Na_j_gate__alpha_j = ((var_chaste_interface__membrane__V < -40.0) ? ((37.780000000000001 + var_chaste_interface__membrane__V) * (-127140.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__V - 0.24440000000000001 * mParameters[10]) - 3.4740000000000003e-5 * exp(0.043909999999999998 * mParameters[10] - 0.043909999999999998 * var_chaste_interface__membrane__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V - 0.311 * mParameters[10]))) : (0)); // per_millisecond
        const double var_i_Na_j_gate__beta_j = ((var_chaste_interface__membrane__V < -40.0) ? (0.1212 * exp(0.01052 * mParameters[10] - 0.01052 * var_chaste_interface__membrane__V) / (1.0 + exp(-5.5312920000000005 + 0.13780000000000001 * mParameters[10] - 0.13780000000000001 * var_chaste_interface__membrane__V))) : (0.29999999999999999 * exp(2.5349999999999999e-7 * mParameters[10] - 2.5349999999999999e-7 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.2000000000000002 + 0.10000000000000001 * mParameters[10] - 0.10000000000000001 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double d_dt_chaste_interface_var_i_Na_j_gate__j = (var_i_Na_j_gate__alpha_j + var_i_Na_j_gate__beta_j) * (-var_chaste_interface__i_Na_j_gate__j + 0.01 * mParameters[9] + (1.0 - 0.01 * mParameters[9]) * var_i_Na_j_gate__alpha_j / (var_i_Na_j_gate__alpha_j + var_i_Na_j_gate__beta_j)); // 1 / millisecond
        const double var_i_Na_m_gate__alpha_m = _lt_0_row[27]; // per_millisecond
        const double var_i_Na_m_gate__beta_m = _lt_0_row[28]; // per_millisecond
        const double d_dt_chaste_interface_var_i_Na_m_gate__m = (-var_chaste_interface__i_Na_m_gate__m + var_i_Na_m_gate__alpha_m / (var_i_Na_m_gate__alpha_m + var_i_Na_m_gate__beta_m)) * (var_i_Na_m_gate__alpha_m + var_i_Na_m_gate__beta_m); // 1 / millisecond
        const double var_i_to_1_a_gate__alpha_a = _lt_0_row[29]; // per_millisecond
        const double var_i_to_1_a_gate__beta_a = _lt_0_row[30]; // per_millisecond
        const double d_dt_chaste_interface_var_i_to_1_a_gate__a = (-var_chaste_interface__i_to_1_a_gate__a + var_i_to_1_a_gate__alpha_a / (var_i_to_1_a_gate__alpha_a + var_i_to_1_a_gate__beta_a)) * (var_i_to_1_a_gate__alpha_a + var_i_to_1_a_gate__beta_a); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_to_1_i2_gate__i2 = (-var_chaste_interface__i_to_1_i2_gate__i2 + _lt_0_row[31]) / (_lt_0_row[32]); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_to_1_i_gate__i = (-var_chaste_interface__i_to_1_i_gate__i + _lt_0_row[33]) / (_lt_0_row[34]); // 1 / millisecond
        const double var_i_to_2__i_to_2 = 20.0 * ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (3.8593999999999993e-9 * (-100.0 * exp(9.9999999999999995e-8) + var_chaste_interface__intracellular_ion_concentrations__Cl_i) / (1.0 - exp(9.9999999999999995e-8)) + 3.8593999999999993e-9 * (-100.0 * exp(-9.9999999999999995e-8) + var_chaste_interface__intracellular_ion_concentrations__Cl_i) / (1.0 - exp(-9.9999999999999995e-8))) - 3.8593999999999993e-9 * (-100.0 * exp(-9.9999999999999995e-8) + var_chaste_interface__intracellular_ion_concentrations__Cl_i) / (1.0 - exp(-9.9999999999999995e-8))) : (0.0014448004881001341 * (_lt_0_row[0] + var_chaste_interface__intracellular_ion_concentrations__Cl_i) * var_chaste_interface__membrane__V / (_lt_0_row[1]))) * var_chaste_interface__i_to_2_a_gate__a; // microA_per_microF
        const double var_background_currents__i_Ca_b = ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (3.8499135947999997e-9 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_i__Ca_i * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) + 3.8499135947999997e-9 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_i__Ca_i * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8))) - 3.8499135947999997e-9 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_i__Ca_i * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8))) : (0.0028824983370007683 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_i__Ca_i * _lt_0_row[11]) * var_chaste_interface__membrane__V / (_lt_0_row[12]))); // microA_per_microF
        const double var_i_Ca_L__i_Ca_L_max = ((fabs(-15.0 + var_chaste_interface__membrane__V) < 1.3356169352718439e-6) ? (374358.83507888648 * (-14.999998664383064 + var_chaste_interface__membrane__V) * (4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(9.9999999999770198e-8)) / (-1.0 + exp(9.9999999999770198e-8)) + 4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(-9.9999999999770198e-8)) / (-1.0 + exp(-9.9999999999770198e-8))) - 4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(-9.9999999999770198e-8)) / (-1.0 + exp(-9.9999999999770198e-8))) : (3.510865186083326 * (-15.0 + var_chaste_interface__membrane__V) * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * _lt_0_row[9]) / (_lt_0_row[10]))); // microA_per_microF
        const double var_i_Ca_L__i_Ca_L = mParameters[7] * var_i_Ca_L__i_Ca_L_max * var_chaste_interface__i_Ca_L_d_gate__d * var_chaste_interface__i_Ca_L_f2_gate__f2 * var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 * var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca * var_chaste_interface__i_Ca_L_f_gate__f; // microA_per_microF
        const double d_dt_chaste_interface_var_i_Ca_L_f_Ca2_gate__f_Ca2 = (-var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 + 1 / (1.0 - 100.0 * var_i_Ca_L__i_Ca_L)) / (125.0 + 300.0 / (1.0 + exp(-4.375 - 25.0 * var_i_Ca_L__i_Ca_L))); // 1 / millisecond
        const double d_dt_chaste_interface_var_i_Ca_L_f_Ca_gate__f_Ca = (0.14999999999999999 - var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca + 0.55000000000000004 / (1.0 + 333.33333333333331 * var_chaste_interface__Ca_r__Ca_r) + 0.29999999999999999 / (1.0 - 20.0 * var_i_Ca_L__i_Ca_L)) / (0.5 + 1 / (1.0 + 333.33333333333331 * var_chaste_interface__Ca_r__Ca_r) + 10.0 * var_Ca_MK_act__Ca_MK_act / (0.14999999999999999 + var_Ca_MK_act__Ca_MK_act)); // 1 / millisecond
        const double var_equilibrium_potentials__E_Cl = -26.712338705498265 * log(100.0 / var_chaste_interface__intracellular_ion_concentrations__Cl_i); // millivolt
        const double var_background_currents__i_Cl_b = 0.00022499999999999999 * var_chaste_interface__membrane__V - 0.00022499999999999999 * var_equilibrium_potentials__E_Cl; // microA_per_microF
        const double var_equilibrium_potentials__E_K = 26.712338705498265 * log(mParameters[5] / var_chaste_interface__intracellular_ion_concentrations__K_i); // millivolt
        const double var_CT_K_Cl__CT_K_Cl = 7.0755999999999996e-6 * (-var_equilibrium_potentials__E_Cl + var_equilibrium_potentials__E_K) / (87.825100000000006 - var_equilibrium_potentials__E_Cl + var_equilibrium_potentials__E_K); // millimolar_per_millisecond
        const double var_background_currents__i_K_b = 0.0050000000000000001 * var_chaste_interface__membrane__V - 0.0050000000000000001 * var_equilibrium_potentials__E_K; // microA_per_microF
        const double var_equilibrium_potentials__E_Na = 26.712338705498265 * log(mParameters[6] / var_chaste_interface__intracellular_ion_concentrations__Na_i); // millivolt
        const double var_CT_Na_Cl__CT_Na_Cl = 9.8442999999999999e-6 * pow((-var_equilibrium_potentials__E_Cl + var_equilibrium_potentials__E_Na), 4) / (59494197.640692554 + pow((-var_equilibrium_potentials__E_Cl + var_equilibrium_potentials__E_Na), 4)); // millimolar_per_millisecond
        const double var_background_currents__i_Na_b = 0.0025000000000000001 * var_chaste_interface__membrane__V - 0.0025000000000000001 * var_equilibrium_potentials__E_Na; // microA_per_microF
        const double var_i_K1__i_K1 = (0.0040000000000000001 + 0.4389381125701739 * sqrt(mParameters[5]) * mParameters[11] / ((1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_equilibrium_potentials__E_K)) * (1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_equilibrium_potentials__E_K)) + (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_equilibrium_potentials__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_equilibrium_potentials__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_equilibrium_potentials__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V))))) * (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V); // microA_per_microF
        const double var_i_K_p__i_K_p = 0.0027599999999999999 * (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) / (_lt_0_row[2]); // microA_per_microF
        const double var_i_Kr__i_Kr = 0.43033148291193518 * sqrt(mParameters[5]) * (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * mParameters[12] * var_chaste_interface__i_Kr_xr_gate__xr / (_lt_0_row[8]); // microA_per_microF
        const double var_i_Ks__i_Ks = (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__Ca_i__Ca_i), 1.3999999999999999))) * (-26.712338705498265 * log((0.018329999999999999 * mParameters[6] + mParameters[5]) / (0.018329999999999999 * var_chaste_interface__intracellular_ion_concentrations__Na_i + var_chaste_interface__intracellular_ion_concentrations__K_i)) + var_chaste_interface__membrane__V) * mParameters[13] * var_chaste_interface__i_Ks_xs1_gate__xs1 * var_chaste_interface__i_Ks_xs2_gate__xs2; // microA_per_microF
        const double var_i_Na__i_Na = pow(var_chaste_interface__i_Na_m_gate__m, 3) * (-var_equilibrium_potentials__E_Na + var_chaste_interface__membrane__V) * (0.20000000000000001 * var_chaste_interface__i_Na_j_gate__j + 0.80000000000000004 * var_chaste_interface__i_Na_h_gate__h) * mParameters[8]; // microA_per_microF
        const double var_i_NaCa__i_NaCa = (-1.5 * pow(mParameters[6], 3) * var_chaste_interface__Ca_i__Ca_i * _lt_0_row[3] + 0.40000000000000002 * pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * mParameters[14] * mParameters[4] * _lt_0_row[4]) / ((_lt_0_row[5]) * (1.0 + 6.9444444444444451e-9 / pow(var_chaste_interface__Ca_i__Ca_i, 2)) * (1004882.8125 * var_chaste_interface__Ca_i__Ca_i + 1.3 * pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) + pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * mParameters[4] + 1.5 * pow(mParameters[6], 3) * var_chaste_interface__Ca_i__Ca_i + 0.0035999999999999999 * pow(mParameters[6], 3) * (1.0 + 0.081300813008130079 * var_chaste_interface__intracellular_ion_concentrations__Na_i) + 1860.8670000000004 * (1.0 + 416.66666666666669 * var_chaste_interface__Ca_i__Ca_i) * mParameters[4])); // microA_per_microF
        const double var_i_NaK__i_NaK = 0.61875000000000002 * mParameters[5] / ((1.0 + 100.0 / pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 2)) * (1.5 + mParameters[5]) * (1.0 + _lt_0_row[7] + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * mParameters[6])) * _lt_0_row[6])); // microA_per_microF
        const double var_i_Na_L__i_Na_L = 0.037374999999999999 * pow(var_chaste_interface__i_Na_L_m_L_gate__m_L, 3) * (-var_equilibrium_potentials__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__i_Na_L_h_L_gate__h_L; // microA_per_microF
        const double var_i_to_1__i_to_1 = (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * (0.20000000000000001 * var_chaste_interface__i_to_1_i2_gate__i2 + 0.80000000000000004 * var_chaste_interface__i_to_1_i_gate__i) * mParameters[15] * var_chaste_interface__i_to_1_a_gate__a; // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__Cl_i = (-6.767281717060562e-9 * var_background_currents__i_Cl_b - 6.767281717060562e-9 * var_i_to_2__i_to_2 + var_CT_K_Cl__CT_K_Cl + var_CT_Na_Cl__CT_Na_Cl) * mParameters[3]; // millimolar / millisecond
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__K_i = (1.3534563434121124e-8 * var_i_NaK__i_NaK - 6.767281717060562e-9 * var_background_currents__i_K_b - 6.767281717060562e-9 * var_i_K1__i_K1 - 6.767281717060562e-9 * var_i_K_p__i_K_p - 6.767281717060562e-9 * var_i_Kr__i_Kr - 6.767281717060562e-9 * var_i_Ks__i_Ks - 6.767281717060562e-9 * var_i_to_1__i_to_1 + var_CT_K_Cl__CT_K_Cl) * mParameters[3]; // millimolar / millisecond
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__Na_i = (-2.0301845151181685e-8 * var_i_NaCa__i_NaCa - 2.0301845151181685e-8 * var_i_NaK__i_NaK - 6.767281717060562e-9 * var_background_currents__i_Na_b - 6.767281717060562e-9 * var_i_Na__i_Na - 6.767281717060562e-9 * var_i_Na_L__i_Na_L + var_CT_Na_Cl__CT_Na_Cl) * mParameters[3]; // millimolar / millisecond
        const double var_q_leak__q_leak = 0.066666666666666666 * var_chaste_interface__Ca_NSR__Ca_NSR * mParameters[0]; // millimolar_per_millisecond
        const double var_q_rel_ri_gate__Ca_fac = 1 / (1.0 + exp(3.3333333333333335 + 66.666666666666671 * var_i_Ca_L__i_Ca_L)); // millimolar
        const double d_dt_chaste_interface_var_q_rel_ri_gate__ri = (-var_chaste_interface__q_rel_ri_gate__ri + 1 / (1.0 + exp(-16.0 + 80.0 * var_q_rel_ri_gate__Ca_fac + 40000.0 * var_chaste_interface__Ca_r__Ca_r))) / (3.0 + (350.0 - 10.0 * var_Ca_MK_act__Ca_MK_act / (0.14999999999999999 + var_Ca_MK_act__Ca_MK_act)) / (1.0 + exp(-15.0 + 5000.0 * var_chaste_interface__Ca_r__Ca_r + 15.0 * var_q_rel_ri_gate__Ca_fac)) + 10.0 * var_Ca_MK_act__Ca_MK_act / (0.14999999999999999 + var_Ca_MK_act__Ca_MK_act)); // 1 / millisecond
        const double var_q_rel__q_rel = (-var_chaste_interface__Ca_r__Ca_r + var_chaste_interface__Ca_JSR__Ca_JSR) * mParameters[1] * var_chaste_interface__q_rel_ri_gate__ri * var_chaste_interface__q_rel_ro_gate__ro / (1.0 + exp(2.6000000000000001 + 0.20000000000000001 * mParameters[7] * var_i_Ca_L__i_Ca_L_max)); // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_Ca_r__Ca_r = (-var_Ca_r__q_diff + 0.23999999999999996 * var_q_rel__q_rel - 1.1504378919002956e-7 * var_i_Ca_L__i_Ca_L) / (1.0 + 2.2480000000000002 * var_chaste_interface__Ca_r__Ca_r / pow((0.0086999999999999994 + var_chaste_interface__Ca_r__Ca_r), 2) + 0.094 * var_chaste_interface__Ca_r__Ca_r / pow((0.00087000000000000001 + var_chaste_interface__Ca_r__Ca_r), 2)); // millimolar / millisecond
        const double d_dt_chaste_interface_var_q_rel_ro_gate__ro = -0.33333333333333331 * var_chaste_interface__q_rel_ro_gate__ro + 0.33333333333333331 * pow(var_chaste_interface__Ca_JSR__Ca_JSR, 1.8999999999999999) * pow(var_i_Ca_L__i_Ca_L, 2) / ((1.0 + pow(var_i_Ca_L__i_Ca_L, 2)) * (pow(var_chaste_interface__Ca_JSR__Ca_JSR, 1.8999999999999999) + 1644.6531773416521 * pow((var_chaste_interface__Ca_r__Ca_r / (0.0028 + var_chaste_interface__Ca_r__Ca_r)), 1.8999999999999999))); // 1 / millisecond
        const double var_q_tr__q_tr = 0.0083333333333333332 * var_chaste_interface__Ca_NSR__Ca_NSR - 0.0083333333333333332 * var_chaste_interface__Ca_JSR__Ca_JSR; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_Ca_JSR__Ca_JSR = (-var_q_rel__q_rel + var_q_tr__q_tr) / (1.0 + 8.0 / pow((0.80000000000000004 + var_chaste_interface__Ca_JSR__Ca_JSR), 2)); // millimolar / millisecond
        const double var_q_up__q_up = 0.5 * (1.0 + 0.75 * var_Ca_MK_act__Ca_MK_act / (0.14999999999999999 + var_Ca_MK_act__Ca_MK_act)) * var_chaste_interface__Ca_i__Ca_i * mParameters[2] / (0.00092000000000000003 - 0.00017000000000000001 * var_Ca_MK_act__Ca_MK_act / (0.14999999999999999 + var_Ca_MK_act__Ca_MK_act) + var_chaste_interface__Ca_i__Ca_i); // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_Ca_NSR__Ca_NSR = -var_q_leak__q_leak - 0.086956521739130432 * var_q_tr__q_tr + var_q_up__q_up; // millimolar / millisecond
        const double d_dt_chaste_interface_var_Ca_i__Ca_i = -(3.383640858530281e-9 * var_background_currents__i_Ca_b + 3.383640858530281e-9 * var_i_Ca_p__i_Ca_p + 0.081176470588235281 * var_q_up__q_up - 0.029411764705882353 * var_Ca_r__q_diff - 6.767281717060562e-9 * var_i_NaCa__i_NaCa - 0.081176470588235281 * var_q_leak__q_leak) / (1.0 + 0.14000000000000001 * var_chaste_interface__Ca_i__Ca_i / pow((0.00050000000000000001 + var_chaste_interface__Ca_i__Ca_i), 2) + 0.10000000000000001 * var_chaste_interface__Ca_i__Ca_i / pow((0.0023800000000000002 + var_chaste_interface__Ca_i__Ca_i), 2)); // millimolar / millisecond
        
        mEvalF[1] = d_dt_chaste_interface_var_Ca_i__Ca_i;
        mPartialF[1] = EvaluatePartialDerivative1(var_chaste_interface__environment__time, rY, delta);
        mEvalF[2] = d_dt_chaste_interface_var_i_Na_m_gate__m;
        mPartialF[2] = EvaluatePartialDerivative2(var_chaste_interface__environment__time, rY, delta);
        mEvalF[3] = d_dt_chaste_interface_var_i_Na_h_gate__h;
        mPartialF[3] = EvaluatePartialDerivative3(var_chaste_interface__environment__time, rY, delta);
        mEvalF[4] = d_dt_chaste_interface_var_i_Na_j_gate__j;
        mPartialF[4] = EvaluatePartialDerivative4(var_chaste_interface__environment__time, rY, delta);
        mEvalF[5] = d_dt_chaste_interface_var_i_Na_L_m_L_gate__m_L;
        mPartialF[5] = EvaluatePartialDerivative5(var_chaste_interface__environment__time, rY, delta);
        mEvalF[6] = d_dt_chaste_interface_var_i_Na_L_h_L_gate__h_L;
        mPartialF[6] = EvaluatePartialDerivative6(var_chaste_interface__environment__time, rY, delta);
        mEvalF[7] = d_dt_chaste_interface_var_i_Ca_L_d_gate__d;
        mPartialF[7] = EvaluatePartialDerivative7(var_chaste_interface__environment__time, rY, delta);
        mEvalF[8] = d_dt_chaste_interface_var_i_Ca_L_f_gate__f;
        mPartialF[8] = EvaluatePartialDerivative8(var_chaste_interface__environment__time, rY, delta);
        mEvalF[9] = d_dt_chaste_interface_var_i_Ca_L_f2_gate__f2;
        mPartialF[9] = EvaluatePartialDerivative9(var_chaste_interface__environment__time, rY, delta);
        mEvalF[10] = d_dt_chaste_interface_var_i_Ca_L_f_Ca_gate__f_Ca;
        mPartialF[10] = EvaluatePartialDerivative10(var_chaste_interface__environment__time, rY, delta);
        mEvalF[11] = d_dt_chaste_interface_var_i_Ca_L_f_Ca2_gate__f_Ca2;
        mPartialF[11] = EvaluatePartialDerivative11(var_chaste_interface__environment__time, rY, delta);
        mEvalF[12] = d_dt_chaste_interface_var_i_Ca_T_b_gate__b;
        mPartialF[12] = EvaluatePartialDerivative12(var_chaste_interface__environment__time, rY, delta);
        mEvalF[13] = d_dt_chaste_interface_var_i_Ca_T_g_gate__g;
        mPartialF[13] = EvaluatePartialDerivative13(var_chaste_interface__environment__time, rY, delta);
        mEvalF[14] = d_dt_chaste_interface_var_i_to_1_a_gate__a;
        mPartialF[14] = EvaluatePartialDerivative14(var_chaste_interface__environment__time, rY, delta);
        mEvalF[15] = d_dt_chaste_interface_var_i_to_1_i_gate__i;
        mPartialF[15] = EvaluatePartialDerivative15(var_chaste_interface__environment__time, rY, delta);
        mEvalF[16] = d_dt_chaste_interface_var_i_to_1_i2_gate__i2;
        mPartialF[16] = EvaluatePartialDerivative16(var_chaste_interface__environment__time, rY, delta);
        mEvalF[17] = d_dt_chaste_interface_var_i_Kr_xr_gate__xr;
        mPartialF[17] = EvaluatePartialDerivative17(var_chaste_interface__environment__time, rY, delta);
        mEvalF[18] = d_dt_chaste_interface_var_i_Ks_xs1_gate__xs1;
        mPartialF[18] = EvaluatePartialDerivative18(var_chaste_interface__environment__time, rY, delta);
        mEvalF[19] = d_dt_chaste_interface_var_i_Ks_xs2_gate__xs2;
        mPartialF[19] = EvaluatePartialDerivative19(var_chaste_interface__environment__time, rY, delta);
        mEvalF[20] = d_dt_chaste_interface_var_i_to_2_a_gate__a;
        mPartialF[20] = EvaluatePartialDerivative20(var_chaste_interface__environment__time, rY, delta);
        mEvalF[21] = d_dt_chaste_interface_var_intracellular_ion_concentrations__Na_i;
        mPartialF[21] = EvaluatePartialDerivative21(var_chaste_interface__environment__time, rY, delta);
        mEvalF[22] = d_dt_chaste_interface_var_intracellular_ion_concentrations__Cl_i;
        mPartialF[22] = EvaluatePartialDerivative22(var_chaste_interface__environment__time, rY, delta);
        mEvalF[23] = d_dt_chaste_interface_var_intracellular_ion_concentrations__K_i;
        mPartialF[23] = EvaluatePartialDerivative23(var_chaste_interface__environment__time, rY, delta);
        mEvalF[24] = d_dt_chaste_interface_var_Ca_MK_act__Ca_MK_trap;
        mPartialF[24] = EvaluatePartialDerivative24(var_chaste_interface__environment__time, rY, delta);
        mEvalF[25] = d_dt_chaste_interface_var_Ca_NSR__Ca_NSR;
        mPartialF[25] = EvaluatePartialDerivative25(var_chaste_interface__environment__time, rY, delta);
        mEvalF[26] = d_dt_chaste_interface_var_Ca_JSR__Ca_JSR;
        mPartialF[26] = EvaluatePartialDerivative26(var_chaste_interface__environment__time, rY, delta);
        mEvalF[27] = d_dt_chaste_interface_var_Ca_r__Ca_r;
        mPartialF[27] = EvaluatePartialDerivative27(var_chaste_interface__environment__time, rY, delta);
        mEvalF[28] = d_dt_chaste_interface_var_q_rel_ri_gate__ri;
        mPartialF[28] = EvaluatePartialDerivative28(var_chaste_interface__environment__time, rY, delta);
        mEvalF[29] = d_dt_chaste_interface_var_q_rel_ro_gate__ro;
        mPartialF[29] = EvaluatePartialDerivative29(var_chaste_interface__environment__time, rY, delta);
        
        {
            if (fabs(mPartialF[1]) < delta){
                rY[1] += mDt*d_dt_chaste_interface_var_Ca_i__Ca_i;
            }
            else
            {
                rY[1] += (d_dt_chaste_interface_var_Ca_i__Ca_i/mPartialF[1])*(exp(mPartialF[1]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[2]) < delta){
                rY[2] += mDt*d_dt_chaste_interface_var_i_Na_m_gate__m;
            }
            else
            {
                rY[2] += (d_dt_chaste_interface_var_i_Na_m_gate__m/mPartialF[2])*(exp(mPartialF[2]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[3]) < delta){
                rY[3] += mDt*d_dt_chaste_interface_var_i_Na_h_gate__h;
            }
            else
            {
                rY[3] += (d_dt_chaste_interface_var_i_Na_h_gate__h/mPartialF[3])*(exp(mPartialF[3]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[4]) < delta){
                rY[4] += mDt*d_dt_chaste_interface_var_i_Na_j_gate__j;
            }
            else
            {
                rY[4] += (d_dt_chaste_interface_var_i_Na_j_gate__j/mPartialF[4])*(exp(mPartialF[4]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[5]) < delta){
                rY[5] += mDt*d_dt_chaste_interface_var_i_Na_L_m_L_gate__m_L;
            }
            else
            {
                rY[5] += (d_dt_chaste_interface_var_i_Na_L_m_L_gate__m_L/mPartialF[5])*(exp(mPartialF[5]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[6]) < delta){
                rY[6] += mDt*d_dt_chaste_interface_var_i_Na_L_h_L_gate__h_L;
            }
            else
            {
                rY[6] += (d_dt_chaste_interface_var_i_Na_L_h_L_gate__h_L/mPartialF[6])*(exp(mPartialF[6]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[7]) < delta){
                rY[7] += mDt*d_dt_chaste_interface_var_i_Ca_L_d_gate__d;
            }
            else
            {
                rY[7] += (d_dt_chaste_interface_var_i_Ca_L_d_gate__d/mPartialF[7])*(exp(mPartialF[7]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[8]) < delta){
                rY[8] += mDt*d_dt_chaste_interface_var_i_Ca_L_f_gate__f;
            }
            else
            {
                rY[8] += (d_dt_chaste_interface_var_i_Ca_L_f_gate__f/mPartialF[8])*(exp(mPartialF[8]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[9]) < delta){
                rY[9] += mDt*d_dt_chaste_interface_var_i_Ca_L_f2_gate__f2;
            }
            else
            {
                rY[9] += (d_dt_chaste_interface_var_i_Ca_L_f2_gate__f2/mPartialF[9])*(exp(mPartialF[9]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[10]) < delta){
                rY[10] += mDt*d_dt_chaste_interface_var_i_Ca_L_f_Ca_gate__f_Ca;
            }
            else
            {
                rY[10] += (d_dt_chaste_interface_var_i_Ca_L_f_Ca_gate__f_Ca/mPartialF[10])*(exp(mPartialF[10]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[11]) < delta){
                rY[11] += mDt*d_dt_chaste_interface_var_i_Ca_L_f_Ca2_gate__f_Ca2;
            }
            else
            {
                rY[11] += (d_dt_chaste_interface_var_i_Ca_L_f_Ca2_gate__f_Ca2/mPartialF[11])*(exp(mPartialF[11]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[12]) < delta){
                rY[12] += mDt*d_dt_chaste_interface_var_i_Ca_T_b_gate__b;
            }
            else
            {
                rY[12] += (d_dt_chaste_interface_var_i_Ca_T_b_gate__b/mPartialF[12])*(exp(mPartialF[12]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[13]) < delta){
                rY[13] += mDt*d_dt_chaste_interface_var_i_Ca_T_g_gate__g;
            }
            else
            {
                rY[13] += (d_dt_chaste_interface_var_i_Ca_T_g_gate__g/mPartialF[13])*(exp(mPartialF[13]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[14]) < delta){
                rY[14] += mDt*d_dt_chaste_interface_var_i_to_1_a_gate__a;
            }
            else
            {
                rY[14] += (d_dt_chaste_interface_var_i_to_1_a_gate__a/mPartialF[14])*(exp(mPartialF[14]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[15]) < delta){
                rY[15] += mDt*d_dt_chaste_interface_var_i_to_1_i_gate__i;
            }
            else
            {
                rY[15] += (d_dt_chaste_interface_var_i_to_1_i_gate__i/mPartialF[15])*(exp(mPartialF[15]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[16]) < delta){
                rY[16] += mDt*d_dt_chaste_interface_var_i_to_1_i2_gate__i2;
            }
            else
            {
                rY[16] += (d_dt_chaste_interface_var_i_to_1_i2_gate__i2/mPartialF[16])*(exp(mPartialF[16]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[17]) < delta){
                rY[17] += mDt*d_dt_chaste_interface_var_i_Kr_xr_gate__xr;
            }
            else
            {
                rY[17] += (d_dt_chaste_interface_var_i_Kr_xr_gate__xr/mPartialF[17])*(exp(mPartialF[17]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[18]) < delta){
                rY[18] += mDt*d_dt_chaste_interface_var_i_Ks_xs1_gate__xs1;
            }
            else
            {
                rY[18] += (d_dt_chaste_interface_var_i_Ks_xs1_gate__xs1/mPartialF[18])*(exp(mPartialF[18]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[19]) < delta){
                rY[19] += mDt*d_dt_chaste_interface_var_i_Ks_xs2_gate__xs2;
            }
            else
            {
                rY[19] += (d_dt_chaste_interface_var_i_Ks_xs2_gate__xs2/mPartialF[19])*(exp(mPartialF[19]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[20]) < delta){
                rY[20] += mDt*d_dt_chaste_interface_var_i_to_2_a_gate__a;
            }
            else
            {
                rY[20] += (d_dt_chaste_interface_var_i_to_2_a_gate__a/mPartialF[20])*(exp(mPartialF[20]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[21]) < delta){
                rY[21] += mDt*d_dt_chaste_interface_var_intracellular_ion_concentrations__Na_i;
            }
            else
            {
                rY[21] += (d_dt_chaste_interface_var_intracellular_ion_concentrations__Na_i/mPartialF[21])*(exp(mPartialF[21]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[22]) < delta){
                rY[22] += mDt*d_dt_chaste_interface_var_intracellular_ion_concentrations__Cl_i;
            }
            else
            {
                rY[22] += (d_dt_chaste_interface_var_intracellular_ion_concentrations__Cl_i/mPartialF[22])*(exp(mPartialF[22]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[23]) < delta){
                rY[23] += mDt*d_dt_chaste_interface_var_intracellular_ion_concentrations__K_i;
            }
            else
            {
                rY[23] += (d_dt_chaste_interface_var_intracellular_ion_concentrations__K_i/mPartialF[23])*(exp(mPartialF[23]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[24]) < delta){
                rY[24] += mDt*d_dt_chaste_interface_var_Ca_MK_act__Ca_MK_trap;
            }
            else
            {
                rY[24] += (d_dt_chaste_interface_var_Ca_MK_act__Ca_MK_trap/mPartialF[24])*(exp(mPartialF[24]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[25]) < delta){
                rY[25] += mDt*d_dt_chaste_interface_var_Ca_NSR__Ca_NSR;
            }
            else
            {
                rY[25] += (d_dt_chaste_interface_var_Ca_NSR__Ca_NSR/mPartialF[25])*(exp(mPartialF[25]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[26]) < delta){
                rY[26] += mDt*d_dt_chaste_interface_var_Ca_JSR__Ca_JSR;
            }
            else
            {
                rY[26] += (d_dt_chaste_interface_var_Ca_JSR__Ca_JSR/mPartialF[26])*(exp(mPartialF[26]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[27]) < delta){
                rY[27] += mDt*d_dt_chaste_interface_var_Ca_r__Ca_r;
            }
            else
            {
                rY[27] += (d_dt_chaste_interface_var_Ca_r__Ca_r/mPartialF[27])*(exp(mPartialF[27]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[28]) < delta){
                rY[28] += mDt*d_dt_chaste_interface_var_q_rel_ri_gate__ri;
            }
            else
            {
                rY[28] += (d_dt_chaste_interface_var_q_rel_ri_gate__ri/mPartialF[28])*(exp(mPartialF[28]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[29]) < delta){
                rY[29] += mDt*d_dt_chaste_interface_var_q_rel_ro_gate__ro;
            }
            else
            {
                rY[29] += (d_dt_chaste_interface_var_q_rel_ro_gate__ro/mPartialF[29])*(exp(mPartialF[29]*mDt)-1.0);
            }
            
        }        
        
    }
   
    
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative0(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        double d_dt_chaste_interface_var_membrane__V;
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__Ca_i__Ca_i = rY[1];
        // Units: millimolar; Initial value: 0.00022355433459434943
        double var_chaste_interface__i_Na_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.002003390432234504
        double var_chaste_interface__i_Na_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.9786390933308567
        double var_chaste_interface__i_Na_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.09866447258167589
        double var_chaste_interface__i_Na_L_m_L_gate__m_L = rY[5];
        // Units: dimensionless; Initial value: 0.002003390432234504
        double var_chaste_interface__i_Na_L_h_L_gate__h_L = rY[6];
        // Units: dimensionless; Initial value: 0.8946968372659203
        double var_chaste_interface__i_Ca_L_d_gate__d = rY[7];
        // Units: dimensionless; Initial value: 2.322223865147363e-06
        double var_chaste_interface__i_Ca_L_f_gate__f = rY[8];
        // Units: dimensionless; Initial value: 0.9985607329462358
        double var_chaste_interface__i_Ca_L_f2_gate__f2 = rY[9];
        // Units: dimensionless; Initial value: 0.8173435436674658
        double var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca = rY[10];
        // Units: dimensionless; Initial value: 0.9610551285529658
        double var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 = rY[11];
        // Units: dimensionless; Initial value: 0.868690796671854
        double var_chaste_interface__i_Ca_T_b_gate__b = rY[12];
        // Units: dimensionless; Initial value: 0.0002563937630984438
        double var_chaste_interface__i_Ca_T_g_gate__g = rY[13];
        // Units: dimensionless; Initial value: 0.9720432601848331
        double var_chaste_interface__i_to_1_a_gate__a = rY[14];
        // Units: dimensionless; Initial value: 0.0004238729429342389
        double var_chaste_interface__i_to_1_i_gate__i = rY[15];
        // Units: dimensionless; Initial value: 0.9990935802459496
        double var_chaste_interface__i_to_1_i2_gate__i2 = rY[16];
        // Units: dimensionless; Initial value: 0.9777368439681764
        double var_chaste_interface__i_Kr_xr_gate__xr = rY[17];
        // Units: dimensionless; Initial value: 0.07084939408222911
        double var_chaste_interface__i_Ks_xs1_gate__xs1 = rY[18];
        // Units: dimensionless; Initial value: 0.0011737654433043125
        double var_chaste_interface__i_Ks_xs2_gate__xs2 = rY[19];
        // Units: dimensionless; Initial value: 0.001179442867470093
        double var_chaste_interface__i_to_2_a_gate__a = rY[20];
        // Units: dimensionless; Initial value: 0.0014909437525000811
        double var_chaste_interface__intracellular_ion_concentrations__Na_i = rY[21];
        // Units: millimolar; Initial value: 9.927155552932733
        double var_chaste_interface__intracellular_ion_concentrations__Cl_i = rY[22];
        // Units: millimolar; Initial value: 18.904682470140408
        double var_chaste_interface__intracellular_ion_concentrations__K_i = rY[23];
        // Units: millimolar; Initial value: 141.9670801746057
        double var_chaste_interface__Ca_r__Ca_r = rY[27];
        // Units: millimolar; Initial value: 0.00022418117117903934
        

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_i_Ca_p__i_Ca_p = 0.057500000000000002 * var_chaste_interface__Ca_i__Ca_i / (0.00050000000000000001 + var_chaste_interface__Ca_i__Ca_i); // microA_per_microF
        const double var_i_to_2__i_to_2 = 20.0 * ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (3.8593999999999993e-9 * (-100.0 * exp(9.9999999999999995e-8) + var_chaste_interface__intracellular_ion_concentrations__Cl_i) / (1.0 - exp(9.9999999999999995e-8)) + 3.8593999999999993e-9 * (-100.0 * exp(-9.9999999999999995e-8) + var_chaste_interface__intracellular_ion_concentrations__Cl_i) / (1.0 - exp(-9.9999999999999995e-8))) - 3.8593999999999993e-9 * (-100.0 * exp(-9.9999999999999995e-8) + var_chaste_interface__intracellular_ion_concentrations__Cl_i) / (1.0 - exp(-9.9999999999999995e-8))) : (0.0014448004881001341 * (_lt_0_row[0] + var_chaste_interface__intracellular_ion_concentrations__Cl_i) * var_chaste_interface__membrane__V / (_lt_0_row[1]))) * var_chaste_interface__i_to_2_a_gate__a; // microA_per_microF
        const double var_background_currents__i_Ca_b = ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (3.8499135947999997e-9 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_i__Ca_i * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) + 3.8499135947999997e-9 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_i__Ca_i * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8))) - 3.8499135947999997e-9 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_i__Ca_i * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8))) : (0.0028824983370007683 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_i__Ca_i * _lt_0_row[11]) * var_chaste_interface__membrane__V / (_lt_0_row[12]))); // microA_per_microF
        const double var_i_Ca_L__i_Ca_L_max = ((fabs(-15.0 + var_chaste_interface__membrane__V) < 1.3356169352718439e-6) ? (374358.83507888648 * (-14.999998664383064 + var_chaste_interface__membrane__V) * (4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(9.9999999999770198e-8)) / (-1.0 + exp(9.9999999999770198e-8)) + 4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(-9.9999999999770198e-8)) / (-1.0 + exp(-9.9999999999770198e-8))) - 4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(-9.9999999999770198e-8)) / (-1.0 + exp(-9.9999999999770198e-8))) : (3.510865186083326 * (-15.0 + var_chaste_interface__membrane__V) * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * _lt_0_row[9]) / (_lt_0_row[10]))); // microA_per_microF
        const double var_i_Ca_L__i_Ca_L = mParameters[7] * var_i_Ca_L__i_Ca_L_max * var_chaste_interface__i_Ca_L_d_gate__d * var_chaste_interface__i_Ca_L_f2_gate__f2 * var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 * var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca * var_chaste_interface__i_Ca_L_f_gate__f; // microA_per_microF
        const double var_equilibrium_potentials__E_Cl = -26.712338705498265 * log(100.0 / var_chaste_interface__intracellular_ion_concentrations__Cl_i); // millivolt
        const double var_background_currents__i_Cl_b = 0.00022499999999999999 * var_chaste_interface__membrane__V - 0.00022499999999999999 * var_equilibrium_potentials__E_Cl; // microA_per_microF
        const double var_equilibrium_potentials__E_K = 26.712338705498265 * log(mParameters[5] / var_chaste_interface__intracellular_ion_concentrations__K_i); // millivolt
        const double var_background_currents__i_K_b = 0.0050000000000000001 * var_chaste_interface__membrane__V - 0.0050000000000000001 * var_equilibrium_potentials__E_K; // microA_per_microF
        const double var_equilibrium_potentials__E_Na = 26.712338705498265 * log(mParameters[6] / var_chaste_interface__intracellular_ion_concentrations__Na_i); // millivolt
        const double var_background_currents__i_Na_b = 0.0025000000000000001 * var_chaste_interface__membrane__V - 0.0025000000000000001 * var_equilibrium_potentials__E_Na; // microA_per_microF
        const double var_i_K1__i_K1 = (0.0040000000000000001 + 0.4389381125701739 * sqrt(mParameters[5]) * mParameters[11] / ((1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_equilibrium_potentials__E_K)) * (1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_equilibrium_potentials__E_K)) + (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_equilibrium_potentials__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_equilibrium_potentials__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_equilibrium_potentials__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V))))) * (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V); // microA_per_microF
        const double var_i_K_p__i_K_p = 0.0027599999999999999 * (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) / (_lt_0_row[2]); // microA_per_microF
        const double var_i_Kr__i_Kr = 0.43033148291193518 * sqrt(mParameters[5]) * (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * mParameters[12] * var_chaste_interface__i_Kr_xr_gate__xr / (_lt_0_row[8]); // microA_per_microF
        const double var_i_Ks__i_Ks = (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__Ca_i__Ca_i), 1.3999999999999999))) * (-26.712338705498265 * log((0.018329999999999999 * mParameters[6] + mParameters[5]) / (0.018329999999999999 * var_chaste_interface__intracellular_ion_concentrations__Na_i + var_chaste_interface__intracellular_ion_concentrations__K_i)) + var_chaste_interface__membrane__V) * mParameters[13] * var_chaste_interface__i_Ks_xs1_gate__xs1 * var_chaste_interface__i_Ks_xs2_gate__xs2; // microA_per_microF
        const double var_i_Na__i_Na = pow(var_chaste_interface__i_Na_m_gate__m, 3) * (-var_equilibrium_potentials__E_Na + var_chaste_interface__membrane__V) * (0.20000000000000001 * var_chaste_interface__i_Na_j_gate__j + 0.80000000000000004 * var_chaste_interface__i_Na_h_gate__h) * mParameters[8]; // microA_per_microF
        const double var_i_NaCa__i_NaCa = (-1.5 * pow(mParameters[6], 3) * var_chaste_interface__Ca_i__Ca_i * _lt_0_row[3] + 0.40000000000000002 * pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * mParameters[14] * mParameters[4] * _lt_0_row[4]) / ((_lt_0_row[5]) * (1.0 + 6.9444444444444451e-9 / pow(var_chaste_interface__Ca_i__Ca_i, 2)) * (1004882.8125 * var_chaste_interface__Ca_i__Ca_i + 1.3 * pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) + pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * mParameters[4] + 1.5 * pow(mParameters[6], 3) * var_chaste_interface__Ca_i__Ca_i + 0.0035999999999999999 * pow(mParameters[6], 3) * (1.0 + 0.081300813008130079 * var_chaste_interface__intracellular_ion_concentrations__Na_i) + 1860.8670000000004 * (1.0 + 416.66666666666669 * var_chaste_interface__Ca_i__Ca_i) * mParameters[4])); // microA_per_microF
        const double var_i_NaK__i_NaK = 0.61875000000000002 * mParameters[5] / ((1.0 + 100.0 / pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 2)) * (1.5 + mParameters[5]) * (1.0 + _lt_0_row[7] + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * mParameters[6])) * _lt_0_row[6])); // microA_per_microF
        const double var_i_Na_L__i_Na_L = 0.037374999999999999 * pow(var_chaste_interface__i_Na_L_m_L_gate__m_L, 3) * (-var_equilibrium_potentials__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__i_Na_L_h_L_gate__h_L; // microA_per_microF
        const double var_i_to_1__i_to_1 = (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * (0.20000000000000001 * var_chaste_interface__i_to_1_i2_gate__i2 + 0.80000000000000004 * var_chaste_interface__i_to_1_i_gate__i) * mParameters[15] * var_chaste_interface__i_to_1_a_gate__a; // microA_per_microF
        d_dt_chaste_interface_var_membrane__V = -var_background_currents__i_Ca_b - var_background_currents__i_Cl_b - var_background_currents__i_K_b - var_background_currents__i_Na_b - var_i_Ca_L__i_Ca_L - var_i_Ca_p__i_Ca_p - var_i_K1__i_K1 - var_i_K_p__i_K_p - var_i_Kr__i_Kr - var_i_Ks__i_Ks - var_i_Na__i_Na - var_i_NaCa__i_NaCa - var_i_NaK__i_NaK - var_i_Na_L__i_Na_L - var_i_to_1__i_to_1 - var_i_to_2__i_to_2 - GetIntracellularAreaStimulus(var_chaste_interface__environment__time) / HeartConfig::Instance()->GetCapacitance() - 0.13 * (-50.0 + var_chaste_interface__membrane__V) * var_chaste_interface__i_Ca_T_b_gate__b * var_chaste_interface__i_Ca_T_g_gate__g; // millivolt / millisecond

        return d_dt_chaste_interface_var_membrane__V;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative0(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -83.43812846286808
            double var_chaste_interface__Ca_i__Ca_i = rY[1];
            // Units: millimolar; Initial value: 0.00022355433459434943
            double var_chaste_interface__i_Na_m_gate__m = rY[2];
            // Units: dimensionless; Initial value: 0.002003390432234504
            double var_chaste_interface__i_Na_h_gate__h = rY[3];
            // Units: dimensionless; Initial value: 0.9786390933308567
            double var_chaste_interface__i_Na_j_gate__j = rY[4];
            // Units: dimensionless; Initial value: 0.09866447258167589
            double var_chaste_interface__i_Na_L_m_L_gate__m_L = rY[5];
            // Units: dimensionless; Initial value: 0.002003390432234504
            double var_chaste_interface__i_Na_L_h_L_gate__h_L = rY[6];
            // Units: dimensionless; Initial value: 0.8946968372659203
            double var_chaste_interface__i_Ca_L_d_gate__d = rY[7];
            // Units: dimensionless; Initial value: 2.322223865147363e-06
            double var_chaste_interface__i_Ca_L_f_gate__f = rY[8];
            // Units: dimensionless; Initial value: 0.9985607329462358
            double var_chaste_interface__i_Ca_L_f2_gate__f2 = rY[9];
            // Units: dimensionless; Initial value: 0.8173435436674658
            double var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca = rY[10];
            // Units: dimensionless; Initial value: 0.9610551285529658
            double var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 = rY[11];
            // Units: dimensionless; Initial value: 0.868690796671854
            double var_chaste_interface__i_Ca_T_b_gate__b = rY[12];
            // Units: dimensionless; Initial value: 0.0002563937630984438
            double var_chaste_interface__i_Ca_T_g_gate__g = rY[13];
            // Units: dimensionless; Initial value: 0.9720432601848331
            double var_chaste_interface__i_to_1_a_gate__a = rY[14];
            // Units: dimensionless; Initial value: 0.0004238729429342389
            double var_chaste_interface__i_to_1_i_gate__i = rY[15];
            // Units: dimensionless; Initial value: 0.9990935802459496
            double var_chaste_interface__i_to_1_i2_gate__i2 = rY[16];
            // Units: dimensionless; Initial value: 0.9777368439681764
            double var_chaste_interface__i_Kr_xr_gate__xr = rY[17];
            // Units: dimensionless; Initial value: 0.07084939408222911
            double var_chaste_interface__i_Ks_xs1_gate__xs1 = rY[18];
            // Units: dimensionless; Initial value: 0.0011737654433043125
            double var_chaste_interface__i_Ks_xs2_gate__xs2 = rY[19];
            // Units: dimensionless; Initial value: 0.001179442867470093
            double var_chaste_interface__i_to_2_a_gate__a = rY[20];
            // Units: dimensionless; Initial value: 0.0014909437525000811
            double var_chaste_interface__intracellular_ion_concentrations__Na_i = rY[21];
            // Units: millimolar; Initial value: 9.927155552932733
            double var_chaste_interface__intracellular_ion_concentrations__Cl_i = rY[22];
            // Units: millimolar; Initial value: 18.904682470140408
            double var_chaste_interface__intracellular_ion_concentrations__K_i = rY[23];
            // Units: millimolar; Initial value: 141.9670801746057
            double var_chaste_interface__Ca_r__Ca_r = rY[27];
            // Units: millimolar; Initial value: 0.00022418117117903934
            

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

            const double var_x0 = exp(9.9999999999999995e-8);
            const double var_x1 = 1 / (1.0 - var_x0);
            const double var_x2 = -100.0 * var_x0 + var_chaste_interface__intracellular_ion_concentrations__Cl_i;
            const double var_x3 = exp(-9.9999999999999995e-8);
            const double var_x4 = 1 / (1.0 - var_x3);
            const double var_x5 = -100.0 * var_x3 + var_chaste_interface__intracellular_ion_concentrations__Cl_i;
            const double var_x6 = fabs(var_chaste_interface__membrane__V);
            const double var_x7 = var_x6 < 2.6712338705498262e-6;
            const double var_x8 = 0.037435883507802616 * var_chaste_interface__membrane__V;
            const double var_x9 = exp(var_x8);
            const double var_x10 = 1.0 - var_x9;
            const double var_x11 = 1 / var_x10;
            const double var_x12 = var_x11 * var_chaste_interface__i_to_2_a_gate__a;
            const double var_x13 = -100.0 * var_x9 + var_chaste_interface__intracellular_ion_concentrations__Cl_i;
            const double var_x14 = 0.028896009762002683 * var_x13;
            const double var_x15 = var_x12 * var_chaste_interface__membrane__V;
            const double var_x16 = ((var_x7) ? ((0.014448004881001342 * var_x1 * var_x2 + 0.014448004881001342 * var_x4 * var_x5) * var_chaste_interface__i_to_2_a_gate__a) : (var_x12 * var_x14 - 0.10817476552906598 * var_x15 * var_x9 + 0.0010817476552906597 * var_x13 * var_x9 * var_chaste_interface__i_to_2_a_gate__a * var_chaste_interface__membrane__V / pow(var_x10, 2)));
            const double var_x17 = 1 / (-1.0 + var_x0);
            const double var_x18 = -0.34100000000000003 * mParameters[4];
            const double var_x19 = var_chaste_interface__Ca_i__Ca_i;
            const double var_x20 = var_x17 * (var_x18 + var_x0 * var_x19);
            const double var_x21 = 1 / (-1.0 + var_x3);
            const double var_x22 = var_x21 * (var_x18 + var_x19 * var_x3);
            const double var_x23 = var_x6 < 1.3356169352749131e-6;
            const double var_x24 = 0.074871767015605231 * var_chaste_interface__membrane__V;
            const double var_x25 = exp(var_x24);
            const double var_x26 = var_x18 + var_x19 * var_x25;
            const double var_x27 = -1.0 + var_x25;
            const double var_x28 = 1 / var_x27;
            const double var_x29 = 0.0028824983370007683 * var_x28;
            const double var_x30 = var_x26 * var_x29;
            const double var_x31 = var_x25 * var_chaste_interface__membrane__V;
            const double var_x32 = 0.00021581774391079108 * var_x31;
            const double var_x33 = ((var_x23) ? (0.0014412491685003841 * var_x20 + 0.0014412491685003841 * var_x22) : (var_x30 + var_x28 * var_x32 * var_chaste_interface__Ca_i__Ca_i - var_x26 * var_x32 / pow(var_x27, 2)));
            const double var_x34 = exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V);
            const double var_x35 = 1.0 + var_x34;
            const double var_x36 = 1 / var_x35;
            const double var_x37 = 1 / var_chaste_interface__intracellular_ion_concentrations__K_i;
            const double var_x38 = log(var_x37 * mParameters[5]);
            const double var_x39 = 26.712338705498265 * var_x38;
            const double var_x40 = -var_x39 + var_chaste_interface__membrane__V;
            const double var_x41 = exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 6.3708927812613361 * var_x38);
            const double var_x42 = 1.0 + var_x41;
            const double var_x43 = var_x41 / pow(var_x42, 2);
            const double var_x44 = sqrt(mParameters[5]);
            const double var_x45 = 1 / var_x42;
            const double var_x46 = exp(-2.4444678999999998 + 13.738155796237757 * var_x38 - 0.51429999999999998 * var_chaste_interface__membrane__V);
            const double var_x47 = 1.0 + var_x46;
            const double var_x48 = 1 / var_x47;
            const double var_x49 = exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 2.1455350448256207 * var_x38);
            const double var_x50 = exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 1.6494869150645177 * var_x38);
            const double var_x51 = var_x50 + 0.49124000000000001 * var_x49;
            const double var_x52 = var_x48 * var_x51;
            const double var_x53 = var_x44 * mParameters[11] / (var_x52 + 1.02 * var_x45);
            const double var_x54 = var_x43 * var_x53;
            const double var_x55 = var_x46 * var_x51 / pow(var_x47, 2);
            const double var_x56 = 0.24326999999999999 * var_x43 - 0.51429999999999998 * var_x55 - var_x48 * (0.061749999999999999 * var_x50 + 0.039456396800000001 * var_x49);
            const double var_x57 = var_x44 * var_x45 * mParameters[11] / pow((var_x45 + 0.98039215686274506 * var_x52), 2);
            const double var_x58 = 0.42189361069797565 * var_x57;
            const double var_x59 = pow(var_chaste_interface__i_Na_L_m_L_gate__m_L, 3);
            const double var_x60 = 0.037374999999999999 * var_x59;
            const double var_x61 = (-0.20000000000000001 * var_chaste_interface__i_to_1_i2_gate__i2 - 0.80000000000000004 * var_chaste_interface__i_to_1_i_gate__i) * mParameters[15];
            const double var_x62 = var_x61 * var_chaste_interface__i_to_1_a_gate__a;
            const double var_x63 = 0.20000000000000001 * var_chaste_interface__i_Na_j_gate__j + 0.80000000000000004 * var_chaste_interface__i_Na_h_gate__h;
            const double var_x64 = pow(var_chaste_interface__i_Na_m_gate__m, 3) * mParameters[8];
            const double var_x65 = var_x63 * var_x64;
            const double var_x66 = var_x34 * var_x40 / pow(var_x35, 2);
            const double var_x67 = 1 / var_chaste_interface__Ca_i__Ca_i;
            const double var_x68 = pow(var_x67, 1.3999999999999999);
            const double var_x69 = 1.0 + 6.4818210260626455e-7 * var_x68;
            const double var_x70 = 1 / var_x69;
            const double var_x71 = -1.0 - 0.59999999999999998 * var_x70;
            const double var_x72 = mParameters[13] * var_chaste_interface__i_Ks_xs2_gate__xs2;
            const double var_x73 = var_x71 * var_x72;
            const double var_x74 = var_x73 * var_chaste_interface__i_Ks_xs1_gate__xs1;
            const double var_x75 = _lt_0_row[3];
            const double var_x76 = pow(mParameters[6], 3);
            const double var_x77 = var_x76 * var_chaste_interface__Ca_i__Ca_i;
            const double var_x78 = pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3);
            const double var_x79 = var_x78 * mParameters[4];
            const double var_x80 = mParameters[14] * _lt_0_row[4];
            const double var_x81 = var_x79 * var_x80;
            const double var_x82 = 1.0 + 0.27000000000000002 * var_x75;
            const double var_x83 = 1 / var_x82;
            const double var_x84 = 1.0 + 6.9444444444444451e-9 / pow(var_chaste_interface__Ca_i__Ca_i, 2);
            const double var_x85 = 1 / var_x84;
            const double var_x86 = 1.5 * var_x76;
            const double var_x87 = var_x86 * var_chaste_interface__Ca_i__Ca_i;
            const double var_x88 = var_x76 * (1.0 + 0.081300813008130079 * var_chaste_interface__intracellular_ion_concentrations__Na_i);
            const double var_x89 = (1.0 + 416.66666666666669 * var_chaste_interface__Ca_i__Ca_i) * mParameters[4];
            const double var_x90 = 1 / (var_x79 + var_x87 + 1004882.8125 * var_chaste_interface__Ca_i__Ca_i + 0.0035999999999999999 * var_x88 + 1.3 * var_x78 + 1860.8670000000004 * var_x89);
            const double var_x91 = var_x85 * var_x90;
            const double var_x92 = var_x83 * var_x91;
            const double var_x93 = var_x92 * (0.0052410236910923665 * var_x81 + 0.036499986420107551 * var_x75 * var_x77);
            const double var_x94 = exp(-0.26470588235294124 + 0.049019607843137261 * var_chaste_interface__membrane__V);
            const double var_x95 = 1.0 + var_x94;
            const double var_x96 = var_x44 * mParameters[12] / var_x95;
            const double var_x97 = 0.43033148291193518 * var_x96;
            const double var_x98 = var_x45 * var_x53;
            const double var_x99 = -0.4389381125701739 * var_x98;
            const double var_x100 = pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 2);
            const double var_x101 = 1 / var_x100;
            const double var_x102 = exp(-0.003743588350780262 * var_chaste_interface__membrane__V);
            const double var_x103 = exp(0.01485884101040119 * mParameters[6]);
            const double var_x104 = exp(-var_x8);
            const double var_x105 = 1.0 + 0.1245 * var_x102 + 0.036499999999999998 * var_x104 * (-0.14285714285714285 + 0.14285714285714285 * var_x103);
            const double var_x106 = mParameters[5] / (1.5 + mParameters[5]);
            const double var_x107 = var_x106 * (0.00046607674967214262 * var_x102 + 0.037435883507802616 * var_x104 * (-0.0052142857142857138 + 0.0052142857142857138 * var_x103)) / (pow(var_x105, 2) * (1.0 + 100.0 * var_x101));
            const double var_x108 = 0.40000000000000002 * var_x81 - var_x75 * var_x87;
            const double var_x109 = var_x108 * var_x75 * var_x91 / pow(var_x82, 2);
            const double var_x110 = var_x40 * var_x44 * var_x94 * mParameters[12] * var_chaste_interface__i_Kr_xr_gate__xr / pow(var_x95, 2);
            const double var_x111 = exp(9.9999999999770198e-8);
            const double var_x112 = 1 / (-1.0 + var_x111);
            const double var_x113 = var_chaste_interface__Ca_r__Ca_r;
            const double var_x114 = var_x112 * (var_x18 + var_x111 * var_x113);
            const double var_x115 = exp(-9.9999999999770198e-8);
            const double var_x116 = 1 / (-1.0 + var_x115);
            const double var_x117 = var_x116 * (var_x18 + var_x113 * var_x115);
            const double var_x118 = -15.0 + var_chaste_interface__membrane__V;
            const double var_x119 = fabs(var_x118) < 1.3356169352718439e-6;
            const double var_x120 = exp(-1.1230765052340785 + var_x24);
            const double var_x121 = var_x18 + var_x113 * var_x120;
            const double var_x122 = -1.0 + var_x120;
            const double var_x123 = 1 / var_x122;
            const double var_x124 = 3.510865186083326 * var_x123;
            const double var_x125 = var_x121 * var_x124;
            const double var_x126 = var_x118 * var_x120;
            const double var_x127 = 0.26286468023563031 * var_x126;
            const double var_x128 = pow(var_x122, (-2));
            const double var_x129 = var_x121 * var_x128;
            const double var_x130 = ((var_x119) ? (1.755432593041663 * var_x114 + 1.755432593041663 * var_x117) : (var_x125 - var_x127 * var_x129 + var_x123 * var_x127 * var_chaste_interface__Ca_r__Ca_r)) * mParameters[7];
            const double var_x131 = var_chaste_interface__i_Ca_L_d_gate__d * var_chaste_interface__i_Ca_L_f2_gate__f2 * var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca * var_chaste_interface__i_Ca_L_f_gate__f;
            const double var_x132 = var_x131 * var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2;
            const double var_x133 = var_x130 * var_x132;
            
            partialF = -0.011725000000000001 + var_x62 + var_x74 + var_x99 - var_x133 - var_x16 - var_x33 - var_x65 - var_x93 + 0.021094680534898786 * var_x110 - 0.61875000000000002 * var_x107 - 0.0027599999999999999 * var_x36 - 0.0065699975556193606 * var_x109 - 0.00046153846153846147 * var_x66 + var_x40 * (0.10468673984798647 * var_x54 - var_x56 * var_x58) - var_x60 * var_chaste_interface__i_Na_L_h_L_gate__h_L - var_x97 * var_chaste_interface__i_Kr_xr_gate__xr - 0.13 * var_chaste_interface__i_Ca_T_b_gate__b * var_chaste_interface__i_Ca_T_g_gate__g;
        }
        else
        {
            const double y_save = rY[0];
            rY[0] += delta;
            const double temp = EvaluateYDerivative0(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[0])/delta;
            rY[0] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative1(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__Ca_i__Ca_i = rY[1];
        // Units: millimolar; Initial value: 0.00022355433459434943
        double var_chaste_interface__intracellular_ion_concentrations__Na_i = rY[21];
        // Units: millimolar; Initial value: 9.927155552932733
        double var_chaste_interface__Ca_MK_act__Ca_MK_trap = rY[24];
        // Units: dimensionless; Initial value: 8.789168284782809e-06
        double var_chaste_interface__Ca_NSR__Ca_NSR = rY[25];
        // Units: millimolar; Initial value: 1.2132524695849454
        double var_chaste_interface__Ca_r__Ca_r = rY[27];
        // Units: millimolar; Initial value: 0.00022418117117903934
        

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_Ca_MK_act__Ca_MK_bound = 0.050000000000000003 * (1.0 - var_chaste_interface__Ca_MK_act__Ca_MK_trap) / (1.0 + 0.14999999999999999 / var_chaste_interface__Ca_r__Ca_r); // dimensionless
        const double var_Ca_MK_act__Ca_MK_act = var_Ca_MK_act__Ca_MK_bound + var_chaste_interface__Ca_MK_act__Ca_MK_trap; // dimensionless
        const double var_Ca_r__q_diff = 5.0 * var_chaste_interface__Ca_r__Ca_r - 5.0 * var_chaste_interface__Ca_i__Ca_i; // millimolar_per_millisecond
        const double var_i_Ca_p__i_Ca_p = 0.057500000000000002 * var_chaste_interface__Ca_i__Ca_i / (0.00050000000000000001 + var_chaste_interface__Ca_i__Ca_i); // microA_per_microF
        const double var_background_currents__i_Ca_b = ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (3.8499135947999997e-9 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_i__Ca_i * exp(9.9999999999999995e-8)) / (-1.0 + exp(9.9999999999999995e-8)) + 3.8499135947999997e-9 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_i__Ca_i * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8))) - 3.8499135947999997e-9 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_i__Ca_i * exp(-9.9999999999999995e-8)) / (-1.0 + exp(-9.9999999999999995e-8))) : (0.0028824983370007683 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_i__Ca_i * _lt_0_row[11]) * var_chaste_interface__membrane__V / (_lt_0_row[12]))); // microA_per_microF
        const double var_i_NaCa__i_NaCa = (-1.5 * pow(mParameters[6], 3) * var_chaste_interface__Ca_i__Ca_i * _lt_0_row[3] + 0.40000000000000002 * pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * mParameters[14] * mParameters[4] * _lt_0_row[4]) / ((_lt_0_row[5]) * (1.0 + 6.9444444444444451e-9 / pow(var_chaste_interface__Ca_i__Ca_i, 2)) * (1004882.8125 * var_chaste_interface__Ca_i__Ca_i + 1.3 * pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) + pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * mParameters[4] + 1.5 * pow(mParameters[6], 3) * var_chaste_interface__Ca_i__Ca_i + 0.0035999999999999999 * pow(mParameters[6], 3) * (1.0 + 0.081300813008130079 * var_chaste_interface__intracellular_ion_concentrations__Na_i) + 1860.8670000000004 * (1.0 + 416.66666666666669 * var_chaste_interface__Ca_i__Ca_i) * mParameters[4])); // microA_per_microF
        const double var_q_leak__q_leak = 0.066666666666666666 * var_chaste_interface__Ca_NSR__Ca_NSR * mParameters[0]; // millimolar_per_millisecond
        const double var_q_up__q_up = 0.5 * (1.0 + 0.75 * var_Ca_MK_act__Ca_MK_act / (0.14999999999999999 + var_Ca_MK_act__Ca_MK_act)) * var_chaste_interface__Ca_i__Ca_i * mParameters[2] / (0.00092000000000000003 - 0.00017000000000000001 * var_Ca_MK_act__Ca_MK_act / (0.14999999999999999 + var_Ca_MK_act__Ca_MK_act) + var_chaste_interface__Ca_i__Ca_i); // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_Ca_i__Ca_i = -(3.383640858530281e-9 * var_background_currents__i_Ca_b + 3.383640858530281e-9 * var_i_Ca_p__i_Ca_p + 0.081176470588235281 * var_q_up__q_up - 0.029411764705882353 * var_Ca_r__q_diff - 6.767281717060562e-9 * var_i_NaCa__i_NaCa - 0.081176470588235281 * var_q_leak__q_leak) / (1.0 + 0.14000000000000001 * var_chaste_interface__Ca_i__Ca_i / pow((0.00050000000000000001 + var_chaste_interface__Ca_i__Ca_i), 2) + 0.10000000000000001 * var_chaste_interface__Ca_i__Ca_i / pow((0.0023800000000000002 + var_chaste_interface__Ca_i__Ca_i), 2)); // millimolar / millisecond

        return d_dt_chaste_interface_var_Ca_i__Ca_i;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative1(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -83.43812846286808
            double var_chaste_interface__Ca_i__Ca_i = rY[1];
            // Units: millimolar; Initial value: 0.00022355433459434943
            double var_chaste_interface__intracellular_ion_concentrations__Na_i = rY[21];
            // Units: millimolar; Initial value: 9.927155552932733
            double var_chaste_interface__Ca_MK_act__Ca_MK_trap = rY[24];
            // Units: dimensionless; Initial value: 8.789168284782809e-06
            double var_chaste_interface__Ca_NSR__Ca_NSR = rY[25];
            // Units: millimolar; Initial value: 1.2132524695849454
            double var_chaste_interface__Ca_r__Ca_r = rY[27];
            // Units: millimolar; Initial value: 0.00022418117117903934
            

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

            const double var_x0 = exp(9.9999999999999995e-8);
            const double var_x3 = exp(-9.9999999999999995e-8);
            const double var_x6 = fabs(var_chaste_interface__membrane__V);
            const double var_x17 = 1 / (-1.0 + var_x0);
            const double var_x18 = -0.34100000000000003 * mParameters[4];
            const double var_x19 = var_chaste_interface__Ca_i__Ca_i;
            const double var_x20 = var_x17 * (var_x18 + var_x0 * var_x19);
            const double var_x21 = 1 / (-1.0 + var_x3);
            const double var_x22 = var_x21 * (var_x18 + var_x19 * var_x3);
            const double var_x23 = var_x6 < 1.3356169352749131e-6;
            const double var_x24 = 0.074871767015605231 * var_chaste_interface__membrane__V;
            const double var_x25 = exp(var_x24);
            const double var_x26 = var_x18 + var_x19 * var_x25;
            const double var_x27 = -1.0 + var_x25;
            const double var_x28 = 1 / var_x27;
            const double var_x29 = 0.0028824983370007683 * var_x28;
            const double var_x30 = var_x26 * var_x29;
            const double var_x31 = var_x25 * var_chaste_interface__membrane__V;
            const double var_x75 = _lt_0_row[3];
            const double var_x76 = pow(mParameters[6], 3);
            const double var_x77 = var_x76 * var_chaste_interface__Ca_i__Ca_i;
            const double var_x78 = pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3);
            const double var_x79 = var_x78 * mParameters[4];
            const double var_x80 = mParameters[14] * _lt_0_row[4];
            const double var_x81 = var_x79 * var_x80;
            const double var_x82 = 1.0 + 0.27000000000000002 * var_x75;
            const double var_x83 = 1 / var_x82;
            const double var_x84 = 1.0 + 6.9444444444444451e-9 / pow(var_chaste_interface__Ca_i__Ca_i, 2);
            const double var_x85 = 1 / var_x84;
            const double var_x86 = 1.5 * var_x76;
            const double var_x87 = var_x86 * var_chaste_interface__Ca_i__Ca_i;
            const double var_x88 = var_x76 * (1.0 + 0.081300813008130079 * var_chaste_interface__intracellular_ion_concentrations__Na_i);
            const double var_x89 = (1.0 + 416.66666666666669 * var_chaste_interface__Ca_i__Ca_i) * mParameters[4];
            const double var_x90 = 1 / (var_x79 + var_x87 + 1004882.8125 * var_chaste_interface__Ca_i__Ca_i + 0.0035999999999999999 * var_x88 + 1.3 * var_x78 + 1860.8670000000004 * var_x89);
            const double var_x91 = var_x85 * var_x90;
            const double var_x92 = var_x83 * var_x91;
            const double var_x108 = 0.40000000000000002 * var_x81 - var_x75 * var_x87;
            const double var_x134 = 3.8499135947999997e-9 * var_x21 * var_x3;
            const double var_x135 = ((var_x23) ? (-var_x134 + (0.5 + 374358.83507802623 * var_chaste_interface__membrane__V) * (var_x134 + 3.8499135947999997e-9 * var_x0 * var_x17)) : (var_x29 * var_x31));
            const double var_x136 = 0.00050000000000000001 + var_chaste_interface__Ca_i__Ca_i;
            const double var_x137 = 1 / var_x136;
            const double var_x138 = pow(var_x136, (-2));
            const double var_x139 = var_x138 * var_chaste_interface__Ca_i__Ca_i;
            const double var_x140 = var_x75 * var_x92;
            const double var_x141 = -1004882.8125 - var_x86 - 775361.25000000012 * mParameters[4];
            const double var_x142 = var_x108 * var_x83;
            const double var_x143 = var_x142 * var_x85 / pow((1.2936831875607387e-6 * var_x78 + 0.0018518248862973764 * var_x89 + 1.4927113702623908e-6 * var_x77 + 9.9514091350826051e-7 * var_x79 + 3.5825072886297377e-9 * var_x88 + var_chaste_interface__Ca_i__Ca_i), 2);
            const double var_x145 = var_x142 * var_x90 / (pow(var_x84, 2) * pow(var_chaste_interface__Ca_i__Ca_i, 3));
            const double var_x196 = 0.14000000000000001 * var_x138;
            const double var_x197 = 0.0023800000000000002 + var_chaste_interface__Ca_i__Ca_i;
            const double var_x198 = 0.10000000000000001 / pow(var_x197, 2);
            const double var_x199 = 1.0 + var_x196 * var_chaste_interface__Ca_i__Ca_i + var_x198 * var_chaste_interface__Ca_i__Ca_i;
            const double var_x200 = 1 / var_x199;
            const double var_x201 = var_x200;
            const double var_x202 = 1.9455934936549115e-10 * var_x137;
            const double var_x203 = 1.0 - var_chaste_interface__Ca_MK_act__Ca_MK_trap;
            const double var_x204 = 1 / var_chaste_interface__Ca_r__Ca_r;
            const double var_x205 = 1.0 + 0.14999999999999999 * var_x204;
            const double var_x206 = 1 / var_x205;
            const double var_x207 = 0.050000000000000003 * var_x206;
            const double var_x208 = var_x203 * var_x207;
            const double var_x209 = 0.14999999999999999 + var_x208 + var_chaste_interface__Ca_MK_act__Ca_MK_trap;
            const double var_x210 = 1 / var_x209;
            const double var_x211 = var_x208 + var_chaste_interface__Ca_MK_act__Ca_MK_trap;
            const double var_x212 = var_x210 * var_x211;
            const double var_x213 = 0.00092000000000000003 - 0.00017000000000000001 * var_x212 + var_chaste_interface__Ca_i__Ca_i;
            const double var_x214 = 1 / var_x213;
            const double var_x215 = (1.0 + 0.75 * var_x212) * mParameters[2];
            const double var_x216 = var_x214 * var_x215;
            const double var_x217 = 0.04058823529411764 * var_x216;
            const double var_x218 = 0.04058823529411764 * var_chaste_interface__Ca_i__Ca_i;
            const double var_x219 = var_x215 / pow(var_x213, 2);
            const double var_x220 = var_x218 * var_x219;
            const double var_x221 = var_x140 * var_x76;
            const double var_x222 = 6.7016758831103969e-21 * var_x143;
            const double var_x223 = 3.8499135947999997e-9 * var_x22;
            const double var_x224 = 0.005411764705882352 * mParameters[0];
            
            partialF = -var_x201 * (0.14705882352941174 + var_x202 + var_x217 - var_x220 + 1.0150922575590843e-8 * var_x221 + 3.383640858530281e-9 * var_x135 - 1.9455934936549115e-10 * var_x139 - 9.3990023848063356e-17 * var_x145 - var_x141 * var_x222) - (-var_x196 - var_x198 + 0.28000000000000003 * var_chaste_interface__Ca_i__Ca_i / pow(var_x136, 3) + 0.20000000000000001 * var_chaste_interface__Ca_i__Ca_i / pow(var_x197, 3)) * (3.383640858530281e-9 * ((var_x23) ? (-var_x223 + 374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (var_x223 + 3.8499135947999997e-9 * var_x20)) : (var_x30 * var_chaste_interface__membrane__V)) + 0.14705882352941174 * var_chaste_interface__Ca_i__Ca_i - 0.14705882352941174 * var_chaste_interface__Ca_r__Ca_r + var_x202 * var_chaste_interface__Ca_i__Ca_i + var_x217 * var_chaste_interface__Ca_i__Ca_i - var_x224 * var_chaste_interface__Ca_NSR__Ca_NSR - 6.767281717060562e-9 * var_x108 * var_x92) / pow(var_x199, 2);
        }
        else
        {
            const double y_save = rY[1];
            rY[1] += delta;
            const double temp = EvaluateYDerivative1(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[1])/delta;
            rY[1] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative2(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__i_Na_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.002003390432234504
        

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_i_Na_m_gate__alpha_m = _lt_0_row[27]; // per_millisecond
        const double var_i_Na_m_gate__beta_m = _lt_0_row[28]; // per_millisecond
        const double d_dt_chaste_interface_var_i_Na_m_gate__m = (-var_chaste_interface__i_Na_m_gate__m + var_i_Na_m_gate__alpha_m / (var_i_Na_m_gate__alpha_m + var_i_Na_m_gate__beta_m)) * (var_i_Na_m_gate__alpha_m + var_i_Na_m_gate__beta_m); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Na_m_gate__m;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative2(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -83.43812846286808
            


            const double var_x239 = exp(-0.090909090909090912 * var_chaste_interface__membrane__V);
            const double var_x240 = 0.080000000000000002 * var_x239;
            const double var_x241 = 1 / (1.0 - exp(-1.0000000000287557e-7));
            const double var_x242 = 3.200000000092018e-7 * var_x241;
            const double var_x243 = 1 / (1.0 - exp(1.0000000000287557e-7));
            const double var_x244 = 47.130000000000003 + var_chaste_interface__membrane__V;
            const double var_x245 = fabs(var_x244) < 1.0000000000287557e-6;
            const double var_x246 = -0.10000000000000001 * var_chaste_interface__membrane__V;
            const double var_x247 = exp(-4.7130000000000001 + var_x246);
            const double var_x248 = 1.0 - var_x247;
            const double var_x249 = 0.32000000000000001 / var_x248;
            const double var_x250 = ((var_x245) ? (var_x242 - 499999.99998562218 * (47.129999000000005 + var_chaste_interface__membrane__V) * (-var_x242 - 3.200000000092018e-7 * var_x243)) : (var_x244 * var_x249));
            const double var_x257 = var_x250;
            const double var_x259 = -var_x240 - var_x257;
            
            partialF = var_x259;
        }
        else
        {
            const double y_save = rY[2];
            rY[2] += delta;
            const double temp = EvaluateYDerivative2(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[2])/delta;
            rY[2] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative3(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__i_Na_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.9786390933308567
        


        // Mathematics
        const double var_i_Na_h_gate__alpha_h = ((var_chaste_interface__membrane__V < -40.0) ? (0.13500000000000001 * exp(-11.764705882352942 + 0.14705882352941177 * mParameters[10] - 0.14705882352941177 * var_chaste_interface__membrane__V)) : (0)); // per_millisecond
        const double var_i_Na_h_gate__beta_h = ((var_chaste_interface__membrane__V < -40.0) ? (310000.0 * exp(0.34999999999999998 * var_chaste_interface__membrane__V - 0.34999999999999998 * mParameters[10]) + 3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__membrane__V - 0.079000000000000001 * mParameters[10])) : (7.6923076923076916 / (1.0 + exp(-0.96036036036036043 + 0.0900900900900901 * mParameters[10] - 0.0900900900900901 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double d_dt_chaste_interface_var_i_Na_h_gate__h = (var_i_Na_h_gate__alpha_h + var_i_Na_h_gate__beta_h) * (-var_chaste_interface__i_Na_h_gate__h + 0.01 * mParameters[9] + (1.0 - 0.01 * mParameters[9]) * var_i_Na_h_gate__alpha_h / (var_i_Na_h_gate__alpha_h + var_i_Na_h_gate__beta_h)); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Na_h_gate__h;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative3(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -83.43812846286808
            


            const double var_x260 = exp(-11.764705882352942 + 0.14705882352941177 * mParameters[10] - 0.14705882352941177 * var_chaste_interface__membrane__V);
            const double var_x261 = var_chaste_interface__membrane__V < -40.0;
            const double var_x262 = ((var_x261) ? (0.13500000000000001 * var_x260) : (0));
            const double var_x263 = var_x262;
            const double var_x264 = exp(0.34999999999999998 * var_chaste_interface__membrane__V - 0.34999999999999998 * mParameters[10]);
            const double var_x265 = exp(0.079000000000000001 * var_chaste_interface__membrane__V - 0.079000000000000001 * mParameters[10]);
            const double var_x266 = exp(-0.96036036036036043 + 0.0900900900900901 * mParameters[10] - 0.0900900900900901 * var_chaste_interface__membrane__V);
            const double var_x267 = 1.0 + var_x266;
            const double var_x268 = ((var_x261) ? (310000.0 * var_x264 + 3.5600000000000001 * var_x265) : (7.6923076923076916 / var_x267));
            const double var_x269 = var_x268;
            
            partialF = -var_x263 - var_x269;
        }
        else
        {
            const double y_save = rY[3];
            rY[3] += delta;
            const double temp = EvaluateYDerivative3(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[3])/delta;
            rY[3] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative4(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__i_Na_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.09866447258167589
        


        // Mathematics
        const double var_i_Na_j_gate__alpha_j = ((var_chaste_interface__membrane__V < -40.0) ? ((37.780000000000001 + var_chaste_interface__membrane__V) * (-127140.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__V - 0.24440000000000001 * mParameters[10]) - 3.4740000000000003e-5 * exp(0.043909999999999998 * mParameters[10] - 0.043909999999999998 * var_chaste_interface__membrane__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V - 0.311 * mParameters[10]))) : (0)); // per_millisecond
        const double var_i_Na_j_gate__beta_j = ((var_chaste_interface__membrane__V < -40.0) ? (0.1212 * exp(0.01052 * mParameters[10] - 0.01052 * var_chaste_interface__membrane__V) / (1.0 + exp(-5.5312920000000005 + 0.13780000000000001 * mParameters[10] - 0.13780000000000001 * var_chaste_interface__membrane__V))) : (0.29999999999999999 * exp(2.5349999999999999e-7 * mParameters[10] - 2.5349999999999999e-7 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.2000000000000002 + 0.10000000000000001 * mParameters[10] - 0.10000000000000001 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double d_dt_chaste_interface_var_i_Na_j_gate__j = (var_i_Na_j_gate__alpha_j + var_i_Na_j_gate__beta_j) * (-var_chaste_interface__i_Na_j_gate__j + 0.01 * mParameters[9] + (1.0 - 0.01 * mParameters[9]) * var_i_Na_j_gate__alpha_j / (var_i_Na_j_gate__alpha_j + var_i_Na_j_gate__beta_j)); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Na_j_gate__j;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative4(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -83.43812846286808
            


            const double var_x246 = -0.10000000000000001 * var_chaste_interface__membrane__V;
            const double var_x261 = var_chaste_interface__membrane__V < -40.0;
            const double var_x276 = exp(-5.5312920000000005 + 0.13780000000000001 * mParameters[10] - 0.13780000000000001 * var_chaste_interface__membrane__V);
            const double var_x277 = 1.0 + var_x276;
            const double var_x278 = exp(0.01052 * mParameters[10] - 0.01052 * var_chaste_interface__membrane__V);
            const double var_x279 = var_x278 / var_x277;
            const double var_x280 = exp(-3.2000000000000002 + var_x246 + 0.10000000000000001 * mParameters[10]);
            const double var_x281 = 1.0 + var_x280;
            const double var_x282 = exp(2.5349999999999999e-7 * mParameters[10] - 2.5349999999999999e-7 * var_chaste_interface__membrane__V);
            const double var_x283 = var_x282 / var_x281;
            const double var_x284 = ((var_x261) ? (0.1212 * var_x279) : (0.29999999999999999 * var_x283));
            const double var_x285 = var_x284;
            const double var_x286 = 37.780000000000001 + var_chaste_interface__membrane__V;
            const double var_x287 = exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V - 0.311 * mParameters[10]);
            const double var_x288 = 1.0 + var_x287;
            const double var_x289 = 1 / var_x288;
            const double var_x290 = exp(0.24440000000000001 * var_chaste_interface__membrane__V - 0.24440000000000001 * mParameters[10]);
            const double var_x291 = exp(0.043909999999999998 * mParameters[10] - 0.043909999999999998 * var_chaste_interface__membrane__V);
            const double var_x292 = -127140.0 * var_x290 - 3.4740000000000003e-5 * var_x291;
            const double var_x293 = var_x289 * var_x292;
            const double var_x294 = ((var_x261) ? (var_x286 * var_x293) : (0));
            const double var_x295 = var_x294;
            
            partialF = -var_x285 - var_x295;
        }
        else
        {
            const double y_save = rY[4];
            rY[4] += delta;
            const double temp = EvaluateYDerivative4(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[4])/delta;
            rY[4] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative5(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__i_Na_L_m_L_gate__m_L = rY[5];
        // Units: dimensionless; Initial value: 0.002003390432234504
        

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_i_Na_L_m_L_gate__alpha_m_L = _lt_0_row[27]; // per_millisecond
        const double var_i_Na_L_m_L_gate__beta_m_L = _lt_0_row[28]; // per_millisecond
        const double d_dt_chaste_interface_var_i_Na_L_m_L_gate__m_L = (-var_chaste_interface__i_Na_L_m_L_gate__m_L + var_i_Na_L_m_L_gate__alpha_m_L / (var_i_Na_L_m_L_gate__alpha_m_L + var_i_Na_L_m_L_gate__beta_m_L)) * (var_i_Na_L_m_L_gate__alpha_m_L + var_i_Na_L_m_L_gate__beta_m_L); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Na_L_m_L_gate__m_L;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative5(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -83.43812846286808
            


            const double var_x239 = exp(-0.090909090909090912 * var_chaste_interface__membrane__V);
            const double var_x240 = 0.080000000000000002 * var_x239;
            const double var_x241 = 1 / (1.0 - exp(-1.0000000000287557e-7));
            const double var_x242 = 3.200000000092018e-7 * var_x241;
            const double var_x243 = 1 / (1.0 - exp(1.0000000000287557e-7));
            const double var_x244 = 47.130000000000003 + var_chaste_interface__membrane__V;
            const double var_x245 = fabs(var_x244) < 1.0000000000287557e-6;
            const double var_x246 = -0.10000000000000001 * var_chaste_interface__membrane__V;
            const double var_x247 = exp(-4.7130000000000001 + var_x246);
            const double var_x248 = 1.0 - var_x247;
            const double var_x249 = 0.32000000000000001 / var_x248;
            const double var_x250 = ((var_x245) ? (var_x242 - 499999.99998562218 * (47.129999000000005 + var_chaste_interface__membrane__V) * (-var_x242 - 3.200000000092018e-7 * var_x243)) : (var_x244 * var_x249));
            const double var_x257 = var_x250;
            const double var_x259 = -var_x240 - var_x257;
            
            partialF = var_x259;
        }
        else
        {
            const double y_save = rY[5];
            rY[5] += delta;
            const double temp = EvaluateYDerivative5(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[5])/delta;
            rY[5] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative6(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__i_Na_L_h_L_gate__h_L = rY[6];
        // Units: dimensionless; Initial value: 0.8946968372659203
        

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double d_dt_chaste_interface_var_i_Na_L_h_L_gate__h_L = (-var_chaste_interface__i_Na_L_h_L_gate__h_L + _lt_0_row[25]) / (_lt_0_row[26]); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Na_L_h_L_gate__h_L;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative6(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -83.43812846286808
            


            const double var_x303 = exp(-4.166666666666667 - 0.16666666666666666 * var_chaste_interface__membrane__V);
            const double var_x304 = 1.0 + var_x303;
            const double var_x305 = 1 / var_x304;
            const double var_x306 = 1 / (175.0 + 125.0 * var_x305);
            
            partialF = -var_x306;
        }
        else
        {
            const double y_save = rY[6];
            rY[6] += delta;
            const double temp = EvaluateYDerivative6(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[6])/delta;
            rY[6] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative7(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__i_Ca_L_d_gate__d = rY[7];
        // Units: dimensionless; Initial value: 2.322223865147363e-06
        

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double d_dt_chaste_interface_var_i_Ca_L_d_gate__d = (-var_chaste_interface__i_Ca_L_d_gate__d + _lt_0_row[13]) / (_lt_0_row[14]); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Ca_L_d_gate__d;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative7(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -83.43812846286808
            


            const double var_x307 = exp(1.7160000000000002 + 0.13200000000000001 * var_chaste_interface__membrane__V);
            const double var_x308 = 1.0 + var_x307;
            const double var_x309 = exp(0.67599999999999993 + 0.051999999999999998 * var_chaste_interface__membrane__V);
            const double var_x310 = var_x309 / var_x308;
            const double var_x313 = 1 / (0.58999999999999997 + 0.80000000000000004 * var_x310);
            
            partialF = -var_x313;
        }
        else
        {
            const double y_save = rY[7];
            rY[7] += delta;
            const double temp = EvaluateYDerivative7(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[7])/delta;
            rY[7] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative8(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__i_Ca_L_f_gate__f = rY[8];
        // Units: dimensionless; Initial value: 0.9985607329462358
        

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double d_dt_chaste_interface_var_i_Ca_L_f_gate__f = (-var_chaste_interface__i_Ca_L_f_gate__f + _lt_0_row[15]) / (4.0 + 0.03125 * pow((-1 + 0.40000000000000002 * var_chaste_interface__membrane__V), 2)); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Ca_L_f_gate__f;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative8(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -83.43812846286808
            


            const double var_x314 = pow((-1 + 0.40000000000000002 * var_chaste_interface__membrane__V), 2);
            const double var_x319 = 1 / (4.0 + 0.03125 * var_x314);
            
            partialF = -var_x319;
        }
        else
        {
            const double y_save = rY[8];
            rY[8] += delta;
            const double temp = EvaluateYDerivative8(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[8])/delta;
            rY[8] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative9(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__i_Ca_L_f2_gate__f2 = rY[9];
        // Units: dimensionless; Initial value: 0.8173435436674658
        

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double d_dt_chaste_interface_var_i_Ca_L_f2_gate__f2 = (-var_chaste_interface__i_Ca_L_f2_gate__f2 + _lt_0_row[15]) / (38.0 + 24.217200000000005 * pow((-1 + 0.053763440860215048 * var_chaste_interface__membrane__V), 2)); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Ca_L_f2_gate__f2;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative9(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -83.43812846286808
            


            const double var_x321 = pow((-1 + 0.053763440860215048 * var_chaste_interface__membrane__V), 2);
            const double var_x322 = 1 / (38.0 + 24.217200000000005 * var_x321);
            
            partialF = -var_x322;
        }
        else
        {
            const double y_save = rY[9];
            rY[9] += delta;
            const double temp = EvaluateYDerivative9(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[9])/delta;
            rY[9] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative10(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__i_Ca_L_d_gate__d = rY[7];
        // Units: dimensionless; Initial value: 2.322223865147363e-06
        double var_chaste_interface__i_Ca_L_f_gate__f = rY[8];
        // Units: dimensionless; Initial value: 0.9985607329462358
        double var_chaste_interface__i_Ca_L_f2_gate__f2 = rY[9];
        // Units: dimensionless; Initial value: 0.8173435436674658
        double var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca = rY[10];
        // Units: dimensionless; Initial value: 0.9610551285529658
        double var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 = rY[11];
        // Units: dimensionless; Initial value: 0.868690796671854
        double var_chaste_interface__Ca_MK_act__Ca_MK_trap = rY[24];
        // Units: dimensionless; Initial value: 8.789168284782809e-06
        double var_chaste_interface__Ca_r__Ca_r = rY[27];
        // Units: millimolar; Initial value: 0.00022418117117903934
        

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_Ca_MK_act__Ca_MK_bound = 0.050000000000000003 * (1.0 - var_chaste_interface__Ca_MK_act__Ca_MK_trap) / (1.0 + 0.14999999999999999 / var_chaste_interface__Ca_r__Ca_r); // dimensionless
        const double var_Ca_MK_act__Ca_MK_act = var_Ca_MK_act__Ca_MK_bound + var_chaste_interface__Ca_MK_act__Ca_MK_trap; // dimensionless
        const double var_i_Ca_L__i_Ca_L_max = ((fabs(-15.0 + var_chaste_interface__membrane__V) < 1.3356169352718439e-6) ? (374358.83507888648 * (-14.999998664383064 + var_chaste_interface__membrane__V) * (4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(9.9999999999770198e-8)) / (-1.0 + exp(9.9999999999770198e-8)) + 4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(-9.9999999999770198e-8)) / (-1.0 + exp(-9.9999999999770198e-8))) - 4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(-9.9999999999770198e-8)) / (-1.0 + exp(-9.9999999999770198e-8))) : (3.510865186083326 * (-15.0 + var_chaste_interface__membrane__V) * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * _lt_0_row[9]) / (_lt_0_row[10]))); // microA_per_microF
        const double var_i_Ca_L__i_Ca_L = mParameters[7] * var_i_Ca_L__i_Ca_L_max * var_chaste_interface__i_Ca_L_d_gate__d * var_chaste_interface__i_Ca_L_f2_gate__f2 * var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 * var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca * var_chaste_interface__i_Ca_L_f_gate__f; // microA_per_microF
        const double d_dt_chaste_interface_var_i_Ca_L_f_Ca_gate__f_Ca = (0.14999999999999999 - var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca + 0.55000000000000004 / (1.0 + 333.33333333333331 * var_chaste_interface__Ca_r__Ca_r) + 0.29999999999999999 / (1.0 - 20.0 * var_i_Ca_L__i_Ca_L)) / (0.5 + 1 / (1.0 + 333.33333333333331 * var_chaste_interface__Ca_r__Ca_r) + 10.0 * var_Ca_MK_act__Ca_MK_act / (0.14999999999999999 + var_Ca_MK_act__Ca_MK_act)); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Ca_L_f_Ca_gate__f_Ca;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative10(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -83.43812846286808
            double var_chaste_interface__i_Ca_L_d_gate__d = rY[7];
            // Units: dimensionless; Initial value: 2.322223865147363e-06
            double var_chaste_interface__i_Ca_L_f_gate__f = rY[8];
            // Units: dimensionless; Initial value: 0.9985607329462358
            double var_chaste_interface__i_Ca_L_f2_gate__f2 = rY[9];
            // Units: dimensionless; Initial value: 0.8173435436674658
            double var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca = rY[10];
            // Units: dimensionless; Initial value: 0.9610551285529658
            double var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 = rY[11];
            // Units: dimensionless; Initial value: 0.868690796671854
            double var_chaste_interface__Ca_MK_act__Ca_MK_trap = rY[24];
            // Units: dimensionless; Initial value: 8.789168284782809e-06
            double var_chaste_interface__Ca_r__Ca_r = rY[27];
            // Units: millimolar; Initial value: 0.00022418117117903934
            


            const double var_x18 = -0.34100000000000003 * mParameters[4];
            const double var_x24 = 0.074871767015605231 * var_chaste_interface__membrane__V;
            const double var_x111 = exp(9.9999999999770198e-8);
            const double var_x112 = 1 / (-1.0 + var_x111);
            const double var_x113 = var_chaste_interface__Ca_r__Ca_r;
            const double var_x114 = var_x112 * (var_x18 + var_x111 * var_x113);
            const double var_x115 = exp(-9.9999999999770198e-8);
            const double var_x116 = 1 / (-1.0 + var_x115);
            const double var_x117 = var_x116 * (var_x18 + var_x113 * var_x115);
            const double var_x118 = -15.0 + var_chaste_interface__membrane__V;
            const double var_x119 = fabs(var_x118) < 1.3356169352718439e-6;
            const double var_x120 = exp(-1.1230765052340785 + var_x24);
            const double var_x121 = var_x18 + var_x113 * var_x120;
            const double var_x122 = -1.0 + var_x120;
            const double var_x123 = 1 / var_x122;
            const double var_x124 = 3.510865186083326 * var_x123;
            const double var_x125 = var_x121 * var_x124;
            const double var_x156 = -14.999998664383064 + var_chaste_interface__membrane__V;
            const double var_x157 = 4.6891709999892238e-6 * var_x117;
            const double var_x158 = var_x156 * (var_x157 + 4.6891709999892238e-6 * var_x114);
            const double var_x159 = ((var_x119) ? (-var_x157 + 374358.83507888648 * var_x158) : (var_x118 * var_x125)) * mParameters[7];
            const double var_x160 = var_x159 * var_chaste_interface__i_Ca_L_f2_gate__f2 * var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 * var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca;
            const double var_x161 = var_x160 * var_chaste_interface__i_Ca_L_f_gate__f;
            const double var_x163 = var_x159 * var_chaste_interface__i_Ca_L_d_gate__d * var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 * var_chaste_interface__i_Ca_L_f_gate__f;
            const double var_x165 = var_x163 * var_chaste_interface__i_Ca_L_f2_gate__f2;
            const double var_x203 = 1.0 - var_chaste_interface__Ca_MK_act__Ca_MK_trap;
            const double var_x204 = 1 / var_chaste_interface__Ca_r__Ca_r;
            const double var_x205 = 1.0 + 0.14999999999999999 * var_x204;
            const double var_x206 = 1 / var_x205;
            const double var_x207 = 0.050000000000000003 * var_x206;
            const double var_x208 = var_x203 * var_x207;
            const double var_x209 = 0.14999999999999999 + var_x208 + var_chaste_interface__Ca_MK_act__Ca_MK_trap;
            const double var_x210 = 1 / var_x209;
            const double var_x211 = var_x208 + var_chaste_interface__Ca_MK_act__Ca_MK_trap;
            const double var_x212 = var_x210 * var_x211;
            const double var_x323 = 1 / (1.0 + 333.33333333333331 * var_chaste_interface__Ca_r__Ca_r);
            const double var_x324 = 10.0 * var_x212;
            const double var_x325 = 1 / (0.5 + var_x324 + var_x323);
            const double var_x326 = var_x161 * var_chaste_interface__i_Ca_L_d_gate__d;
            const double var_x327 = -var_x326;
            const double var_x328 = 0.014999999999999999 / pow((0.050000000000000003 + var_x327), 2);
            
            partialF = var_x325 * (-1 + var_x165 * var_x328);
        }
        else
        {
            const double y_save = rY[10];
            rY[10] += delta;
            const double temp = EvaluateYDerivative10(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[10])/delta;
            rY[10] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative11(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__i_Ca_L_d_gate__d = rY[7];
        // Units: dimensionless; Initial value: 2.322223865147363e-06
        double var_chaste_interface__i_Ca_L_f_gate__f = rY[8];
        // Units: dimensionless; Initial value: 0.9985607329462358
        double var_chaste_interface__i_Ca_L_f2_gate__f2 = rY[9];
        // Units: dimensionless; Initial value: 0.8173435436674658
        double var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca = rY[10];
        // Units: dimensionless; Initial value: 0.9610551285529658
        double var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 = rY[11];
        // Units: dimensionless; Initial value: 0.868690796671854
        double var_chaste_interface__Ca_r__Ca_r = rY[27];
        // Units: millimolar; Initial value: 0.00022418117117903934
        

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_i_Ca_L__i_Ca_L_max = ((fabs(-15.0 + var_chaste_interface__membrane__V) < 1.3356169352718439e-6) ? (374358.83507888648 * (-14.999998664383064 + var_chaste_interface__membrane__V) * (4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(9.9999999999770198e-8)) / (-1.0 + exp(9.9999999999770198e-8)) + 4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(-9.9999999999770198e-8)) / (-1.0 + exp(-9.9999999999770198e-8))) - 4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(-9.9999999999770198e-8)) / (-1.0 + exp(-9.9999999999770198e-8))) : (3.510865186083326 * (-15.0 + var_chaste_interface__membrane__V) * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * _lt_0_row[9]) / (_lt_0_row[10]))); // microA_per_microF
        const double var_i_Ca_L__i_Ca_L = mParameters[7] * var_i_Ca_L__i_Ca_L_max * var_chaste_interface__i_Ca_L_d_gate__d * var_chaste_interface__i_Ca_L_f2_gate__f2 * var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 * var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca * var_chaste_interface__i_Ca_L_f_gate__f; // microA_per_microF
        const double d_dt_chaste_interface_var_i_Ca_L_f_Ca2_gate__f_Ca2 = (-var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 + 1 / (1.0 - 100.0 * var_i_Ca_L__i_Ca_L)) / (125.0 + 300.0 / (1.0 + exp(-4.375 - 25.0 * var_i_Ca_L__i_Ca_L))); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Ca_L_f_Ca2_gate__f_Ca2;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative11(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -83.43812846286808
            double var_chaste_interface__i_Ca_L_d_gate__d = rY[7];
            // Units: dimensionless; Initial value: 2.322223865147363e-06
            double var_chaste_interface__i_Ca_L_f_gate__f = rY[8];
            // Units: dimensionless; Initial value: 0.9985607329462358
            double var_chaste_interface__i_Ca_L_f2_gate__f2 = rY[9];
            // Units: dimensionless; Initial value: 0.8173435436674658
            double var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca = rY[10];
            // Units: dimensionless; Initial value: 0.9610551285529658
            double var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 = rY[11];
            // Units: dimensionless; Initial value: 0.868690796671854
            double var_chaste_interface__Ca_r__Ca_r = rY[27];
            // Units: millimolar; Initial value: 0.00022418117117903934
            


            const double var_x18 = -0.34100000000000003 * mParameters[4];
            const double var_x24 = 0.074871767015605231 * var_chaste_interface__membrane__V;
            const double var_x111 = exp(9.9999999999770198e-8);
            const double var_x112 = 1 / (-1.0 + var_x111);
            const double var_x113 = var_chaste_interface__Ca_r__Ca_r;
            const double var_x114 = var_x112 * (var_x18 + var_x111 * var_x113);
            const double var_x115 = exp(-9.9999999999770198e-8);
            const double var_x116 = 1 / (-1.0 + var_x115);
            const double var_x117 = var_x116 * (var_x18 + var_x113 * var_x115);
            const double var_x118 = -15.0 + var_chaste_interface__membrane__V;
            const double var_x119 = fabs(var_x118) < 1.3356169352718439e-6;
            const double var_x120 = exp(-1.1230765052340785 + var_x24);
            const double var_x121 = var_x18 + var_x113 * var_x120;
            const double var_x122 = -1.0 + var_x120;
            const double var_x123 = 1 / var_x122;
            const double var_x124 = 3.510865186083326 * var_x123;
            const double var_x125 = var_x121 * var_x124;
            const double var_x131 = var_chaste_interface__i_Ca_L_d_gate__d * var_chaste_interface__i_Ca_L_f2_gate__f2 * var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca * var_chaste_interface__i_Ca_L_f_gate__f;
            const double var_x156 = -14.999998664383064 + var_chaste_interface__membrane__V;
            const double var_x157 = 4.6891709999892238e-6 * var_x117;
            const double var_x158 = var_x156 * (var_x157 + 4.6891709999892238e-6 * var_x114);
            const double var_x159 = ((var_x119) ? (-var_x157 + 374358.83507888648 * var_x158) : (var_x118 * var_x125)) * mParameters[7];
            const double var_x160 = var_x159 * var_chaste_interface__i_Ca_L_f2_gate__f2 * var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 * var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca;
            const double var_x161 = var_x160 * var_chaste_interface__i_Ca_L_f_gate__f;
            const double var_x166 = var_x131 * var_x159;
            const double var_x326 = var_x161 * var_chaste_interface__i_Ca_L_d_gate__d;
            const double var_x327 = -var_x326;
            const double var_x334 = exp(-4.375 - 25.0 * var_x326);
            const double var_x335 = 1.0 + var_x334;
            const double var_x336 = 1 / var_x335;
            const double var_x337 = 1 / (125.0 + 300.0 * var_x336);
            const double var_x338 = 0.01 / pow((0.01 + var_x327), 2);
            const double var_x340 = 0.083333333333333329 * var_x334 * (-var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 + 1 / (1.0 - 100.0 * var_x326)) / (pow(var_x335, 2) * pow((0.41666666666666669 + var_x336), 2));
            
            partialF = var_x337 * (-1 + var_x166 * var_x338) - var_x166 * var_x340;
        }
        else
        {
            const double y_save = rY[11];
            rY[11] += delta;
            const double temp = EvaluateYDerivative11(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[11])/delta;
            rY[11] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative12(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__i_Ca_T_b_gate__b = rY[12];
        // Units: dimensionless; Initial value: 0.0002563937630984438
        

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double d_dt_chaste_interface_var_i_Ca_T_b_gate__b = (-var_chaste_interface__i_Ca_T_b_gate__b + _lt_0_row[16]) * (_lt_0_row[17]); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Ca_T_b_gate__b;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative12(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -83.43812846286808
            


            const double var_x343 = 0.033333333333333333 * var_chaste_interface__membrane__V;
            const double var_x344 = exp(0.54333333333333333 + var_x343);
            const double var_x345 = exp(-0.54333333333333333 - var_x343);
            const double var_x346 = 1.0680000000000001 * var_x344;
            const double var_x347 = 1.0680000000000001 * var_x345;
            
            partialF = -var_x346 - var_x347;
        }
        else
        {
            const double y_save = rY[12];
            rY[12] += delta;
            const double temp = EvaluateYDerivative12(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[12])/delta;
            rY[12] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative13(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__i_Ca_T_g_gate__g = rY[13];
        // Units: dimensionless; Initial value: 0.9720432601848331
        

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double d_dt_chaste_interface_var_i_Ca_T_g_gate__g = (-var_chaste_interface__i_Ca_T_g_gate__g + _lt_0_row[18]) * (_lt_0_row[19]); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Ca_T_g_gate__g;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative13(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -83.43812846286808
            


            const double var_x350 = exp(4.6558441558441563 + 0.064935064935064929 * var_chaste_interface__membrane__V);
            const double var_x351 = exp(-0.86074429771908767 - 0.012004801920768308 * var_chaste_interface__membrane__V);
            const double var_x352 = 0.014999999999999999 * var_x350;
            const double var_x353 = 0.014999999999999999 * var_x351;
            
            partialF = -var_x352 - var_x353;
        }
        else
        {
            const double y_save = rY[13];
            rY[13] += delta;
            const double temp = EvaluateYDerivative13(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[13])/delta;
            rY[13] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative14(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__i_to_1_a_gate__a = rY[14];
        // Units: dimensionless; Initial value: 0.0004238729429342389
        

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_i_to_1_a_gate__alpha_a = _lt_0_row[29]; // per_millisecond
        const double var_i_to_1_a_gate__beta_a = _lt_0_row[30]; // per_millisecond
        const double d_dt_chaste_interface_var_i_to_1_a_gate__a = (-var_chaste_interface__i_to_1_a_gate__a + var_i_to_1_a_gate__alpha_a / (var_i_to_1_a_gate__alpha_a + var_i_to_1_a_gate__beta_a)) * (var_i_to_1_a_gate__alpha_a + var_i_to_1_a_gate__beta_a); // 1 / millisecond

        return d_dt_chaste_interface_var_i_to_1_a_gate__a;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative14(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -83.43812846286808
            


            const double var_x354 = 0.050000000000000003 * var_chaste_interface__membrane__V;
            const double var_x355 = exp(-2.7000000000000002 - var_x354);
            const double var_x356 = 1.0 + var_x355;
            const double var_x357 = var_x355 / var_x356;
            const double var_x358 = 25.0 * var_x357;
            const double var_x359 = exp(-3.7999999999999998 + var_x354);
            const double var_x360 = 1.0 + var_x359;
            const double var_x361 = var_x359 / var_x360;
            const double var_x362 = 25.0 * var_x361;
            
            partialF = -var_x358 - var_x362;
        }
        else
        {
            const double y_save = rY[14];
            rY[14] += delta;
            const double temp = EvaluateYDerivative14(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[14])/delta;
            rY[14] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative15(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__i_to_1_i_gate__i = rY[15];
        // Units: dimensionless; Initial value: 0.9990935802459496
        

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double d_dt_chaste_interface_var_i_to_1_i_gate__i = (-var_chaste_interface__i_to_1_i_gate__i + _lt_0_row[33]) / (_lt_0_row[34]); // 1 / millisecond

        return d_dt_chaste_interface_var_i_to_1_i_gate__i;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative15(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -83.43812846286808
            


            const double var_x315 = 0.10000000000000001 * var_chaste_interface__membrane__V;
            const double var_x369 = exp(-1.6499999999999999 + var_x315);
            const double var_x370 = 1.0 + var_x369;
            const double var_x371 = 1 / var_x370;
            const double var_x372 = 1 / (6.0 + 5.0 * var_x371);
            
            partialF = -var_x372;
        }
        else
        {
            const double y_save = rY[15];
            rY[15] += delta;
            const double temp = EvaluateYDerivative15(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[15])/delta;
            rY[15] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative16(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__i_to_1_i2_gate__i2 = rY[16];
        // Units: dimensionless; Initial value: 0.9777368439681764
        

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double d_dt_chaste_interface_var_i_to_1_i2_gate__i2 = (-var_chaste_interface__i_to_1_i2_gate__i2 + _lt_0_row[31]) / (_lt_0_row[32]); // 1 / millisecond

        return d_dt_chaste_interface_var_i_to_1_i2_gate__i2;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative16(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -83.43812846286808
            


            const double var_x315 = 0.10000000000000001 * var_chaste_interface__membrane__V;
            const double var_x383 = exp(-2.5 + var_x315);
            const double var_x384 = 1.0 + var_x383;
            const double var_x385 = 1 / var_x384;
            const double var_x386 = 1 / (21.5 + 30.0 * var_x385);
            
            partialF = -var_x386;
        }
        else
        {
            const double y_save = rY[16];
            rY[16] += delta;
            const double temp = EvaluateYDerivative16(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[16])/delta;
            rY[16] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative17(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__i_Kr_xr_gate__xr = rY[17];
        // Units: dimensionless; Initial value: 0.07084939408222911
        

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double d_dt_chaste_interface_var_i_Kr_xr_gate__xr = (-var_chaste_interface__i_Kr_xr_gate__xr + _lt_0_row[20]) / (_lt_0_row[21]); // 1 / millisecond

        return d_dt_chaste_interface_var_i_Kr_xr_gate__xr;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative17(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -83.43812846286808
            


            const double var_x398 = exp(0.20000000000000001 * var_chaste_interface__membrane__V);
            const double var_x399 = 1.0 + var_x398;
            const double var_x400 = 1 / var_x399;
            const double var_x401 = 1 / (100.0 + 900.0 * var_x400);
            
            partialF = -var_x401;
        }
        else
        {
            const double y_save = rY[17];
            rY[17] += delta;
            const double temp = EvaluateYDerivative17(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[17])/delta;
            rY[17] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative18(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__i_Ks_xs1_gate__xs1 = rY[18];
        // Units: dimensionless; Initial value: 0.0011737654433043125
        

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double d_dt_chaste_interface_var_i_Ks_xs1_gate__xs1 = (-var_chaste_interface__i_Ks_xs1_gate__xs1 + _lt_0_row[22]) * _lt_0_row[23]; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Ks_xs1_gate__xs1;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative18(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -83.43812846286808
            


            const double var_x406 = 1 / (-1.0 + exp(-9.999999999987797e-8));
            const double var_x407 = 1 / (-1.0 + exp(9.9999999999988984e-8));
            const double var_x408 = exp(-444.66200000000003 - 9.9700000000000006 * var_chaste_interface__membrane__V);
            const double var_x409 = 1.0 - var_x408;
            const double var_x410 = 1 / var_x409;
            const double var_x411 = 7.6100000000000007e-5 * var_x410;
            const double var_x412 = 44.600000000000001 + var_chaste_interface__membrane__V;
            const double var_x415 = 2.8124999999965681e-10 * var_x406;
            const double var_x416 = var_x411 * var_x412;
            const double var_x417 = (-0.54999921875000002 + var_chaste_interface__membrane__V) * (var_x415 + 2.8124999999996902e-10 * var_x407);
            const double var_x418 = 640000.00000042573 * var_x417;
            const double var_x420 = -0.55000000000000004 + var_chaste_interface__membrane__V;
            const double var_x421 = fabs(var_x420) < 7.8124999999948028e-7;
            const double var_x422 = 1 / (1.0 - exp(9.9999999875755032e-8));
            const double var_x423 = 1 / (1.0 - exp(-9.9999999875755032e-8));
            const double var_x424 = exp(-0.070400000000000004 + 0.128 * var_chaste_interface__membrane__V);
            const double var_x425 = -1.0 + var_x424;
            const double var_x426 = 1 / var_x425;
            const double var_x427 = 0.00036000000000000002 * var_x426;
            const double var_x430 = 7.6328986866047728e-13 * var_x423;
            const double var_x431 = var_x420 * var_x427;
            const double var_x432 = -var_x430;
            const double var_x433 = (44.599999989969909 + var_chaste_interface__membrane__V) * (var_x432 - 7.6328986866047728e-13 * var_x422);
            const double var_x434 = 49850000.061936118 * var_x433;
            const double var_x435 = fabs(var_x412) < 1.0030090258350555e-8;
            const double var_x436 = -var_x416;
            const double var_x437 = -var_x431;
            
            partialF = ((var_x421) ? (var_x415 + var_x436 - var_x418) : ((var_x435) ? (var_x432 + var_x434 + var_x437) : (var_x436 + var_x437)));
        }
        else
        {
            const double y_save = rY[18];
            rY[18] += delta;
            const double temp = EvaluateYDerivative18(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[18])/delta;
            rY[18] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative19(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__i_Ks_xs2_gate__xs2 = rY[19];
        // Units: dimensionless; Initial value: 0.001179442867470093
        

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double d_dt_chaste_interface_var_i_Ks_xs2_gate__xs2 = (-var_chaste_interface__i_Ks_xs2_gate__xs2 + _lt_0_row[22]) * _lt_0_row[24]; // 1 / millisecond

        return d_dt_chaste_interface_var_i_Ks_xs2_gate__xs2;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative19(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -83.43812846286808
            


            const double var_x406 = 1 / (-1.0 + exp(-9.999999999987797e-8));
            const double var_x407 = 1 / (-1.0 + exp(9.9999999999988984e-8));
            const double var_x408 = exp(-444.66200000000003 - 9.9700000000000006 * var_chaste_interface__membrane__V);
            const double var_x409 = 1.0 - var_x408;
            const double var_x410 = 1 / var_x409;
            const double var_x412 = 44.600000000000001 + var_chaste_interface__membrane__V;
            const double var_x415 = 2.8124999999965681e-10 * var_x406;
            const double var_x417 = (-0.54999921875000002 + var_chaste_interface__membrane__V) * (var_x415 + 2.8124999999996902e-10 * var_x407);
            const double var_x420 = -0.55000000000000004 + var_chaste_interface__membrane__V;
            const double var_x421 = fabs(var_x420) < 7.8124999999948028e-7;
            const double var_x422 = 1 / (1.0 - exp(9.9999999875755032e-8));
            const double var_x423 = 1 / (1.0 - exp(-9.9999999875755032e-8));
            const double var_x424 = exp(-0.070400000000000004 + 0.128 * var_chaste_interface__membrane__V);
            const double var_x425 = -1.0 + var_x424;
            const double var_x426 = 1 / var_x425;
            const double var_x430 = 7.6328986866047728e-13 * var_x423;
            const double var_x432 = -var_x430;
            const double var_x433 = (44.599999989969909 + var_chaste_interface__membrane__V) * (var_x432 - 7.6328986866047728e-13 * var_x422);
            const double var_x435 = fabs(var_x412) < 1.0030090258350555e-8;
            const double var_x439 = 3.8050000000000003e-5 * var_x410;
            const double var_x441 = 1.406249999998284e-10 * var_x406;
            const double var_x442 = var_x412 * var_x439;
            const double var_x443 = 320000.00000021287 * var_x417;
            const double var_x444 = 0.00018000000000000001 * var_x426;
            const double var_x446 = 3.8164493433023864e-13 * var_x423;
            const double var_x447 = var_x420 * var_x444;
            const double var_x448 = 24925000.030968059 * var_x433;
            const double var_x449 = -var_x442;
            const double var_x450 = -var_x447;
            
            partialF = ((var_x421) ? (var_x441 + var_x449 - var_x443) : ((var_x435) ? (var_x448 + var_x450 - var_x446) : (var_x449 + var_x450)));
        }
        else
        {
            const double y_save = rY[19];
            rY[19] += delta;
            const double temp = EvaluateYDerivative19(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[19])/delta;
            rY[19] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative20(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__i_to_2_a_gate__a = rY[20];
        // Units: dimensionless; Initial value: 0.0014909437525000811
        double var_chaste_interface__Ca_r__Ca_r = rY[27];
        // Units: millimolar; Initial value: 0.00022418117117903934
        


        // Mathematics
        const double d_dt_chaste_interface_var_i_to_2_a_gate__a = 1 / (1.0 + 0.1502 / var_chaste_interface__Ca_r__Ca_r) - var_chaste_interface__i_to_2_a_gate__a; // 1 / millisecond

        return d_dt_chaste_interface_var_i_to_2_a_gate__a;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative20(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            


            
            partialF = -1.0;
        }
        else
        {
            const double y_save = rY[20];
            rY[20] += delta;
            const double temp = EvaluateYDerivative20(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[20])/delta;
            rY[20] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative21(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__Ca_i__Ca_i = rY[1];
        // Units: millimolar; Initial value: 0.00022355433459434943
        double var_chaste_interface__i_Na_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.002003390432234504
        double var_chaste_interface__i_Na_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.9786390933308567
        double var_chaste_interface__i_Na_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.09866447258167589
        double var_chaste_interface__i_Na_L_m_L_gate__m_L = rY[5];
        // Units: dimensionless; Initial value: 0.002003390432234504
        double var_chaste_interface__i_Na_L_h_L_gate__h_L = rY[6];
        // Units: dimensionless; Initial value: 0.8946968372659203
        double var_chaste_interface__intracellular_ion_concentrations__Na_i = rY[21];
        // Units: millimolar; Initial value: 9.927155552932733
        double var_chaste_interface__intracellular_ion_concentrations__Cl_i = rY[22];
        // Units: millimolar; Initial value: 18.904682470140408
        

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_equilibrium_potentials__E_Cl = -26.712338705498265 * log(100.0 / var_chaste_interface__intracellular_ion_concentrations__Cl_i); // millivolt
        const double var_equilibrium_potentials__E_Na = 26.712338705498265 * log(mParameters[6] / var_chaste_interface__intracellular_ion_concentrations__Na_i); // millivolt
        const double var_CT_Na_Cl__CT_Na_Cl = 9.8442999999999999e-6 * pow((-var_equilibrium_potentials__E_Cl + var_equilibrium_potentials__E_Na), 4) / (59494197.640692554 + pow((-var_equilibrium_potentials__E_Cl + var_equilibrium_potentials__E_Na), 4)); // millimolar_per_millisecond
        const double var_background_currents__i_Na_b = 0.0025000000000000001 * var_chaste_interface__membrane__V - 0.0025000000000000001 * var_equilibrium_potentials__E_Na; // microA_per_microF
        const double var_i_Na__i_Na = pow(var_chaste_interface__i_Na_m_gate__m, 3) * (-var_equilibrium_potentials__E_Na + var_chaste_interface__membrane__V) * (0.20000000000000001 * var_chaste_interface__i_Na_j_gate__j + 0.80000000000000004 * var_chaste_interface__i_Na_h_gate__h) * mParameters[8]; // microA_per_microF
        const double var_i_NaCa__i_NaCa = (-1.5 * pow(mParameters[6], 3) * var_chaste_interface__Ca_i__Ca_i * _lt_0_row[3] + 0.40000000000000002 * pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * mParameters[14] * mParameters[4] * _lt_0_row[4]) / ((_lt_0_row[5]) * (1.0 + 6.9444444444444451e-9 / pow(var_chaste_interface__Ca_i__Ca_i, 2)) * (1004882.8125 * var_chaste_interface__Ca_i__Ca_i + 1.3 * pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) + pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * mParameters[4] + 1.5 * pow(mParameters[6], 3) * var_chaste_interface__Ca_i__Ca_i + 0.0035999999999999999 * pow(mParameters[6], 3) * (1.0 + 0.081300813008130079 * var_chaste_interface__intracellular_ion_concentrations__Na_i) + 1860.8670000000004 * (1.0 + 416.66666666666669 * var_chaste_interface__Ca_i__Ca_i) * mParameters[4])); // microA_per_microF
        const double var_i_NaK__i_NaK = 0.61875000000000002 * mParameters[5] / ((1.0 + 100.0 / pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 2)) * (1.5 + mParameters[5]) * (1.0 + _lt_0_row[7] + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * mParameters[6])) * _lt_0_row[6])); // microA_per_microF
        const double var_i_Na_L__i_Na_L = 0.037374999999999999 * pow(var_chaste_interface__i_Na_L_m_L_gate__m_L, 3) * (-var_equilibrium_potentials__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__i_Na_L_h_L_gate__h_L; // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__Na_i = (-2.0301845151181685e-8 * var_i_NaCa__i_NaCa - 2.0301845151181685e-8 * var_i_NaK__i_NaK - 6.767281717060562e-9 * var_background_currents__i_Na_b - 6.767281717060562e-9 * var_i_Na__i_Na - 6.767281717060562e-9 * var_i_Na_L__i_Na_L + var_CT_Na_Cl__CT_Na_Cl) * mParameters[3]; // millimolar / millisecond

        return d_dt_chaste_interface_var_intracellular_ion_concentrations__Na_i;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative21(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -83.43812846286808
            double var_chaste_interface__Ca_i__Ca_i = rY[1];
            // Units: millimolar; Initial value: 0.00022355433459434943
            double var_chaste_interface__i_Na_m_gate__m = rY[2];
            // Units: dimensionless; Initial value: 0.002003390432234504
            double var_chaste_interface__i_Na_h_gate__h = rY[3];
            // Units: dimensionless; Initial value: 0.9786390933308567
            double var_chaste_interface__i_Na_j_gate__j = rY[4];
            // Units: dimensionless; Initial value: 0.09866447258167589
            double var_chaste_interface__i_Na_L_m_L_gate__m_L = rY[5];
            // Units: dimensionless; Initial value: 0.002003390432234504
            double var_chaste_interface__i_Na_L_h_L_gate__h_L = rY[6];
            // Units: dimensionless; Initial value: 0.8946968372659203
            double var_chaste_interface__intracellular_ion_concentrations__Na_i = rY[21];
            // Units: millimolar; Initial value: 9.927155552932733
            double var_chaste_interface__intracellular_ion_concentrations__Cl_i = rY[22];
            // Units: millimolar; Initial value: 18.904682470140408
            

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

            const double var_x8 = 0.037435883507802616 * var_chaste_interface__membrane__V;
            const double var_x59 = pow(var_chaste_interface__i_Na_L_m_L_gate__m_L, 3);
            const double var_x63 = 0.20000000000000001 * var_chaste_interface__i_Na_j_gate__j + 0.80000000000000004 * var_chaste_interface__i_Na_h_gate__h;
            const double var_x64 = pow(var_chaste_interface__i_Na_m_gate__m, 3) * mParameters[8];
            const double var_x65 = var_x63 * var_x64;
            const double var_x75 = _lt_0_row[3];
            const double var_x76 = pow(mParameters[6], 3);
            const double var_x77 = var_x76 * var_chaste_interface__Ca_i__Ca_i;
            const double var_x78 = pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3);
            const double var_x79 = var_x78 * mParameters[4];
            const double var_x80 = mParameters[14] * _lt_0_row[4];
            const double var_x81 = var_x79 * var_x80;
            const double var_x82 = 1.0 + 0.27000000000000002 * var_x75;
            const double var_x83 = 1 / var_x82;
            const double var_x84 = 1.0 + 6.9444444444444451e-9 / pow(var_chaste_interface__Ca_i__Ca_i, 2);
            const double var_x85 = 1 / var_x84;
            const double var_x86 = 1.5 * var_x76;
            const double var_x87 = var_x86 * var_chaste_interface__Ca_i__Ca_i;
            const double var_x88 = var_x76 * (1.0 + 0.081300813008130079 * var_chaste_interface__intracellular_ion_concentrations__Na_i);
            const double var_x89 = (1.0 + 416.66666666666669 * var_chaste_interface__Ca_i__Ca_i) * mParameters[4];
            const double var_x90 = 1 / (var_x79 + var_x87 + 1004882.8125 * var_chaste_interface__Ca_i__Ca_i + 0.0035999999999999999 * var_x88 + 1.3 * var_x78 + 1860.8670000000004 * var_x89);
            const double var_x91 = var_x85 * var_x90;
            const double var_x92 = var_x83 * var_x91;
            const double var_x100 = pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 2);
            const double var_x101 = 1 / var_x100;
            const double var_x102 = exp(-0.003743588350780262 * var_chaste_interface__membrane__V);
            const double var_x103 = exp(0.01485884101040119 * mParameters[6]);
            const double var_x104 = exp(-var_x8);
            const double var_x105 = 1.0 + 0.1245 * var_x102 + 0.036499999999999998 * var_x104 * (-0.14285714285714285 + 0.14285714285714285 * var_x103);
            const double var_x106 = mParameters[5] / (1.5 + mParameters[5]);
            const double var_x108 = 0.40000000000000002 * var_x81 - var_x75 * var_x87;
            const double var_x142 = var_x108 * var_x83;
            const double var_x143 = var_x142 * var_x85 / pow((1.2936831875607387e-6 * var_x78 + 0.0018518248862973764 * var_x89 + 1.4927113702623908e-6 * var_x77 + 9.9514091350826051e-7 * var_x79 + 3.5825072886297377e-9 * var_x88 + var_chaste_interface__Ca_i__Ca_i), 2);
            const double var_x150 = 1 / var_chaste_interface__intracellular_ion_concentrations__Na_i;
            const double var_x151 = log(var_x150 * mParameters[6]);
            const double var_x174 = var_x59 * var_chaste_interface__i_Na_L_h_L_gate__h_L;
            const double var_x175 = var_x150 * var_x174;
            const double var_x176 = var_x150 * var_x65;
            const double var_x178 = var_x100 * mParameters[4];
            const double var_x179 = -3 * var_x178 - 3.9000000000000004 * var_x100 - 0.00029268292682926828 * var_x76;
            const double var_x180 = var_x106 / (var_x105 * var_x78 * pow((0.01 + var_x101), 2));
            const double var_x181 = var_x178 * var_x80 * var_x92;
            const double var_x183 = 1 / var_chaste_interface__intracellular_ion_concentrations__Cl_i;
            const double var_x451 = 2.010502764933119e-20 * var_x143;
            const double var_x454 = log(100.0 * var_x183);
            const double var_x455 = var_x151 + var_x454;
            const double var_x456 = pow(var_x455, 4);
            const double var_x457 = 2.8839711417365218e-9 * pow(var_x455, 7) / pow((1 + 0.0085580149227345564 * var_x456), 2);
            const double var_x458 = 20.048989239399607 * pow(var_x455, 3) / (59494197.640692554 + 509152.231225166 * var_x456);
            const double var_x459 = var_x150 * var_x457 - var_x150 * var_x458;
            
            partialF = (var_x459 - 2.4362214181418025e-8 * var_x181 - 4.5192480335411901e-10 * var_x150 - 6.7562758101440786e-9 * var_x175 - 2.5123533374587338e-10 * var_x180 - 1.8076992134164759e-7 * var_x176 - var_x179 * var_x451) * mParameters[3];
        }
        else
        {
            const double y_save = rY[21];
            rY[21] += delta;
            const double temp = EvaluateYDerivative21(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[21])/delta;
            rY[21] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative22(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__i_to_2_a_gate__a = rY[20];
        // Units: dimensionless; Initial value: 0.0014909437525000811
        double var_chaste_interface__intracellular_ion_concentrations__Na_i = rY[21];
        // Units: millimolar; Initial value: 9.927155552932733
        double var_chaste_interface__intracellular_ion_concentrations__Cl_i = rY[22];
        // Units: millimolar; Initial value: 18.904682470140408
        double var_chaste_interface__intracellular_ion_concentrations__K_i = rY[23];
        // Units: millimolar; Initial value: 141.9670801746057
        

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_i_to_2__i_to_2 = 20.0 * ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (3.8593999999999993e-9 * (-100.0 * exp(9.9999999999999995e-8) + var_chaste_interface__intracellular_ion_concentrations__Cl_i) / (1.0 - exp(9.9999999999999995e-8)) + 3.8593999999999993e-9 * (-100.0 * exp(-9.9999999999999995e-8) + var_chaste_interface__intracellular_ion_concentrations__Cl_i) / (1.0 - exp(-9.9999999999999995e-8))) - 3.8593999999999993e-9 * (-100.0 * exp(-9.9999999999999995e-8) + var_chaste_interface__intracellular_ion_concentrations__Cl_i) / (1.0 - exp(-9.9999999999999995e-8))) : (0.0014448004881001341 * (_lt_0_row[0] + var_chaste_interface__intracellular_ion_concentrations__Cl_i) * var_chaste_interface__membrane__V / (_lt_0_row[1]))) * var_chaste_interface__i_to_2_a_gate__a; // microA_per_microF
        const double var_equilibrium_potentials__E_Cl = -26.712338705498265 * log(100.0 / var_chaste_interface__intracellular_ion_concentrations__Cl_i); // millivolt
        const double var_background_currents__i_Cl_b = 0.00022499999999999999 * var_chaste_interface__membrane__V - 0.00022499999999999999 * var_equilibrium_potentials__E_Cl; // microA_per_microF
        const double var_equilibrium_potentials__E_K = 26.712338705498265 * log(mParameters[5] / var_chaste_interface__intracellular_ion_concentrations__K_i); // millivolt
        const double var_CT_K_Cl__CT_K_Cl = 7.0755999999999996e-6 * (-var_equilibrium_potentials__E_Cl + var_equilibrium_potentials__E_K) / (87.825100000000006 - var_equilibrium_potentials__E_Cl + var_equilibrium_potentials__E_K); // millimolar_per_millisecond
        const double var_equilibrium_potentials__E_Na = 26.712338705498265 * log(mParameters[6] / var_chaste_interface__intracellular_ion_concentrations__Na_i); // millivolt
        const double var_CT_Na_Cl__CT_Na_Cl = 9.8442999999999999e-6 * pow((-var_equilibrium_potentials__E_Cl + var_equilibrium_potentials__E_Na), 4) / (59494197.640692554 + pow((-var_equilibrium_potentials__E_Cl + var_equilibrium_potentials__E_Na), 4)); // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__Cl_i = (-6.767281717060562e-9 * var_background_currents__i_Cl_b - 6.767281717060562e-9 * var_i_to_2__i_to_2 + var_CT_K_Cl__CT_K_Cl + var_CT_Na_Cl__CT_Na_Cl) * mParameters[3]; // millimolar / millisecond

        return d_dt_chaste_interface_var_intracellular_ion_concentrations__Cl_i;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative22(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -83.43812846286808
            double var_chaste_interface__i_to_2_a_gate__a = rY[20];
            // Units: dimensionless; Initial value: 0.0014909437525000811
            double var_chaste_interface__intracellular_ion_concentrations__Na_i = rY[21];
            // Units: millimolar; Initial value: 9.927155552932733
            double var_chaste_interface__intracellular_ion_concentrations__Cl_i = rY[22];
            // Units: millimolar; Initial value: 18.904682470140408
            double var_chaste_interface__intracellular_ion_concentrations__K_i = rY[23];
            // Units: millimolar; Initial value: 141.9670801746057
            


            const double var_x0 = exp(9.9999999999999995e-8);
            const double var_x1 = 1 / (1.0 - var_x0);
            const double var_x3 = exp(-9.9999999999999995e-8);
            const double var_x4 = 1 / (1.0 - var_x3);
            const double var_x6 = fabs(var_chaste_interface__membrane__V);
            const double var_x7 = var_x6 < 2.6712338705498262e-6;
            const double var_x8 = 0.037435883507802616 * var_chaste_interface__membrane__V;
            const double var_x9 = exp(var_x8);
            const double var_x10 = 1.0 - var_x9;
            const double var_x11 = 1 / var_x10;
            const double var_x12 = var_x11 * var_chaste_interface__i_to_2_a_gate__a;
            const double var_x15 = var_x12 * var_chaste_interface__membrane__V;
            const double var_x37 = 1 / var_chaste_interface__intracellular_ion_concentrations__K_i;
            const double var_x38 = log(var_x37 * mParameters[5]);
            const double var_x39 = 26.712338705498265 * var_x38;
            const double var_x150 = 1 / var_chaste_interface__intracellular_ion_concentrations__Na_i;
            const double var_x151 = log(var_x150 * mParameters[6]);
            const double var_x170 = 3.8593999999999993e-9 * var_x1;
            const double var_x171 = 3.8593999999999993e-9 * var_x4;
            const double var_x172 = 7.7187999999999989e-8 * var_x4;
            const double var_x182 = ((var_x7) ? ((-var_x172 + 20.0 * (0.5 + 187179.41753901311 * var_chaste_interface__membrane__V) * (var_x170 + var_x171)) * var_chaste_interface__i_to_2_a_gate__a) : (0.028896009762002683 * var_x15));
            const double var_x183 = 1 / var_chaste_interface__intracellular_ion_concentrations__Cl_i;
            const double var_x454 = log(100.0 * var_x183);
            const double var_x455 = var_x151 + var_x454;
            const double var_x456 = pow(var_x455, 4);
            const double var_x457 = 2.8839711417365218e-9 * pow(var_x455, 7) / pow((1 + 0.0085580149227345564 * var_x456), 2);
            const double var_x458 = 20.048989239399607 * pow(var_x455, 3) / (59494197.640692554 + 509152.231225166 * var_x456);
            const double var_x460 = var_x183 * var_x457 - var_x183 * var_x458;
            const double var_x461 = var_x39 + 26.712338705498265 * var_x454;
            const double var_x462 = 0.00018900582374462349 / (87.825100000000006 + var_x461);
            const double var_x463 = 2.4504050574882179e-8 * var_x461 / pow((1 + 0.30415380916729118 * var_x38 + 0.30415380916729118 * var_x454), 2);
            const double var_x464 = var_x183 * var_x463 - var_x183 * var_x462;
            
            partialF = (var_x460 + var_x464 + 4.0673232301870709e-11 * var_x183 - 6.767281717060562e-9 * var_x182) * mParameters[3];
        }
        else
        {
            const double y_save = rY[22];
            rY[22] += delta;
            const double temp = EvaluateYDerivative22(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[22])/delta;
            rY[22] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative23(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__Ca_i__Ca_i = rY[1];
        // Units: millimolar; Initial value: 0.00022355433459434943
        double var_chaste_interface__i_to_1_a_gate__a = rY[14];
        // Units: dimensionless; Initial value: 0.0004238729429342389
        double var_chaste_interface__i_to_1_i_gate__i = rY[15];
        // Units: dimensionless; Initial value: 0.9990935802459496
        double var_chaste_interface__i_to_1_i2_gate__i2 = rY[16];
        // Units: dimensionless; Initial value: 0.9777368439681764
        double var_chaste_interface__i_Kr_xr_gate__xr = rY[17];
        // Units: dimensionless; Initial value: 0.07084939408222911
        double var_chaste_interface__i_Ks_xs1_gate__xs1 = rY[18];
        // Units: dimensionless; Initial value: 0.0011737654433043125
        double var_chaste_interface__i_Ks_xs2_gate__xs2 = rY[19];
        // Units: dimensionless; Initial value: 0.001179442867470093
        double var_chaste_interface__intracellular_ion_concentrations__Na_i = rY[21];
        // Units: millimolar; Initial value: 9.927155552932733
        double var_chaste_interface__intracellular_ion_concentrations__Cl_i = rY[22];
        // Units: millimolar; Initial value: 18.904682470140408
        double var_chaste_interface__intracellular_ion_concentrations__K_i = rY[23];
        // Units: millimolar; Initial value: 141.9670801746057
        

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_equilibrium_potentials__E_Cl = -26.712338705498265 * log(100.0 / var_chaste_interface__intracellular_ion_concentrations__Cl_i); // millivolt
        const double var_equilibrium_potentials__E_K = 26.712338705498265 * log(mParameters[5] / var_chaste_interface__intracellular_ion_concentrations__K_i); // millivolt
        const double var_CT_K_Cl__CT_K_Cl = 7.0755999999999996e-6 * (-var_equilibrium_potentials__E_Cl + var_equilibrium_potentials__E_K) / (87.825100000000006 - var_equilibrium_potentials__E_Cl + var_equilibrium_potentials__E_K); // millimolar_per_millisecond
        const double var_background_currents__i_K_b = 0.0050000000000000001 * var_chaste_interface__membrane__V - 0.0050000000000000001 * var_equilibrium_potentials__E_K; // microA_per_microF
        const double var_i_K1__i_K1 = (0.0040000000000000001 + 0.4389381125701739 * sqrt(mParameters[5]) * mParameters[11] / ((1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_equilibrium_potentials__E_K)) * (1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_equilibrium_potentials__E_K)) + (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_equilibrium_potentials__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_equilibrium_potentials__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_equilibrium_potentials__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V))))) * (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V); // microA_per_microF
        const double var_i_K_p__i_K_p = 0.0027599999999999999 * (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) / (_lt_0_row[2]); // microA_per_microF
        const double var_i_Kr__i_Kr = 0.43033148291193518 * sqrt(mParameters[5]) * (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * mParameters[12] * var_chaste_interface__i_Kr_xr_gate__xr / (_lt_0_row[8]); // microA_per_microF
        const double var_i_Ks__i_Ks = (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__Ca_i__Ca_i), 1.3999999999999999))) * (-26.712338705498265 * log((0.018329999999999999 * mParameters[6] + mParameters[5]) / (0.018329999999999999 * var_chaste_interface__intracellular_ion_concentrations__Na_i + var_chaste_interface__intracellular_ion_concentrations__K_i)) + var_chaste_interface__membrane__V) * mParameters[13] * var_chaste_interface__i_Ks_xs1_gate__xs1 * var_chaste_interface__i_Ks_xs2_gate__xs2; // microA_per_microF
        const double var_i_NaK__i_NaK = 0.61875000000000002 * mParameters[5] / ((1.0 + 100.0 / pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 2)) * (1.5 + mParameters[5]) * (1.0 + _lt_0_row[7] + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * mParameters[6])) * _lt_0_row[6])); // microA_per_microF
        const double var_i_to_1__i_to_1 = (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * (0.20000000000000001 * var_chaste_interface__i_to_1_i2_gate__i2 + 0.80000000000000004 * var_chaste_interface__i_to_1_i_gate__i) * mParameters[15] * var_chaste_interface__i_to_1_a_gate__a; // microA_per_microF
        const double d_dt_chaste_interface_var_intracellular_ion_concentrations__K_i = (1.3534563434121124e-8 * var_i_NaK__i_NaK - 6.767281717060562e-9 * var_background_currents__i_K_b - 6.767281717060562e-9 * var_i_K1__i_K1 - 6.767281717060562e-9 * var_i_K_p__i_K_p - 6.767281717060562e-9 * var_i_Kr__i_Kr - 6.767281717060562e-9 * var_i_Ks__i_Ks - 6.767281717060562e-9 * var_i_to_1__i_to_1 + var_CT_K_Cl__CT_K_Cl) * mParameters[3]; // millimolar / millisecond

        return d_dt_chaste_interface_var_intracellular_ion_concentrations__K_i;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative23(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -83.43812846286808
            double var_chaste_interface__Ca_i__Ca_i = rY[1];
            // Units: millimolar; Initial value: 0.00022355433459434943
            double var_chaste_interface__i_to_1_a_gate__a = rY[14];
            // Units: dimensionless; Initial value: 0.0004238729429342389
            double var_chaste_interface__i_to_1_i_gate__i = rY[15];
            // Units: dimensionless; Initial value: 0.9990935802459496
            double var_chaste_interface__i_to_1_i2_gate__i2 = rY[16];
            // Units: dimensionless; Initial value: 0.9777368439681764
            double var_chaste_interface__i_Kr_xr_gate__xr = rY[17];
            // Units: dimensionless; Initial value: 0.07084939408222911
            double var_chaste_interface__i_Ks_xs1_gate__xs1 = rY[18];
            // Units: dimensionless; Initial value: 0.0011737654433043125
            double var_chaste_interface__i_Ks_xs2_gate__xs2 = rY[19];
            // Units: dimensionless; Initial value: 0.001179442867470093
            double var_chaste_interface__intracellular_ion_concentrations__Na_i = rY[21];
            // Units: millimolar; Initial value: 9.927155552932733
            double var_chaste_interface__intracellular_ion_concentrations__Cl_i = rY[22];
            // Units: millimolar; Initial value: 18.904682470140408
            double var_chaste_interface__intracellular_ion_concentrations__K_i = rY[23];
            // Units: millimolar; Initial value: 141.9670801746057
            


            const double var_x34 = exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V);
            const double var_x35 = 1.0 + var_x34;
            const double var_x36 = 1 / var_x35;
            const double var_x37 = 1 / var_chaste_interface__intracellular_ion_concentrations__K_i;
            const double var_x38 = log(var_x37 * mParameters[5]);
            const double var_x39 = 26.712338705498265 * var_x38;
            const double var_x40 = -var_x39 + var_chaste_interface__membrane__V;
            const double var_x41 = exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 6.3708927812613361 * var_x38);
            const double var_x42 = 1.0 + var_x41;
            const double var_x43 = var_x41 / pow(var_x42, 2);
            const double var_x44 = sqrt(mParameters[5]);
            const double var_x45 = 1 / var_x42;
            const double var_x46 = exp(-2.4444678999999998 + 13.738155796237757 * var_x38 - 0.51429999999999998 * var_chaste_interface__membrane__V);
            const double var_x47 = 1.0 + var_x46;
            const double var_x48 = 1 / var_x47;
            const double var_x49 = exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 2.1455350448256207 * var_x38);
            const double var_x50 = exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 1.6494869150645177 * var_x38);
            const double var_x51 = var_x50 + 0.49124000000000001 * var_x49;
            const double var_x52 = var_x48 * var_x51;
            const double var_x53 = var_x44 * mParameters[11] / (var_x52 + 1.02 * var_x45);
            const double var_x55 = var_x46 * var_x51 / pow(var_x47, 2);
            const double var_x57 = var_x44 * var_x45 * mParameters[11] / pow((var_x45 + 0.98039215686274506 * var_x52), 2);
            const double var_x67 = 1 / var_chaste_interface__Ca_i__Ca_i;
            const double var_x68 = pow(var_x67, 1.3999999999999999);
            const double var_x69 = 1.0 + 6.4818210260626455e-7 * var_x68;
            const double var_x70 = 1 / var_x69;
            const double var_x72 = mParameters[13] * var_chaste_interface__i_Ks_xs2_gate__xs2;
            const double var_x94 = exp(-0.26470588235294124 + 0.049019607843137261 * var_chaste_interface__membrane__V);
            const double var_x95 = 1.0 + var_x94;
            const double var_x96 = var_x44 * mParameters[12] / var_x95;
            const double var_x98 = var_x45 * var_x53;
            const double var_x146 = 1 / (0.018329999999999999 * var_chaste_interface__intracellular_ion_concentrations__Na_i + var_chaste_interface__intracellular_ion_concentrations__K_i);
            const double var_x168 = mParameters[15] * var_chaste_interface__i_to_1_a_gate__a;
            const double var_x183 = 1 / var_chaste_interface__intracellular_ion_concentrations__Cl_i;
            const double var_x184 = var_x37 * var_x43;
            const double var_x185 = 6.4983106368865622 * var_x184 - var_x48 * (1.053972635420138 * var_x37 * var_x49 + 1.6494869150645177 * var_x37 * var_x50) - 13.738155796237757 * var_x37 * var_x55;
            const double var_x186 = var_x184 * var_x53;
            const double var_x187 = 26.712338705498265 * var_x37;
            const double var_x188 = var_x36 * var_x37;
            const double var_x189 = var_x96 * var_chaste_interface__i_Kr_xr_gate__xr;
            const double var_x190 = var_x189 * var_x37;
            const double var_x454 = log(100.0 * var_x183);
            const double var_x461 = var_x39 + 26.712338705498265 * var_x454;
            const double var_x462 = 0.00018900582374462349 / (87.825100000000006 + var_x461);
            const double var_x463 = 2.4504050574882179e-8 * var_x461 / pow((1 + 0.30415380916729118 * var_x38 + 0.30415380916729118 * var_x454), 2);
            const double var_x465 = var_x37 * var_x463 - var_x37 * var_x462;
            const double var_x466 = 2.8550729182210769e-9 * var_x57;
            const double var_x467 = -1.3534563434121124e-9 * var_chaste_interface__i_to_1_i2_gate__i2 - 5.4138253736484496e-9 * var_chaste_interface__i_to_1_i_gate__i;
            const double var_x468 = var_x168 * var_x467;
            const double var_x469 = -6.767281717060562e-9 - 4.0603690302363372e-9 * var_x70;
            const double var_x470 = var_x469 * var_x72;
            const double var_x471 = var_x470 * var_chaste_interface__i_Ks_xs1_gate__xs1;
            const double var_x472 = -2.9704178641172085e-9 * var_x98;
            const double var_x475 = var_x146 * var_x471;
            
            partialF = (var_x465 + 26.712338705498265 * var_x475 - 9.0384960670823802e-10 * var_x37 - 4.9892498290294737e-10 * var_x188 - 7.7790988316825085e-8 * var_x190 + var_x187 * var_x468 + var_x187 * (-2.7069126868242249e-11 + var_x472) + var_x40 * (1.892421372783404e-8 * var_x186 - var_x185 * var_x466)) * mParameters[3];
        }
        else
        {
            const double y_save = rY[23];
            rY[23] += delta;
            const double temp = EvaluateYDerivative23(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[23])/delta;
            rY[23] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative24(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Ca_MK_act__Ca_MK_trap = rY[24];
        // Units: dimensionless; Initial value: 8.789168284782809e-06
        double var_chaste_interface__Ca_r__Ca_r = rY[27];
        // Units: millimolar; Initial value: 0.00022418117117903934
        


        // Mathematics
        const double var_Ca_MK_act__Ca_MK_bound = 0.050000000000000003 * (1.0 - var_chaste_interface__Ca_MK_act__Ca_MK_trap) / (1.0 + 0.14999999999999999 / var_chaste_interface__Ca_r__Ca_r); // dimensionless
        const double d_dt_chaste_interface_var_Ca_MK_act__Ca_MK_trap = -0.00068000000000000005 * var_chaste_interface__Ca_MK_act__Ca_MK_trap + 0.050000000000000003 * (var_Ca_MK_act__Ca_MK_bound + var_chaste_interface__Ca_MK_act__Ca_MK_trap) * var_Ca_MK_act__Ca_MK_bound; // 1 / millisecond

        return d_dt_chaste_interface_var_Ca_MK_act__Ca_MK_trap;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative24(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__Ca_MK_act__Ca_MK_trap = rY[24];
            // Units: dimensionless; Initial value: 8.789168284782809e-06
            double var_chaste_interface__Ca_r__Ca_r = rY[27];
            // Units: millimolar; Initial value: 0.00022418117117903934
            


            const double var_x203 = 1.0 - var_chaste_interface__Ca_MK_act__Ca_MK_trap;
            const double var_x204 = 1 / var_chaste_interface__Ca_r__Ca_r;
            const double var_x205 = 1.0 + 0.14999999999999999 * var_x204;
            const double var_x206 = 1 / var_x205;
            const double var_x207 = 0.050000000000000003 * var_x206;
            const double var_x208 = var_x203 * var_x207;
            const double var_x211 = var_x208 + var_chaste_interface__Ca_MK_act__Ca_MK_trap;
            const double var_x225 = 1 - var_x207;
            const double var_x476 = 0.0025000000000000005 * var_x206;
            
            partialF = -0.00068000000000000005 - var_x211 * var_x476 + var_x203 * var_x225 * var_x476;
        }
        else
        {
            const double y_save = rY[24];
            rY[24] += delta;
            const double temp = EvaluateYDerivative24(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[24])/delta;
            rY[24] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative25(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Ca_i__Ca_i = rY[1];
        // Units: millimolar; Initial value: 0.00022355433459434943
        double var_chaste_interface__Ca_MK_act__Ca_MK_trap = rY[24];
        // Units: dimensionless; Initial value: 8.789168284782809e-06
        double var_chaste_interface__Ca_NSR__Ca_NSR = rY[25];
        // Units: millimolar; Initial value: 1.2132524695849454
        double var_chaste_interface__Ca_JSR__Ca_JSR = rY[26];
        // Units: millimolar; Initial value: 1.1433050636518596
        double var_chaste_interface__Ca_r__Ca_r = rY[27];
        // Units: millimolar; Initial value: 0.00022418117117903934
        


        // Mathematics
        const double var_Ca_MK_act__Ca_MK_bound = 0.050000000000000003 * (1.0 - var_chaste_interface__Ca_MK_act__Ca_MK_trap) / (1.0 + 0.14999999999999999 / var_chaste_interface__Ca_r__Ca_r); // dimensionless
        const double var_Ca_MK_act__Ca_MK_act = var_Ca_MK_act__Ca_MK_bound + var_chaste_interface__Ca_MK_act__Ca_MK_trap; // dimensionless
        const double var_q_leak__q_leak = 0.066666666666666666 * var_chaste_interface__Ca_NSR__Ca_NSR * mParameters[0]; // millimolar_per_millisecond
        const double var_q_tr__q_tr = 0.0083333333333333332 * var_chaste_interface__Ca_NSR__Ca_NSR - 0.0083333333333333332 * var_chaste_interface__Ca_JSR__Ca_JSR; // millimolar_per_millisecond
        const double var_q_up__q_up = 0.5 * (1.0 + 0.75 * var_Ca_MK_act__Ca_MK_act / (0.14999999999999999 + var_Ca_MK_act__Ca_MK_act)) * var_chaste_interface__Ca_i__Ca_i * mParameters[2] / (0.00092000000000000003 - 0.00017000000000000001 * var_Ca_MK_act__Ca_MK_act / (0.14999999999999999 + var_Ca_MK_act__Ca_MK_act) + var_chaste_interface__Ca_i__Ca_i); // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_Ca_NSR__Ca_NSR = -var_q_leak__q_leak - 0.086956521739130432 * var_q_tr__q_tr + var_q_up__q_up; // millimolar / millisecond

        return d_dt_chaste_interface_var_Ca_NSR__Ca_NSR;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative25(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            


            
            partialF = -0.00072463768115942019 - 0.066666666666666666 * mParameters[0];
        }
        else
        {
            const double y_save = rY[25];
            rY[25] += delta;
            const double temp = EvaluateYDerivative25(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[25])/delta;
            rY[25] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative26(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__Ca_NSR__Ca_NSR = rY[25];
        // Units: millimolar; Initial value: 1.2132524695849454
        double var_chaste_interface__Ca_JSR__Ca_JSR = rY[26];
        // Units: millimolar; Initial value: 1.1433050636518596
        double var_chaste_interface__Ca_r__Ca_r = rY[27];
        // Units: millimolar; Initial value: 0.00022418117117903934
        double var_chaste_interface__q_rel_ri_gate__ri = rY[28];
        // Units: dimensionless; Initial value: 0.7802870066567904
        double var_chaste_interface__q_rel_ro_gate__ro = rY[29];
        // Units: dimensionless; Initial value: 1.2785734760674763e-09
        

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_i_Ca_L__i_Ca_L_max = ((fabs(-15.0 + var_chaste_interface__membrane__V) < 1.3356169352718439e-6) ? (374358.83507888648 * (-14.999998664383064 + var_chaste_interface__membrane__V) * (4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(9.9999999999770198e-8)) / (-1.0 + exp(9.9999999999770198e-8)) + 4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(-9.9999999999770198e-8)) / (-1.0 + exp(-9.9999999999770198e-8))) - 4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(-9.9999999999770198e-8)) / (-1.0 + exp(-9.9999999999770198e-8))) : (3.510865186083326 * (-15.0 + var_chaste_interface__membrane__V) * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * _lt_0_row[9]) / (_lt_0_row[10]))); // microA_per_microF
        const double var_q_rel__q_rel = (-var_chaste_interface__Ca_r__Ca_r + var_chaste_interface__Ca_JSR__Ca_JSR) * mParameters[1] * var_chaste_interface__q_rel_ri_gate__ri * var_chaste_interface__q_rel_ro_gate__ro / (1.0 + exp(2.6000000000000001 + 0.20000000000000001 * mParameters[7] * var_i_Ca_L__i_Ca_L_max)); // millimolar_per_millisecond
        const double var_q_tr__q_tr = 0.0083333333333333332 * var_chaste_interface__Ca_NSR__Ca_NSR - 0.0083333333333333332 * var_chaste_interface__Ca_JSR__Ca_JSR; // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_Ca_JSR__Ca_JSR = (-var_q_rel__q_rel + var_q_tr__q_tr) / (1.0 + 8.0 / pow((0.80000000000000004 + var_chaste_interface__Ca_JSR__Ca_JSR), 2)); // millimolar / millisecond

        return d_dt_chaste_interface_var_Ca_JSR__Ca_JSR;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative26(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -83.43812846286808
            double var_chaste_interface__Ca_NSR__Ca_NSR = rY[25];
            // Units: millimolar; Initial value: 1.2132524695849454
            double var_chaste_interface__Ca_JSR__Ca_JSR = rY[26];
            // Units: millimolar; Initial value: 1.1433050636518596
            double var_chaste_interface__Ca_r__Ca_r = rY[27];
            // Units: millimolar; Initial value: 0.00022418117117903934
            double var_chaste_interface__q_rel_ri_gate__ri = rY[28];
            // Units: dimensionless; Initial value: 0.7802870066567904
            double var_chaste_interface__q_rel_ro_gate__ro = rY[29];
            // Units: dimensionless; Initial value: 1.2785734760674763e-09
            


            const double var_x18 = -0.34100000000000003 * mParameters[4];
            const double var_x24 = 0.074871767015605231 * var_chaste_interface__membrane__V;
            const double var_x111 = exp(9.9999999999770198e-8);
            const double var_x112 = 1 / (-1.0 + var_x111);
            const double var_x113 = var_chaste_interface__Ca_r__Ca_r;
            const double var_x114 = var_x112 * (var_x18 + var_x111 * var_x113);
            const double var_x115 = exp(-9.9999999999770198e-8);
            const double var_x116 = 1 / (-1.0 + var_x115);
            const double var_x117 = var_x116 * (var_x18 + var_x113 * var_x115);
            const double var_x118 = -15.0 + var_chaste_interface__membrane__V;
            const double var_x119 = fabs(var_x118) < 1.3356169352718439e-6;
            const double var_x120 = exp(-1.1230765052340785 + var_x24);
            const double var_x121 = var_x18 + var_x113 * var_x120;
            const double var_x122 = -1.0 + var_x120;
            const double var_x123 = 1 / var_x122;
            const double var_x124 = 3.510865186083326 * var_x123;
            const double var_x125 = var_x121 * var_x124;
            const double var_x156 = -14.999998664383064 + var_chaste_interface__membrane__V;
            const double var_x157 = 4.6891709999892238e-6 * var_x117;
            const double var_x158 = var_x156 * (var_x157 + 4.6891709999892238e-6 * var_x114);
            const double var_x159 = ((var_x119) ? (-var_x157 + 374358.83507888648 * var_x158) : (var_x118 * var_x125)) * mParameters[7];
            const double var_x480 = 0.80000000000000004 + var_chaste_interface__Ca_JSR__Ca_JSR;
            const double var_x481 = pow(var_x480, (-2));
            const double var_x482 = 1 / (1.0 + 8.0 * var_x481);
            const double var_x483 = exp(2.6000000000000001 + 0.20000000000000001 * var_x159);
            const double var_x484 = 1.0 + var_x483;
            const double var_x485 = -var_chaste_interface__Ca_r__Ca_r + var_chaste_interface__Ca_JSR__Ca_JSR;
            const double var_x489 = 1 / var_x484;
            const double var_x490 = var_x489 * mParameters[1] * var_chaste_interface__q_rel_ro_gate__ro;
            const double var_x491 = var_x490 * var_chaste_interface__q_rel_ri_gate__ri;
            const double var_x492 = var_x491;
            
            partialF = var_x482 * (-0.0083333333333333332 - var_x492) + 0.25 * (0.0083333333333333332 * var_chaste_interface__Ca_NSR__Ca_NSR - 0.0083333333333333332 * var_chaste_interface__Ca_JSR__Ca_JSR - var_x485 * var_x492) / (pow(var_x480, 3) * pow((0.125 + var_x481), 2));
        }
        else
        {
            const double y_save = rY[26];
            rY[26] += delta;
            const double temp = EvaluateYDerivative26(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[26])/delta;
            rY[26] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative27(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__Ca_i__Ca_i = rY[1];
        // Units: millimolar; Initial value: 0.00022355433459434943
        double var_chaste_interface__i_Ca_L_d_gate__d = rY[7];
        // Units: dimensionless; Initial value: 2.322223865147363e-06
        double var_chaste_interface__i_Ca_L_f_gate__f = rY[8];
        // Units: dimensionless; Initial value: 0.9985607329462358
        double var_chaste_interface__i_Ca_L_f2_gate__f2 = rY[9];
        // Units: dimensionless; Initial value: 0.8173435436674658
        double var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca = rY[10];
        // Units: dimensionless; Initial value: 0.9610551285529658
        double var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 = rY[11];
        // Units: dimensionless; Initial value: 0.868690796671854
        double var_chaste_interface__Ca_JSR__Ca_JSR = rY[26];
        // Units: millimolar; Initial value: 1.1433050636518596
        double var_chaste_interface__Ca_r__Ca_r = rY[27];
        // Units: millimolar; Initial value: 0.00022418117117903934
        double var_chaste_interface__q_rel_ri_gate__ri = rY[28];
        // Units: dimensionless; Initial value: 0.7802870066567904
        double var_chaste_interface__q_rel_ro_gate__ro = rY[29];
        // Units: dimensionless; Initial value: 1.2785734760674763e-09
        

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_Ca_r__q_diff = 5.0 * var_chaste_interface__Ca_r__Ca_r - 5.0 * var_chaste_interface__Ca_i__Ca_i; // millimolar_per_millisecond
        const double var_i_Ca_L__i_Ca_L_max = ((fabs(-15.0 + var_chaste_interface__membrane__V) < 1.3356169352718439e-6) ? (374358.83507888648 * (-14.999998664383064 + var_chaste_interface__membrane__V) * (4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(9.9999999999770198e-8)) / (-1.0 + exp(9.9999999999770198e-8)) + 4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(-9.9999999999770198e-8)) / (-1.0 + exp(-9.9999999999770198e-8))) - 4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(-9.9999999999770198e-8)) / (-1.0 + exp(-9.9999999999770198e-8))) : (3.510865186083326 * (-15.0 + var_chaste_interface__membrane__V) * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * _lt_0_row[9]) / (_lt_0_row[10]))); // microA_per_microF
        const double var_i_Ca_L__i_Ca_L = mParameters[7] * var_i_Ca_L__i_Ca_L_max * var_chaste_interface__i_Ca_L_d_gate__d * var_chaste_interface__i_Ca_L_f2_gate__f2 * var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 * var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca * var_chaste_interface__i_Ca_L_f_gate__f; // microA_per_microF
        const double var_q_rel__q_rel = (-var_chaste_interface__Ca_r__Ca_r + var_chaste_interface__Ca_JSR__Ca_JSR) * mParameters[1] * var_chaste_interface__q_rel_ri_gate__ri * var_chaste_interface__q_rel_ro_gate__ro / (1.0 + exp(2.6000000000000001 + 0.20000000000000001 * mParameters[7] * var_i_Ca_L__i_Ca_L_max)); // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_Ca_r__Ca_r = (-var_Ca_r__q_diff + 0.23999999999999996 * var_q_rel__q_rel - 1.1504378919002956e-7 * var_i_Ca_L__i_Ca_L) / (1.0 + 2.2480000000000002 * var_chaste_interface__Ca_r__Ca_r / pow((0.0086999999999999994 + var_chaste_interface__Ca_r__Ca_r), 2) + 0.094 * var_chaste_interface__Ca_r__Ca_r / pow((0.00087000000000000001 + var_chaste_interface__Ca_r__Ca_r), 2)); // millimolar / millisecond

        return d_dt_chaste_interface_var_Ca_r__Ca_r;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative27(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -83.43812846286808
            double var_chaste_interface__Ca_i__Ca_i = rY[1];
            // Units: millimolar; Initial value: 0.00022355433459434943
            double var_chaste_interface__i_Ca_L_d_gate__d = rY[7];
            // Units: dimensionless; Initial value: 2.322223865147363e-06
            double var_chaste_interface__i_Ca_L_f_gate__f = rY[8];
            // Units: dimensionless; Initial value: 0.9985607329462358
            double var_chaste_interface__i_Ca_L_f2_gate__f2 = rY[9];
            // Units: dimensionless; Initial value: 0.8173435436674658
            double var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca = rY[10];
            // Units: dimensionless; Initial value: 0.9610551285529658
            double var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 = rY[11];
            // Units: dimensionless; Initial value: 0.868690796671854
            double var_chaste_interface__Ca_JSR__Ca_JSR = rY[26];
            // Units: millimolar; Initial value: 1.1433050636518596
            double var_chaste_interface__Ca_r__Ca_r = rY[27];
            // Units: millimolar; Initial value: 0.00022418117117903934
            double var_chaste_interface__q_rel_ri_gate__ri = rY[28];
            // Units: dimensionless; Initial value: 0.7802870066567904
            double var_chaste_interface__q_rel_ro_gate__ro = rY[29];
            // Units: dimensionless; Initial value: 1.2785734760674763e-09
            


            const double var_x18 = -0.34100000000000003 * mParameters[4];
            const double var_x24 = 0.074871767015605231 * var_chaste_interface__membrane__V;
            const double var_x111 = exp(9.9999999999770198e-8);
            const double var_x112 = 1 / (-1.0 + var_x111);
            const double var_x113 = var_chaste_interface__Ca_r__Ca_r;
            const double var_x114 = var_x112 * (var_x18 + var_x111 * var_x113);
            const double var_x115 = exp(-9.9999999999770198e-8);
            const double var_x116 = 1 / (-1.0 + var_x115);
            const double var_x117 = var_x116 * (var_x18 + var_x113 * var_x115);
            const double var_x118 = -15.0 + var_chaste_interface__membrane__V;
            const double var_x119 = fabs(var_x118) < 1.3356169352718439e-6;
            const double var_x120 = exp(-1.1230765052340785 + var_x24);
            const double var_x121 = var_x18 + var_x113 * var_x120;
            const double var_x122 = -1.0 + var_x120;
            const double var_x123 = 1 / var_x122;
            const double var_x124 = 3.510865186083326 * var_x123;
            const double var_x125 = var_x121 * var_x124;
            const double var_x126 = var_x118 * var_x120;
            const double var_x131 = var_chaste_interface__i_Ca_L_d_gate__d * var_chaste_interface__i_Ca_L_f2_gate__f2 * var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca * var_chaste_interface__i_Ca_L_f_gate__f;
            const double var_x132 = var_x131 * var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2;
            const double var_x156 = -14.999998664383064 + var_chaste_interface__membrane__V;
            const double var_x157 = 4.6891709999892238e-6 * var_x117;
            const double var_x158 = var_x156 * (var_x157 + 4.6891709999892238e-6 * var_x114);
            const double var_x159 = ((var_x119) ? (-var_x157 + 374358.83507888648 * var_x158) : (var_x118 * var_x125)) * mParameters[7];
            const double var_x160 = var_x159 * var_chaste_interface__i_Ca_L_f2_gate__f2 * var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 * var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca;
            const double var_x161 = var_x160 * var_chaste_interface__i_Ca_L_f_gate__f;
            const double var_x191 = var_x115 * var_x116;
            const double var_x192 = 4.6891709999892238e-6 * var_x191;
            const double var_x193 = var_x192 + 4.6891709999892238e-6 * var_x111 * var_x112;
            const double var_x194 = ((var_x119) ? (-var_x192 + var_x193 * (-5615382.0261832969 + 374358.83507888648 * var_chaste_interface__membrane__V)) : (var_x124 * var_x126)) * mParameters[7];
            const double var_x195 = var_x132 * var_x194;
            const double var_x326 = var_x161 * var_chaste_interface__i_Ca_L_d_gate__d;
            const double var_x483 = exp(2.6000000000000001 + 0.20000000000000001 * var_x159);
            const double var_x484 = 1.0 + var_x483;
            const double var_x485 = -var_chaste_interface__Ca_r__Ca_r + var_chaste_interface__Ca_JSR__Ca_JSR;
            const double var_x486 = var_x485 * mParameters[1] * var_chaste_interface__q_rel_ri_gate__ri;
            const double var_x487 = var_x483 * var_x486 * var_chaste_interface__q_rel_ro_gate__ro / pow(var_x484, 2);
            const double var_x489 = 1 / var_x484;
            const double var_x490 = var_x489 * mParameters[1] * var_chaste_interface__q_rel_ro_gate__ro;
            const double var_x491 = var_x490 * var_chaste_interface__q_rel_ri_gate__ri;
            const double var_x493 = var_x194 * var_x487;
            const double var_x497 = 0.0086999999999999994 + var_chaste_interface__Ca_r__Ca_r;
            const double var_x498 = pow(var_x497, (-2));
            const double var_x499 = var_x498 * var_chaste_interface__Ca_r__Ca_r;
            const double var_x500 = 0.00087000000000000001 + var_chaste_interface__Ca_r__Ca_r;
            const double var_x501 = pow(var_x500, (-2));
            const double var_x502 = 0.094 * var_x501;
            const double var_x503 = 1 / (1.0 + 2.2480000000000002 * var_x499 + var_x502 * var_chaste_interface__Ca_r__Ca_r);
            const double var_x504 = var_x503;
            const double var_x506 = 0.23999999999999996 * var_x491;
            
            partialF = var_x504 * (-5.0 - var_x506 - 0.047999999999999994 * var_x493 - 1.1504378919002956e-7 * var_x195) + 0.19788249895518037 * (-var_x502 - 2.2480000000000002 * var_x498 + 4.4960000000000004 * var_chaste_interface__Ca_r__Ca_r / pow(var_x497, 3) + 0.188 * var_chaste_interface__Ca_r__Ca_r / pow(var_x500, 3)) * (5.0 * var_chaste_interface__Ca_i__Ca_i - 5.0 * var_chaste_interface__Ca_r__Ca_r - 1.1504378919002956e-7 * var_x326 + var_x485 * var_x506) / pow((0.44483985765124551 + var_x499 + 0.041814946619217079 * var_x501 * var_chaste_interface__Ca_r__Ca_r), 2);
        }
        else
        {
            const double y_save = rY[27];
            rY[27] += delta;
            const double temp = EvaluateYDerivative27(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[27])/delta;
            rY[27] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative28(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__i_Ca_L_d_gate__d = rY[7];
        // Units: dimensionless; Initial value: 2.322223865147363e-06
        double var_chaste_interface__i_Ca_L_f_gate__f = rY[8];
        // Units: dimensionless; Initial value: 0.9985607329462358
        double var_chaste_interface__i_Ca_L_f2_gate__f2 = rY[9];
        // Units: dimensionless; Initial value: 0.8173435436674658
        double var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca = rY[10];
        // Units: dimensionless; Initial value: 0.9610551285529658
        double var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 = rY[11];
        // Units: dimensionless; Initial value: 0.868690796671854
        double var_chaste_interface__Ca_MK_act__Ca_MK_trap = rY[24];
        // Units: dimensionless; Initial value: 8.789168284782809e-06
        double var_chaste_interface__Ca_r__Ca_r = rY[27];
        // Units: millimolar; Initial value: 0.00022418117117903934
        double var_chaste_interface__q_rel_ri_gate__ri = rY[28];
        // Units: dimensionless; Initial value: 0.7802870066567904
        

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_Ca_MK_act__Ca_MK_bound = 0.050000000000000003 * (1.0 - var_chaste_interface__Ca_MK_act__Ca_MK_trap) / (1.0 + 0.14999999999999999 / var_chaste_interface__Ca_r__Ca_r); // dimensionless
        const double var_Ca_MK_act__Ca_MK_act = var_Ca_MK_act__Ca_MK_bound + var_chaste_interface__Ca_MK_act__Ca_MK_trap; // dimensionless
        const double var_i_Ca_L__i_Ca_L_max = ((fabs(-15.0 + var_chaste_interface__membrane__V) < 1.3356169352718439e-6) ? (374358.83507888648 * (-14.999998664383064 + var_chaste_interface__membrane__V) * (4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(9.9999999999770198e-8)) / (-1.0 + exp(9.9999999999770198e-8)) + 4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(-9.9999999999770198e-8)) / (-1.0 + exp(-9.9999999999770198e-8))) - 4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(-9.9999999999770198e-8)) / (-1.0 + exp(-9.9999999999770198e-8))) : (3.510865186083326 * (-15.0 + var_chaste_interface__membrane__V) * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * _lt_0_row[9]) / (_lt_0_row[10]))); // microA_per_microF
        const double var_i_Ca_L__i_Ca_L = mParameters[7] * var_i_Ca_L__i_Ca_L_max * var_chaste_interface__i_Ca_L_d_gate__d * var_chaste_interface__i_Ca_L_f2_gate__f2 * var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 * var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca * var_chaste_interface__i_Ca_L_f_gate__f; // microA_per_microF
        const double var_q_rel_ri_gate__Ca_fac = 1 / (1.0 + exp(3.3333333333333335 + 66.666666666666671 * var_i_Ca_L__i_Ca_L)); // millimolar
        const double d_dt_chaste_interface_var_q_rel_ri_gate__ri = (-var_chaste_interface__q_rel_ri_gate__ri + 1 / (1.0 + exp(-16.0 + 80.0 * var_q_rel_ri_gate__Ca_fac + 40000.0 * var_chaste_interface__Ca_r__Ca_r))) / (3.0 + (350.0 - 10.0 * var_Ca_MK_act__Ca_MK_act / (0.14999999999999999 + var_Ca_MK_act__Ca_MK_act)) / (1.0 + exp(-15.0 + 5000.0 * var_chaste_interface__Ca_r__Ca_r + 15.0 * var_q_rel_ri_gate__Ca_fac)) + 10.0 * var_Ca_MK_act__Ca_MK_act / (0.14999999999999999 + var_Ca_MK_act__Ca_MK_act)); // 1 / millisecond

        return d_dt_chaste_interface_var_q_rel_ri_gate__ri;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative28(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -83.43812846286808
            double var_chaste_interface__i_Ca_L_d_gate__d = rY[7];
            // Units: dimensionless; Initial value: 2.322223865147363e-06
            double var_chaste_interface__i_Ca_L_f_gate__f = rY[8];
            // Units: dimensionless; Initial value: 0.9985607329462358
            double var_chaste_interface__i_Ca_L_f2_gate__f2 = rY[9];
            // Units: dimensionless; Initial value: 0.8173435436674658
            double var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca = rY[10];
            // Units: dimensionless; Initial value: 0.9610551285529658
            double var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 = rY[11];
            // Units: dimensionless; Initial value: 0.868690796671854
            double var_chaste_interface__Ca_MK_act__Ca_MK_trap = rY[24];
            // Units: dimensionless; Initial value: 8.789168284782809e-06
            double var_chaste_interface__Ca_r__Ca_r = rY[27];
            // Units: millimolar; Initial value: 0.00022418117117903934
            


            const double var_x18 = -0.34100000000000003 * mParameters[4];
            const double var_x24 = 0.074871767015605231 * var_chaste_interface__membrane__V;
            const double var_x111 = exp(9.9999999999770198e-8);
            const double var_x112 = 1 / (-1.0 + var_x111);
            const double var_x113 = var_chaste_interface__Ca_r__Ca_r;
            const double var_x114 = var_x112 * (var_x18 + var_x111 * var_x113);
            const double var_x115 = exp(-9.9999999999770198e-8);
            const double var_x116 = 1 / (-1.0 + var_x115);
            const double var_x117 = var_x116 * (var_x18 + var_x113 * var_x115);
            const double var_x118 = -15.0 + var_chaste_interface__membrane__V;
            const double var_x119 = fabs(var_x118) < 1.3356169352718439e-6;
            const double var_x120 = exp(-1.1230765052340785 + var_x24);
            const double var_x121 = var_x18 + var_x113 * var_x120;
            const double var_x122 = -1.0 + var_x120;
            const double var_x123 = 1 / var_x122;
            const double var_x124 = 3.510865186083326 * var_x123;
            const double var_x125 = var_x121 * var_x124;
            const double var_x156 = -14.999998664383064 + var_chaste_interface__membrane__V;
            const double var_x157 = 4.6891709999892238e-6 * var_x117;
            const double var_x158 = var_x156 * (var_x157 + 4.6891709999892238e-6 * var_x114);
            const double var_x159 = ((var_x119) ? (-var_x157 + 374358.83507888648 * var_x158) : (var_x118 * var_x125)) * mParameters[7];
            const double var_x160 = var_x159 * var_chaste_interface__i_Ca_L_f2_gate__f2 * var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 * var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca;
            const double var_x161 = var_x160 * var_chaste_interface__i_Ca_L_f_gate__f;
            const double var_x203 = 1.0 - var_chaste_interface__Ca_MK_act__Ca_MK_trap;
            const double var_x204 = 1 / var_chaste_interface__Ca_r__Ca_r;
            const double var_x205 = 1.0 + 0.14999999999999999 * var_x204;
            const double var_x206 = 1 / var_x205;
            const double var_x207 = 0.050000000000000003 * var_x206;
            const double var_x208 = var_x203 * var_x207;
            const double var_x209 = 0.14999999999999999 + var_x208 + var_chaste_interface__Ca_MK_act__Ca_MK_trap;
            const double var_x210 = 1 / var_x209;
            const double var_x211 = var_x208 + var_chaste_interface__Ca_MK_act__Ca_MK_trap;
            const double var_x212 = var_x210 * var_x211;
            const double var_x324 = 10.0 * var_x212;
            const double var_x326 = var_x161 * var_chaste_interface__i_Ca_L_d_gate__d;
            const double var_x508 = exp(3.3333333333333335 + 66.666666666666671 * var_x326);
            const double var_x509 = 1.0 + var_x508;
            const double var_x511 = 1 / var_x509;
            const double var_x514 = exp(-15.0 + 5000.0 * var_chaste_interface__Ca_r__Ca_r + 15.0 * var_x511);
            const double var_x515 = 1.0 + var_x514;
            const double var_x516 = 1 / var_x515;
            const double var_x517 = 350.0 - var_x324;
            const double var_x518 = var_x516 * var_x517;
            const double var_x519 = 1 / (3.0 + var_x324 + var_x518);
            
            partialF = -var_x519;
        }
        else
        {
            const double y_save = rY[28];
            rY[28] += delta;
            const double temp = EvaluateYDerivative28(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[28])/delta;
            rY[28] = y_save;
        }
        return partialF;
    }
    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluateYDerivative29(double var_chaste_interface__environment__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__i_Ca_L_d_gate__d = rY[7];
        // Units: dimensionless; Initial value: 2.322223865147363e-06
        double var_chaste_interface__i_Ca_L_f_gate__f = rY[8];
        // Units: dimensionless; Initial value: 0.9985607329462358
        double var_chaste_interface__i_Ca_L_f2_gate__f2 = rY[9];
        // Units: dimensionless; Initial value: 0.8173435436674658
        double var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca = rY[10];
        // Units: dimensionless; Initial value: 0.9610551285529658
        double var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 = rY[11];
        // Units: dimensionless; Initial value: 0.868690796671854
        double var_chaste_interface__Ca_JSR__Ca_JSR = rY[26];
        // Units: millimolar; Initial value: 1.1433050636518596
        double var_chaste_interface__Ca_r__Ca_r = rY[27];
        // Units: millimolar; Initial value: 0.00022418117117903934
        double var_chaste_interface__q_rel_ro_gate__ro = rY[29];
        // Units: dimensionless; Initial value: 1.2785734760674763e-09
        

        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_i_Ca_L__i_Ca_L_max = ((fabs(-15.0 + var_chaste_interface__membrane__V) < 1.3356169352718439e-6) ? (374358.83507888648 * (-14.999998664383064 + var_chaste_interface__membrane__V) * (4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(9.9999999999770198e-8)) / (-1.0 + exp(9.9999999999770198e-8)) + 4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(-9.9999999999770198e-8)) / (-1.0 + exp(-9.9999999999770198e-8))) - 4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(-9.9999999999770198e-8)) / (-1.0 + exp(-9.9999999999770198e-8))) : (3.510865186083326 * (-15.0 + var_chaste_interface__membrane__V) * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * _lt_0_row[9]) / (_lt_0_row[10]))); // microA_per_microF
        const double var_i_Ca_L__i_Ca_L = mParameters[7] * var_i_Ca_L__i_Ca_L_max * var_chaste_interface__i_Ca_L_d_gate__d * var_chaste_interface__i_Ca_L_f2_gate__f2 * var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 * var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca * var_chaste_interface__i_Ca_L_f_gate__f; // microA_per_microF
        const double d_dt_chaste_interface_var_q_rel_ro_gate__ro = -0.33333333333333331 * var_chaste_interface__q_rel_ro_gate__ro + 0.33333333333333331 * pow(var_chaste_interface__Ca_JSR__Ca_JSR, 1.8999999999999999) * pow(var_i_Ca_L__i_Ca_L, 2) / ((1.0 + pow(var_i_Ca_L__i_Ca_L, 2)) * (pow(var_chaste_interface__Ca_JSR__Ca_JSR, 1.8999999999999999) + 1644.6531773416521 * pow((var_chaste_interface__Ca_r__Ca_r / (0.0028 + var_chaste_interface__Ca_r__Ca_r)), 1.8999999999999999))); // 1 / millisecond

        return d_dt_chaste_interface_var_q_rel_ro_gate__ro;
    }

    double Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::EvaluatePartialDerivative29(double var_chaste_interface__environment__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            


            
            partialF = -0.33333333333333331;
        }
        else
        {
            const double y_save = rY[29];
            rY[29] += delta;
            const double temp = EvaluateYDerivative29(var_chaste_interface__environment__time, rY);
            partialF = (temp-mEvalF[29])/delta;
            rY[29] = y_save;
        }
        return partialF;
    }

    std::vector<double> Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const std::vector<double> & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -83.43812846286808
        double var_chaste_interface__Ca_i__Ca_i = rY[1];
        // Units: millimolar; Initial value: 0.00022355433459434943
        double var_chaste_interface__i_Na_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.002003390432234504
        double var_chaste_interface__i_Na_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.9786390933308567
        double var_chaste_interface__i_Na_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.09866447258167589
        double var_chaste_interface__i_Ca_L_d_gate__d = rY[7];
        // Units: dimensionless; Initial value: 2.322223865147363e-06
        double var_chaste_interface__i_Ca_L_f_gate__f = rY[8];
        // Units: dimensionless; Initial value: 0.9985607329462358
        double var_chaste_interface__i_Ca_L_f2_gate__f2 = rY[9];
        // Units: dimensionless; Initial value: 0.8173435436674658
        double var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca = rY[10];
        // Units: dimensionless; Initial value: 0.9610551285529658
        double var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 = rY[11];
        // Units: dimensionless; Initial value: 0.868690796671854
        double var_chaste_interface__i_to_1_a_gate__a = rY[14];
        // Units: dimensionless; Initial value: 0.0004238729429342389
        double var_chaste_interface__i_to_1_i_gate__i = rY[15];
        // Units: dimensionless; Initial value: 0.9990935802459496
        double var_chaste_interface__i_to_1_i2_gate__i2 = rY[16];
        // Units: dimensionless; Initial value: 0.9777368439681764
        double var_chaste_interface__i_Kr_xr_gate__xr = rY[17];
        // Units: dimensionless; Initial value: 0.07084939408222911
        double var_chaste_interface__i_Ks_xs1_gate__xs1 = rY[18];
        // Units: dimensionless; Initial value: 0.0011737654433043125
        double var_chaste_interface__i_Ks_xs2_gate__xs2 = rY[19];
        // Units: dimensionless; Initial value: 0.001179442867470093
        double var_chaste_interface__intracellular_ion_concentrations__Na_i = rY[21];
        // Units: millimolar; Initial value: 9.927155552932733
        double var_chaste_interface__intracellular_ion_concentrations__K_i = rY[23];
        // Units: millimolar; Initial value: 141.9670801746057
        double var_chaste_interface__Ca_MK_act__Ca_MK_trap = rY[24];
        // Units: dimensionless; Initial value: 8.789168284782809e-06
        double var_chaste_interface__Ca_JSR__Ca_JSR = rY[26];
        // Units: millimolar; Initial value: 1.1433050636518596
        double var_chaste_interface__Ca_r__Ca_r = rY[27];
        // Units: millimolar; Initial value: 0.00022418117117903934
        double var_chaste_interface__q_rel_ri_gate__ri = rY[28];
        // Units: dimensionless; Initial value: 0.7802870066567904
        double var_chaste_interface__q_rel_ro_gate__ro = rY[29];
        // Units: dimensionless; Initial value: 1.2785734760674763e-09
        
        // Lookup table indexing
        const bool _oob_0 = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__V);

        // Mathematics
        const double var_Ca_MK_act__Ca_MK_0 = 0.050000000000000003; // dimensionless
        const double var_Ca_MK_act__km_Ca_MK = 0.14999999999999999; // millimolar
        const double var_Ca_MK_act__Ca_MK_bound = (1.0 - var_chaste_interface__Ca_MK_act__Ca_MK_trap) * var_Ca_MK_act__Ca_MK_0 / (1.0 + var_Ca_MK_act__km_Ca_MK / var_chaste_interface__Ca_r__Ca_r); // dimensionless
        const double var_Ca_MK_act__Ca_MK_act = var_Ca_MK_act__Ca_MK_bound + var_chaste_interface__Ca_MK_act__Ca_MK_trap; // dimensionless
        const double var_equilibrium_potentials__r_NaK = 0.018329999999999999; // dimensionless
        const double var_i_Ca_L_f_Ca_gate__tau_f_Ca = 0.5 + 1 / (1.0 + 333.33333333333331 * var_chaste_interface__Ca_r__Ca_r) + 10.0 * var_Ca_MK_act__Ca_MK_act / (var_Ca_MK_act__Ca_MK_act + var_Ca_MK_act__km_Ca_MK); // millisecond
        const double var_i_Ks__g_Ks = (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__Ca_i__Ca_i), 1.3999999999999999))) * mParameters[13]; // milliS_per_microF
        const double var_i_NaCa__X_NaCa = 0.40000000000000002; // dimensionless
        const double var_i_NaCa__k_sat = 0.27000000000000002; // dimensionless
        const double var_i_NaCa__km_Ca_act = 0.000125; // millimolar
        const double var_i_NaCa__km_Ca_i = 0.0035999999999999999; // millimolar
        const double var_i_NaCa__km_Ca_o = 1.3; // millimolar
        const double var_i_NaCa__km_Na_i_1 = 12.300000000000001; // millimolar
        const double var_i_NaCa__km_Na_o = 87.5; // millimolar
        const double var_i_Ca_L_f2_gate__tau_f2 = 38.0 + 24.217200000000005 * pow((-1 + 0.053763440860215048 * var_chaste_interface__membrane__V), 2); // millisecond
        const double var_i_Ca_L_f_gate__tau_f = 4.0 + 0.03125 * pow((-1 + 0.40000000000000002 * var_chaste_interface__membrane__V), 2); // millisecond
        const double var_i_Kr__rr_infinity = 1 / (_lt_0_row[8]); // dimensionless
        const double var_i_Na_h_gate__alpha_h = ((var_chaste_interface__membrane__V < -40.0) ? (0.13500000000000001 * exp(-11.764705882352942 + 0.14705882352941177 * mParameters[10] - 0.14705882352941177 * var_chaste_interface__membrane__V)) : (0)); // per_millisecond
        const double var_i_Na_h_gate__beta_h = ((var_chaste_interface__membrane__V < -40.0) ? (310000.0 * exp(0.34999999999999998 * var_chaste_interface__membrane__V - 0.34999999999999998 * mParameters[10]) + 3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__membrane__V - 0.079000000000000001 * mParameters[10])) : (7.6923076923076916 / (1.0 + exp(-0.96036036036036043 + 0.0900900900900901 * mParameters[10] - 0.0900900900900901 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_i_Na_h_gate__tau_h = 1 / (var_i_Na_h_gate__alpha_h + var_i_Na_h_gate__beta_h); // millisecond
        const double var_i_Na_j_gate__alpha_j = ((var_chaste_interface__membrane__V < -40.0) ? ((37.780000000000001 + var_chaste_interface__membrane__V) * (-127140.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__V - 0.24440000000000001 * mParameters[10]) - 3.4740000000000003e-5 * exp(0.043909999999999998 * mParameters[10] - 0.043909999999999998 * var_chaste_interface__membrane__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V - 0.311 * mParameters[10]))) : (0)); // per_millisecond
        const double var_i_Na_j_gate__beta_j = ((var_chaste_interface__membrane__V < -40.0) ? (0.1212 * exp(0.01052 * mParameters[10] - 0.01052 * var_chaste_interface__membrane__V) / (1.0 + exp(-5.5312920000000005 + 0.13780000000000001 * mParameters[10] - 0.13780000000000001 * var_chaste_interface__membrane__V))) : (0.29999999999999999 * exp(2.5349999999999999e-7 * mParameters[10] - 2.5349999999999999e-7 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.2000000000000002 + 0.10000000000000001 * mParameters[10] - 0.10000000000000001 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double var_i_Na_j_gate__tau_j = 1 / (var_i_Na_j_gate__alpha_j + var_i_Na_j_gate__beta_j); // millisecond
        const double var_membrane__i_stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
        const double var_i_Ca_L__i_Ca_L_max = ((fabs(-15.0 + var_chaste_interface__membrane__V) < 1.3356169352718439e-6) ? (374358.83507888648 * (-14.999998664383064 + var_chaste_interface__membrane__V) * (4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(9.9999999999770198e-8)) / (-1.0 + exp(9.9999999999770198e-8)) + 4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(-9.9999999999770198e-8)) / (-1.0 + exp(-9.9999999999770198e-8))) - 4.6891709999892238e-6 * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * exp(-9.9999999999770198e-8)) / (-1.0 + exp(-9.9999999999770198e-8))) : (3.510865186083326 * (-15.0 + var_chaste_interface__membrane__V) * (-0.34100000000000003 * mParameters[4] + var_chaste_interface__Ca_r__Ca_r * _lt_0_row[9]) / (_lt_0_row[10]))); // microA_per_microF
        const double var_i_Ca_L__i_Ca_L = mParameters[7] * var_i_Ca_L__i_Ca_L_max * var_chaste_interface__i_Ca_L_d_gate__d * var_chaste_interface__i_Ca_L_f2_gate__f2 * var_chaste_interface__i_Ca_L_f_Ca2_gate__f_Ca2 * var_chaste_interface__i_Ca_L_f_Ca_gate__f_Ca * var_chaste_interface__i_Ca_L_f_gate__f; // microA_per_microF
        const double var_i_Ca_L__i_Ca_L_converted = HeartConfig::Instance()->GetCapacitance() * var_i_Ca_L__i_Ca_L; // uA_per_cm2
        const double var_i_Ca_L_f_Ca2_gate__tau_f_Ca2 = 125.0 + 300.0 / (1.0 + exp(-4.375 - 25.0 * var_i_Ca_L__i_Ca_L)); // millisecond
        const double var_i_NaCa__dNaCa_1 = pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * var_i_NaCa__km_Ca_o + 1.5 * pow(var_i_NaCa__km_Na_o, 3) * var_chaste_interface__Ca_i__Ca_i + pow(var_i_NaCa__km_Na_i_1, 3) * (1.0 + 1.5 * var_chaste_interface__Ca_i__Ca_i / var_i_NaCa__km_Ca_i) * mParameters[4]; // millimolar4
        const double var_model_parameters__F = 96485.0; // coulomb_per_mole
        const double var_i_K1__g_K1 = 0.43033148291193518 * sqrt(mParameters[5]) * mParameters[11]; // milliS_per_microF
        const double var_i_Kr__g_Kr = 0.43033148291193518 * sqrt(mParameters[5]) * mParameters[12]; // milliS_per_microF
        const double var_i_NaCa__dNaCa_2 = pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * mParameters[4] + 1.5 * pow(mParameters[6], 3) * var_chaste_interface__Ca_i__Ca_i + pow(mParameters[6], 3) * (1.0 + var_chaste_interface__intracellular_ion_concentrations__Na_i / var_i_NaCa__km_Na_i_1) * var_i_NaCa__km_Ca_i; // millimolar4
        const double var_model_parameters__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_model_parameters__T = 310.0; // kelvin
        const double var_equilibrium_potentials__E_K = var_model_parameters__R * var_model_parameters__T * log(mParameters[5] / var_chaste_interface__intracellular_ion_concentrations__K_i) / var_model_parameters__F; // millivolt
        const double var_equilibrium_potentials__E_Ks = var_model_parameters__R * var_model_parameters__T * log((var_equilibrium_potentials__r_NaK * mParameters[6] + mParameters[5]) / (var_equilibrium_potentials__r_NaK * var_chaste_interface__intracellular_ion_concentrations__Na_i + var_chaste_interface__intracellular_ion_concentrations__K_i)) / var_model_parameters__F; // millivolt
        const double var_equilibrium_potentials__E_Na = var_model_parameters__R * var_model_parameters__T * log(mParameters[6] / var_chaste_interface__intracellular_ion_concentrations__Na_i) / var_model_parameters__F; // millivolt
        const double var_i_K1_xK1_gate__alpha_xK1 = 1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_equilibrium_potentials__E_K)); // dimensionless
        const double var_i_K1_xK1_gate__beta_xK1 = (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_equilibrium_potentials__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_equilibrium_potentials__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_equilibrium_potentials__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_i_K1_xK1_gate__xK1 = var_i_K1_xK1_gate__alpha_xK1 / (var_i_K1_xK1_gate__alpha_xK1 + var_i_K1_xK1_gate__beta_xK1); // dimensionless
        const double var_i_K1__i_K1 = (0.0040000000000000001 + var_i_K1__g_K1 * var_i_K1_xK1_gate__xK1) * (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V); // microA_per_microF
        const double var_i_K1__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_i_K1__i_K1; // uA_per_cm2
        const double var_i_Kr__i_Kr = (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * var_i_Kr__g_Kr * var_i_Kr__rr_infinity * var_chaste_interface__i_Kr_xr_gate__xr; // microA_per_microF
        const double var_i_Kr__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_i_Kr__i_Kr; // uA_per_cm2
        const double var_i_Ks__i_Ks = (-var_equilibrium_potentials__E_Ks + var_chaste_interface__membrane__V) * var_i_Ks__g_Ks * var_chaste_interface__i_Ks_xs1_gate__xs1 * var_chaste_interface__i_Ks_xs2_gate__xs2; // microA_per_microF
        const double var_i_Ks__i_Ks_converted = HeartConfig::Instance()->GetCapacitance() * var_i_Ks__i_Ks; // uA_per_cm2
        const double var_i_Na__i_Na = pow(var_chaste_interface__i_Na_m_gate__m, 3) * (-var_equilibrium_potentials__E_Na + var_chaste_interface__membrane__V) * (0.20000000000000001 * var_chaste_interface__i_Na_j_gate__j + 0.80000000000000004 * var_chaste_interface__i_Na_h_gate__h) * mParameters[8]; // microA_per_microF
        const double var_i_Na__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_i_Na__i_Na; // uA_per_cm2
        const double var_i_NaCa__i_NaCa = (-1.5 * pow(mParameters[6], 3) * var_chaste_interface__Ca_i__Ca_i * exp(-0.65000000000000002 * var_chaste_interface__membrane__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T)) + pow(var_chaste_interface__intracellular_ion_concentrations__Na_i, 3) * var_i_NaCa__X_NaCa * mParameters[14] * mParameters[4] * exp(0.34999999999999998 * var_chaste_interface__membrane__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))) / ((1.0 + var_i_NaCa__k_sat * exp(-0.65000000000000002 * var_chaste_interface__membrane__V * var_model_parameters__F / (var_model_parameters__R * var_model_parameters__T))) * (1.0 + 0.44444444444444442 * pow(var_i_NaCa__km_Ca_act, 2) / pow(var_chaste_interface__Ca_i__Ca_i, 2)) * (var_i_NaCa__dNaCa_1 + var_i_NaCa__dNaCa_2)); // microA_per_microF
        const double var_i_NaCa__i_NaCa_converted = HeartConfig::Instance()->GetCapacitance() * var_i_NaCa__i_NaCa; // uA_per_cm2
        const double var_i_to_1__i_to_1 = (-var_equilibrium_potentials__E_K + var_chaste_interface__membrane__V) * (0.20000000000000001 * var_chaste_interface__i_to_1_i2_gate__i2 + 0.80000000000000004 * var_chaste_interface__i_to_1_i_gate__i) * mParameters[15] * var_chaste_interface__i_to_1_a_gate__a; // microA_per_microF
        const double var_i_to_1__i_to_1_converted = HeartConfig::Instance()->GetCapacitance() * var_i_to_1__i_to_1; // uA_per_cm2
        const double var_q_rel__vg = 1 / (1.0 + exp(2.6000000000000001 + 0.20000000000000001 * mParameters[7] * var_i_Ca_L__i_Ca_L_max)); // dimensionless
        const double var_q_rel__g_rel = mParameters[1] * var_q_rel__vg; // per_millisecond
        const double var_q_rel__q_rel = (-var_chaste_interface__Ca_r__Ca_r + var_chaste_interface__Ca_JSR__Ca_JSR) * var_q_rel__g_rel * var_chaste_interface__q_rel_ri_gate__ri * var_chaste_interface__q_rel_ro_gate__ro; // millimolar_per_millisecond

        std::vector<double> dqs(16);
        dqs[0] = var_q_rel__q_rel;
        dqs[1] = var_i_Ca_L__i_Ca_L_converted;
        dqs[2] = var_i_Ca_L_f2_gate__tau_f2;
        dqs[3] = var_i_Ca_L_f_Ca2_gate__tau_f_Ca2;
        dqs[4] = var_i_Ca_L_f_Ca_gate__tau_f_Ca;
        dqs[5] = var_i_Ca_L_f_gate__tau_f;
        dqs[6] = var_i_Na__i_Na_converted;
        dqs[7] = var_i_Na_h_gate__tau_h;
        dqs[8] = var_i_Na_j_gate__tau_j;
        dqs[9] = var_i_K1__i_K1_converted;
        dqs[10] = var_i_Kr__i_Kr_converted;
        dqs[11] = var_i_Ks__i_Ks_converted;
        dqs[12] = var_i_NaCa__i_NaCa_converted;
        dqs[13] = var_membrane__i_stim_converted;
        dqs[14] = var_i_to_1__i_to_1_converted;
        dqs[15] = var_chaste_interface__environment__time;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt>::Initialise(void)
{
    this->mSystemName = "aslanidi_2009";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-83.43812846286808);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.00022355433459434943);

    // rY[2]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.002003390432234504);

    // rY[3]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9786390933308567);

    // rY[4]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.09866447258167589);

    // rY[5]:
    this->mVariableNames.push_back("i_Na_L_m_L_gate__m_L");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.002003390432234504);

    // rY[6]:
    this->mVariableNames.push_back("i_Na_L_h_L_gate__h_L");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.8946968372659203);

    // rY[7]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.322223865147363e-06);

    // rY[8]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9985607329462358);

    // rY[9]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f2_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.8173435436674658);

    // rY[10]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_fCa_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9610551285529658);

    // rY[11]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_fCa2_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.868690796671854);

    // rY[12]:
    this->mVariableNames.push_back("i_Ca_T_b_gate__b");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0002563937630984438);

    // rY[13]:
    this->mVariableNames.push_back("i_Ca_T_g_gate__g");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9720432601848331);

    // rY[14]:
    this->mVariableNames.push_back("i_to_1_a_gate__a");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0004238729429342389);

    // rY[15]:
    this->mVariableNames.push_back("i_to_1_i_gate__i");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9990935802459496);

    // rY[16]:
    this->mVariableNames.push_back("i_to_1_i2_gate__i2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9777368439681764);

    // rY[17]:
    this->mVariableNames.push_back("i_Kr_xr_gate__xr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.07084939408222911);

    // rY[18]:
    this->mVariableNames.push_back("i_Ks_xs1_gate__xs1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0011737654433043125);

    // rY[19]:
    this->mVariableNames.push_back("i_Ks_xs2_gate__xs2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.001179442867470093);

    // rY[20]:
    this->mVariableNames.push_back("i_to_2_a_gate__a");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0014909437525000811);

    // rY[21]:
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(9.927155552932733);

    // rY[22]:
    this->mVariableNames.push_back("intracellular_ion_concentrations__Cl_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(18.904682470140408);

    // rY[23]:
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(141.9670801746057);

    // rY[24]:
    this->mVariableNames.push_back("Ca_MK_act__Ca_MK_trap");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.789168284782809e-06);

    // rY[25]:
    this->mVariableNames.push_back("Ca_NSR__Ca_NSR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.2132524695849454);

    // rY[26]:
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.1433050636518596);

    // rY[27]:
    this->mVariableNames.push_back("dyadic_space_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.00022418117117903934);

    // rY[28]:
    this->mVariableNames.push_back("q_rel_ri_gate__ri");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7802870066567904);

    // rY[29]:
    this->mVariableNames.push_back("q_rel_ro_gate__ro");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.2785734760674763e-09);

    // mParameters[0]:
    this->mParameterNames.push_back("SR_leak_current_max");
    this->mParameterUnits.push_back("millimolar_per_millisecond");

    // mParameters[1]:
    this->mParameterNames.push_back("SR_release_current_max");
    this->mParameterUnits.push_back("per_millisecond");

    // mParameters[2]:
    this->mParameterNames.push_back("SR_uptake_current_max");
    this->mParameterUnits.push_back("millimolar_per_millisecond");

    // mParameters[3]:
    this->mParameterNames.push_back("concentration_clamp_onoff");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[4]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[5]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[6]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_reduced_inactivation");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_shift_inactivation");
    this->mParameterUnits.push_back("millivolt");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[12]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[13]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[14]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("microA_per_microF");

    // mParameters[15]:
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("SR_release_current");
    this->mDerivedQuantityUnits.push_back("millimolar_per_millisecond");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current_f2_gate_tau");
    this->mDerivedQuantityUnits.push_back("millisecond");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current_fCa2_gate_tau");
    this->mDerivedQuantityUnits.push_back("millisecond");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current_fCa_gate_tau");
    this->mDerivedQuantityUnits.push_back("millisecond");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current_f_gate_tau");
    this->mDerivedQuantityUnits.push_back("millisecond");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_h_gate_tau");
    this->mDerivedQuantityUnits.push_back("millisecond");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_j_gate_tau");
    this->mDerivedQuantityUnits.push_back("millisecond");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [10]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [11]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [12]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [13]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [14]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [15]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellaslanidi_Purkinje_model_2009FromCellMLGRL1Opt)

