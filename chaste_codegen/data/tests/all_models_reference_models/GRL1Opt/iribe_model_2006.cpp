//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: iribe_model_2006
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: GeneralizedRushLarsenFirstOrderOpt)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "iribe_model_2006.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class Celliribe_model_2006FromCellMLGRL1Opt_LookupTables : public AbstractLookupTableCollection
{
public:
    static Celliribe_model_2006FromCellMLGRL1Opt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new Celliribe_model_2006FromCellMLGRL1Opt_LookupTables);
        }
        return mpInstance.get();
    }

    void FreeMemory()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }

    // Row lookup methods
    // using linear-interpolation

    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<21; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }


    const double * IndexTable0(double var_chaste_interface__membrane_potential__V)
    {
        const double _offset_0 = var_chaste_interface__membrane_potential__V - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }


// LCOV_EXCL_START
    bool CheckIndex0(double& var_chaste_interface__membrane_potential__V)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__membrane_potential__V>mTableMaxs[0] || var_chaste_interface__membrane_potential__V<mTableMins[0])
        {
// LCOV_EXCL_START
            _oob_0 = true;
// LCOV_EXCL_STOP
        }
        return _oob_0;
    }
// LCOV_EXCL_STOP

    ~Celliribe_model_2006FromCellMLGRL1Opt_LookupTables()
    {

        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }

    }

protected:
    Celliribe_model_2006FromCellMLGRL1Opt_LookupTables(const Celliribe_model_2006FromCellMLGRL1Opt_LookupTables&);
    Celliribe_model_2006FromCellMLGRL1Opt_LookupTables& operator= (const Celliribe_model_2006FromCellMLGRL1Opt_LookupTables&);
    Celliribe_model_2006FromCellMLGRL1Opt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);

        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 21;
        mTableMins[0] = -250.0;
        mTableMaxs[0] = 550.0;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;

        Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::RegenerateTables();
    }

    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);


        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][21];

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V) {
                    return exp(1.8716945411372736 - 0.037433890822745473 * var_chaste_interface__membrane_potential__V);
                };
                const double var_chaste_interface__membrane_potential__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[0] < 2){
                    double left = f(var_chaste_interface__membrane_potential__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane_potential__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[0] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[0] >= 2){
                    EXCEPTION("Lookup table 0 at ["<<i<<"][0] has non-finite value: " << val);
                }
                _lookup_table_0[i][0] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V) {
                    return 1.0 - exp(1.8716945411372736 - 0.037433890822745473 * var_chaste_interface__membrane_potential__V);
                };
                const double var_chaste_interface__membrane_potential__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[1] < 2){
                    double left = f(var_chaste_interface__membrane_potential__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane_potential__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[1] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[1] >= 2){
                    EXCEPTION("Lookup table 1 at ["<<i<<"][1] has non-finite value: " << val);
                }
                _lookup_table_0[i][1] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V) {
                    return exp(3.7433890822745473 - 0.074867781645490947 * var_chaste_interface__membrane_potential__V);
                };
                const double var_chaste_interface__membrane_potential__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[2] < 2){
                    double left = f(var_chaste_interface__membrane_potential__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane_potential__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[2] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[2] >= 2){
                    EXCEPTION("Lookup table 2 at ["<<i<<"][2] has non-finite value: " << val);
                }
                _lookup_table_0[i][2] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V) {
                    return 1.0 - exp(3.7433890822745473 - 0.074867781645490947 * var_chaste_interface__membrane_potential__V);
                };
                const double var_chaste_interface__membrane_potential__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[3] < 2){
                    double left = f(var_chaste_interface__membrane_potential__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane_potential__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[3] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[3] >= 2){
                    EXCEPTION("Lookup table 3 at ["<<i<<"][3] has non-finite value: " << val);
                }
                _lookup_table_0[i][3] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V) {
                    return exp(0.018716945411372737 * var_chaste_interface__membrane_potential__V);
                };
                const double var_chaste_interface__membrane_potential__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V);

                _lookup_table_0[i][4] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V) {
                    return exp(-0.018716945411372737 * var_chaste_interface__membrane_potential__V);
                };
                const double var_chaste_interface__membrane_potential__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V);

                _lookup_table_0[i][5] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V) {
                    return 1.0 + 0.035299999999999998 * exp(-0.037433890822745473 * var_chaste_interface__membrane_potential__V) + 0.1245 * exp(-0.0037433890822745472 * var_chaste_interface__membrane_potential__V);
                };
                const double var_chaste_interface__membrane_potential__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V);

                _lookup_table_0[i][6] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V) {
                    return exp(-0.037433890822745473 * var_chaste_interface__membrane_potential__V);
                };
                const double var_chaste_interface__membrane_potential__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V);

                _lookup_table_0[i][7] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V) {
                    return ((fabs(19.0 + var_chaste_interface__membrane_potential__V) < 4.0000000001150227e-7) ? (3.6000000001035204e-5 / (1.0 - exp(-1.0000000000287557e-7)) - 1249999.9999640554 * (18.999999599999999 + var_chaste_interface__membrane_potential__V) * (-3.6000000001035204e-5 / (1.0 - exp(1.0000000000287557e-7)) - 3.6000000001035204e-5 / (1.0 - exp(-1.0000000000287557e-7)))) : (90.0 * (19.0 + var_chaste_interface__membrane_potential__V) / (1.0 - exp(-4.75 - 0.25 * var_chaste_interface__membrane_potential__V))));
                };
                const double var_chaste_interface__membrane_potential__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[8] < 2){
                    double left = f(var_chaste_interface__membrane_potential__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane_potential__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[8] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[8] >= 2){
                    EXCEPTION("Lookup table 8 at ["<<i<<"][8] has non-finite value: " << val);
                }
                _lookup_table_0[i][8] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V) {
                    return ((fabs(19.0 + var_chaste_interface__membrane_potential__V) < 9.999999999871223e-7) ? (3.5999999999036802e-5 / (1.0 - exp(-9.9999999997324457e-8)) + 500000.00000643887 * (19.000001000000001 + var_chaste_interface__membrane_potential__V) * (-3.5999999999036802e-5 / (1.0 - exp(-9.9999999997324457e-8)) - 3.6000000000036003e-5 / (1.0 - exp(1.0000000000010001e-7)))) : (-36.0 * (19.0 + var_chaste_interface__membrane_potential__V) / (1.0 - exp(1.8999999999999999 + 0.10000000000000001 * var_chaste_interface__membrane_potential__V))));
                };
                const double var_chaste_interface__membrane_potential__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[9] < 2){
                    double left = f(var_chaste_interface__membrane_potential__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane_potential__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[9] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[9] >= 2){
                    EXCEPTION("Lookup table 9 at ["<<i<<"][9] has non-finite value: " << val);
                }
                _lookup_table_0[i][9] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V) {
                    return ((fabs(34.0 + var_chaste_interface__membrane_potential__V) < 4.0000000001150227e-7) ? (-1.2500000000359446e-6 / (-1.0 + exp(-1.0000000000287557e-7)) + 1249999.9999640554 * (34.000000399999998 + var_chaste_interface__membrane_potential__V) * (1.2500000000359446e-6 / (-1.0 + exp(1.0000000000287557e-7)) + 1.2500000000359446e-6 / (-1.0 + exp(-1.0000000000287557e-7)))) : (3.125 * (34.0 + var_chaste_interface__membrane_potential__V) / (-1.0 + exp(8.5 + 0.25 * var_chaste_interface__membrane_potential__V))));
                };
                const double var_chaste_interface__membrane_potential__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[10] < 2){
                    double left = f(var_chaste_interface__membrane_potential__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane_potential__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[10] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[10] >= 2){
                    EXCEPTION("Lookup table 10 at ["<<i<<"][10] has non-finite value: " << val);
                }
                _lookup_table_0[i][10] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V) {
                    return 1.0 + exp(-8.5 - 0.25 * var_chaste_interface__membrane_potential__V);
                };
                const double var_chaste_interface__membrane_potential__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V);

                _lookup_table_0[i][11] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V) {
                    return ((fabs(41.0 + var_chaste_interface__membrane_potential__V) < 1.0000000000287557e-6) ? (0.00020000000000575113 / (1.0 - exp(-1.0000000000287557e-7)) - 499999.99998562218 * (40.999999000000003 + var_chaste_interface__membrane_potential__V) * (-0.00020000000000575113 / (1.0 - exp(1.0000000000287557e-7)) - 0.00020000000000575113 / (1.0 - exp(-1.0000000000287557e-7)))) : (200.0 * (41.0 + var_chaste_interface__membrane_potential__V) / (1.0 - exp(-4.1000000000000005 - 0.10000000000000001 * var_chaste_interface__membrane_potential__V))));
                };
                const double var_chaste_interface__membrane_potential__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V);
                //Expressions which are part of a piecewise could be inf / nan, this is generally accptable, due to the piecewise, however occasionally interpolation of the lookup table from a nan/inf version can give problems.
                //To avoid this values stored in the table are intrpolated. Occurances of this to at most 2 per expression.
                if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[12] < 2){
                    double left = f(var_chaste_interface__membrane_potential__V - mTableSteps[0]);
                    double right = f(var_chaste_interface__membrane_potential__V + mTableSteps[0]);
                    val = (left + right) / 2.0;
                   // count and limit number of misshits
                  _lookup_table_0_num_misshit_piecewise[12] +=1;
                }
                else if (!std::isfinite(val) && _lookup_table_0_num_misshit_piecewise[12] >= 2){
                    EXCEPTION("Lookup table 12 at ["<<i<<"][12] has non-finite value: " << val);
                }
                _lookup_table_0[i][12] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V) {
                    return exp(-3.6960000000000002 - 0.056000000000000001 * var_chaste_interface__membrane_potential__V);
                };
                const double var_chaste_interface__membrane_potential__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V);

                _lookup_table_0[i][13] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V) {
                    return 1.0 + exp(2.8500000000000001 + 0.057000000000000002 * var_chaste_interface__membrane_potential__V);
                };
                const double var_chaste_interface__membrane_potential__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V);

                _lookup_table_0[i][14] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V) {
                    return exp(4.1300000000000008 + 0.082600000000000007 * var_chaste_interface__membrane_potential__V);
                };
                const double var_chaste_interface__membrane_potential__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V);

                _lookup_table_0[i][15] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V) {
                    return 1.0 + exp(-0.80000000000000004 - 0.040000000000000001 * var_chaste_interface__membrane_potential__V);
                };
                const double var_chaste_interface__membrane_potential__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V);

                _lookup_table_0[i][16] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V) {
                    return exp(-1.2 - 0.059999999999999998 * var_chaste_interface__membrane_potential__V);
                };
                const double var_chaste_interface__membrane_potential__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V);

                _lookup_table_0[i][17] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V) {
                    return 0.33300000000000002 / (1.0 + exp(-0.80000000000000004 - 0.20000000000000001 * var_chaste_interface__membrane_potential__V));
                };
                const double var_chaste_interface__membrane_potential__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V);

                _lookup_table_0[i][18] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V) {
                    return exp(-0.058823529411764705 * var_chaste_interface__membrane_potential__V);
                };
                const double var_chaste_interface__membrane_potential__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V);

                _lookup_table_0[i][19] = val;
            }

            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                auto f = [](double var_chaste_interface__membrane_potential__V) {
                    return 1.0 + exp(-1.25 - 0.125 * var_chaste_interface__membrane_potential__V);
                };
                const double var_chaste_interface__membrane_potential__V = mTableMins[0] + i*mTableSteps[0];
                double val = f(var_chaste_interface__membrane_potential__V);

                _lookup_table_0[i][20] = val;
            }

            mNeedsRegeneration[0] = false;
        }

        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }

private:
    /** The single instance of the class */
    static std::shared_ptr<Celliribe_model_2006FromCellMLGRL1Opt_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[21];

    // Lookup tables
    double (*_lookup_table_0)[21];
    int _lookup_table_0_num_misshit_piecewise[21] = {0};

};

std::shared_ptr<Celliribe_model_2006FromCellMLGRL1Opt_LookupTables> Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::mpInstance;


    boost::shared_ptr<RegularStimulus> Celliribe_model_2006FromCellMLGRL1Opt::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane_potential__stim_amplitude_converted = -0.0040000000000000001 * HeartConfig::Instance()->GetCapacitance() / mParameters[8]; // uA_per_cm2
        const double var_chaste_interface__membrane_potential__stim_duration_converted = 2.0; // millisecond
        const double var_chaste_interface__membrane_potential__stim_period_converted = 500.0; // millisecond
        const double var_chaste_interface__membrane_potential__stim_start_converted = 100.0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane_potential__stim_amplitude_converted),
                var_chaste_interface__membrane_potential__stim_duration_converted,
                var_chaste_interface__membrane_potential__stim_period_converted,
                var_chaste_interface__membrane_potential__stim_start_converted
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    double Celliribe_model_2006FromCellMLGRL1Opt::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    Celliribe_model_2006FromCellMLGRL1Opt::Celliribe_model_2006FromCellMLGRL1Opt(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractGeneralizedRushLarsenCardiacCell(
                23,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Celliribe_model_2006FromCellMLGRL1Opt>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        
        this->mParameters[0] = 0; // (var_RyR__K_leak_rate) [per_second]
        this->mParameters[1] = 500.0; // (var_RyR__K_rel_max) [per_second]
        this->mParameters[2] = 1.0; // (var_SERCA__uptake_factor) [dimensionless]
        this->mParameters[3] = 1.0; // (var_intracellular_sodium_concentration__conc_clamp) [dimensionless]
        this->mParameters[4] = 2.0; // (var_cell_parameters__Ca_o) [millimolar]
        this->mParameters[5] = 4.0; // (var_cell_parameters__K_o) [millimolar]
        this->mParameters[6] = 140.0; // (var_cell_parameters__Na_o) [millimolar]
        this->mParameters[7] = 0.25; // (var_L_type_Ca_channel__P_Ca_L_Ca) [nanoA_per_millimolar]
        this->mParameters[8] = 9.5000000000000005e-5; // (var_cell_parameters__Cm) [microF]
        this->mParameters[9] = 1.0; // (var_time_dependent_rectifier_potassium_current__i_Kmax) [nanoA]
        this->mParameters[10] = 2.5; // (var_fast_sodium_current__g_Na) [microS]
        this->mParameters[11] = 0; // (var_fast_sodium_current__perc_reduced_inact_for_IpNa) [dimensionless]
        this->mParameters[12] = 0; // (var_fast_sodium_current__shift_INa_inact) [millivolt]
        this->mParameters[13] = 1.0; // (var_time_independent_potassium_current__g_K1) [microS]
        this->mParameters[14] = 0.00050000000000000001; // (var_sodium_calcium_exchanger__i_NaCa_max) [nanoA_per_millimolar4]
        this->mParameters[15] = 0.0050000000000000001; // (var_transient_outward_current__g_to) [microS]
    }

    Celliribe_model_2006FromCellMLGRL1Opt::~Celliribe_model_2006FromCellMLGRL1Opt()
    {
    }

    AbstractLookupTableCollection* Celliribe_model_2006FromCellMLGRL1Opt::GetLookupTableCollection()
    {
        return Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance();
    }
    
    double Celliribe_model_2006FromCellMLGRL1Opt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
        // Units: millimolar; Initial value: 9.91e-06
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.0013809
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.99569
        double var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__x = rY[4];
        // Units: dimensionless; Initial value: 0.051127
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[5];
        // Units: dimensionless; Initial value: 0.95854
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[6];
        // Units: dimensionless; Initial value: 1.5185e-08
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[7];
        // Units: dimensionless; Initial value: 1.7908e-08
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[8];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[16];
        // Units: millimolar; Initial value: 5.8041
        double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[17];
        // Units: millimolar; Initial value: 138.22
        
        // Lookup table indexing
        const bool _oob_0 = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane_potential__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane_potential__V);

        const double var_L_type_Ca_channel__i_Ca_L_converted = 0.001 * (((fabs(-50.0 + var_chaste_interface__membrane_potential__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane_potential__V) * (-9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * exp(9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (0.00037433890822745472 * (-50.0 + var_chaste_interface__membrane_potential__V) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * _lt_0_row[0]) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[1]))) + ((fabs(-50.0 + var_chaste_interface__membrane_potential__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane_potential__V) * (-1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * exp(9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (7.4867781645490941e-5 * (-50.0 + var_chaste_interface__membrane_potential__V) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * _lt_0_row[0]) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[1]))) + ((fabs(-50.0 + var_chaste_interface__membrane_potential__V) < 1.3356880329551402e-6) ? (-374338.90823576227 * (-50.000001335688033 + var_chaste_interface__membrane_potential__V) * (-1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * exp(9.9999999997780743e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999997780743e-8)) - 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * exp(-9.9999999997780743e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) + 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * exp(-9.9999999997780743e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) : (0.14973556329098189 * (-50.0 + var_chaste_interface__membrane_potential__V) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * _lt_0_row[2]) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3])))) * HeartConfig::Instance()->GetCapacitance() / mParameters[8]; // uA_per_cm2
        const double var_calcium_background_current__i_b_Ca = 0.00025000000000000001 * var_chaste_interface__membrane_potential__V - 0.0033392200824619565 * log(mParameters[4] / var_chaste_interface__intracellular_calcium_concentration__Ca_i); // nanoA
        const double var_reversal_potentials__E_K = 26.713760659695652 * log(mParameters[5] / var_chaste_interface__intracellular_potassium_concentration__K_i); // millivolt
        const double var_potassium_background_current__i_b_K = 0.00059999999999999995 * var_chaste_interface__membrane_potential__V - 0.00059999999999999995 * var_reversal_potentials__E_K; // nanoA
        const double var_fast_sodium_current__i_Na_converted = 0.001 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-26.713760659695652 * log((mParameters[6] + 0.12 * mParameters[5]) / (var_chaste_interface__intracellular_sodium_concentration__Na_i + 0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i)) + var_chaste_interface__membrane_potential__V) * HeartConfig::Instance()->GetCapacitance() * mParameters[10] * var_chaste_interface__fast_sodium_current_h_gate__h / mParameters[8]; // uA_per_cm2
        const double var_sodium_background_current__i_b_Na = 0.00059999999999999995 * var_chaste_interface__membrane_potential__V - 0.016028256395817387 * log(mParameters[6] / var_chaste_interface__intracellular_sodium_concentration__Na_i); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa_converted = 0.001 * (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3) * mParameters[4] * _lt_0_row[4] - pow(mParameters[6], 3) * var_chaste_interface__intracellular_calcium_concentration__Ca_i * _lt_0_row[5]) * HeartConfig::Instance()->GetCapacitance() * mParameters[14] / ((1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i) * mParameters[8]); // uA_per_cm2
        const double var_sodium_potassium_pump__i_NaK = 1.3600000000000001 * mParameters[5] * var_chaste_interface__intracellular_sodium_concentration__Na_i / ((1.0 + mParameters[5]) * (21.699999999999999 + var_chaste_interface__intracellular_sodium_concentration__Na_i) * (_lt_0_row[6])); // nanoA
        const double var_time_dependent_rectifier_potassium_current__i_K_converted = 7.1428571428571427e-6 * (-mParameters[5] * _lt_0_row[7] + var_chaste_interface__intracellular_potassium_concentration__K_i) * HeartConfig::Instance()->GetCapacitance() * mParameters[9] * var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__x / mParameters[8]; // uA_per_cm2
        const double var_time_independent_potassium_current__i_K1_converted = 0.001 * (-var_reversal_potentials__E_K + var_chaste_interface__membrane_potential__V) * HeartConfig::Instance()->GetCapacitance() * mParameters[5] * mParameters[13] / ((1.0 + exp(-0.74867781645490938 + 0.074867781645490947 * var_chaste_interface__membrane_potential__V - 0.074867781645490947 * var_reversal_potentials__E_K)) * (10.0 + mParameters[5]) * mParameters[8]); // uA_per_cm2
        const double var_transient_outward_current__i_to_converted = 0.001 * (-var_reversal_potentials__E_K + var_chaste_interface__membrane_potential__V) * HeartConfig::Instance()->GetCapacitance() * mParameters[15] * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s / mParameters[8]; // uA_per_cm2
        const double var_chaste_interface__i_ionic = ((var_L_type_Ca_channel__i_Ca_L_converted + var_fast_sodium_current__i_Na_converted + var_sodium_calcium_exchanger__i_NaCa_converted + var_time_dependent_rectifier_potassium_current__i_K_converted + var_time_independent_potassium_current__i_K1_converted + var_transient_outward_current__i_to_converted) * mParameters[8] + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_calcium_background_current__i_b_Ca + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_potassium_background_current__i_b_K + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_sodium_background_current__i_b_Na + 0.001 * HeartConfig::Instance()->GetCapacitance() * var_sodium_potassium_pump__i_NaK) / mParameters[8]; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Celliribe_model_2006FromCellMLGRL1Opt::UpdateTransmembranePotential(double var_chaste_interface__environment__time_converted)
    {
        std::vector<double>& rY = rGetStateVariables();
        unsigned v_index = GetVoltageIndex();
        const double delta = 1e-8;

        double d_dt_chaste_interface_var_membrane_potential__V;
        double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
        // Units: millimolar; Initial value: 9.91e-06
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.0013809
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.99569
        double var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__x = rY[4];
        // Units: dimensionless; Initial value: 0.051127
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[5];
        // Units: dimensionless; Initial value: 0.95854
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[6];
        // Units: dimensionless; Initial value: 1.5185e-08
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[7];
        // Units: dimensionless; Initial value: 1.7908e-08
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[8];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[16];
        // Units: millimolar; Initial value: 5.8041
        double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[17];
        // Units: millimolar; Initial value: 138.22
        

        // Lookup table indexing
        const bool _oob_0 = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane_potential__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane_potential__V);

        // Mathematics
        const double var_L_type_Ca_channel__i_Ca_L_Ca = ((fabs(-50.0 + var_chaste_interface__membrane_potential__V) < 1.3356880329551402e-6) ? (-374338.90823576227 * (-50.000001335688033 + var_chaste_interface__membrane_potential__V) * (-1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * exp(9.9999999997780743e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999997780743e-8)) - 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * exp(-9.9999999997780743e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) + 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * exp(-9.9999999997780743e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) : (0.14973556329098189 * (-50.0 + var_chaste_interface__membrane_potential__V) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * _lt_0_row[2]) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K = ((fabs(-50.0 + var_chaste_interface__membrane_potential__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane_potential__V) * (-1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * exp(9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (7.4867781645490941e-5 * (-50.0 + var_chaste_interface__membrane_potential__V) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * _lt_0_row[0]) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[1]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na = ((fabs(-50.0 + var_chaste_interface__membrane_potential__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane_potential__V) * (-9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * exp(9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (0.00037433890822745472 * (-50.0 + var_chaste_interface__membrane_potential__V) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * _lt_0_row[0]) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[1]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_Ca_L_Ca + var_L_type_Ca_channel__i_Ca_L_K + var_L_type_Ca_channel__i_Ca_L_Na; // nanoA
        const double var_calcium_background_current__i_b_Ca = 0.00025000000000000001 * var_chaste_interface__membrane_potential__V - 0.0033392200824619565 * log(mParameters[4] / var_chaste_interface__intracellular_calcium_concentration__Ca_i); // nanoA
        const double var_reversal_potentials__E_K = 26.713760659695652 * log(mParameters[5] / var_chaste_interface__intracellular_potassium_concentration__K_i); // millivolt
        const double var_potassium_background_current__i_b_K = 0.00059999999999999995 * var_chaste_interface__membrane_potential__V - 0.00059999999999999995 * var_reversal_potentials__E_K; // nanoA
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-26.713760659695652 * log((mParameters[6] + 0.12 * mParameters[5]) / (var_chaste_interface__intracellular_sodium_concentration__Na_i + 0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i)) + var_chaste_interface__membrane_potential__V) * mParameters[10] * var_chaste_interface__fast_sodium_current_h_gate__h; // nanoA
        const double var_sodium_background_current__i_b_Na = 0.00059999999999999995 * var_chaste_interface__membrane_potential__V - 0.016028256395817387 * log(mParameters[6] / var_chaste_interface__intracellular_sodium_concentration__Na_i); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa = (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3) * mParameters[4] * _lt_0_row[4] - pow(mParameters[6], 3) * var_chaste_interface__intracellular_calcium_concentration__Ca_i * _lt_0_row[5]) * mParameters[14] / (1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i); // nanoA
        const double var_sodium_potassium_pump__i_NaK = 1.3600000000000001 * mParameters[5] * var_chaste_interface__intracellular_sodium_concentration__Na_i / ((1.0 + mParameters[5]) * (21.699999999999999 + var_chaste_interface__intracellular_sodium_concentration__Na_i) * (_lt_0_row[6])); // nanoA
        const double var_time_dependent_rectifier_potassium_current__i_K = 0.0071428571428571426 * (-mParameters[5] * _lt_0_row[7] + var_chaste_interface__intracellular_potassium_concentration__K_i) * mParameters[9] * var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__x; // nanoA
        const double var_time_independent_potassium_current__i_K1 = (-var_reversal_potentials__E_K + var_chaste_interface__membrane_potential__V) * mParameters[5] * mParameters[13] / ((1.0 + exp(-0.74867781645490938 + 0.074867781645490947 * var_chaste_interface__membrane_potential__V - 0.074867781645490947 * var_reversal_potentials__E_K)) * (10.0 + mParameters[5])); // nanoA
        const double var_transient_outward_current__i_to = (-var_reversal_potentials__E_K + var_chaste_interface__membrane_potential__V) * mParameters[15] * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s; // nanoA
        d_dt_chaste_interface_var_membrane_potential__V = -0.001 * (1000.0 * GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted) * mParameters[8] / HeartConfig::Instance()->GetCapacitance() + var_L_type_Ca_channel__i_Ca_L + var_calcium_background_current__i_b_Ca + var_fast_sodium_current__i_Na + var_potassium_background_current__i_b_K + var_sodium_background_current__i_b_Na + var_sodium_calcium_exchanger__i_NaCa + var_sodium_potassium_pump__i_NaK + var_time_dependent_rectifier_potassium_current__i_K + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) / mParameters[8]; // millivolt / millisecond

        double evalF = d_dt_chaste_interface_var_membrane_potential__V;
        mEvalF[0] = d_dt_chaste_interface_var_membrane_potential__V;
        double partialF = EvaluatePartialDerivative0(var_chaste_interface__environment__time_converted, rY, delta, true);
        if (fabs(partialF) < delta)
        {
            rY[v_index] += evalF*mDt;
        }
        else
        {
            rY[v_index] += (evalF/partialF)*(exp(partialF*mDt)-1.0);
        }
    }

    void Celliribe_model_2006FromCellMLGRL1Opt::ComputeOneStepExceptVoltage(double var_chaste_interface__environment__time_converted)
    {
        std::vector<double>& rY = rGetStateVariables();
        const double delta = 1e-8;

        double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
        // Units: millimolar; Initial value: 9.91e-06
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.0013809
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.99569
        double var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__x = rY[4];
        // Units: dimensionless; Initial value: 0.051127
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[5];
        // Units: dimensionless; Initial value: 0.95854
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[6];
        // Units: dimensionless; Initial value: 1.5185e-08
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[7];
        // Units: dimensionless; Initial value: 1.7908e-08
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[8];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__CaMKII_factor__F_CaMK = rY[9];
        // Units: dimensionless; Initial value: 1.028
        double var_chaste_interface__RyR__F_SRCa_RyR = rY[10];
        // Units: millimolar; Initial value: 0.25089
        double var_chaste_interface__RyR__F_1 = rY[11];
        // Units: dimensionless; Initial value: 0.5268
        double var_chaste_interface__RyR__F_2 = rY[12];
        // Units: dimensionless; Initial value: 8.7508e-06
        double var_chaste_interface__calmodulin__Cmdn_Ca = rY[13];
        // Units: millimolar; Initial value: 3.9636e-06
        double var_chaste_interface__troponin__Trpn_Ca = rY[14];
        // Units: millimolar; Initial value: 0.00027661
        double var_chaste_interface__SR_calcium_concentration__Ca_SR = rY[15];
        // Units: millimolar; Initial value: 0.24886
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[16];
        // Units: millimolar; Initial value: 5.8041
        double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[17];
        // Units: millimolar; Initial value: 138.22
        double var_chaste_interface__Force__N_0 = rY[18];
        // Units: dimensionless; Initial value: 0.99917
        double var_chaste_interface__Force__P_0 = rY[19];
        // Units: dimensionless; Initial value: 9.8593e-05
        double var_chaste_interface__Force__P_1 = rY[20];
        // Units: dimensionless; Initial value: 0.00013331
        double var_chaste_interface__Force__P_2 = rY[21];
        // Units: dimensionless; Initial value: 0.00023505
        double var_chaste_interface__Force__P_3 = rY[22];
        // Units: dimensionless; Initial value: 0.00015349
        

        // Lookup table indexing
        const bool _oob_0 = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane_potential__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane_potential__V);

        // Mathematics
        const double var_Force__N_1 = 1.0 - var_chaste_interface__Force__N_0 - var_chaste_interface__Force__P_0 - var_chaste_interface__Force__P_1 - var_chaste_interface__Force__P_2 - var_chaste_interface__Force__P_3; // dimensionless
        const double d_dt_chaste_interface_var_Force__P_2 = 0.12214285714285715 * var_chaste_interface__Force__P_3 + 0.10000000000000001 * var_chaste_interface__Force__P_1 - 0.15142857142857144 * var_chaste_interface__Force__P_2; // 1 / millisecond
        const double d_dt_chaste_interface_var_Force__P_3 = 0.070000000000000007 * var_chaste_interface__Force__P_2 - 0.12214285714285715 * var_chaste_interface__Force__P_3; // 1 / millisecond
        const double var_Force__Force_norm = 0.60360360360360366 * var_Force__N_1 + 0.60360360360360366 * var_chaste_interface__Force__P_1 + 1.2072072072072073 * var_chaste_interface__Force__P_2 + 1.8108108108108107 * var_chaste_interface__Force__P_3; // dimensionless
        const double d_dt_chaste_interface_var_RyR__F_SRCa_RyR = 0.02 * var_chaste_interface__SR_calcium_concentration__Ca_SR - 0.02 * var_chaste_interface__RyR__F_SRCa_RyR; // millimolar / millisecond
        const double d_dt_chaste_interface_var_CaMKII_factor__F_CaMK = 24.999999999999996 * var_chaste_interface__calmodulin__Cmdn_Ca - 0.00125 * var_chaste_interface__CaMKII_factor__F_CaMK; // 1 / millisecond
        const double var_RyR__j_rel = (-var_chaste_interface__intracellular_calcium_concentration__Ca_i + var_chaste_interface__SR_calcium_concentration__Ca_SR) * (pow(var_chaste_interface__RyR__F_2, 2) * var_chaste_interface__RyR__F_SRCa_RyR * mParameters[1] / (pow((0.25 + var_chaste_interface__RyR__F_2), 2) * (0.20000000000000001 + var_chaste_interface__RyR__F_SRCa_RyR)) + mParameters[0]); // millimolar_per_second
        const double var_SERCA__j_up = (-0.14537477691850093 * pow(var_chaste_interface__SR_calcium_concentration__Ca_SR, 2) + 5069444.444444444 * pow(var_chaste_interface__intracellular_calcium_concentration__Ca_i, 2) * var_chaste_interface__CaMKII_factor__F_CaMK) * mParameters[2] / (1.0 + 17361111.111111112 * pow(var_chaste_interface__intracellular_calcium_concentration__Ca_i, 2) + 0.37180249851279007 * pow(var_chaste_interface__SR_calcium_concentration__Ca_SR, 2)); // millimolar_per_second
        const double d_dt_chaste_interface_var_SR_calcium_concentration__Ca_SR = 0.0049000806523882071 * var_SERCA__j_up - 0.001 * var_RyR__j_rel; // millimolar / millisecond
        const double d_dt_chaste_interface_var_calmodulin__Cmdn_Ca = -0.5 * var_chaste_interface__calmodulin__Cmdn_Ca + 10.0 * (0.02 - var_chaste_interface__calmodulin__Cmdn_Ca) * var_chaste_interface__intracellular_calcium_concentration__Ca_i; // millimolar / millisecond
        const double var_L_type_Ca_channel__i_Ca_L_Ca = ((fabs(-50.0 + var_chaste_interface__membrane_potential__V) < 1.3356880329551402e-6) ? (-374338.90823576227 * (-50.000001335688033 + var_chaste_interface__membrane_potential__V) * (-1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * exp(9.9999999997780743e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999997780743e-8)) - 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * exp(-9.9999999997780743e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) + 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * exp(-9.9999999997780743e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) : (0.14973556329098189 * (-50.0 + var_chaste_interface__membrane_potential__V) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * _lt_0_row[2]) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K = ((fabs(-50.0 + var_chaste_interface__membrane_potential__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane_potential__V) * (-1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * exp(9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (7.4867781645490941e-5 * (-50.0 + var_chaste_interface__membrane_potential__V) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * _lt_0_row[0]) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[1]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na = ((fabs(-50.0 + var_chaste_interface__membrane_potential__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane_potential__V) * (-9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * exp(9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (0.00037433890822745472 * (-50.0 + var_chaste_interface__membrane_potential__V) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * _lt_0_row[0]) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[1]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_Ca_L_Ca + var_L_type_Ca_channel__i_Ca_L_K + var_L_type_Ca_channel__i_Ca_L_Na; // nanoA
        const double d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d = 0.001 * (1.0 - var_chaste_interface__L_type_Ca_channel_d_gate__d) * _lt_0_row[8] - 0.001 * _lt_0_row[9] * var_chaste_interface__L_type_Ca_channel_d_gate__d; // 1 / millisecond
        const double d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f = 0.001 * (1.0 - var_chaste_interface__L_type_Ca_channel_f_gate__f) * _lt_0_row[10] - 0.025000000000000001 * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[11]); // 1 / millisecond
        const double var_RyR__k_1 = 30625000.0 * pow(var_chaste_interface__intracellular_calcium_concentration__Ca_i, 2) - 245.0 * var_L_type_Ca_channel__i_Ca_L; // per_second
        const double d_dt_chaste_interface_var_RyR__F_1 = -0.0018 * var_chaste_interface__RyR__F_1 + 0.001885 * pow((4.5454545454545459 * var_chaste_interface__RyR__F_SRCa_RyR), (2.0408163265306123 * pow(var_chaste_interface__CaMKII_factor__F_CaMK, 2))) * (1.0 - var_chaste_interface__RyR__F_1 - var_chaste_interface__RyR__F_2) - 0.001 * var_chaste_interface__RyR__F_1 * var_RyR__k_1; // 1 / millisecond
        const double d_dt_chaste_interface_var_RyR__F_2 = 0.001 * var_chaste_interface__RyR__F_1 * var_RyR__k_1 - 0.45000000000000001 * var_chaste_interface__RyR__F_2 / (1.0 + 0.35999999999999999 / var_chaste_interface__SR_calcium_concentration__Ca_SR); // 1 / millisecond
        const double var_fast_sodium_current_h_gate__alpha_h = 20.0 * exp(-9.375 + 0.125 * mParameters[12] - 0.125 * var_chaste_interface__membrane_potential__V); // per_second
        const double var_fast_sodium_current_h_gate__beta_h = 2000.0 / (1.0 + 320.0 * exp(-7.5 + 0.10000000000000001 * mParameters[12] - 0.10000000000000001 * var_chaste_interface__membrane_potential__V)); // per_second
        const double d_dt_chaste_interface_var_fast_sodium_current_h_gate__h = 0.001 * (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h) * (-var_chaste_interface__fast_sodium_current_h_gate__h + 0.01 * mParameters[11] + (1.0 - 0.01 * mParameters[11]) * var_fast_sodium_current_h_gate__alpha_h / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h)); // 1 / millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_m_gate__m = 0.001 * (1.0 - var_chaste_interface__fast_sodium_current_m_gate__m) * _lt_0_row[12] - 8.0 * var_chaste_interface__fast_sodium_current_m_gate__m * _lt_0_row[13]; // 1 / millisecond
        const double var_calcium_background_current__i_b_Ca = 0.00025000000000000001 * var_chaste_interface__membrane_potential__V - 0.0033392200824619565 * log(mParameters[4] / var_chaste_interface__intracellular_calcium_concentration__Ca_i); // nanoA
        const double var_reversal_potentials__E_K = 26.713760659695652 * log(mParameters[5] / var_chaste_interface__intracellular_potassium_concentration__K_i); // millivolt
        const double var_potassium_background_current__i_b_K = 0.00059999999999999995 * var_chaste_interface__membrane_potential__V - 0.00059999999999999995 * var_reversal_potentials__E_K; // nanoA
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-26.713760659695652 * log((mParameters[6] + 0.12 * mParameters[5]) / (var_chaste_interface__intracellular_sodium_concentration__Na_i + 0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i)) + var_chaste_interface__membrane_potential__V) * mParameters[10] * var_chaste_interface__fast_sodium_current_h_gate__h; // nanoA
        const double var_sodium_background_current__i_b_Na = 0.00059999999999999995 * var_chaste_interface__membrane_potential__V - 0.016028256395817387 * log(mParameters[6] / var_chaste_interface__intracellular_sodium_concentration__Na_i); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa = (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3) * mParameters[4] * _lt_0_row[4] - pow(mParameters[6], 3) * var_chaste_interface__intracellular_calcium_concentration__Ca_i * _lt_0_row[5]) * mParameters[14] / (1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i); // nanoA
        const double var_sodium_potassium_pump__i_NaK = 1.3600000000000001 * mParameters[5] * var_chaste_interface__intracellular_sodium_concentration__Na_i / ((1.0 + mParameters[5]) * (21.699999999999999 + var_chaste_interface__intracellular_sodium_concentration__Na_i) * (_lt_0_row[6])); // nanoA
        const double d_dt_chaste_interface_var_intracellular_sodium_concentration__Na_i = -0.00063181349969740222 * (3.0 * var_sodium_calcium_exchanger__i_NaCa + 3.0 * var_sodium_potassium_pump__i_NaK + var_L_type_Ca_channel__i_Ca_L_Na + var_fast_sodium_current__i_Na + var_sodium_background_current__i_b_Na) * mParameters[3]; // millimolar / millisecond
        const double var_time_dependent_rectifier_potassium_current__i_K = 0.0071428571428571426 * (-mParameters[5] * _lt_0_row[7] + var_chaste_interface__intracellular_potassium_concentration__K_i) * mParameters[9] * var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__x; // nanoA
        const double d_dt_chaste_interface_var_time_dependent_rectifier_potassium_current_x_gate__x = 0.00050000000000000001 * (1.0 - var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__x) * _lt_0_row[15] / (_lt_0_row[14]) - 0.0012999999999999999 * var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__x * _lt_0_row[17] / (_lt_0_row[16]); // 1 / millisecond
        const double var_time_independent_potassium_current__i_K1 = (-var_reversal_potentials__E_K + var_chaste_interface__membrane_potential__V) * mParameters[5] * mParameters[13] / ((1.0 + exp(-0.74867781645490938 + 0.074867781645490947 * var_chaste_interface__membrane_potential__V - 0.074867781645490947 * var_reversal_potentials__E_K)) * (10.0 + mParameters[5])); // nanoA
        const double d_dt_chaste_interface_var_transient_outward_current_r_gate__r = _lt_0_row[18] - 0.33300000000000002 * var_chaste_interface__transient_outward_current_r_gate__r; // 1 / millisecond
        const double var_transient_outward_current__i_to = (-var_reversal_potentials__E_K + var_chaste_interface__membrane_potential__V) * mParameters[15] * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s; // nanoA
        const double d_dt_chaste_interface_var_intracellular_potassium_concentration__K_i = -0.00063181349969740222 * (-2.0 * var_sodium_potassium_pump__i_NaK + var_L_type_Ca_channel__i_Ca_L_K + var_potassium_background_current__i_b_K + var_time_dependent_rectifier_potassium_current__i_K + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) * mParameters[3]; // millimolar / millisecond
        const double d_dt_chaste_interface_var_transient_outward_current_s_gate__s = 3.3000000000000003e-5 * (1.0 - var_chaste_interface__transient_outward_current_s_gate__s) * _lt_0_row[19] - 0.033000000000000002 * var_chaste_interface__transient_outward_current_s_gate__s / (_lt_0_row[20]); // 1 / millisecond
        const double var_Force__alpha_tm = 12600800629.436172 * pow(var_chaste_interface__troponin__Trpn_Ca, 5.1071428571428568); // per_second
        const double d_dt_chaste_interface_var_Force__N_0 = 0.040714285714285717 * var_Force__N_1 + 0.040000000000000001 * var_chaste_interface__Force__P_0 - 0.001 * var_chaste_interface__Force__N_0 * var_Force__alpha_tm; // 1 / millisecond
        const double d_dt_chaste_interface_var_Force__P_0 = 0.040714285714285717 * var_chaste_interface__Force__P_1 - 0.070000000000000007 * var_chaste_interface__Force__P_0 + 0.001 * var_chaste_interface__Force__N_0 * var_Force__alpha_tm; // 1 / millisecond
        const double d_dt_chaste_interface_var_Force__P_1 = 0.081428571428571433 * var_chaste_interface__Force__P_2 + 0.029999999999999999 * var_chaste_interface__Force__P_0 - 0.18071428571428572 * var_chaste_interface__Force__P_1 + 0.001 * var_Force__N_1 * var_Force__alpha_tm; // 1 / millisecond
        const double d_dt_chaste_interface_var_troponin__Trpn_Ca = 80.0 * (0.070000000000000007 - var_chaste_interface__troponin__Trpn_Ca) * var_chaste_interface__intracellular_calcium_concentration__Ca_i - 0.066666666666666666 * (3.0 - 2.0 * var_Force__Force_norm) * var_chaste_interface__troponin__Trpn_Ca; // millimolar / millisecond
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_i = 0.5 * var_chaste_interface__calmodulin__Cmdn_Ca + 0.00063181349969740222 * var_sodium_calcium_exchanger__i_NaCa + 0.00020407827359180688 * var_RyR__j_rel - 0.00031590674984870111 * var_L_type_Ca_channel__i_Ca_L_Ca - 0.00031590674984870111 * var_calcium_background_current__i_b_Ca - 0.001 * var_SERCA__j_up + 0.066666666666666666 * (3.0 - 2.0 * var_Force__Force_norm) * var_chaste_interface__troponin__Trpn_Ca - 10.0 * (0.02 - var_chaste_interface__calmodulin__Cmdn_Ca) * var_chaste_interface__intracellular_calcium_concentration__Ca_i - 80.0 * (0.070000000000000007 - var_chaste_interface__troponin__Trpn_Ca) * var_chaste_interface__intracellular_calcium_concentration__Ca_i; // millimolar / millisecond
        
        mEvalF[1] = d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_i;
        mPartialF[1] = EvaluatePartialDerivative1(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[2] = d_dt_chaste_interface_var_fast_sodium_current_m_gate__m;
        mPartialF[2] = EvaluatePartialDerivative2(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[3] = d_dt_chaste_interface_var_fast_sodium_current_h_gate__h;
        mPartialF[3] = EvaluatePartialDerivative3(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[4] = d_dt_chaste_interface_var_time_dependent_rectifier_potassium_current_x_gate__x;
        mPartialF[4] = EvaluatePartialDerivative4(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[5] = d_dt_chaste_interface_var_transient_outward_current_s_gate__s;
        mPartialF[5] = EvaluatePartialDerivative5(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[6] = d_dt_chaste_interface_var_transient_outward_current_r_gate__r;
        mPartialF[6] = EvaluatePartialDerivative6(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[7] = d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d;
        mPartialF[7] = EvaluatePartialDerivative7(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[8] = d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f;
        mPartialF[8] = EvaluatePartialDerivative8(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[9] = d_dt_chaste_interface_var_CaMKII_factor__F_CaMK;
        mPartialF[9] = EvaluatePartialDerivative9(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[10] = d_dt_chaste_interface_var_RyR__F_SRCa_RyR;
        mPartialF[10] = EvaluatePartialDerivative10(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[11] = d_dt_chaste_interface_var_RyR__F_1;
        mPartialF[11] = EvaluatePartialDerivative11(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[12] = d_dt_chaste_interface_var_RyR__F_2;
        mPartialF[12] = EvaluatePartialDerivative12(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[13] = d_dt_chaste_interface_var_calmodulin__Cmdn_Ca;
        mPartialF[13] = EvaluatePartialDerivative13(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[14] = d_dt_chaste_interface_var_troponin__Trpn_Ca;
        mPartialF[14] = EvaluatePartialDerivative14(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[15] = d_dt_chaste_interface_var_SR_calcium_concentration__Ca_SR;
        mPartialF[15] = EvaluatePartialDerivative15(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[16] = d_dt_chaste_interface_var_intracellular_sodium_concentration__Na_i;
        mPartialF[16] = EvaluatePartialDerivative16(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[17] = d_dt_chaste_interface_var_intracellular_potassium_concentration__K_i;
        mPartialF[17] = EvaluatePartialDerivative17(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[18] = d_dt_chaste_interface_var_Force__N_0;
        mPartialF[18] = EvaluatePartialDerivative18(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[19] = d_dt_chaste_interface_var_Force__P_0;
        mPartialF[19] = EvaluatePartialDerivative19(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[20] = d_dt_chaste_interface_var_Force__P_1;
        mPartialF[20] = EvaluatePartialDerivative20(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[21] = d_dt_chaste_interface_var_Force__P_2;
        mPartialF[21] = EvaluatePartialDerivative21(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[22] = d_dt_chaste_interface_var_Force__P_3;
        mPartialF[22] = EvaluatePartialDerivative22(var_chaste_interface__environment__time_converted, rY, delta);
        
        {
            if (fabs(mPartialF[1]) < delta){
                rY[1] += mDt*d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_i;
            }
            else
            {
                rY[1] += (d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_i/mPartialF[1])*(exp(mPartialF[1]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[2]) < delta){
                rY[2] += mDt*d_dt_chaste_interface_var_fast_sodium_current_m_gate__m;
            }
            else
            {
                rY[2] += (d_dt_chaste_interface_var_fast_sodium_current_m_gate__m/mPartialF[2])*(exp(mPartialF[2]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[3]) < delta){
                rY[3] += mDt*d_dt_chaste_interface_var_fast_sodium_current_h_gate__h;
            }
            else
            {
                rY[3] += (d_dt_chaste_interface_var_fast_sodium_current_h_gate__h/mPartialF[3])*(exp(mPartialF[3]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[4]) < delta){
                rY[4] += mDt*d_dt_chaste_interface_var_time_dependent_rectifier_potassium_current_x_gate__x;
            }
            else
            {
                rY[4] += (d_dt_chaste_interface_var_time_dependent_rectifier_potassium_current_x_gate__x/mPartialF[4])*(exp(mPartialF[4]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[5]) < delta){
                rY[5] += mDt*d_dt_chaste_interface_var_transient_outward_current_s_gate__s;
            }
            else
            {
                rY[5] += (d_dt_chaste_interface_var_transient_outward_current_s_gate__s/mPartialF[5])*(exp(mPartialF[5]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[6]) < delta){
                rY[6] += mDt*d_dt_chaste_interface_var_transient_outward_current_r_gate__r;
            }
            else
            {
                rY[6] += (d_dt_chaste_interface_var_transient_outward_current_r_gate__r/mPartialF[6])*(exp(mPartialF[6]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[7]) < delta){
                rY[7] += mDt*d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d;
            }
            else
            {
                rY[7] += (d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d/mPartialF[7])*(exp(mPartialF[7]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[8]) < delta){
                rY[8] += mDt*d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f;
            }
            else
            {
                rY[8] += (d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f/mPartialF[8])*(exp(mPartialF[8]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[9]) < delta){
                rY[9] += mDt*d_dt_chaste_interface_var_CaMKII_factor__F_CaMK;
            }
            else
            {
                rY[9] += (d_dt_chaste_interface_var_CaMKII_factor__F_CaMK/mPartialF[9])*(exp(mPartialF[9]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[10]) < delta){
                rY[10] += mDt*d_dt_chaste_interface_var_RyR__F_SRCa_RyR;
            }
            else
            {
                rY[10] += (d_dt_chaste_interface_var_RyR__F_SRCa_RyR/mPartialF[10])*(exp(mPartialF[10]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[11]) < delta){
                rY[11] += mDt*d_dt_chaste_interface_var_RyR__F_1;
            }
            else
            {
                rY[11] += (d_dt_chaste_interface_var_RyR__F_1/mPartialF[11])*(exp(mPartialF[11]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[12]) < delta){
                rY[12] += mDt*d_dt_chaste_interface_var_RyR__F_2;
            }
            else
            {
                rY[12] += (d_dt_chaste_interface_var_RyR__F_2/mPartialF[12])*(exp(mPartialF[12]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[13]) < delta){
                rY[13] += mDt*d_dt_chaste_interface_var_calmodulin__Cmdn_Ca;
            }
            else
            {
                rY[13] += (d_dt_chaste_interface_var_calmodulin__Cmdn_Ca/mPartialF[13])*(exp(mPartialF[13]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[14]) < delta){
                rY[14] += mDt*d_dt_chaste_interface_var_troponin__Trpn_Ca;
            }
            else
            {
                rY[14] += (d_dt_chaste_interface_var_troponin__Trpn_Ca/mPartialF[14])*(exp(mPartialF[14]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[15]) < delta){
                rY[15] += mDt*d_dt_chaste_interface_var_SR_calcium_concentration__Ca_SR;
            }
            else
            {
                rY[15] += (d_dt_chaste_interface_var_SR_calcium_concentration__Ca_SR/mPartialF[15])*(exp(mPartialF[15]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[16]) < delta){
                rY[16] += mDt*d_dt_chaste_interface_var_intracellular_sodium_concentration__Na_i;
            }
            else
            {
                rY[16] += (d_dt_chaste_interface_var_intracellular_sodium_concentration__Na_i/mPartialF[16])*(exp(mPartialF[16]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[17]) < delta){
                rY[17] += mDt*d_dt_chaste_interface_var_intracellular_potassium_concentration__K_i;
            }
            else
            {
                rY[17] += (d_dt_chaste_interface_var_intracellular_potassium_concentration__K_i/mPartialF[17])*(exp(mPartialF[17]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[18]) < delta){
                rY[18] += mDt*d_dt_chaste_interface_var_Force__N_0;
            }
            else
            {
                rY[18] += (d_dt_chaste_interface_var_Force__N_0/mPartialF[18])*(exp(mPartialF[18]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[19]) < delta){
                rY[19] += mDt*d_dt_chaste_interface_var_Force__P_0;
            }
            else
            {
                rY[19] += (d_dt_chaste_interface_var_Force__P_0/mPartialF[19])*(exp(mPartialF[19]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[20]) < delta){
                rY[20] += mDt*d_dt_chaste_interface_var_Force__P_1;
            }
            else
            {
                rY[20] += (d_dt_chaste_interface_var_Force__P_1/mPartialF[20])*(exp(mPartialF[20]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[21]) < delta){
                rY[21] += mDt*d_dt_chaste_interface_var_Force__P_2;
            }
            else
            {
                rY[21] += (d_dt_chaste_interface_var_Force__P_2/mPartialF[21])*(exp(mPartialF[21]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[22]) < delta){
                rY[22] += mDt*d_dt_chaste_interface_var_Force__P_3;
            }
            else
            {
                rY[22] += (d_dt_chaste_interface_var_Force__P_3/mPartialF[22])*(exp(mPartialF[22]*mDt)-1.0);
            }
            
        }        
        
    }
   
    
    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluateYDerivative0(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        double d_dt_chaste_interface_var_membrane_potential__V;
        double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
        // Units: millimolar; Initial value: 9.91e-06
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.0013809
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.99569
        double var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__x = rY[4];
        // Units: dimensionless; Initial value: 0.051127
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[5];
        // Units: dimensionless; Initial value: 0.95854
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[6];
        // Units: dimensionless; Initial value: 1.5185e-08
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[7];
        // Units: dimensionless; Initial value: 1.7908e-08
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[8];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[16];
        // Units: millimolar; Initial value: 5.8041
        double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[17];
        // Units: millimolar; Initial value: 138.22
        

        // Lookup table indexing
        const bool _oob_0 = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane_potential__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane_potential__V);

        // Mathematics
        const double var_L_type_Ca_channel__i_Ca_L_Ca = ((fabs(-50.0 + var_chaste_interface__membrane_potential__V) < 1.3356880329551402e-6) ? (-374338.90823576227 * (-50.000001335688033 + var_chaste_interface__membrane_potential__V) * (-1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * exp(9.9999999997780743e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999997780743e-8)) - 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * exp(-9.9999999997780743e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) + 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * exp(-9.9999999997780743e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) : (0.14973556329098189 * (-50.0 + var_chaste_interface__membrane_potential__V) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * _lt_0_row[2]) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K = ((fabs(-50.0 + var_chaste_interface__membrane_potential__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane_potential__V) * (-1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * exp(9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (7.4867781645490941e-5 * (-50.0 + var_chaste_interface__membrane_potential__V) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * _lt_0_row[0]) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[1]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na = ((fabs(-50.0 + var_chaste_interface__membrane_potential__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane_potential__V) * (-9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * exp(9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (0.00037433890822745472 * (-50.0 + var_chaste_interface__membrane_potential__V) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * _lt_0_row[0]) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[1]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_Ca_L_Ca + var_L_type_Ca_channel__i_Ca_L_K + var_L_type_Ca_channel__i_Ca_L_Na; // nanoA
        const double var_calcium_background_current__i_b_Ca = 0.00025000000000000001 * var_chaste_interface__membrane_potential__V - 0.0033392200824619565 * log(mParameters[4] / var_chaste_interface__intracellular_calcium_concentration__Ca_i); // nanoA
        const double var_reversal_potentials__E_K = 26.713760659695652 * log(mParameters[5] / var_chaste_interface__intracellular_potassium_concentration__K_i); // millivolt
        const double var_potassium_background_current__i_b_K = 0.00059999999999999995 * var_chaste_interface__membrane_potential__V - 0.00059999999999999995 * var_reversal_potentials__E_K; // nanoA
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-26.713760659695652 * log((mParameters[6] + 0.12 * mParameters[5]) / (var_chaste_interface__intracellular_sodium_concentration__Na_i + 0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i)) + var_chaste_interface__membrane_potential__V) * mParameters[10] * var_chaste_interface__fast_sodium_current_h_gate__h; // nanoA
        const double var_sodium_background_current__i_b_Na = 0.00059999999999999995 * var_chaste_interface__membrane_potential__V - 0.016028256395817387 * log(mParameters[6] / var_chaste_interface__intracellular_sodium_concentration__Na_i); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa = (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3) * mParameters[4] * _lt_0_row[4] - pow(mParameters[6], 3) * var_chaste_interface__intracellular_calcium_concentration__Ca_i * _lt_0_row[5]) * mParameters[14] / (1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i); // nanoA
        const double var_sodium_potassium_pump__i_NaK = 1.3600000000000001 * mParameters[5] * var_chaste_interface__intracellular_sodium_concentration__Na_i / ((1.0 + mParameters[5]) * (21.699999999999999 + var_chaste_interface__intracellular_sodium_concentration__Na_i) * (_lt_0_row[6])); // nanoA
        const double var_time_dependent_rectifier_potassium_current__i_K = 0.0071428571428571426 * (-mParameters[5] * _lt_0_row[7] + var_chaste_interface__intracellular_potassium_concentration__K_i) * mParameters[9] * var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__x; // nanoA
        const double var_time_independent_potassium_current__i_K1 = (-var_reversal_potentials__E_K + var_chaste_interface__membrane_potential__V) * mParameters[5] * mParameters[13] / ((1.0 + exp(-0.74867781645490938 + 0.074867781645490947 * var_chaste_interface__membrane_potential__V - 0.074867781645490947 * var_reversal_potentials__E_K)) * (10.0 + mParameters[5])); // nanoA
        const double var_transient_outward_current__i_to = (-var_reversal_potentials__E_K + var_chaste_interface__membrane_potential__V) * mParameters[15] * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s; // nanoA
        d_dt_chaste_interface_var_membrane_potential__V = -0.001 * (1000.0 * GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted) * mParameters[8] / HeartConfig::Instance()->GetCapacitance() + var_L_type_Ca_channel__i_Ca_L + var_calcium_background_current__i_b_Ca + var_fast_sodium_current__i_Na + var_potassium_background_current__i_b_K + var_sodium_background_current__i_b_Na + var_sodium_calcium_exchanger__i_NaCa + var_sodium_potassium_pump__i_NaK + var_time_dependent_rectifier_potassium_current__i_K + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) / mParameters[8]; // millivolt / millisecond

        return d_dt_chaste_interface_var_membrane_potential__V;
    }

    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluatePartialDerivative0(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -92.849333
            double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
            // Units: millimolar; Initial value: 9.91e-06
            double var_chaste_interface__fast_sodium_current_m_gate__m = rY[2];
            // Units: dimensionless; Initial value: 0.0013809
            double var_chaste_interface__fast_sodium_current_h_gate__h = rY[3];
            // Units: dimensionless; Initial value: 0.99569
            double var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__x = rY[4];
            // Units: dimensionless; Initial value: 0.051127
            double var_chaste_interface__transient_outward_current_s_gate__s = rY[5];
            // Units: dimensionless; Initial value: 0.95854
            double var_chaste_interface__transient_outward_current_r_gate__r = rY[6];
            // Units: dimensionless; Initial value: 1.5185e-08
            double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[7];
            // Units: dimensionless; Initial value: 1.7908e-08
            double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[8];
            // Units: dimensionless; Initial value: 1.0
            double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[16];
            // Units: millimolar; Initial value: 5.8041
            double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[17];
            // Units: millimolar; Initial value: 138.22
            


            const double var_x0 = 0.018716945411372737 * var_chaste_interface__membrane_potential__V;
            const double var_x1 = pow(mParameters[6], 3) * exp(-var_x0);
            const double var_x2 = var_x1 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
            const double var_x3 = mParameters[4] * exp(var_x0);
            const double var_x4 = var_x3 * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3);
            const double var_x5 = mParameters[14] / (1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i);
            const double var_x6 = var_x5 * (0.018716945411372737 * var_x2 + 0.018716945411372737 * var_x4);
            const double var_x7 = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * mParameters[10];
            const double var_x8 = var_x7 * var_chaste_interface__fast_sodium_current_h_gate__h;
            const double var_x9 = mParameters[15] * var_chaste_interface__transient_outward_current_r_gate__r;
            const double var_x10 = var_x9 * var_chaste_interface__transient_outward_current_s_gate__s;
            const double var_x11 = 0.074867781645490947 * var_chaste_interface__membrane_potential__V;
            const double var_x12 = 1 / var_chaste_interface__intracellular_potassium_concentration__K_i;
            const double var_x13 = var_x12 * mParameters[5];
            const double var_x14 = log(var_x13);
            const double var_x15 = exp(-0.74867781645490938 + var_x11 - 2.0 * var_x14);
            const double var_x16 = 1.0 + var_x15;
            const double var_x17 = mParameters[13] / (10.0 + mParameters[5]);
            const double var_x18 = var_x17 / var_x16;
            const double var_x19 = var_x18 * mParameters[5];
            const double var_x20 = -0.037433890822745473 * var_chaste_interface__membrane_potential__V;
            const double var_x21 = exp(var_x20);
            const double var_x22 = var_x21 * mParameters[5];
            const double var_x23 = mParameters[9] * var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__x;
            const double var_x24 = var_x22 * var_x23;
            const double var_x25 = 1 / (1.0 + mParameters[5]);
            const double var_x26 = 1 / (21.699999999999999 + var_chaste_interface__intracellular_sodium_concentration__Na_i);
            const double var_x27 = exp(-0.0037433890822745472 * var_chaste_interface__membrane_potential__V);
            const double var_x28 = 1.0 + 0.035299999999999998 * var_x21 + 0.1245 * var_x27;
            const double var_x29 = var_x25 * var_x26 * (0.001321416346042915 * var_x21 + 0.00046605194074318115 * var_x27) * mParameters[5] * var_chaste_interface__intracellular_sodium_concentration__Na_i / pow(var_x28, 2);
            const double var_x30 = -26.713760659695652 * var_x14 + var_chaste_interface__membrane_potential__V;
            const double var_x31 = var_x15 * var_x17 * var_x30 / pow(var_x16, 2);
            const double var_x32 = var_x31 * mParameters[5];
            const double var_x33 = exp(9.9999999999858739e-8);
            const double var_x34 = 1 / (1.0 - var_x33);
            const double var_x35 = exp(1.8716945411372736);
            const double var_x36 = var_x35 * var_chaste_interface__intracellular_potassium_concentration__K_i;
            const double var_x37 = var_x34 * (var_x36 - var_x33 * mParameters[5]);
            const double var_x38 = mParameters[7] * var_chaste_interface__L_type_Ca_channel_f_gate__f;
            const double var_x39 = var_x38 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
            const double var_x40 = 3.743389082274547e-5 * var_x39;
            const double var_x41 = exp(-9.9999999999858739e-8);
            const double var_x42 = 1 / (1.0 - var_x41);
            const double var_x43 = var_x42 * (var_x36 - var_x41 * mParameters[5]);
            const double var_x44 = -50.0 + var_chaste_interface__membrane_potential__V;
            const double var_x45 = fabs(var_x44);
            const double var_x46 = var_x45 < 2.6713760659657915e-6;
            const double var_x47 = exp(1.8716945411372736 + var_x20);
            const double var_x48 = 1.0 - var_x47;
            const double var_x49 = 1 / var_x48;
            const double var_x50 = var_x39 * var_x49;
            const double var_x51 = var_x47 * mParameters[5];
            const double var_x52 = var_x36 - var_x51;
            const double var_x53 = 7.4867781645490941e-5 * var_x52;
            const double var_x54 = var_x50 * var_x53;
            const double var_x55 = var_x44 * var_x50;
            const double var_x56 = var_x39 * var_x44;
            const double var_x57 = var_x47 * var_x56 / pow(var_x48, 2);
            const double var_x58 = ((var_x46) ? (var_x37 * var_x40 + var_x40 * var_x43) : (var_x54 + 2.8025923642584555e-6 * var_x51 * var_x55 - 2.8025923642584555e-6 * var_x52 * var_x57));
            const double var_x59 = var_x35 * var_chaste_interface__intracellular_sodium_concentration__Na_i;
            const double var_x60 = var_x34 * (var_x59 - var_x33 * mParameters[6]);
            const double var_x61 = 0.00018716945411372736 * var_x39;
            const double var_x62 = var_x42 * (var_x59 - var_x41 * mParameters[6]);
            const double var_x63 = var_x47 * mParameters[6];
            const double var_x64 = var_x59 - var_x63;
            const double var_x65 = 0.00037433890822745472 * var_x64;
            const double var_x66 = var_x50 * var_x65;
            const double var_x67 = ((var_x46) ? (var_x60 * var_x61 + var_x61 * var_x62) : (var_x66 + 1.4012961821292276e-5 * var_x55 * var_x63 - 1.4012961821292276e-5 * var_x57 * var_x64));
            const double var_x68 = exp(9.9999999997780743e-8);
            const double var_x69 = 1 / (1.0 - var_x68);
            const double var_x70 = exp(3.7433890822745473);
            const double var_x71 = var_x70 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
            const double var_x72 = var_x69 * (var_x71 - var_x68 * mParameters[4]);
            const double var_x73 = 0.074867781645490947 * var_x39;
            const double var_x74 = exp(-9.9999999997780743e-8);
            const double var_x75 = 1 / (1.0 - var_x74);
            const double var_x76 = var_x75 * (var_x71 - var_x74 * mParameters[4]);
            const double var_x77 = var_x45 < 1.3356880329551402e-6;
            const double var_x78 = exp(3.7433890822745473 - var_x11);
            const double var_x79 = 1.0 - var_x78;
            const double var_x80 = 1 / var_x79;
            const double var_x81 = var_x39 * var_x80;
            const double var_x82 = var_x78 * mParameters[4];
            const double var_x83 = var_x71 - var_x82;
            const double var_x84 = 0.14973556329098189 * var_x83;
            const double var_x85 = var_x81 * var_x84;
            const double var_x86 = var_x44 * var_x81;
            const double var_x87 = ((var_x77) ? (var_x72 * var_x73 + var_x73 * var_x76) : (var_x85 + 0.011210369457033822 * var_x82 * var_x86 - 0.011210369457033822 * var_x56 * var_x78 * var_x83 / pow(var_x79, 2)));
            const double var_x88 = 1 / mParameters[8];
            const double var_x89 = 0.001 * var_x88;
            
            partialF = -var_x89 * (0.0014499999999999999 + var_x10 + var_x19 + var_x58 + var_x6 + var_x67 + var_x8 + var_x87 + 1.3600000000000001 * var_x29 + 0.00026738493444818193 * var_x24 - 0.074867781645490947 * var_x32);
        }
        else
        {
            const double y_save = rY[0];
            rY[0] += delta;
            const double temp = EvaluateYDerivative0(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[0])/delta;
            rY[0] = y_save;
        }
        return partialF;
    }
    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluateYDerivative1(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
        // Units: millimolar; Initial value: 9.91e-06
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[7];
        // Units: dimensionless; Initial value: 1.7908e-08
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[8];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__CaMKII_factor__F_CaMK = rY[9];
        // Units: dimensionless; Initial value: 1.028
        double var_chaste_interface__RyR__F_SRCa_RyR = rY[10];
        // Units: millimolar; Initial value: 0.25089
        double var_chaste_interface__RyR__F_2 = rY[12];
        // Units: dimensionless; Initial value: 8.7508e-06
        double var_chaste_interface__calmodulin__Cmdn_Ca = rY[13];
        // Units: millimolar; Initial value: 3.9636e-06
        double var_chaste_interface__troponin__Trpn_Ca = rY[14];
        // Units: millimolar; Initial value: 0.00027661
        double var_chaste_interface__SR_calcium_concentration__Ca_SR = rY[15];
        // Units: millimolar; Initial value: 0.24886
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[16];
        // Units: millimolar; Initial value: 5.8041
        double var_chaste_interface__Force__N_0 = rY[18];
        // Units: dimensionless; Initial value: 0.99917
        double var_chaste_interface__Force__P_0 = rY[19];
        // Units: dimensionless; Initial value: 9.8593e-05
        double var_chaste_interface__Force__P_1 = rY[20];
        // Units: dimensionless; Initial value: 0.00013331
        double var_chaste_interface__Force__P_2 = rY[21];
        // Units: dimensionless; Initial value: 0.00023505
        double var_chaste_interface__Force__P_3 = rY[22];
        // Units: dimensionless; Initial value: 0.00015349
        

        // Lookup table indexing
        const bool _oob_0 = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane_potential__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane_potential__V);

        // Mathematics
        const double var_Force__N_1 = 1.0 - var_chaste_interface__Force__N_0 - var_chaste_interface__Force__P_0 - var_chaste_interface__Force__P_1 - var_chaste_interface__Force__P_2 - var_chaste_interface__Force__P_3; // dimensionless
        const double var_Force__Force_norm = 0.60360360360360366 * var_Force__N_1 + 0.60360360360360366 * var_chaste_interface__Force__P_1 + 1.2072072072072073 * var_chaste_interface__Force__P_2 + 1.8108108108108107 * var_chaste_interface__Force__P_3; // dimensionless
        const double var_RyR__j_rel = (-var_chaste_interface__intracellular_calcium_concentration__Ca_i + var_chaste_interface__SR_calcium_concentration__Ca_SR) * (pow(var_chaste_interface__RyR__F_2, 2) * var_chaste_interface__RyR__F_SRCa_RyR * mParameters[1] / (pow((0.25 + var_chaste_interface__RyR__F_2), 2) * (0.20000000000000001 + var_chaste_interface__RyR__F_SRCa_RyR)) + mParameters[0]); // millimolar_per_second
        const double var_SERCA__j_up = (-0.14537477691850093 * pow(var_chaste_interface__SR_calcium_concentration__Ca_SR, 2) + 5069444.444444444 * pow(var_chaste_interface__intracellular_calcium_concentration__Ca_i, 2) * var_chaste_interface__CaMKII_factor__F_CaMK) * mParameters[2] / (1.0 + 17361111.111111112 * pow(var_chaste_interface__intracellular_calcium_concentration__Ca_i, 2) + 0.37180249851279007 * pow(var_chaste_interface__SR_calcium_concentration__Ca_SR, 2)); // millimolar_per_second
        const double var_L_type_Ca_channel__i_Ca_L_Ca = ((fabs(-50.0 + var_chaste_interface__membrane_potential__V) < 1.3356880329551402e-6) ? (-374338.90823576227 * (-50.000001335688033 + var_chaste_interface__membrane_potential__V) * (-1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * exp(9.9999999997780743e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999997780743e-8)) - 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * exp(-9.9999999997780743e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) + 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * exp(-9.9999999997780743e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) : (0.14973556329098189 * (-50.0 + var_chaste_interface__membrane_potential__V) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * _lt_0_row[2]) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_calcium_background_current__i_b_Ca = 0.00025000000000000001 * var_chaste_interface__membrane_potential__V - 0.0033392200824619565 * log(mParameters[4] / var_chaste_interface__intracellular_calcium_concentration__Ca_i); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa = (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3) * mParameters[4] * _lt_0_row[4] - pow(mParameters[6], 3) * var_chaste_interface__intracellular_calcium_concentration__Ca_i * _lt_0_row[5]) * mParameters[14] / (1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i); // nanoA
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_i = 0.5 * var_chaste_interface__calmodulin__Cmdn_Ca + 0.00063181349969740222 * var_sodium_calcium_exchanger__i_NaCa + 0.00020407827359180688 * var_RyR__j_rel - 0.00031590674984870111 * var_L_type_Ca_channel__i_Ca_L_Ca - 0.00031590674984870111 * var_calcium_background_current__i_b_Ca - 0.001 * var_SERCA__j_up + 0.066666666666666666 * (3.0 - 2.0 * var_Force__Force_norm) * var_chaste_interface__troponin__Trpn_Ca - 10.0 * (0.02 - var_chaste_interface__calmodulin__Cmdn_Ca) * var_chaste_interface__intracellular_calcium_concentration__Ca_i - 80.0 * (0.070000000000000007 - var_chaste_interface__troponin__Trpn_Ca) * var_chaste_interface__intracellular_calcium_concentration__Ca_i; // millimolar / millisecond

        return d_dt_chaste_interface_var_intracellular_calcium_concentration__Ca_i;
    }

    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluatePartialDerivative1(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -92.849333
            double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
            // Units: millimolar; Initial value: 9.91e-06
            double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[7];
            // Units: dimensionless; Initial value: 1.7908e-08
            double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[8];
            // Units: dimensionless; Initial value: 1.0
            double var_chaste_interface__CaMKII_factor__F_CaMK = rY[9];
            // Units: dimensionless; Initial value: 1.028
            double var_chaste_interface__RyR__F_SRCa_RyR = rY[10];
            // Units: millimolar; Initial value: 0.25089
            double var_chaste_interface__RyR__F_2 = rY[12];
            // Units: dimensionless; Initial value: 8.7508e-06
            double var_chaste_interface__calmodulin__Cmdn_Ca = rY[13];
            // Units: millimolar; Initial value: 3.9636e-06
            double var_chaste_interface__troponin__Trpn_Ca = rY[14];
            // Units: millimolar; Initial value: 0.00027661
            double var_chaste_interface__SR_calcium_concentration__Ca_SR = rY[15];
            // Units: millimolar; Initial value: 0.24886
            double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[16];
            // Units: millimolar; Initial value: 5.8041
            


            const double var_x0 = 0.018716945411372737 * var_chaste_interface__membrane_potential__V;
            const double var_x1 = pow(mParameters[6], 3) * exp(-var_x0);
            const double var_x2 = var_x1 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
            const double var_x3 = mParameters[4] * exp(var_x0);
            const double var_x4 = var_x3 * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3);
            const double var_x5 = mParameters[14] / (1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i);
            const double var_x11 = 0.074867781645490947 * var_chaste_interface__membrane_potential__V;
            const double var_x38 = mParameters[7] * var_chaste_interface__L_type_Ca_channel_f_gate__f;
            const double var_x39 = var_x38 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
            const double var_x44 = -50.0 + var_chaste_interface__membrane_potential__V;
            const double var_x45 = fabs(var_x44);
            const double var_x68 = exp(9.9999999997780743e-8);
            const double var_x69 = 1 / (1.0 - var_x68);
            const double var_x70 = exp(3.7433890822745473);
            const double var_x74 = exp(-9.9999999997780743e-8);
            const double var_x75 = 1 / (1.0 - var_x74);
            const double var_x77 = var_x45 < 1.3356880329551402e-6;
            const double var_x78 = exp(3.7433890822745473 - var_x11);
            const double var_x79 = 1.0 - var_x78;
            const double var_x80 = 1 / var_x79;
            const double var_x81 = var_x39 * var_x80;
            const double var_x86 = var_x44 * var_x81;
            const double var_x90 = 1 / var_chaste_interface__intracellular_calcium_concentration__Ca_i;
            const double var_x91 = (var_x4 - var_x2) * mParameters[14] / pow((0.0068999999999999999 + var_chaste_interface__intracellular_calcium_concentration__Ca_i), 2);
            const double var_x92 = var_x1 * var_x5;
            const double var_x93 = 18716945.911788113 - 374338.90823576227 * var_chaste_interface__membrane_potential__V;
            const double var_x94 = 1.9999999999556149e-7 * var_x38;
            const double var_x95 = var_x70 * var_x94 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
            const double var_x96 = var_x75 * var_x95;
            const double var_x97 = ((var_x77) ? (var_x96 + var_x93 * (-var_x96 - var_x69 * var_x95)) : (0.14973556329098189 * var_x70 * var_x86));
            const double var_x149 = 10.0 * var_chaste_interface__calmodulin__Cmdn_Ca;
            const double var_x150 = 80.0 * var_chaste_interface__troponin__Trpn_Ca;
            const double var_x151 = 0.00020407827359180688 * mParameters[0];
            const double var_x152 = pow(var_chaste_interface__intracellular_calcium_concentration__Ca_i, 2);
            const double var_x153 = pow(var_chaste_interface__SR_calcium_concentration__Ca_SR, 2);
            const double var_x154 = (-0.14537477691850093 * var_x153 + 5069444.444444444 * var_x152 * var_chaste_interface__CaMKII_factor__F_CaMK) * mParameters[2] / pow((5.7600000000000006e-8 + var_x152 + 2.1415823914336707e-8 * var_x153), 2);
            const double var_x155 = var_x154 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
            const double var_x156 = mParameters[2] / (1.0 + 17361111.111111112 * var_x152 + 0.37180249851279007 * var_x153);
            const double var_x157 = var_x156 * var_chaste_interface__CaMKII_factor__F_CaMK * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
            const double var_x158 = 0.20000000000000001 + var_chaste_interface__RyR__F_SRCa_RyR;
            const double var_x159 = 1 / var_x158;
            const double var_x160 = 0.25 + var_chaste_interface__RyR__F_2;
            const double var_x161 = pow(var_x160, (-2));
            const double var_x162 = pow(var_chaste_interface__RyR__F_2, 2);
            const double var_x163 = var_x161 * var_x162 * mParameters[1];
            const double var_x164 = var_x159 * var_x163;
            const double var_x165 = var_x164 * var_chaste_interface__RyR__F_SRCa_RyR;
            const double var_x166 = 0.00020407827359180688 * var_x165;
            
            partialF = -5.8000000000000007 + var_x149 + var_x150 - var_x151 - var_x166 + 1.152e-10 * var_x155 - 0.00031590674984870111 * var_x97 - 0.00063181349969740222 * var_x92 - 1.0548821632800683e-6 * var_x90 - 4.3595131479120748e-6 * var_x91 - 10138.888888888887 * var_x157;
        }
        else
        {
            const double y_save = rY[1];
            rY[1] += delta;
            const double temp = EvaluateYDerivative1(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[1])/delta;
            rY[1] = y_save;
        }
        return partialF;
    }
    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluateYDerivative2(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.0013809
        

        // Lookup table indexing
        const bool _oob_0 = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane_potential__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane_potential__V);

        // Mathematics
        const double d_dt_chaste_interface_var_fast_sodium_current_m_gate__m = 0.001 * (1.0 - var_chaste_interface__fast_sodium_current_m_gate__m) * _lt_0_row[12] - 8.0 * var_chaste_interface__fast_sodium_current_m_gate__m * _lt_0_row[13]; // 1 / millisecond

        return d_dt_chaste_interface_var_fast_sodium_current_m_gate__m;
    }

    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluatePartialDerivative2(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -92.849333
            

        // Lookup table indexing
        const bool _oob_0 = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane_potential__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane_potential__V);

            const double var_x183 = 1 / (1.0 - exp(1.0000000000287557e-7));
            const double var_x184 = 1 / (1.0 - exp(-1.0000000000287557e-7));
            const double var_x185 = _lt_0_row[13];
            const double var_x187 = 41.0 + var_chaste_interface__membrane_potential__V;
            const double var_x188 = fabs(var_x187) < 1.0000000000287557e-6;
            const double var_x190 = -0.10000000000000001 * var_chaste_interface__membrane_potential__V;
            const double var_x191 = exp(-4.1000000000000005 + var_x190);
            const double var_x192 = 1.0 - var_x191;
            const double var_x193 = 0.20000000000000001 / var_x192;
            const double var_x194 = -8.0 * var_x185;
            
            partialF = ((var_x188) ? (var_x194 - 2.0000000000575113e-7 * var_x184 + 499.9999999856222 * (40.999999000000003 + var_chaste_interface__membrane_potential__V) * (-0.00020000000000575113 * var_x183 - 0.00020000000000575113 * var_x184)) : (var_x194 - var_x187 * var_x193));
        }
        else
        {
            const double y_save = rY[2];
            rY[2] += delta;
            const double temp = EvaluateYDerivative2(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[2])/delta;
            rY[2] = y_save;
        }
        return partialF;
    }
    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluateYDerivative3(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.99569
        


        // Mathematics
        const double var_fast_sodium_current_h_gate__alpha_h = 20.0 * exp(-9.375 + 0.125 * mParameters[12] - 0.125 * var_chaste_interface__membrane_potential__V); // per_second
        const double var_fast_sodium_current_h_gate__beta_h = 2000.0 / (1.0 + 320.0 * exp(-7.5 + 0.10000000000000001 * mParameters[12] - 0.10000000000000001 * var_chaste_interface__membrane_potential__V)); // per_second
        const double d_dt_chaste_interface_var_fast_sodium_current_h_gate__h = 0.001 * (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h) * (-var_chaste_interface__fast_sodium_current_h_gate__h + 0.01 * mParameters[11] + (1.0 - 0.01 * mParameters[11]) * var_fast_sodium_current_h_gate__alpha_h / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h)); // 1 / millisecond

        return d_dt_chaste_interface_var_fast_sodium_current_h_gate__h;
    }

    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluatePartialDerivative3(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -92.849333
            


            const double var_x190 = -0.10000000000000001 * var_chaste_interface__membrane_potential__V;
            const double var_x195 = exp(-7.5 + var_x190 + 0.10000000000000001 * mParameters[12]);
            const double var_x196 = 1 / (1.0 + 320.0 * var_x195);
            const double var_x197 = 2.0 * var_x196;
            const double var_x198 = -0.125 * var_chaste_interface__membrane_potential__V;
            const double var_x199 = exp(-9.375 + var_x198 + 0.125 * mParameters[12]);
            const double var_x200 = 0.02 * var_x199;
            
            partialF = -var_x197 - var_x200;
        }
        else
        {
            const double y_save = rY[3];
            rY[3] += delta;
            const double temp = EvaluateYDerivative3(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[3])/delta;
            rY[3] = y_save;
        }
        return partialF;
    }
    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluateYDerivative4(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__x = rY[4];
        // Units: dimensionless; Initial value: 0.051127
        

        // Lookup table indexing
        const bool _oob_0 = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane_potential__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane_potential__V);

        // Mathematics
        const double d_dt_chaste_interface_var_time_dependent_rectifier_potassium_current_x_gate__x = 0.00050000000000000001 * (1.0 - var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__x) * _lt_0_row[15] / (_lt_0_row[14]) - 0.0012999999999999999 * var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__x * _lt_0_row[17] / (_lt_0_row[16]); // 1 / millisecond

        return d_dt_chaste_interface_var_time_dependent_rectifier_potassium_current_x_gate__x;
    }

    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluatePartialDerivative4(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -92.849333
            

        // Lookup table indexing
        const bool _oob_0 = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane_potential__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane_potential__V);

            const double var_x207 = exp(-0.80000000000000004 - 0.040000000000000001 * var_chaste_interface__membrane_potential__V);
            const double var_x208 = 1.0 + var_x207;
            const double var_x209 = _lt_0_row[17];
            const double var_x210 = var_x209 / var_x208;
            const double var_x212 = exp(2.8500000000000001 + 0.057000000000000002 * var_chaste_interface__membrane_potential__V);
            const double var_x213 = 1.0 + var_x212;
            const double var_x214 = _lt_0_row[15];
            const double var_x215 = var_x214 / var_x213;
            
            partialF = -0.00050000000000000001 * var_x215 - 0.0012999999999999999 * var_x210;
        }
        else
        {
            const double y_save = rY[4];
            rY[4] += delta;
            const double temp = EvaluateYDerivative4(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[4])/delta;
            rY[4] = y_save;
        }
        return partialF;
    }
    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluateYDerivative5(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[5];
        // Units: dimensionless; Initial value: 0.95854
        

        // Lookup table indexing
        const bool _oob_0 = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane_potential__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane_potential__V);

        // Mathematics
        const double d_dt_chaste_interface_var_transient_outward_current_s_gate__s = 3.3000000000000003e-5 * (1.0 - var_chaste_interface__transient_outward_current_s_gate__s) * _lt_0_row[19] - 0.033000000000000002 * var_chaste_interface__transient_outward_current_s_gate__s / (_lt_0_row[20]); // 1 / millisecond

        return d_dt_chaste_interface_var_transient_outward_current_s_gate__s;
    }

    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluatePartialDerivative5(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -92.849333
            

        // Lookup table indexing
        const bool _oob_0 = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane_potential__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane_potential__V);

            const double var_x198 = -0.125 * var_chaste_interface__membrane_potential__V;
            const double var_x216 = _lt_0_row[19];
            const double var_x217 = exp(-1.25 + var_x198);
            const double var_x218 = 1.0 + var_x217;
            
            partialF = -0.033000000000000002 / var_x218 - 3.3000000000000003e-5 * var_x216;
        }
        else
        {
            const double y_save = rY[5];
            rY[5] += delta;
            const double temp = EvaluateYDerivative5(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[5])/delta;
            rY[5] = y_save;
        }
        return partialF;
    }
    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluateYDerivative6(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[6];
        // Units: dimensionless; Initial value: 1.5185e-08
        

        // Lookup table indexing
        const bool _oob_0 = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane_potential__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane_potential__V);

        // Mathematics
        const double d_dt_chaste_interface_var_transient_outward_current_r_gate__r = _lt_0_row[18] - 0.33300000000000002 * var_chaste_interface__transient_outward_current_r_gate__r; // 1 / millisecond

        return d_dt_chaste_interface_var_transient_outward_current_r_gate__r;
    }

    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluatePartialDerivative6(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            


            
            partialF = -0.33300000000000002;
        }
        else
        {
            const double y_save = rY[6];
            rY[6] += delta;
            const double temp = EvaluateYDerivative6(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[6])/delta;
            rY[6] = y_save;
        }
        return partialF;
    }
    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluateYDerivative7(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[7];
        // Units: dimensionless; Initial value: 1.7908e-08
        

        // Lookup table indexing
        const bool _oob_0 = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane_potential__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane_potential__V);

        // Mathematics
        const double d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d = 0.001 * (1.0 - var_chaste_interface__L_type_Ca_channel_d_gate__d) * _lt_0_row[8] - 0.001 * _lt_0_row[9] * var_chaste_interface__L_type_Ca_channel_d_gate__d; // 1 / millisecond

        return d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d;
    }

    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluatePartialDerivative7(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -92.849333
            


            const double var_x220 = exp(1.0000000000287557e-7);
            const double var_x221 = 1 / (1.0 - var_x220);
            const double var_x222 = exp(-1.0000000000287557e-7);
            const double var_x223 = 1 / (1.0 - var_x222);
            const double var_x224 = 1 / (1.0 - exp(-9.9999999997324457e-8));
            const double var_x225 = 1 / (1.0 - exp(1.0000000000010001e-7));
            const double var_x227 = 19.0 + var_chaste_interface__membrane_potential__V;
            const double var_x228 = fabs(var_x227);
            const double var_x229 = var_x228 < 4.0000000001150227e-7;
            const double var_x231 = 0.25 * var_chaste_interface__membrane_potential__V;
            const double var_x232 = -var_x231;
            const double var_x233 = exp(-4.75 + var_x232);
            const double var_x234 = 1.0 - var_x233;
            const double var_x235 = 0.089999999999999997 / var_x234;
            const double var_x237 = var_x228 < 9.999999999871223e-7;
            const double var_x238 = exp(1.8999999999999999 + 0.10000000000000001 * var_chaste_interface__membrane_potential__V);
            const double var_x239 = 1.0 - var_x238;
            const double var_x240 = 0.035999999999999997 / var_x239;
            const double var_x241 = -3.5999999999036803e-8 * var_x224 - 500.00000000643882 * (19.000001000000001 + var_chaste_interface__membrane_potential__V) * (-3.5999999999036802e-5 * var_x224 - 3.6000000000036003e-5 * var_x225);
            const double var_x242 = -var_x227 * var_x235;
            
            partialF = ((var_x229) ? (var_x241 - 3.6000000001035205e-8 * var_x223 + 1249.9999999640554 * (18.999999599999999 + var_chaste_interface__membrane_potential__V) * (-3.6000000001035204e-5 * var_x221 - 3.6000000001035204e-5 * var_x223)) : ((var_x237) ? (var_x241 + var_x242) : (var_x242 + var_x227 * var_x240)));
        }
        else
        {
            const double y_save = rY[7];
            rY[7] += delta;
            const double temp = EvaluateYDerivative7(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[7])/delta;
            rY[7] = y_save;
        }
        return partialF;
    }
    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluateYDerivative8(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[8];
        // Units: dimensionless; Initial value: 1.0
        

        // Lookup table indexing
        const bool _oob_0 = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane_potential__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane_potential__V);

        // Mathematics
        const double d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f = 0.001 * (1.0 - var_chaste_interface__L_type_Ca_channel_f_gate__f) * _lt_0_row[10] - 0.025000000000000001 * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[11]); // 1 / millisecond

        return d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f;
    }

    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluatePartialDerivative8(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -92.849333
            


            const double var_x220 = exp(1.0000000000287557e-7);
            const double var_x222 = exp(-1.0000000000287557e-7);
            const double var_x231 = 0.25 * var_chaste_interface__membrane_potential__V;
            const double var_x232 = -var_x231;
            const double var_x243 = 1 / (-1.0 + var_x220);
            const double var_x244 = 1 / (-1.0 + var_x222);
            const double var_x245 = exp(-8.5 + var_x232);
            const double var_x246 = 1.0 + var_x245;
            const double var_x248 = 34.0 + var_chaste_interface__membrane_potential__V;
            const double var_x249 = fabs(var_x248) < 4.0000000001150227e-7;
            const double var_x251 = exp(8.5 + var_x231);
            const double var_x252 = -1.0 + var_x251;
            const double var_x253 = 0.0031250000000000002 / var_x252;
            const double var_x254 = -0.025000000000000001 / var_x246;
            
            partialF = ((var_x249) ? (var_x254 + 1.2500000000359445e-9 * var_x244 - 1249.9999999640554 * (34.000000399999998 + var_chaste_interface__membrane_potential__V) * (1.2500000000359446e-6 * var_x243 + 1.2500000000359446e-6 * var_x244)) : (var_x254 - var_x248 * var_x253));
        }
        else
        {
            const double y_save = rY[8];
            rY[8] += delta;
            const double temp = EvaluateYDerivative8(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[8])/delta;
            rY[8] = y_save;
        }
        return partialF;
    }
    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluateYDerivative9(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__CaMKII_factor__F_CaMK = rY[9];
        // Units: dimensionless; Initial value: 1.028
        double var_chaste_interface__calmodulin__Cmdn_Ca = rY[13];
        // Units: millimolar; Initial value: 3.9636e-06
        


        // Mathematics
        const double d_dt_chaste_interface_var_CaMKII_factor__F_CaMK = 24.999999999999996 * var_chaste_interface__calmodulin__Cmdn_Ca - 0.00125 * var_chaste_interface__CaMKII_factor__F_CaMK; // 1 / millisecond

        return d_dt_chaste_interface_var_CaMKII_factor__F_CaMK;
    }

    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluatePartialDerivative9(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            


            
            partialF = -0.00125;
        }
        else
        {
            const double y_save = rY[9];
            rY[9] += delta;
            const double temp = EvaluateYDerivative9(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[9])/delta;
            rY[9] = y_save;
        }
        return partialF;
    }
    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluateYDerivative10(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__RyR__F_SRCa_RyR = rY[10];
        // Units: millimolar; Initial value: 0.25089
        double var_chaste_interface__SR_calcium_concentration__Ca_SR = rY[15];
        // Units: millimolar; Initial value: 0.24886
        


        // Mathematics
        const double d_dt_chaste_interface_var_RyR__F_SRCa_RyR = 0.02 * var_chaste_interface__SR_calcium_concentration__Ca_SR - 0.02 * var_chaste_interface__RyR__F_SRCa_RyR; // millimolar / millisecond

        return d_dt_chaste_interface_var_RyR__F_SRCa_RyR;
    }

    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluatePartialDerivative10(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            


            
            partialF = -0.02;
        }
        else
        {
            const double y_save = rY[10];
            rY[10] += delta;
            const double temp = EvaluateYDerivative10(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[10])/delta;
            rY[10] = y_save;
        }
        return partialF;
    }
    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluateYDerivative11(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
        // Units: millimolar; Initial value: 9.91e-06
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[7];
        // Units: dimensionless; Initial value: 1.7908e-08
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[8];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__CaMKII_factor__F_CaMK = rY[9];
        // Units: dimensionless; Initial value: 1.028
        double var_chaste_interface__RyR__F_SRCa_RyR = rY[10];
        // Units: millimolar; Initial value: 0.25089
        double var_chaste_interface__RyR__F_1 = rY[11];
        // Units: dimensionless; Initial value: 0.5268
        double var_chaste_interface__RyR__F_2 = rY[12];
        // Units: dimensionless; Initial value: 8.7508e-06
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[16];
        // Units: millimolar; Initial value: 5.8041
        double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[17];
        // Units: millimolar; Initial value: 138.22
        

        // Lookup table indexing
        const bool _oob_0 = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane_potential__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane_potential__V);

        // Mathematics
        const double var_L_type_Ca_channel__i_Ca_L_Ca = ((fabs(-50.0 + var_chaste_interface__membrane_potential__V) < 1.3356880329551402e-6) ? (-374338.90823576227 * (-50.000001335688033 + var_chaste_interface__membrane_potential__V) * (-1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * exp(9.9999999997780743e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999997780743e-8)) - 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * exp(-9.9999999997780743e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) + 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * exp(-9.9999999997780743e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) : (0.14973556329098189 * (-50.0 + var_chaste_interface__membrane_potential__V) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * _lt_0_row[2]) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K = ((fabs(-50.0 + var_chaste_interface__membrane_potential__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane_potential__V) * (-1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * exp(9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (7.4867781645490941e-5 * (-50.0 + var_chaste_interface__membrane_potential__V) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * _lt_0_row[0]) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[1]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na = ((fabs(-50.0 + var_chaste_interface__membrane_potential__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane_potential__V) * (-9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * exp(9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (0.00037433890822745472 * (-50.0 + var_chaste_interface__membrane_potential__V) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * _lt_0_row[0]) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[1]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_Ca_L_Ca + var_L_type_Ca_channel__i_Ca_L_K + var_L_type_Ca_channel__i_Ca_L_Na; // nanoA
        const double var_RyR__k_1 = 30625000.0 * pow(var_chaste_interface__intracellular_calcium_concentration__Ca_i, 2) - 245.0 * var_L_type_Ca_channel__i_Ca_L; // per_second
        const double d_dt_chaste_interface_var_RyR__F_1 = -0.0018 * var_chaste_interface__RyR__F_1 + 0.001885 * pow((4.5454545454545459 * var_chaste_interface__RyR__F_SRCa_RyR), (2.0408163265306123 * pow(var_chaste_interface__CaMKII_factor__F_CaMK, 2))) * (1.0 - var_chaste_interface__RyR__F_1 - var_chaste_interface__RyR__F_2) - 0.001 * var_chaste_interface__RyR__F_1 * var_RyR__k_1; // 1 / millisecond

        return d_dt_chaste_interface_var_RyR__F_1;
    }

    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluatePartialDerivative11(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -92.849333
            double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
            // Units: millimolar; Initial value: 9.91e-06
            double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[7];
            // Units: dimensionless; Initial value: 1.7908e-08
            double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[8];
            // Units: dimensionless; Initial value: 1.0
            double var_chaste_interface__CaMKII_factor__F_CaMK = rY[9];
            // Units: dimensionless; Initial value: 1.028
            double var_chaste_interface__RyR__F_SRCa_RyR = rY[10];
            // Units: millimolar; Initial value: 0.25089
            double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[16];
            // Units: millimolar; Initial value: 5.8041
            double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[17];
            // Units: millimolar; Initial value: 138.22
            


            const double var_x11 = 0.074867781645490947 * var_chaste_interface__membrane_potential__V;
            const double var_x20 = -0.037433890822745473 * var_chaste_interface__membrane_potential__V;
            const double var_x33 = exp(9.9999999999858739e-8);
            const double var_x34 = 1 / (1.0 - var_x33);
            const double var_x35 = exp(1.8716945411372736);
            const double var_x36 = var_x35 * var_chaste_interface__intracellular_potassium_concentration__K_i;
            const double var_x37 = var_x34 * (var_x36 - var_x33 * mParameters[5]);
            const double var_x38 = mParameters[7] * var_chaste_interface__L_type_Ca_channel_f_gate__f;
            const double var_x39 = var_x38 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
            const double var_x41 = exp(-9.9999999999858739e-8);
            const double var_x42 = 1 / (1.0 - var_x41);
            const double var_x43 = var_x42 * (var_x36 - var_x41 * mParameters[5]);
            const double var_x44 = -50.0 + var_chaste_interface__membrane_potential__V;
            const double var_x45 = fabs(var_x44);
            const double var_x46 = var_x45 < 2.6713760659657915e-6;
            const double var_x47 = exp(1.8716945411372736 + var_x20);
            const double var_x48 = 1.0 - var_x47;
            const double var_x49 = 1 / var_x48;
            const double var_x50 = var_x39 * var_x49;
            const double var_x51 = var_x47 * mParameters[5];
            const double var_x52 = var_x36 - var_x51;
            const double var_x53 = 7.4867781645490941e-5 * var_x52;
            const double var_x54 = var_x50 * var_x53;
            const double var_x59 = var_x35 * var_chaste_interface__intracellular_sodium_concentration__Na_i;
            const double var_x60 = var_x34 * (var_x59 - var_x33 * mParameters[6]);
            const double var_x62 = var_x42 * (var_x59 - var_x41 * mParameters[6]);
            const double var_x63 = var_x47 * mParameters[6];
            const double var_x64 = var_x59 - var_x63;
            const double var_x65 = 0.00037433890822745472 * var_x64;
            const double var_x66 = var_x50 * var_x65;
            const double var_x68 = exp(9.9999999997780743e-8);
            const double var_x69 = 1 / (1.0 - var_x68);
            const double var_x70 = exp(3.7433890822745473);
            const double var_x71 = var_x70 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
            const double var_x72 = var_x69 * (var_x71 - var_x68 * mParameters[4]);
            const double var_x74 = exp(-9.9999999997780743e-8);
            const double var_x75 = 1 / (1.0 - var_x74);
            const double var_x76 = var_x75 * (var_x71 - var_x74 * mParameters[4]);
            const double var_x77 = var_x45 < 1.3356880329551402e-6;
            const double var_x78 = exp(3.7433890822745473 - var_x11);
            const double var_x79 = 1.0 - var_x78;
            const double var_x80 = 1 / var_x79;
            const double var_x81 = var_x39 * var_x80;
            const double var_x82 = var_x78 * mParameters[4];
            const double var_x83 = var_x71 - var_x82;
            const double var_x84 = 0.14973556329098189 * var_x83;
            const double var_x85 = var_x81 * var_x84;
            const double var_x94 = 1.9999999999556149e-7 * var_x38;
            const double var_x106 = 9.9999999999858744e-10 * var_x38;
            const double var_x107 = var_x106 * var_x60;
            const double var_x108 = var_x106 * var_x62;
            const double var_x112 = 1.999999999997175e-10 * var_x38;
            const double var_x113 = var_x112 * var_x37;
            const double var_x114 = var_x112 * var_x43;
            const double var_x116 = var_x72 * var_x94;
            const double var_x117 = var_x76 * var_x94;
            const double var_x152 = pow(var_chaste_interface__intracellular_calcium_concentration__Ca_i, 2);
            const double var_x266 = 4.5454545454545459 * var_chaste_interface__RyR__F_SRCa_RyR;
            const double var_x267 = pow(var_chaste_interface__CaMKII_factor__F_CaMK, 2);
            const double var_x268 = pow(var_x266, (2.0408163265306123 * var_x267));
            const double var_x270 = var_x108 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
            const double var_x271 = -9358473.2056995872 + 187169.45411399176 * var_chaste_interface__membrane_potential__V;
            const double var_x272 = 0.245 * ((var_x46) ? (var_x270 - var_x271 * (-var_x270 - var_x107 * var_chaste_interface__L_type_Ca_channel_d_gate__d)) : (var_x44 * var_x66));
            const double var_x273 = var_x114 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
            const double var_x274 = 0.245 * ((var_x46) ? (var_x273 - var_x271 * (-var_x273 - var_x113 * var_chaste_interface__L_type_Ca_channel_d_gate__d)) : (var_x44 * var_x54));
            const double var_x275 = var_x117 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
            const double var_x276 = 0.245 * ((var_x77) ? (var_x275 - 374338.90823576227 * (-50.000001335688033 + var_chaste_interface__membrane_potential__V) * (-var_x275 - var_x116 * var_chaste_interface__L_type_Ca_channel_d_gate__d)) : (var_x44 * var_x85));
            const double var_x277 = 30625.0 * var_x152;
            const double var_x278 = -0.001885 * var_x268;
            
            partialF = -0.0018 + var_x272 + var_x274 + var_x276 + var_x278 - var_x277;
        }
        else
        {
            const double y_save = rY[11];
            rY[11] += delta;
            const double temp = EvaluateYDerivative11(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[11])/delta;
            rY[11] = y_save;
        }
        return partialF;
    }
    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluateYDerivative12(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
        // Units: millimolar; Initial value: 9.91e-06
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[7];
        // Units: dimensionless; Initial value: 1.7908e-08
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[8];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__RyR__F_1 = rY[11];
        // Units: dimensionless; Initial value: 0.5268
        double var_chaste_interface__RyR__F_2 = rY[12];
        // Units: dimensionless; Initial value: 8.7508e-06
        double var_chaste_interface__SR_calcium_concentration__Ca_SR = rY[15];
        // Units: millimolar; Initial value: 0.24886
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[16];
        // Units: millimolar; Initial value: 5.8041
        double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[17];
        // Units: millimolar; Initial value: 138.22
        

        // Lookup table indexing
        const bool _oob_0 = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane_potential__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane_potential__V);

        // Mathematics
        const double var_L_type_Ca_channel__i_Ca_L_Ca = ((fabs(-50.0 + var_chaste_interface__membrane_potential__V) < 1.3356880329551402e-6) ? (-374338.90823576227 * (-50.000001335688033 + var_chaste_interface__membrane_potential__V) * (-1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * exp(9.9999999997780743e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999997780743e-8)) - 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * exp(-9.9999999997780743e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) + 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * exp(-9.9999999997780743e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) : (0.14973556329098189 * (-50.0 + var_chaste_interface__membrane_potential__V) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * _lt_0_row[2]) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K = ((fabs(-50.0 + var_chaste_interface__membrane_potential__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane_potential__V) * (-1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * exp(9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (7.4867781645490941e-5 * (-50.0 + var_chaste_interface__membrane_potential__V) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * _lt_0_row[0]) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[1]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na = ((fabs(-50.0 + var_chaste_interface__membrane_potential__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane_potential__V) * (-9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * exp(9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (0.00037433890822745472 * (-50.0 + var_chaste_interface__membrane_potential__V) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * _lt_0_row[0]) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[1]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_Ca_L_Ca + var_L_type_Ca_channel__i_Ca_L_K + var_L_type_Ca_channel__i_Ca_L_Na; // nanoA
        const double var_RyR__k_1 = 30625000.0 * pow(var_chaste_interface__intracellular_calcium_concentration__Ca_i, 2) - 245.0 * var_L_type_Ca_channel__i_Ca_L; // per_second
        const double d_dt_chaste_interface_var_RyR__F_2 = 0.001 * var_chaste_interface__RyR__F_1 * var_RyR__k_1 - 0.45000000000000001 * var_chaste_interface__RyR__F_2 / (1.0 + 0.35999999999999999 / var_chaste_interface__SR_calcium_concentration__Ca_SR); // 1 / millisecond

        return d_dt_chaste_interface_var_RyR__F_2;
    }

    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluatePartialDerivative12(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__SR_calcium_concentration__Ca_SR = rY[15];
            // Units: millimolar; Initial value: 0.24886
            


            const double var_x282 = 1.0 + 0.35999999999999999 / var_chaste_interface__SR_calcium_concentration__Ca_SR;
            
            partialF = -0.45000000000000001 / var_x282;
        }
        else
        {
            const double y_save = rY[12];
            rY[12] += delta;
            const double temp = EvaluateYDerivative12(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[12])/delta;
            rY[12] = y_save;
        }
        return partialF;
    }
    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluateYDerivative13(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
        // Units: millimolar; Initial value: 9.91e-06
        double var_chaste_interface__calmodulin__Cmdn_Ca = rY[13];
        // Units: millimolar; Initial value: 3.9636e-06
        


        // Mathematics
        const double d_dt_chaste_interface_var_calmodulin__Cmdn_Ca = -0.5 * var_chaste_interface__calmodulin__Cmdn_Ca + 10.0 * (0.02 - var_chaste_interface__calmodulin__Cmdn_Ca) * var_chaste_interface__intracellular_calcium_concentration__Ca_i; // millimolar / millisecond

        return d_dt_chaste_interface_var_calmodulin__Cmdn_Ca;
    }

    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluatePartialDerivative13(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
            // Units: millimolar; Initial value: 9.91e-06
            


            const double var_x172 = 10.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
            
            partialF = -0.5 - var_x172;
        }
        else
        {
            const double y_save = rY[13];
            rY[13] += delta;
            const double temp = EvaluateYDerivative13(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[13])/delta;
            rY[13] = y_save;
        }
        return partialF;
    }
    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluateYDerivative14(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
        // Units: millimolar; Initial value: 9.91e-06
        double var_chaste_interface__troponin__Trpn_Ca = rY[14];
        // Units: millimolar; Initial value: 0.00027661
        double var_chaste_interface__Force__N_0 = rY[18];
        // Units: dimensionless; Initial value: 0.99917
        double var_chaste_interface__Force__P_0 = rY[19];
        // Units: dimensionless; Initial value: 9.8593e-05
        double var_chaste_interface__Force__P_1 = rY[20];
        // Units: dimensionless; Initial value: 0.00013331
        double var_chaste_interface__Force__P_2 = rY[21];
        // Units: dimensionless; Initial value: 0.00023505
        double var_chaste_interface__Force__P_3 = rY[22];
        // Units: dimensionless; Initial value: 0.00015349
        


        // Mathematics
        const double var_Force__N_1 = 1.0 - var_chaste_interface__Force__N_0 - var_chaste_interface__Force__P_0 - var_chaste_interface__Force__P_1 - var_chaste_interface__Force__P_2 - var_chaste_interface__Force__P_3; // dimensionless
        const double var_Force__Force_norm = 0.60360360360360366 * var_Force__N_1 + 0.60360360360360366 * var_chaste_interface__Force__P_1 + 1.2072072072072073 * var_chaste_interface__Force__P_2 + 1.8108108108108107 * var_chaste_interface__Force__P_3; // dimensionless
        const double d_dt_chaste_interface_var_troponin__Trpn_Ca = 80.0 * (0.070000000000000007 - var_chaste_interface__troponin__Trpn_Ca) * var_chaste_interface__intracellular_calcium_concentration__Ca_i - 0.066666666666666666 * (3.0 - 2.0 * var_Force__Force_norm) * var_chaste_interface__troponin__Trpn_Ca; // millimolar / millisecond

        return d_dt_chaste_interface_var_troponin__Trpn_Ca;
    }

    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluatePartialDerivative14(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
            // Units: millimolar; Initial value: 9.91e-06
            double var_chaste_interface__Force__N_0 = rY[18];
            // Units: dimensionless; Initial value: 0.99917
            double var_chaste_interface__Force__P_0 = rY[19];
            // Units: dimensionless; Initial value: 9.8593e-05
            double var_chaste_interface__Force__P_2 = rY[21];
            // Units: dimensionless; Initial value: 0.00023505
            double var_chaste_interface__Force__P_3 = rY[22];
            // Units: dimensionless; Initial value: 0.00015349
            


            const double var_x173 = 80.0 * var_chaste_interface__intracellular_calcium_concentration__Ca_i;
            const double var_x174 = 0.080480480480480482 * var_chaste_interface__Force__N_0;
            const double var_x175 = 0.080480480480480482 * var_chaste_interface__Force__P_0;
            const double var_x176 = 0.080480480480480482 * var_chaste_interface__Force__P_2;
            const double var_x177 = 0.16096096096096096 * var_chaste_interface__Force__P_3;
            
            partialF = -0.11951951951951952 + var_x176 + var_x177 - var_x173 - var_x174 - var_x175;
        }
        else
        {
            const double y_save = rY[14];
            rY[14] += delta;
            const double temp = EvaluateYDerivative14(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[14])/delta;
            rY[14] = y_save;
        }
        return partialF;
    }
    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluateYDerivative15(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
        // Units: millimolar; Initial value: 9.91e-06
        double var_chaste_interface__CaMKII_factor__F_CaMK = rY[9];
        // Units: dimensionless; Initial value: 1.028
        double var_chaste_interface__RyR__F_SRCa_RyR = rY[10];
        // Units: millimolar; Initial value: 0.25089
        double var_chaste_interface__RyR__F_2 = rY[12];
        // Units: dimensionless; Initial value: 8.7508e-06
        double var_chaste_interface__SR_calcium_concentration__Ca_SR = rY[15];
        // Units: millimolar; Initial value: 0.24886
        


        // Mathematics
        const double var_RyR__j_rel = (-var_chaste_interface__intracellular_calcium_concentration__Ca_i + var_chaste_interface__SR_calcium_concentration__Ca_SR) * (pow(var_chaste_interface__RyR__F_2, 2) * var_chaste_interface__RyR__F_SRCa_RyR * mParameters[1] / (pow((0.25 + var_chaste_interface__RyR__F_2), 2) * (0.20000000000000001 + var_chaste_interface__RyR__F_SRCa_RyR)) + mParameters[0]); // millimolar_per_second
        const double var_SERCA__j_up = (-0.14537477691850093 * pow(var_chaste_interface__SR_calcium_concentration__Ca_SR, 2) + 5069444.444444444 * pow(var_chaste_interface__intracellular_calcium_concentration__Ca_i, 2) * var_chaste_interface__CaMKII_factor__F_CaMK) * mParameters[2] / (1.0 + 17361111.111111112 * pow(var_chaste_interface__intracellular_calcium_concentration__Ca_i, 2) + 0.37180249851279007 * pow(var_chaste_interface__SR_calcium_concentration__Ca_SR, 2)); // millimolar_per_second
        const double d_dt_chaste_interface_var_SR_calcium_concentration__Ca_SR = 0.0049000806523882071 * var_SERCA__j_up - 0.001 * var_RyR__j_rel; // millimolar / millisecond

        return d_dt_chaste_interface_var_SR_calcium_concentration__Ca_SR;
    }

    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluatePartialDerivative15(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
            // Units: millimolar; Initial value: 9.91e-06
            double var_chaste_interface__CaMKII_factor__F_CaMK = rY[9];
            // Units: dimensionless; Initial value: 1.028
            double var_chaste_interface__RyR__F_SRCa_RyR = rY[10];
            // Units: millimolar; Initial value: 0.25089
            double var_chaste_interface__RyR__F_2 = rY[12];
            // Units: dimensionless; Initial value: 8.7508e-06
            double var_chaste_interface__SR_calcium_concentration__Ca_SR = rY[15];
            // Units: millimolar; Initial value: 0.24886
            


            const double var_x152 = pow(var_chaste_interface__intracellular_calcium_concentration__Ca_i, 2);
            const double var_x153 = pow(var_chaste_interface__SR_calcium_concentration__Ca_SR, 2);
            const double var_x154 = (-0.14537477691850093 * var_x153 + 5069444.444444444 * var_x152 * var_chaste_interface__CaMKII_factor__F_CaMK) * mParameters[2] / pow((5.7600000000000006e-8 + var_x152 + 2.1415823914336707e-8 * var_x153), 2);
            const double var_x156 = mParameters[2] / (1.0 + 17361111.111111112 * var_x152 + 0.37180249851279007 * var_x153);
            const double var_x158 = 0.20000000000000001 + var_chaste_interface__RyR__F_SRCa_RyR;
            const double var_x159 = 1 / var_x158;
            const double var_x160 = 0.25 + var_chaste_interface__RyR__F_2;
            const double var_x161 = pow(var_x160, (-2));
            const double var_x162 = pow(var_chaste_interface__RyR__F_2, 2);
            const double var_x163 = var_x161 * var_x162 * mParameters[1];
            const double var_x164 = var_x159 * var_x163;
            const double var_x165 = var_x164 * var_chaste_interface__RyR__F_SRCa_RyR;
            const double var_x178 = var_x156 * var_chaste_interface__SR_calcium_concentration__Ca_SR;
            const double var_x179 = var_x154 * var_chaste_interface__SR_calcium_concentration__Ca_SR;
            const double var_x283 = 0.001 * mParameters[0];
            const double var_x284 = 0.001 * var_x165;
            
            partialF = -var_x283 - var_x284 - 0.001424696263447196 * var_x178 - 1.2089003260906828e-17 * var_x179;
        }
        else
        {
            const double y_save = rY[15];
            rY[15] += delta;
            const double temp = EvaluateYDerivative15(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[15])/delta;
            rY[15] = y_save;
        }
        return partialF;
    }
    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluateYDerivative16(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
        // Units: millimolar; Initial value: 9.91e-06
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.0013809
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.99569
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[7];
        // Units: dimensionless; Initial value: 1.7908e-08
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[8];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[16];
        // Units: millimolar; Initial value: 5.8041
        double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[17];
        // Units: millimolar; Initial value: 138.22
        

        // Lookup table indexing
        const bool _oob_0 = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane_potential__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane_potential__V);

        // Mathematics
        const double var_L_type_Ca_channel__i_Ca_L_Na = ((fabs(-50.0 + var_chaste_interface__membrane_potential__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane_potential__V) * (-9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * exp(9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (0.00037433890822745472 * (-50.0 + var_chaste_interface__membrane_potential__V) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * _lt_0_row[0]) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[1]))); // nanoA
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-26.713760659695652 * log((mParameters[6] + 0.12 * mParameters[5]) / (var_chaste_interface__intracellular_sodium_concentration__Na_i + 0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i)) + var_chaste_interface__membrane_potential__V) * mParameters[10] * var_chaste_interface__fast_sodium_current_h_gate__h; // nanoA
        const double var_sodium_background_current__i_b_Na = 0.00059999999999999995 * var_chaste_interface__membrane_potential__V - 0.016028256395817387 * log(mParameters[6] / var_chaste_interface__intracellular_sodium_concentration__Na_i); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa = (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3) * mParameters[4] * _lt_0_row[4] - pow(mParameters[6], 3) * var_chaste_interface__intracellular_calcium_concentration__Ca_i * _lt_0_row[5]) * mParameters[14] / (1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i); // nanoA
        const double var_sodium_potassium_pump__i_NaK = 1.3600000000000001 * mParameters[5] * var_chaste_interface__intracellular_sodium_concentration__Na_i / ((1.0 + mParameters[5]) * (21.699999999999999 + var_chaste_interface__intracellular_sodium_concentration__Na_i) * (_lt_0_row[6])); // nanoA
        const double d_dt_chaste_interface_var_intracellular_sodium_concentration__Na_i = -0.00063181349969740222 * (3.0 * var_sodium_calcium_exchanger__i_NaCa + 3.0 * var_sodium_potassium_pump__i_NaK + var_L_type_Ca_channel__i_Ca_L_Na + var_fast_sodium_current__i_Na + var_sodium_background_current__i_b_Na) * mParameters[3]; // millimolar / millisecond

        return d_dt_chaste_interface_var_intracellular_sodium_concentration__Na_i;
    }

    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluatePartialDerivative16(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -92.849333
            double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
            // Units: millimolar; Initial value: 9.91e-06
            double var_chaste_interface__fast_sodium_current_m_gate__m = rY[2];
            // Units: dimensionless; Initial value: 0.0013809
            double var_chaste_interface__fast_sodium_current_h_gate__h = rY[3];
            // Units: dimensionless; Initial value: 0.99569
            double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[7];
            // Units: dimensionless; Initial value: 1.7908e-08
            double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[8];
            // Units: dimensionless; Initial value: 1.0
            double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[16];
            // Units: millimolar; Initial value: 5.8041
            double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[17];
            // Units: millimolar; Initial value: 138.22
            


            const double var_x0 = 0.018716945411372737 * var_chaste_interface__membrane_potential__V;
            const double var_x3 = mParameters[4] * exp(var_x0);
            const double var_x5 = mParameters[14] / (1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i);
            const double var_x7 = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * mParameters[10];
            const double var_x8 = var_x7 * var_chaste_interface__fast_sodium_current_h_gate__h;
            const double var_x20 = -0.037433890822745473 * var_chaste_interface__membrane_potential__V;
            const double var_x21 = exp(var_x20);
            const double var_x25 = 1 / (1.0 + mParameters[5]);
            const double var_x26 = 1 / (21.699999999999999 + var_chaste_interface__intracellular_sodium_concentration__Na_i);
            const double var_x27 = exp(-0.0037433890822745472 * var_chaste_interface__membrane_potential__V);
            const double var_x28 = 1.0 + 0.035299999999999998 * var_x21 + 0.1245 * var_x27;
            const double var_x33 = exp(9.9999999999858739e-8);
            const double var_x34 = 1 / (1.0 - var_x33);
            const double var_x35 = exp(1.8716945411372736);
            const double var_x38 = mParameters[7] * var_chaste_interface__L_type_Ca_channel_f_gate__f;
            const double var_x39 = var_x38 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
            const double var_x41 = exp(-9.9999999999858739e-8);
            const double var_x42 = 1 / (1.0 - var_x41);
            const double var_x44 = -50.0 + var_chaste_interface__membrane_potential__V;
            const double var_x45 = fabs(var_x44);
            const double var_x46 = var_x45 < 2.6713760659657915e-6;
            const double var_x47 = exp(1.8716945411372736 + var_x20);
            const double var_x48 = 1.0 - var_x47;
            const double var_x49 = 1 / var_x48;
            const double var_x50 = var_x39 * var_x49;
            const double var_x55 = var_x44 * var_x50;
            const double var_x98 = 1 / (var_chaste_interface__intracellular_sodium_concentration__Na_i + 0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i);
            const double var_x105 = 9358473.2056995872 - 187169.45411399176 * var_chaste_interface__membrane_potential__V;
            const double var_x106 = 9.9999999999858744e-10 * var_x38;
            const double var_x132 = 1 / var_chaste_interface__intracellular_sodium_concentration__Na_i;
            const double var_x133 = var_x25 * mParameters[5] / var_x28;
            const double var_x134 = var_x133 * var_x26;
            const double var_x135 = var_x8 * var_x98;
            const double var_x136 = var_x3 * var_x5 * pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 2);
            const double var_x137 = var_x133 * var_chaste_interface__intracellular_sodium_concentration__Na_i / pow((1 + 0.046082949308755762 * var_chaste_interface__intracellular_sodium_concentration__Na_i), 2);
            const double var_x138 = var_x35 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
            const double var_x139 = var_x106 * var_x138;
            const double var_x140 = var_x139 * var_x42;
            const double var_x141 = var_x35 * var_x55;
            const double var_x142 = ((var_x46) ? (var_x140 + var_x105 * (-var_x140 - var_x139 * var_x34)) : (0.00037433890822745472 * var_x141));
            
            partialF = (5.4743126393964648e-6 * var_x137 - 0.00063181349969740222 * var_x142 - 1.0126868767488654e-5 * var_x132 - 0.016878114612481093 * var_x135 - 0.0025777990787654013 * var_x134 - 0.0056863214972766194 * var_x136) * mParameters[3];
        }
        else
        {
            const double y_save = rY[16];
            rY[16] += delta;
            const double temp = EvaluateYDerivative16(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[16])/delta;
            rY[16] = y_save;
        }
        return partialF;
    }
    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluateYDerivative17(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__x = rY[4];
        // Units: dimensionless; Initial value: 0.051127
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[5];
        // Units: dimensionless; Initial value: 0.95854
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[6];
        // Units: dimensionless; Initial value: 1.5185e-08
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[7];
        // Units: dimensionless; Initial value: 1.7908e-08
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[8];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[16];
        // Units: millimolar; Initial value: 5.8041
        double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[17];
        // Units: millimolar; Initial value: 138.22
        

        // Lookup table indexing
        const bool _oob_0 = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane_potential__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane_potential__V);

        // Mathematics
        const double var_L_type_Ca_channel__i_Ca_L_K = ((fabs(-50.0 + var_chaste_interface__membrane_potential__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane_potential__V) * (-1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * exp(9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (7.4867781645490941e-5 * (-50.0 + var_chaste_interface__membrane_potential__V) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * _lt_0_row[0]) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[1]))); // nanoA
        const double var_reversal_potentials__E_K = 26.713760659695652 * log(mParameters[5] / var_chaste_interface__intracellular_potassium_concentration__K_i); // millivolt
        const double var_potassium_background_current__i_b_K = 0.00059999999999999995 * var_chaste_interface__membrane_potential__V - 0.00059999999999999995 * var_reversal_potentials__E_K; // nanoA
        const double var_sodium_potassium_pump__i_NaK = 1.3600000000000001 * mParameters[5] * var_chaste_interface__intracellular_sodium_concentration__Na_i / ((1.0 + mParameters[5]) * (21.699999999999999 + var_chaste_interface__intracellular_sodium_concentration__Na_i) * (_lt_0_row[6])); // nanoA
        const double var_time_dependent_rectifier_potassium_current__i_K = 0.0071428571428571426 * (-mParameters[5] * _lt_0_row[7] + var_chaste_interface__intracellular_potassium_concentration__K_i) * mParameters[9] * var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__x; // nanoA
        const double var_time_independent_potassium_current__i_K1 = (-var_reversal_potentials__E_K + var_chaste_interface__membrane_potential__V) * mParameters[5] * mParameters[13] / ((1.0 + exp(-0.74867781645490938 + 0.074867781645490947 * var_chaste_interface__membrane_potential__V - 0.074867781645490947 * var_reversal_potentials__E_K)) * (10.0 + mParameters[5])); // nanoA
        const double var_transient_outward_current__i_to = (-var_reversal_potentials__E_K + var_chaste_interface__membrane_potential__V) * mParameters[15] * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s; // nanoA
        const double d_dt_chaste_interface_var_intracellular_potassium_concentration__K_i = -0.00063181349969740222 * (-2.0 * var_sodium_potassium_pump__i_NaK + var_L_type_Ca_channel__i_Ca_L_K + var_potassium_background_current__i_b_K + var_time_dependent_rectifier_potassium_current__i_K + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) * mParameters[3]; // millimolar / millisecond

        return d_dt_chaste_interface_var_intracellular_potassium_concentration__K_i;
    }

    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluatePartialDerivative17(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -92.849333
            double var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__x = rY[4];
            // Units: dimensionless; Initial value: 0.051127
            double var_chaste_interface__transient_outward_current_s_gate__s = rY[5];
            // Units: dimensionless; Initial value: 0.95854
            double var_chaste_interface__transient_outward_current_r_gate__r = rY[6];
            // Units: dimensionless; Initial value: 1.5185e-08
            double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[7];
            // Units: dimensionless; Initial value: 1.7908e-08
            double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[8];
            // Units: dimensionless; Initial value: 1.0
            double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[17];
            // Units: millimolar; Initial value: 138.22
            


            const double var_x9 = mParameters[15] * var_chaste_interface__transient_outward_current_r_gate__r;
            const double var_x10 = var_x9 * var_chaste_interface__transient_outward_current_s_gate__s;
            const double var_x11 = 0.074867781645490947 * var_chaste_interface__membrane_potential__V;
            const double var_x12 = 1 / var_chaste_interface__intracellular_potassium_concentration__K_i;
            const double var_x13 = var_x12 * mParameters[5];
            const double var_x14 = log(var_x13);
            const double var_x15 = exp(-0.74867781645490938 + var_x11 - 2.0 * var_x14);
            const double var_x16 = 1.0 + var_x15;
            const double var_x17 = mParameters[13] / (10.0 + mParameters[5]);
            const double var_x18 = var_x17 / var_x16;
            const double var_x20 = -0.037433890822745473 * var_chaste_interface__membrane_potential__V;
            const double var_x23 = mParameters[9] * var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__x;
            const double var_x30 = -26.713760659695652 * var_x14 + var_chaste_interface__membrane_potential__V;
            const double var_x31 = var_x15 * var_x17 * var_x30 / pow(var_x16, 2);
            const double var_x33 = exp(9.9999999999858739e-8);
            const double var_x34 = 1 / (1.0 - var_x33);
            const double var_x35 = exp(1.8716945411372736);
            const double var_x38 = mParameters[7] * var_chaste_interface__L_type_Ca_channel_f_gate__f;
            const double var_x39 = var_x38 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
            const double var_x41 = exp(-9.9999999999858739e-8);
            const double var_x42 = 1 / (1.0 - var_x41);
            const double var_x44 = -50.0 + var_chaste_interface__membrane_potential__V;
            const double var_x45 = fabs(var_x44);
            const double var_x46 = var_x45 < 2.6713760659657915e-6;
            const double var_x47 = exp(1.8716945411372736 + var_x20);
            const double var_x48 = 1.0 - var_x47;
            const double var_x49 = 1 / var_x48;
            const double var_x50 = var_x39 * var_x49;
            const double var_x55 = var_x44 * var_x50;
            const double var_x105 = 9358473.2056995872 - 187169.45411399176 * var_chaste_interface__membrane_potential__V;
            const double var_x112 = 1.999999999997175e-10 * var_x38;
            const double var_x138 = var_x35 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
            const double var_x141 = var_x35 * var_x55;
            const double var_x143 = var_x10 * var_x12;
            const double var_x144 = var_x13 * var_x18;
            const double var_x145 = var_x13 * var_x31;
            const double var_x146 = var_x112 * var_x138;
            const double var_x147 = var_x146 * var_x42;
            const double var_x148 = ((var_x46) ? (var_x147 + var_x105 * (-var_x147 - var_x146 * var_x34)) : (7.4867781645490941e-5 * var_x141));
            
            partialF = (0.0012636269993948044 * var_x145 - 0.00063181349969740222 * var_x148 - 1.0126868767488654e-5 * var_x12 - 0.016878114612481093 * var_x143 - 0.016878114612481093 * var_x144 - 4.5129535692671587e-6 * var_x23) * mParameters[3];
        }
        else
        {
            const double y_save = rY[17];
            rY[17] += delta;
            const double temp = EvaluateYDerivative17(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[17])/delta;
            rY[17] = y_save;
        }
        return partialF;
    }
    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluateYDerivative18(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__troponin__Trpn_Ca = rY[14];
        // Units: millimolar; Initial value: 0.00027661
        double var_chaste_interface__Force__N_0 = rY[18];
        // Units: dimensionless; Initial value: 0.99917
        double var_chaste_interface__Force__P_0 = rY[19];
        // Units: dimensionless; Initial value: 9.8593e-05
        double var_chaste_interface__Force__P_1 = rY[20];
        // Units: dimensionless; Initial value: 0.00013331
        double var_chaste_interface__Force__P_2 = rY[21];
        // Units: dimensionless; Initial value: 0.00023505
        double var_chaste_interface__Force__P_3 = rY[22];
        // Units: dimensionless; Initial value: 0.00015349
        


        // Mathematics
        const double var_Force__N_1 = 1.0 - var_chaste_interface__Force__N_0 - var_chaste_interface__Force__P_0 - var_chaste_interface__Force__P_1 - var_chaste_interface__Force__P_2 - var_chaste_interface__Force__P_3; // dimensionless
        const double var_Force__alpha_tm = 12600800629.436172 * pow(var_chaste_interface__troponin__Trpn_Ca, 5.1071428571428568); // per_second
        const double d_dt_chaste_interface_var_Force__N_0 = 0.040714285714285717 * var_Force__N_1 + 0.040000000000000001 * var_chaste_interface__Force__P_0 - 0.001 * var_chaste_interface__Force__N_0 * var_Force__alpha_tm; // 1 / millisecond

        return d_dt_chaste_interface_var_Force__N_0;
    }

    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluatePartialDerivative18(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__troponin__Trpn_Ca = rY[14];
            // Units: millimolar; Initial value: 0.00027661
            


            const double var_x290 = 12600800.629436173 * pow(var_chaste_interface__troponin__Trpn_Ca, 5.1071428571428568);
            const double var_x291 = -var_x290;
            
            partialF = -0.040714285714285717 + var_x291;
        }
        else
        {
            const double y_save = rY[18];
            rY[18] += delta;
            const double temp = EvaluateYDerivative18(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[18])/delta;
            rY[18] = y_save;
        }
        return partialF;
    }
    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluateYDerivative19(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__troponin__Trpn_Ca = rY[14];
        // Units: millimolar; Initial value: 0.00027661
        double var_chaste_interface__Force__N_0 = rY[18];
        // Units: dimensionless; Initial value: 0.99917
        double var_chaste_interface__Force__P_0 = rY[19];
        // Units: dimensionless; Initial value: 9.8593e-05
        double var_chaste_interface__Force__P_1 = rY[20];
        // Units: dimensionless; Initial value: 0.00013331
        


        // Mathematics
        const double var_Force__alpha_tm = 12600800629.436172 * pow(var_chaste_interface__troponin__Trpn_Ca, 5.1071428571428568); // per_second
        const double d_dt_chaste_interface_var_Force__P_0 = 0.040714285714285717 * var_chaste_interface__Force__P_1 - 0.070000000000000007 * var_chaste_interface__Force__P_0 + 0.001 * var_chaste_interface__Force__N_0 * var_Force__alpha_tm; // 1 / millisecond

        return d_dt_chaste_interface_var_Force__P_0;
    }

    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluatePartialDerivative19(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            


            
            partialF = -0.070000000000000007;
        }
        else
        {
            const double y_save = rY[19];
            rY[19] += delta;
            const double temp = EvaluateYDerivative19(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[19])/delta;
            rY[19] = y_save;
        }
        return partialF;
    }
    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluateYDerivative20(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__troponin__Trpn_Ca = rY[14];
        // Units: millimolar; Initial value: 0.00027661
        double var_chaste_interface__Force__N_0 = rY[18];
        // Units: dimensionless; Initial value: 0.99917
        double var_chaste_interface__Force__P_0 = rY[19];
        // Units: dimensionless; Initial value: 9.8593e-05
        double var_chaste_interface__Force__P_1 = rY[20];
        // Units: dimensionless; Initial value: 0.00013331
        double var_chaste_interface__Force__P_2 = rY[21];
        // Units: dimensionless; Initial value: 0.00023505
        double var_chaste_interface__Force__P_3 = rY[22];
        // Units: dimensionless; Initial value: 0.00015349
        


        // Mathematics
        const double var_Force__N_1 = 1.0 - var_chaste_interface__Force__N_0 - var_chaste_interface__Force__P_0 - var_chaste_interface__Force__P_1 - var_chaste_interface__Force__P_2 - var_chaste_interface__Force__P_3; // dimensionless
        const double var_Force__alpha_tm = 12600800629.436172 * pow(var_chaste_interface__troponin__Trpn_Ca, 5.1071428571428568); // per_second
        const double d_dt_chaste_interface_var_Force__P_1 = 0.081428571428571433 * var_chaste_interface__Force__P_2 + 0.029999999999999999 * var_chaste_interface__Force__P_0 - 0.18071428571428572 * var_chaste_interface__Force__P_1 + 0.001 * var_Force__N_1 * var_Force__alpha_tm; // 1 / millisecond

        return d_dt_chaste_interface_var_Force__P_1;
    }

    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluatePartialDerivative20(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__troponin__Trpn_Ca = rY[14];
            // Units: millimolar; Initial value: 0.00027661
            


            const double var_x290 = 12600800.629436173 * pow(var_chaste_interface__troponin__Trpn_Ca, 5.1071428571428568);
            const double var_x291 = -var_x290;
            
            partialF = -0.18071428571428572 + var_x291;
        }
        else
        {
            const double y_save = rY[20];
            rY[20] += delta;
            const double temp = EvaluateYDerivative20(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[20])/delta;
            rY[20] = y_save;
        }
        return partialF;
    }
    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluateYDerivative21(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Force__P_1 = rY[20];
        // Units: dimensionless; Initial value: 0.00013331
        double var_chaste_interface__Force__P_2 = rY[21];
        // Units: dimensionless; Initial value: 0.00023505
        double var_chaste_interface__Force__P_3 = rY[22];
        // Units: dimensionless; Initial value: 0.00015349
        


        // Mathematics
        const double d_dt_chaste_interface_var_Force__P_2 = 0.12214285714285715 * var_chaste_interface__Force__P_3 + 0.10000000000000001 * var_chaste_interface__Force__P_1 - 0.15142857142857144 * var_chaste_interface__Force__P_2; // 1 / millisecond

        return d_dt_chaste_interface_var_Force__P_2;
    }

    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluatePartialDerivative21(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            


            
            partialF = -0.15142857142857144;
        }
        else
        {
            const double y_save = rY[21];
            rY[21] += delta;
            const double temp = EvaluateYDerivative21(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[21])/delta;
            rY[21] = y_save;
        }
        return partialF;
    }
    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluateYDerivative22(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__Force__P_2 = rY[21];
        // Units: dimensionless; Initial value: 0.00023505
        double var_chaste_interface__Force__P_3 = rY[22];
        // Units: dimensionless; Initial value: 0.00015349
        


        // Mathematics
        const double d_dt_chaste_interface_var_Force__P_3 = 0.070000000000000007 * var_chaste_interface__Force__P_2 - 0.12214285714285715 * var_chaste_interface__Force__P_3; // 1 / millisecond

        return d_dt_chaste_interface_var_Force__P_3;
    }

    double Celliribe_model_2006FromCellMLGRL1Opt::EvaluatePartialDerivative22(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            


            
            partialF = -0.12214285714285715;
        }
        else
        {
            const double y_save = rY[22];
            rY[22] += delta;
            const double temp = EvaluateYDerivative22(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[22])/delta;
            rY[22] = y_save;
        }
        return partialF;
    }

    std::vector<double> Celliribe_model_2006FromCellMLGRL1Opt::ComputeDerivedQuantities(double var_chaste_interface__environment__time_converted, const std::vector<double> & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane_potential__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -92.849333
        double var_chaste_interface__intracellular_calcium_concentration__Ca_i = rY[1];
        // Units: millimolar; Initial value: 9.91e-06
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.0013809
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.99569
        double var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__x = rY[4];
        // Units: dimensionless; Initial value: 0.051127
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[5];
        // Units: dimensionless; Initial value: 0.95854
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[6];
        // Units: dimensionless; Initial value: 1.5185e-08
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[7];
        // Units: dimensionless; Initial value: 1.7908e-08
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[8];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__RyR__F_SRCa_RyR = rY[10];
        // Units: millimolar; Initial value: 0.25089
        double var_chaste_interface__RyR__F_2 = rY[12];
        // Units: dimensionless; Initial value: 8.7508e-06
        double var_chaste_interface__SR_calcium_concentration__Ca_SR = rY[15];
        // Units: millimolar; Initial value: 0.24886
        double var_chaste_interface__intracellular_sodium_concentration__Na_i = rY[16];
        // Units: millimolar; Initial value: 5.8041
        double var_chaste_interface__intracellular_potassium_concentration__K_i = rY[17];
        // Units: millimolar; Initial value: 138.22
        
        // Lookup table indexing
        const bool _oob_0 = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane_potential__V);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY , var_chaste_interface__environment__time_converted));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Celliribe_model_2006FromCellMLGRL1Opt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane_potential__V);

        // Mathematics
        const double var_L_type_Ca_channel_f_gate__speed_f = 0.5; // dimensionless
        const double var_RyR__F_rel = pow(var_chaste_interface__RyR__F_2, 2) / pow((0.25 + var_chaste_interface__RyR__F_2), 2); // dimensionless
        const double var_RyR__K_rel = var_chaste_interface__RyR__F_SRCa_RyR * mParameters[1] / (0.20000000000000001 + var_chaste_interface__RyR__F_SRCa_RyR); // per_second
        const double var_cell_parameters__F = 96485.341499999995; // coulomb_per_mole
        const double var_cell_parameters__R = 8314.4719999999998; // millijoule_per_mole_kelvin
        const double var_cell_parameters__T = 310.0; // kelvin
        const double var_RyR__j_rel = (-var_chaste_interface__intracellular_calcium_concentration__Ca_i + var_chaste_interface__SR_calcium_concentration__Ca_SR) * (var_RyR__F_rel * var_RyR__K_rel + mParameters[0]); // millimolar_per_second
        const double var_L_type_Ca_channel__i_Ca_L_Ca = ((fabs(-50.0 + var_chaste_interface__membrane_potential__V) < 1.3356880329551402e-6) ? (-374338.90823576227 * (-50.000001335688033 + var_chaste_interface__membrane_potential__V) * (-1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * exp(9.9999999997780743e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999997780743e-8)) - 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * exp(-9.9999999997780743e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) + 1.9999999999556149e-7 * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * exp(-9.9999999997780743e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999997780743e-8))) : (0.14973556329098189 * (-50.0 + var_chaste_interface__membrane_potential__V) * (var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp(3.7433890822745473) - mParameters[4] * _lt_0_row[2]) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[3]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_K = ((fabs(-50.0 + var_chaste_interface__membrane_potential__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane_potential__V) * (-1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * exp(9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 1.999999999997175e-10 * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (7.4867781645490941e-5 * (-50.0 + var_chaste_interface__membrane_potential__V) * (var_chaste_interface__intracellular_potassium_concentration__K_i * exp(1.8716945411372736) - mParameters[5] * _lt_0_row[0]) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[1]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_Na = ((fabs(-50.0 + var_chaste_interface__membrane_potential__V) < 2.6713760659657915e-6) ? (-187169.45411399176 * (-50.000002671376066 + var_chaste_interface__membrane_potential__V) * (-9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * exp(9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(9.9999999999858739e-8)) - 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) + 9.9999999999858744e-10 * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * exp(-9.9999999999858739e-8)) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (1.0 - exp(-9.9999999999858739e-8))) : (0.00037433890822745472 * (-50.0 + var_chaste_interface__membrane_potential__V) * (var_chaste_interface__intracellular_sodium_concentration__Na_i * exp(1.8716945411372736) - mParameters[6] * _lt_0_row[0]) * mParameters[7] * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f / (_lt_0_row[1]))); // nanoA
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_Ca_L_Ca + var_L_type_Ca_channel__i_Ca_L_K + var_L_type_Ca_channel__i_Ca_L_Na; // nanoA
        const double var_L_type_Ca_channel__i_Ca_L_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L / mParameters[8]; // uA_per_cm2
        const double var_L_type_Ca_channel_f_gate__alpha_f = _lt_0_row[10]; // per_second
        const double var_L_type_Ca_channel_f_gate__beta_f = 50.0 * var_L_type_Ca_channel_f_gate__speed_f / (_lt_0_row[11]); // per_second
        const double var_L_type_Ca_channel_f_gate__tau_f = 1 / (var_L_type_Ca_channel_f_gate__alpha_f + var_L_type_Ca_channel_f_gate__beta_f); // second
        const double var_fast_sodium_current_h_gate__alpha_h = 20.0 * exp(-9.375 + 0.125 * mParameters[12] - 0.125 * var_chaste_interface__membrane_potential__V); // per_second
        const double var_fast_sodium_current_h_gate__beta_h = 2000.0 / (1.0 + 320.0 * exp(-7.5 + 0.10000000000000001 * mParameters[12] - 0.10000000000000001 * var_chaste_interface__membrane_potential__V)); // per_second
        const double var_fast_sodium_current_h_gate__tau_h = 1 / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h); // second
        const double var_membrane_potential__i_Stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_reversal_potentials__E_K = var_cell_parameters__R * var_cell_parameters__T * log(mParameters[5] / var_chaste_interface__intracellular_potassium_concentration__K_i) / var_cell_parameters__F; // millivolt
        const double var_reversal_potentials__E_mh = var_cell_parameters__R * var_cell_parameters__T * log((mParameters[6] + 0.12 * mParameters[5]) / (var_chaste_interface__intracellular_sodium_concentration__Na_i + 0.12 * var_chaste_interface__intracellular_potassium_concentration__K_i)) / var_cell_parameters__F; // millivolt
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_reversal_potentials__E_mh + var_chaste_interface__membrane_potential__V) * mParameters[10] * var_chaste_interface__fast_sodium_current_h_gate__h; // nanoA
        const double var_fast_sodium_current__i_Na_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na / mParameters[8]; // uA_per_cm2
        const double var_sodium_calcium_exchanger__gamma = 0.5; // dimensionless
        const double var_sodium_calcium_exchanger__i_NaCa = (pow(var_chaste_interface__intracellular_sodium_concentration__Na_i, 3) * mParameters[4] * exp(var_cell_parameters__F * var_chaste_interface__membrane_potential__V * var_sodium_calcium_exchanger__gamma / (var_cell_parameters__R * var_cell_parameters__T)) - pow(mParameters[6], 3) * var_chaste_interface__intracellular_calcium_concentration__Ca_i * exp((-1.0 + var_sodium_calcium_exchanger__gamma) * var_cell_parameters__F * var_chaste_interface__membrane_potential__V / (var_cell_parameters__R * var_cell_parameters__T))) * mParameters[14] / (1.0 + 144.92753623188406 * var_chaste_interface__intracellular_calcium_concentration__Ca_i); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_sodium_calcium_exchanger__i_NaCa / mParameters[8]; // uA_per_cm2
        const double var_time_dependent_rectifier_potassium_current__i_K = 0.0071428571428571426 * (-mParameters[5] * exp(-var_cell_parameters__F * var_chaste_interface__membrane_potential__V / (var_cell_parameters__R * var_cell_parameters__T)) + var_chaste_interface__intracellular_potassium_concentration__K_i) * mParameters[9] * var_chaste_interface__time_dependent_rectifier_potassium_current_x_gate__x; // nanoA
        const double var_time_dependent_rectifier_potassium_current__i_K_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_time_dependent_rectifier_potassium_current__i_K / mParameters[8]; // uA_per_cm2
        const double var_time_independent_potassium_current__K_mk1 = 10.0; // millimolar
        const double var_time_independent_potassium_current__i_K1 = (-var_reversal_potentials__E_K + var_chaste_interface__membrane_potential__V) * mParameters[5] * mParameters[13] / ((1.0 + exp(2.0 * (-10.0 - var_reversal_potentials__E_K + var_chaste_interface__membrane_potential__V) * var_cell_parameters__F / (var_cell_parameters__R * var_cell_parameters__T))) * (mParameters[5] + var_time_independent_potassium_current__K_mk1)); // nanoA
        const double var_time_independent_potassium_current__i_K1_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_time_independent_potassium_current__i_K1 / mParameters[8]; // uA_per_cm2
        const double var_transient_outward_current__i_to = (-var_reversal_potentials__E_K + var_chaste_interface__membrane_potential__V) * mParameters[15] * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s; // nanoA
        const double var_transient_outward_current__i_to_converted = 0.001 * HeartConfig::Instance()->GetCapacitance() * var_transient_outward_current__i_to / mParameters[8]; // uA_per_cm2

        std::vector<double> dqs(11);
        dqs[0] = var_RyR__j_rel;
        dqs[1] = var_L_type_Ca_channel__i_Ca_L_converted;
        dqs[2] = var_L_type_Ca_channel_f_gate__tau_f;
        dqs[3] = var_time_dependent_rectifier_potassium_current__i_K_converted;
        dqs[4] = var_fast_sodium_current__i_Na_converted;
        dqs[5] = var_fast_sodium_current_h_gate__tau_h;
        dqs[6] = var_time_independent_potassium_current__i_K1_converted;
        dqs[7] = var_sodium_calcium_exchanger__i_NaCa_converted;
        dqs[8] = var_membrane_potential__i_Stim_converted;
        dqs[9] = var_transient_outward_current__i_to_converted;
        dqs[10] = var_chaste_interface__environment__time_converted;
        return dqs;
    }

template<>
void OdeSystemInformation<Celliribe_model_2006FromCellMLGRL1Opt>::Initialise(void)
{
    this->mSystemName = "iribe_model_2006";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-92.849333);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(9.91e-06);

    // rY[2]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0013809);

    // rY[3]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99569);

    // rY[4]:
    this->mVariableNames.push_back("time_dependent_rectifier_potassium_current_x_gate__x");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.051127);

    // rY[5]:
    this->mVariableNames.push_back("transient_outward_current_s_gate__s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.95854);

    // rY[6]:
    this->mVariableNames.push_back("transient_outward_current_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.5185e-08);

    // rY[7]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.7908e-08);

    // rY[8]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // rY[9]:
    this->mVariableNames.push_back("CaMKII_factor__F_CaMK");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.028);

    // rY[10]:
    this->mVariableNames.push_back("RyR__F_SRCa_RyR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.25089);

    // rY[11]:
    this->mVariableNames.push_back("RyR__F_1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.5268);

    // rY[12]:
    this->mVariableNames.push_back("RyR__F_2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.7508e-06);

    // rY[13]:
    this->mVariableNames.push_back("calmodulin__Cmdn_Ca");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(3.9636e-06);

    // rY[14]:
    this->mVariableNames.push_back("troponin__Trpn_Ca");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.00027661);

    // rY[15]:
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.24886);

    // rY[16]:
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(5.8041);

    // rY[17]:
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(138.22);

    // rY[18]:
    this->mVariableNames.push_back("Force__N_0");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99917);

    // rY[19]:
    this->mVariableNames.push_back("Force__P_0");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.8593e-05);

    // rY[20]:
    this->mVariableNames.push_back("Force__P_1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00013331);

    // rY[21]:
    this->mVariableNames.push_back("Force__P_2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00023505);

    // rY[22]:
    this->mVariableNames.push_back("Force__P_3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00015349);

    // mParameters[0]:
    this->mParameterNames.push_back("SR_leak_current_max");
    this->mParameterUnits.push_back("per_second");

    // mParameters[1]:
    this->mParameterNames.push_back("SR_release_current_max");
    this->mParameterUnits.push_back("per_second");

    // mParameters[2]:
    this->mParameterNames.push_back("SR_uptake_current_max");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[3]:
    this->mParameterNames.push_back("concentration_clamp_onoff");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[4]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[5]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[6]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("nanoA_per_millimolar");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_capacitance");
    this->mParameterUnits.push_back("microF");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("nanoA");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("microS");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_reduced_inactivation");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[12]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_shift_inactivation");
    this->mParameterUnits.push_back("millivolt");

    // mParameters[13]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("microS");

    // mParameters[14]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("nanoA_per_millimolar4");

    // mParameters[15]:
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
    this->mParameterUnits.push_back("microS");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("SR_release_current");
    this->mDerivedQuantityUnits.push_back("millimolar_per_second");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current_f_gate_tau");
    this->mDerivedQuantityUnits.push_back("second");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_h_gate_tau");
    this->mDerivedQuantityUnits.push_back("second");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [10]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Celliribe_model_2006FromCellMLGRL1Opt)

