//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: Corrias_rabbit_purkinje_model
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: GeneralizedRushLarsenFirstOrder)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "corrias_purkinje_2011.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"


    boost::shared_ptr<RegularStimulus> Cellcorrias_purkinje_2011FromCellMLGRL1::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_membrane__Cm_converted = 9.9999999999999995e-7 * mParameters[8]; // uF
        const double var_chaste_interface__membrane__stim_amplitude_converted = -0.0043200000000000001 * HeartConfig::Instance()->GetCapacitance() / var_membrane__Cm_converted; // uA_per_cm2
        const double var_chaste_interface__membrane__stim_duration = 0.5; // time_units
        const double var_chaste_interface__membrane__stim_period = 500.0; // time_units
        const double var_chaste_interface__membrane__stim_start = 10.0; // time_units
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__stim_amplitude_converted),
                var_chaste_interface__membrane__stim_duration,
                var_chaste_interface__membrane__stim_period,
                var_chaste_interface__membrane__stim_start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    double Cellcorrias_purkinje_2011FromCellMLGRL1::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    Cellcorrias_purkinje_2011FromCellMLGRL1::Cellcorrias_purkinje_2011FromCellMLGRL1(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractGeneralizedRushLarsenCardiacCell(
                22,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellcorrias_purkinje_2011FromCellMLGRL1>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        
        this->mParameters[0] = 10.0; // (var_i_leak__LEAK_max) [current_per_millimolar_units]
        this->mParameters[1] = 2500.0; // (var_i_rel_per__REL_max) [current_per_millimolar_units]
        this->mParameters[2] = 0.001; // (var_i_rel_per__Krel) [millimolar]
        this->mParameters[3] = 120.0; // (var_i_serca_per__SERCA_max) [current_units]
        this->mParameters[4] = 2.0; // (var_Environment__Ca_o) [millimolar]
        this->mParameters[5] = 5.4000000000000004; // (var_Environment__K_o) [millimolar]
        this->mParameters[6] = 140.0; // (var_Environment__Na_o) [millimolar]
        this->mParameters[7] = 5.4000000000000004; // (var_i_cal__G_max_Ltype) [conductance_units]
        this->mParameters[8] = 69.0; // (var_membrane__Cm) [capacitance_units]
        this->mParameters[9] = 1140.0; // (var_i_na_fast__G_max_na_fast) [conductance_units]
        this->mParameters[10] = 0; // (var_y_na_fast__shift_INa_inact) [voltage_units]
        this->mParameters[11] = 20.0; // (var_i_k1__G_max_k1) [conductance_units]
        this->mParameters[12] = 1.5; // (var_i_kr__G_max_kr) [conductance_units]
        this->mParameters[13] = 3.0; // (var_i_ks__G_max_ks) [conductance_units]
        this->mParameters[14] = 0.001; // (var_i_naca__g_NaCa) [current_units]
        this->mParameters[15] = 10.0; // (var_i_to_fast__G_max_to_fast) [conductance_units]
    }

    Cellcorrias_purkinje_2011FromCellMLGRL1::~Cellcorrias_purkinje_2011FromCellMLGRL1()
    {
    }

    
    double Cellcorrias_purkinje_2011FromCellMLGRL1::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: voltage_units; Initial value: -88.744
        double var_chaste_interface__membrane__Ca_i_peripheral = rY[2];
        // Units: millimolar; Initial value: 8.37523918148654e-06
        double var_chaste_interface__membrane__Na_i = rY[4];
        // Units: millimolar; Initial value: 6.75814832463522
        double var_chaste_interface__membrane__K_i = rY[5];
        // Units: millimolar; Initial value: 139.943221899032
        double var_chaste_interface__x_Ttype__x_Ttype = rY[6];
        // Units: dimensionless; Initial value: 0.00058439023999374
        double var_chaste_interface__y_Ttype__y_Ttype = rY[7];
        // Units: dimensionless; Initial value: 0.900843399895183
        double var_chaste_interface__x_Ltype__x_Ltype = rY[8];
        // Units: dimensionless; Initial value: 1.39762741967807e-06
        double var_chaste_interface__y_Ltype__y_Ltype = rY[9];
        // Units: dimensionless; Initial value: 0.762933565557978
        double var_chaste_interface__y_ca_Ltype__y_ca_Ltype = rY[10];
        // Units: dimensionless; Initial value: 0.990616705407034
        double var_chaste_interface__x_to_fast__x_to_fast = rY[11];
        // Units: dimensionless; Initial value: 2.39836311045441e-05
        double var_chaste_interface__y_to_fast__y_to_fast = rY[12];
        // Units: dimensionless; Initial value: 0.865769351306921
        double var_chaste_interface__x_na_fast__x_na_fast = rY[13];
        // Units: dimensionless; Initial value: 2.90568689212866e-06
        double var_chaste_interface__y_na_fast__y_na_fast = rY[14];
        // Units: dimensionless; Initial value: 0.993212025695132
        double var_chaste_interface__x_na_late__x_na_late = rY[15];
        // Units: dimensionless; Initial value: 7.9043398966996e-06
        double var_chaste_interface__y_na_late__y_na_late = rY[16];
        // Units: dimensionless; Initial value: 0.839555875175682
        double var_chaste_interface__y_kr__y_kr = rY[17];
        // Units: dimensionless; Initial value: 0.202112622607795
        double var_chaste_interface__x_ks__x_ks = rY[18];
        // Units: dimensionless; Initial value: 0.0147603344538846
        double var_chaste_interface__y_ks__y_ks = rY[19];
        // Units: dimensionless; Initial value: 0.0385082219915004
        double var_chaste_interface__y_gate_f_k__y_gate_f_k = rY[20];
        // Units: dimensionless; Initial value: 0.011099
        double var_chaste_interface__y_gate_f_na__y_gate_f_na = rY[21];
        // Units: dimensionless; Initial value: 0.011099
        
        const double var_Environment__F = 96485.341499999995; // F_units
        const double var_Environment__R = 8314.4719999999998; // R_units
        const double var_Environment__T = 310.0; // Temperature_units
        const double var_Environment__RToF = var_Environment__R * var_Environment__T / var_Environment__F; // voltage_units
        const double var_i_cab__G_max_cab = 0.0001; // conductance_units
        const double var_i_cat__G_max_Ttype = 0.90000000000000002; // conductance_units
        const double var_i_f_k__G_f_k = 0.18870967699999999; // conductance_units
        const double var_i_f_na__G_f_na = 0.045290323; // conductance_units
        const double var_i_kb__G_max_kb = 0.01; // conductance_units
        const double var_i_na_late__G_max_na_late = 2.0; // conductance_units
        const double var_i_nab__G_max_nab = 0.01; // conductance_units
        const double var_i_naca__d_NaCa = 0.001; // dimensionless
        const double var_i_naca__gamma = 0.5; // dimensionless
        const double var_i_naca__n_NaCa = 3.0; // dimensionless
        const double var_i_nak__g_nak = 442.19999999999999; // current_units
        const double var_i_pmca__Hpmca = 1.5; // dimensionless
        const double var_i_pmca__Kpmca = 0.0001; // millimolar
        const double var_i_pmca__PMCA_max = 5.0; // current_units
        const double var_i_to_sustained__G_max_to_sustained = 3.0; // conductance_units
        const double var_i_cab__E_ca = 0.5 * var_Environment__RToF * log(mParameters[4] / var_chaste_interface__membrane__Ca_i_peripheral); // voltage_units
        const double var_i_cal__E_Ca = 0.5 * var_Environment__RToF * log(mParameters[4] / var_chaste_interface__membrane__Ca_i_peripheral); // voltage_units
        const double var_i_cat__E_Ca = 0.5 * var_Environment__RToF * log(mParameters[4] / var_chaste_interface__membrane__Ca_i_peripheral); // voltage_units
        const double var_i_pmca__i_pmca = var_i_pmca__PMCA_max / (1.0 + pow((var_i_pmca__Kpmca / var_chaste_interface__membrane__Ca_i_peripheral), var_i_pmca__Hpmca)); // current_units
        const double var_membrane__Cm_converted = 9.9999999999999995e-7 * mParameters[8]; // uF
        const double var_i_f_k__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_k1__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_kb__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_kr__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_ks__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_to_fast__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_to_sustained__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_f_na__E_na = var_Environment__RToF * log(mParameters[6] / var_chaste_interface__membrane__Na_i); // voltage_units
        const double var_i_na_fast__E_na = var_Environment__RToF * log(mParameters[6] / var_chaste_interface__membrane__Na_i); // voltage_units
        const double var_i_na_late__E_na = var_Environment__RToF * log(mParameters[6] / var_chaste_interface__membrane__Na_i); // voltage_units
        const double var_i_nab__E_na = var_Environment__RToF * log(mParameters[6] / var_chaste_interface__membrane__Na_i); // voltage_units
        const double var_i_cab__i_cab = (-var_i_cab__E_ca + var_chaste_interface__membrane__Vm) * var_i_cab__G_max_cab; // current_units
        const double var_i_kb__i_kb = (-var_i_kb__E_k + var_chaste_interface__membrane__Vm) * var_i_kb__G_max_kb; // current_units
        const double var_i_nab__i_nab = (-var_i_nab__E_na + var_chaste_interface__membrane__Vm) * var_i_nab__G_max_nab; // current_units
        const double var_i_naca__i_naca = 512.00911320399996 * (pow(var_chaste_interface__membrane__Na_i, var_i_naca__n_NaCa) * mParameters[4] * exp((-2.0 + var_i_naca__n_NaCa) * var_i_naca__gamma * var_chaste_interface__membrane__Vm / var_Environment__RToF) - pow(mParameters[6], var_i_naca__n_NaCa) * var_chaste_interface__membrane__Ca_i_peripheral * exp((-1.0 + var_i_naca__gamma) * (-2.0 + var_i_naca__n_NaCa) * var_chaste_interface__membrane__Vm / var_Environment__RToF)) * mParameters[14] / ((1.0 + 144.92753623188406 * var_chaste_interface__membrane__Ca_i_peripheral) * (1.0 + (pow(mParameters[6], var_i_naca__n_NaCa) * var_chaste_interface__membrane__Ca_i_peripheral + pow(var_chaste_interface__membrane__Na_i, var_i_naca__n_NaCa) * mParameters[4]) * var_i_naca__d_NaCa)); // current_units
        const double var_i_naca__i_naca_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_naca__i_naca / var_membrane__Cm_converted; // uA_per_cm2
        const double var_x_k1__x_k1 = 1 / (1.0 + exp(9.1999999999999993 + 0.10000000000000001 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_i_k1__i_k1 = 0.25946870969507452 * pow(mParameters[5], 0.80000000000000004) * (-var_i_k1__E_k + var_chaste_interface__membrane__Vm) * mParameters[11] * var_x_k1__x_k1; // current_units
        const double var_i_k1__i_k1_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_k1__i_k1 / var_membrane__Cm_converted; // uA_per_cm2
        const double var_x_kr__x_kr = 1 / (1.0 + exp(1.4732142857142858 + 0.044642857142857144 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_x_nak__x_nak = 1 / (1.0 + exp(-1.7777777777777777 - 0.022222222222222223 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_x_to_sustained__x_to_sustained = 1 / (1.0 + exp(0.29411764705882354 - 0.058823529411764705 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_i_to_sustained__i_to_sustained = (-var_i_to_sustained__E_k + var_chaste_interface__membrane__Vm) * var_i_to_sustained__G_max_to_sustained * var_x_to_sustained__x_to_sustained; // current_units
        const double var_i_cat__i_cat = (-var_i_cat__E_Ca + var_chaste_interface__membrane__Vm) * var_i_cat__G_max_Ttype * var_chaste_interface__x_Ttype__x_Ttype * var_chaste_interface__y_Ttype__y_Ttype; // current_units
        const double var_i_cal__i_cal = (-var_i_cal__E_Ca + var_chaste_interface__membrane__Vm) * mParameters[7] * var_chaste_interface__x_Ltype__x_Ltype * var_chaste_interface__y_Ltype__y_Ltype * var_chaste_interface__y_ca_Ltype__y_ca_Ltype; // current_units
        const double var_i_cal__i_cal_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_cal__i_cal / var_membrane__Cm_converted; // uA_per_cm2
        const double var_i_f_k__i_f_k = (-var_i_f_k__E_k + var_chaste_interface__membrane__Vm) * var_i_f_k__G_f_k * var_chaste_interface__y_gate_f_k__y_gate_f_k; // current_units
        const double var_i_f_na__i_f_na = (-var_i_f_na__E_na + var_chaste_interface__membrane__Vm) * var_i_f_na__G_f_na * var_chaste_interface__y_gate_f_na__y_gate_f_na; // current_units
        const double var_i_kr__i_kr = 0.18518518518518517 * (-var_i_kr__E_k + var_chaste_interface__membrane__Vm) * mParameters[5] * mParameters[12] * var_x_kr__x_kr * var_chaste_interface__y_kr__y_kr; // current_units
        const double var_i_kr__i_kr_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_kr__i_kr / var_membrane__Cm_converted; // uA_per_cm2
        const double var_i_ks__i_ks = (-var_i_ks__E_k + var_chaste_interface__membrane__Vm) * mParameters[13] * var_chaste_interface__x_ks__x_ks * var_chaste_interface__y_ks__y_ks; // current_units
        const double var_i_ks__i_ks_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_ks__i_ks / var_membrane__Cm_converted; // uA_per_cm2
        const double var_i_na_fast__i_na_fast = (-var_i_na_fast__E_na + var_chaste_interface__membrane__Vm) * mParameters[9] * var_chaste_interface__x_na_fast__x_na_fast * var_chaste_interface__y_na_fast__y_na_fast; // current_units
        const double var_i_na_fast__i_na_fast_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_na_fast__i_na_fast / var_membrane__Cm_converted; // uA_per_cm2
        const double var_i_na_late__i_na_late = (-var_i_na_late__E_na + var_chaste_interface__membrane__Vm) * var_i_na_late__G_max_na_late * var_chaste_interface__x_na_late__x_na_late * var_chaste_interface__y_na_late__y_na_late; // current_units
        const double var_y_nak__y_nak = 1 / (1.0 + exp(0.0080000000000000002 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_i_nak__i_nak = var_i_nak__g_nak * var_x_nak__x_nak * var_y_nak__y_nak / ((1.0 + 31.98 / var_chaste_interface__membrane__Na_i) * (1.0 + 2.536253862184366 * pow((1 / mParameters[5]), 1.45))); // current_units
        const double var_i_to_fast__i_to_fast = (-var_i_to_fast__E_k + var_chaste_interface__membrane__Vm) * mParameters[15] * var_chaste_interface__x_to_fast__x_to_fast * var_chaste_interface__y_to_fast__y_to_fast; // current_units
        const double var_i_to_fast__i_to_fast_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_to_fast__i_to_fast / var_membrane__Cm_converted; // uA_per_cm2
        const double var_chaste_interface__i_ionic = ((var_i_cal__i_cal_converted + var_i_k1__i_k1_converted + var_i_kr__i_kr_converted + var_i_ks__i_ks_converted + var_i_na_fast__i_na_fast_converted + var_i_naca__i_naca_converted + var_i_to_fast__i_to_fast_converted) * var_membrane__Cm_converted + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_cab__i_cab + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_cat__i_cat + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_f_k__i_f_k + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_f_na__i_f_na + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_kb__i_kb + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_na_late__i_na_late + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_nab__i_nab + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_nak__i_nak + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_pmca__i_pmca + 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_to_sustained__i_to_sustained) / var_membrane__Cm_converted; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellcorrias_purkinje_2011FromCellMLGRL1::UpdateTransmembranePotential(double var_chaste_interface__Time__time)
    {
        std::vector<double>& rY = rGetStateVariables();
        unsigned v_index = GetVoltageIndex();
        const double delta = 1e-8;

        double d_dt_chaste_interface_var_membrane__Vm;
        double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: voltage_units; Initial value: -88.744
        double var_chaste_interface__membrane__Ca_i_peripheral = rY[2];
        // Units: millimolar; Initial value: 8.37523918148654e-06
        double var_chaste_interface__membrane__Na_i = rY[4];
        // Units: millimolar; Initial value: 6.75814832463522
        double var_chaste_interface__membrane__K_i = rY[5];
        // Units: millimolar; Initial value: 139.943221899032
        double var_chaste_interface__x_Ttype__x_Ttype = rY[6];
        // Units: dimensionless; Initial value: 0.00058439023999374
        double var_chaste_interface__y_Ttype__y_Ttype = rY[7];
        // Units: dimensionless; Initial value: 0.900843399895183
        double var_chaste_interface__x_Ltype__x_Ltype = rY[8];
        // Units: dimensionless; Initial value: 1.39762741967807e-06
        double var_chaste_interface__y_Ltype__y_Ltype = rY[9];
        // Units: dimensionless; Initial value: 0.762933565557978
        double var_chaste_interface__y_ca_Ltype__y_ca_Ltype = rY[10];
        // Units: dimensionless; Initial value: 0.990616705407034
        double var_chaste_interface__x_to_fast__x_to_fast = rY[11];
        // Units: dimensionless; Initial value: 2.39836311045441e-05
        double var_chaste_interface__y_to_fast__y_to_fast = rY[12];
        // Units: dimensionless; Initial value: 0.865769351306921
        double var_chaste_interface__x_na_fast__x_na_fast = rY[13];
        // Units: dimensionless; Initial value: 2.90568689212866e-06
        double var_chaste_interface__y_na_fast__y_na_fast = rY[14];
        // Units: dimensionless; Initial value: 0.993212025695132
        double var_chaste_interface__x_na_late__x_na_late = rY[15];
        // Units: dimensionless; Initial value: 7.9043398966996e-06
        double var_chaste_interface__y_na_late__y_na_late = rY[16];
        // Units: dimensionless; Initial value: 0.839555875175682
        double var_chaste_interface__y_kr__y_kr = rY[17];
        // Units: dimensionless; Initial value: 0.202112622607795
        double var_chaste_interface__x_ks__x_ks = rY[18];
        // Units: dimensionless; Initial value: 0.0147603344538846
        double var_chaste_interface__y_ks__y_ks = rY[19];
        // Units: dimensionless; Initial value: 0.0385082219915004
        double var_chaste_interface__y_gate_f_k__y_gate_f_k = rY[20];
        // Units: dimensionless; Initial value: 0.011099
        double var_chaste_interface__y_gate_f_na__y_gate_f_na = rY[21];
        // Units: dimensionless; Initial value: 0.011099
        

        // Mathematics
        const double var_Environment__F = 96485.341499999995; // F_units
        const double var_Environment__R = 8314.4719999999998; // R_units
        const double var_Environment__T = 310.0; // Temperature_units
        const double var_Environment__RToF = var_Environment__R * var_Environment__T / var_Environment__F; // voltage_units
        const double var_i_cab__G_max_cab = 0.0001; // conductance_units
        const double var_i_cat__G_max_Ttype = 0.90000000000000002; // conductance_units
        const double var_i_f_k__G_f_k = 0.18870967699999999; // conductance_units
        const double var_i_f_na__G_f_na = 0.045290323; // conductance_units
        const double var_i_kb__G_max_kb = 0.01; // conductance_units
        const double var_i_na_late__G_max_na_late = 2.0; // conductance_units
        const double var_i_nab__G_max_nab = 0.01; // conductance_units
        const double var_i_naca__d_NaCa = 0.001; // dimensionless
        const double var_i_naca__gamma = 0.5; // dimensionless
        const double var_i_naca__n_NaCa = 3.0; // dimensionless
        const double var_i_nak__g_nak = 442.19999999999999; // current_units
        const double var_i_pmca__Hpmca = 1.5; // dimensionless
        const double var_i_pmca__Kpmca = 0.0001; // millimolar
        const double var_i_pmca__PMCA_max = 5.0; // current_units
        const double var_i_to_sustained__G_max_to_sustained = 3.0; // conductance_units
        const double var_i_cab__E_ca = 0.5 * var_Environment__RToF * log(mParameters[4] / var_chaste_interface__membrane__Ca_i_peripheral); // voltage_units
        const double var_i_cal__E_Ca = 0.5 * var_Environment__RToF * log(mParameters[4] / var_chaste_interface__membrane__Ca_i_peripheral); // voltage_units
        const double var_i_cat__E_Ca = 0.5 * var_Environment__RToF * log(mParameters[4] / var_chaste_interface__membrane__Ca_i_peripheral); // voltage_units
        const double var_i_pmca__i_pmca = var_i_pmca__PMCA_max / (1.0 + pow((var_i_pmca__Kpmca / var_chaste_interface__membrane__Ca_i_peripheral), var_i_pmca__Hpmca)); // current_units
        const double var_membrane__Cm_converted = 9.9999999999999995e-7 * mParameters[8]; // uF
        const double var_i_f_k__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_k1__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_kb__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_kr__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_ks__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_to_fast__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_to_sustained__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_f_na__E_na = var_Environment__RToF * log(mParameters[6] / var_chaste_interface__membrane__Na_i); // voltage_units
        const double var_i_na_fast__E_na = var_Environment__RToF * log(mParameters[6] / var_chaste_interface__membrane__Na_i); // voltage_units
        const double var_i_na_late__E_na = var_Environment__RToF * log(mParameters[6] / var_chaste_interface__membrane__Na_i); // voltage_units
        const double var_i_nab__E_na = var_Environment__RToF * log(mParameters[6] / var_chaste_interface__membrane__Na_i); // voltage_units
        const double var_i_cab__i_cab = (-var_i_cab__E_ca + var_chaste_interface__membrane__Vm) * var_i_cab__G_max_cab; // current_units
        const double var_i_kb__i_kb = (-var_i_kb__E_k + var_chaste_interface__membrane__Vm) * var_i_kb__G_max_kb; // current_units
        const double var_i_nab__i_nab = (-var_i_nab__E_na + var_chaste_interface__membrane__Vm) * var_i_nab__G_max_nab; // current_units
        const double var_i_naca__i_naca = 512.00911320399996 * (pow(var_chaste_interface__membrane__Na_i, var_i_naca__n_NaCa) * mParameters[4] * exp((-2.0 + var_i_naca__n_NaCa) * var_i_naca__gamma * var_chaste_interface__membrane__Vm / var_Environment__RToF) - pow(mParameters[6], var_i_naca__n_NaCa) * var_chaste_interface__membrane__Ca_i_peripheral * exp((-1.0 + var_i_naca__gamma) * (-2.0 + var_i_naca__n_NaCa) * var_chaste_interface__membrane__Vm / var_Environment__RToF)) * mParameters[14] / ((1.0 + 144.92753623188406 * var_chaste_interface__membrane__Ca_i_peripheral) * (1.0 + (pow(mParameters[6], var_i_naca__n_NaCa) * var_chaste_interface__membrane__Ca_i_peripheral + pow(var_chaste_interface__membrane__Na_i, var_i_naca__n_NaCa) * mParameters[4]) * var_i_naca__d_NaCa)); // current_units
        const double var_membrane__i_stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__Time__time); // uA_per_cm2
        const double var_membrane__i_stim = 1000000.0 * var_membrane__Cm_converted * var_membrane__i_stim_converted / HeartConfig::Instance()->GetCapacitance(); // current_units
        const double var_x_k1__x_k1 = 1 / (1.0 + exp(9.1999999999999993 + 0.10000000000000001 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_i_k1__i_k1 = 0.25946870969507452 * pow(mParameters[5], 0.80000000000000004) * (-var_i_k1__E_k + var_chaste_interface__membrane__Vm) * mParameters[11] * var_x_k1__x_k1; // current_units
        const double var_x_kr__x_kr = 1 / (1.0 + exp(1.4732142857142858 + 0.044642857142857144 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_x_nak__x_nak = 1 / (1.0 + exp(-1.7777777777777777 - 0.022222222222222223 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_x_to_sustained__x_to_sustained = 1 / (1.0 + exp(0.29411764705882354 - 0.058823529411764705 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_i_to_sustained__i_to_sustained = (-var_i_to_sustained__E_k + var_chaste_interface__membrane__Vm) * var_i_to_sustained__G_max_to_sustained * var_x_to_sustained__x_to_sustained; // current_units
        const double var_i_cat__i_cat = (-var_i_cat__E_Ca + var_chaste_interface__membrane__Vm) * var_i_cat__G_max_Ttype * var_chaste_interface__x_Ttype__x_Ttype * var_chaste_interface__y_Ttype__y_Ttype; // current_units
        const double var_i_cal__i_cal = (-var_i_cal__E_Ca + var_chaste_interface__membrane__Vm) * mParameters[7] * var_chaste_interface__x_Ltype__x_Ltype * var_chaste_interface__y_Ltype__y_Ltype * var_chaste_interface__y_ca_Ltype__y_ca_Ltype; // current_units
        const double var_i_f_k__i_f_k = (-var_i_f_k__E_k + var_chaste_interface__membrane__Vm) * var_i_f_k__G_f_k * var_chaste_interface__y_gate_f_k__y_gate_f_k; // current_units
        const double var_i_f_na__i_f_na = (-var_i_f_na__E_na + var_chaste_interface__membrane__Vm) * var_i_f_na__G_f_na * var_chaste_interface__y_gate_f_na__y_gate_f_na; // current_units
        const double var_i_kr__i_kr = 0.18518518518518517 * (-var_i_kr__E_k + var_chaste_interface__membrane__Vm) * mParameters[5] * mParameters[12] * var_x_kr__x_kr * var_chaste_interface__y_kr__y_kr; // current_units
        const double var_i_ks__i_ks = (-var_i_ks__E_k + var_chaste_interface__membrane__Vm) * mParameters[13] * var_chaste_interface__x_ks__x_ks * var_chaste_interface__y_ks__y_ks; // current_units
        const double var_i_na_fast__i_na_fast = (-var_i_na_fast__E_na + var_chaste_interface__membrane__Vm) * mParameters[9] * var_chaste_interface__x_na_fast__x_na_fast * var_chaste_interface__y_na_fast__y_na_fast; // current_units
        const double var_i_na_late__i_na_late = (-var_i_na_late__E_na + var_chaste_interface__membrane__Vm) * var_i_na_late__G_max_na_late * var_chaste_interface__x_na_late__x_na_late * var_chaste_interface__y_na_late__y_na_late; // current_units
        const double var_y_nak__y_nak = 1 / (1.0 + exp(0.0080000000000000002 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_i_nak__i_nak = var_i_nak__g_nak * var_x_nak__x_nak * var_y_nak__y_nak / ((1.0 + 31.98 / var_chaste_interface__membrane__Na_i) * (1.0 + 2.536253862184366 * pow((1 / mParameters[5]), 1.45))); // current_units
        const double var_i_to_fast__i_to_fast = (-var_i_to_fast__E_k + var_chaste_interface__membrane__Vm) * mParameters[15] * var_chaste_interface__x_to_fast__x_to_fast * var_chaste_interface__y_to_fast__y_to_fast; // current_units
        d_dt_chaste_interface_var_membrane__Vm = -(var_i_cab__i_cab + var_i_cal__i_cal + var_i_cat__i_cat + var_i_f_k__i_f_k + var_i_f_na__i_f_na + var_i_k1__i_k1 + var_i_kb__i_kb + var_i_kr__i_kr + var_i_ks__i_ks + var_i_na_fast__i_na_fast + var_i_na_late__i_na_late + var_i_nab__i_nab + var_i_naca__i_naca + var_i_nak__i_nak + var_i_pmca__i_pmca + var_i_to_fast__i_to_fast + var_i_to_sustained__i_to_sustained + var_membrane__i_stim) / mParameters[8]; // voltage_units / time_units

        double evalF = d_dt_chaste_interface_var_membrane__Vm;
        mEvalF[0] = d_dt_chaste_interface_var_membrane__Vm;
        double partialF = EvaluatePartialDerivative0(var_chaste_interface__Time__time, rY, delta, true);
        if (fabs(partialF) < delta)
        {
            rY[v_index] += evalF*mDt;
        }
        else
        {
            rY[v_index] += (evalF/partialF)*(exp(partialF*mDt)-1.0);
        }
    }

    void Cellcorrias_purkinje_2011FromCellMLGRL1::ComputeOneStepExceptVoltage(double var_chaste_interface__Time__time)
    {
        std::vector<double>& rY = rGetStateVariables();
        const double delta = 1e-8;

        double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: voltage_units; Initial value: -88.744
        double var_chaste_interface__membrane__Ca_i_bulk = rY[1];
        // Units: millimolar; Initial value: 3.09001620863236e-05
        double var_chaste_interface__membrane__Ca_i_peripheral = rY[2];
        // Units: millimolar; Initial value: 8.37523918148654e-06
        double var_chaste_interface__membrane__Ca_sr = rY[3];
        // Units: millimolar; Initial value: 0.1607
        double var_chaste_interface__membrane__Na_i = rY[4];
        // Units: millimolar; Initial value: 6.75814832463522
        double var_chaste_interface__membrane__K_i = rY[5];
        // Units: millimolar; Initial value: 139.943221899032
        double var_chaste_interface__x_Ttype__x_Ttype = rY[6];
        // Units: dimensionless; Initial value: 0.00058439023999374
        double var_chaste_interface__y_Ttype__y_Ttype = rY[7];
        // Units: dimensionless; Initial value: 0.900843399895183
        double var_chaste_interface__x_Ltype__x_Ltype = rY[8];
        // Units: dimensionless; Initial value: 1.39762741967807e-06
        double var_chaste_interface__y_Ltype__y_Ltype = rY[9];
        // Units: dimensionless; Initial value: 0.762933565557978
        double var_chaste_interface__y_ca_Ltype__y_ca_Ltype = rY[10];
        // Units: dimensionless; Initial value: 0.990616705407034
        double var_chaste_interface__x_to_fast__x_to_fast = rY[11];
        // Units: dimensionless; Initial value: 2.39836311045441e-05
        double var_chaste_interface__y_to_fast__y_to_fast = rY[12];
        // Units: dimensionless; Initial value: 0.865769351306921
        double var_chaste_interface__x_na_fast__x_na_fast = rY[13];
        // Units: dimensionless; Initial value: 2.90568689212866e-06
        double var_chaste_interface__y_na_fast__y_na_fast = rY[14];
        // Units: dimensionless; Initial value: 0.993212025695132
        double var_chaste_interface__x_na_late__x_na_late = rY[15];
        // Units: dimensionless; Initial value: 7.9043398966996e-06
        double var_chaste_interface__y_na_late__y_na_late = rY[16];
        // Units: dimensionless; Initial value: 0.839555875175682
        double var_chaste_interface__y_kr__y_kr = rY[17];
        // Units: dimensionless; Initial value: 0.202112622607795
        double var_chaste_interface__x_ks__x_ks = rY[18];
        // Units: dimensionless; Initial value: 0.0147603344538846
        double var_chaste_interface__y_ks__y_ks = rY[19];
        // Units: dimensionless; Initial value: 0.0385082219915004
        double var_chaste_interface__y_gate_f_k__y_gate_f_k = rY[20];
        // Units: dimensionless; Initial value: 0.011099
        double var_chaste_interface__y_gate_f_na__y_gate_f_na = rY[21];
        // Units: dimensionless; Initial value: 0.011099
        

        // Mathematics
        const double var_Environment__F = 96485.341499999995; // F_units
        const double var_Environment__R = 8314.4719999999998; // R_units
        const double var_Environment__T = 310.0; // Temperature_units
        const double var_Environment__RToF = var_Environment__R * var_Environment__T / var_Environment__F; // voltage_units
        const double var_i_cab__G_max_cab = 0.0001; // conductance_units
        const double var_i_cat__G_max_Ttype = 0.90000000000000002; // conductance_units
        const double var_i_diff__DIFF_max = 5000.0; // current_per_millimolar_units
        const double var_i_f_k__G_f_k = 0.18870967699999999; // conductance_units
        const double var_i_f_na__G_f_na = 0.045290323; // conductance_units
        const double var_i_kb__G_max_kb = 0.01; // conductance_units
        const double var_i_na_late__G_max_na_late = 2.0; // conductance_units
        const double var_i_nab__G_max_nab = 0.01; // conductance_units
        const double var_i_naca__d_NaCa = 0.001; // dimensionless
        const double var_i_naca__gamma = 0.5; // dimensionless
        const double var_i_naca__n_NaCa = 3.0; // dimensionless
        const double var_i_nak__g_nak = 442.19999999999999; // current_units
        const double var_i_pmca__Hpmca = 1.5; // dimensionless
        const double var_i_pmca__Kpmca = 0.0001; // millimolar
        const double var_i_pmca__PMCA_max = 5.0; // current_units
        const double var_i_serca_bulk__H = 1.6000000000000001; // dimensionless
        const double var_i_serca_bulk__Kmf = 0.00024600000000000002; // millimolar
        const double var_i_serca_bulk__Kmr = 1.7; // millimolar
        const double var_i_serca_per__H = 1.6000000000000001; // dimensionless
        const double var_i_serca_per__Kmf = 0.00024600000000000002; // millimolar
        const double var_i_serca_per__Kmr = 1.7; // millimolar
        const double var_i_to_sustained__G_max_to_sustained = 3.0; // conductance_units
        const double var_i_cab__E_ca = 0.5 * var_Environment__RToF * log(mParameters[4] / var_chaste_interface__membrane__Ca_i_peripheral); // voltage_units
        const double var_i_cal__E_Ca = 0.5 * var_Environment__RToF * log(mParameters[4] / var_chaste_interface__membrane__Ca_i_peripheral); // voltage_units
        const double var_i_cat__E_Ca = 0.5 * var_Environment__RToF * log(mParameters[4] / var_chaste_interface__membrane__Ca_i_peripheral); // voltage_units
        const double var_i_diff__i_diff = (-var_chaste_interface__membrane__Ca_i_bulk + var_chaste_interface__membrane__Ca_i_peripheral) * var_i_diff__DIFF_max; // current_units
        const double var_i_pmca__i_pmca = var_i_pmca__PMCA_max / (1.0 + pow((var_i_pmca__Kpmca / var_chaste_interface__membrane__Ca_i_peripheral), var_i_pmca__Hpmca)); // current_units
        const double var_i_leak__i_leak = (-var_chaste_interface__membrane__Ca_i_bulk + var_chaste_interface__membrane__Ca_sr) * mParameters[0]; // current_units
        const double var_i_rel_per__i_rel_per = mParameters[1] * var_chaste_interface__membrane__Ca_sr / (1.0 + pow(mParameters[2], 2) / pow(var_chaste_interface__membrane__Ca_i_peripheral, 2)); // current_units
        const double var_i_serca_bulk__i_serca_bulk = (pow((var_chaste_interface__membrane__Ca_i_bulk / var_i_serca_bulk__Kmf), var_i_serca_bulk__H) - pow((var_chaste_interface__membrane__Ca_sr / var_i_serca_bulk__Kmr), var_i_serca_bulk__H)) * mParameters[3] / (1.0 + pow((var_chaste_interface__membrane__Ca_i_bulk / var_i_serca_bulk__Kmf), var_i_serca_bulk__H) + pow((var_chaste_interface__membrane__Ca_sr / var_i_serca_bulk__Kmr), var_i_serca_bulk__H)); // current_units
        const double var_i_serca_per__i_serca_per = (pow((var_chaste_interface__membrane__Ca_i_peripheral / var_i_serca_per__Kmf), var_i_serca_per__H) - pow((var_chaste_interface__membrane__Ca_sr / var_i_serca_per__Kmr), var_i_serca_per__H)) * mParameters[3] / (1.0 + pow((var_chaste_interface__membrane__Ca_i_peripheral / var_i_serca_per__Kmf), var_i_serca_per__H) + pow((var_chaste_interface__membrane__Ca_sr / var_i_serca_per__Kmr), var_i_serca_per__H)); // current_units
        const double var_membrane__Cm_converted = 9.9999999999999995e-7 * mParameters[8]; // uF
        const double var_i_f_k__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_k1__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_kb__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_kr__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_ks__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_to_fast__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_to_sustained__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_f_na__E_na = var_Environment__RToF * log(mParameters[6] / var_chaste_interface__membrane__Na_i); // voltage_units
        const double var_i_na_fast__E_na = var_Environment__RToF * log(mParameters[6] / var_chaste_interface__membrane__Na_i); // voltage_units
        const double var_i_na_late__E_na = var_Environment__RToF * log(mParameters[6] / var_chaste_interface__membrane__Na_i); // voltage_units
        const double var_i_nab__E_na = var_Environment__RToF * log(mParameters[6] / var_chaste_interface__membrane__Na_i); // voltage_units
        const double var_i_cab__i_cab = (-var_i_cab__E_ca + var_chaste_interface__membrane__Vm) * var_i_cab__G_max_cab; // current_units
        const double var_i_kb__i_kb = (-var_i_kb__E_k + var_chaste_interface__membrane__Vm) * var_i_kb__G_max_kb; // current_units
        const double var_i_nab__i_nab = (-var_i_nab__E_na + var_chaste_interface__membrane__Vm) * var_i_nab__G_max_nab; // current_units
        const double var_i_naca__i_naca = 512.00911320399996 * (pow(var_chaste_interface__membrane__Na_i, var_i_naca__n_NaCa) * mParameters[4] * exp((-2.0 + var_i_naca__n_NaCa) * var_i_naca__gamma * var_chaste_interface__membrane__Vm / var_Environment__RToF) - pow(mParameters[6], var_i_naca__n_NaCa) * var_chaste_interface__membrane__Ca_i_peripheral * exp((-1.0 + var_i_naca__gamma) * (-2.0 + var_i_naca__n_NaCa) * var_chaste_interface__membrane__Vm / var_Environment__RToF)) * mParameters[14] / ((1.0 + 144.92753623188406 * var_chaste_interface__membrane__Ca_i_peripheral) * (1.0 + (pow(mParameters[6], var_i_naca__n_NaCa) * var_chaste_interface__membrane__Ca_i_peripheral + pow(var_chaste_interface__membrane__Na_i, var_i_naca__n_NaCa) * mParameters[4]) * var_i_naca__d_NaCa)); // current_units
        const double var_membrane__bulk_fraction = 0.59999999999999998; // dimensionless
        const double var_membrane__cell_volume = 13266.5; // volume_units
        const double var_membrane__bulk_volume = var_membrane__bulk_fraction * var_membrane__cell_volume; // volume_units
        const double d_dt_chaste_interface_var_membrane__Ca_i_bulk = 500.0 * (-var_i_serca_bulk__i_serca_bulk + var_i_diff__i_diff + var_i_leak__i_leak) / (var_Environment__F * var_membrane__bulk_volume); // millimolar / time_units
        const double var_membrane__i_stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__Time__time); // uA_per_cm2
        const double var_membrane__i_stim = 1000000.0 * var_membrane__Cm_converted * var_membrane__i_stim_converted / HeartConfig::Instance()->GetCapacitance(); // current_units
        const double var_membrane__periphery_fraction = 0.20000000000000001; // dimensionless
        const double var_membrane__diffusable_volume = (var_membrane__bulk_fraction + var_membrane__periphery_fraction) * var_membrane__cell_volume; // volume_units
        const double var_membrane__peripheral_volume = var_membrane__cell_volume * var_membrane__periphery_fraction; // volume_units
        const double var_membrane__sr_fraction = 0.059999999999999998; // dimensionless
        const double var_membrane__sr_volume = var_membrane__cell_volume * var_membrane__sr_fraction; // volume_units
        const double d_dt_chaste_interface_var_membrane__Ca_sr = 500.0 * (-var_i_leak__i_leak - var_i_rel_per__i_rel_per + var_i_serca_bulk__i_serca_bulk + var_i_serca_per__i_serca_per) / (var_Environment__F * var_membrane__sr_volume); // millimolar / time_units
        const double var_x_Ltype__tau_x_Ltype = 0.69999999999999996; // time_units
        const double var_x_Ltype__x_inf_Ltype = 1 / (1.0 + exp(-2.6545454545454543 - 0.18181818181818182 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double d_dt_chaste_interface_var_x_Ltype__x_Ltype = (-var_chaste_interface__x_Ltype__x_Ltype + var_x_Ltype__x_inf_Ltype) / var_x_Ltype__tau_x_Ltype; // 1 / time_units
        const double var_x_Ttype__tau_x_Ttype = 1.0; // time_units
        const double var_x_Ttype__x_inf_Ttype = 1 / (1.0 + exp(-8.6909090909090896 - 0.18181818181818182 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double d_dt_chaste_interface_var_x_Ttype__x_Ttype = (-var_chaste_interface__x_Ttype__x_Ttype + var_x_Ttype__x_inf_Ttype) / var_x_Ttype__tau_x_Ttype; // 1 / time_units
        const double var_x_k1__x_k1 = 1 / (1.0 + exp(9.1999999999999993 + 0.10000000000000001 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_i_k1__i_k1 = 0.25946870969507452 * pow(mParameters[5], 0.80000000000000004) * (-var_i_k1__E_k + var_chaste_interface__membrane__Vm) * mParameters[11] * var_x_k1__x_k1; // current_units
        const double var_x_kr__x_kr = 1 / (1.0 + exp(1.4732142857142858 + 0.044642857142857144 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_x_ks__tau_x_ks = ((fabs(30.0 + var_chaste_interface__membrane__Vm) < 1.455604075689676e-6) ? (1 / (-1.0465793304208771e-10 / (1.0 - exp(2.1542940320207204e-7)) - 1.9068413391534758e-10 / (-1.0 + exp(-9.9999999999880736e-8)) + 343500.00000040967 * (30.000001455604075 + var_chaste_interface__membrane__Vm) * (1.0465793304208771e-10 / (1.0 - exp(2.1542940320207204e-7)) + 1.0465793304208771e-10 / (1.0 - exp(-2.1542940320207204e-7)) + 1.9068413391534758e-10 / (-1.0 + exp(9.9999999999880736e-8)) + 1.9068413391534758e-10 / (-1.0 + exp(-9.9999999999880736e-8))))) : (1 / (0.00013100000000000001 * (30.0 + var_chaste_interface__membrane__Vm) / (-1.0 + exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__Vm)) + 7.1899999999999999e-5 * (30.0 + var_chaste_interface__membrane__Vm) / (1.0 - exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__Vm))))); // time_units
        const double var_x_ks__x_inf_ks = 1 / (1.0 + exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double d_dt_chaste_interface_var_x_ks__x_ks = (-var_chaste_interface__x_ks__x_ks + var_x_ks__x_inf_ks) / var_x_ks__tau_x_ks; // 1 / time_units
        const double var_x_na_fast__tau_x_na_fast = 0.0050000000000000001; // time_units
        const double var_x_na_fast__x_inf_na_fast = 1 / (1.0 + exp(-5.0 - 0.20000000000000001 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double d_dt_chaste_interface_var_x_na_fast__x_na_fast = (-var_chaste_interface__x_na_fast__x_na_fast + var_x_na_fast__x_inf_na_fast) / var_x_na_fast__tau_x_na_fast; // 1 / time_units
        const double var_x_na_late__tau_x_na_late = 15.0; // time_units
        const double var_x_na_late__x_inf_na_late = 1 / (1.0 + exp(-6.0 - 0.20000000000000001 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double d_dt_chaste_interface_var_x_na_late__x_na_late = (-var_chaste_interface__x_na_late__x_na_late + var_x_na_late__x_inf_na_late) / var_x_na_late__tau_x_na_late; // 1 / time_units
        const double var_x_nak__x_nak = 1 / (1.0 + exp(-1.7777777777777777 - 0.022222222222222223 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_x_to_fast__tau_x_to_fast = 5.0; // time_units
        const double var_x_to_fast__x_inf_to_fast = 1 / (1.0 + exp(0.77777777777777779 - 0.1111111111111111 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double d_dt_chaste_interface_var_x_to_fast__x_to_fast = (-var_chaste_interface__x_to_fast__x_to_fast + var_x_to_fast__x_inf_to_fast) / var_x_to_fast__tau_x_to_fast; // 1 / time_units
        const double var_x_to_sustained__x_to_sustained = 1 / (1.0 + exp(0.29411764705882354 - 0.058823529411764705 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_i_to_sustained__i_to_sustained = (-var_i_to_sustained__E_k + var_chaste_interface__membrane__Vm) * var_i_to_sustained__G_max_to_sustained * var_x_to_sustained__x_to_sustained; // current_units
        const double var_y_Ltype__tau_y_Ltype = 25.100000000000001 / (0.040000000000000001 + 0.69999999999999996 * exp(-0.16483600000000001 * pow((1 + 0.068965517241379309 * var_chaste_interface__membrane__Vm), 2))); // time_units
        const double var_y_Ltype__y_inf_Ltype = 1 / (1.0 + exp(5.5956678700361007 + 0.18050541516245489 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double d_dt_chaste_interface_var_y_Ltype__y_Ltype = (-var_chaste_interface__y_Ltype__y_Ltype + var_y_Ltype__y_inf_Ltype) / var_y_Ltype__tau_y_Ltype; // 1 / time_units
        const double var_y_Ttype__tau_y_Ttype = 1.4227099999999999 * exp(-0.051189999999999999 * var_chaste_interface__membrane__Vm); // time_units
        const double var_i_cat__i_cat = (-var_i_cat__E_Ca + var_chaste_interface__membrane__Vm) * var_i_cat__G_max_Ttype * var_chaste_interface__x_Ttype__x_Ttype * var_chaste_interface__y_Ttype__y_Ttype; // current_units
        const double var_y_Ttype__y_inf_Ttype = 1 / (1.0 + exp(17.545219638242894 + 0.25839793281653745 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double d_dt_chaste_interface_var_y_Ttype__y_Ttype = (-var_chaste_interface__y_Ttype__y_Ttype + var_y_Ttype__y_inf_Ttype) / var_y_Ttype__tau_y_Ttype; // 1 / time_units
        const double var_y_ca_Ltype__tau_y_ca_Ltype = 2.0 + 80.0 / (1.0 + 99999999.999999985 * pow(var_chaste_interface__membrane__Ca_i_peripheral, 2)); // time_units
        const double var_i_cal__i_cal = (-var_i_cal__E_Ca + var_chaste_interface__membrane__Vm) * mParameters[7] * var_chaste_interface__x_Ltype__x_Ltype * var_chaste_interface__y_Ltype__y_Ltype * var_chaste_interface__y_ca_Ltype__y_ca_Ltype; // current_units
        const double d_dt_chaste_interface_var_membrane__Ca_i_peripheral = 500.0 * (var_i_rel_per__i_rel_per + 2.0 * var_i_naca__i_naca - var_i_cab__i_cab - var_i_cal__i_cal - var_i_cat__i_cat - var_i_diff__i_diff - var_i_pmca__i_pmca - var_i_serca_per__i_serca_per) / (var_Environment__F * var_membrane__peripheral_volume); // millimolar / time_units
        const double var_y_ca_Ltype__y_ca_inf_Ltype = 0.40000000000000002 + 0.59999999999999998 / (1.0 + 99999999.999999985 * pow(var_chaste_interface__membrane__Ca_i_peripheral, 2)); // dimensionless
        const double d_dt_chaste_interface_var_y_ca_Ltype__y_ca_Ltype = (-var_chaste_interface__y_ca_Ltype__y_ca_Ltype + var_y_ca_Ltype__y_ca_inf_Ltype) / var_y_ca_Ltype__tau_y_ca_Ltype; // 1 / time_units
        const double var_y_gate_f_k__tau_y_f_gate = 6000.0 / (exp(3.6000000000000001 + 0.11 * var_chaste_interface__membrane__Vm) + exp(-2.8999999999999999 - 0.040000000000000001 * var_chaste_interface__membrane__Vm)); // time_units
        const double var_i_f_k__i_f_k = (-var_i_f_k__E_k + var_chaste_interface__membrane__Vm) * var_i_f_k__G_f_k * var_chaste_interface__y_gate_f_k__y_gate_f_k; // current_units
        const double var_y_gate_f_k__y_inf_f_gate = 1 / (1.0 + exp(10.9 + 0.10000000000000001 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double d_dt_chaste_interface_var_y_gate_f_k__y_gate_f_k = (-var_chaste_interface__y_gate_f_k__y_gate_f_k + var_y_gate_f_k__y_inf_f_gate) / var_y_gate_f_k__tau_y_f_gate; // 1 / time_units
        const double var_y_gate_f_na__tau_y_f_gate = 6000.0 / (exp(3.6000000000000001 + 0.11 * var_chaste_interface__membrane__Vm) + exp(-2.8999999999999999 - 0.040000000000000001 * var_chaste_interface__membrane__Vm)); // time_units
        const double var_i_f_na__i_f_na = (-var_i_f_na__E_na + var_chaste_interface__membrane__Vm) * var_i_f_na__G_f_na * var_chaste_interface__y_gate_f_na__y_gate_f_na; // current_units
        const double var_y_gate_f_na__y_inf_f_gate = 1 / (1.0 + exp(10.9 + 0.10000000000000001 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double d_dt_chaste_interface_var_y_gate_f_na__y_gate_f_na = (-var_chaste_interface__y_gate_f_na__y_gate_f_na + var_y_gate_f_na__y_inf_f_gate) / var_y_gate_f_na__tau_y_f_gate; // 1 / time_units
        const double var_y_kr__y_inf_kr = 1 / (1.0 + exp(-6.666666666666667 - 0.13333333333333333 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_i_kr__i_kr = 0.18518518518518517 * (-var_i_kr__E_k + var_chaste_interface__membrane__Vm) * mParameters[5] * mParameters[12] * var_x_kr__x_kr * var_chaste_interface__y_kr__y_kr; // current_units
        const double var_y_kr__ykrv1 = ((fabs(7.0 + var_chaste_interface__membrane__Vm) < 8.1300813008222672e-7) ? (1.1219512195134727e-9 / (1.0 - exp(-1.0000000000011388e-7)) - 614999.99999929965 * (6.9999991869918698 + var_chaste_interface__membrane__Vm) * (-1.1219512195134727e-9 / (1.0 - exp(1.0000000000011388e-7)) - 1.1219512195134727e-9 / (1.0 - exp(-1.0000000000011388e-7)))) : (0.0013799999999999999 * (7.0 + var_chaste_interface__membrane__Vm) / (1.0 - exp(-0.86099999999999999 - 0.123 * var_chaste_interface__membrane__Vm)))); // rate_constants_units
        const double var_y_kr__ykrv2 = ((fabs(10.0 + var_chaste_interface__membrane__Vm) < 6.8965517241448282e-7) ? (-4.2068965517283451e-11 / (-1.0 + exp(-1.000000000001e-7)) + 724999.99999927497 * (10.000000689655172 + var_chaste_interface__membrane__Vm) * (4.2068965517283451e-11 / (-1.0 + exp(1.000000000001e-7)) + 4.2068965517283451e-11 / (-1.0 + exp(-1.000000000001e-7)))) : (6.0999999999999999e-5 * (10.0 + var_chaste_interface__membrane__Vm) / (-1.0 + exp(1.45 + 0.14499999999999999 * var_chaste_interface__membrane__Vm)))); // rate_constants_units
        const double var_y_kr__tau_y_kr = 1 / (var_y_kr__ykrv1 + var_y_kr__ykrv2); // time_units
        const double d_dt_chaste_interface_var_y_kr__y_kr = (-var_chaste_interface__y_kr__y_kr + var_y_kr__y_inf_kr) / var_y_kr__tau_y_kr; // 1 / time_units
        const double var_y_ks__tau_y_ks = 4.0 * var_x_ks__tau_x_ks; // time_units
        const double var_y_ks__y_inf_ks = var_x_ks__x_inf_ks; // dimensionless
        const double d_dt_chaste_interface_var_y_ks__y_ks = (-var_chaste_interface__y_ks__y_ks + var_y_ks__y_inf_ks) / var_y_ks__tau_y_ks; // 1 / time_units
        const double var_i_ks__i_ks = (-var_i_ks__E_k + var_chaste_interface__membrane__Vm) * mParameters[13] * var_chaste_interface__x_ks__x_ks * var_chaste_interface__y_ks__y_ks; // current_units
        const double var_y_na_fast__tau_y_na_fast = 2.0; // time_units
        const double var_y_na_fast__y_inf_na_fast = 1 / (1.0 + exp(17.424242424242426 + 0.25252525252525254 * var_chaste_interface__membrane__Vm - 0.25252525252525254 * mParameters[10])); // dimensionless
        const double d_dt_chaste_interface_var_y_na_fast__y_na_fast = (-var_chaste_interface__y_na_fast__y_na_fast + var_y_na_fast__y_inf_na_fast) / var_y_na_fast__tau_y_na_fast; // 1 / time_units
        const double var_i_na_fast__i_na_fast = (-var_i_na_fast__E_na + var_chaste_interface__membrane__Vm) * mParameters[9] * var_chaste_interface__x_na_fast__x_na_fast * var_chaste_interface__y_na_fast__y_na_fast; // current_units
        const double var_y_na_late__tau_y_na_late = 120.0 + exp(4.0 + 0.040000000000000001 * var_chaste_interface__membrane__Vm); // time_units
        const double var_y_na_late__y_inf_na_late = 0.10000000000000001 + 0.90000000000000002 / (1.0 + exp(12.0 + 0.15873015873015872 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double d_dt_chaste_interface_var_y_na_late__y_na_late = (-var_chaste_interface__y_na_late__y_na_late + var_y_na_late__y_inf_na_late) / var_y_na_late__tau_y_na_late; // 1 / time_units
        const double var_i_na_late__i_na_late = (-var_i_na_late__E_na + var_chaste_interface__membrane__Vm) * var_i_na_late__G_max_na_late * var_chaste_interface__x_na_late__x_na_late * var_chaste_interface__y_na_late__y_na_late; // current_units
        const double var_y_nak__y_nak = 1 / (1.0 + exp(0.0080000000000000002 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_i_nak__i_nak = var_i_nak__g_nak * var_x_nak__x_nak * var_y_nak__y_nak / ((1.0 + 31.98 / var_chaste_interface__membrane__Na_i) * (1.0 + 2.536253862184366 * pow((1 / mParameters[5]), 1.45))); // current_units
        const double d_dt_chaste_interface_var_membrane__Na_i = 1000.0 * (-var_i_f_na__i_f_na - var_i_na_fast__i_na_fast - var_i_na_late__i_na_late - var_i_nab__i_nab - 3.0 * var_i_naca__i_naca - 3.0 * var_i_nak__i_nak) / (var_Environment__F * var_membrane__diffusable_volume); // millimolar / time_units
        const double var_y_to_fast__tau_y_to_fast = 350.0; // time_units
        const double var_y_to_fast__y_inf_to_fast = 1 / (1.0 + exp(3.4375 + 0.125 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double d_dt_chaste_interface_var_y_to_fast__y_to_fast = (-var_chaste_interface__y_to_fast__y_to_fast + var_y_to_fast__y_inf_to_fast) / var_y_to_fast__tau_y_to_fast; // 1 / time_units
        const double var_i_to_fast__i_to_fast = (-var_i_to_fast__E_k + var_chaste_interface__membrane__Vm) * mParameters[15] * var_chaste_interface__x_to_fast__x_to_fast * var_chaste_interface__y_to_fast__y_to_fast; // current_units
        const double d_dt_chaste_interface_var_membrane__K_i = 1000.0 * (2.0 * var_i_nak__i_nak - var_i_f_k__i_f_k - var_i_k1__i_k1 - var_i_kb__i_kb - var_i_kr__i_kr - var_i_ks__i_ks - var_i_to_fast__i_to_fast - var_i_to_sustained__i_to_sustained - var_membrane__i_stim) / (var_Environment__F * var_membrane__diffusable_volume); // millimolar / time_units
        
        mEvalF[1] = d_dt_chaste_interface_var_membrane__Ca_i_bulk;
        mPartialF[1] = EvaluatePartialDerivative1(var_chaste_interface__Time__time, rY, delta);
        mEvalF[2] = d_dt_chaste_interface_var_membrane__Ca_i_peripheral;
        mPartialF[2] = EvaluatePartialDerivative2(var_chaste_interface__Time__time, rY, delta);
        mEvalF[3] = d_dt_chaste_interface_var_membrane__Ca_sr;
        mPartialF[3] = EvaluatePartialDerivative3(var_chaste_interface__Time__time, rY, delta);
        mEvalF[4] = d_dt_chaste_interface_var_membrane__Na_i;
        mPartialF[4] = EvaluatePartialDerivative4(var_chaste_interface__Time__time, rY, delta);
        mEvalF[5] = d_dt_chaste_interface_var_membrane__K_i;
        mPartialF[5] = EvaluatePartialDerivative5(var_chaste_interface__Time__time, rY, delta);
        mEvalF[6] = d_dt_chaste_interface_var_x_Ttype__x_Ttype;
        mPartialF[6] = EvaluatePartialDerivative6(var_chaste_interface__Time__time, rY, delta);
        mEvalF[7] = d_dt_chaste_interface_var_y_Ttype__y_Ttype;
        mPartialF[7] = EvaluatePartialDerivative7(var_chaste_interface__Time__time, rY, delta);
        mEvalF[8] = d_dt_chaste_interface_var_x_Ltype__x_Ltype;
        mPartialF[8] = EvaluatePartialDerivative8(var_chaste_interface__Time__time, rY, delta);
        mEvalF[9] = d_dt_chaste_interface_var_y_Ltype__y_Ltype;
        mPartialF[9] = EvaluatePartialDerivative9(var_chaste_interface__Time__time, rY, delta);
        mEvalF[10] = d_dt_chaste_interface_var_y_ca_Ltype__y_ca_Ltype;
        mPartialF[10] = EvaluatePartialDerivative10(var_chaste_interface__Time__time, rY, delta);
        mEvalF[11] = d_dt_chaste_interface_var_x_to_fast__x_to_fast;
        mPartialF[11] = EvaluatePartialDerivative11(var_chaste_interface__Time__time, rY, delta);
        mEvalF[12] = d_dt_chaste_interface_var_y_to_fast__y_to_fast;
        mPartialF[12] = EvaluatePartialDerivative12(var_chaste_interface__Time__time, rY, delta);
        mEvalF[13] = d_dt_chaste_interface_var_x_na_fast__x_na_fast;
        mPartialF[13] = EvaluatePartialDerivative13(var_chaste_interface__Time__time, rY, delta);
        mEvalF[14] = d_dt_chaste_interface_var_y_na_fast__y_na_fast;
        mPartialF[14] = EvaluatePartialDerivative14(var_chaste_interface__Time__time, rY, delta);
        mEvalF[15] = d_dt_chaste_interface_var_x_na_late__x_na_late;
        mPartialF[15] = EvaluatePartialDerivative15(var_chaste_interface__Time__time, rY, delta);
        mEvalF[16] = d_dt_chaste_interface_var_y_na_late__y_na_late;
        mPartialF[16] = EvaluatePartialDerivative16(var_chaste_interface__Time__time, rY, delta);
        mEvalF[17] = d_dt_chaste_interface_var_y_kr__y_kr;
        mPartialF[17] = EvaluatePartialDerivative17(var_chaste_interface__Time__time, rY, delta);
        mEvalF[18] = d_dt_chaste_interface_var_x_ks__x_ks;
        mPartialF[18] = EvaluatePartialDerivative18(var_chaste_interface__Time__time, rY, delta);
        mEvalF[19] = d_dt_chaste_interface_var_y_ks__y_ks;
        mPartialF[19] = EvaluatePartialDerivative19(var_chaste_interface__Time__time, rY, delta);
        mEvalF[20] = d_dt_chaste_interface_var_y_gate_f_k__y_gate_f_k;
        mPartialF[20] = EvaluatePartialDerivative20(var_chaste_interface__Time__time, rY, delta);
        mEvalF[21] = d_dt_chaste_interface_var_y_gate_f_na__y_gate_f_na;
        mPartialF[21] = EvaluatePartialDerivative21(var_chaste_interface__Time__time, rY, delta);
        
        {
            if (fabs(mPartialF[1]) < delta){
                rY[1] += mDt*d_dt_chaste_interface_var_membrane__Ca_i_bulk;
            }
            else
            {
                rY[1] += (d_dt_chaste_interface_var_membrane__Ca_i_bulk/mPartialF[1])*(exp(mPartialF[1]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[2]) < delta){
                rY[2] += mDt*d_dt_chaste_interface_var_membrane__Ca_i_peripheral;
            }
            else
            {
                rY[2] += (d_dt_chaste_interface_var_membrane__Ca_i_peripheral/mPartialF[2])*(exp(mPartialF[2]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[3]) < delta){
                rY[3] += mDt*d_dt_chaste_interface_var_membrane__Ca_sr;
            }
            else
            {
                rY[3] += (d_dt_chaste_interface_var_membrane__Ca_sr/mPartialF[3])*(exp(mPartialF[3]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[4]) < delta){
                rY[4] += mDt*d_dt_chaste_interface_var_membrane__Na_i;
            }
            else
            {
                rY[4] += (d_dt_chaste_interface_var_membrane__Na_i/mPartialF[4])*(exp(mPartialF[4]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[5]) < delta){
                rY[5] += mDt*d_dt_chaste_interface_var_membrane__K_i;
            }
            else
            {
                rY[5] += (d_dt_chaste_interface_var_membrane__K_i/mPartialF[5])*(exp(mPartialF[5]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[6]) < delta){
                rY[6] += mDt*d_dt_chaste_interface_var_x_Ttype__x_Ttype;
            }
            else
            {
                rY[6] += (d_dt_chaste_interface_var_x_Ttype__x_Ttype/mPartialF[6])*(exp(mPartialF[6]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[7]) < delta){
                rY[7] += mDt*d_dt_chaste_interface_var_y_Ttype__y_Ttype;
            }
            else
            {
                rY[7] += (d_dt_chaste_interface_var_y_Ttype__y_Ttype/mPartialF[7])*(exp(mPartialF[7]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[8]) < delta){
                rY[8] += mDt*d_dt_chaste_interface_var_x_Ltype__x_Ltype;
            }
            else
            {
                rY[8] += (d_dt_chaste_interface_var_x_Ltype__x_Ltype/mPartialF[8])*(exp(mPartialF[8]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[9]) < delta){
                rY[9] += mDt*d_dt_chaste_interface_var_y_Ltype__y_Ltype;
            }
            else
            {
                rY[9] += (d_dt_chaste_interface_var_y_Ltype__y_Ltype/mPartialF[9])*(exp(mPartialF[9]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[10]) < delta){
                rY[10] += mDt*d_dt_chaste_interface_var_y_ca_Ltype__y_ca_Ltype;
            }
            else
            {
                rY[10] += (d_dt_chaste_interface_var_y_ca_Ltype__y_ca_Ltype/mPartialF[10])*(exp(mPartialF[10]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[11]) < delta){
                rY[11] += mDt*d_dt_chaste_interface_var_x_to_fast__x_to_fast;
            }
            else
            {
                rY[11] += (d_dt_chaste_interface_var_x_to_fast__x_to_fast/mPartialF[11])*(exp(mPartialF[11]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[12]) < delta){
                rY[12] += mDt*d_dt_chaste_interface_var_y_to_fast__y_to_fast;
            }
            else
            {
                rY[12] += (d_dt_chaste_interface_var_y_to_fast__y_to_fast/mPartialF[12])*(exp(mPartialF[12]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[13]) < delta){
                rY[13] += mDt*d_dt_chaste_interface_var_x_na_fast__x_na_fast;
            }
            else
            {
                rY[13] += (d_dt_chaste_interface_var_x_na_fast__x_na_fast/mPartialF[13])*(exp(mPartialF[13]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[14]) < delta){
                rY[14] += mDt*d_dt_chaste_interface_var_y_na_fast__y_na_fast;
            }
            else
            {
                rY[14] += (d_dt_chaste_interface_var_y_na_fast__y_na_fast/mPartialF[14])*(exp(mPartialF[14]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[15]) < delta){
                rY[15] += mDt*d_dt_chaste_interface_var_x_na_late__x_na_late;
            }
            else
            {
                rY[15] += (d_dt_chaste_interface_var_x_na_late__x_na_late/mPartialF[15])*(exp(mPartialF[15]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[16]) < delta){
                rY[16] += mDt*d_dt_chaste_interface_var_y_na_late__y_na_late;
            }
            else
            {
                rY[16] += (d_dt_chaste_interface_var_y_na_late__y_na_late/mPartialF[16])*(exp(mPartialF[16]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[17]) < delta){
                rY[17] += mDt*d_dt_chaste_interface_var_y_kr__y_kr;
            }
            else
            {
                rY[17] += (d_dt_chaste_interface_var_y_kr__y_kr/mPartialF[17])*(exp(mPartialF[17]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[18]) < delta){
                rY[18] += mDt*d_dt_chaste_interface_var_x_ks__x_ks;
            }
            else
            {
                rY[18] += (d_dt_chaste_interface_var_x_ks__x_ks/mPartialF[18])*(exp(mPartialF[18]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[19]) < delta){
                rY[19] += mDt*d_dt_chaste_interface_var_y_ks__y_ks;
            }
            else
            {
                rY[19] += (d_dt_chaste_interface_var_y_ks__y_ks/mPartialF[19])*(exp(mPartialF[19]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[20]) < delta){
                rY[20] += mDt*d_dt_chaste_interface_var_y_gate_f_k__y_gate_f_k;
            }
            else
            {
                rY[20] += (d_dt_chaste_interface_var_y_gate_f_k__y_gate_f_k/mPartialF[20])*(exp(mPartialF[20]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[21]) < delta){
                rY[21] += mDt*d_dt_chaste_interface_var_y_gate_f_na__y_gate_f_na;
            }
            else
            {
                rY[21] += (d_dt_chaste_interface_var_y_gate_f_na__y_gate_f_na/mPartialF[21])*(exp(mPartialF[21]*mDt)-1.0);
            }
            
        }        
        
    }
   
    
    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluateYDerivative0(double var_chaste_interface__Time__time, std::vector<double>& rY)
    {
        double d_dt_chaste_interface_var_membrane__Vm;
        double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: voltage_units; Initial value: -88.744
        double var_chaste_interface__membrane__Ca_i_peripheral = rY[2];
        // Units: millimolar; Initial value: 8.37523918148654e-06
        double var_chaste_interface__membrane__Na_i = rY[4];
        // Units: millimolar; Initial value: 6.75814832463522
        double var_chaste_interface__membrane__K_i = rY[5];
        // Units: millimolar; Initial value: 139.943221899032
        double var_chaste_interface__x_Ttype__x_Ttype = rY[6];
        // Units: dimensionless; Initial value: 0.00058439023999374
        double var_chaste_interface__y_Ttype__y_Ttype = rY[7];
        // Units: dimensionless; Initial value: 0.900843399895183
        double var_chaste_interface__x_Ltype__x_Ltype = rY[8];
        // Units: dimensionless; Initial value: 1.39762741967807e-06
        double var_chaste_interface__y_Ltype__y_Ltype = rY[9];
        // Units: dimensionless; Initial value: 0.762933565557978
        double var_chaste_interface__y_ca_Ltype__y_ca_Ltype = rY[10];
        // Units: dimensionless; Initial value: 0.990616705407034
        double var_chaste_interface__x_to_fast__x_to_fast = rY[11];
        // Units: dimensionless; Initial value: 2.39836311045441e-05
        double var_chaste_interface__y_to_fast__y_to_fast = rY[12];
        // Units: dimensionless; Initial value: 0.865769351306921
        double var_chaste_interface__x_na_fast__x_na_fast = rY[13];
        // Units: dimensionless; Initial value: 2.90568689212866e-06
        double var_chaste_interface__y_na_fast__y_na_fast = rY[14];
        // Units: dimensionless; Initial value: 0.993212025695132
        double var_chaste_interface__x_na_late__x_na_late = rY[15];
        // Units: dimensionless; Initial value: 7.9043398966996e-06
        double var_chaste_interface__y_na_late__y_na_late = rY[16];
        // Units: dimensionless; Initial value: 0.839555875175682
        double var_chaste_interface__y_kr__y_kr = rY[17];
        // Units: dimensionless; Initial value: 0.202112622607795
        double var_chaste_interface__x_ks__x_ks = rY[18];
        // Units: dimensionless; Initial value: 0.0147603344538846
        double var_chaste_interface__y_ks__y_ks = rY[19];
        // Units: dimensionless; Initial value: 0.0385082219915004
        double var_chaste_interface__y_gate_f_k__y_gate_f_k = rY[20];
        // Units: dimensionless; Initial value: 0.011099
        double var_chaste_interface__y_gate_f_na__y_gate_f_na = rY[21];
        // Units: dimensionless; Initial value: 0.011099
        

        // Mathematics
        const double var_Environment__F = 96485.341499999995; // F_units
        const double var_Environment__R = 8314.4719999999998; // R_units
        const double var_Environment__T = 310.0; // Temperature_units
        const double var_Environment__RToF = var_Environment__R * var_Environment__T / var_Environment__F; // voltage_units
        const double var_i_cab__G_max_cab = 0.0001; // conductance_units
        const double var_i_cat__G_max_Ttype = 0.90000000000000002; // conductance_units
        const double var_i_f_k__G_f_k = 0.18870967699999999; // conductance_units
        const double var_i_f_na__G_f_na = 0.045290323; // conductance_units
        const double var_i_kb__G_max_kb = 0.01; // conductance_units
        const double var_i_na_late__G_max_na_late = 2.0; // conductance_units
        const double var_i_nab__G_max_nab = 0.01; // conductance_units
        const double var_i_naca__d_NaCa = 0.001; // dimensionless
        const double var_i_naca__gamma = 0.5; // dimensionless
        const double var_i_naca__n_NaCa = 3.0; // dimensionless
        const double var_i_nak__g_nak = 442.19999999999999; // current_units
        const double var_i_pmca__Hpmca = 1.5; // dimensionless
        const double var_i_pmca__Kpmca = 0.0001; // millimolar
        const double var_i_pmca__PMCA_max = 5.0; // current_units
        const double var_i_to_sustained__G_max_to_sustained = 3.0; // conductance_units
        const double var_i_cab__E_ca = 0.5 * var_Environment__RToF * log(mParameters[4] / var_chaste_interface__membrane__Ca_i_peripheral); // voltage_units
        const double var_i_cal__E_Ca = 0.5 * var_Environment__RToF * log(mParameters[4] / var_chaste_interface__membrane__Ca_i_peripheral); // voltage_units
        const double var_i_cat__E_Ca = 0.5 * var_Environment__RToF * log(mParameters[4] / var_chaste_interface__membrane__Ca_i_peripheral); // voltage_units
        const double var_i_pmca__i_pmca = var_i_pmca__PMCA_max / (1.0 + pow((var_i_pmca__Kpmca / var_chaste_interface__membrane__Ca_i_peripheral), var_i_pmca__Hpmca)); // current_units
        const double var_membrane__Cm_converted = 9.9999999999999995e-7 * mParameters[8]; // uF
        const double var_i_f_k__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_k1__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_kb__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_kr__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_ks__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_to_fast__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_to_sustained__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_f_na__E_na = var_Environment__RToF * log(mParameters[6] / var_chaste_interface__membrane__Na_i); // voltage_units
        const double var_i_na_fast__E_na = var_Environment__RToF * log(mParameters[6] / var_chaste_interface__membrane__Na_i); // voltage_units
        const double var_i_na_late__E_na = var_Environment__RToF * log(mParameters[6] / var_chaste_interface__membrane__Na_i); // voltage_units
        const double var_i_nab__E_na = var_Environment__RToF * log(mParameters[6] / var_chaste_interface__membrane__Na_i); // voltage_units
        const double var_i_cab__i_cab = (-var_i_cab__E_ca + var_chaste_interface__membrane__Vm) * var_i_cab__G_max_cab; // current_units
        const double var_i_kb__i_kb = (-var_i_kb__E_k + var_chaste_interface__membrane__Vm) * var_i_kb__G_max_kb; // current_units
        const double var_i_nab__i_nab = (-var_i_nab__E_na + var_chaste_interface__membrane__Vm) * var_i_nab__G_max_nab; // current_units
        const double var_i_naca__i_naca = 512.00911320399996 * (pow(var_chaste_interface__membrane__Na_i, var_i_naca__n_NaCa) * mParameters[4] * exp((-2.0 + var_i_naca__n_NaCa) * var_i_naca__gamma * var_chaste_interface__membrane__Vm / var_Environment__RToF) - pow(mParameters[6], var_i_naca__n_NaCa) * var_chaste_interface__membrane__Ca_i_peripheral * exp((-1.0 + var_i_naca__gamma) * (-2.0 + var_i_naca__n_NaCa) * var_chaste_interface__membrane__Vm / var_Environment__RToF)) * mParameters[14] / ((1.0 + 144.92753623188406 * var_chaste_interface__membrane__Ca_i_peripheral) * (1.0 + (pow(mParameters[6], var_i_naca__n_NaCa) * var_chaste_interface__membrane__Ca_i_peripheral + pow(var_chaste_interface__membrane__Na_i, var_i_naca__n_NaCa) * mParameters[4]) * var_i_naca__d_NaCa)); // current_units
        const double var_membrane__i_stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__Time__time); // uA_per_cm2
        const double var_membrane__i_stim = 1000000.0 * var_membrane__Cm_converted * var_membrane__i_stim_converted / HeartConfig::Instance()->GetCapacitance(); // current_units
        const double var_x_k1__x_k1 = 1 / (1.0 + exp(9.1999999999999993 + 0.10000000000000001 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_i_k1__i_k1 = 0.25946870969507452 * pow(mParameters[5], 0.80000000000000004) * (-var_i_k1__E_k + var_chaste_interface__membrane__Vm) * mParameters[11] * var_x_k1__x_k1; // current_units
        const double var_x_kr__x_kr = 1 / (1.0 + exp(1.4732142857142858 + 0.044642857142857144 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_x_nak__x_nak = 1 / (1.0 + exp(-1.7777777777777777 - 0.022222222222222223 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_x_to_sustained__x_to_sustained = 1 / (1.0 + exp(0.29411764705882354 - 0.058823529411764705 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_i_to_sustained__i_to_sustained = (-var_i_to_sustained__E_k + var_chaste_interface__membrane__Vm) * var_i_to_sustained__G_max_to_sustained * var_x_to_sustained__x_to_sustained; // current_units
        const double var_i_cat__i_cat = (-var_i_cat__E_Ca + var_chaste_interface__membrane__Vm) * var_i_cat__G_max_Ttype * var_chaste_interface__x_Ttype__x_Ttype * var_chaste_interface__y_Ttype__y_Ttype; // current_units
        const double var_i_cal__i_cal = (-var_i_cal__E_Ca + var_chaste_interface__membrane__Vm) * mParameters[7] * var_chaste_interface__x_Ltype__x_Ltype * var_chaste_interface__y_Ltype__y_Ltype * var_chaste_interface__y_ca_Ltype__y_ca_Ltype; // current_units
        const double var_i_f_k__i_f_k = (-var_i_f_k__E_k + var_chaste_interface__membrane__Vm) * var_i_f_k__G_f_k * var_chaste_interface__y_gate_f_k__y_gate_f_k; // current_units
        const double var_i_f_na__i_f_na = (-var_i_f_na__E_na + var_chaste_interface__membrane__Vm) * var_i_f_na__G_f_na * var_chaste_interface__y_gate_f_na__y_gate_f_na; // current_units
        const double var_i_kr__i_kr = 0.18518518518518517 * (-var_i_kr__E_k + var_chaste_interface__membrane__Vm) * mParameters[5] * mParameters[12] * var_x_kr__x_kr * var_chaste_interface__y_kr__y_kr; // current_units
        const double var_i_ks__i_ks = (-var_i_ks__E_k + var_chaste_interface__membrane__Vm) * mParameters[13] * var_chaste_interface__x_ks__x_ks * var_chaste_interface__y_ks__y_ks; // current_units
        const double var_i_na_fast__i_na_fast = (-var_i_na_fast__E_na + var_chaste_interface__membrane__Vm) * mParameters[9] * var_chaste_interface__x_na_fast__x_na_fast * var_chaste_interface__y_na_fast__y_na_fast; // current_units
        const double var_i_na_late__i_na_late = (-var_i_na_late__E_na + var_chaste_interface__membrane__Vm) * var_i_na_late__G_max_na_late * var_chaste_interface__x_na_late__x_na_late * var_chaste_interface__y_na_late__y_na_late; // current_units
        const double var_y_nak__y_nak = 1 / (1.0 + exp(0.0080000000000000002 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_i_nak__i_nak = var_i_nak__g_nak * var_x_nak__x_nak * var_y_nak__y_nak / ((1.0 + 31.98 / var_chaste_interface__membrane__Na_i) * (1.0 + 2.536253862184366 * pow((1 / mParameters[5]), 1.45))); // current_units
        const double var_i_to_fast__i_to_fast = (-var_i_to_fast__E_k + var_chaste_interface__membrane__Vm) * mParameters[15] * var_chaste_interface__x_to_fast__x_to_fast * var_chaste_interface__y_to_fast__y_to_fast; // current_units
        d_dt_chaste_interface_var_membrane__Vm = -(var_i_cab__i_cab + var_i_cal__i_cal + var_i_cat__i_cat + var_i_f_k__i_f_k + var_i_f_na__i_f_na + var_i_k1__i_k1 + var_i_kb__i_kb + var_i_kr__i_kr + var_i_ks__i_ks + var_i_na_fast__i_na_fast + var_i_na_late__i_na_late + var_i_nab__i_nab + var_i_naca__i_naca + var_i_nak__i_nak + var_i_pmca__i_pmca + var_i_to_fast__i_to_fast + var_i_to_sustained__i_to_sustained + var_membrane__i_stim) / mParameters[8]; // voltage_units / time_units

        return d_dt_chaste_interface_var_membrane__Vm;
    }

    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluatePartialDerivative0(double var_chaste_interface__Time__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: voltage_units; Initial value: -88.744
            double var_chaste_interface__membrane__Ca_i_peripheral = rY[2];
            // Units: millimolar; Initial value: 8.37523918148654e-06
            double var_chaste_interface__membrane__Na_i = rY[4];
            // Units: millimolar; Initial value: 6.75814832463522
            double var_chaste_interface__membrane__K_i = rY[5];
            // Units: millimolar; Initial value: 139.943221899032
            double var_chaste_interface__x_Ttype__x_Ttype = rY[6];
            // Units: dimensionless; Initial value: 0.00058439023999374
            double var_chaste_interface__y_Ttype__y_Ttype = rY[7];
            // Units: dimensionless; Initial value: 0.900843399895183
            double var_chaste_interface__x_Ltype__x_Ltype = rY[8];
            // Units: dimensionless; Initial value: 1.39762741967807e-06
            double var_chaste_interface__y_Ltype__y_Ltype = rY[9];
            // Units: dimensionless; Initial value: 0.762933565557978
            double var_chaste_interface__y_ca_Ltype__y_ca_Ltype = rY[10];
            // Units: dimensionless; Initial value: 0.990616705407034
            double var_chaste_interface__x_to_fast__x_to_fast = rY[11];
            // Units: dimensionless; Initial value: 2.39836311045441e-05
            double var_chaste_interface__y_to_fast__y_to_fast = rY[12];
            // Units: dimensionless; Initial value: 0.865769351306921
            double var_chaste_interface__x_na_fast__x_na_fast = rY[13];
            // Units: dimensionless; Initial value: 2.90568689212866e-06
            double var_chaste_interface__y_na_fast__y_na_fast = rY[14];
            // Units: dimensionless; Initial value: 0.993212025695132
            double var_chaste_interface__x_na_late__x_na_late = rY[15];
            // Units: dimensionless; Initial value: 7.9043398966996e-06
            double var_chaste_interface__y_na_late__y_na_late = rY[16];
            // Units: dimensionless; Initial value: 0.839555875175682
            double var_chaste_interface__y_kr__y_kr = rY[17];
            // Units: dimensionless; Initial value: 0.202112622607795
            double var_chaste_interface__x_ks__x_ks = rY[18];
            // Units: dimensionless; Initial value: 0.0147603344538846
            double var_chaste_interface__y_ks__y_ks = rY[19];
            // Units: dimensionless; Initial value: 0.0385082219915004
            double var_chaste_interface__y_gate_f_k__y_gate_f_k = rY[20];
            // Units: dimensionless; Initial value: 0.011099
            double var_chaste_interface__y_gate_f_na__y_gate_f_na = rY[21];
            // Units: dimensionless; Initial value: 0.011099
            

            const double var_x0 = exp(0.29411764705882354 - 0.058823529411764705 * var_chaste_interface__membrane__Vm);
            const double var_x1 = 1.0 + var_x0;
            const double var_x2 = 1 / var_x1;
            const double var_x3 = var_chaste_interface__x_na_late__x_na_late * var_chaste_interface__y_na_late__y_na_late;
            const double var_x4 = var_chaste_interface__x_Ttype__x_Ttype * var_chaste_interface__y_Ttype__y_Ttype;
            const double var_x5 = mParameters[13] * var_chaste_interface__y_ks__y_ks;
            const double var_x6 = var_x5 * var_chaste_interface__x_ks__x_ks;
            const double var_x7 = mParameters[9] * var_chaste_interface__y_na_fast__y_na_fast;
            const double var_x8 = var_x7 * var_chaste_interface__x_na_fast__x_na_fast;
            const double var_x9 = mParameters[15] * var_chaste_interface__y_to_fast__y_to_fast;
            const double var_x10 = var_x9 * var_chaste_interface__x_to_fast__x_to_fast;
            const double var_x11 = 0.10000000000000001 * var_chaste_interface__membrane__Vm;
            const double var_x12 = exp(9.1999999999999993 + var_x11);
            const double var_x13 = 1.0 + var_x12;
            const double var_x14 = pow(mParameters[5], 0.80000000000000004) * mParameters[11];
            const double var_x15 = var_x14 / var_x13;
            const double var_x16 = 1 / var_chaste_interface__membrane__K_i;
            const double var_x17 = var_x16 * mParameters[5];
            const double var_x18 = log(var_x17);
            const double var_x19 = -26.713760659695652 * var_x18 + var_chaste_interface__membrane__Vm;
            const double var_x20 = var_x0 * var_x19 / pow(var_x1, 2);
            const double var_x21 = mParameters[7] * var_chaste_interface__y_Ltype__y_Ltype * var_chaste_interface__y_ca_Ltype__y_ca_Ltype;
            const double var_x22 = var_x21 * var_chaste_interface__x_Ltype__x_Ltype;
            const double var_x23 = 0.018716945411372737 * var_chaste_interface__membrane__Vm;
            const double var_x24 = exp(-var_x23);
            const double var_x25 = pow(mParameters[6], 3.0);
            const double var_x26 = var_x25 * var_chaste_interface__membrane__Ca_i_peripheral;
            const double var_x27 = var_x24 * var_x26;
            const double var_x28 = exp(var_x23);
            const double var_x29 = pow(var_chaste_interface__membrane__Na_i, 3.0) * mParameters[4];
            const double var_x30 = var_x28 * var_x29;
            const double var_x31 = 1 / (1.0 + 144.92753623188406 * var_chaste_interface__membrane__Ca_i_peripheral);
            const double var_x32 = 1.0 + 0.001 * var_x26 + 0.001 * var_x29;
            const double var_x33 = mParameters[14] / var_x32;
            const double var_x34 = var_x31 * var_x33;
            const double var_x35 = var_x34 * (0.018716945411372737 * var_x27 + 0.018716945411372737 * var_x30);
            const double var_x36 = exp(1.4732142857142858 + 0.044642857142857144 * var_chaste_interface__membrane__Vm);
            const double var_x37 = 1.0 + var_x36;
            const double var_x38 = 1 / var_x37;
            const double var_x39 = var_x38 * mParameters[5] * mParameters[12];
            const double var_x40 = var_x39 * var_chaste_interface__y_kr__y_kr;
            const double var_x41 = exp(0.0080000000000000002 * var_chaste_interface__membrane__Vm);
            const double var_x42 = 1.0 + var_x41;
            const double var_x43 = 1 / var_x42;
            const double var_x44 = exp(-1.7777777777777777 - 0.022222222222222223 * var_chaste_interface__membrane__Vm);
            const double var_x45 = 1.0 + var_x44;
            const double var_x46 = 1 / var_chaste_interface__membrane__Na_i;
            const double var_x47 = 1 / (1.0 + 2.536253862184366 * pow((1 / mParameters[5]), 1.45));
            const double var_x48 = var_x47 / (1.0 + 31.98 * var_x46);
            const double var_x49 = var_x43 * var_x44 * var_x48 / pow(var_x45, 2);
            const double var_x50 = 1 / var_x45;
            const double var_x51 = var_x41 * var_x48 * var_x50 / pow(var_x42, 2);
            const double var_x52 = var_x12 * var_x14 * var_x19 / pow(var_x13, 2);
            const double var_x53 = mParameters[12] * var_chaste_interface__y_kr__y_kr;
            const double var_x54 = var_x19 * var_x36 * var_x53 * mParameters[5] / pow(var_x37, 2);
            const double var_x55 = 1 / mParameters[8];
            const double var_x56 = var_x55;
            
            partialF = -var_x56 * (0.0201 + var_x10 + var_x22 + var_x6 + var_x8 + 2.0 * var_x3 + 3.0 * var_x2 + 512.00911320399996 * var_x35 + 0.045290323 * var_chaste_interface__y_gate_f_na__y_gate_f_na + 0.18870967699999999 * var_chaste_interface__y_gate_f_k__y_gate_f_k + 0.90000000000000002 * var_x4 + 9.8266666666666662 * var_x49 + 0.25946870969507452 * var_x15 + 0.17647058823529413 * var_x20 + 0.18518518518518517 * var_x40 - 0.0082671957671957667 * var_x54 - 3.5375999999999999 * var_x51 - 0.025946870969507454 * var_x52);
        }
        else
        {
            const double y_save = rY[0];
            rY[0] += delta;
            const double temp = EvaluateYDerivative0(var_chaste_interface__Time__time, rY);
            partialF = (temp-mEvalF[0])/delta;
            rY[0] = y_save;
        }
        return partialF;
    }
    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluateYDerivative1(double var_chaste_interface__Time__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__Ca_i_bulk = rY[1];
        // Units: millimolar; Initial value: 3.09001620863236e-05
        double var_chaste_interface__membrane__Ca_i_peripheral = rY[2];
        // Units: millimolar; Initial value: 8.37523918148654e-06
        double var_chaste_interface__membrane__Ca_sr = rY[3];
        // Units: millimolar; Initial value: 0.1607
        

        // Mathematics
        const double var_Environment__F = 96485.341499999995; // F_units
        const double var_i_diff__DIFF_max = 5000.0; // current_per_millimolar_units
        const double var_i_serca_bulk__H = 1.6000000000000001; // dimensionless
        const double var_i_serca_bulk__Kmf = 0.00024600000000000002; // millimolar
        const double var_i_serca_bulk__Kmr = 1.7; // millimolar
        const double var_i_diff__i_diff = (-var_chaste_interface__membrane__Ca_i_bulk + var_chaste_interface__membrane__Ca_i_peripheral) * var_i_diff__DIFF_max; // current_units
        const double var_i_leak__i_leak = (-var_chaste_interface__membrane__Ca_i_bulk + var_chaste_interface__membrane__Ca_sr) * mParameters[0]; // current_units
        const double var_i_serca_bulk__i_serca_bulk = (pow((var_chaste_interface__membrane__Ca_i_bulk / var_i_serca_bulk__Kmf), var_i_serca_bulk__H) - pow((var_chaste_interface__membrane__Ca_sr / var_i_serca_bulk__Kmr), var_i_serca_bulk__H)) * mParameters[3] / (1.0 + pow((var_chaste_interface__membrane__Ca_i_bulk / var_i_serca_bulk__Kmf), var_i_serca_bulk__H) + pow((var_chaste_interface__membrane__Ca_sr / var_i_serca_bulk__Kmr), var_i_serca_bulk__H)); // current_units
        const double var_membrane__bulk_fraction = 0.59999999999999998; // dimensionless
        const double var_membrane__cell_volume = 13266.5; // volume_units
        const double var_membrane__bulk_volume = var_membrane__bulk_fraction * var_membrane__cell_volume; // volume_units
        const double d_dt_chaste_interface_var_membrane__Ca_i_bulk = 500.0 * (-var_i_serca_bulk__i_serca_bulk + var_i_diff__i_diff + var_i_leak__i_leak) / (var_Environment__F * var_membrane__bulk_volume); // millimolar / time_units

        return d_dt_chaste_interface_var_membrane__Ca_i_bulk;
    }

    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluatePartialDerivative1(double var_chaste_interface__Time__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__Ca_i_bulk = rY[1];
            // Units: millimolar; Initial value: 3.09001620863236e-05
            double var_chaste_interface__membrane__Ca_sr = rY[3];
            // Units: millimolar; Initial value: 0.1607
            

            const double var_x92 = 6.5103007883492169e-7 * mParameters[0];
            const double var_x93 = pow(var_chaste_interface__membrane__Ca_i_bulk, 0.60000000000000009);
            const double var_x94 = pow(var_chaste_interface__membrane__Ca_i_bulk, 1.6000000000000001);
            const double var_x95 = 594982.00195257401 * var_x94;
            const double var_x96 = pow(var_chaste_interface__membrane__Ca_sr, 1.6000000000000001);
            const double var_x97 = 0.42784033515676106 * var_x96;
            const double var_x98 = 1.0 + var_x97;
            const double var_x99 = mParameters[3] / (var_x95 + var_x98);
            const double var_x100 = var_x93 * var_x99;
            const double var_x101 = 1.6807231087970119e-6 + 7.1908113817342693e-7 * var_x96;
            const double var_x102 = -var_x97;
            const double var_x103 = (var_x102 + var_x95) * mParameters[3] / pow((var_x101 + var_x94), 2);
            const double var_x104 = var_x103 * var_x93;
            
            partialF = -0.0032551503941746084 - var_x92 + 1.7507220768316695e-12 * var_x104 - 0.61976188741847005 * var_x100;
        }
        else
        {
            const double y_save = rY[1];
            rY[1] += delta;
            const double temp = EvaluateYDerivative1(var_chaste_interface__Time__time, rY);
            partialF = (temp-mEvalF[1])/delta;
            rY[1] = y_save;
        }
        return partialF;
    }
    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluateYDerivative2(double var_chaste_interface__Time__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: voltage_units; Initial value: -88.744
        double var_chaste_interface__membrane__Ca_i_bulk = rY[1];
        // Units: millimolar; Initial value: 3.09001620863236e-05
        double var_chaste_interface__membrane__Ca_i_peripheral = rY[2];
        // Units: millimolar; Initial value: 8.37523918148654e-06
        double var_chaste_interface__membrane__Ca_sr = rY[3];
        // Units: millimolar; Initial value: 0.1607
        double var_chaste_interface__membrane__Na_i = rY[4];
        // Units: millimolar; Initial value: 6.75814832463522
        double var_chaste_interface__x_Ttype__x_Ttype = rY[6];
        // Units: dimensionless; Initial value: 0.00058439023999374
        double var_chaste_interface__y_Ttype__y_Ttype = rY[7];
        // Units: dimensionless; Initial value: 0.900843399895183
        double var_chaste_interface__x_Ltype__x_Ltype = rY[8];
        // Units: dimensionless; Initial value: 1.39762741967807e-06
        double var_chaste_interface__y_Ltype__y_Ltype = rY[9];
        // Units: dimensionless; Initial value: 0.762933565557978
        double var_chaste_interface__y_ca_Ltype__y_ca_Ltype = rY[10];
        // Units: dimensionless; Initial value: 0.990616705407034
        

        // Mathematics
        const double var_Environment__F = 96485.341499999995; // F_units
        const double var_Environment__R = 8314.4719999999998; // R_units
        const double var_Environment__T = 310.0; // Temperature_units
        const double var_Environment__RToF = var_Environment__R * var_Environment__T / var_Environment__F; // voltage_units
        const double var_i_cab__G_max_cab = 0.0001; // conductance_units
        const double var_i_cat__G_max_Ttype = 0.90000000000000002; // conductance_units
        const double var_i_diff__DIFF_max = 5000.0; // current_per_millimolar_units
        const double var_i_naca__d_NaCa = 0.001; // dimensionless
        const double var_i_naca__gamma = 0.5; // dimensionless
        const double var_i_naca__n_NaCa = 3.0; // dimensionless
        const double var_i_pmca__Hpmca = 1.5; // dimensionless
        const double var_i_pmca__Kpmca = 0.0001; // millimolar
        const double var_i_pmca__PMCA_max = 5.0; // current_units
        const double var_i_serca_per__H = 1.6000000000000001; // dimensionless
        const double var_i_serca_per__Kmf = 0.00024600000000000002; // millimolar
        const double var_i_serca_per__Kmr = 1.7; // millimolar
        const double var_i_cab__E_ca = 0.5 * var_Environment__RToF * log(mParameters[4] / var_chaste_interface__membrane__Ca_i_peripheral); // voltage_units
        const double var_i_cal__E_Ca = 0.5 * var_Environment__RToF * log(mParameters[4] / var_chaste_interface__membrane__Ca_i_peripheral); // voltage_units
        const double var_i_cat__E_Ca = 0.5 * var_Environment__RToF * log(mParameters[4] / var_chaste_interface__membrane__Ca_i_peripheral); // voltage_units
        const double var_i_diff__i_diff = (-var_chaste_interface__membrane__Ca_i_bulk + var_chaste_interface__membrane__Ca_i_peripheral) * var_i_diff__DIFF_max; // current_units
        const double var_i_pmca__i_pmca = var_i_pmca__PMCA_max / (1.0 + pow((var_i_pmca__Kpmca / var_chaste_interface__membrane__Ca_i_peripheral), var_i_pmca__Hpmca)); // current_units
        const double var_i_rel_per__i_rel_per = mParameters[1] * var_chaste_interface__membrane__Ca_sr / (1.0 + pow(mParameters[2], 2) / pow(var_chaste_interface__membrane__Ca_i_peripheral, 2)); // current_units
        const double var_i_serca_per__i_serca_per = (pow((var_chaste_interface__membrane__Ca_i_peripheral / var_i_serca_per__Kmf), var_i_serca_per__H) - pow((var_chaste_interface__membrane__Ca_sr / var_i_serca_per__Kmr), var_i_serca_per__H)) * mParameters[3] / (1.0 + pow((var_chaste_interface__membrane__Ca_i_peripheral / var_i_serca_per__Kmf), var_i_serca_per__H) + pow((var_chaste_interface__membrane__Ca_sr / var_i_serca_per__Kmr), var_i_serca_per__H)); // current_units
        const double var_i_cab__i_cab = (-var_i_cab__E_ca + var_chaste_interface__membrane__Vm) * var_i_cab__G_max_cab; // current_units
        const double var_i_naca__i_naca = 512.00911320399996 * (pow(var_chaste_interface__membrane__Na_i, var_i_naca__n_NaCa) * mParameters[4] * exp((-2.0 + var_i_naca__n_NaCa) * var_i_naca__gamma * var_chaste_interface__membrane__Vm / var_Environment__RToF) - pow(mParameters[6], var_i_naca__n_NaCa) * var_chaste_interface__membrane__Ca_i_peripheral * exp((-1.0 + var_i_naca__gamma) * (-2.0 + var_i_naca__n_NaCa) * var_chaste_interface__membrane__Vm / var_Environment__RToF)) * mParameters[14] / ((1.0 + 144.92753623188406 * var_chaste_interface__membrane__Ca_i_peripheral) * (1.0 + (pow(mParameters[6], var_i_naca__n_NaCa) * var_chaste_interface__membrane__Ca_i_peripheral + pow(var_chaste_interface__membrane__Na_i, var_i_naca__n_NaCa) * mParameters[4]) * var_i_naca__d_NaCa)); // current_units
        const double var_membrane__cell_volume = 13266.5; // volume_units
        const double var_membrane__periphery_fraction = 0.20000000000000001; // dimensionless
        const double var_membrane__peripheral_volume = var_membrane__cell_volume * var_membrane__periphery_fraction; // volume_units
        const double var_i_cat__i_cat = (-var_i_cat__E_Ca + var_chaste_interface__membrane__Vm) * var_i_cat__G_max_Ttype * var_chaste_interface__x_Ttype__x_Ttype * var_chaste_interface__y_Ttype__y_Ttype; // current_units
        const double var_i_cal__i_cal = (-var_i_cal__E_Ca + var_chaste_interface__membrane__Vm) * mParameters[7] * var_chaste_interface__x_Ltype__x_Ltype * var_chaste_interface__y_Ltype__y_Ltype * var_chaste_interface__y_ca_Ltype__y_ca_Ltype; // current_units
        const double d_dt_chaste_interface_var_membrane__Ca_i_peripheral = 500.0 * (var_i_rel_per__i_rel_per + 2.0 * var_i_naca__i_naca - var_i_cab__i_cab - var_i_cal__i_cal - var_i_cat__i_cat - var_i_diff__i_diff - var_i_pmca__i_pmca - var_i_serca_per__i_serca_per) / (var_Environment__F * var_membrane__peripheral_volume); // millimolar / time_units

        return d_dt_chaste_interface_var_membrane__Ca_i_peripheral;
    }

    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluatePartialDerivative2(double var_chaste_interface__Time__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: voltage_units; Initial value: -88.744
            double var_chaste_interface__membrane__Ca_i_peripheral = rY[2];
            // Units: millimolar; Initial value: 8.37523918148654e-06
            double var_chaste_interface__membrane__Ca_sr = rY[3];
            // Units: millimolar; Initial value: 0.1607
            double var_chaste_interface__membrane__Na_i = rY[4];
            // Units: millimolar; Initial value: 6.75814832463522
            double var_chaste_interface__x_Ttype__x_Ttype = rY[6];
            // Units: dimensionless; Initial value: 0.00058439023999374
            double var_chaste_interface__y_Ttype__y_Ttype = rY[7];
            // Units: dimensionless; Initial value: 0.900843399895183
            double var_chaste_interface__x_Ltype__x_Ltype = rY[8];
            // Units: dimensionless; Initial value: 1.39762741967807e-06
            double var_chaste_interface__y_Ltype__y_Ltype = rY[9];
            // Units: dimensionless; Initial value: 0.762933565557978
            double var_chaste_interface__y_ca_Ltype__y_ca_Ltype = rY[10];
            // Units: dimensionless; Initial value: 0.990616705407034
            

            const double var_x4 = var_chaste_interface__x_Ttype__x_Ttype * var_chaste_interface__y_Ttype__y_Ttype;
            const double var_x21 = mParameters[7] * var_chaste_interface__y_Ltype__y_Ltype * var_chaste_interface__y_ca_Ltype__y_ca_Ltype;
            const double var_x22 = var_x21 * var_chaste_interface__x_Ltype__x_Ltype;
            const double var_x23 = 0.018716945411372737 * var_chaste_interface__membrane__Vm;
            const double var_x24 = exp(-var_x23);
            const double var_x25 = pow(mParameters[6], 3.0);
            const double var_x26 = var_x25 * var_chaste_interface__membrane__Ca_i_peripheral;
            const double var_x27 = var_x24 * var_x26;
            const double var_x28 = exp(var_x23);
            const double var_x29 = pow(var_chaste_interface__membrane__Na_i, 3.0) * mParameters[4];
            const double var_x30 = var_x28 * var_x29;
            const double var_x31 = 1 / (1.0 + 144.92753623188406 * var_chaste_interface__membrane__Ca_i_peripheral);
            const double var_x32 = 1.0 + 0.001 * var_x26 + 0.001 * var_x29;
            const double var_x33 = mParameters[14] / var_x32;
            const double var_x34 = var_x31 * var_x33;
            const double var_x57 = 1 / var_chaste_interface__membrane__Ca_i_peripheral;
            const double var_x58 = pow(var_x57, 1.5);
            const double var_x59 = var_x57 * var_x58 / pow((1.0 + 1.0000000000000002e-6 * var_x58), 2);
            const double var_x60 = var_x4 * var_x57;
            const double var_x61 = var_x30 - var_x27;
            const double var_x62 = var_x33 * var_x61 / pow((0.0068999999999999999 + var_chaste_interface__membrane__Ca_i_peripheral), 2);
            const double var_x63 = var_x22 * var_x57;
            const double var_x64 = var_x24 * var_x25 * var_x34;
            const double var_x65 = var_x31 * var_x61 * mParameters[14] / pow(var_x32, 2);
            const double var_x66 = var_x25 * var_x65;
            const double var_x96 = pow(var_chaste_interface__membrane__Ca_sr, 1.6000000000000001);
            const double var_x97 = 0.42784033515676106 * var_x96;
            const double var_x98 = 1.0 + var_x97;
            const double var_x101 = 1.6807231087970119e-6 + 7.1908113817342693e-7 * var_x96;
            const double var_x102 = -var_x97;
            const double var_x108 = pow(var_chaste_interface__membrane__Ca_i_peripheral, 0.60000000000000009);
            const double var_x109 = pow(var_chaste_interface__membrane__Ca_i_peripheral, 1.6000000000000001);
            const double var_x110 = 594982.00195257401 * var_x109;
            const double var_x111 = mParameters[3] / (var_x110 + var_x98);
            const double var_x112 = var_x108 * var_x111;
            const double var_x113 = (var_x102 + var_x110) * mParameters[3] / pow((var_x101 + var_x109), 2);
            const double var_x114 = var_x108 * var_x113;
            const double var_x115 = pow(mParameters[2], 2);
            const double var_x116 = pow(var_chaste_interface__membrane__Ca_i_peripheral, 2);
            const double var_x117 = 1.0 + var_x115 / var_x116;
            const double var_x118 = var_x115 * mParameters[1] * var_chaste_interface__membrane__Ca_sr / (pow(var_x117, 2) * pow(var_chaste_interface__membrane__Ca_i_peripheral, 3));
            
            partialF = -0.0097654511825238238 + 5.2521662304950081e-12 * var_x114 + 3.9061804730095297e-6 * var_x118 - 0.0020000000000003904 * var_x64 - 2.0000000000003904e-6 * var_x66 - 2.34784733061495e-5 * var_x60 - 1.3800000000002694e-5 * var_x62 - 1.8592856622554101 * var_x112 - 1.4648176773785738e-11 * var_x59 - 2.608719256238833e-9 * var_x57 - 2.608719256238833e-5 * var_x63;
        }
        else
        {
            const double y_save = rY[2];
            rY[2] += delta;
            const double temp = EvaluateYDerivative2(var_chaste_interface__Time__time, rY);
            partialF = (temp-mEvalF[2])/delta;
            rY[2] = y_save;
        }
        return partialF;
    }
    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluateYDerivative3(double var_chaste_interface__Time__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__Ca_i_bulk = rY[1];
        // Units: millimolar; Initial value: 3.09001620863236e-05
        double var_chaste_interface__membrane__Ca_i_peripheral = rY[2];
        // Units: millimolar; Initial value: 8.37523918148654e-06
        double var_chaste_interface__membrane__Ca_sr = rY[3];
        // Units: millimolar; Initial value: 0.1607
        

        // Mathematics
        const double var_Environment__F = 96485.341499999995; // F_units
        const double var_i_serca_bulk__H = 1.6000000000000001; // dimensionless
        const double var_i_serca_bulk__Kmf = 0.00024600000000000002; // millimolar
        const double var_i_serca_bulk__Kmr = 1.7; // millimolar
        const double var_i_serca_per__H = 1.6000000000000001; // dimensionless
        const double var_i_serca_per__Kmf = 0.00024600000000000002; // millimolar
        const double var_i_serca_per__Kmr = 1.7; // millimolar
        const double var_i_leak__i_leak = (-var_chaste_interface__membrane__Ca_i_bulk + var_chaste_interface__membrane__Ca_sr) * mParameters[0]; // current_units
        const double var_i_rel_per__i_rel_per = mParameters[1] * var_chaste_interface__membrane__Ca_sr / (1.0 + pow(mParameters[2], 2) / pow(var_chaste_interface__membrane__Ca_i_peripheral, 2)); // current_units
        const double var_i_serca_bulk__i_serca_bulk = (pow((var_chaste_interface__membrane__Ca_i_bulk / var_i_serca_bulk__Kmf), var_i_serca_bulk__H) - pow((var_chaste_interface__membrane__Ca_sr / var_i_serca_bulk__Kmr), var_i_serca_bulk__H)) * mParameters[3] / (1.0 + pow((var_chaste_interface__membrane__Ca_i_bulk / var_i_serca_bulk__Kmf), var_i_serca_bulk__H) + pow((var_chaste_interface__membrane__Ca_sr / var_i_serca_bulk__Kmr), var_i_serca_bulk__H)); // current_units
        const double var_i_serca_per__i_serca_per = (pow((var_chaste_interface__membrane__Ca_i_peripheral / var_i_serca_per__Kmf), var_i_serca_per__H) - pow((var_chaste_interface__membrane__Ca_sr / var_i_serca_per__Kmr), var_i_serca_per__H)) * mParameters[3] / (1.0 + pow((var_chaste_interface__membrane__Ca_i_peripheral / var_i_serca_per__Kmf), var_i_serca_per__H) + pow((var_chaste_interface__membrane__Ca_sr / var_i_serca_per__Kmr), var_i_serca_per__H)); // current_units
        const double var_membrane__cell_volume = 13266.5; // volume_units
        const double var_membrane__sr_fraction = 0.059999999999999998; // dimensionless
        const double var_membrane__sr_volume = var_membrane__cell_volume * var_membrane__sr_fraction; // volume_units
        const double d_dt_chaste_interface_var_membrane__Ca_sr = 500.0 * (-var_i_leak__i_leak - var_i_rel_per__i_rel_per + var_i_serca_bulk__i_serca_bulk + var_i_serca_per__i_serca_per) / (var_Environment__F * var_membrane__sr_volume); // millimolar / time_units

        return d_dt_chaste_interface_var_membrane__Ca_sr;
    }

    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluatePartialDerivative3(double var_chaste_interface__Time__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__Ca_i_bulk = rY[1];
            // Units: millimolar; Initial value: 3.09001620863236e-05
            double var_chaste_interface__membrane__Ca_i_peripheral = rY[2];
            // Units: millimolar; Initial value: 8.37523918148654e-06
            double var_chaste_interface__membrane__Ca_sr = rY[3];
            // Units: millimolar; Initial value: 0.1607
            

            const double var_x94 = pow(var_chaste_interface__membrane__Ca_i_bulk, 1.6000000000000001);
            const double var_x95 = 594982.00195257401 * var_x94;
            const double var_x96 = pow(var_chaste_interface__membrane__Ca_sr, 1.6000000000000001);
            const double var_x97 = 0.42784033515676106 * var_x96;
            const double var_x98 = 1.0 + var_x97;
            const double var_x99 = mParameters[3] / (var_x95 + var_x98);
            const double var_x101 = 1.6807231087970119e-6 + 7.1908113817342693e-7 * var_x96;
            const double var_x102 = -var_x97;
            const double var_x103 = (var_x102 + var_x95) * mParameters[3] / pow((var_x101 + var_x94), 2);
            const double var_x105 = pow(var_chaste_interface__membrane__Ca_sr, 0.60000000000000009);
            const double var_x106 = var_x105 * var_x99;
            const double var_x107 = var_x103 * var_x105;
            const double var_x109 = pow(var_chaste_interface__membrane__Ca_i_peripheral, 1.6000000000000001);
            const double var_x110 = 594982.00195257401 * var_x109;
            const double var_x111 = mParameters[3] / (var_x110 + var_x98);
            const double var_x113 = (var_x102 + var_x110) * mParameters[3] / pow((var_x101 + var_x109), 2);
            const double var_x115 = pow(mParameters[2], 2);
            const double var_x116 = pow(var_chaste_interface__membrane__Ca_i_peripheral, 2);
            const double var_x117 = 1.0 + var_x115 / var_x116;
            const double var_x119 = mParameters[1] / var_x117;
            const double var_x120 = var_x105 * var_x111;
            const double var_x121 = var_x105 * var_x113;
            const double var_x125 = 6.5103007883492173e-6 * mParameters[0];
            
            partialF = -var_x125 - 4.4565908340138475e-6 * var_x106 - 4.4565908340138475e-6 * var_x120 - 6.5103007883492173e-6 * var_x119 - 1.2589112236334627e-17 * var_x107 - 1.2589112236334627e-17 * var_x121;
        }
        else
        {
            const double y_save = rY[3];
            rY[3] += delta;
            const double temp = EvaluateYDerivative3(var_chaste_interface__Time__time, rY);
            partialF = (temp-mEvalF[3])/delta;
            rY[3] = y_save;
        }
        return partialF;
    }
    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluateYDerivative4(double var_chaste_interface__Time__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: voltage_units; Initial value: -88.744
        double var_chaste_interface__membrane__Ca_i_peripheral = rY[2];
        // Units: millimolar; Initial value: 8.37523918148654e-06
        double var_chaste_interface__membrane__Na_i = rY[4];
        // Units: millimolar; Initial value: 6.75814832463522
        double var_chaste_interface__x_na_fast__x_na_fast = rY[13];
        // Units: dimensionless; Initial value: 2.90568689212866e-06
        double var_chaste_interface__y_na_fast__y_na_fast = rY[14];
        // Units: dimensionless; Initial value: 0.993212025695132
        double var_chaste_interface__x_na_late__x_na_late = rY[15];
        // Units: dimensionless; Initial value: 7.9043398966996e-06
        double var_chaste_interface__y_na_late__y_na_late = rY[16];
        // Units: dimensionless; Initial value: 0.839555875175682
        double var_chaste_interface__y_gate_f_na__y_gate_f_na = rY[21];
        // Units: dimensionless; Initial value: 0.011099
        

        // Mathematics
        const double var_Environment__F = 96485.341499999995; // F_units
        const double var_Environment__R = 8314.4719999999998; // R_units
        const double var_Environment__T = 310.0; // Temperature_units
        const double var_Environment__RToF = var_Environment__R * var_Environment__T / var_Environment__F; // voltage_units
        const double var_i_f_na__G_f_na = 0.045290323; // conductance_units
        const double var_i_na_late__G_max_na_late = 2.0; // conductance_units
        const double var_i_nab__G_max_nab = 0.01; // conductance_units
        const double var_i_naca__d_NaCa = 0.001; // dimensionless
        const double var_i_naca__gamma = 0.5; // dimensionless
        const double var_i_naca__n_NaCa = 3.0; // dimensionless
        const double var_i_nak__g_nak = 442.19999999999999; // current_units
        const double var_i_f_na__E_na = var_Environment__RToF * log(mParameters[6] / var_chaste_interface__membrane__Na_i); // voltage_units
        const double var_i_na_fast__E_na = var_Environment__RToF * log(mParameters[6] / var_chaste_interface__membrane__Na_i); // voltage_units
        const double var_i_na_late__E_na = var_Environment__RToF * log(mParameters[6] / var_chaste_interface__membrane__Na_i); // voltage_units
        const double var_i_nab__E_na = var_Environment__RToF * log(mParameters[6] / var_chaste_interface__membrane__Na_i); // voltage_units
        const double var_i_nab__i_nab = (-var_i_nab__E_na + var_chaste_interface__membrane__Vm) * var_i_nab__G_max_nab; // current_units
        const double var_i_naca__i_naca = 512.00911320399996 * (pow(var_chaste_interface__membrane__Na_i, var_i_naca__n_NaCa) * mParameters[4] * exp((-2.0 + var_i_naca__n_NaCa) * var_i_naca__gamma * var_chaste_interface__membrane__Vm / var_Environment__RToF) - pow(mParameters[6], var_i_naca__n_NaCa) * var_chaste_interface__membrane__Ca_i_peripheral * exp((-1.0 + var_i_naca__gamma) * (-2.0 + var_i_naca__n_NaCa) * var_chaste_interface__membrane__Vm / var_Environment__RToF)) * mParameters[14] / ((1.0 + 144.92753623188406 * var_chaste_interface__membrane__Ca_i_peripheral) * (1.0 + (pow(mParameters[6], var_i_naca__n_NaCa) * var_chaste_interface__membrane__Ca_i_peripheral + pow(var_chaste_interface__membrane__Na_i, var_i_naca__n_NaCa) * mParameters[4]) * var_i_naca__d_NaCa)); // current_units
        const double var_membrane__bulk_fraction = 0.59999999999999998; // dimensionless
        const double var_membrane__cell_volume = 13266.5; // volume_units
        const double var_membrane__periphery_fraction = 0.20000000000000001; // dimensionless
        const double var_membrane__diffusable_volume = (var_membrane__bulk_fraction + var_membrane__periphery_fraction) * var_membrane__cell_volume; // volume_units
        const double var_x_nak__x_nak = 1 / (1.0 + exp(-1.7777777777777777 - 0.022222222222222223 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_i_f_na__i_f_na = (-var_i_f_na__E_na + var_chaste_interface__membrane__Vm) * var_i_f_na__G_f_na * var_chaste_interface__y_gate_f_na__y_gate_f_na; // current_units
        const double var_i_na_fast__i_na_fast = (-var_i_na_fast__E_na + var_chaste_interface__membrane__Vm) * mParameters[9] * var_chaste_interface__x_na_fast__x_na_fast * var_chaste_interface__y_na_fast__y_na_fast; // current_units
        const double var_i_na_late__i_na_late = (-var_i_na_late__E_na + var_chaste_interface__membrane__Vm) * var_i_na_late__G_max_na_late * var_chaste_interface__x_na_late__x_na_late * var_chaste_interface__y_na_late__y_na_late; // current_units
        const double var_y_nak__y_nak = 1 / (1.0 + exp(0.0080000000000000002 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_i_nak__i_nak = var_i_nak__g_nak * var_x_nak__x_nak * var_y_nak__y_nak / ((1.0 + 31.98 / var_chaste_interface__membrane__Na_i) * (1.0 + 2.536253862184366 * pow((1 / mParameters[5]), 1.45))); // current_units
        const double d_dt_chaste_interface_var_membrane__Na_i = 1000.0 * (-var_i_f_na__i_f_na - var_i_na_fast__i_na_fast - var_i_na_late__i_na_late - var_i_nab__i_nab - 3.0 * var_i_naca__i_naca - 3.0 * var_i_nak__i_nak) / (var_Environment__F * var_membrane__diffusable_volume); // millimolar / time_units

        return d_dt_chaste_interface_var_membrane__Na_i;
    }

    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluatePartialDerivative4(double var_chaste_interface__Time__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: voltage_units; Initial value: -88.744
            double var_chaste_interface__membrane__Ca_i_peripheral = rY[2];
            // Units: millimolar; Initial value: 8.37523918148654e-06
            double var_chaste_interface__membrane__Na_i = rY[4];
            // Units: millimolar; Initial value: 6.75814832463522
            double var_chaste_interface__x_na_fast__x_na_fast = rY[13];
            // Units: dimensionless; Initial value: 2.90568689212866e-06
            double var_chaste_interface__y_na_fast__y_na_fast = rY[14];
            // Units: dimensionless; Initial value: 0.993212025695132
            double var_chaste_interface__x_na_late__x_na_late = rY[15];
            // Units: dimensionless; Initial value: 7.9043398966996e-06
            double var_chaste_interface__y_na_late__y_na_late = rY[16];
            // Units: dimensionless; Initial value: 0.839555875175682
            double var_chaste_interface__y_gate_f_na__y_gate_f_na = rY[21];
            // Units: dimensionless; Initial value: 0.011099
            

            const double var_x3 = var_chaste_interface__x_na_late__x_na_late * var_chaste_interface__y_na_late__y_na_late;
            const double var_x7 = mParameters[9] * var_chaste_interface__y_na_fast__y_na_fast;
            const double var_x8 = var_x7 * var_chaste_interface__x_na_fast__x_na_fast;
            const double var_x23 = 0.018716945411372737 * var_chaste_interface__membrane__Vm;
            const double var_x24 = exp(-var_x23);
            const double var_x25 = pow(mParameters[6], 3.0);
            const double var_x26 = var_x25 * var_chaste_interface__membrane__Ca_i_peripheral;
            const double var_x27 = var_x24 * var_x26;
            const double var_x28 = exp(var_x23);
            const double var_x29 = pow(var_chaste_interface__membrane__Na_i, 3.0) * mParameters[4];
            const double var_x30 = var_x28 * var_x29;
            const double var_x31 = 1 / (1.0 + 144.92753623188406 * var_chaste_interface__membrane__Ca_i_peripheral);
            const double var_x32 = 1.0 + 0.001 * var_x26 + 0.001 * var_x29;
            const double var_x33 = mParameters[14] / var_x32;
            const double var_x34 = var_x31 * var_x33;
            const double var_x41 = exp(0.0080000000000000002 * var_chaste_interface__membrane__Vm);
            const double var_x42 = 1.0 + var_x41;
            const double var_x43 = 1 / var_x42;
            const double var_x44 = exp(-1.7777777777777777 - 0.022222222222222223 * var_chaste_interface__membrane__Vm);
            const double var_x45 = 1.0 + var_x44;
            const double var_x46 = 1 / var_chaste_interface__membrane__Na_i;
            const double var_x47 = 1 / (1.0 + 2.536253862184366 * pow((1 / mParameters[5]), 1.45));
            const double var_x50 = 1 / var_x45;
            const double var_x61 = var_x30 - var_x27;
            const double var_x65 = var_x31 * var_x61 * mParameters[14] / pow(var_x32, 2);
            const double var_x67 = var_x46 * var_chaste_interface__y_gate_f_na__y_gate_f_na;
            const double var_x68 = var_x3 * var_x46;
            const double var_x69 = var_x46 * var_x8;
            const double var_x70 = var_x43 * var_x47 * var_x50 / (pow((0.031269543464665414 + var_x46), 2) * pow(var_chaste_interface__membrane__Na_i, 2));
            const double var_x71 = pow(var_chaste_interface__membrane__Na_i, 2.0) * mParameters[4];
            const double var_x72 = var_x28 * var_x34 * var_x71;
            const double var_x73 = var_x65 * var_x71;
            
            partialF = 4.5000000000008793e-6 * var_x73 - 2.6087192562388331e-7 * var_x46 - 0.0045000000000008792 * var_x72 - 1.1814973773137653e-6 * var_x67 - 4.0509216819062244e-5 * var_x70 - 2.6087192562388333e-5 * var_x69 - 5.2174385124776666e-5 * var_x68;
        }
        else
        {
            const double y_save = rY[4];
            rY[4] += delta;
            const double temp = EvaluateYDerivative4(var_chaste_interface__Time__time, rY);
            partialF = (temp-mEvalF[4])/delta;
            rY[4] = y_save;
        }
        return partialF;
    }
    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluateYDerivative5(double var_chaste_interface__Time__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: voltage_units; Initial value: -88.744
        double var_chaste_interface__membrane__Na_i = rY[4];
        // Units: millimolar; Initial value: 6.75814832463522
        double var_chaste_interface__membrane__K_i = rY[5];
        // Units: millimolar; Initial value: 139.943221899032
        double var_chaste_interface__x_to_fast__x_to_fast = rY[11];
        // Units: dimensionless; Initial value: 2.39836311045441e-05
        double var_chaste_interface__y_to_fast__y_to_fast = rY[12];
        // Units: dimensionless; Initial value: 0.865769351306921
        double var_chaste_interface__y_kr__y_kr = rY[17];
        // Units: dimensionless; Initial value: 0.202112622607795
        double var_chaste_interface__x_ks__x_ks = rY[18];
        // Units: dimensionless; Initial value: 0.0147603344538846
        double var_chaste_interface__y_ks__y_ks = rY[19];
        // Units: dimensionless; Initial value: 0.0385082219915004
        double var_chaste_interface__y_gate_f_k__y_gate_f_k = rY[20];
        // Units: dimensionless; Initial value: 0.011099
        

        // Mathematics
        const double var_Environment__F = 96485.341499999995; // F_units
        const double var_Environment__R = 8314.4719999999998; // R_units
        const double var_Environment__T = 310.0; // Temperature_units
        const double var_Environment__RToF = var_Environment__R * var_Environment__T / var_Environment__F; // voltage_units
        const double var_i_f_k__G_f_k = 0.18870967699999999; // conductance_units
        const double var_i_kb__G_max_kb = 0.01; // conductance_units
        const double var_i_nak__g_nak = 442.19999999999999; // current_units
        const double var_i_to_sustained__G_max_to_sustained = 3.0; // conductance_units
        const double var_membrane__Cm_converted = 9.9999999999999995e-7 * mParameters[8]; // uF
        const double var_i_f_k__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_k1__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_kb__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_kr__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_ks__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_to_fast__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_to_sustained__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_kb__i_kb = (-var_i_kb__E_k + var_chaste_interface__membrane__Vm) * var_i_kb__G_max_kb; // current_units
        const double var_membrane__bulk_fraction = 0.59999999999999998; // dimensionless
        const double var_membrane__cell_volume = 13266.5; // volume_units
        const double var_membrane__i_stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__Time__time); // uA_per_cm2
        const double var_membrane__i_stim = 1000000.0 * var_membrane__Cm_converted * var_membrane__i_stim_converted / HeartConfig::Instance()->GetCapacitance(); // current_units
        const double var_membrane__periphery_fraction = 0.20000000000000001; // dimensionless
        const double var_membrane__diffusable_volume = (var_membrane__bulk_fraction + var_membrane__periphery_fraction) * var_membrane__cell_volume; // volume_units
        const double var_x_k1__x_k1 = 1 / (1.0 + exp(9.1999999999999993 + 0.10000000000000001 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_i_k1__i_k1 = 0.25946870969507452 * pow(mParameters[5], 0.80000000000000004) * (-var_i_k1__E_k + var_chaste_interface__membrane__Vm) * mParameters[11] * var_x_k1__x_k1; // current_units
        const double var_x_kr__x_kr = 1 / (1.0 + exp(1.4732142857142858 + 0.044642857142857144 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_x_nak__x_nak = 1 / (1.0 + exp(-1.7777777777777777 - 0.022222222222222223 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_x_to_sustained__x_to_sustained = 1 / (1.0 + exp(0.29411764705882354 - 0.058823529411764705 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_i_to_sustained__i_to_sustained = (-var_i_to_sustained__E_k + var_chaste_interface__membrane__Vm) * var_i_to_sustained__G_max_to_sustained * var_x_to_sustained__x_to_sustained; // current_units
        const double var_i_f_k__i_f_k = (-var_i_f_k__E_k + var_chaste_interface__membrane__Vm) * var_i_f_k__G_f_k * var_chaste_interface__y_gate_f_k__y_gate_f_k; // current_units
        const double var_i_kr__i_kr = 0.18518518518518517 * (-var_i_kr__E_k + var_chaste_interface__membrane__Vm) * mParameters[5] * mParameters[12] * var_x_kr__x_kr * var_chaste_interface__y_kr__y_kr; // current_units
        const double var_i_ks__i_ks = (-var_i_ks__E_k + var_chaste_interface__membrane__Vm) * mParameters[13] * var_chaste_interface__x_ks__x_ks * var_chaste_interface__y_ks__y_ks; // current_units
        const double var_y_nak__y_nak = 1 / (1.0 + exp(0.0080000000000000002 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_i_nak__i_nak = var_i_nak__g_nak * var_x_nak__x_nak * var_y_nak__y_nak / ((1.0 + 31.98 / var_chaste_interface__membrane__Na_i) * (1.0 + 2.536253862184366 * pow((1 / mParameters[5]), 1.45))); // current_units
        const double var_i_to_fast__i_to_fast = (-var_i_to_fast__E_k + var_chaste_interface__membrane__Vm) * mParameters[15] * var_chaste_interface__x_to_fast__x_to_fast * var_chaste_interface__y_to_fast__y_to_fast; // current_units
        const double d_dt_chaste_interface_var_membrane__K_i = 1000.0 * (2.0 * var_i_nak__i_nak - var_i_f_k__i_f_k - var_i_k1__i_k1 - var_i_kb__i_kb - var_i_kr__i_kr - var_i_ks__i_ks - var_i_to_fast__i_to_fast - var_i_to_sustained__i_to_sustained - var_membrane__i_stim) / (var_Environment__F * var_membrane__diffusable_volume); // millimolar / time_units

        return d_dt_chaste_interface_var_membrane__K_i;
    }

    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluatePartialDerivative5(double var_chaste_interface__Time__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: voltage_units; Initial value: -88.744
            double var_chaste_interface__membrane__K_i = rY[5];
            // Units: millimolar; Initial value: 139.943221899032
            double var_chaste_interface__x_to_fast__x_to_fast = rY[11];
            // Units: dimensionless; Initial value: 2.39836311045441e-05
            double var_chaste_interface__y_to_fast__y_to_fast = rY[12];
            // Units: dimensionless; Initial value: 0.865769351306921
            double var_chaste_interface__y_kr__y_kr = rY[17];
            // Units: dimensionless; Initial value: 0.202112622607795
            double var_chaste_interface__x_ks__x_ks = rY[18];
            // Units: dimensionless; Initial value: 0.0147603344538846
            double var_chaste_interface__y_ks__y_ks = rY[19];
            // Units: dimensionless; Initial value: 0.0385082219915004
            double var_chaste_interface__y_gate_f_k__y_gate_f_k = rY[20];
            // Units: dimensionless; Initial value: 0.011099
            

            const double var_x0 = exp(0.29411764705882354 - 0.058823529411764705 * var_chaste_interface__membrane__Vm);
            const double var_x1 = 1.0 + var_x0;
            const double var_x2 = 1 / var_x1;
            const double var_x5 = mParameters[13] * var_chaste_interface__y_ks__y_ks;
            const double var_x6 = var_x5 * var_chaste_interface__x_ks__x_ks;
            const double var_x9 = mParameters[15] * var_chaste_interface__y_to_fast__y_to_fast;
            const double var_x10 = var_x9 * var_chaste_interface__x_to_fast__x_to_fast;
            const double var_x11 = 0.10000000000000001 * var_chaste_interface__membrane__Vm;
            const double var_x12 = exp(9.1999999999999993 + var_x11);
            const double var_x13 = 1.0 + var_x12;
            const double var_x14 = pow(mParameters[5], 0.80000000000000004) * mParameters[11];
            const double var_x15 = var_x14 / var_x13;
            const double var_x16 = 1 / var_chaste_interface__membrane__K_i;
            const double var_x17 = var_x16 * mParameters[5];
            const double var_x36 = exp(1.4732142857142858 + 0.044642857142857144 * var_chaste_interface__membrane__Vm);
            const double var_x37 = 1.0 + var_x36;
            const double var_x38 = 1 / var_x37;
            const double var_x53 = mParameters[12] * var_chaste_interface__y_kr__y_kr;
            const double var_x74 = var_x16 * var_x2;
            const double var_x75 = var_x16 * var_chaste_interface__y_gate_f_k__y_gate_f_k;
            const double var_x77 = var_x15 * var_x16;
            const double var_x78 = var_x17 * var_x38 * var_x53;
            const double var_x129 = 2.6087192562388333e-5 * var_x16;
            
            partialF = -2.6087192562388331e-7 * var_x16 - 4.8309615856274683e-6 * var_x78 - 7.8261577687164992e-5 * var_x74 - 4.9229056822851045e-6 * var_x75 - 6.7688101937298463e-6 * var_x77 - var_x10 * var_x129 - var_x129 * var_x6;
        }
        else
        {
            const double y_save = rY[5];
            rY[5] += delta;
            const double temp = EvaluateYDerivative5(var_chaste_interface__Time__time, rY);
            partialF = (temp-mEvalF[5])/delta;
            rY[5] = y_save;
        }
        return partialF;
    }
    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluateYDerivative6(double var_chaste_interface__Time__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: voltage_units; Initial value: -88.744
        double var_chaste_interface__x_Ttype__x_Ttype = rY[6];
        // Units: dimensionless; Initial value: 0.00058439023999374
        

        // Mathematics
        const double var_x_Ttype__tau_x_Ttype = 1.0; // time_units
        const double var_x_Ttype__x_inf_Ttype = 1 / (1.0 + exp(-8.6909090909090896 - 0.18181818181818182 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double d_dt_chaste_interface_var_x_Ttype__x_Ttype = (-var_chaste_interface__x_Ttype__x_Ttype + var_x_Ttype__x_inf_Ttype) / var_x_Ttype__tau_x_Ttype; // 1 / time_units

        return d_dt_chaste_interface_var_x_Ttype__x_Ttype;
    }

    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluatePartialDerivative6(double var_chaste_interface__Time__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            

            
            partialF = -1.0;
        }
        else
        {
            const double y_save = rY[6];
            rY[6] += delta;
            const double temp = EvaluateYDerivative6(var_chaste_interface__Time__time, rY);
            partialF = (temp-mEvalF[6])/delta;
            rY[6] = y_save;
        }
        return partialF;
    }
    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluateYDerivative7(double var_chaste_interface__Time__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: voltage_units; Initial value: -88.744
        double var_chaste_interface__y_Ttype__y_Ttype = rY[7];
        // Units: dimensionless; Initial value: 0.900843399895183
        

        // Mathematics
        const double var_y_Ttype__tau_y_Ttype = 1.4227099999999999 * exp(-0.051189999999999999 * var_chaste_interface__membrane__Vm); // time_units
        const double var_y_Ttype__y_inf_Ttype = 1 / (1.0 + exp(17.545219638242894 + 0.25839793281653745 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double d_dt_chaste_interface_var_y_Ttype__y_Ttype = (-var_chaste_interface__y_Ttype__y_Ttype + var_y_Ttype__y_inf_Ttype) / var_y_Ttype__tau_y_Ttype; // 1 / time_units

        return d_dt_chaste_interface_var_y_Ttype__y_Ttype;
    }

    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluatePartialDerivative7(double var_chaste_interface__Time__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: voltage_units; Initial value: -88.744
            

            const double var_x133 = 1 / exp(-0.051189999999999999 * var_chaste_interface__membrane__Vm);
            
            partialF = -0.70288393277618066 * var_x133;
        }
        else
        {
            const double y_save = rY[7];
            rY[7] += delta;
            const double temp = EvaluateYDerivative7(var_chaste_interface__Time__time, rY);
            partialF = (temp-mEvalF[7])/delta;
            rY[7] = y_save;
        }
        return partialF;
    }
    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluateYDerivative8(double var_chaste_interface__Time__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: voltage_units; Initial value: -88.744
        double var_chaste_interface__x_Ltype__x_Ltype = rY[8];
        // Units: dimensionless; Initial value: 1.39762741967807e-06
        

        // Mathematics
        const double var_x_Ltype__tau_x_Ltype = 0.69999999999999996; // time_units
        const double var_x_Ltype__x_inf_Ltype = 1 / (1.0 + exp(-2.6545454545454543 - 0.18181818181818182 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double d_dt_chaste_interface_var_x_Ltype__x_Ltype = (-var_chaste_interface__x_Ltype__x_Ltype + var_x_Ltype__x_inf_Ltype) / var_x_Ltype__tau_x_Ltype; // 1 / time_units

        return d_dt_chaste_interface_var_x_Ltype__x_Ltype;
    }

    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluatePartialDerivative8(double var_chaste_interface__Time__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            

            
            partialF = -1.4285714285714286;
        }
        else
        {
            const double y_save = rY[8];
            rY[8] += delta;
            const double temp = EvaluateYDerivative8(var_chaste_interface__Time__time, rY);
            partialF = (temp-mEvalF[8])/delta;
            rY[8] = y_save;
        }
        return partialF;
    }
    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluateYDerivative9(double var_chaste_interface__Time__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: voltage_units; Initial value: -88.744
        double var_chaste_interface__y_Ltype__y_Ltype = rY[9];
        // Units: dimensionless; Initial value: 0.762933565557978
        

        // Mathematics
        const double var_y_Ltype__tau_y_Ltype = 25.100000000000001 / (0.040000000000000001 + 0.69999999999999996 * exp(-0.16483600000000001 * pow((1 + 0.068965517241379309 * var_chaste_interface__membrane__Vm), 2))); // time_units
        const double var_y_Ltype__y_inf_Ltype = 1 / (1.0 + exp(5.5956678700361007 + 0.18050541516245489 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double d_dt_chaste_interface_var_y_Ltype__y_Ltype = (-var_chaste_interface__y_Ltype__y_Ltype + var_y_Ltype__y_inf_Ltype) / var_y_Ltype__tau_y_Ltype; // 1 / time_units

        return d_dt_chaste_interface_var_y_Ltype__y_Ltype;
    }

    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluatePartialDerivative9(double var_chaste_interface__Time__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: voltage_units; Initial value: -88.744
            

            const double var_x139 = 0.027888446215139438 * exp(-0.16483600000000001 * pow((1 + 0.068965517241379309 * var_chaste_interface__membrane__Vm), 2));
            
            partialF = -0.001593625498007968 - var_x139;
        }
        else
        {
            const double y_save = rY[9];
            rY[9] += delta;
            const double temp = EvaluateYDerivative9(var_chaste_interface__Time__time, rY);
            partialF = (temp-mEvalF[9])/delta;
            rY[9] = y_save;
        }
        return partialF;
    }
    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluateYDerivative10(double var_chaste_interface__Time__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__Ca_i_peripheral = rY[2];
        // Units: millimolar; Initial value: 8.37523918148654e-06
        double var_chaste_interface__y_ca_Ltype__y_ca_Ltype = rY[10];
        // Units: dimensionless; Initial value: 0.990616705407034
        

        // Mathematics
        const double var_y_ca_Ltype__tau_y_ca_Ltype = 2.0 + 80.0 / (1.0 + 99999999.999999985 * pow(var_chaste_interface__membrane__Ca_i_peripheral, 2)); // time_units
        const double var_y_ca_Ltype__y_ca_inf_Ltype = 0.40000000000000002 + 0.59999999999999998 / (1.0 + 99999999.999999985 * pow(var_chaste_interface__membrane__Ca_i_peripheral, 2)); // dimensionless
        const double d_dt_chaste_interface_var_y_ca_Ltype__y_ca_Ltype = (-var_chaste_interface__y_ca_Ltype__y_ca_Ltype + var_y_ca_Ltype__y_ca_inf_Ltype) / var_y_ca_Ltype__tau_y_ca_Ltype; // 1 / time_units

        return d_dt_chaste_interface_var_y_ca_Ltype__y_ca_Ltype;
    }

    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluatePartialDerivative10(double var_chaste_interface__Time__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__Ca_i_peripheral = rY[2];
            // Units: millimolar; Initial value: 8.37523918148654e-06
            

            const double var_x116 = pow(var_chaste_interface__membrane__Ca_i_peripheral, 2);
            const double var_x140 = 1 / (1.0 + 99999999.999999985 * var_x116);
            const double var_x141 = 1 / (2.0 + 80.0 * var_x140);
            
            partialF = -var_x141;
        }
        else
        {
            const double y_save = rY[10];
            rY[10] += delta;
            const double temp = EvaluateYDerivative10(var_chaste_interface__Time__time, rY);
            partialF = (temp-mEvalF[10])/delta;
            rY[10] = y_save;
        }
        return partialF;
    }
    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluateYDerivative11(double var_chaste_interface__Time__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: voltage_units; Initial value: -88.744
        double var_chaste_interface__x_to_fast__x_to_fast = rY[11];
        // Units: dimensionless; Initial value: 2.39836311045441e-05
        

        // Mathematics
        const double var_x_to_fast__tau_x_to_fast = 5.0; // time_units
        const double var_x_to_fast__x_inf_to_fast = 1 / (1.0 + exp(0.77777777777777779 - 0.1111111111111111 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double d_dt_chaste_interface_var_x_to_fast__x_to_fast = (-var_chaste_interface__x_to_fast__x_to_fast + var_x_to_fast__x_inf_to_fast) / var_x_to_fast__tau_x_to_fast; // 1 / time_units

        return d_dt_chaste_interface_var_x_to_fast__x_to_fast;
    }

    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluatePartialDerivative11(double var_chaste_interface__Time__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            

            
            partialF = -0.20000000000000001;
        }
        else
        {
            const double y_save = rY[11];
            rY[11] += delta;
            const double temp = EvaluateYDerivative11(var_chaste_interface__Time__time, rY);
            partialF = (temp-mEvalF[11])/delta;
            rY[11] = y_save;
        }
        return partialF;
    }
    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluateYDerivative12(double var_chaste_interface__Time__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: voltage_units; Initial value: -88.744
        double var_chaste_interface__y_to_fast__y_to_fast = rY[12];
        // Units: dimensionless; Initial value: 0.865769351306921
        

        // Mathematics
        const double var_y_to_fast__tau_y_to_fast = 350.0; // time_units
        const double var_y_to_fast__y_inf_to_fast = 1 / (1.0 + exp(3.4375 + 0.125 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double d_dt_chaste_interface_var_y_to_fast__y_to_fast = (-var_chaste_interface__y_to_fast__y_to_fast + var_y_to_fast__y_inf_to_fast) / var_y_to_fast__tau_y_to_fast; // 1 / time_units

        return d_dt_chaste_interface_var_y_to_fast__y_to_fast;
    }

    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluatePartialDerivative12(double var_chaste_interface__Time__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            

            
            partialF = -0.0028571428571428571;
        }
        else
        {
            const double y_save = rY[12];
            rY[12] += delta;
            const double temp = EvaluateYDerivative12(var_chaste_interface__Time__time, rY);
            partialF = (temp-mEvalF[12])/delta;
            rY[12] = y_save;
        }
        return partialF;
    }
    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluateYDerivative13(double var_chaste_interface__Time__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: voltage_units; Initial value: -88.744
        double var_chaste_interface__x_na_fast__x_na_fast = rY[13];
        // Units: dimensionless; Initial value: 2.90568689212866e-06
        

        // Mathematics
        const double var_x_na_fast__tau_x_na_fast = 0.0050000000000000001; // time_units
        const double var_x_na_fast__x_inf_na_fast = 1 / (1.0 + exp(-5.0 - 0.20000000000000001 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double d_dt_chaste_interface_var_x_na_fast__x_na_fast = (-var_chaste_interface__x_na_fast__x_na_fast + var_x_na_fast__x_inf_na_fast) / var_x_na_fast__tau_x_na_fast; // 1 / time_units

        return d_dt_chaste_interface_var_x_na_fast__x_na_fast;
    }

    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluatePartialDerivative13(double var_chaste_interface__Time__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            

            
            partialF = -200.0;
        }
        else
        {
            const double y_save = rY[13];
            rY[13] += delta;
            const double temp = EvaluateYDerivative13(var_chaste_interface__Time__time, rY);
            partialF = (temp-mEvalF[13])/delta;
            rY[13] = y_save;
        }
        return partialF;
    }
    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluateYDerivative14(double var_chaste_interface__Time__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: voltage_units; Initial value: -88.744
        double var_chaste_interface__y_na_fast__y_na_fast = rY[14];
        // Units: dimensionless; Initial value: 0.993212025695132
        

        // Mathematics
        const double var_y_na_fast__tau_y_na_fast = 2.0; // time_units
        const double var_y_na_fast__y_inf_na_fast = 1 / (1.0 + exp(17.424242424242426 + 0.25252525252525254 * var_chaste_interface__membrane__Vm - 0.25252525252525254 * mParameters[10])); // dimensionless
        const double d_dt_chaste_interface_var_y_na_fast__y_na_fast = (-var_chaste_interface__y_na_fast__y_na_fast + var_y_na_fast__y_inf_na_fast) / var_y_na_fast__tau_y_na_fast; // 1 / time_units

        return d_dt_chaste_interface_var_y_na_fast__y_na_fast;
    }

    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluatePartialDerivative14(double var_chaste_interface__Time__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            

            
            partialF = -0.5;
        }
        else
        {
            const double y_save = rY[14];
            rY[14] += delta;
            const double temp = EvaluateYDerivative14(var_chaste_interface__Time__time, rY);
            partialF = (temp-mEvalF[14])/delta;
            rY[14] = y_save;
        }
        return partialF;
    }
    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluateYDerivative15(double var_chaste_interface__Time__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: voltage_units; Initial value: -88.744
        double var_chaste_interface__x_na_late__x_na_late = rY[15];
        // Units: dimensionless; Initial value: 7.9043398966996e-06
        

        // Mathematics
        const double var_x_na_late__tau_x_na_late = 15.0; // time_units
        const double var_x_na_late__x_inf_na_late = 1 / (1.0 + exp(-6.0 - 0.20000000000000001 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double d_dt_chaste_interface_var_x_na_late__x_na_late = (-var_chaste_interface__x_na_late__x_na_late + var_x_na_late__x_inf_na_late) / var_x_na_late__tau_x_na_late; // 1 / time_units

        return d_dt_chaste_interface_var_x_na_late__x_na_late;
    }

    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluatePartialDerivative15(double var_chaste_interface__Time__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            

            
            partialF = -0.066666666666666666;
        }
        else
        {
            const double y_save = rY[15];
            rY[15] += delta;
            const double temp = EvaluateYDerivative15(var_chaste_interface__Time__time, rY);
            partialF = (temp-mEvalF[15])/delta;
            rY[15] = y_save;
        }
        return partialF;
    }
    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluateYDerivative16(double var_chaste_interface__Time__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: voltage_units; Initial value: -88.744
        double var_chaste_interface__y_na_late__y_na_late = rY[16];
        // Units: dimensionless; Initial value: 0.839555875175682
        

        // Mathematics
        const double var_y_na_late__tau_y_na_late = 120.0 + exp(4.0 + 0.040000000000000001 * var_chaste_interface__membrane__Vm); // time_units
        const double var_y_na_late__y_inf_na_late = 0.10000000000000001 + 0.90000000000000002 / (1.0 + exp(12.0 + 0.15873015873015872 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double d_dt_chaste_interface_var_y_na_late__y_na_late = (-var_chaste_interface__y_na_late__y_na_late + var_y_na_late__y_inf_na_late) / var_y_na_late__tau_y_na_late; // 1 / time_units

        return d_dt_chaste_interface_var_y_na_late__y_na_late;
    }

    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluatePartialDerivative16(double var_chaste_interface__Time__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: voltage_units; Initial value: -88.744
            

            const double var_x151 = exp(4.0 + 0.040000000000000001 * var_chaste_interface__membrane__Vm);
            const double var_x152 = 1 / (120.0 + var_x151);
            
            partialF = -var_x152;
        }
        else
        {
            const double y_save = rY[16];
            rY[16] += delta;
            const double temp = EvaluateYDerivative16(var_chaste_interface__Time__time, rY);
            partialF = (temp-mEvalF[16])/delta;
            rY[16] = y_save;
        }
        return partialF;
    }
    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluateYDerivative17(double var_chaste_interface__Time__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: voltage_units; Initial value: -88.744
        double var_chaste_interface__y_kr__y_kr = rY[17];
        // Units: dimensionless; Initial value: 0.202112622607795
        

        // Mathematics
        const double var_y_kr__y_inf_kr = 1 / (1.0 + exp(-6.666666666666667 - 0.13333333333333333 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_y_kr__ykrv1 = ((fabs(7.0 + var_chaste_interface__membrane__Vm) < 8.1300813008222672e-7) ? (1.1219512195134727e-9 / (1.0 - exp(-1.0000000000011388e-7)) - 614999.99999929965 * (6.9999991869918698 + var_chaste_interface__membrane__Vm) * (-1.1219512195134727e-9 / (1.0 - exp(1.0000000000011388e-7)) - 1.1219512195134727e-9 / (1.0 - exp(-1.0000000000011388e-7)))) : (0.0013799999999999999 * (7.0 + var_chaste_interface__membrane__Vm) / (1.0 - exp(-0.86099999999999999 - 0.123 * var_chaste_interface__membrane__Vm)))); // rate_constants_units
        const double var_y_kr__ykrv2 = ((fabs(10.0 + var_chaste_interface__membrane__Vm) < 6.8965517241448282e-7) ? (-4.2068965517283451e-11 / (-1.0 + exp(-1.000000000001e-7)) + 724999.99999927497 * (10.000000689655172 + var_chaste_interface__membrane__Vm) * (4.2068965517283451e-11 / (-1.0 + exp(1.000000000001e-7)) + 4.2068965517283451e-11 / (-1.0 + exp(-1.000000000001e-7)))) : (6.0999999999999999e-5 * (10.0 + var_chaste_interface__membrane__Vm) / (-1.0 + exp(1.45 + 0.14499999999999999 * var_chaste_interface__membrane__Vm)))); // rate_constants_units
        const double var_y_kr__tau_y_kr = 1 / (var_y_kr__ykrv1 + var_y_kr__ykrv2); // time_units
        const double d_dt_chaste_interface_var_y_kr__y_kr = (-var_chaste_interface__y_kr__y_kr + var_y_kr__y_inf_kr) / var_y_kr__tau_y_kr; // 1 / time_units

        return d_dt_chaste_interface_var_y_kr__y_kr;
    }

    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluatePartialDerivative17(double var_chaste_interface__Time__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: voltage_units; Initial value: -88.744
            

            const double var_x155 = 1 / (1.0 - exp(1.0000000000011388e-7));
            const double var_x156 = 1 / (1.0 - exp(-1.0000000000011388e-7));
            const double var_x157 = 7.0 + var_chaste_interface__membrane__Vm;
            const double var_x158 = fabs(var_x157) < 8.1300813008222672e-7;
            const double var_x159 = exp(-0.86099999999999999 - 0.123 * var_chaste_interface__membrane__Vm);
            const double var_x160 = 1.0 - var_x159;
            const double var_x161 = 0.0013799999999999999 / var_x160;
            const double var_x162 = 1 / (-1.0 + exp(1.000000000001e-7));
            const double var_x163 = 1 / (-1.0 + exp(-1.000000000001e-7));
            const double var_x164 = 10.0 + var_chaste_interface__membrane__Vm;
            const double var_x165 = fabs(var_x164) < 6.8965517241448282e-7;
            const double var_x166 = exp(1.45 + 0.14499999999999999 * var_chaste_interface__membrane__Vm);
            const double var_x167 = -1.0 + var_x166;
            const double var_x168 = 6.0999999999999999e-5 / var_x167;
            const double var_x169 = 1.1219512195134727e-9 * var_x156;
            const double var_x170 = ((var_x158) ? (var_x169 - 614999.99999929965 * (6.9999991869918698 + var_chaste_interface__membrane__Vm) * (-var_x169 - 1.1219512195134727e-9 * var_x155)) : (var_x157 * var_x161));
            const double var_x171 = 4.2068965517283451e-11 * var_x163;
            const double var_x172 = ((var_x165) ? (-var_x171 + 724999.99999927497 * (10.000000689655172 + var_chaste_interface__membrane__Vm) * (var_x171 + 4.2068965517283451e-11 * var_x162)) : (var_x164 * var_x168));
            
            partialF = -var_x170 - var_x172;
        }
        else
        {
            const double y_save = rY[17];
            rY[17] += delta;
            const double temp = EvaluateYDerivative17(var_chaste_interface__Time__time, rY);
            partialF = (temp-mEvalF[17])/delta;
            rY[17] = y_save;
        }
        return partialF;
    }
    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluateYDerivative18(double var_chaste_interface__Time__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: voltage_units; Initial value: -88.744
        double var_chaste_interface__x_ks__x_ks = rY[18];
        // Units: dimensionless; Initial value: 0.0147603344538846
        

        // Mathematics
        const double var_x_ks__tau_x_ks = ((fabs(30.0 + var_chaste_interface__membrane__Vm) < 1.455604075689676e-6) ? (1 / (-1.0465793304208771e-10 / (1.0 - exp(2.1542940320207204e-7)) - 1.9068413391534758e-10 / (-1.0 + exp(-9.9999999999880736e-8)) + 343500.00000040967 * (30.000001455604075 + var_chaste_interface__membrane__Vm) * (1.0465793304208771e-10 / (1.0 - exp(2.1542940320207204e-7)) + 1.0465793304208771e-10 / (1.0 - exp(-2.1542940320207204e-7)) + 1.9068413391534758e-10 / (-1.0 + exp(9.9999999999880736e-8)) + 1.9068413391534758e-10 / (-1.0 + exp(-9.9999999999880736e-8))))) : (1 / (0.00013100000000000001 * (30.0 + var_chaste_interface__membrane__Vm) / (-1.0 + exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__Vm)) + 7.1899999999999999e-5 * (30.0 + var_chaste_interface__membrane__Vm) / (1.0 - exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__Vm))))); // time_units
        const double var_x_ks__x_inf_ks = 1 / (1.0 + exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double d_dt_chaste_interface_var_x_ks__x_ks = (-var_chaste_interface__x_ks__x_ks + var_x_ks__x_inf_ks) / var_x_ks__tau_x_ks; // 1 / time_units

        return d_dt_chaste_interface_var_x_ks__x_ks;
    }

    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluatePartialDerivative18(double var_chaste_interface__Time__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: voltage_units; Initial value: -88.744
            

            const double var_x176 = 1 / (-1.0 + exp(9.9999999999880736e-8));
            const double var_x177 = 1 / (-1.0 + exp(-9.9999999999880736e-8));
            const double var_x178 = 1 / (1.0 - exp(2.1542940320207204e-7));
            const double var_x179 = 1 / (1.0 - exp(-2.1542940320207204e-7));
            const double var_x180 = 30.0 + var_chaste_interface__membrane__Vm;
            const double var_x181 = fabs(var_x180) < 1.455604075689676e-6;
            const double var_x182 = exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__Vm);
            const double var_x183 = -1.0 + var_x182;
            const double var_x184 = 0.00013100000000000001 / var_x183;
            const double var_x185 = exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__Vm);
            const double var_x186 = 1.0 - var_x185;
            const double var_x187 = 7.1899999999999999e-5 / var_x186;
            const double var_x189 = 1.0465793304208771e-10 * var_x178;
            const double var_x190 = 1.9068413391534758e-10 * var_x177;
            const double var_x191 = ((var_x181) ? (-var_x189 - var_x190 + 343500.00000040967 * (30.000001455604075 + var_chaste_interface__membrane__Vm) * (var_x189 + var_x190 + 1.0465793304208771e-10 * var_x179 + 1.9068413391534758e-10 * var_x176)) : (var_x180 * var_x184 + var_x180 * var_x187));
            
            partialF = -var_x191;
        }
        else
        {
            const double y_save = rY[18];
            rY[18] += delta;
            const double temp = EvaluateYDerivative18(var_chaste_interface__Time__time, rY);
            partialF = (temp-mEvalF[18])/delta;
            rY[18] = y_save;
        }
        return partialF;
    }
    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluateYDerivative19(double var_chaste_interface__Time__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: voltage_units; Initial value: -88.744
        double var_chaste_interface__y_ks__y_ks = rY[19];
        // Units: dimensionless; Initial value: 0.0385082219915004
        

        // Mathematics
        const double var_x_ks__tau_x_ks = ((fabs(30.0 + var_chaste_interface__membrane__Vm) < 1.455604075689676e-6) ? (1 / (-1.0465793304208771e-10 / (1.0 - exp(2.1542940320207204e-7)) - 1.9068413391534758e-10 / (-1.0 + exp(-9.9999999999880736e-8)) + 343500.00000040967 * (30.000001455604075 + var_chaste_interface__membrane__Vm) * (1.0465793304208771e-10 / (1.0 - exp(2.1542940320207204e-7)) + 1.0465793304208771e-10 / (1.0 - exp(-2.1542940320207204e-7)) + 1.9068413391534758e-10 / (-1.0 + exp(9.9999999999880736e-8)) + 1.9068413391534758e-10 / (-1.0 + exp(-9.9999999999880736e-8))))) : (1 / (0.00013100000000000001 * (30.0 + var_chaste_interface__membrane__Vm) / (-1.0 + exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__Vm)) + 7.1899999999999999e-5 * (30.0 + var_chaste_interface__membrane__Vm) / (1.0 - exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__Vm))))); // time_units
        const double var_x_ks__x_inf_ks = 1 / (1.0 + exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_y_ks__tau_y_ks = 4.0 * var_x_ks__tau_x_ks; // time_units
        const double var_y_ks__y_inf_ks = var_x_ks__x_inf_ks; // dimensionless
        const double d_dt_chaste_interface_var_y_ks__y_ks = (-var_chaste_interface__y_ks__y_ks + var_y_ks__y_inf_ks) / var_y_ks__tau_y_ks; // 1 / time_units

        return d_dt_chaste_interface_var_y_ks__y_ks;
    }

    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluatePartialDerivative19(double var_chaste_interface__Time__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: voltage_units; Initial value: -88.744
            

            const double var_x176 = 1 / (-1.0 + exp(9.9999999999880736e-8));
            const double var_x177 = 1 / (-1.0 + exp(-9.9999999999880736e-8));
            const double var_x178 = 1 / (1.0 - exp(2.1542940320207204e-7));
            const double var_x179 = 1 / (1.0 - exp(-2.1542940320207204e-7));
            const double var_x180 = 30.0 + var_chaste_interface__membrane__Vm;
            const double var_x181 = fabs(var_x180) < 1.455604075689676e-6;
            const double var_x182 = exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__Vm);
            const double var_x183 = -1.0 + var_x182;
            const double var_x184 = 0.00013100000000000001 / var_x183;
            const double var_x185 = exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__Vm);
            const double var_x186 = 1.0 - var_x185;
            const double var_x187 = 7.1899999999999999e-5 / var_x186;
            const double var_x189 = 1.0465793304208771e-10 * var_x178;
            const double var_x190 = 1.9068413391534758e-10 * var_x177;
            const double var_x191 = ((var_x181) ? (-var_x189 - var_x190 + 343500.00000040967 * (30.000001455604075 + var_chaste_interface__membrane__Vm) * (var_x189 + var_x190 + 1.0465793304208771e-10 * var_x179 + 1.9068413391534758e-10 * var_x176)) : (var_x180 * var_x184 + var_x180 * var_x187));
            
            partialF = -0.25 * var_x191;
        }
        else
        {
            const double y_save = rY[19];
            rY[19] += delta;
            const double temp = EvaluateYDerivative19(var_chaste_interface__Time__time, rY);
            partialF = (temp-mEvalF[19])/delta;
            rY[19] = y_save;
        }
        return partialF;
    }
    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluateYDerivative20(double var_chaste_interface__Time__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: voltage_units; Initial value: -88.744
        double var_chaste_interface__y_gate_f_k__y_gate_f_k = rY[20];
        // Units: dimensionless; Initial value: 0.011099
        

        // Mathematics
        const double var_y_gate_f_k__tau_y_f_gate = 6000.0 / (exp(3.6000000000000001 + 0.11 * var_chaste_interface__membrane__Vm) + exp(-2.8999999999999999 - 0.040000000000000001 * var_chaste_interface__membrane__Vm)); // time_units
        const double var_y_gate_f_k__y_inf_f_gate = 1 / (1.0 + exp(10.9 + 0.10000000000000001 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double d_dt_chaste_interface_var_y_gate_f_k__y_gate_f_k = (-var_chaste_interface__y_gate_f_k__y_gate_f_k + var_y_gate_f_k__y_inf_f_gate) / var_y_gate_f_k__tau_y_f_gate; // 1 / time_units

        return d_dt_chaste_interface_var_y_gate_f_k__y_gate_f_k;
    }

    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluatePartialDerivative20(double var_chaste_interface__Time__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: voltage_units; Initial value: -88.744
            

            const double var_x196 = exp(3.6000000000000001 + 0.11 * var_chaste_interface__membrane__Vm);
            const double var_x197 = exp(-2.8999999999999999 - 0.040000000000000001 * var_chaste_interface__membrane__Vm);
            const double var_x199 = 0.00016666666666666666 * var_x196;
            const double var_x200 = 0.00016666666666666666 * var_x197;
            const double var_x202 = -var_x199 - var_x200;
            
            partialF = var_x202;
        }
        else
        {
            const double y_save = rY[20];
            rY[20] += delta;
            const double temp = EvaluateYDerivative20(var_chaste_interface__Time__time, rY);
            partialF = (temp-mEvalF[20])/delta;
            rY[20] = y_save;
        }
        return partialF;
    }
    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluateYDerivative21(double var_chaste_interface__Time__time, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: voltage_units; Initial value: -88.744
        double var_chaste_interface__y_gate_f_na__y_gate_f_na = rY[21];
        // Units: dimensionless; Initial value: 0.011099
        

        // Mathematics
        const double var_y_gate_f_na__tau_y_f_gate = 6000.0 / (exp(3.6000000000000001 + 0.11 * var_chaste_interface__membrane__Vm) + exp(-2.8999999999999999 - 0.040000000000000001 * var_chaste_interface__membrane__Vm)); // time_units
        const double var_y_gate_f_na__y_inf_f_gate = 1 / (1.0 + exp(10.9 + 0.10000000000000001 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double d_dt_chaste_interface_var_y_gate_f_na__y_gate_f_na = (-var_chaste_interface__y_gate_f_na__y_gate_f_na + var_y_gate_f_na__y_inf_f_gate) / var_y_gate_f_na__tau_y_f_gate; // 1 / time_units

        return d_dt_chaste_interface_var_y_gate_f_na__y_gate_f_na;
    }

    double Cellcorrias_purkinje_2011FromCellMLGRL1::EvaluatePartialDerivative21(double var_chaste_interface__Time__time, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: voltage_units; Initial value: -88.744
            

            const double var_x196 = exp(3.6000000000000001 + 0.11 * var_chaste_interface__membrane__Vm);
            const double var_x197 = exp(-2.8999999999999999 - 0.040000000000000001 * var_chaste_interface__membrane__Vm);
            const double var_x199 = 0.00016666666666666666 * var_x196;
            const double var_x200 = 0.00016666666666666666 * var_x197;
            const double var_x202 = -var_x199 - var_x200;
            
            partialF = var_x202;
        }
        else
        {
            const double y_save = rY[21];
            rY[21] += delta;
            const double temp = EvaluateYDerivative21(var_chaste_interface__Time__time, rY);
            partialF = (temp-mEvalF[21])/delta;
            rY[21] = y_save;
        }
        return partialF;
    }

    std::vector<double> Cellcorrias_purkinje_2011FromCellMLGRL1::ComputeDerivedQuantities(double var_chaste_interface__Time__time, const std::vector<double> & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: voltage_units; Initial value: -88.744
        double var_chaste_interface__membrane__Ca_i_peripheral = rY[2];
        // Units: millimolar; Initial value: 8.37523918148654e-06
        double var_chaste_interface__membrane__Ca_sr = rY[3];
        // Units: millimolar; Initial value: 0.1607
        double var_chaste_interface__membrane__Na_i = rY[4];
        // Units: millimolar; Initial value: 6.75814832463522
        double var_chaste_interface__membrane__K_i = rY[5];
        // Units: millimolar; Initial value: 139.943221899032
        double var_chaste_interface__x_Ltype__x_Ltype = rY[8];
        // Units: dimensionless; Initial value: 1.39762741967807e-06
        double var_chaste_interface__y_Ltype__y_Ltype = rY[9];
        // Units: dimensionless; Initial value: 0.762933565557978
        double var_chaste_interface__y_ca_Ltype__y_ca_Ltype = rY[10];
        // Units: dimensionless; Initial value: 0.990616705407034
        double var_chaste_interface__x_to_fast__x_to_fast = rY[11];
        // Units: dimensionless; Initial value: 2.39836311045441e-05
        double var_chaste_interface__y_to_fast__y_to_fast = rY[12];
        // Units: dimensionless; Initial value: 0.865769351306921
        double var_chaste_interface__x_na_fast__x_na_fast = rY[13];
        // Units: dimensionless; Initial value: 2.90568689212866e-06
        double var_chaste_interface__y_na_fast__y_na_fast = rY[14];
        // Units: dimensionless; Initial value: 0.993212025695132
        double var_chaste_interface__y_kr__y_kr = rY[17];
        // Units: dimensionless; Initial value: 0.202112622607795
        double var_chaste_interface__x_ks__x_ks = rY[18];
        // Units: dimensionless; Initial value: 0.0147603344538846
        double var_chaste_interface__y_ks__y_ks = rY[19];
        // Units: dimensionless; Initial value: 0.0385082219915004
        
        // Mathematics
        const double var_Environment__F = 96485.341499999995; // F_units
        const double var_Environment__R = 8314.4719999999998; // R_units
        const double var_Environment__T = 310.0; // Temperature_units
        const double var_Environment__RToF = var_Environment__R * var_Environment__T / var_Environment__F; // voltage_units
        const double var_i_naca__d_NaCa = 0.001; // dimensionless
        const double var_i_naca__gamma = 0.5; // dimensionless
        const double var_i_naca__n_NaCa = 3.0; // dimensionless
        const double var_i_cal__E_Ca = 0.5 * var_Environment__RToF * log(mParameters[4] / var_chaste_interface__membrane__Ca_i_peripheral); // voltage_units
        const double var_i_rel_per__i_rel_per = mParameters[1] * var_chaste_interface__membrane__Ca_sr / (1.0 + pow(mParameters[2], 2) / pow(var_chaste_interface__membrane__Ca_i_peripheral, 2)); // current_units
        const double var_membrane__Cm_converted = 9.9999999999999995e-7 * mParameters[8]; // uF
        const double var_i_k1__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_kr__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_ks__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_to_fast__E_k = var_Environment__RToF * log(mParameters[5] / var_chaste_interface__membrane__K_i); // voltage_units
        const double var_i_na_fast__E_na = var_Environment__RToF * log(mParameters[6] / var_chaste_interface__membrane__Na_i); // voltage_units
        const double var_i_naca__i_naca = 512.00911320399996 * (pow(var_chaste_interface__membrane__Na_i, var_i_naca__n_NaCa) * mParameters[4] * exp((-2.0 + var_i_naca__n_NaCa) * var_i_naca__gamma * var_chaste_interface__membrane__Vm / var_Environment__RToF) - pow(mParameters[6], var_i_naca__n_NaCa) * var_chaste_interface__membrane__Ca_i_peripheral * exp((-1.0 + var_i_naca__gamma) * (-2.0 + var_i_naca__n_NaCa) * var_chaste_interface__membrane__Vm / var_Environment__RToF)) * mParameters[14] / ((1.0 + 144.92753623188406 * var_chaste_interface__membrane__Ca_i_peripheral) * (1.0 + (pow(mParameters[6], var_i_naca__n_NaCa) * var_chaste_interface__membrane__Ca_i_peripheral + pow(var_chaste_interface__membrane__Na_i, var_i_naca__n_NaCa) * mParameters[4]) * var_i_naca__d_NaCa)); // current_units
        const double var_i_naca__i_naca_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_naca__i_naca / var_membrane__Cm_converted; // uA_per_cm2
        const double var_membrane__i_stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__Time__time); // uA_per_cm2
        const double var_x_k1__x_k1 = 1 / (1.0 + exp(9.1999999999999993 + 0.10000000000000001 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_i_k1__i_k1 = 0.25946870969507452 * pow(mParameters[5], 0.80000000000000004) * (-var_i_k1__E_k + var_chaste_interface__membrane__Vm) * mParameters[11] * var_x_k1__x_k1; // current_units
        const double var_i_k1__i_k1_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_k1__i_k1 / var_membrane__Cm_converted; // uA_per_cm2
        const double var_x_kr__x_kr = 1 / (1.0 + exp(1.4732142857142858 + 0.044642857142857144 * var_chaste_interface__membrane__Vm)); // dimensionless
        const double var_i_cal__i_cal = (-var_i_cal__E_Ca + var_chaste_interface__membrane__Vm) * mParameters[7] * var_chaste_interface__x_Ltype__x_Ltype * var_chaste_interface__y_Ltype__y_Ltype * var_chaste_interface__y_ca_Ltype__y_ca_Ltype; // current_units
        const double var_i_cal__i_cal_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_cal__i_cal / var_membrane__Cm_converted; // uA_per_cm2
        const double var_i_kr__i_kr = 0.18518518518518517 * (-var_i_kr__E_k + var_chaste_interface__membrane__Vm) * mParameters[5] * mParameters[12] * var_x_kr__x_kr * var_chaste_interface__y_kr__y_kr; // current_units
        const double var_i_kr__i_kr_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_kr__i_kr / var_membrane__Cm_converted; // uA_per_cm2
        const double var_i_ks__i_ks = (-var_i_ks__E_k + var_chaste_interface__membrane__Vm) * mParameters[13] * var_chaste_interface__x_ks__x_ks * var_chaste_interface__y_ks__y_ks; // current_units
        const double var_i_ks__i_ks_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_ks__i_ks / var_membrane__Cm_converted; // uA_per_cm2
        const double var_i_na_fast__i_na_fast = (-var_i_na_fast__E_na + var_chaste_interface__membrane__Vm) * mParameters[9] * var_chaste_interface__x_na_fast__x_na_fast * var_chaste_interface__y_na_fast__y_na_fast; // current_units
        const double var_i_na_fast__i_na_fast_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_na_fast__i_na_fast / var_membrane__Cm_converted; // uA_per_cm2
        const double var_i_to_fast__i_to_fast = (-var_i_to_fast__E_k + var_chaste_interface__membrane__Vm) * mParameters[15] * var_chaste_interface__x_to_fast__x_to_fast * var_chaste_interface__y_to_fast__y_to_fast; // current_units
        const double var_i_to_fast__i_to_fast_converted = 9.9999999999999995e-7 * HeartConfig::Instance()->GetCapacitance() * var_i_to_fast__i_to_fast / var_membrane__Cm_converted; // uA_per_cm2

        std::vector<double> dqs(11);
        dqs[0] = var_i_rel_per__i_rel_per;
        dqs[1] = var_i_cal__i_cal_converted;
        dqs[2] = var_membrane__Cm_converted;
        dqs[3] = var_i_na_fast__i_na_fast_converted;
        dqs[4] = var_i_k1__i_k1_converted;
        dqs[5] = var_i_kr__i_kr_converted;
        dqs[6] = var_i_ks__i_ks_converted;
        dqs[7] = var_i_naca__i_naca_converted;
        dqs[8] = var_membrane__i_stim_converted;
        dqs[9] = var_i_to_fast__i_to_fast_converted;
        dqs[10] = var_chaste_interface__Time__time;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellcorrias_purkinje_2011FromCellMLGRL1>::Initialise(void)
{
    this->mSystemName = "Corrias_rabbit_purkinje_model";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "time_units";

    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("voltage_units");
    this->mInitialConditions.push_back(-88.744);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(3.09001620863236e-05);

    // rY[2]:
    this->mVariableNames.push_back("dyadic_space_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.37523918148654e-06);

    // rY[3]:
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.1607);

    // rY[4]:
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(6.75814832463522);

    // rY[5]:
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(139.943221899032);

    // rY[6]:
    this->mVariableNames.push_back("x_Ttype__x_Ttype");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00058439023999374);

    // rY[7]:
    this->mVariableNames.push_back("y_Ttype__y_Ttype");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.900843399895183);

    // rY[8]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.39762741967807e-06);

    // rY[9]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.762933565557978);

    // rY[10]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_fCa_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.990616705407034);

    // rY[11]:
    this->mVariableNames.push_back("x_to_fast__x_to_fast");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.39836311045441e-05);

    // rY[12]:
    this->mVariableNames.push_back("y_to_fast__y_to_fast");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.865769351306921);

    // rY[13]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.90568689212866e-06);

    // rY[14]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.993212025695132);

    // rY[15]:
    this->mVariableNames.push_back("x_na_late__x_na_late");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(7.9043398966996e-06);

    // rY[16]:
    this->mVariableNames.push_back("y_na_late__y_na_late");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.839555875175682);

    // rY[17]:
    this->mVariableNames.push_back("y_kr__y_kr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.202112622607795);

    // rY[18]:
    this->mVariableNames.push_back("x_ks__x_ks");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0147603344538846);

    // rY[19]:
    this->mVariableNames.push_back("y_ks__y_ks");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0385082219915004);

    // rY[20]:
    this->mVariableNames.push_back("y_gate_f_k__y_gate_f_k");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.011099);

    // rY[21]:
    this->mVariableNames.push_back("y_gate_f_na__y_gate_f_na");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.011099);

    // mParameters[0]:
    this->mParameterNames.push_back("SR_leak_current_max");
    this->mParameterUnits.push_back("current_per_millimolar_units");

    // mParameters[1]:
    this->mParameterNames.push_back("SR_release_current_max");
    this->mParameterUnits.push_back("current_per_millimolar_units");

    // mParameters[2]:
    this->mParameterNames.push_back("SR_release_kmcads");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[3]:
    this->mParameterNames.push_back("SR_uptake_current_max");
    this->mParameterUnits.push_back("current_units");

    // mParameters[4]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[5]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[6]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("conductance_units");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane__Cm");
    this->mParameterUnits.push_back("capacitance_units");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("conductance_units");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_shift_inactivation");
    this->mParameterUnits.push_back("voltage_units");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("conductance_units");

    // mParameters[12]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("conductance_units");

    // mParameters[13]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("conductance_units");

    // mParameters[14]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("current_units");

    // mParameters[15]:
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
    this->mParameterUnits.push_back("conductance_units");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("SR_release_current");
    this->mDerivedQuantityUnits.push_back("current_units");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_capacitance");
    this->mDerivedQuantityUnits.push_back("uF");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [10]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("time_units");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellcorrias_purkinje_2011FromCellMLGRL1)

