//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: clancy_rudy_2002
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: GeneralizedRushLarsenFirstOrder)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "clancy_rudy_2002.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"


    boost::shared_ptr<RegularStimulus> Cellclancy_rudy_2002FromCellMLGRL1::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__stim_amplitude_converted = -50.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        const double var_chaste_interface__membrane__stim_duration_converted = 2.0; // millisecond
        const double var_chaste_interface__membrane__stim_period_converted = 1000.0; // millisecond
        const double var_chaste_interface__membrane__stim_start_converted = 3000.0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__stim_amplitude_converted),
                var_chaste_interface__membrane__stim_duration_converted,
                var_chaste_interface__membrane__stim_period_converted,
                var_chaste_interface__membrane__stim_start_converted
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    Cellclancy_rudy_2002FromCellMLGRL1::Cellclancy_rudy_2002FromCellMLGRL1(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractGeneralizedRushLarsenCardiacCell(
                35,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellclancy_rudy_2002FromCellMLGRL1>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        
        this->mParameters[0] = 60000.0; // (var_calcium_dynamics__G_rel_max) [per_second]
        this->mParameters[1] = 1.8; // (var_calcium_dynamics__Cao) [millimolar]
        this->mParameters[2] = 4.5; // (var_ionic_concentrations__Ko) [millimolar]
        this->mParameters[3] = 132.0; // (var_ionic_concentrations__Nao) [millimolar]
        this->mParameters[4] = 1.0; // (var_L_type_Ca_channel__P_scale) [dimensionless]
        this->mParameters[5] = 0.001; // (var_membrane__Cm) [microF]
        this->mParameters[6] = 23.5; // (var_fast_sodium_current__g_Na) [milliS_per_microF]
        this->mParameters[7] = 0.75; // (var_time_independent_potassium_current__g_K1_max) [milliS_per_cm2]
        this->mParameters[8] = 0.0135; // (var_rapid_delayed_rectifier_potassium_current__g_Kr_max) [milliS_per_microF]
        this->mParameters[9] = 1.1699999999999999; // (var_slow_delayed_rectifier_potassium_current__g_Ks_max) [dimensionless]
        this->mParameters[10] = 0.00025000000000000001; // (var_Na_Ca_exchanger__c1) [microA_per_microF]
        this->mParameters[11] = 1.0; // (var_transient_outward_current__g_to_max) [dimensionless]
    }

    Cellclancy_rudy_2002FromCellMLGRL1::~Cellclancy_rudy_2002FromCellMLGRL1()
    {
    }

    
    double Cellclancy_rudy_2002FromCellMLGRL1::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000104
        double var_chaste_interface__Na_channel_states__P_O_Na = rY[2];
        // Units: dimensionless; Initial value: 3.756e-13
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[11];
        // Units: dimensionless; Initial value: 3.289e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[12];
        // Units: dimensionless; Initial value: 0.99975
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = rY[13];
        // Units: dimensionless; Initial value: 0.000983
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = rY[14];
        // Units: dimensionless; Initial value: 0.9942
        double var_chaste_interface__Kr_channel_states__P_O = rY[15];
        // Units: dimensionless; Initial value: 1.104e-10
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = rY[20];
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = rY[21];
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = rY[22];
        // Units: dimensionless; Initial value: 0.01167
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = rY[23];
        // Units: dimensionless; Initial value: 0.99998
        double var_chaste_interface__ionic_concentrations__Nai = rY[33];
        // Units: millimolar; Initial value: 10.532
        double var_chaste_interface__ionic_concentrations__Ki = rY[34];
        // Units: millimolar; Initial value: 140.557
        
        const double var_ATP_sensitive_potassium_current__ATPi = 3.0; // millimolar
        const double var_ATP_sensitive_potassium_current__hATP = 2.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__i_K_ATP_on = 1.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__kATP = 0.00025000000000000001; // millimolar
        const double var_ATP_sensitive_potassium_current__nATP = 0.23999999999999999; // dimensionless
        const double var_ATP_sensitive_potassium_current__nicholsarea = 5.0000000000000002e-5; // dimensionless
        const double var_ATP_sensitive_potassium_current__g_K_ATP = 0.000193 * var_ATP_sensitive_potassium_current__i_K_ATP_on / var_ATP_sensitive_potassium_current__nicholsarea; // milliS_per_microF
        const double var_ATP_sensitive_potassium_current__pATP = 1 / (1.0 + pow((var_ATP_sensitive_potassium_current__ATPi / var_ATP_sensitive_potassium_current__kATP), var_ATP_sensitive_potassium_current__hATP)); // dimensionless
        const double var_L_type_Ca_channel__gamma_Ki = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ko = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nai = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nao = 0.75; // dimensionless
        const double var_L_type_Ca_channel_f_Ca_gate__Km_Ca = 0.00059999999999999995; // millimolar
        const double var_Na_Ca_exchanger__c2 = 0.0001; // millimolar
        const double var_Na_Ca_exchanger__gamma = 0.14999999999999999; // dimensionless
        const double var_T_type_Ca_channel__g_CaT = 0.050000000000000003; // milliS_per_microF
        const double var_calcium_background_current__g_Cab = 0.003016; // milliS_per_microF
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + var_chaste_interface__calcium_dynamics__Cai / var_L_type_Ca_channel_f_Ca_gate__Km_Ca); // dimensionless
        const double var_ATP_sensitive_potassium_current__GKbaraATP = pow((0.25 * mParameters[2]), var_ATP_sensitive_potassium_current__nATP) * var_ATP_sensitive_potassium_current__g_K_ATP * var_ATP_sensitive_potassium_current__pATP; // milliS_per_microF
        const double var_membrane__F = 96485.0; // coulomb_per_mole
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_calcium_background_current__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(mParameters[1] / var_chaste_interface__calcium_dynamics__Cai) / var_membrane__F; // millivolt
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(mParameters[3] / var_chaste_interface__ionic_concentrations__Nai) / var_membrane__F; // millivolt
        const double var_L_type_Ca_channel__I_CaCa = ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (1.042038e-5 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 1.042038e-5 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 1.042038e-5 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (7.8019226357407252 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(0.074871767015605231 * var_chaste_interface__membrane__V)) * mParameters[4] * var_chaste_interface__membrane__V / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaK = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (1.8621604999999999e-9 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 1.8621604999999999e-9 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 1.8621604999999999e-9 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.00069711623550831479 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(0.037435883507802616 * var_chaste_interface__membrane__V)) * mParameters[4] * var_chaste_interface__membrane__V / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaNa = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (6.5127375e-9 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 6.5127375e-9 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 6.5127375e-9 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.0024381008236689767 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(0.037435883507802616 * var_chaste_interface__membrane__V)) * mParameters[4] * var_chaste_interface__membrane__V / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaCa = var_L_type_Ca_channel__I_CaCa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaK = var_L_type_Ca_channel__I_CaK * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaNa = var_L_type_Ca_channel__I_CaNa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_CaCa + var_L_type_Ca_channel__i_CaK + var_L_type_Ca_channel__i_CaNa; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L_converted = HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L; // uA_per_cm2
        const double var_Na_Ca_exchanger__i_NaCa = (-pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * mParameters[10] * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) / (1.0 + (pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_Na_Ca_exchanger__c2 * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // microA_per_microF
        const double var_Na_Ca_exchanger__i_NaCa_converted = HeartConfig::Instance()->GetCapacitance() * var_Na_Ca_exchanger__i_NaCa; // uA_per_cm2
        const double var_T_type_Ca_channel__i_Ca_T = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2) * (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_T_type_Ca_channel__g_CaT * var_chaste_interface__T_type_Ca_channel_g_gate__g; // microA_per_microF
        const double var_calcium_background_current__i_Ca_b = (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_calcium_background_current__g_Cab; // microA_per_microF
        const double var_fast_sodium_current__i_Na = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__Na_channel_states__P_O_Na * mParameters[6]; // microA_per_microF
        const double var_fast_sodium_current__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na; // uA_per_cm2
        const double var_non_specific_calcium_activated_current__K_m_ns_Ca = 0.0011999999999999999; // millimolar
        const double var_non_specific_calcium_activated_current__P_ns_Ca = 0; // cm_per_second
        const double var_non_specific_calcium_activated_current__I_ns_K = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * mParameters[2] + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__I_ns_Na = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * mParameters[3] + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_K = var_non_specific_calcium_activated_current__I_ns_K / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Na = var_non_specific_calcium_activated_current__I_ns_Na / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Ca = var_non_specific_calcium_activated_current__i_ns_K + var_non_specific_calcium_activated_current__i_ns_Na; // microA_per_microF
        const double var_plateau_potassium_current__Kp = 1 / (1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_plateau_potassium_current__g_Kp = 0.0055199999999999997; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__E_Kr = var_membrane__R * var_membrane__T * log(mParameters[2] / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_rapid_delayed_rectifier_potassium_current__g_Kr = pow(mParameters[2], 0.58999999999999997) * mParameters[8]; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_rapid_delayed_rectifier_potassium_current__E_Kr + var_chaste_interface__membrane__V) * var_chaste_interface__Kr_channel_states__P_O * var_rapid_delayed_rectifier_potassium_current__g_Kr; // microA_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_rapid_delayed_rectifier_potassium_current__i_Kr; // uA_per_cm2
        const double var_sarcolemmal_calcium_pump__I_pCa = 1.1499999999999999; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__K_mpCa = 0.00050000000000000001; // millimolar
        const double var_sarcolemmal_calcium_pump__i_p_Ca = var_chaste_interface__calcium_dynamics__Cai * var_sarcolemmal_calcium_pump__I_pCa / (var_chaste_interface__calcium_dynamics__Cai + var_sarcolemmal_calcium_pump__K_mpCa); // microA_per_microF
        const double var_slow_delayed_rectifier_potassium_current__PNaK = 0.018329999999999999; // dimensionless
        const double var_slow_delayed_rectifier_potassium_current__E_Ks = var_membrane__R * var_membrane__T * log((mParameters[3] * var_slow_delayed_rectifier_potassium_current__PNaK + mParameters[2]) / (var_chaste_interface__ionic_concentrations__Nai * var_slow_delayed_rectifier_potassium_current__PNaK + var_chaste_interface__ionic_concentrations__Ki)) / var_membrane__F; // millivolt
        const double var_slow_delayed_rectifier_potassium_current__g_Ks = 0.433 * (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * mParameters[9]; // milliS_per_microF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = (-var_slow_delayed_rectifier_potassium_current__E_Ks + var_chaste_interface__membrane__V) * var_slow_delayed_rectifier_potassium_current__g_Ks * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2; // microA_per_microF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks_converted = HeartConfig::Instance()->GetCapacitance() * var_slow_delayed_rectifier_potassium_current__i_Ks; // uA_per_cm2
        const double var_sodium_activated_potassium_current__g_K_Na = 0; // milliS_per_microF
        const double var_sodium_activated_potassium_current__kdKNa = 66.0; // millimolar
        const double var_sodium_activated_potassium_current__nKNa = 2.7999999999999998; // dimensionless
        const double var_sodium_activated_potassium_current__pona = 0.84999999999999998 / (1.0 + pow((var_sodium_activated_potassium_current__kdKNa / var_chaste_interface__ionic_concentrations__Nai), var_sodium_activated_potassium_current__nKNa)); // dimensionless
        const double var_sodium_activated_potassium_current__pov = 0.80000000000000004 - 0.65000000000000002 / (1.0 + exp(8.3333333333333339 + 0.066666666666666666 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_sodium_background_current__g_Nab = 0.0040000000000000001; // milliS_per_microF
        const double var_sodium_background_current__i_Na_b = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_sodium_background_current__g_Nab; // microA_per_microF
        const double var_sodium_potassium_pump__I_NaK = 2.25; // microA_per_microF
        const double var_sodium_potassium_pump__K_mKo = 1.5; // millimolar
        const double var_sodium_potassium_pump__K_mNai = 10.0; // millimolar
        const double var_sodium_potassium_pump__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * mParameters[3]); // dimensionless
        const double var_sodium_potassium_pump__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + 0.036499999999999998 * var_sodium_potassium_pump__sigma * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // dimensionless
        const double var_sodium_potassium_pump__i_NaK = mParameters[2] * var_sodium_potassium_pump__I_NaK * var_sodium_potassium_pump__f_NaK / ((1.0 + pow(var_sodium_potassium_pump__K_mNai, 2) / pow(var_chaste_interface__ionic_concentrations__Nai, 2)) * (mParameters[2] + var_sodium_potassium_pump__K_mKo)); // microA_per_microF
        const double var_time_independent_potassium_current__E_K = var_membrane__R * var_membrane__T * log(mParameters[2] / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_ATP_sensitive_potassium_current__i_K_ATP = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_ATP_sensitive_potassium_current__GKbaraATP; // microA_per_microF
        const double var_plateau_potassium_current__i_Kp = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_plateau_potassium_current__Kp * var_plateau_potassium_current__g_Kp; // microA_per_microF
        const double var_sodium_activated_potassium_current__i_K_Na = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_sodium_activated_potassium_current__g_K_Na * var_sodium_activated_potassium_current__pona * var_sodium_activated_potassium_current__pov; // microA_per_microF
        const double var_time_independent_potassium_current__g_K1 = 0.43033148291193518 * sqrt(mParameters[2]) * mParameters[7]; // milliS_per_cm2
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K)); // per_second
        const double var_time_independent_potassium_current_K1_gate__beta_K1 = 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V)); // per_second
        const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_microF
        const double var_time_independent_potassium_current__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_time_independent_potassium_current__i_K1; // uA_per_cm2
        const double var_transient_outward_current__g_to = 1.1000000000000001; // milliS_per_microF
        const double var_transient_outward_current__rvdv = exp(0.01 * var_chaste_interface__membrane__V); // dimensionless
        const double var_transient_outward_current__i_to = pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_transient_outward_current__g_to * mParameters[11] * var_transient_outward_current__rvdv * var_chaste_interface__transient_outward_current_ydv_gate__ydv; // microA_per_microF
        const double var_transient_outward_current__i_to_converted = HeartConfig::Instance()->GetCapacitance() * var_transient_outward_current__i_to; // uA_per_cm2
        const double var_chaste_interface__i_ionic = HeartConfig::Instance()->GetCapacitance() * var_ATP_sensitive_potassium_current__i_K_ATP + HeartConfig::Instance()->GetCapacitance() * var_T_type_Ca_channel__i_Ca_T + HeartConfig::Instance()->GetCapacitance() * var_calcium_background_current__i_Ca_b + HeartConfig::Instance()->GetCapacitance() * var_non_specific_calcium_activated_current__i_ns_Ca + HeartConfig::Instance()->GetCapacitance() * var_plateau_potassium_current__i_Kp + HeartConfig::Instance()->GetCapacitance() * var_sarcolemmal_calcium_pump__i_p_Ca + HeartConfig::Instance()->GetCapacitance() * var_sodium_activated_potassium_current__i_K_Na + HeartConfig::Instance()->GetCapacitance() * var_sodium_background_current__i_Na_b + HeartConfig::Instance()->GetCapacitance() * var_sodium_potassium_pump__i_NaK + var_L_type_Ca_channel__i_Ca_L_converted + var_Na_Ca_exchanger__i_NaCa_converted + var_fast_sodium_current__i_Na_converted + var_rapid_delayed_rectifier_potassium_current__i_Kr_converted + var_slow_delayed_rectifier_potassium_current__i_Ks_converted + var_time_independent_potassium_current__i_K1_converted + var_transient_outward_current__i_to_converted; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellclancy_rudy_2002FromCellMLGRL1::UpdateTransmembranePotential(double var_chaste_interface__environment__time_converted)
    {
        std::vector<double>& rY = rGetStateVariables();
        unsigned v_index = GetVoltageIndex();
        const double delta = 1e-8;

        double d_dt_chaste_interface_var_membrane__V;
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000104
        double var_chaste_interface__Na_channel_states__P_O_Na = rY[2];
        // Units: dimensionless; Initial value: 3.756e-13
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[11];
        // Units: dimensionless; Initial value: 3.289e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[12];
        // Units: dimensionless; Initial value: 0.99975
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = rY[13];
        // Units: dimensionless; Initial value: 0.000983
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = rY[14];
        // Units: dimensionless; Initial value: 0.9942
        double var_chaste_interface__Kr_channel_states__P_O = rY[15];
        // Units: dimensionless; Initial value: 1.104e-10
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = rY[20];
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = rY[21];
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = rY[22];
        // Units: dimensionless; Initial value: 0.01167
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = rY[23];
        // Units: dimensionless; Initial value: 0.99998
        double var_chaste_interface__ionic_concentrations__Nai = rY[33];
        // Units: millimolar; Initial value: 10.532
        double var_chaste_interface__ionic_concentrations__Ki = rY[34];
        // Units: millimolar; Initial value: 140.557
        

        // Mathematics
        const double var_ATP_sensitive_potassium_current__ATPi = 3.0; // millimolar
        const double var_ATP_sensitive_potassium_current__hATP = 2.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__i_K_ATP_on = 1.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__kATP = 0.00025000000000000001; // millimolar
        const double var_ATP_sensitive_potassium_current__nATP = 0.23999999999999999; // dimensionless
        const double var_ATP_sensitive_potassium_current__nicholsarea = 5.0000000000000002e-5; // dimensionless
        const double var_ATP_sensitive_potassium_current__g_K_ATP = 0.000193 * var_ATP_sensitive_potassium_current__i_K_ATP_on / var_ATP_sensitive_potassium_current__nicholsarea; // milliS_per_microF
        const double var_ATP_sensitive_potassium_current__pATP = 1 / (1.0 + pow((var_ATP_sensitive_potassium_current__ATPi / var_ATP_sensitive_potassium_current__kATP), var_ATP_sensitive_potassium_current__hATP)); // dimensionless
        const double var_L_type_Ca_channel__gamma_Ki = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ko = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nai = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nao = 0.75; // dimensionless
        const double var_L_type_Ca_channel_f_Ca_gate__Km_Ca = 0.00059999999999999995; // millimolar
        const double var_Na_Ca_exchanger__c2 = 0.0001; // millimolar
        const double var_Na_Ca_exchanger__gamma = 0.14999999999999999; // dimensionless
        const double var_T_type_Ca_channel__g_CaT = 0.050000000000000003; // milliS_per_microF
        const double var_calcium_background_current__g_Cab = 0.003016; // milliS_per_microF
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + var_chaste_interface__calcium_dynamics__Cai / var_L_type_Ca_channel_f_Ca_gate__Km_Ca); // dimensionless
        const double var_ATP_sensitive_potassium_current__GKbaraATP = pow((0.25 * mParameters[2]), var_ATP_sensitive_potassium_current__nATP) * var_ATP_sensitive_potassium_current__g_K_ATP * var_ATP_sensitive_potassium_current__pATP; // milliS_per_microF
        const double var_membrane__F = 96485.0; // coulomb_per_mole
        const double var_membrane__I_st_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_membrane__I_st = var_membrane__I_st_converted / HeartConfig::Instance()->GetCapacitance(); // microA_per_microF
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_calcium_background_current__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(mParameters[1] / var_chaste_interface__calcium_dynamics__Cai) / var_membrane__F; // millivolt
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(mParameters[3] / var_chaste_interface__ionic_concentrations__Nai) / var_membrane__F; // millivolt
        const double var_L_type_Ca_channel__I_CaCa = ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (1.042038e-5 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 1.042038e-5 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 1.042038e-5 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (7.8019226357407252 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(0.074871767015605231 * var_chaste_interface__membrane__V)) * mParameters[4] * var_chaste_interface__membrane__V / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaK = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (1.8621604999999999e-9 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 1.8621604999999999e-9 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 1.8621604999999999e-9 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.00069711623550831479 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(0.037435883507802616 * var_chaste_interface__membrane__V)) * mParameters[4] * var_chaste_interface__membrane__V / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaNa = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (6.5127375e-9 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 6.5127375e-9 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 6.5127375e-9 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.0024381008236689767 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(0.037435883507802616 * var_chaste_interface__membrane__V)) * mParameters[4] * var_chaste_interface__membrane__V / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaCa = var_L_type_Ca_channel__I_CaCa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaK = var_L_type_Ca_channel__I_CaK * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaNa = var_L_type_Ca_channel__I_CaNa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_CaCa + var_L_type_Ca_channel__i_CaK + var_L_type_Ca_channel__i_CaNa; // microA_per_microF
        const double var_Na_Ca_exchanger__i_NaCa = (-pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * mParameters[10] * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) / (1.0 + (pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_Na_Ca_exchanger__c2 * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // microA_per_microF
        const double var_T_type_Ca_channel__i_Ca_T = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2) * (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_T_type_Ca_channel__g_CaT * var_chaste_interface__T_type_Ca_channel_g_gate__g; // microA_per_microF
        const double var_calcium_background_current__i_Ca_b = (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_calcium_background_current__g_Cab; // microA_per_microF
        const double var_fast_sodium_current__i_Na = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__Na_channel_states__P_O_Na * mParameters[6]; // microA_per_microF
        const double var_non_specific_calcium_activated_current__K_m_ns_Ca = 0.0011999999999999999; // millimolar
        const double var_non_specific_calcium_activated_current__P_ns_Ca = 0; // cm_per_second
        const double var_non_specific_calcium_activated_current__I_ns_K = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * mParameters[2] + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__I_ns_Na = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * mParameters[3] + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_K = var_non_specific_calcium_activated_current__I_ns_K / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Na = var_non_specific_calcium_activated_current__I_ns_Na / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Ca = var_non_specific_calcium_activated_current__i_ns_K + var_non_specific_calcium_activated_current__i_ns_Na; // microA_per_microF
        const double var_plateau_potassium_current__Kp = 1 / (1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_plateau_potassium_current__g_Kp = 0.0055199999999999997; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__E_Kr = var_membrane__R * var_membrane__T * log(mParameters[2] / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_rapid_delayed_rectifier_potassium_current__g_Kr = pow(mParameters[2], 0.58999999999999997) * mParameters[8]; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_rapid_delayed_rectifier_potassium_current__E_Kr + var_chaste_interface__membrane__V) * var_chaste_interface__Kr_channel_states__P_O * var_rapid_delayed_rectifier_potassium_current__g_Kr; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__I_pCa = 1.1499999999999999; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__K_mpCa = 0.00050000000000000001; // millimolar
        const double var_sarcolemmal_calcium_pump__i_p_Ca = var_chaste_interface__calcium_dynamics__Cai * var_sarcolemmal_calcium_pump__I_pCa / (var_chaste_interface__calcium_dynamics__Cai + var_sarcolemmal_calcium_pump__K_mpCa); // microA_per_microF
        const double var_slow_delayed_rectifier_potassium_current__PNaK = 0.018329999999999999; // dimensionless
        const double var_slow_delayed_rectifier_potassium_current__E_Ks = var_membrane__R * var_membrane__T * log((mParameters[3] * var_slow_delayed_rectifier_potassium_current__PNaK + mParameters[2]) / (var_chaste_interface__ionic_concentrations__Nai * var_slow_delayed_rectifier_potassium_current__PNaK + var_chaste_interface__ionic_concentrations__Ki)) / var_membrane__F; // millivolt
        const double var_slow_delayed_rectifier_potassium_current__g_Ks = 0.433 * (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * mParameters[9]; // milliS_per_microF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = (-var_slow_delayed_rectifier_potassium_current__E_Ks + var_chaste_interface__membrane__V) * var_slow_delayed_rectifier_potassium_current__g_Ks * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2; // microA_per_microF
        const double var_sodium_activated_potassium_current__g_K_Na = 0; // milliS_per_microF
        const double var_sodium_activated_potassium_current__kdKNa = 66.0; // millimolar
        const double var_sodium_activated_potassium_current__nKNa = 2.7999999999999998; // dimensionless
        const double var_sodium_activated_potassium_current__pona = 0.84999999999999998 / (1.0 + pow((var_sodium_activated_potassium_current__kdKNa / var_chaste_interface__ionic_concentrations__Nai), var_sodium_activated_potassium_current__nKNa)); // dimensionless
        const double var_sodium_activated_potassium_current__pov = 0.80000000000000004 - 0.65000000000000002 / (1.0 + exp(8.3333333333333339 + 0.066666666666666666 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_sodium_background_current__g_Nab = 0.0040000000000000001; // milliS_per_microF
        const double var_sodium_background_current__i_Na_b = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_sodium_background_current__g_Nab; // microA_per_microF
        const double var_sodium_potassium_pump__I_NaK = 2.25; // microA_per_microF
        const double var_sodium_potassium_pump__K_mKo = 1.5; // millimolar
        const double var_sodium_potassium_pump__K_mNai = 10.0; // millimolar
        const double var_sodium_potassium_pump__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * mParameters[3]); // dimensionless
        const double var_sodium_potassium_pump__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + 0.036499999999999998 * var_sodium_potassium_pump__sigma * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // dimensionless
        const double var_sodium_potassium_pump__i_NaK = mParameters[2] * var_sodium_potassium_pump__I_NaK * var_sodium_potassium_pump__f_NaK / ((1.0 + pow(var_sodium_potassium_pump__K_mNai, 2) / pow(var_chaste_interface__ionic_concentrations__Nai, 2)) * (mParameters[2] + var_sodium_potassium_pump__K_mKo)); // microA_per_microF
        const double var_time_independent_potassium_current__E_K = var_membrane__R * var_membrane__T * log(mParameters[2] / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_ATP_sensitive_potassium_current__i_K_ATP = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_ATP_sensitive_potassium_current__GKbaraATP; // microA_per_microF
        const double var_plateau_potassium_current__i_Kp = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_plateau_potassium_current__Kp * var_plateau_potassium_current__g_Kp; // microA_per_microF
        const double var_sodium_activated_potassium_current__i_K_Na = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_sodium_activated_potassium_current__g_K_Na * var_sodium_activated_potassium_current__pona * var_sodium_activated_potassium_current__pov; // microA_per_microF
        const double var_time_independent_potassium_current__g_K1 = 0.43033148291193518 * sqrt(mParameters[2]) * mParameters[7]; // milliS_per_cm2
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K)); // per_second
        const double var_time_independent_potassium_current_K1_gate__beta_K1 = 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V)); // per_second
        const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_microF
        const double var_transient_outward_current__g_to = 1.1000000000000001; // milliS_per_microF
        const double var_transient_outward_current__rvdv = exp(0.01 * var_chaste_interface__membrane__V); // dimensionless
        const double var_transient_outward_current__i_to = pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_transient_outward_current__g_to * mParameters[11] * var_transient_outward_current__rvdv * var_chaste_interface__transient_outward_current_ydv_gate__ydv; // microA_per_microF
        const double var_membrane__V_orig_deriv = -(var_ATP_sensitive_potassium_current__i_K_ATP + var_L_type_Ca_channel__i_Ca_L + var_Na_Ca_exchanger__i_NaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_fast_sodium_current__i_Na + var_membrane__I_st + var_non_specific_calcium_activated_current__i_ns_Ca + var_plateau_potassium_current__i_Kp + var_rapid_delayed_rectifier_potassium_current__i_Kr + var_sarcolemmal_calcium_pump__i_p_Ca + var_slow_delayed_rectifier_potassium_current__i_Ks + var_sodium_activated_potassium_current__i_K_Na + var_sodium_background_current__i_Na_b + var_sodium_potassium_pump__i_NaK + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) / mParameters[5]; // millivolt / second
        d_dt_chaste_interface_var_membrane__V = 0.001 * var_membrane__V_orig_deriv; // millivolt / millisecond

        double evalF = d_dt_chaste_interface_var_membrane__V;
        mEvalF[0] = d_dt_chaste_interface_var_membrane__V;
        double partialF = EvaluatePartialDerivative0(var_chaste_interface__environment__time_converted, rY, delta, true);
        if (fabs(partialF) < delta)
        {
            rY[v_index] += evalF*mDt;
        }
        else
        {
            rY[v_index] += (evalF/partialF)*(exp(partialF*mDt)-1.0);
        }
    }

    void Cellclancy_rudy_2002FromCellMLGRL1::ComputeOneStepExceptVoltage(double var_chaste_interface__environment__time_converted)
    {
        std::vector<double>& rY = rGetStateVariables();
        const double delta = 1e-8;

        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000104
        double var_chaste_interface__Na_channel_states__P_O_Na = rY[2];
        // Units: dimensionless; Initial value: 3.756e-13
        double var_chaste_interface__Na_channel_states__P_C1 = rY[3];
        // Units: dimensionless; Initial value: 4.744e-10
        double var_chaste_interface__Na_channel_states__P_C2 = rY[4];
        // Units: dimensionless; Initial value: 9.776e-08
        double var_chaste_interface__Na_channel_states__P_C3 = rY[5];
        // Units: dimensionless; Initial value: 7.583e-06
        double var_chaste_interface__Na_channel_states__P_IF = rY[6];
        // Units: dimensionless; Initial value: 8.147e-11
        double var_chaste_interface__Na_channel_states__P_IC3 = rY[7];
        // Units: dimensionless; Initial value: 1.302e-06
        double var_chaste_interface__Na_channel_states__P_IC2 = rY[8];
        // Units: dimensionless; Initial value: 1.679e-08
        double var_chaste_interface__Na_channel_states__P_IM1 = rY[9];
        // Units: dimensionless; Initial value: 9.736e-12
        double var_chaste_interface__Na_channel_states__P_IM2 = rY[10];
        // Units: dimensionless; Initial value: 6.187e-14
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[11];
        // Units: dimensionless; Initial value: 3.289e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[12];
        // Units: dimensionless; Initial value: 0.99975
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = rY[13];
        // Units: dimensionless; Initial value: 0.000983
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = rY[14];
        // Units: dimensionless; Initial value: 0.9942
        double var_chaste_interface__Kr_channel_states__P_O = rY[15];
        // Units: dimensionless; Initial value: 1.104e-10
        double var_chaste_interface__Kr_channel_states__P_C1 = rY[16];
        // Units: dimensionless; Initial value: 3.4083e-08
        double var_chaste_interface__Kr_channel_states__P_C2 = rY[17];
        // Units: dimensionless; Initial value: 1.69e-08
        double var_chaste_interface__Kr_channel_states__P_C3 = rY[18];
        // Units: dimensionless; Initial value: 4.949e-06
        double var_chaste_interface__Kr_channel_states__P_I = rY[19];
        // Units: dimensionless; Initial value: 3.386e-11
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = rY[20];
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = rY[21];
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = rY[22];
        // Units: dimensionless; Initial value: 0.01167
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = rY[23];
        // Units: dimensionless; Initial value: 0.99998
        double var_chaste_interface__calcium_dynamics__Ca_JSR = rY[24];
        // Units: millimolar; Initial value: 1.516
        double var_chaste_interface__calcium_dynamics__Ca_NSR = rY[25];
        // Units: millimolar; Initial value: 1.518
        double var_chaste_interface__calcium_dynamics__APtrack = rY[26];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__APtrack2 = rY[27];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__APtrack3 = rY[28];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__Cainfluxtrack = rY[29];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack = rY[30];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack2 = rY[31];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack3 = rY[32];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ionic_concentrations__Nai = rY[33];
        // Units: millimolar; Initial value: 10.532
        double var_chaste_interface__ionic_concentrations__Ki = rY[34];
        // Units: millimolar; Initial value: 140.557
        

        // Mathematics
        const double var_ATP_sensitive_potassium_current__ATPi = 3.0; // millimolar
        const double var_ATP_sensitive_potassium_current__hATP = 2.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__i_K_ATP_on = 1.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__kATP = 0.00025000000000000001; // millimolar
        const double var_ATP_sensitive_potassium_current__nATP = 0.23999999999999999; // dimensionless
        const double var_ATP_sensitive_potassium_current__nicholsarea = 5.0000000000000002e-5; // dimensionless
        const double var_ATP_sensitive_potassium_current__g_K_ATP = 0.000193 * var_ATP_sensitive_potassium_current__i_K_ATP_on / var_ATP_sensitive_potassium_current__nicholsarea; // milliS_per_microF
        const double var_ATP_sensitive_potassium_current__pATP = 1 / (1.0 + pow((var_ATP_sensitive_potassium_current__ATPi / var_ATP_sensitive_potassium_current__kATP), var_ATP_sensitive_potassium_current__hATP)); // dimensionless
        const double var_Kr_channel_states__alpha_in = 2172.0; // per_second
        const double var_Kr_channel_states__beta_in = 1077.0; // per_second
        const double var_L_type_Ca_channel__gamma_Ki = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ko = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nai = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nao = 0.75; // dimensionless
        const double var_L_type_Ca_channel_f_Ca_gate__Km_Ca = 0.00059999999999999995; // millimolar
        const double var_Na_Ca_exchanger__c2 = 0.0001; // millimolar
        const double var_Na_Ca_exchanger__gamma = 0.14999999999999999; // dimensionless
        const double var_T_type_Ca_channel__g_CaT = 0.050000000000000003; // milliS_per_microF
        const double var_calcium_background_current__g_Cab = 0.003016; // milliS_per_microF
        const double var_calcium_dynamics__APtrack2_orig_deriv = (((var_chaste_interface__calcium_dynamics__APtrack > 0.17999999999999999) && (var_chaste_interface__calcium_dynamics__APtrack < 0.20000000000000001)) ? (100000.0 - 100500.0 * var_chaste_interface__calcium_dynamics__APtrack2) : (-500.0 * var_chaste_interface__calcium_dynamics__APtrack2)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__APtrack2 = 0.001 * var_calcium_dynamics__APtrack2_orig_deriv; // 1 / millisecond
        const double var_calcium_dynamics__APtrack3_orig_deriv = (((var_chaste_interface__calcium_dynamics__APtrack > 0.17999999999999999) && (var_chaste_interface__calcium_dynamics__APtrack < 0.20000000000000001)) ? (100000.0 - 100500.0 * var_chaste_interface__calcium_dynamics__APtrack3) : (-10.0 * var_chaste_interface__calcium_dynamics__APtrack3)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__APtrack3 = 0.001 * var_calcium_dynamics__APtrack3_orig_deriv; // 1 / millisecond
        const double var_calcium_dynamics__CMDN_max = 0.050000000000000003; // millimolar
        const double var_calcium_dynamics__CSQN_max = 10.0; // millimolar
        const double var_calcium_dynamics__CSQNthresh = 0.69999999999999996; // millimolar
        const double var_calcium_dynamics__Ca_NSR_max = 15.0; // millimolar
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + var_chaste_interface__calcium_dynamics__Cai / var_L_type_Ca_channel_f_Ca_gate__Km_Ca); // dimensionless
        const double var_calcium_dynamics__G_rel_overload = 4000.0; // per_second
        const double var_calcium_dynamics__I_up = 8.75; // millimolar_per_second
        const double var_calcium_dynamics__K_leak = var_calcium_dynamics__I_up / var_calcium_dynamics__Ca_NSR_max; // per_second
        const double var_calcium_dynamics__K_mCMDN = 0.0023800000000000002; // millimolar
        const double var_calcium_dynamics__K_mCSQN = 0.80000000000000004; // millimolar
        const double var_calcium_dynamics__K_mTn = 0.00050000000000000001; // millimolar
        const double var_calcium_dynamics__K_mrel = 0.00080000000000000004; // millimolar
        const double var_calcium_dynamics__K_mup = 0.00092000000000000003; // millimolar
        const double var_calcium_dynamics__Logicthresh = 0.97999999999999998; // dimensionless
        const double var_calcium_dynamics__OVRLDtrack2_orig_deriv = (((var_calcium_dynamics__Logicthresh > var_chaste_interface__calcium_dynamics__OVRLDtrack2) && (var_calcium_dynamics__Logicthresh < var_chaste_interface__calcium_dynamics__OVRLDtrack)) ? (50000.0 - 50000.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (-500.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack2)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack2 = 0.001 * var_calcium_dynamics__OVRLDtrack2_orig_deriv; // 1 / millisecond
        const double var_calcium_dynamics__OVRLDtrack3_orig_deriv = (((var_calcium_dynamics__Logicthresh > var_chaste_interface__calcium_dynamics__OVRLDtrack3) && (var_calcium_dynamics__Logicthresh < var_chaste_interface__calcium_dynamics__OVRLDtrack)) ? (50000.0 - 50000.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack3) : (-10.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack3)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack3 = 0.001 * var_calcium_dynamics__OVRLDtrack3_orig_deriv; // 1 / millisecond
        const double var_calcium_dynamics__OVRLDtrack_orig_deriv = (((var_chaste_interface__calcium_dynamics__APtrack3 < 0.37) && (var_chaste_interface__calcium_dynamics__OVRLDtrack3 < 0.37) && (var_calcium_dynamics__CSQNthresh < 1 / (1.0 + var_calcium_dynamics__K_mCSQN / var_chaste_interface__calcium_dynamics__Ca_NSR))) ? (50000.0 - 50000.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack) : (-500.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack = 0.001 * var_calcium_dynamics__OVRLDtrack_orig_deriv; // 1 / millisecond
        const double var_calcium_dynamics__Tn_max = 0.070000000000000007; // millimolar
        const double var_calcium_dynamics__delta_Ca_ith = 0.00018000000000000001; // millimolar
        const double var_calcium_dynamics__G_rel = ((var_chaste_interface__calcium_dynamics__Cainfluxtrack > var_calcium_dynamics__delta_Ca_ith) ? ((1.0 - var_chaste_interface__calcium_dynamics__APtrack2) * (-var_calcium_dynamics__delta_Ca_ith + var_chaste_interface__calcium_dynamics__Cainfluxtrack) * var_chaste_interface__calcium_dynamics__APtrack2 * mParameters[0] / (-var_calcium_dynamics__delta_Ca_ith + var_chaste_interface__calcium_dynamics__Cainfluxtrack + var_calcium_dynamics__K_mrel)) : ((var_chaste_interface__calcium_dynamics__OVRLDtrack2 > 0) ? ((1.0 - var_chaste_interface__calcium_dynamics__OVRLDtrack2) * var_calcium_dynamics__G_rel_overload * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (0))); // per_second
        const double var_calcium_dynamics__i_leak = var_chaste_interface__calcium_dynamics__Ca_NSR * var_calcium_dynamics__K_leak; // millimolar_per_second
        const double var_calcium_dynamics__i_rel = (-var_chaste_interface__calcium_dynamics__Cai + var_chaste_interface__calcium_dynamics__Ca_JSR) * var_calcium_dynamics__G_rel; // millimolar_per_second
        const double var_calcium_dynamics__i_up = var_chaste_interface__calcium_dynamics__Cai * var_calcium_dynamics__I_up / (var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__K_mup); // millimolar_per_second
        const double var_calcium_dynamics__tau_tr = 0.17999999999999999; // second
        const double var_calcium_dynamics__i_tr = (-var_chaste_interface__calcium_dynamics__Ca_JSR + var_chaste_interface__calcium_dynamics__Ca_NSR) / var_calcium_dynamics__tau_tr; // millimolar_per_second
        const double var_calcium_dynamics__Ca_JSR_orig_deriv = (-var_calcium_dynamics__i_rel + var_calcium_dynamics__i_tr) / (1.0 + var_calcium_dynamics__CSQN_max * var_calcium_dynamics__K_mCSQN / pow((var_chaste_interface__calcium_dynamics__Ca_JSR + var_calcium_dynamics__K_mCSQN), 2)); // millimolar / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_JSR = 0.001 * var_calcium_dynamics__Ca_JSR_orig_deriv; // millimolar / millisecond
        const double var_ionic_concentrations__A_cap = 1.434e-7; // mm2
        const double var_ionic_concentrations__Ki_orig_deriv = 0; // millimolar / second
        const double d_dt_chaste_interface_var_ionic_concentrations__Ki = 0.001 * var_ionic_concentrations__Ki_orig_deriv; // millimolar / millisecond
        const double var_ATP_sensitive_potassium_current__GKbaraATP = pow((0.25 * mParameters[2]), var_ATP_sensitive_potassium_current__nATP) * var_ATP_sensitive_potassium_current__g_K_ATP * var_ATP_sensitive_potassium_current__pATP; // milliS_per_microF
        const double var_ionic_concentrations__Nai_orig_deriv = 0; // millimolar / second
        const double d_dt_chaste_interface_var_ionic_concentrations__Nai = 0.001 * var_ionic_concentrations__Nai_orig_deriv; // millimolar / millisecond
        const double var_ionic_concentrations__preplength = 0.001; // mm
        const double var_ionic_concentrations__radius = 0.00011; // mm
        const double var_ionic_concentrations__volume = M_PI * pow(var_ionic_concentrations__radius, 2) * var_ionic_concentrations__preplength; // micro_litre
        const double var_ionic_concentrations__V_myo = 0.68000000000000005 * var_ionic_concentrations__volume; // micro_litre
        const double var_calcium_dynamics__V_JSR = 0.0070588235294117632 * var_ionic_concentrations__V_myo; // micro_litre
        const double var_calcium_dynamics__V_NSR = 0.081176470588235281 * var_ionic_concentrations__V_myo; // micro_litre
        const double var_calcium_dynamics__Ca_NSR_orig_deriv = -var_calcium_dynamics__i_leak - var_calcium_dynamics__V_JSR * var_calcium_dynamics__i_tr / var_calcium_dynamics__V_NSR + var_calcium_dynamics__i_up; // millimolar / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_NSR = 0.001 * var_calcium_dynamics__Ca_NSR_orig_deriv; // millimolar / millisecond
        const double var_membrane__F = 96485.0; // coulomb_per_mole
        const double var_membrane__I_st_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_membrane__I_st = var_membrane__I_st_converted / HeartConfig::Instance()->GetCapacitance(); // microA_per_microF
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_calcium_background_current__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(mParameters[1] / var_chaste_interface__calcium_dynamics__Cai) / var_membrane__F; // millivolt
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(mParameters[3] / var_chaste_interface__ionic_concentrations__Nai) / var_membrane__F; // millivolt
        const double var_Kr_channel_states__alpha = 55.5 * exp(-0.66565836 + 0.055471529999999998 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__alpha_alpha = 65.5 * exp(-1.9969750799999999 + 0.055471529999999998 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__alpha_i = 1975.5 * exp(-0.58799999999999997 - 0.023519999999999999 * var_chaste_interface__membrane__V) / mParameters[2]; // per_second
        const double var_Kr_channel_states__beta = 2.3570000000000002 * exp(-0.036588000000000002 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__P_C2_orig_deriv = (-var_Kr_channel_states__alpha_in - var_Kr_channel_states__beta) * var_chaste_interface__Kr_channel_states__P_C2 + var_chaste_interface__Kr_channel_states__P_C1 * var_Kr_channel_states__beta_in + var_chaste_interface__Kr_channel_states__P_C3 * var_Kr_channel_states__alpha; // 1 / second
        const double d_dt_chaste_interface_var_Kr_channel_states__P_C2 = 0.001 * var_Kr_channel_states__P_C2_orig_deriv; // 1 / millisecond
        const double var_Kr_channel_states__P_C3_orig_deriv = var_chaste_interface__Kr_channel_states__P_C2 * var_Kr_channel_states__beta - var_chaste_interface__Kr_channel_states__P_C3 * var_Kr_channel_states__alpha; // 1 / second
        const double d_dt_chaste_interface_var_Kr_channel_states__P_C3 = 0.001 * var_Kr_channel_states__P_C3_orig_deriv; // 1 / millisecond
        const double var_Kr_channel_states__beta_beta = 2.9357000000000002 * exp(-0.021579999999999998 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__beta_i = 1030.0720270741688 * pow(mParameters[2], (-0.29999999999999999)) * exp(0.00094200000000000002 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__P_O_orig_deriv = (-var_Kr_channel_states__beta_beta - var_Kr_channel_states__beta_i) * var_chaste_interface__Kr_channel_states__P_O + var_chaste_interface__Kr_channel_states__P_C1 * var_Kr_channel_states__alpha_alpha + var_chaste_interface__Kr_channel_states__P_I * var_Kr_channel_states__alpha_i; // 1 / second
        const double d_dt_chaste_interface_var_Kr_channel_states__P_O = 0.001 * var_Kr_channel_states__P_O_orig_deriv; // 1 / millisecond
        const double var_Kr_channel_states__mu = var_Kr_channel_states__alpha_i * var_Kr_channel_states__beta_beta / var_Kr_channel_states__beta_i; // per_second
        const double var_Kr_channel_states__P_C1_orig_deriv = (-var_Kr_channel_states__beta_in - 2 * var_Kr_channel_states__alpha_alpha) * var_chaste_interface__Kr_channel_states__P_C1 + var_chaste_interface__Kr_channel_states__P_C2 * var_Kr_channel_states__alpha_in + var_chaste_interface__Kr_channel_states__P_I * var_Kr_channel_states__mu + var_chaste_interface__Kr_channel_states__P_O * var_Kr_channel_states__beta_beta; // 1 / second
        const double d_dt_chaste_interface_var_Kr_channel_states__P_C1 = 0.001 * var_Kr_channel_states__P_C1_orig_deriv; // 1 / millisecond
        const double var_Kr_channel_states__P_I_orig_deriv = (-var_Kr_channel_states__alpha_i - var_Kr_channel_states__mu) * var_chaste_interface__Kr_channel_states__P_I + var_chaste_interface__Kr_channel_states__P_C1 * var_Kr_channel_states__alpha_alpha + var_chaste_interface__Kr_channel_states__P_O * var_Kr_channel_states__beta_i; // 1 / second
        const double d_dt_chaste_interface_var_Kr_channel_states__P_I = 0.001 * var_Kr_channel_states__P_I_orig_deriv; // 1 / millisecond
        const double var_L_type_Ca_channel__I_CaCa = ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (1.042038e-5 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 1.042038e-5 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 1.042038e-5 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (7.8019226357407252 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(0.074871767015605231 * var_chaste_interface__membrane__V)) * mParameters[4] * var_chaste_interface__membrane__V / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaK = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (1.8621604999999999e-9 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 1.8621604999999999e-9 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 1.8621604999999999e-9 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.00069711623550831479 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(0.037435883507802616 * var_chaste_interface__membrane__V)) * mParameters[4] * var_chaste_interface__membrane__V / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaNa = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (6.5127375e-9 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 6.5127375e-9 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 6.5127375e-9 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.0024381008236689767 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(0.037435883507802616 * var_chaste_interface__membrane__V)) * mParameters[4] * var_chaste_interface__membrane__V / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaCa = var_L_type_Ca_channel__I_CaCa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaK = var_L_type_Ca_channel__I_CaK * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaNa = var_L_type_Ca_channel__I_CaNa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_CaCa + var_L_type_Ca_channel__i_CaK + var_L_type_Ca_channel__i_CaNa; // microA_per_microF
        const double var_L_type_Ca_channel_d_gate__d_infinity = 1 / (1.0 + exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_L_type_Ca_channel_d_gate__tau_d = ((fabs(10.0 + var_chaste_interface__membrane__V) < 6.2399999999074307e-7) ? (45787.545788225034 * (1.0 - exp(-9.999999999851651e-8)) / (1.0 + exp(-9.999999999851651e-8)) - 801282.05129393819 * (9.9999993759999999 + var_chaste_interface__membrane__V) * (-45787.545788225034 * (1.0 - exp(9.999999999851651e-8)) / (1.0 + exp(9.999999999851651e-8)) - 45787.545788225034 * (1.0 - exp(-9.999999999851651e-8)) / (1.0 + exp(-9.999999999851651e-8)))) : (0.028571428571428571 * (1.0 - exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V)) / ((1.0 + exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V)) * (10.0 + var_chaste_interface__membrane__V)))); // second
        const double var_L_type_Ca_channel_d_gate__alpha_d = var_L_type_Ca_channel_d_gate__d_infinity / var_L_type_Ca_channel_d_gate__tau_d; // per_second
        const double var_L_type_Ca_channel_d_gate__beta_d = (1.0 - var_L_type_Ca_channel_d_gate__d_infinity) / var_L_type_Ca_channel_d_gate__tau_d; // per_second
        const double var_L_type_Ca_channel_d_gate__d_orig_deriv = (1.0 - var_chaste_interface__L_type_Ca_channel_d_gate__d) * var_L_type_Ca_channel_d_gate__alpha_d - var_L_type_Ca_channel_d_gate__beta_d * var_chaste_interface__L_type_Ca_channel_d_gate__d; // 1 / second
        const double d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d = 0.001 * var_L_type_Ca_channel_d_gate__d_orig_deriv; // 1 / millisecond
        const double var_L_type_Ca_channel_f_gate__f_infinity = 1 / (1.0 + exp(4.0 + 0.125 * var_chaste_interface__membrane__V)) + 0.59999999999999998 / (1.0 + exp(2.5 - 0.050000000000000003 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_L_type_Ca_channel_f_gate__tau_f = 0.001 / (0.02 + 0.019699999999999999 * exp(-0.113569 * pow((1 + 0.10000000000000001 * var_chaste_interface__membrane__V), 2))); // second
        const double var_L_type_Ca_channel_f_gate__alpha_f = var_L_type_Ca_channel_f_gate__f_infinity / var_L_type_Ca_channel_f_gate__tau_f; // per_second
        const double var_L_type_Ca_channel_f_gate__beta_f = (1.0 - var_L_type_Ca_channel_f_gate__f_infinity) / var_L_type_Ca_channel_f_gate__tau_f; // per_second
        const double var_L_type_Ca_channel_f_gate__f_orig_deriv = (1.0 - var_chaste_interface__L_type_Ca_channel_f_gate__f) * var_L_type_Ca_channel_f_gate__alpha_f - var_L_type_Ca_channel_f_gate__beta_f * var_chaste_interface__L_type_Ca_channel_f_gate__f; // 1 / second
        const double d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f = 0.001 * var_L_type_Ca_channel_f_gate__f_orig_deriv; // 1 / millisecond
        const double var_Na_Ca_exchanger__i_NaCa = (-pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * mParameters[10] * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) / (1.0 + (pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_Na_Ca_exchanger__c2 * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // microA_per_microF
        const double var_Na_channel_states__alpha_11 = 3802.0 / (0.20000000000000001 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V) + 0.1027 * exp(-0.058823529411764705 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_12 = 3802.0 / (0.1027 * exp(-0.066666666666666666 * var_chaste_interface__membrane__V) + 0.23000000000000001 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_13 = 3802.0 / (0.25 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V) + 0.1027 * exp(-0.083333333333333329 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_2 = 9178.0 * exp(0.033692722371967652 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__alpha_3 = 0.00037932999999999999 * exp(-0.12987012987012986 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__alpha_4 = 0.01 * var_Na_channel_states__alpha_2; // per_second
        const double var_Na_channel_states__alpha_5 = 1.0526315789473684e-5 * var_Na_channel_states__alpha_2; // per_second
        const double var_Na_channel_states__beta_11 = 191.69999999999999 * exp(-0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_12 = 200.0 * exp(0.24630541871921183 - 0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_13 = 220.0 * exp(0.49261083743842365 - 0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_3 = 8.4000000000000004 + 0.02 * var_chaste_interface__membrane__V; // per_second
        const double var_Na_channel_states__P_C1_orig_deriv = (-var_Na_channel_states__alpha_13 - var_Na_channel_states__beta_12 - var_Na_channel_states__beta_3) * var_chaste_interface__Na_channel_states__P_C1 + var_chaste_interface__Na_channel_states__P_C2 * var_Na_channel_states__alpha_12 + var_chaste_interface__Na_channel_states__P_IF * var_Na_channel_states__alpha_3 + var_chaste_interface__Na_channel_states__P_O_Na * var_Na_channel_states__beta_13; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_C1 = 0.001 * var_Na_channel_states__P_C1_orig_deriv; // 1 / millisecond
        const double var_Na_channel_states__P_C2_orig_deriv = (-var_Na_channel_states__alpha_12 - var_Na_channel_states__beta_11 - var_Na_channel_states__beta_3) * var_chaste_interface__Na_channel_states__P_C2 + var_chaste_interface__Na_channel_states__P_C1 * var_Na_channel_states__beta_12 + var_chaste_interface__Na_channel_states__P_C3 * var_Na_channel_states__alpha_11 + var_chaste_interface__Na_channel_states__P_IC2 * var_Na_channel_states__alpha_3; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_C2 = 0.001 * var_Na_channel_states__P_C2_orig_deriv; // 1 / millisecond
        const double var_Na_channel_states__P_C3_orig_deriv = (-var_Na_channel_states__alpha_11 - var_Na_channel_states__beta_3) * var_chaste_interface__Na_channel_states__P_C3 + var_chaste_interface__Na_channel_states__P_C2 * var_Na_channel_states__beta_11 + var_chaste_interface__Na_channel_states__P_IC3 * var_Na_channel_states__alpha_3; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_C3 = 0.001 * var_Na_channel_states__P_C3_orig_deriv; // 1 / millisecond
        const double var_Na_channel_states__P_IC2_orig_deriv = (-var_Na_channel_states__alpha_12 - var_Na_channel_states__alpha_3 - var_Na_channel_states__beta_11) * var_chaste_interface__Na_channel_states__P_IC2 + var_chaste_interface__Na_channel_states__P_C2 * var_Na_channel_states__beta_3 + var_chaste_interface__Na_channel_states__P_IC3 * var_Na_channel_states__alpha_11 + var_chaste_interface__Na_channel_states__P_IF * var_Na_channel_states__beta_12; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_IC2 = 0.001 * var_Na_channel_states__P_IC2_orig_deriv; // 1 / millisecond
        const double var_Na_channel_states__P_IC3_orig_deriv = (-var_Na_channel_states__alpha_11 - var_Na_channel_states__alpha_3) * var_chaste_interface__Na_channel_states__P_IC3 + var_chaste_interface__Na_channel_states__P_C3 * var_Na_channel_states__beta_3 + var_chaste_interface__Na_channel_states__P_IC2 * var_Na_channel_states__beta_11; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_IC3 = 0.001 * var_Na_channel_states__P_IC3_orig_deriv; // 1 / millisecond
        const double var_Na_channel_states__beta_2 = var_Na_channel_states__alpha_13 * var_Na_channel_states__alpha_2 * var_Na_channel_states__alpha_3 / (var_Na_channel_states__beta_13 * var_Na_channel_states__beta_3); // per_second
        const double var_Na_channel_states__P_O_Na_orig_deriv = (-var_Na_channel_states__alpha_2 - var_Na_channel_states__beta_13) * var_chaste_interface__Na_channel_states__P_O_Na + var_chaste_interface__Na_channel_states__P_C1 * var_Na_channel_states__alpha_13 + var_chaste_interface__Na_channel_states__P_IF * var_Na_channel_states__beta_2; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_O_Na = 0.001 * var_Na_channel_states__P_O_Na_orig_deriv; // 1 / millisecond
        const double var_Na_channel_states__beta_4 = var_Na_channel_states__alpha_3; // per_second
        const double var_Na_channel_states__P_IF_orig_deriv = (-var_Na_channel_states__alpha_3 - var_Na_channel_states__alpha_4 - var_Na_channel_states__beta_12 - var_Na_channel_states__beta_2) * var_chaste_interface__Na_channel_states__P_IF + var_chaste_interface__Na_channel_states__P_C1 * var_Na_channel_states__beta_3 + var_chaste_interface__Na_channel_states__P_IC2 * var_Na_channel_states__alpha_12 + var_chaste_interface__Na_channel_states__P_IM1 * var_Na_channel_states__beta_4 + var_chaste_interface__Na_channel_states__P_O_Na * var_Na_channel_states__alpha_2; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_IF = 0.001 * var_Na_channel_states__P_IF_orig_deriv; // 1 / millisecond
        const double var_Na_channel_states__beta_5 = 0.02 * var_Na_channel_states__alpha_3; // per_second
        const double var_Na_channel_states__P_IM1_orig_deriv = (-var_Na_channel_states__alpha_5 - var_Na_channel_states__beta_4) * var_chaste_interface__Na_channel_states__P_IM1 + var_chaste_interface__Na_channel_states__P_IF * var_Na_channel_states__alpha_4 + var_chaste_interface__Na_channel_states__P_IM2 * var_Na_channel_states__beta_5; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_IM1 = 0.001 * var_Na_channel_states__P_IM1_orig_deriv; // 1 / millisecond
        const double var_Na_channel_states__P_IM2_orig_deriv = var_chaste_interface__Na_channel_states__P_IM1 * var_Na_channel_states__alpha_5 - var_chaste_interface__Na_channel_states__P_IM2 * var_Na_channel_states__beta_5; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_IM2 = 0.001 * var_Na_channel_states__P_IM2_orig_deriv; // 1 / millisecond
        const double var_T_type_Ca_channel__i_Ca_T = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2) * (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_T_type_Ca_channel__g_CaT * var_chaste_interface__T_type_Ca_channel_g_gate__g; // microA_per_microF
        const double var_T_type_Ca_channel_b_gate__b_inf = 1 / (1.0 + exp(-1.2962962962962963 - 0.092592592592592587 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_T_type_Ca_channel_b_gate__tau_b = 0.0037000000000000002 + 0.0061000000000000004 / (1.0 + exp(5.5555555555555554 + 0.22222222222222221 * var_chaste_interface__membrane__V)); // second
        const double var_T_type_Ca_channel_b_gate__b_orig_deriv = (-var_chaste_interface__T_type_Ca_channel_b_gate__b + var_T_type_Ca_channel_b_gate__b_inf) / var_T_type_Ca_channel_b_gate__tau_b; // 1 / second
        const double d_dt_chaste_interface_var_T_type_Ca_channel_b_gate__b = 0.001 * var_T_type_Ca_channel_b_gate__b_orig_deriv; // 1 / millisecond
        const double var_T_type_Ca_channel_g_gate__g_inf = 1 / (1.0 + exp(10.714285714285715 + 0.17857142857142858 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_T_type_Ca_channel_g_gate__tau_g = ((var_chaste_interface__membrane__V <= 0) ? (0.012 - 0.00087500000000000002 * var_chaste_interface__membrane__V) : (0.012)); // second
        const double var_T_type_Ca_channel_g_gate__g_orig_deriv = (-var_chaste_interface__T_type_Ca_channel_g_gate__g + var_T_type_Ca_channel_g_gate__g_inf) / var_T_type_Ca_channel_g_gate__tau_g; // 1 / second
        const double d_dt_chaste_interface_var_T_type_Ca_channel_g_gate__g = 0.001 * var_T_type_Ca_channel_g_gate__g_orig_deriv; // 1 / millisecond
        const double var_calcium_background_current__i_Ca_b = (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_calcium_background_current__g_Cab; // microA_per_microF
        const double var_fast_sodium_current__i_Na = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__Na_channel_states__P_O_Na * mParameters[6]; // microA_per_microF
        const double var_non_specific_calcium_activated_current__K_m_ns_Ca = 0.0011999999999999999; // millimolar
        const double var_non_specific_calcium_activated_current__P_ns_Ca = 0; // cm_per_second
        const double var_non_specific_calcium_activated_current__I_ns_K = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * mParameters[2] + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__I_ns_Na = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * mParameters[3] + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_K = var_non_specific_calcium_activated_current__I_ns_K / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Na = var_non_specific_calcium_activated_current__I_ns_Na / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Ca = var_non_specific_calcium_activated_current__i_ns_K + var_non_specific_calcium_activated_current__i_ns_Na; // microA_per_microF
        const double var_plateau_potassium_current__Kp = 1 / (1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_plateau_potassium_current__g_Kp = 0.0055199999999999997; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__E_Kr = var_membrane__R * var_membrane__T * log(mParameters[2] / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_rapid_delayed_rectifier_potassium_current__g_Kr = pow(mParameters[2], 0.58999999999999997) * mParameters[8]; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_rapid_delayed_rectifier_potassium_current__E_Kr + var_chaste_interface__membrane__V) * var_chaste_interface__Kr_channel_states__P_O * var_rapid_delayed_rectifier_potassium_current__g_Kr; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__I_pCa = 1.1499999999999999; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__K_mpCa = 0.00050000000000000001; // millimolar
        const double var_sarcolemmal_calcium_pump__i_p_Ca = var_chaste_interface__calcium_dynamics__Cai * var_sarcolemmal_calcium_pump__I_pCa / (var_chaste_interface__calcium_dynamics__Cai + var_sarcolemmal_calcium_pump__K_mpCa); // microA_per_microF
        const double var_calcium_dynamics__Cai_orig_deriv = ((-var_calcium_dynamics__i_up + var_calcium_dynamics__i_leak) * var_calcium_dynamics__V_NSR / var_ionic_concentrations__V_myo + var_calcium_dynamics__V_JSR * var_calcium_dynamics__i_rel / var_ionic_concentrations__V_myo - 0.5 * (-2.0 * var_Na_Ca_exchanger__i_NaCa + var_L_type_Ca_channel__i_CaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_sarcolemmal_calcium_pump__i_p_Ca) * var_ionic_concentrations__A_cap / (var_ionic_concentrations__V_myo * var_membrane__F)) / (1.0 + var_calcium_dynamics__CMDN_max * var_calcium_dynamics__K_mCMDN / pow((var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__K_mCMDN), 2) + var_calcium_dynamics__K_mTn * var_calcium_dynamics__Tn_max / pow((var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__K_mTn), 2)); // millimolar / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Cai = 0.001 * var_calcium_dynamics__Cai_orig_deriv; // millimolar / millisecond
        const double var_calcium_dynamics__Cainfluxtrack_orig_deriv = ((var_chaste_interface__calcium_dynamics__APtrack > 0.20000000000000001) ? (-0.5 * (-var_Na_Ca_exchanger__i_NaCa + var_L_type_Ca_channel__i_CaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_sarcolemmal_calcium_pump__i_p_Ca) * var_ionic_concentrations__A_cap / (var_ionic_concentrations__V_myo * var_membrane__F)) : ((var_chaste_interface__calcium_dynamics__APtrack2 > 0.01) ? (0) : (-500.0 * var_chaste_interface__calcium_dynamics__Cainfluxtrack))); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Cainfluxtrack = 0.001 * var_calcium_dynamics__Cainfluxtrack_orig_deriv; // 1 / millisecond
        const double var_slow_delayed_rectifier_potassium_current__PNaK = 0.018329999999999999; // dimensionless
        const double var_slow_delayed_rectifier_potassium_current__E_Ks = var_membrane__R * var_membrane__T * log((mParameters[3] * var_slow_delayed_rectifier_potassium_current__PNaK + mParameters[2]) / (var_chaste_interface__ionic_concentrations__Nai * var_slow_delayed_rectifier_potassium_current__PNaK + var_chaste_interface__ionic_concentrations__Ki)) / var_membrane__F; // millivolt
        const double var_slow_delayed_rectifier_potassium_current__g_Ks = 0.433 * (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * mParameters[9]; // milliS_per_microF
        const double var_slow_delayed_rectifier_potassium_current_xs1_gate__tau_xs1 = 0.001 * ((fabs(30.0 + var_chaste_interface__membrane__V) < 1.455604075689676e-6) ? (1 / (-1.0465793304208771e-10 / (1.0 - exp(2.1542940320207204e-7)) - 1.9068413391534758e-10 / (-1.0 + exp(-9.9999999999880736e-8)) + 343500.00000040967 * (30.000001455604075 + var_chaste_interface__membrane__V) * (1.0465793304208771e-10 / (1.0 - exp(2.1542940320207204e-7)) + 1.0465793304208771e-10 / (1.0 - exp(-2.1542940320207204e-7)) + 1.9068413391534758e-10 / (-1.0 + exp(9.9999999999880736e-8)) + 1.9068413391534758e-10 / (-1.0 + exp(-9.9999999999880736e-8))))) : (1 / (0.00013100000000000001 * (30.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__V)) + 7.1899999999999999e-5 * (30.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__V))))); // second
        const double var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_infinity = 1 / (1.0 + exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_orig_deriv = (-var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 + var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_infinity) / var_slow_delayed_rectifier_potassium_current_xs1_gate__tau_xs1; // 1 / second
        const double d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = 0.001 * var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_orig_deriv; // 1 / millisecond
        const double var_slow_delayed_rectifier_potassium_current_xs2_gate__tau_xs2 = 0.0040000000000000001 * ((fabs(30.0 + var_chaste_interface__membrane__V) < 1.455604075689676e-6) ? (1 / (-1.0465793304208771e-10 / (1.0 - exp(2.1542940320207204e-7)) - 1.9068413391534758e-10 / (-1.0 + exp(-9.9999999999880736e-8)) + 343500.00000040967 * (30.000001455604075 + var_chaste_interface__membrane__V) * (1.0465793304208771e-10 / (1.0 - exp(2.1542940320207204e-7)) + 1.0465793304208771e-10 / (1.0 - exp(-2.1542940320207204e-7)) + 1.9068413391534758e-10 / (-1.0 + exp(9.9999999999880736e-8)) + 1.9068413391534758e-10 / (-1.0 + exp(-9.9999999999880736e-8))))) : (1 / (0.00013100000000000001 * (30.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__V)) + 7.1899999999999999e-5 * (30.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__V))))); // second
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = (-var_slow_delayed_rectifier_potassium_current__E_Ks + var_chaste_interface__membrane__V) * var_slow_delayed_rectifier_potassium_current__g_Ks * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2; // microA_per_microF
        const double var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_infinity = 1 / (1.0 + exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_orig_deriv = (-var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 + var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_infinity) / var_slow_delayed_rectifier_potassium_current_xs2_gate__tau_xs2; // 1 / second
        const double d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = 0.001 * var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_orig_deriv; // 1 / millisecond
        const double var_sodium_activated_potassium_current__g_K_Na = 0; // milliS_per_microF
        const double var_sodium_activated_potassium_current__kdKNa = 66.0; // millimolar
        const double var_sodium_activated_potassium_current__nKNa = 2.7999999999999998; // dimensionless
        const double var_sodium_activated_potassium_current__pona = 0.84999999999999998 / (1.0 + pow((var_sodium_activated_potassium_current__kdKNa / var_chaste_interface__ionic_concentrations__Nai), var_sodium_activated_potassium_current__nKNa)); // dimensionless
        const double var_sodium_activated_potassium_current__pov = 0.80000000000000004 - 0.65000000000000002 / (1.0 + exp(8.3333333333333339 + 0.066666666666666666 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_sodium_background_current__g_Nab = 0.0040000000000000001; // milliS_per_microF
        const double var_sodium_background_current__i_Na_b = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_sodium_background_current__g_Nab; // microA_per_microF
        const double var_sodium_potassium_pump__I_NaK = 2.25; // microA_per_microF
        const double var_sodium_potassium_pump__K_mKo = 1.5; // millimolar
        const double var_sodium_potassium_pump__K_mNai = 10.0; // millimolar
        const double var_sodium_potassium_pump__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * mParameters[3]); // dimensionless
        const double var_sodium_potassium_pump__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + 0.036499999999999998 * var_sodium_potassium_pump__sigma * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // dimensionless
        const double var_sodium_potassium_pump__i_NaK = mParameters[2] * var_sodium_potassium_pump__I_NaK * var_sodium_potassium_pump__f_NaK / ((1.0 + pow(var_sodium_potassium_pump__K_mNai, 2) / pow(var_chaste_interface__ionic_concentrations__Nai, 2)) * (mParameters[2] + var_sodium_potassium_pump__K_mKo)); // microA_per_microF
        const double var_time_independent_potassium_current__E_K = var_membrane__R * var_membrane__T * log(mParameters[2] / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_ATP_sensitive_potassium_current__i_K_ATP = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_ATP_sensitive_potassium_current__GKbaraATP; // microA_per_microF
        const double var_plateau_potassium_current__i_Kp = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_plateau_potassium_current__Kp * var_plateau_potassium_current__g_Kp; // microA_per_microF
        const double var_sodium_activated_potassium_current__i_K_Na = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_sodium_activated_potassium_current__g_K_Na * var_sodium_activated_potassium_current__pona * var_sodium_activated_potassium_current__pov; // microA_per_microF
        const double var_time_independent_potassium_current__g_K1 = 0.43033148291193518 * sqrt(mParameters[2]) * mParameters[7]; // milliS_per_cm2
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K)); // per_second
        const double var_time_independent_potassium_current_K1_gate__beta_K1 = 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V)); // per_second
        const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_microF
        const double var_transient_outward_current__g_to = 1.1000000000000001; // milliS_per_microF
        const double var_transient_outward_current__rvdv = exp(0.01 * var_chaste_interface__membrane__V); // dimensionless
        const double var_transient_outward_current_ydv_gate__alpha_ydv = 15.0 / (1.0 + exp(12.0 + 0.20000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_transient_outward_current_ydv_gate__beta_ydv = 100.0 * exp(5.0 + 0.20000000000000001 * var_chaste_interface__membrane__V) / (1.0 + exp(5.0 + 0.20000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_transient_outward_current_ydv_gate__tau_ydv = 1 / (var_transient_outward_current_ydv_gate__alpha_ydv + var_transient_outward_current_ydv_gate__beta_ydv); // second
        const double var_transient_outward_current_ydv_gate__ydv_ss = var_transient_outward_current_ydv_gate__alpha_ydv / (var_transient_outward_current_ydv_gate__alpha_ydv + var_transient_outward_current_ydv_gate__beta_ydv); // dimensionless
        const double var_transient_outward_current_ydv_gate__ydv_orig_deriv = (-var_chaste_interface__transient_outward_current_ydv_gate__ydv + var_transient_outward_current_ydv_gate__ydv_ss) / var_transient_outward_current_ydv_gate__tau_ydv; // 1 / second
        const double d_dt_chaste_interface_var_transient_outward_current_ydv_gate__ydv = 0.001 * var_transient_outward_current_ydv_gate__ydv_orig_deriv; // 1 / millisecond
        const double var_transient_outward_current_zdv_gate__alpha_zdv = 10000.0 * exp(-1.6000000000000001 + 0.040000000000000001 * var_chaste_interface__membrane__V) / (1.0 + exp(-1.6000000000000001 + 0.040000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_transient_outward_current_zdv_gate__beta_zdv = 10000.0 * exp(-3.6000000000000001 - 0.040000000000000001 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.6000000000000001 - 0.040000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_transient_outward_current_zdv_gate__tau_zdv = 1 / (var_transient_outward_current_zdv_gate__alpha_zdv + var_transient_outward_current_zdv_gate__beta_zdv); // second
        const double var_transient_outward_current__i_to = pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_transient_outward_current__g_to * mParameters[11] * var_transient_outward_current__rvdv * var_chaste_interface__transient_outward_current_ydv_gate__ydv; // microA_per_microF
        const double var_membrane__dVdt = -(var_ATP_sensitive_potassium_current__i_K_ATP + var_L_type_Ca_channel__i_Ca_L + var_Na_Ca_exchanger__i_NaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_fast_sodium_current__i_Na + var_membrane__I_st + var_non_specific_calcium_activated_current__i_ns_Ca + var_plateau_potassium_current__i_Kp + var_rapid_delayed_rectifier_potassium_current__i_Kr + var_sarcolemmal_calcium_pump__i_p_Ca + var_slow_delayed_rectifier_potassium_current__i_Ks + var_sodium_activated_potassium_current__i_K_Na + var_sodium_background_current__i_Na_b + var_sodium_potassium_pump__i_NaK + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) / mParameters[5]; // dimensionless
        const double var_calcium_dynamics__APtrack_orig_deriv = ((var_membrane__dVdt > 150000.0) ? (100000.0 - 100500.0 * var_chaste_interface__calcium_dynamics__APtrack) : (-500.0 * var_chaste_interface__calcium_dynamics__APtrack)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__APtrack = 0.001 * var_calcium_dynamics__APtrack_orig_deriv; // 1 / millisecond
        const double var_transient_outward_current_zdv_gate__zdv_ss = var_transient_outward_current_zdv_gate__alpha_zdv / (var_transient_outward_current_zdv_gate__alpha_zdv + var_transient_outward_current_zdv_gate__beta_zdv); // dimensionless
        const double var_transient_outward_current_zdv_gate__zdv_orig_deriv = (-var_chaste_interface__transient_outward_current_zdv_gate__zdv + var_transient_outward_current_zdv_gate__zdv_ss) / var_transient_outward_current_zdv_gate__tau_zdv; // 1 / second
        const double d_dt_chaste_interface_var_transient_outward_current_zdv_gate__zdv = 0.001 * var_transient_outward_current_zdv_gate__zdv_orig_deriv; // 1 / millisecond
        
        mEvalF[1] = d_dt_chaste_interface_var_calcium_dynamics__Cai;
        mPartialF[1] = EvaluatePartialDerivative1(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[2] = d_dt_chaste_interface_var_Na_channel_states__P_O_Na;
        mPartialF[2] = EvaluatePartialDerivative2(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[3] = d_dt_chaste_interface_var_Na_channel_states__P_C1;
        mPartialF[3] = EvaluatePartialDerivative3(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[4] = d_dt_chaste_interface_var_Na_channel_states__P_C2;
        mPartialF[4] = EvaluatePartialDerivative4(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[5] = d_dt_chaste_interface_var_Na_channel_states__P_C3;
        mPartialF[5] = EvaluatePartialDerivative5(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[6] = d_dt_chaste_interface_var_Na_channel_states__P_IF;
        mPartialF[6] = EvaluatePartialDerivative6(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[7] = d_dt_chaste_interface_var_Na_channel_states__P_IC3;
        mPartialF[7] = EvaluatePartialDerivative7(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[8] = d_dt_chaste_interface_var_Na_channel_states__P_IC2;
        mPartialF[8] = EvaluatePartialDerivative8(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[9] = d_dt_chaste_interface_var_Na_channel_states__P_IM1;
        mPartialF[9] = EvaluatePartialDerivative9(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[10] = d_dt_chaste_interface_var_Na_channel_states__P_IM2;
        mPartialF[10] = EvaluatePartialDerivative10(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[11] = d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d;
        mPartialF[11] = EvaluatePartialDerivative11(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[12] = d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f;
        mPartialF[12] = EvaluatePartialDerivative12(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[13] = d_dt_chaste_interface_var_T_type_Ca_channel_b_gate__b;
        mPartialF[13] = EvaluatePartialDerivative13(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[14] = d_dt_chaste_interface_var_T_type_Ca_channel_g_gate__g;
        mPartialF[14] = EvaluatePartialDerivative14(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[15] = d_dt_chaste_interface_var_Kr_channel_states__P_O;
        mPartialF[15] = EvaluatePartialDerivative15(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[16] = d_dt_chaste_interface_var_Kr_channel_states__P_C1;
        mPartialF[16] = EvaluatePartialDerivative16(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[17] = d_dt_chaste_interface_var_Kr_channel_states__P_C2;
        mPartialF[17] = EvaluatePartialDerivative17(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[18] = d_dt_chaste_interface_var_Kr_channel_states__P_C3;
        mPartialF[18] = EvaluatePartialDerivative18(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[19] = d_dt_chaste_interface_var_Kr_channel_states__P_I;
        mPartialF[19] = EvaluatePartialDerivative19(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[20] = d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1;
        mPartialF[20] = EvaluatePartialDerivative20(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[21] = d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2;
        mPartialF[21] = EvaluatePartialDerivative21(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[22] = d_dt_chaste_interface_var_transient_outward_current_zdv_gate__zdv;
        mPartialF[22] = EvaluatePartialDerivative22(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[23] = d_dt_chaste_interface_var_transient_outward_current_ydv_gate__ydv;
        mPartialF[23] = EvaluatePartialDerivative23(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[24] = d_dt_chaste_interface_var_calcium_dynamics__Ca_JSR;
        mPartialF[24] = EvaluatePartialDerivative24(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[25] = d_dt_chaste_interface_var_calcium_dynamics__Ca_NSR;
        mPartialF[25] = EvaluatePartialDerivative25(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[26] = d_dt_chaste_interface_var_calcium_dynamics__APtrack;
        mPartialF[26] = EvaluatePartialDerivative26(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[27] = d_dt_chaste_interface_var_calcium_dynamics__APtrack2;
        mPartialF[27] = EvaluatePartialDerivative27(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[28] = d_dt_chaste_interface_var_calcium_dynamics__APtrack3;
        mPartialF[28] = EvaluatePartialDerivative28(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[29] = d_dt_chaste_interface_var_calcium_dynamics__Cainfluxtrack;
        mPartialF[29] = EvaluatePartialDerivative29(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[30] = d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack;
        mPartialF[30] = EvaluatePartialDerivative30(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[31] = d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack2;
        mPartialF[31] = EvaluatePartialDerivative31(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[32] = d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack3;
        mPartialF[32] = EvaluatePartialDerivative32(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[33] = d_dt_chaste_interface_var_ionic_concentrations__Nai;
        mPartialF[33] = EvaluatePartialDerivative33(var_chaste_interface__environment__time_converted, rY, delta);
        mEvalF[34] = d_dt_chaste_interface_var_ionic_concentrations__Ki;
        mPartialF[34] = EvaluatePartialDerivative34(var_chaste_interface__environment__time_converted, rY, delta);
        
        {
            if (fabs(mPartialF[1]) < delta){
                rY[1] += mDt*d_dt_chaste_interface_var_calcium_dynamics__Cai;
            }
            else
            {
                rY[1] += (d_dt_chaste_interface_var_calcium_dynamics__Cai/mPartialF[1])*(exp(mPartialF[1]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[2]) < delta){
                rY[2] += mDt*d_dt_chaste_interface_var_Na_channel_states__P_O_Na;
            }
            else
            {
                rY[2] += (d_dt_chaste_interface_var_Na_channel_states__P_O_Na/mPartialF[2])*(exp(mPartialF[2]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[3]) < delta){
                rY[3] += mDt*d_dt_chaste_interface_var_Na_channel_states__P_C1;
            }
            else
            {
                rY[3] += (d_dt_chaste_interface_var_Na_channel_states__P_C1/mPartialF[3])*(exp(mPartialF[3]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[4]) < delta){
                rY[4] += mDt*d_dt_chaste_interface_var_Na_channel_states__P_C2;
            }
            else
            {
                rY[4] += (d_dt_chaste_interface_var_Na_channel_states__P_C2/mPartialF[4])*(exp(mPartialF[4]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[5]) < delta){
                rY[5] += mDt*d_dt_chaste_interface_var_Na_channel_states__P_C3;
            }
            else
            {
                rY[5] += (d_dt_chaste_interface_var_Na_channel_states__P_C3/mPartialF[5])*(exp(mPartialF[5]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[6]) < delta){
                rY[6] += mDt*d_dt_chaste_interface_var_Na_channel_states__P_IF;
            }
            else
            {
                rY[6] += (d_dt_chaste_interface_var_Na_channel_states__P_IF/mPartialF[6])*(exp(mPartialF[6]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[7]) < delta){
                rY[7] += mDt*d_dt_chaste_interface_var_Na_channel_states__P_IC3;
            }
            else
            {
                rY[7] += (d_dt_chaste_interface_var_Na_channel_states__P_IC3/mPartialF[7])*(exp(mPartialF[7]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[8]) < delta){
                rY[8] += mDt*d_dt_chaste_interface_var_Na_channel_states__P_IC2;
            }
            else
            {
                rY[8] += (d_dt_chaste_interface_var_Na_channel_states__P_IC2/mPartialF[8])*(exp(mPartialF[8]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[9]) < delta){
                rY[9] += mDt*d_dt_chaste_interface_var_Na_channel_states__P_IM1;
            }
            else
            {
                rY[9] += (d_dt_chaste_interface_var_Na_channel_states__P_IM1/mPartialF[9])*(exp(mPartialF[9]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[10]) < delta){
                rY[10] += mDt*d_dt_chaste_interface_var_Na_channel_states__P_IM2;
            }
            else
            {
                rY[10] += (d_dt_chaste_interface_var_Na_channel_states__P_IM2/mPartialF[10])*(exp(mPartialF[10]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[11]) < delta){
                rY[11] += mDt*d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d;
            }
            else
            {
                rY[11] += (d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d/mPartialF[11])*(exp(mPartialF[11]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[12]) < delta){
                rY[12] += mDt*d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f;
            }
            else
            {
                rY[12] += (d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f/mPartialF[12])*(exp(mPartialF[12]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[13]) < delta){
                rY[13] += mDt*d_dt_chaste_interface_var_T_type_Ca_channel_b_gate__b;
            }
            else
            {
                rY[13] += (d_dt_chaste_interface_var_T_type_Ca_channel_b_gate__b/mPartialF[13])*(exp(mPartialF[13]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[14]) < delta){
                rY[14] += mDt*d_dt_chaste_interface_var_T_type_Ca_channel_g_gate__g;
            }
            else
            {
                rY[14] += (d_dt_chaste_interface_var_T_type_Ca_channel_g_gate__g/mPartialF[14])*(exp(mPartialF[14]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[15]) < delta){
                rY[15] += mDt*d_dt_chaste_interface_var_Kr_channel_states__P_O;
            }
            else
            {
                rY[15] += (d_dt_chaste_interface_var_Kr_channel_states__P_O/mPartialF[15])*(exp(mPartialF[15]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[16]) < delta){
                rY[16] += mDt*d_dt_chaste_interface_var_Kr_channel_states__P_C1;
            }
            else
            {
                rY[16] += (d_dt_chaste_interface_var_Kr_channel_states__P_C1/mPartialF[16])*(exp(mPartialF[16]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[17]) < delta){
                rY[17] += mDt*d_dt_chaste_interface_var_Kr_channel_states__P_C2;
            }
            else
            {
                rY[17] += (d_dt_chaste_interface_var_Kr_channel_states__P_C2/mPartialF[17])*(exp(mPartialF[17]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[18]) < delta){
                rY[18] += mDt*d_dt_chaste_interface_var_Kr_channel_states__P_C3;
            }
            else
            {
                rY[18] += (d_dt_chaste_interface_var_Kr_channel_states__P_C3/mPartialF[18])*(exp(mPartialF[18]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[19]) < delta){
                rY[19] += mDt*d_dt_chaste_interface_var_Kr_channel_states__P_I;
            }
            else
            {
                rY[19] += (d_dt_chaste_interface_var_Kr_channel_states__P_I/mPartialF[19])*(exp(mPartialF[19]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[20]) < delta){
                rY[20] += mDt*d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1;
            }
            else
            {
                rY[20] += (d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1/mPartialF[20])*(exp(mPartialF[20]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[21]) < delta){
                rY[21] += mDt*d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2;
            }
            else
            {
                rY[21] += (d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2/mPartialF[21])*(exp(mPartialF[21]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[22]) < delta){
                rY[22] += mDt*d_dt_chaste_interface_var_transient_outward_current_zdv_gate__zdv;
            }
            else
            {
                rY[22] += (d_dt_chaste_interface_var_transient_outward_current_zdv_gate__zdv/mPartialF[22])*(exp(mPartialF[22]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[23]) < delta){
                rY[23] += mDt*d_dt_chaste_interface_var_transient_outward_current_ydv_gate__ydv;
            }
            else
            {
                rY[23] += (d_dt_chaste_interface_var_transient_outward_current_ydv_gate__ydv/mPartialF[23])*(exp(mPartialF[23]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[24]) < delta){
                rY[24] += mDt*d_dt_chaste_interface_var_calcium_dynamics__Ca_JSR;
            }
            else
            {
                rY[24] += (d_dt_chaste_interface_var_calcium_dynamics__Ca_JSR/mPartialF[24])*(exp(mPartialF[24]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[25]) < delta){
                rY[25] += mDt*d_dt_chaste_interface_var_calcium_dynamics__Ca_NSR;
            }
            else
            {
                rY[25] += (d_dt_chaste_interface_var_calcium_dynamics__Ca_NSR/mPartialF[25])*(exp(mPartialF[25]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[26]) < delta){
                rY[26] += mDt*d_dt_chaste_interface_var_calcium_dynamics__APtrack;
            }
            else
            {
                rY[26] += (d_dt_chaste_interface_var_calcium_dynamics__APtrack/mPartialF[26])*(exp(mPartialF[26]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[27]) < delta){
                rY[27] += mDt*d_dt_chaste_interface_var_calcium_dynamics__APtrack2;
            }
            else
            {
                rY[27] += (d_dt_chaste_interface_var_calcium_dynamics__APtrack2/mPartialF[27])*(exp(mPartialF[27]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[28]) < delta){
                rY[28] += mDt*d_dt_chaste_interface_var_calcium_dynamics__APtrack3;
            }
            else
            {
                rY[28] += (d_dt_chaste_interface_var_calcium_dynamics__APtrack3/mPartialF[28])*(exp(mPartialF[28]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[29]) < delta){
                rY[29] += mDt*d_dt_chaste_interface_var_calcium_dynamics__Cainfluxtrack;
            }
            else
            {
                rY[29] += (d_dt_chaste_interface_var_calcium_dynamics__Cainfluxtrack/mPartialF[29])*(exp(mPartialF[29]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[30]) < delta){
                rY[30] += mDt*d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack;
            }
            else
            {
                rY[30] += (d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack/mPartialF[30])*(exp(mPartialF[30]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[31]) < delta){
                rY[31] += mDt*d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack2;
            }
            else
            {
                rY[31] += (d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack2/mPartialF[31])*(exp(mPartialF[31]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[32]) < delta){
                rY[32] += mDt*d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack3;
            }
            else
            {
                rY[32] += (d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack3/mPartialF[32])*(exp(mPartialF[32]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[33]) < delta){
                rY[33] += mDt*d_dt_chaste_interface_var_ionic_concentrations__Nai;
            }
            else
            {
                rY[33] += (d_dt_chaste_interface_var_ionic_concentrations__Nai/mPartialF[33])*(exp(mPartialF[33]*mDt)-1.0);
            }
            
        }
        {
            if (fabs(mPartialF[34]) < delta){
                rY[34] += mDt*d_dt_chaste_interface_var_ionic_concentrations__Ki;
            }
            else
            {
                rY[34] += (d_dt_chaste_interface_var_ionic_concentrations__Ki/mPartialF[34])*(exp(mPartialF[34]*mDt)-1.0);
            }
            
        }        
        
    }
   
    
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative0(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        double d_dt_chaste_interface_var_membrane__V;
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000104
        double var_chaste_interface__Na_channel_states__P_O_Na = rY[2];
        // Units: dimensionless; Initial value: 3.756e-13
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[11];
        // Units: dimensionless; Initial value: 3.289e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[12];
        // Units: dimensionless; Initial value: 0.99975
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = rY[13];
        // Units: dimensionless; Initial value: 0.000983
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = rY[14];
        // Units: dimensionless; Initial value: 0.9942
        double var_chaste_interface__Kr_channel_states__P_O = rY[15];
        // Units: dimensionless; Initial value: 1.104e-10
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = rY[20];
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = rY[21];
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = rY[22];
        // Units: dimensionless; Initial value: 0.01167
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = rY[23];
        // Units: dimensionless; Initial value: 0.99998
        double var_chaste_interface__ionic_concentrations__Nai = rY[33];
        // Units: millimolar; Initial value: 10.532
        double var_chaste_interface__ionic_concentrations__Ki = rY[34];
        // Units: millimolar; Initial value: 140.557
        

        // Mathematics
        const double var_ATP_sensitive_potassium_current__ATPi = 3.0; // millimolar
        const double var_ATP_sensitive_potassium_current__hATP = 2.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__i_K_ATP_on = 1.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__kATP = 0.00025000000000000001; // millimolar
        const double var_ATP_sensitive_potassium_current__nATP = 0.23999999999999999; // dimensionless
        const double var_ATP_sensitive_potassium_current__nicholsarea = 5.0000000000000002e-5; // dimensionless
        const double var_ATP_sensitive_potassium_current__g_K_ATP = 0.000193 * var_ATP_sensitive_potassium_current__i_K_ATP_on / var_ATP_sensitive_potassium_current__nicholsarea; // milliS_per_microF
        const double var_ATP_sensitive_potassium_current__pATP = 1 / (1.0 + pow((var_ATP_sensitive_potassium_current__ATPi / var_ATP_sensitive_potassium_current__kATP), var_ATP_sensitive_potassium_current__hATP)); // dimensionless
        const double var_L_type_Ca_channel__gamma_Ki = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ko = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nai = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nao = 0.75; // dimensionless
        const double var_L_type_Ca_channel_f_Ca_gate__Km_Ca = 0.00059999999999999995; // millimolar
        const double var_Na_Ca_exchanger__c2 = 0.0001; // millimolar
        const double var_Na_Ca_exchanger__gamma = 0.14999999999999999; // dimensionless
        const double var_T_type_Ca_channel__g_CaT = 0.050000000000000003; // milliS_per_microF
        const double var_calcium_background_current__g_Cab = 0.003016; // milliS_per_microF
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + var_chaste_interface__calcium_dynamics__Cai / var_L_type_Ca_channel_f_Ca_gate__Km_Ca); // dimensionless
        const double var_ATP_sensitive_potassium_current__GKbaraATP = pow((0.25 * mParameters[2]), var_ATP_sensitive_potassium_current__nATP) * var_ATP_sensitive_potassium_current__g_K_ATP * var_ATP_sensitive_potassium_current__pATP; // milliS_per_microF
        const double var_membrane__F = 96485.0; // coulomb_per_mole
        const double var_membrane__I_st_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_membrane__I_st = var_membrane__I_st_converted / HeartConfig::Instance()->GetCapacitance(); // microA_per_microF
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_calcium_background_current__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(mParameters[1] / var_chaste_interface__calcium_dynamics__Cai) / var_membrane__F; // millivolt
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(mParameters[3] / var_chaste_interface__ionic_concentrations__Nai) / var_membrane__F; // millivolt
        const double var_L_type_Ca_channel__I_CaCa = ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (1.042038e-5 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 1.042038e-5 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 1.042038e-5 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (7.8019226357407252 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(0.074871767015605231 * var_chaste_interface__membrane__V)) * mParameters[4] * var_chaste_interface__membrane__V / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaK = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (1.8621604999999999e-9 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 1.8621604999999999e-9 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 1.8621604999999999e-9 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.00069711623550831479 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(0.037435883507802616 * var_chaste_interface__membrane__V)) * mParameters[4] * var_chaste_interface__membrane__V / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaNa = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (6.5127375e-9 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 6.5127375e-9 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 6.5127375e-9 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.0024381008236689767 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(0.037435883507802616 * var_chaste_interface__membrane__V)) * mParameters[4] * var_chaste_interface__membrane__V / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaCa = var_L_type_Ca_channel__I_CaCa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaK = var_L_type_Ca_channel__I_CaK * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaNa = var_L_type_Ca_channel__I_CaNa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_CaCa + var_L_type_Ca_channel__i_CaK + var_L_type_Ca_channel__i_CaNa; // microA_per_microF
        const double var_Na_Ca_exchanger__i_NaCa = (-pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * mParameters[10] * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) / (1.0 + (pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_Na_Ca_exchanger__c2 * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // microA_per_microF
        const double var_T_type_Ca_channel__i_Ca_T = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2) * (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_T_type_Ca_channel__g_CaT * var_chaste_interface__T_type_Ca_channel_g_gate__g; // microA_per_microF
        const double var_calcium_background_current__i_Ca_b = (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_calcium_background_current__g_Cab; // microA_per_microF
        const double var_fast_sodium_current__i_Na = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__Na_channel_states__P_O_Na * mParameters[6]; // microA_per_microF
        const double var_non_specific_calcium_activated_current__K_m_ns_Ca = 0.0011999999999999999; // millimolar
        const double var_non_specific_calcium_activated_current__P_ns_Ca = 0; // cm_per_second
        const double var_non_specific_calcium_activated_current__I_ns_K = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * mParameters[2] + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__I_ns_Na = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * mParameters[3] + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_K = var_non_specific_calcium_activated_current__I_ns_K / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Na = var_non_specific_calcium_activated_current__I_ns_Na / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Ca = var_non_specific_calcium_activated_current__i_ns_K + var_non_specific_calcium_activated_current__i_ns_Na; // microA_per_microF
        const double var_plateau_potassium_current__Kp = 1 / (1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_plateau_potassium_current__g_Kp = 0.0055199999999999997; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__E_Kr = var_membrane__R * var_membrane__T * log(mParameters[2] / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_rapid_delayed_rectifier_potassium_current__g_Kr = pow(mParameters[2], 0.58999999999999997) * mParameters[8]; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_rapid_delayed_rectifier_potassium_current__E_Kr + var_chaste_interface__membrane__V) * var_chaste_interface__Kr_channel_states__P_O * var_rapid_delayed_rectifier_potassium_current__g_Kr; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__I_pCa = 1.1499999999999999; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__K_mpCa = 0.00050000000000000001; // millimolar
        const double var_sarcolemmal_calcium_pump__i_p_Ca = var_chaste_interface__calcium_dynamics__Cai * var_sarcolemmal_calcium_pump__I_pCa / (var_chaste_interface__calcium_dynamics__Cai + var_sarcolemmal_calcium_pump__K_mpCa); // microA_per_microF
        const double var_slow_delayed_rectifier_potassium_current__PNaK = 0.018329999999999999; // dimensionless
        const double var_slow_delayed_rectifier_potassium_current__E_Ks = var_membrane__R * var_membrane__T * log((mParameters[3] * var_slow_delayed_rectifier_potassium_current__PNaK + mParameters[2]) / (var_chaste_interface__ionic_concentrations__Nai * var_slow_delayed_rectifier_potassium_current__PNaK + var_chaste_interface__ionic_concentrations__Ki)) / var_membrane__F; // millivolt
        const double var_slow_delayed_rectifier_potassium_current__g_Ks = 0.433 * (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * mParameters[9]; // milliS_per_microF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = (-var_slow_delayed_rectifier_potassium_current__E_Ks + var_chaste_interface__membrane__V) * var_slow_delayed_rectifier_potassium_current__g_Ks * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2; // microA_per_microF
        const double var_sodium_activated_potassium_current__g_K_Na = 0; // milliS_per_microF
        const double var_sodium_activated_potassium_current__kdKNa = 66.0; // millimolar
        const double var_sodium_activated_potassium_current__nKNa = 2.7999999999999998; // dimensionless
        const double var_sodium_activated_potassium_current__pona = 0.84999999999999998 / (1.0 + pow((var_sodium_activated_potassium_current__kdKNa / var_chaste_interface__ionic_concentrations__Nai), var_sodium_activated_potassium_current__nKNa)); // dimensionless
        const double var_sodium_activated_potassium_current__pov = 0.80000000000000004 - 0.65000000000000002 / (1.0 + exp(8.3333333333333339 + 0.066666666666666666 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_sodium_background_current__g_Nab = 0.0040000000000000001; // milliS_per_microF
        const double var_sodium_background_current__i_Na_b = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_sodium_background_current__g_Nab; // microA_per_microF
        const double var_sodium_potassium_pump__I_NaK = 2.25; // microA_per_microF
        const double var_sodium_potassium_pump__K_mKo = 1.5; // millimolar
        const double var_sodium_potassium_pump__K_mNai = 10.0; // millimolar
        const double var_sodium_potassium_pump__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * mParameters[3]); // dimensionless
        const double var_sodium_potassium_pump__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + 0.036499999999999998 * var_sodium_potassium_pump__sigma * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // dimensionless
        const double var_sodium_potassium_pump__i_NaK = mParameters[2] * var_sodium_potassium_pump__I_NaK * var_sodium_potassium_pump__f_NaK / ((1.0 + pow(var_sodium_potassium_pump__K_mNai, 2) / pow(var_chaste_interface__ionic_concentrations__Nai, 2)) * (mParameters[2] + var_sodium_potassium_pump__K_mKo)); // microA_per_microF
        const double var_time_independent_potassium_current__E_K = var_membrane__R * var_membrane__T * log(mParameters[2] / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_ATP_sensitive_potassium_current__i_K_ATP = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_ATP_sensitive_potassium_current__GKbaraATP; // microA_per_microF
        const double var_plateau_potassium_current__i_Kp = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_plateau_potassium_current__Kp * var_plateau_potassium_current__g_Kp; // microA_per_microF
        const double var_sodium_activated_potassium_current__i_K_Na = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_sodium_activated_potassium_current__g_K_Na * var_sodium_activated_potassium_current__pona * var_sodium_activated_potassium_current__pov; // microA_per_microF
        const double var_time_independent_potassium_current__g_K1 = 0.43033148291193518 * sqrt(mParameters[2]) * mParameters[7]; // milliS_per_cm2
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K)); // per_second
        const double var_time_independent_potassium_current_K1_gate__beta_K1 = 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V)); // per_second
        const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_microF
        const double var_transient_outward_current__g_to = 1.1000000000000001; // milliS_per_microF
        const double var_transient_outward_current__rvdv = exp(0.01 * var_chaste_interface__membrane__V); // dimensionless
        const double var_transient_outward_current__i_to = pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_transient_outward_current__g_to * mParameters[11] * var_transient_outward_current__rvdv * var_chaste_interface__transient_outward_current_ydv_gate__ydv; // microA_per_microF
        const double var_membrane__V_orig_deriv = -(var_ATP_sensitive_potassium_current__i_K_ATP + var_L_type_Ca_channel__i_Ca_L + var_Na_Ca_exchanger__i_NaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_fast_sodium_current__i_Na + var_membrane__I_st + var_non_specific_calcium_activated_current__i_ns_Ca + var_plateau_potassium_current__i_Kp + var_rapid_delayed_rectifier_potassium_current__i_Kr + var_sarcolemmal_calcium_pump__i_p_Ca + var_slow_delayed_rectifier_potassium_current__i_Ks + var_sodium_activated_potassium_current__i_K_Na + var_sodium_background_current__i_Na_b + var_sodium_potassium_pump__i_NaK + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) / mParameters[5]; // millivolt / second
        d_dt_chaste_interface_var_membrane__V = 0.001 * var_membrane__V_orig_deriv; // millivolt / millisecond

        return d_dt_chaste_interface_var_membrane__V;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative0(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            double var_chaste_interface__calcium_dynamics__Cai = rY[1];
            // Units: millimolar; Initial value: 0.000104
            double var_chaste_interface__Na_channel_states__P_O_Na = rY[2];
            // Units: dimensionless; Initial value: 3.756e-13
            double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[11];
            // Units: dimensionless; Initial value: 3.289e-06
            double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[12];
            // Units: dimensionless; Initial value: 0.99975
            double var_chaste_interface__T_type_Ca_channel_b_gate__b = rY[13];
            // Units: dimensionless; Initial value: 0.000983
            double var_chaste_interface__T_type_Ca_channel_g_gate__g = rY[14];
            // Units: dimensionless; Initial value: 0.9942
            double var_chaste_interface__Kr_channel_states__P_O = rY[15];
            // Units: dimensionless; Initial value: 1.104e-10
            double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = rY[20];
            // Units: dimensionless; Initial value: 0.00447
            double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = rY[21];
            // Units: dimensionless; Initial value: 0.00447
            double var_chaste_interface__transient_outward_current_zdv_gate__zdv = rY[22];
            // Units: dimensionless; Initial value: 0.01167
            double var_chaste_interface__transient_outward_current_ydv_gate__ydv = rY[23];
            // Units: dimensionless; Initial value: 0.99998
            double var_chaste_interface__ionic_concentrations__Nai = rY[33];
            // Units: millimolar; Initial value: 10.532
            double var_chaste_interface__ionic_concentrations__Ki = rY[34];
            // Units: millimolar; Initial value: 140.557
            

            const double var_x0 = exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V);
            const double var_x1 = 1.0 + var_x0;
            const double var_x2 = 1 / var_x1;
            const double var_x3 = 0.0055199999999999997 * var_x2;
            const double var_x4 = pow(mParameters[2], 0.23999999999999999);
            const double var_x5 = 1.921898339896919e-8 * var_x4;
            const double var_x6 = var_chaste_interface__Na_channel_states__P_O_Na * mParameters[6];
            const double var_x7 = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2);
            const double var_x8 = var_x7 * var_chaste_interface__T_type_Ca_channel_g_gate__g;
            const double var_x9 = 0.050000000000000003 * var_x8;
            const double var_x10 = pow(mParameters[2], 0.58999999999999997) * mParameters[8];
            const double var_x11 = var_x10 * var_chaste_interface__Kr_channel_states__P_O;
            const double var_x12 = 1 / var_chaste_interface__ionic_concentrations__Ki;
            const double var_x13 = log(var_x12 * mParameters[2]);
            const double var_x14 = -26.712338705498265 * var_x13 + var_chaste_interface__membrane__V;
            const double var_x15 = 1 / var_chaste_interface__calcium_dynamics__Cai;
            const double var_x16 = pow(var_x15, 1.3999999999999999);
            const double var_x17 = 1.0 + 6.4818210260626455e-7 * var_x16;
            const double var_x18 = 1 / var_x17;
            const double var_x19 = (0.433 + 0.25979999999999998 * var_x18) * mParameters[9];
            const double var_x20 = var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2;
            const double var_x21 = var_x19 * var_x20;
            const double var_x22 = 0.0003485581177541574 * mParameters[4];
            const double var_x23 = exp(9.9999999999999995e-8);
            const double var_x24 = 1 / (-1.0 + var_x23);
            const double var_x25 = -0.75 * mParameters[2];
            const double var_x26 = 0.75 * var_chaste_interface__ionic_concentrations__Ki;
            const double var_x27 = var_x24 * (var_x25 + var_x23 * var_x26);
            const double var_x28 = exp(-9.9999999999999995e-8);
            const double var_x29 = 1 / (-1.0 + var_x28);
            const double var_x30 = var_x29 * (var_x25 + var_x26 * var_x28);
            const double var_x31 = fabs(var_chaste_interface__membrane__V);
            const double var_x32 = var_x31 < 2.6712338705498262e-6;
            const double var_x33 = 0.037435883507802616 * var_chaste_interface__membrane__V;
            const double var_x34 = exp(var_x33);
            const double var_x35 = var_x25 + var_x26 * var_x34;
            const double var_x36 = -1.0 + var_x34;
            const double var_x37 = mParameters[4] / var_x36;
            const double var_x38 = 0.00069711623550831479 * var_x35 * var_x37;
            const double var_x39 = var_x34 * var_chaste_interface__membrane__V;
            const double var_x40 = var_x37 * var_x39;
            const double var_x41 = var_x39 * mParameters[4] / pow(var_x36, 2);
            const double var_x42 = 1 / (1.0 + 1666.6666666666667 * var_chaste_interface__calcium_dynamics__Cai);
            const double var_x43 = var_x42;
            const double var_x44 = var_x43 * var_chaste_interface__L_type_Ca_channel_f_gate__f;
            const double var_x45 = var_x44 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
            const double var_x46 = 0.0012190504118344883 * mParameters[4];
            const double var_x47 = -0.75 * mParameters[3];
            const double var_x48 = 0.75 * var_chaste_interface__ionic_concentrations__Nai;
            const double var_x49 = var_x24 * (var_x47 + var_x23 * var_x48);
            const double var_x50 = var_x29 * (var_x47 + var_x28 * var_x48);
            const double var_x51 = var_x47 + var_x34 * var_x48;
            const double var_x52 = 0.0024381008236689767 * var_x37 * var_x51;
            const double var_x53 = 3.9009613178703626 * mParameters[4];
            const double var_x54 = -0.34100000000000003 * mParameters[1];
            const double var_x55 = var_chaste_interface__calcium_dynamics__Cai;
            const double var_x56 = var_x24 * (var_x54 + var_x23 * var_x55);
            const double var_x57 = var_x29 * (var_x54 + var_x28 * var_x55);
            const double var_x58 = var_x53 * var_x56 + var_x53 * var_x57;
            const double var_x59 = var_x31 < 1.3356169352749131e-6;
            const double var_x60 = exp(0.074871767015605231 * var_chaste_interface__membrane__V);
            const double var_x61 = var_x54 + var_x55 * var_x60;
            const double var_x62 = -1.0 + var_x60;
            const double var_x63 = mParameters[4] / var_x62;
            const double var_x64 = 7.8019226357407252 * var_x63;
            const double var_x65 = var_x61 * var_x64;
            const double var_x66 = var_x60 * var_chaste_interface__membrane__V;
            const double var_x67 = 0.58414373385695628 * var_x66;
            const double var_x68 = var_x63 * var_x67 * var_chaste_interface__calcium_dynamics__Cai;
            const double var_x69 = var_x61 * var_x67 * mParameters[4] / pow(var_x62, 2);
            const double var_x70 = var_x45 * ((var_x59) ? (var_x58) : (var_x65 + var_x68 - var_x69));
            const double var_x71 = exp(0.01 * var_chaste_interface__membrane__V);
            const double var_x72 = var_x71 * pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * mParameters[11];
            const double var_x73 = var_x72 * var_chaste_interface__transient_outward_current_ydv_gate__ydv;
            const double var_x74 = 1.1000000000000001 * var_x73;
            const double var_x75 = exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 6.3708927812613361 * var_x13);
            const double var_x76 = 1.0 + var_x75;
            const double var_x77 = 1 / var_x76;
            const double var_x78 = exp(-2.4444678999999998 + 13.738155796237757 * var_x13 - 0.51429999999999998 * var_chaste_interface__membrane__V);
            const double var_x79 = 1.0 + var_x78;
            const double var_x80 = 1 / var_x79;
            const double var_x81 = exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 2.1455350448256207 * var_x13);
            const double var_x82 = exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 1.6494869150645177 * var_x13);
            const double var_x83 = var_x82 + 0.49124000000000001 * var_x81;
            const double var_x84 = var_x80 * var_x83;
            const double var_x85 = 1 / (1000.0 * var_x84 + 1020.0 * var_x77);
            const double var_x86 = sqrt(mParameters[2]);
            const double var_x87 = var_x77 * var_x86 * mParameters[7];
            const double var_x88 = var_x85 * var_x87;
            const double var_x89 = 438.93811257017387 * var_x88;
            const double var_x90 = pow(mParameters[3], 3);
            const double var_x91 = var_x90 * var_chaste_interface__calcium_dynamics__Cai;
            const double var_x92 = pow(var_chaste_interface__ionic_concentrations__Nai, 3);
            const double var_x93 = var_x34 * mParameters[1];
            const double var_x94 = var_x92 * var_x93;
            const double var_x95 = var_x94 - var_x91;
            const double var_x96 = exp(-0.031820500981632228 * var_chaste_interface__membrane__V);
            const double var_x97 = 0.031820500981632228 * var_x96;
            const double var_x98 = 1.0 + 0.0001 * var_x96 * (var_x91 + var_x94);
            const double var_x99 = mParameters[10] / var_x98;
            const double var_x100 = var_x95 * var_x97 * var_x99;
            const double var_x101 = var_x95 * mParameters[10] / pow(var_x98, 2);
            const double var_x102 = var_x101 * var_x96 * (var_x97 * (0.0001 * var_x91 + 0.0001 * var_x94) - 3.7435883507802621e-6 * var_x94 * var_x96);
            const double var_x103 = 1 / (1.5 + mParameters[2]);
            const double var_x104 = exp(-0.003743588350780262 * var_chaste_interface__membrane__V);
            const double var_x105 = exp(0.01485884101040119 * mParameters[3]);
            const double var_x106 = exp(-var_x33);
            const double var_x107 = 1.0 + 0.1245 * var_x104 + 0.036499999999999998 * var_x106 * (-0.14285714285714285 + 0.14285714285714285 * var_x105);
            const double var_x108 = pow(var_chaste_interface__ionic_concentrations__Nai, 2);
            const double var_x109 = 1 / var_x108;
            const double var_x110 = 2.25 / (1.0 + 100.0 * var_x109);
            const double var_x111 = var_x96 * var_x99;
            const double var_x112 = var_x111 * var_x94;
            const double var_x113 = 0.037435883507802616 * var_x112;
            const double var_x114 = var_x75 / pow(var_x76, 2);
            const double var_x115 = 1000.0 * var_x80;
            const double var_x116 = var_x78 * var_x83 / pow(var_x79, 2);
            const double var_x117 = 0.0004218936106979757 * var_x14 * var_x87 / pow((var_x77 + 0.98039215686274506 * var_x84), 2);
            const double var_x118 = var_x14 * var_x85 * var_x86 * mParameters[7];
            const double var_x119 = 1 / mParameters[5];
            const double var_x120 = 0.001 * var_x119;
            
            partialF = -var_x120 * (0.0070159999999999997 + var_x102 + var_x11 + var_x113 + var_x21 + var_x3 + var_x5 + var_x6 + var_x70 + var_x74 + var_x89 + var_x9 - var_x100 + var_x117 * (243.26999999999998 * var_x114 - 514.29999999999995 * var_x116 - var_x115 * (0.061749999999999999 * var_x82 + 0.039456396800000001 * var_x81)) + var_x45 * ((var_x32) ? (var_x22 * var_x27 + var_x22 * var_x30) : (var_x38 + 1.9572871637915374e-5 * var_x40 * var_chaste_interface__ionic_concentrations__Ki - 2.6097162183887167e-5 * var_x35 * var_x41)) + var_x45 * ((var_x32) ? (var_x46 * var_x49 + var_x46 * var_x50) : (var_x52 + 6.8454343811362063e-5 * var_x40 * var_chaste_interface__ionic_concentrations__Nai - 9.1272458415149417e-5 * var_x41 * var_x51)) + 0.011000000000000001 * var_x14 * var_x73 - 104.68673984798647 * var_x114 * var_x118 + 0.00092307692307692295 * var_x0 * var_x14 / pow(var_x1, 2) + var_x103 * var_x110 * (0.00046607674967214262 * var_x104 + 0.037435883507802616 * var_x106 * (-0.0052142857142857138 + 0.0052142857142857138 * var_x105)) * mParameters[2] / pow(var_x107, 2));
        }
        else
        {
            const double y_save = rY[0];
            rY[0] += delta;
            const double temp = EvaluateYDerivative0(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[0])/delta;
            rY[0] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative1(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000104
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[11];
        // Units: dimensionless; Initial value: 3.289e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[12];
        // Units: dimensionless; Initial value: 0.99975
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = rY[13];
        // Units: dimensionless; Initial value: 0.000983
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = rY[14];
        // Units: dimensionless; Initial value: 0.9942
        double var_chaste_interface__calcium_dynamics__Ca_JSR = rY[24];
        // Units: millimolar; Initial value: 1.516
        double var_chaste_interface__calcium_dynamics__Ca_NSR = rY[25];
        // Units: millimolar; Initial value: 1.518
        double var_chaste_interface__calcium_dynamics__APtrack2 = rY[27];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__Cainfluxtrack = rY[29];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack2 = rY[31];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ionic_concentrations__Nai = rY[33];
        // Units: millimolar; Initial value: 10.532
        

        // Mathematics
        const double var_L_type_Ca_channel_f_Ca_gate__Km_Ca = 0.00059999999999999995; // millimolar
        const double var_Na_Ca_exchanger__c2 = 0.0001; // millimolar
        const double var_Na_Ca_exchanger__gamma = 0.14999999999999999; // dimensionless
        const double var_T_type_Ca_channel__g_CaT = 0.050000000000000003; // milliS_per_microF
        const double var_calcium_background_current__g_Cab = 0.003016; // milliS_per_microF
        const double var_calcium_dynamics__CMDN_max = 0.050000000000000003; // millimolar
        const double var_calcium_dynamics__Ca_NSR_max = 15.0; // millimolar
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + var_chaste_interface__calcium_dynamics__Cai / var_L_type_Ca_channel_f_Ca_gate__Km_Ca); // dimensionless
        const double var_calcium_dynamics__G_rel_overload = 4000.0; // per_second
        const double var_calcium_dynamics__I_up = 8.75; // millimolar_per_second
        const double var_calcium_dynamics__K_leak = var_calcium_dynamics__I_up / var_calcium_dynamics__Ca_NSR_max; // per_second
        const double var_calcium_dynamics__K_mCMDN = 0.0023800000000000002; // millimolar
        const double var_calcium_dynamics__K_mTn = 0.00050000000000000001; // millimolar
        const double var_calcium_dynamics__K_mrel = 0.00080000000000000004; // millimolar
        const double var_calcium_dynamics__K_mup = 0.00092000000000000003; // millimolar
        const double var_calcium_dynamics__Tn_max = 0.070000000000000007; // millimolar
        const double var_calcium_dynamics__delta_Ca_ith = 0.00018000000000000001; // millimolar
        const double var_calcium_dynamics__G_rel = ((var_chaste_interface__calcium_dynamics__Cainfluxtrack > var_calcium_dynamics__delta_Ca_ith) ? ((1.0 - var_chaste_interface__calcium_dynamics__APtrack2) * (-var_calcium_dynamics__delta_Ca_ith + var_chaste_interface__calcium_dynamics__Cainfluxtrack) * var_chaste_interface__calcium_dynamics__APtrack2 * mParameters[0] / (-var_calcium_dynamics__delta_Ca_ith + var_chaste_interface__calcium_dynamics__Cainfluxtrack + var_calcium_dynamics__K_mrel)) : ((var_chaste_interface__calcium_dynamics__OVRLDtrack2 > 0) ? ((1.0 - var_chaste_interface__calcium_dynamics__OVRLDtrack2) * var_calcium_dynamics__G_rel_overload * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (0))); // per_second
        const double var_calcium_dynamics__i_leak = var_chaste_interface__calcium_dynamics__Ca_NSR * var_calcium_dynamics__K_leak; // millimolar_per_second
        const double var_calcium_dynamics__i_rel = (-var_chaste_interface__calcium_dynamics__Cai + var_chaste_interface__calcium_dynamics__Ca_JSR) * var_calcium_dynamics__G_rel; // millimolar_per_second
        const double var_calcium_dynamics__i_up = var_chaste_interface__calcium_dynamics__Cai * var_calcium_dynamics__I_up / (var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__K_mup); // millimolar_per_second
        const double var_ionic_concentrations__A_cap = 1.434e-7; // mm2
        const double var_ionic_concentrations__preplength = 0.001; // mm
        const double var_ionic_concentrations__radius = 0.00011; // mm
        const double var_ionic_concentrations__volume = M_PI * pow(var_ionic_concentrations__radius, 2) * var_ionic_concentrations__preplength; // micro_litre
        const double var_ionic_concentrations__V_myo = 0.68000000000000005 * var_ionic_concentrations__volume; // micro_litre
        const double var_calcium_dynamics__V_JSR = 0.0070588235294117632 * var_ionic_concentrations__V_myo; // micro_litre
        const double var_calcium_dynamics__V_NSR = 0.081176470588235281 * var_ionic_concentrations__V_myo; // micro_litre
        const double var_membrane__F = 96485.0; // coulomb_per_mole
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_calcium_background_current__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(mParameters[1] / var_chaste_interface__calcium_dynamics__Cai) / var_membrane__F; // millivolt
        const double var_L_type_Ca_channel__I_CaCa = ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (1.042038e-5 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 1.042038e-5 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 1.042038e-5 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (7.8019226357407252 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(0.074871767015605231 * var_chaste_interface__membrane__V)) * mParameters[4] * var_chaste_interface__membrane__V / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaCa = var_L_type_Ca_channel__I_CaCa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_Na_Ca_exchanger__i_NaCa = (-pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * mParameters[10] * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) / (1.0 + (pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_Na_Ca_exchanger__c2 * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // microA_per_microF
        const double var_T_type_Ca_channel__i_Ca_T = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2) * (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_T_type_Ca_channel__g_CaT * var_chaste_interface__T_type_Ca_channel_g_gate__g; // microA_per_microF
        const double var_calcium_background_current__i_Ca_b = (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_calcium_background_current__g_Cab; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__I_pCa = 1.1499999999999999; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__K_mpCa = 0.00050000000000000001; // millimolar
        const double var_sarcolemmal_calcium_pump__i_p_Ca = var_chaste_interface__calcium_dynamics__Cai * var_sarcolemmal_calcium_pump__I_pCa / (var_chaste_interface__calcium_dynamics__Cai + var_sarcolemmal_calcium_pump__K_mpCa); // microA_per_microF
        const double var_calcium_dynamics__Cai_orig_deriv = ((-var_calcium_dynamics__i_up + var_calcium_dynamics__i_leak) * var_calcium_dynamics__V_NSR / var_ionic_concentrations__V_myo + var_calcium_dynamics__V_JSR * var_calcium_dynamics__i_rel / var_ionic_concentrations__V_myo - 0.5 * (-2.0 * var_Na_Ca_exchanger__i_NaCa + var_L_type_Ca_channel__i_CaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_sarcolemmal_calcium_pump__i_p_Ca) * var_ionic_concentrations__A_cap / (var_ionic_concentrations__V_myo * var_membrane__F)) / (1.0 + var_calcium_dynamics__CMDN_max * var_calcium_dynamics__K_mCMDN / pow((var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__K_mCMDN), 2) + var_calcium_dynamics__K_mTn * var_calcium_dynamics__Tn_max / pow((var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__K_mTn), 2)); // millimolar / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Cai = 0.001 * var_calcium_dynamics__Cai_orig_deriv; // millimolar / millisecond

        return d_dt_chaste_interface_var_calcium_dynamics__Cai;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative1(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            double var_chaste_interface__calcium_dynamics__Cai = rY[1];
            // Units: millimolar; Initial value: 0.000104
            double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[11];
            // Units: dimensionless; Initial value: 3.289e-06
            double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[12];
            // Units: dimensionless; Initial value: 0.99975
            double var_chaste_interface__T_type_Ca_channel_b_gate__b = rY[13];
            // Units: dimensionless; Initial value: 0.000983
            double var_chaste_interface__T_type_Ca_channel_g_gate__g = rY[14];
            // Units: dimensionless; Initial value: 0.9942
            double var_chaste_interface__calcium_dynamics__Ca_JSR = rY[24];
            // Units: millimolar; Initial value: 1.516
            double var_chaste_interface__calcium_dynamics__Ca_NSR = rY[25];
            // Units: millimolar; Initial value: 1.518
            double var_chaste_interface__calcium_dynamics__APtrack2 = rY[27];
            // Units: dimensionless; Initial value: 0.0
            double var_chaste_interface__calcium_dynamics__Cainfluxtrack = rY[29];
            // Units: dimensionless; Initial value: 0.0
            double var_chaste_interface__calcium_dynamics__OVRLDtrack2 = rY[31];
            // Units: dimensionless; Initial value: 0.0
            double var_chaste_interface__ionic_concentrations__Nai = rY[33];
            // Units: millimolar; Initial value: 10.532
            

            const double var_x7 = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2);
            const double var_x8 = var_x7 * var_chaste_interface__T_type_Ca_channel_g_gate__g;
            const double var_x9 = 0.050000000000000003 * var_x8;
            const double var_x15 = 1 / var_chaste_interface__calcium_dynamics__Cai;
            const double var_x23 = exp(9.9999999999999995e-8);
            const double var_x24 = 1 / (-1.0 + var_x23);
            const double var_x28 = exp(-9.9999999999999995e-8);
            const double var_x29 = 1 / (-1.0 + var_x28);
            const double var_x31 = fabs(var_chaste_interface__membrane__V);
            const double var_x33 = 0.037435883507802616 * var_chaste_interface__membrane__V;
            const double var_x34 = exp(var_x33);
            const double var_x42 = 1 / (1.0 + 1666.6666666666667 * var_chaste_interface__calcium_dynamics__Cai);
            const double var_x43 = var_x42;
            const double var_x44 = var_x43 * var_chaste_interface__L_type_Ca_channel_f_gate__f;
            const double var_x45 = var_x44 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
            const double var_x54 = -0.34100000000000003 * mParameters[1];
            const double var_x55 = var_chaste_interface__calcium_dynamics__Cai;
            const double var_x56 = var_x24 * (var_x54 + var_x23 * var_x55);
            const double var_x57 = var_x29 * (var_x54 + var_x28 * var_x55);
            const double var_x59 = var_x31 < 1.3356169352749131e-6;
            const double var_x60 = exp(0.074871767015605231 * var_chaste_interface__membrane__V);
            const double var_x61 = var_x54 + var_x55 * var_x60;
            const double var_x62 = -1.0 + var_x60;
            const double var_x63 = mParameters[4] / var_x62;
            const double var_x64 = 7.8019226357407252 * var_x63;
            const double var_x65 = var_x61 * var_x64;
            const double var_x66 = var_x60 * var_chaste_interface__membrane__V;
            const double var_x90 = pow(mParameters[3], 3);
            const double var_x91 = var_x90 * var_chaste_interface__calcium_dynamics__Cai;
            const double var_x92 = pow(var_chaste_interface__ionic_concentrations__Nai, 3);
            const double var_x93 = var_x34 * mParameters[1];
            const double var_x94 = var_x92 * var_x93;
            const double var_x95 = var_x94 - var_x91;
            const double var_x96 = exp(-0.031820500981632228 * var_chaste_interface__membrane__V);
            const double var_x98 = 1.0 + 0.0001 * var_x96 * (var_x91 + var_x94);
            const double var_x99 = mParameters[10] / var_x98;
            const double var_x101 = var_x95 * mParameters[10] / pow(var_x98, 2);
            const double var_x111 = var_x96 * var_x99;
            const double var_x121 = var_x111 * var_x90;
            const double var_x130 = var_chaste_interface__L_type_Ca_channel_d_gate__d / pow((0.00059999999999999995 + var_chaste_interface__calcium_dynamics__Cai), 2);
            const double var_x131 = 0.00059999999999999995 * var_x130;
            const double var_x138 = var_x131 * var_chaste_interface__L_type_Ca_channel_f_gate__f;
            const double var_x139 = var_x101 * pow(var_x96, 2);
            const double var_x140 = var_x139 * var_x90;
            const double var_x145 = 1.042038e-5 * mParameters[4];
            const double var_x146 = var_x23 * var_x24;
            const double var_x147 = var_x28 * var_x29;
            const double var_x148 = var_x145 * var_x147;
            const double var_x149 = -var_x148 + (0.5 + 374358.83507802623 * var_chaste_interface__membrane__V) * (var_x148 + var_x145 * var_x146);
            const double var_x150 = var_x64 * var_x66;
            const double var_x151 = var_x145 * var_x57;
            const double var_x152 = 374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (var_x151 + var_x145 * var_x56);
            const double var_x153 = var_x152 - var_x151;
            const double var_x154 = var_x65 * var_chaste_interface__membrane__V;
            const double var_x155 = ((var_x59) ? (var_x153) : (var_x154));
            const double var_x156 = 0.00050000000000000001 + var_chaste_interface__calcium_dynamics__Cai;
            const double var_x157 = 1.1499999999999999 / var_x156;
            const double var_x158 = pow(var_x156, (-2));
            const double var_x159 = var_x157 + 0.040282206767891383 * var_x15 + 0.6678084676374566 * var_x15 * var_x8 - 1.1499999999999999 * var_x158 * var_chaste_interface__calcium_dynamics__Cai;
            const double var_x160 = var_x159 + var_x45 * ((var_x59) ? (var_x149) : (var_x150)) - var_x138 * var_x155;
            const double var_x164 = var_x155 * var_x44;
            const double var_x166 = log(var_x15 * mParameters[1]);
            const double var_x167 = -13.356169352749133 * var_x166 + var_chaste_interface__membrane__V;
            const double var_x187 = var_x111 * var_x95;
            const double var_x189 = 0.0023800000000000002 + var_chaste_interface__calcium_dynamics__Cai;
            const double var_x190 = 1.0 + 0.00011900000000000002 / pow(var_x189, 2) + 3.5000000000000004e-5 * var_x158;
            const double var_x191 = 1 / var_x190;
            const double var_x192 = 1 / M_PI;
            const double var_x195 = 0.00092000000000000003 + var_chaste_interface__calcium_dynamics__Cai;
            const double var_x196 = 1 / var_x195;
            const double var_x197 = 0.71029411764705874 * var_x196;
            const double var_x198 = 1.0 - var_chaste_interface__calcium_dynamics__APtrack2;
            const double var_x199 = 0.00062 + var_chaste_interface__calcium_dynamics__Cainfluxtrack;
            const double var_x200 = 1 / var_x199;
            const double var_x201 = -0.00018000000000000001 + var_chaste_interface__calcium_dynamics__Cainfluxtrack;
            const double var_x202 = var_x200 * var_x201 * mParameters[0];
            const double var_x203 = var_x198 * var_x202;
            const double var_x204 = var_chaste_interface__calcium_dynamics__Cainfluxtrack > 0.00018000000000000001;
            const double var_x205 = var_chaste_interface__calcium_dynamics__OVRLDtrack2 > 0;
            const double var_x206 = ((var_x204) ? (var_x203 * var_chaste_interface__calcium_dynamics__APtrack2) : ((var_x205) ? (4000.0 * (1.0 - var_chaste_interface__calcium_dynamics__OVRLDtrack2) * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (0)));
            const double var_x207 = 0.0070588235294117632 * var_x206;
            const double var_x208 = var_chaste_interface__calcium_dynamics__Cai / pow(var_x195, 2);
            const double var_x209 = 0.090316078310111333 * var_x192;
            const double var_x210 = 0.001 * var_x191;
            const double var_x211 = -var_chaste_interface__calcium_dynamics__Cai + var_chaste_interface__calcium_dynamics__Ca_JSR;
            const double var_x212 = 0.040282206767891383 * var_x166;
            const double var_x213 = var_x157 * var_chaste_interface__calcium_dynamics__Cai;
            const double var_x214 = var_x167 * var_x9;
            const double var_x215 = var_x213 + var_x214 - var_x212;
            
            partialF = var_x210 * (-var_x197 - var_x207 + 0.71029411764705874 * var_x208 - var_x209 * (var_x160 + 2.0 * var_x121 + 0.00020000000000000001 * var_x140)) + 0.001 * (0.00023800000000000004 / pow(var_x189, 3) + 7.0000000000000007e-5 / pow(var_x156, 3)) * (0.047352941176470584 * var_chaste_interface__calcium_dynamics__Ca_NSR + var_x207 * var_x211 - var_x197 * var_chaste_interface__calcium_dynamics__Cai - var_x209 * (var_x215 + 0.003016 * var_chaste_interface__membrane__V - 2.0 * var_x187 + var_x164 * var_chaste_interface__L_type_Ca_channel_d_gate__d)) / pow(var_x190, 2);
        }
        else
        {
            const double y_save = rY[1];
            rY[1] += delta;
            const double temp = EvaluateYDerivative1(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[1])/delta;
            rY[1] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative2(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__Na_channel_states__P_O_Na = rY[2];
        // Units: dimensionless; Initial value: 3.756e-13
        double var_chaste_interface__Na_channel_states__P_C1 = rY[3];
        // Units: dimensionless; Initial value: 4.744e-10
        double var_chaste_interface__Na_channel_states__P_IF = rY[6];
        // Units: dimensionless; Initial value: 8.147e-11
        

        // Mathematics
        const double var_Na_channel_states__alpha_13 = 3802.0 / (0.25 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V) + 0.1027 * exp(-0.083333333333333329 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_2 = 9178.0 * exp(0.033692722371967652 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__alpha_3 = 0.00037932999999999999 * exp(-0.12987012987012986 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_13 = 220.0 * exp(0.49261083743842365 - 0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_3 = 8.4000000000000004 + 0.02 * var_chaste_interface__membrane__V; // per_second
        const double var_Na_channel_states__beta_2 = var_Na_channel_states__alpha_13 * var_Na_channel_states__alpha_2 * var_Na_channel_states__alpha_3 / (var_Na_channel_states__beta_13 * var_Na_channel_states__beta_3); // per_second
        const double var_Na_channel_states__P_O_Na_orig_deriv = (-var_Na_channel_states__alpha_2 - var_Na_channel_states__beta_13) * var_chaste_interface__Na_channel_states__P_O_Na + var_chaste_interface__Na_channel_states__P_C1 * var_Na_channel_states__alpha_13 + var_chaste_interface__Na_channel_states__P_IF * var_Na_channel_states__beta_2; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_O_Na = 0.001 * var_Na_channel_states__P_O_Na_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_Na_channel_states__P_O_Na;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative2(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x224 = -0.04926108374384236 * var_chaste_interface__membrane__V;
            const double var_x225 = exp(0.49261083743842365 + var_x224);
            const double var_x226 = exp(0.033692722371967652 * var_chaste_interface__membrane__V);
            const double var_x240 = 9.1780000000000008 * var_x226;
            const double var_x241 = 0.22 * var_x225;
            
            partialF = -var_x240 - var_x241;
        }
        else
        {
            const double y_save = rY[2];
            rY[2] += delta;
            const double temp = EvaluateYDerivative2(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[2])/delta;
            rY[2] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative3(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__Na_channel_states__P_O_Na = rY[2];
        // Units: dimensionless; Initial value: 3.756e-13
        double var_chaste_interface__Na_channel_states__P_C1 = rY[3];
        // Units: dimensionless; Initial value: 4.744e-10
        double var_chaste_interface__Na_channel_states__P_C2 = rY[4];
        // Units: dimensionless; Initial value: 9.776e-08
        double var_chaste_interface__Na_channel_states__P_IF = rY[6];
        // Units: dimensionless; Initial value: 8.147e-11
        

        // Mathematics
        const double var_Na_channel_states__alpha_12 = 3802.0 / (0.1027 * exp(-0.066666666666666666 * var_chaste_interface__membrane__V) + 0.23000000000000001 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_13 = 3802.0 / (0.25 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V) + 0.1027 * exp(-0.083333333333333329 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_3 = 0.00037932999999999999 * exp(-0.12987012987012986 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_12 = 200.0 * exp(0.24630541871921183 - 0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_13 = 220.0 * exp(0.49261083743842365 - 0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_3 = 8.4000000000000004 + 0.02 * var_chaste_interface__membrane__V; // per_second
        const double var_Na_channel_states__P_C1_orig_deriv = (-var_Na_channel_states__alpha_13 - var_Na_channel_states__beta_12 - var_Na_channel_states__beta_3) * var_chaste_interface__Na_channel_states__P_C1 + var_chaste_interface__Na_channel_states__P_C2 * var_Na_channel_states__alpha_12 + var_chaste_interface__Na_channel_states__P_IF * var_Na_channel_states__alpha_3 + var_chaste_interface__Na_channel_states__P_O_Na * var_Na_channel_states__beta_13; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_C1 = 0.001 * var_Na_channel_states__P_C1_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_Na_channel_states__P_C1;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative3(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x224 = -0.04926108374384236 * var_chaste_interface__membrane__V;
            const double var_x228 = exp(-0.083333333333333329 * var_chaste_interface__membrane__V);
            const double var_x229 = exp(-0.0066666666666666671 * var_chaste_interface__membrane__V);
            const double var_x233 = 1 / (0.25 * var_x229 + 0.1027 * var_x228);
            const double var_x242 = 3.802 * var_x233;
            const double var_x244 = exp(0.24630541871921183 + var_x224);
            const double var_x249 = 0.20000000000000001 * var_x244;
            const double var_x250 = -var_x249;
            const double var_x251 = 2.0000000000000002e-5 * var_chaste_interface__membrane__V;
            const double var_x252 = -0.0084000000000000012 - var_x251;
            
            partialF = var_x250 + var_x252 - var_x242;
        }
        else
        {
            const double y_save = rY[3];
            rY[3] += delta;
            const double temp = EvaluateYDerivative3(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[3])/delta;
            rY[3] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative4(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__Na_channel_states__P_C1 = rY[3];
        // Units: dimensionless; Initial value: 4.744e-10
        double var_chaste_interface__Na_channel_states__P_C2 = rY[4];
        // Units: dimensionless; Initial value: 9.776e-08
        double var_chaste_interface__Na_channel_states__P_C3 = rY[5];
        // Units: dimensionless; Initial value: 7.583e-06
        double var_chaste_interface__Na_channel_states__P_IC2 = rY[8];
        // Units: dimensionless; Initial value: 1.679e-08
        

        // Mathematics
        const double var_Na_channel_states__alpha_11 = 3802.0 / (0.20000000000000001 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V) + 0.1027 * exp(-0.058823529411764705 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_12 = 3802.0 / (0.1027 * exp(-0.066666666666666666 * var_chaste_interface__membrane__V) + 0.23000000000000001 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_3 = 0.00037932999999999999 * exp(-0.12987012987012986 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_11 = 191.69999999999999 * exp(-0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_12 = 200.0 * exp(0.24630541871921183 - 0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_3 = 8.4000000000000004 + 0.02 * var_chaste_interface__membrane__V; // per_second
        const double var_Na_channel_states__P_C2_orig_deriv = (-var_Na_channel_states__alpha_12 - var_Na_channel_states__beta_11 - var_Na_channel_states__beta_3) * var_chaste_interface__Na_channel_states__P_C2 + var_chaste_interface__Na_channel_states__P_C1 * var_Na_channel_states__beta_12 + var_chaste_interface__Na_channel_states__P_C3 * var_Na_channel_states__alpha_11 + var_chaste_interface__Na_channel_states__P_IC2 * var_Na_channel_states__alpha_3; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_C2 = 0.001 * var_Na_channel_states__P_C2_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_Na_channel_states__P_C2;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative4(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x224 = -0.04926108374384236 * var_chaste_interface__membrane__V;
            const double var_x229 = exp(-0.0066666666666666671 * var_chaste_interface__membrane__V);
            const double var_x247 = exp(-0.066666666666666666 * var_chaste_interface__membrane__V);
            const double var_x251 = 2.0000000000000002e-5 * var_chaste_interface__membrane__V;
            const double var_x252 = -0.0084000000000000012 - var_x251;
            const double var_x253 = 3.802 / (0.1027 * var_x247 + 0.23000000000000001 * var_x229);
            const double var_x255 = exp(var_x224);
            const double var_x260 = 0.19169999999999998 * var_x255;
            const double var_x261 = -var_x253 - var_x260;
            
            partialF = var_x252 + var_x261;
        }
        else
        {
            const double y_save = rY[4];
            rY[4] += delta;
            const double temp = EvaluateYDerivative4(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[4])/delta;
            rY[4] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative5(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__Na_channel_states__P_C2 = rY[4];
        // Units: dimensionless; Initial value: 9.776e-08
        double var_chaste_interface__Na_channel_states__P_C3 = rY[5];
        // Units: dimensionless; Initial value: 7.583e-06
        double var_chaste_interface__Na_channel_states__P_IC3 = rY[7];
        // Units: dimensionless; Initial value: 1.302e-06
        

        // Mathematics
        const double var_Na_channel_states__alpha_11 = 3802.0 / (0.20000000000000001 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V) + 0.1027 * exp(-0.058823529411764705 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_3 = 0.00037932999999999999 * exp(-0.12987012987012986 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_11 = 191.69999999999999 * exp(-0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_3 = 8.4000000000000004 + 0.02 * var_chaste_interface__membrane__V; // per_second
        const double var_Na_channel_states__P_C3_orig_deriv = (-var_Na_channel_states__alpha_11 - var_Na_channel_states__beta_3) * var_chaste_interface__Na_channel_states__P_C3 + var_chaste_interface__Na_channel_states__P_C2 * var_Na_channel_states__beta_11 + var_chaste_interface__Na_channel_states__P_IC3 * var_Na_channel_states__alpha_3; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_C3 = 0.001 * var_Na_channel_states__P_C3_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_Na_channel_states__P_C3;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative5(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x229 = exp(-0.0066666666666666671 * var_chaste_interface__membrane__V);
            const double var_x251 = 2.0000000000000002e-5 * var_chaste_interface__membrane__V;
            const double var_x252 = -0.0084000000000000012 - var_x251;
            const double var_x258 = exp(-0.058823529411764705 * var_chaste_interface__membrane__V);
            const double var_x262 = 3.802 / (0.20000000000000001 * var_x229 + 0.1027 * var_x258);
            const double var_x264 = -var_x262;
            
            partialF = var_x252 + var_x264;
        }
        else
        {
            const double y_save = rY[5];
            rY[5] += delta;
            const double temp = EvaluateYDerivative5(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[5])/delta;
            rY[5] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative6(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__Na_channel_states__P_O_Na = rY[2];
        // Units: dimensionless; Initial value: 3.756e-13
        double var_chaste_interface__Na_channel_states__P_C1 = rY[3];
        // Units: dimensionless; Initial value: 4.744e-10
        double var_chaste_interface__Na_channel_states__P_IF = rY[6];
        // Units: dimensionless; Initial value: 8.147e-11
        double var_chaste_interface__Na_channel_states__P_IC2 = rY[8];
        // Units: dimensionless; Initial value: 1.679e-08
        double var_chaste_interface__Na_channel_states__P_IM1 = rY[9];
        // Units: dimensionless; Initial value: 9.736e-12
        

        // Mathematics
        const double var_Na_channel_states__alpha_12 = 3802.0 / (0.1027 * exp(-0.066666666666666666 * var_chaste_interface__membrane__V) + 0.23000000000000001 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_13 = 3802.0 / (0.25 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V) + 0.1027 * exp(-0.083333333333333329 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_2 = 9178.0 * exp(0.033692722371967652 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__alpha_3 = 0.00037932999999999999 * exp(-0.12987012987012986 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__alpha_4 = 0.01 * var_Na_channel_states__alpha_2; // per_second
        const double var_Na_channel_states__beta_12 = 200.0 * exp(0.24630541871921183 - 0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_13 = 220.0 * exp(0.49261083743842365 - 0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_3 = 8.4000000000000004 + 0.02 * var_chaste_interface__membrane__V; // per_second
        const double var_Na_channel_states__beta_2 = var_Na_channel_states__alpha_13 * var_Na_channel_states__alpha_2 * var_Na_channel_states__alpha_3 / (var_Na_channel_states__beta_13 * var_Na_channel_states__beta_3); // per_second
        const double var_Na_channel_states__beta_4 = var_Na_channel_states__alpha_3; // per_second
        const double var_Na_channel_states__P_IF_orig_deriv = (-var_Na_channel_states__alpha_3 - var_Na_channel_states__alpha_4 - var_Na_channel_states__beta_12 - var_Na_channel_states__beta_2) * var_chaste_interface__Na_channel_states__P_IF + var_chaste_interface__Na_channel_states__P_C1 * var_Na_channel_states__beta_3 + var_chaste_interface__Na_channel_states__P_IC2 * var_Na_channel_states__alpha_12 + var_chaste_interface__Na_channel_states__P_IM1 * var_Na_channel_states__beta_4 + var_chaste_interface__Na_channel_states__P_O_Na * var_Na_channel_states__alpha_2; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_IF = 0.001 * var_Na_channel_states__P_IF_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_Na_channel_states__P_IF;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative6(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x224 = -0.04926108374384236 * var_chaste_interface__membrane__V;
            const double var_x225 = exp(0.49261083743842365 + var_x224);
            const double var_x226 = exp(0.033692722371967652 * var_chaste_interface__membrane__V);
            const double var_x228 = exp(-0.083333333333333329 * var_chaste_interface__membrane__V);
            const double var_x229 = exp(-0.0066666666666666671 * var_chaste_interface__membrane__V);
            const double var_x232 = 1 / (8.4000000000000004 + 0.02 * var_chaste_interface__membrane__V);
            const double var_x233 = 1 / (0.25 * var_x229 + 0.1027 * var_x228);
            const double var_x234 = exp(-0.12987012987012986 * var_chaste_interface__membrane__V);
            const double var_x235 = 1 / var_x225;
            const double var_x236 = var_x226 * var_x233 * var_x234 * var_x235;
            const double var_x237 = var_x232 * var_x236;
            const double var_x243 = 0.060166489970363633 * var_x237;
            const double var_x244 = exp(0.24630541871921183 + var_x224);
            const double var_x249 = 0.20000000000000001 * var_x244;
            const double var_x250 = -var_x249;
            const double var_x254 = 3.7933e-7 * var_x234;
            const double var_x267 = 0.09178 * var_x226;
            const double var_x268 = -var_x254;
            
            partialF = var_x250 + var_x268 - var_x243 - var_x267;
        }
        else
        {
            const double y_save = rY[6];
            rY[6] += delta;
            const double temp = EvaluateYDerivative6(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[6])/delta;
            rY[6] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative7(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__Na_channel_states__P_C3 = rY[5];
        // Units: dimensionless; Initial value: 7.583e-06
        double var_chaste_interface__Na_channel_states__P_IC3 = rY[7];
        // Units: dimensionless; Initial value: 1.302e-06
        double var_chaste_interface__Na_channel_states__P_IC2 = rY[8];
        // Units: dimensionless; Initial value: 1.679e-08
        

        // Mathematics
        const double var_Na_channel_states__alpha_11 = 3802.0 / (0.20000000000000001 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V) + 0.1027 * exp(-0.058823529411764705 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_3 = 0.00037932999999999999 * exp(-0.12987012987012986 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_11 = 191.69999999999999 * exp(-0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_3 = 8.4000000000000004 + 0.02 * var_chaste_interface__membrane__V; // per_second
        const double var_Na_channel_states__P_IC3_orig_deriv = (-var_Na_channel_states__alpha_11 - var_Na_channel_states__alpha_3) * var_chaste_interface__Na_channel_states__P_IC3 + var_chaste_interface__Na_channel_states__P_C3 * var_Na_channel_states__beta_3 + var_chaste_interface__Na_channel_states__P_IC2 * var_Na_channel_states__beta_11; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_IC3 = 0.001 * var_Na_channel_states__P_IC3_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_Na_channel_states__P_IC3;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative7(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x229 = exp(-0.0066666666666666671 * var_chaste_interface__membrane__V);
            const double var_x234 = exp(-0.12987012987012986 * var_chaste_interface__membrane__V);
            const double var_x254 = 3.7933e-7 * var_x234;
            const double var_x258 = exp(-0.058823529411764705 * var_chaste_interface__membrane__V);
            const double var_x262 = 3.802 / (0.20000000000000001 * var_x229 + 0.1027 * var_x258);
            const double var_x264 = -var_x262;
            const double var_x268 = -var_x254;
            
            partialF = var_x264 + var_x268;
        }
        else
        {
            const double y_save = rY[7];
            rY[7] += delta;
            const double temp = EvaluateYDerivative7(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[7])/delta;
            rY[7] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative8(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__Na_channel_states__P_C2 = rY[4];
        // Units: dimensionless; Initial value: 9.776e-08
        double var_chaste_interface__Na_channel_states__P_IF = rY[6];
        // Units: dimensionless; Initial value: 8.147e-11
        double var_chaste_interface__Na_channel_states__P_IC3 = rY[7];
        // Units: dimensionless; Initial value: 1.302e-06
        double var_chaste_interface__Na_channel_states__P_IC2 = rY[8];
        // Units: dimensionless; Initial value: 1.679e-08
        

        // Mathematics
        const double var_Na_channel_states__alpha_11 = 3802.0 / (0.20000000000000001 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V) + 0.1027 * exp(-0.058823529411764705 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_12 = 3802.0 / (0.1027 * exp(-0.066666666666666666 * var_chaste_interface__membrane__V) + 0.23000000000000001 * exp(-0.0066666666666666671 * var_chaste_interface__membrane__V)); // per_second
        const double var_Na_channel_states__alpha_3 = 0.00037932999999999999 * exp(-0.12987012987012986 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_11 = 191.69999999999999 * exp(-0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_12 = 200.0 * exp(0.24630541871921183 - 0.04926108374384236 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__beta_3 = 8.4000000000000004 + 0.02 * var_chaste_interface__membrane__V; // per_second
        const double var_Na_channel_states__P_IC2_orig_deriv = (-var_Na_channel_states__alpha_12 - var_Na_channel_states__alpha_3 - var_Na_channel_states__beta_11) * var_chaste_interface__Na_channel_states__P_IC2 + var_chaste_interface__Na_channel_states__P_C2 * var_Na_channel_states__beta_3 + var_chaste_interface__Na_channel_states__P_IC3 * var_Na_channel_states__alpha_11 + var_chaste_interface__Na_channel_states__P_IF * var_Na_channel_states__beta_12; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_IC2 = 0.001 * var_Na_channel_states__P_IC2_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_Na_channel_states__P_IC2;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative8(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x224 = -0.04926108374384236 * var_chaste_interface__membrane__V;
            const double var_x229 = exp(-0.0066666666666666671 * var_chaste_interface__membrane__V);
            const double var_x234 = exp(-0.12987012987012986 * var_chaste_interface__membrane__V);
            const double var_x247 = exp(-0.066666666666666666 * var_chaste_interface__membrane__V);
            const double var_x253 = 3.802 / (0.1027 * var_x247 + 0.23000000000000001 * var_x229);
            const double var_x254 = 3.7933e-7 * var_x234;
            const double var_x255 = exp(var_x224);
            const double var_x260 = 0.19169999999999998 * var_x255;
            const double var_x261 = -var_x253 - var_x260;
            const double var_x268 = -var_x254;
            
            partialF = var_x261 + var_x268;
        }
        else
        {
            const double y_save = rY[8];
            rY[8] += delta;
            const double temp = EvaluateYDerivative8(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[8])/delta;
            rY[8] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative9(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__Na_channel_states__P_IF = rY[6];
        // Units: dimensionless; Initial value: 8.147e-11
        double var_chaste_interface__Na_channel_states__P_IM1 = rY[9];
        // Units: dimensionless; Initial value: 9.736e-12
        double var_chaste_interface__Na_channel_states__P_IM2 = rY[10];
        // Units: dimensionless; Initial value: 6.187e-14
        

        // Mathematics
        const double var_Na_channel_states__alpha_2 = 9178.0 * exp(0.033692722371967652 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__alpha_3 = 0.00037932999999999999 * exp(-0.12987012987012986 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__alpha_4 = 0.01 * var_Na_channel_states__alpha_2; // per_second
        const double var_Na_channel_states__alpha_5 = 1.0526315789473684e-5 * var_Na_channel_states__alpha_2; // per_second
        const double var_Na_channel_states__beta_4 = var_Na_channel_states__alpha_3; // per_second
        const double var_Na_channel_states__beta_5 = 0.02 * var_Na_channel_states__alpha_3; // per_second
        const double var_Na_channel_states__P_IM1_orig_deriv = (-var_Na_channel_states__alpha_5 - var_Na_channel_states__beta_4) * var_chaste_interface__Na_channel_states__P_IM1 + var_chaste_interface__Na_channel_states__P_IF * var_Na_channel_states__alpha_4 + var_chaste_interface__Na_channel_states__P_IM2 * var_Na_channel_states__beta_5; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_IM1 = 0.001 * var_Na_channel_states__P_IM1_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_Na_channel_states__P_IM1;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative9(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x226 = exp(0.033692722371967652 * var_chaste_interface__membrane__V);
            const double var_x234 = exp(-0.12987012987012986 * var_chaste_interface__membrane__V);
            const double var_x254 = 3.7933e-7 * var_x234;
            const double var_x268 = -var_x254;
            const double var_x271 = 9.6610526315789479e-5 * var_x226;
            
            partialF = var_x268 - var_x271;
        }
        else
        {
            const double y_save = rY[9];
            rY[9] += delta;
            const double temp = EvaluateYDerivative9(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[9])/delta;
            rY[9] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative10(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__Na_channel_states__P_IM1 = rY[9];
        // Units: dimensionless; Initial value: 9.736e-12
        double var_chaste_interface__Na_channel_states__P_IM2 = rY[10];
        // Units: dimensionless; Initial value: 6.187e-14
        

        // Mathematics
        const double var_Na_channel_states__alpha_2 = 9178.0 * exp(0.033692722371967652 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__alpha_3 = 0.00037932999999999999 * exp(-0.12987012987012986 * var_chaste_interface__membrane__V); // per_second
        const double var_Na_channel_states__alpha_5 = 1.0526315789473684e-5 * var_Na_channel_states__alpha_2; // per_second
        const double var_Na_channel_states__beta_5 = 0.02 * var_Na_channel_states__alpha_3; // per_second
        const double var_Na_channel_states__P_IM2_orig_deriv = var_chaste_interface__Na_channel_states__P_IM1 * var_Na_channel_states__alpha_5 - var_chaste_interface__Na_channel_states__P_IM2 * var_Na_channel_states__beta_5; // 1 / second
        const double d_dt_chaste_interface_var_Na_channel_states__P_IM2 = 0.001 * var_Na_channel_states__P_IM2_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_Na_channel_states__P_IM2;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative10(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x234 = exp(-0.12987012987012986 * var_chaste_interface__membrane__V);
            const double var_x272 = 7.5866000000000003e-9 * var_x234;
            
            partialF = -var_x272;
        }
        else
        {
            const double y_save = rY[10];
            rY[10] += delta;
            const double temp = EvaluateYDerivative10(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[10])/delta;
            rY[10] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative11(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[11];
        // Units: dimensionless; Initial value: 3.289e-06
        

        // Mathematics
        const double var_L_type_Ca_channel_d_gate__d_infinity = 1 / (1.0 + exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_L_type_Ca_channel_d_gate__tau_d = ((fabs(10.0 + var_chaste_interface__membrane__V) < 6.2399999999074307e-7) ? (45787.545788225034 * (1.0 - exp(-9.999999999851651e-8)) / (1.0 + exp(-9.999999999851651e-8)) - 801282.05129393819 * (9.9999993759999999 + var_chaste_interface__membrane__V) * (-45787.545788225034 * (1.0 - exp(9.999999999851651e-8)) / (1.0 + exp(9.999999999851651e-8)) - 45787.545788225034 * (1.0 - exp(-9.999999999851651e-8)) / (1.0 + exp(-9.999999999851651e-8)))) : (0.028571428571428571 * (1.0 - exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V)) / ((1.0 + exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V)) * (10.0 + var_chaste_interface__membrane__V)))); // second
        const double var_L_type_Ca_channel_d_gate__alpha_d = var_L_type_Ca_channel_d_gate__d_infinity / var_L_type_Ca_channel_d_gate__tau_d; // per_second
        const double var_L_type_Ca_channel_d_gate__beta_d = (1.0 - var_L_type_Ca_channel_d_gate__d_infinity) / var_L_type_Ca_channel_d_gate__tau_d; // per_second
        const double var_L_type_Ca_channel_d_gate__d_orig_deriv = (1.0 - var_chaste_interface__L_type_Ca_channel_d_gate__d) * var_L_type_Ca_channel_d_gate__alpha_d - var_L_type_Ca_channel_d_gate__beta_d * var_chaste_interface__L_type_Ca_channel_d_gate__d; // 1 / second
        const double d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d = 0.001 * var_L_type_Ca_channel_d_gate__d_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative11(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x273 = exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V);
            const double var_x274 = 1.0 + var_x273;
            const double var_x275 = 0.001 / var_x274;
            const double var_x276 = -0.001 + var_x275;
            const double var_x277 = exp(9.999999999851651e-8);
            const double var_x278 = (1.0 - var_x277) / (1.0 + var_x277);
            const double var_x279 = exp(-9.999999999851651e-8);
            const double var_x280 = (1.0 - var_x279) / (1.0 + var_x279);
            const double var_x281 = 45787.545788225034 * var_x280;
            const double var_x282 = (9.9999993759999999 + var_chaste_interface__membrane__V) * (-var_x281 - 45787.545788225034 * var_x278);
            const double var_x283 = 10.0 + var_chaste_interface__membrane__V;
            const double var_x284 = fabs(var_x283) < 6.2399999999074307e-7;
            const double var_x285 = 1.0 - var_x273;
            const double var_x286 = 1 / var_x285;
            const double var_x287 = 35.0 * var_x274 * var_x286;
            const double var_x291 = ((var_x284) ? (1 / (var_x281 - 801282.05129393819 * var_x282)) : (var_x283 * var_x287));
            
            partialF = var_x276 * var_x291 - var_x275 * var_x291;
        }
        else
        {
            const double y_save = rY[11];
            rY[11] += delta;
            const double temp = EvaluateYDerivative11(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[11])/delta;
            rY[11] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative12(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[12];
        // Units: dimensionless; Initial value: 0.99975
        

        // Mathematics
        const double var_L_type_Ca_channel_f_gate__f_infinity = 1 / (1.0 + exp(4.0 + 0.125 * var_chaste_interface__membrane__V)) + 0.59999999999999998 / (1.0 + exp(2.5 - 0.050000000000000003 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_L_type_Ca_channel_f_gate__tau_f = 0.001 / (0.02 + 0.019699999999999999 * exp(-0.113569 * pow((1 + 0.10000000000000001 * var_chaste_interface__membrane__V), 2))); // second
        const double var_L_type_Ca_channel_f_gate__alpha_f = var_L_type_Ca_channel_f_gate__f_infinity / var_L_type_Ca_channel_f_gate__tau_f; // per_second
        const double var_L_type_Ca_channel_f_gate__beta_f = (1.0 - var_L_type_Ca_channel_f_gate__f_infinity) / var_L_type_Ca_channel_f_gate__tau_f; // per_second
        const double var_L_type_Ca_channel_f_gate__f_orig_deriv = (1.0 - var_chaste_interface__L_type_Ca_channel_f_gate__f) * var_L_type_Ca_channel_f_gate__alpha_f - var_L_type_Ca_channel_f_gate__beta_f * var_chaste_interface__L_type_Ca_channel_f_gate__f; // 1 / second
        const double d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f = 0.001 * var_L_type_Ca_channel_f_gate__f_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative12(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x293 = exp(-0.113569 * pow((1 + 0.10000000000000001 * var_chaste_interface__membrane__V), 2));
            const double var_x296 = exp(2.5 - 0.050000000000000003 * var_chaste_interface__membrane__V);
            const double var_x297 = 1.0 + var_x296;
            const double var_x299 = exp(4.0 + 0.125 * var_chaste_interface__membrane__V);
            const double var_x300 = 1.0 + var_x299;
            const double var_x302 = 0.019699999999999999 * var_x293;
            const double var_x303 = -0.02 - var_x302;
            const double var_x304 = 1 / var_x300;
            const double var_x305 = 0.59999999999999998 / var_x297;
            const double var_x306 = var_x304 + var_x305;
            const double var_x308 = 1.0 - var_x304 - var_x305;
            
            partialF = var_x303 * var_x306 + var_x303 * var_x308;
        }
        else
        {
            const double y_save = rY[12];
            rY[12] += delta;
            const double temp = EvaluateYDerivative12(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[12])/delta;
            rY[12] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative13(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = rY[13];
        // Units: dimensionless; Initial value: 0.000983
        

        // Mathematics
        const double var_T_type_Ca_channel_b_gate__b_inf = 1 / (1.0 + exp(-1.2962962962962963 - 0.092592592592592587 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_T_type_Ca_channel_b_gate__tau_b = 0.0037000000000000002 + 0.0061000000000000004 / (1.0 + exp(5.5555555555555554 + 0.22222222222222221 * var_chaste_interface__membrane__V)); // second
        const double var_T_type_Ca_channel_b_gate__b_orig_deriv = (-var_chaste_interface__T_type_Ca_channel_b_gate__b + var_T_type_Ca_channel_b_gate__b_inf) / var_T_type_Ca_channel_b_gate__tau_b; // 1 / second
        const double d_dt_chaste_interface_var_T_type_Ca_channel_b_gate__b = 0.001 * var_T_type_Ca_channel_b_gate__b_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_T_type_Ca_channel_b_gate__b;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative13(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x311 = exp(5.5555555555555554 + 0.22222222222222221 * var_chaste_interface__membrane__V);
            const double var_x312 = 1.0 + var_x311;
            const double var_x313 = 1 / var_x312;
            const double var_x314 = 1 / (0.0037000000000000002 + 0.0061000000000000004 * var_x313);
            
            partialF = -0.001 * var_x314;
        }
        else
        {
            const double y_save = rY[13];
            rY[13] += delta;
            const double temp = EvaluateYDerivative13(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[13])/delta;
            rY[13] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative14(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = rY[14];
        // Units: dimensionless; Initial value: 0.9942
        

        // Mathematics
        const double var_T_type_Ca_channel_g_gate__g_inf = 1 / (1.0 + exp(10.714285714285715 + 0.17857142857142858 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_T_type_Ca_channel_g_gate__tau_g = ((var_chaste_interface__membrane__V <= 0) ? (0.012 - 0.00087500000000000002 * var_chaste_interface__membrane__V) : (0.012)); // second
        const double var_T_type_Ca_channel_g_gate__g_orig_deriv = (-var_chaste_interface__T_type_Ca_channel_g_gate__g + var_T_type_Ca_channel_g_gate__g_inf) / var_T_type_Ca_channel_g_gate__tau_g; // 1 / second
        const double d_dt_chaste_interface_var_T_type_Ca_channel_g_gate__g = 0.001 * var_T_type_Ca_channel_g_gate__g_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_T_type_Ca_channel_g_gate__g;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative14(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x317 = var_chaste_interface__membrane__V <= 0;
            const double var_x318 = ((var_x317) ? (1 / (0.012 - 0.00087500000000000002 * var_chaste_interface__membrane__V)) : (83.333333333333329));
            
            partialF = -0.001 * var_x318;
        }
        else
        {
            const double y_save = rY[14];
            rY[14] += delta;
            const double temp = EvaluateYDerivative14(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[14])/delta;
            rY[14] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative15(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__Kr_channel_states__P_O = rY[15];
        // Units: dimensionless; Initial value: 1.104e-10
        double var_chaste_interface__Kr_channel_states__P_C1 = rY[16];
        // Units: dimensionless; Initial value: 3.4083e-08
        double var_chaste_interface__Kr_channel_states__P_I = rY[19];
        // Units: dimensionless; Initial value: 3.386e-11
        

        // Mathematics
        const double var_Kr_channel_states__alpha_alpha = 65.5 * exp(-1.9969750799999999 + 0.055471529999999998 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__alpha_i = 1975.5 * exp(-0.58799999999999997 - 0.023519999999999999 * var_chaste_interface__membrane__V) / mParameters[2]; // per_second
        const double var_Kr_channel_states__beta_beta = 2.9357000000000002 * exp(-0.021579999999999998 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__beta_i = 1030.0720270741688 * pow(mParameters[2], (-0.29999999999999999)) * exp(0.00094200000000000002 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__P_O_orig_deriv = (-var_Kr_channel_states__beta_beta - var_Kr_channel_states__beta_i) * var_chaste_interface__Kr_channel_states__P_O + var_chaste_interface__Kr_channel_states__P_C1 * var_Kr_channel_states__alpha_alpha + var_chaste_interface__Kr_channel_states__P_I * var_Kr_channel_states__alpha_i; // 1 / second
        const double d_dt_chaste_interface_var_Kr_channel_states__P_O = 0.001 * var_Kr_channel_states__P_O_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_Kr_channel_states__P_O;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative15(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x319 = exp(-0.021579999999999998 * var_chaste_interface__membrane__V);
            const double var_x320 = exp(0.00094200000000000002 * var_chaste_interface__membrane__V);
            const double var_x321 = var_x320 * pow(mParameters[2], (-0.29999999999999999));
            const double var_x330 = 0.0029357000000000003 * var_x319;
            const double var_x331 = 1.0300720270741688 * var_x321;
            
            partialF = -var_x330 - var_x331;
        }
        else
        {
            const double y_save = rY[15];
            rY[15] += delta;
            const double temp = EvaluateYDerivative15(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[15])/delta;
            rY[15] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative16(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__Kr_channel_states__P_O = rY[15];
        // Units: dimensionless; Initial value: 1.104e-10
        double var_chaste_interface__Kr_channel_states__P_C1 = rY[16];
        // Units: dimensionless; Initial value: 3.4083e-08
        double var_chaste_interface__Kr_channel_states__P_C2 = rY[17];
        // Units: dimensionless; Initial value: 1.69e-08
        double var_chaste_interface__Kr_channel_states__P_I = rY[19];
        // Units: dimensionless; Initial value: 3.386e-11
        

        // Mathematics
        const double var_Kr_channel_states__alpha_in = 2172.0; // per_second
        const double var_Kr_channel_states__beta_in = 1077.0; // per_second
        const double var_Kr_channel_states__alpha_alpha = 65.5 * exp(-1.9969750799999999 + 0.055471529999999998 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__alpha_i = 1975.5 * exp(-0.58799999999999997 - 0.023519999999999999 * var_chaste_interface__membrane__V) / mParameters[2]; // per_second
        const double var_Kr_channel_states__beta_beta = 2.9357000000000002 * exp(-0.021579999999999998 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__beta_i = 1030.0720270741688 * pow(mParameters[2], (-0.29999999999999999)) * exp(0.00094200000000000002 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__mu = var_Kr_channel_states__alpha_i * var_Kr_channel_states__beta_beta / var_Kr_channel_states__beta_i; // per_second
        const double var_Kr_channel_states__P_C1_orig_deriv = (-var_Kr_channel_states__beta_in - 2 * var_Kr_channel_states__alpha_alpha) * var_chaste_interface__Kr_channel_states__P_C1 + var_chaste_interface__Kr_channel_states__P_C2 * var_Kr_channel_states__alpha_in + var_chaste_interface__Kr_channel_states__P_I * var_Kr_channel_states__mu + var_chaste_interface__Kr_channel_states__P_O * var_Kr_channel_states__beta_beta; // 1 / second
        const double d_dt_chaste_interface_var_Kr_channel_states__P_C1 = 0.001 * var_Kr_channel_states__P_C1_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_Kr_channel_states__P_C1;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative16(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x323 = 0.055471529999999998 * var_chaste_interface__membrane__V;
            const double var_x324 = exp(-1.9969750799999999 + var_x323);
            
            partialF = -1.077 - 0.13100000000000001 * var_x324;
        }
        else
        {
            const double y_save = rY[16];
            rY[16] += delta;
            const double temp = EvaluateYDerivative16(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[16])/delta;
            rY[16] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative17(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__Kr_channel_states__P_C1 = rY[16];
        // Units: dimensionless; Initial value: 3.4083e-08
        double var_chaste_interface__Kr_channel_states__P_C2 = rY[17];
        // Units: dimensionless; Initial value: 1.69e-08
        double var_chaste_interface__Kr_channel_states__P_C3 = rY[18];
        // Units: dimensionless; Initial value: 4.949e-06
        

        // Mathematics
        const double var_Kr_channel_states__alpha_in = 2172.0; // per_second
        const double var_Kr_channel_states__beta_in = 1077.0; // per_second
        const double var_Kr_channel_states__alpha = 55.5 * exp(-0.66565836 + 0.055471529999999998 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__beta = 2.3570000000000002 * exp(-0.036588000000000002 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__P_C2_orig_deriv = (-var_Kr_channel_states__alpha_in - var_Kr_channel_states__beta) * var_chaste_interface__Kr_channel_states__P_C2 + var_chaste_interface__Kr_channel_states__P_C1 * var_Kr_channel_states__beta_in + var_chaste_interface__Kr_channel_states__P_C3 * var_Kr_channel_states__alpha; // 1 / second
        const double d_dt_chaste_interface_var_Kr_channel_states__P_C2 = 0.001 * var_Kr_channel_states__P_C2_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_Kr_channel_states__P_C2;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative17(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x337 = exp(-0.036588000000000002 * var_chaste_interface__membrane__V);
            const double var_x341 = 0.0023570000000000002 * var_x337;
            
            partialF = -2.1720000000000002 - var_x341;
        }
        else
        {
            const double y_save = rY[17];
            rY[17] += delta;
            const double temp = EvaluateYDerivative17(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[17])/delta;
            rY[17] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative18(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__Kr_channel_states__P_C2 = rY[17];
        // Units: dimensionless; Initial value: 1.69e-08
        double var_chaste_interface__Kr_channel_states__P_C3 = rY[18];
        // Units: dimensionless; Initial value: 4.949e-06
        

        // Mathematics
        const double var_Kr_channel_states__alpha = 55.5 * exp(-0.66565836 + 0.055471529999999998 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__beta = 2.3570000000000002 * exp(-0.036588000000000002 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__P_C3_orig_deriv = var_chaste_interface__Kr_channel_states__P_C2 * var_Kr_channel_states__beta - var_chaste_interface__Kr_channel_states__P_C3 * var_Kr_channel_states__alpha; // 1 / second
        const double d_dt_chaste_interface_var_Kr_channel_states__P_C3 = 0.001 * var_Kr_channel_states__P_C3_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_Kr_channel_states__P_C3;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative18(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x323 = 0.055471529999999998 * var_chaste_interface__membrane__V;
            const double var_x339 = exp(-0.66565836 + var_x323);
            const double var_x342 = 0.055500000000000001 * var_x339;
            
            partialF = -var_x342;
        }
        else
        {
            const double y_save = rY[18];
            rY[18] += delta;
            const double temp = EvaluateYDerivative18(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[18])/delta;
            rY[18] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative19(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__Kr_channel_states__P_O = rY[15];
        // Units: dimensionless; Initial value: 1.104e-10
        double var_chaste_interface__Kr_channel_states__P_C1 = rY[16];
        // Units: dimensionless; Initial value: 3.4083e-08
        double var_chaste_interface__Kr_channel_states__P_I = rY[19];
        // Units: dimensionless; Initial value: 3.386e-11
        

        // Mathematics
        const double var_Kr_channel_states__alpha_alpha = 65.5 * exp(-1.9969750799999999 + 0.055471529999999998 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__alpha_i = 1975.5 * exp(-0.58799999999999997 - 0.023519999999999999 * var_chaste_interface__membrane__V) / mParameters[2]; // per_second
        const double var_Kr_channel_states__beta_beta = 2.9357000000000002 * exp(-0.021579999999999998 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__beta_i = 1030.0720270741688 * pow(mParameters[2], (-0.29999999999999999)) * exp(0.00094200000000000002 * var_chaste_interface__membrane__V); // per_second
        const double var_Kr_channel_states__mu = var_Kr_channel_states__alpha_i * var_Kr_channel_states__beta_beta / var_Kr_channel_states__beta_i; // per_second
        const double var_Kr_channel_states__P_I_orig_deriv = (-var_Kr_channel_states__alpha_i - var_Kr_channel_states__mu) * var_chaste_interface__Kr_channel_states__P_I + var_chaste_interface__Kr_channel_states__P_C1 * var_Kr_channel_states__alpha_alpha + var_chaste_interface__Kr_channel_states__P_O * var_Kr_channel_states__beta_i; // 1 / second
        const double d_dt_chaste_interface_var_Kr_channel_states__P_I = 0.001 * var_Kr_channel_states__P_I_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_Kr_channel_states__P_I;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative19(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x319 = exp(-0.021579999999999998 * var_chaste_interface__membrane__V);
            const double var_x320 = exp(0.00094200000000000002 * var_chaste_interface__membrane__V);
            const double var_x327 = exp(-0.58799999999999997 - 0.023519999999999999 * var_chaste_interface__membrane__V);
            const double var_x328 = var_x327 / mParameters[2];
            const double var_x333 = 1.9755 * var_x328;
            const double var_x334 = var_x319 * var_x327 * pow(mParameters[2], (-0.69999999999999996)) / var_x320;
            const double var_x336 = 0.0056301648793171408 * var_x334;
            
            partialF = -var_x333 - var_x336;
        }
        else
        {
            const double y_save = rY[19];
            rY[19] += delta;
            const double temp = EvaluateYDerivative19(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[19])/delta;
            rY[19] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative20(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = rY[20];
        // Units: dimensionless; Initial value: 0.00447
        

        // Mathematics
        const double var_slow_delayed_rectifier_potassium_current_xs1_gate__tau_xs1 = 0.001 * ((fabs(30.0 + var_chaste_interface__membrane__V) < 1.455604075689676e-6) ? (1 / (-1.0465793304208771e-10 / (1.0 - exp(2.1542940320207204e-7)) - 1.9068413391534758e-10 / (-1.0 + exp(-9.9999999999880736e-8)) + 343500.00000040967 * (30.000001455604075 + var_chaste_interface__membrane__V) * (1.0465793304208771e-10 / (1.0 - exp(2.1542940320207204e-7)) + 1.0465793304208771e-10 / (1.0 - exp(-2.1542940320207204e-7)) + 1.9068413391534758e-10 / (-1.0 + exp(9.9999999999880736e-8)) + 1.9068413391534758e-10 / (-1.0 + exp(-9.9999999999880736e-8))))) : (1 / (0.00013100000000000001 * (30.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__V)) + 7.1899999999999999e-5 * (30.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__V))))); // second
        const double var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_infinity = 1 / (1.0 + exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_orig_deriv = (-var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 + var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_infinity) / var_slow_delayed_rectifier_potassium_current_xs1_gate__tau_xs1; // 1 / second
        const double d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = 0.001 * var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative20(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x346 = 1 / (-1.0 + exp(9.9999999999880736e-8));
            const double var_x347 = 1 / (-1.0 + exp(-9.9999999999880736e-8));
            const double var_x348 = 1 / (1.0 - exp(2.1542940320207204e-7));
            const double var_x349 = 1 / (1.0 - exp(-2.1542940320207204e-7));
            const double var_x350 = 30.0 + var_chaste_interface__membrane__V;
            const double var_x351 = fabs(var_x350) < 1.455604075689676e-6;
            const double var_x352 = exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__V);
            const double var_x353 = -1.0 + var_x352;
            const double var_x354 = 1 / var_x353;
            const double var_x355 = 0.13100000000000001 * var_x354;
            const double var_x356 = exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__V);
            const double var_x357 = 1.0 - var_x356;
            const double var_x358 = 1 / var_x357;
            const double var_x359 = 0.071899999999999992 * var_x358;
            const double var_x362 = (30.000001455604075 + var_chaste_interface__membrane__V) * (1.0465793304208771e-10 * var_x348 + 1.0465793304208771e-10 * var_x349 + 1.9068413391534758e-10 * var_x346 + 1.9068413391534758e-10 * var_x347);
            const double var_x363 = ((var_x351) ? (343500000.00040966 * var_x362 - 1.9068413391534758e-7 * var_x347 - 1.046579330420877e-7 * var_x348) : (var_x350 * var_x355 + var_x350 * var_x359));
            
            partialF = -0.001 * var_x363;
        }
        else
        {
            const double y_save = rY[20];
            rY[20] += delta;
            const double temp = EvaluateYDerivative20(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[20])/delta;
            rY[20] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative21(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = rY[21];
        // Units: dimensionless; Initial value: 0.00447
        

        // Mathematics
        const double var_slow_delayed_rectifier_potassium_current_xs2_gate__tau_xs2 = 0.0040000000000000001 * ((fabs(30.0 + var_chaste_interface__membrane__V) < 1.455604075689676e-6) ? (1 / (-1.0465793304208771e-10 / (1.0 - exp(2.1542940320207204e-7)) - 1.9068413391534758e-10 / (-1.0 + exp(-9.9999999999880736e-8)) + 343500.00000040967 * (30.000001455604075 + var_chaste_interface__membrane__V) * (1.0465793304208771e-10 / (1.0 - exp(2.1542940320207204e-7)) + 1.0465793304208771e-10 / (1.0 - exp(-2.1542940320207204e-7)) + 1.9068413391534758e-10 / (-1.0 + exp(9.9999999999880736e-8)) + 1.9068413391534758e-10 / (-1.0 + exp(-9.9999999999880736e-8))))) : (1 / (0.00013100000000000001 * (30.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__V)) + 7.1899999999999999e-5 * (30.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__V))))); // second
        const double var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_infinity = 1 / (1.0 + exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_orig_deriv = (-var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 + var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_infinity) / var_slow_delayed_rectifier_potassium_current_xs2_gate__tau_xs2; // 1 / second
        const double d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = 0.001 * var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative21(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x346 = 1 / (-1.0 + exp(9.9999999999880736e-8));
            const double var_x347 = 1 / (-1.0 + exp(-9.9999999999880736e-8));
            const double var_x348 = 1 / (1.0 - exp(2.1542940320207204e-7));
            const double var_x349 = 1 / (1.0 - exp(-2.1542940320207204e-7));
            const double var_x350 = 30.0 + var_chaste_interface__membrane__V;
            const double var_x351 = fabs(var_x350) < 1.455604075689676e-6;
            const double var_x352 = exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__V);
            const double var_x353 = -1.0 + var_x352;
            const double var_x354 = 1 / var_x353;
            const double var_x356 = exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__V);
            const double var_x357 = 1.0 - var_x356;
            const double var_x358 = 1 / var_x357;
            const double var_x362 = (30.000001455604075 + var_chaste_interface__membrane__V) * (1.0465793304208771e-10 * var_x348 + 1.0465793304208771e-10 * var_x349 + 1.9068413391534758e-10 * var_x346 + 1.9068413391534758e-10 * var_x347);
            const double var_x365 = 0.032750000000000001 * var_x354;
            const double var_x366 = 0.017974999999999998 * var_x358;
            const double var_x367 = ((var_x351) ? (85875000.000102416 * var_x362 - 4.7671033478836895e-8 * var_x347 - 2.6164483260521924e-8 * var_x348) : (var_x350 * var_x365 + var_x350 * var_x366));
            
            partialF = -0.001 * var_x367;
        }
        else
        {
            const double y_save = rY[21];
            rY[21] += delta;
            const double temp = EvaluateYDerivative21(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[21])/delta;
            rY[21] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative22(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = rY[22];
        // Units: dimensionless; Initial value: 0.01167
        

        // Mathematics
        const double var_transient_outward_current_zdv_gate__alpha_zdv = 10000.0 * exp(-1.6000000000000001 + 0.040000000000000001 * var_chaste_interface__membrane__V) / (1.0 + exp(-1.6000000000000001 + 0.040000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_transient_outward_current_zdv_gate__beta_zdv = 10000.0 * exp(-3.6000000000000001 - 0.040000000000000001 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.6000000000000001 - 0.040000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_transient_outward_current_zdv_gate__tau_zdv = 1 / (var_transient_outward_current_zdv_gate__alpha_zdv + var_transient_outward_current_zdv_gate__beta_zdv); // second
        const double var_transient_outward_current_zdv_gate__zdv_ss = var_transient_outward_current_zdv_gate__alpha_zdv / (var_transient_outward_current_zdv_gate__alpha_zdv + var_transient_outward_current_zdv_gate__beta_zdv); // dimensionless
        const double var_transient_outward_current_zdv_gate__zdv_orig_deriv = (-var_chaste_interface__transient_outward_current_zdv_gate__zdv + var_transient_outward_current_zdv_gate__zdv_ss) / var_transient_outward_current_zdv_gate__tau_zdv; // 1 / second
        const double d_dt_chaste_interface_var_transient_outward_current_zdv_gate__zdv = 0.001 * var_transient_outward_current_zdv_gate__zdv_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_transient_outward_current_zdv_gate__zdv;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative22(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x368 = 0.040000000000000001 * var_chaste_interface__membrane__V;
            const double var_x369 = exp(-1.6000000000000001 + var_x368);
            const double var_x370 = 1.0 + var_x369;
            const double var_x371 = var_x369 / var_x370;
            const double var_x372 = exp(-3.6000000000000001 - var_x368);
            const double var_x373 = 1.0 + var_x372;
            const double var_x374 = var_x372 / var_x373;
            const double var_x377 = 10.0 * var_x371;
            
            partialF = -var_x377 - 10.0 * var_x374;
        }
        else
        {
            const double y_save = rY[22];
            rY[22] += delta;
            const double temp = EvaluateYDerivative22(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[22])/delta;
            rY[22] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative23(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = rY[23];
        // Units: dimensionless; Initial value: 0.99998
        

        // Mathematics
        const double var_transient_outward_current_ydv_gate__alpha_ydv = 15.0 / (1.0 + exp(12.0 + 0.20000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_transient_outward_current_ydv_gate__beta_ydv = 100.0 * exp(5.0 + 0.20000000000000001 * var_chaste_interface__membrane__V) / (1.0 + exp(5.0 + 0.20000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_transient_outward_current_ydv_gate__tau_ydv = 1 / (var_transient_outward_current_ydv_gate__alpha_ydv + var_transient_outward_current_ydv_gate__beta_ydv); // second
        const double var_transient_outward_current_ydv_gate__ydv_ss = var_transient_outward_current_ydv_gate__alpha_ydv / (var_transient_outward_current_ydv_gate__alpha_ydv + var_transient_outward_current_ydv_gate__beta_ydv); // dimensionless
        const double var_transient_outward_current_ydv_gate__ydv_orig_deriv = (-var_chaste_interface__transient_outward_current_ydv_gate__ydv + var_transient_outward_current_ydv_gate__ydv_ss) / var_transient_outward_current_ydv_gate__tau_ydv; // 1 / second
        const double d_dt_chaste_interface_var_transient_outward_current_ydv_gate__ydv = 0.001 * var_transient_outward_current_ydv_gate__ydv_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_transient_outward_current_ydv_gate__ydv;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative23(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            

            const double var_x384 = 0.20000000000000001 * var_chaste_interface__membrane__V;
            const double var_x385 = exp(12.0 + var_x384);
            const double var_x386 = 1.0 + var_x385;
            const double var_x387 = 1 / var_x386;
            const double var_x388 = exp(5.0 + var_x384);
            const double var_x389 = 1.0 + var_x388;
            const double var_x390 = var_x388 / var_x389;
            const double var_x397 = 0.014999999999999999 * var_x387;
            
            partialF = -var_x397 - 0.10000000000000001 * var_x390;
        }
        else
        {
            const double y_save = rY[23];
            rY[23] += delta;
            const double temp = EvaluateYDerivative23(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[23])/delta;
            rY[23] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative24(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000104
        double var_chaste_interface__calcium_dynamics__Ca_JSR = rY[24];
        // Units: millimolar; Initial value: 1.516
        double var_chaste_interface__calcium_dynamics__Ca_NSR = rY[25];
        // Units: millimolar; Initial value: 1.518
        double var_chaste_interface__calcium_dynamics__APtrack2 = rY[27];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__Cainfluxtrack = rY[29];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack2 = rY[31];
        // Units: dimensionless; Initial value: 0.0
        

        // Mathematics
        const double var_calcium_dynamics__CSQN_max = 10.0; // millimolar
        const double var_calcium_dynamics__G_rel_overload = 4000.0; // per_second
        const double var_calcium_dynamics__K_mCSQN = 0.80000000000000004; // millimolar
        const double var_calcium_dynamics__K_mrel = 0.00080000000000000004; // millimolar
        const double var_calcium_dynamics__delta_Ca_ith = 0.00018000000000000001; // millimolar
        const double var_calcium_dynamics__G_rel = ((var_chaste_interface__calcium_dynamics__Cainfluxtrack > var_calcium_dynamics__delta_Ca_ith) ? ((1.0 - var_chaste_interface__calcium_dynamics__APtrack2) * (-var_calcium_dynamics__delta_Ca_ith + var_chaste_interface__calcium_dynamics__Cainfluxtrack) * var_chaste_interface__calcium_dynamics__APtrack2 * mParameters[0] / (-var_calcium_dynamics__delta_Ca_ith + var_chaste_interface__calcium_dynamics__Cainfluxtrack + var_calcium_dynamics__K_mrel)) : ((var_chaste_interface__calcium_dynamics__OVRLDtrack2 > 0) ? ((1.0 - var_chaste_interface__calcium_dynamics__OVRLDtrack2) * var_calcium_dynamics__G_rel_overload * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (0))); // per_second
        const double var_calcium_dynamics__i_rel = (-var_chaste_interface__calcium_dynamics__Cai + var_chaste_interface__calcium_dynamics__Ca_JSR) * var_calcium_dynamics__G_rel; // millimolar_per_second
        const double var_calcium_dynamics__tau_tr = 0.17999999999999999; // second
        const double var_calcium_dynamics__i_tr = (-var_chaste_interface__calcium_dynamics__Ca_JSR + var_chaste_interface__calcium_dynamics__Ca_NSR) / var_calcium_dynamics__tau_tr; // millimolar_per_second
        const double var_calcium_dynamics__Ca_JSR_orig_deriv = (-var_calcium_dynamics__i_rel + var_calcium_dynamics__i_tr) / (1.0 + var_calcium_dynamics__CSQN_max * var_calcium_dynamics__K_mCSQN / pow((var_chaste_interface__calcium_dynamics__Ca_JSR + var_calcium_dynamics__K_mCSQN), 2)); // millimolar / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_JSR = 0.001 * var_calcium_dynamics__Ca_JSR_orig_deriv; // millimolar / millisecond

        return d_dt_chaste_interface_var_calcium_dynamics__Ca_JSR;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative24(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__calcium_dynamics__Cai = rY[1];
            // Units: millimolar; Initial value: 0.000104
            double var_chaste_interface__calcium_dynamics__Ca_JSR = rY[24];
            // Units: millimolar; Initial value: 1.516
            double var_chaste_interface__calcium_dynamics__Ca_NSR = rY[25];
            // Units: millimolar; Initial value: 1.518
            double var_chaste_interface__calcium_dynamics__APtrack2 = rY[27];
            // Units: dimensionless; Initial value: 0.0
            double var_chaste_interface__calcium_dynamics__Cainfluxtrack = rY[29];
            // Units: dimensionless; Initial value: 0.0
            double var_chaste_interface__calcium_dynamics__OVRLDtrack2 = rY[31];
            // Units: dimensionless; Initial value: 0.0
            

            const double var_x198 = 1.0 - var_chaste_interface__calcium_dynamics__APtrack2;
            const double var_x199 = 0.00062 + var_chaste_interface__calcium_dynamics__Cainfluxtrack;
            const double var_x200 = 1 / var_x199;
            const double var_x201 = -0.00018000000000000001 + var_chaste_interface__calcium_dynamics__Cainfluxtrack;
            const double var_x202 = var_x200 * var_x201 * mParameters[0];
            const double var_x203 = var_x198 * var_x202;
            const double var_x204 = var_chaste_interface__calcium_dynamics__Cainfluxtrack > 0.00018000000000000001;
            const double var_x205 = var_chaste_interface__calcium_dynamics__OVRLDtrack2 > 0;
            const double var_x206 = ((var_x204) ? (var_x203 * var_chaste_interface__calcium_dynamics__APtrack2) : ((var_x205) ? (4000.0 * (1.0 - var_chaste_interface__calcium_dynamics__OVRLDtrack2) * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (0)));
            const double var_x211 = -var_chaste_interface__calcium_dynamics__Cai + var_chaste_interface__calcium_dynamics__Ca_JSR;
            const double var_x398 = 0.80000000000000004 + var_chaste_interface__calcium_dynamics__Ca_JSR;
            const double var_x399 = pow(var_x398, (-2));
            const double var_x400 = 1 / (1.0 + 8.0 * var_x399);
            const double var_x401 = 0.001 * var_x400;
            
            partialF = var_x401 * (-5.5555555555555554 - var_x206) + 0.00025000000000000001 * (5.5555555555555554 * var_chaste_interface__calcium_dynamics__Ca_NSR - 5.5555555555555554 * var_chaste_interface__calcium_dynamics__Ca_JSR - var_x206 * var_x211) / (pow(var_x398, 3) * pow((0.125 + var_x399), 2));
        }
        else
        {
            const double y_save = rY[24];
            rY[24] += delta;
            const double temp = EvaluateYDerivative24(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[24])/delta;
            rY[24] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative25(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000104
        double var_chaste_interface__calcium_dynamics__Ca_JSR = rY[24];
        // Units: millimolar; Initial value: 1.516
        double var_chaste_interface__calcium_dynamics__Ca_NSR = rY[25];
        // Units: millimolar; Initial value: 1.518
        

        // Mathematics
        const double var_calcium_dynamics__Ca_NSR_max = 15.0; // millimolar
        const double var_calcium_dynamics__I_up = 8.75; // millimolar_per_second
        const double var_calcium_dynamics__K_leak = var_calcium_dynamics__I_up / var_calcium_dynamics__Ca_NSR_max; // per_second
        const double var_calcium_dynamics__K_mup = 0.00092000000000000003; // millimolar
        const double var_calcium_dynamics__i_leak = var_chaste_interface__calcium_dynamics__Ca_NSR * var_calcium_dynamics__K_leak; // millimolar_per_second
        const double var_calcium_dynamics__i_up = var_chaste_interface__calcium_dynamics__Cai * var_calcium_dynamics__I_up / (var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__K_mup); // millimolar_per_second
        const double var_calcium_dynamics__tau_tr = 0.17999999999999999; // second
        const double var_calcium_dynamics__i_tr = (-var_chaste_interface__calcium_dynamics__Ca_JSR + var_chaste_interface__calcium_dynamics__Ca_NSR) / var_calcium_dynamics__tau_tr; // millimolar_per_second
        const double var_ionic_concentrations__preplength = 0.001; // mm
        const double var_ionic_concentrations__radius = 0.00011; // mm
        const double var_ionic_concentrations__volume = M_PI * pow(var_ionic_concentrations__radius, 2) * var_ionic_concentrations__preplength; // micro_litre
        const double var_ionic_concentrations__V_myo = 0.68000000000000005 * var_ionic_concentrations__volume; // micro_litre
        const double var_calcium_dynamics__V_JSR = 0.0070588235294117632 * var_ionic_concentrations__V_myo; // micro_litre
        const double var_calcium_dynamics__V_NSR = 0.081176470588235281 * var_ionic_concentrations__V_myo; // micro_litre
        const double var_calcium_dynamics__Ca_NSR_orig_deriv = -var_calcium_dynamics__i_leak - var_calcium_dynamics__V_JSR * var_calcium_dynamics__i_tr / var_calcium_dynamics__V_NSR + var_calcium_dynamics__i_up; // millimolar / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_NSR = 0.001 * var_calcium_dynamics__Ca_NSR_orig_deriv; // millimolar / millisecond

        return d_dt_chaste_interface_var_calcium_dynamics__Ca_NSR;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative25(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            

            
            partialF = -0.001066425120772947;
        }
        else
        {
            const double y_save = rY[25];
            rY[25] += delta;
            const double temp = EvaluateYDerivative25(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[25])/delta;
            rY[25] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative26(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000104
        double var_chaste_interface__Na_channel_states__P_O_Na = rY[2];
        // Units: dimensionless; Initial value: 3.756e-13
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[11];
        // Units: dimensionless; Initial value: 3.289e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[12];
        // Units: dimensionless; Initial value: 0.99975
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = rY[13];
        // Units: dimensionless; Initial value: 0.000983
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = rY[14];
        // Units: dimensionless; Initial value: 0.9942
        double var_chaste_interface__Kr_channel_states__P_O = rY[15];
        // Units: dimensionless; Initial value: 1.104e-10
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = rY[20];
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = rY[21];
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = rY[22];
        // Units: dimensionless; Initial value: 0.01167
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = rY[23];
        // Units: dimensionless; Initial value: 0.99998
        double var_chaste_interface__calcium_dynamics__APtrack = rY[26];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ionic_concentrations__Nai = rY[33];
        // Units: millimolar; Initial value: 10.532
        double var_chaste_interface__ionic_concentrations__Ki = rY[34];
        // Units: millimolar; Initial value: 140.557
        

        // Mathematics
        const double var_ATP_sensitive_potassium_current__ATPi = 3.0; // millimolar
        const double var_ATP_sensitive_potassium_current__hATP = 2.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__i_K_ATP_on = 1.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__kATP = 0.00025000000000000001; // millimolar
        const double var_ATP_sensitive_potassium_current__nATP = 0.23999999999999999; // dimensionless
        const double var_ATP_sensitive_potassium_current__nicholsarea = 5.0000000000000002e-5; // dimensionless
        const double var_ATP_sensitive_potassium_current__g_K_ATP = 0.000193 * var_ATP_sensitive_potassium_current__i_K_ATP_on / var_ATP_sensitive_potassium_current__nicholsarea; // milliS_per_microF
        const double var_ATP_sensitive_potassium_current__pATP = 1 / (1.0 + pow((var_ATP_sensitive_potassium_current__ATPi / var_ATP_sensitive_potassium_current__kATP), var_ATP_sensitive_potassium_current__hATP)); // dimensionless
        const double var_L_type_Ca_channel__gamma_Ki = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ko = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nai = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nao = 0.75; // dimensionless
        const double var_L_type_Ca_channel_f_Ca_gate__Km_Ca = 0.00059999999999999995; // millimolar
        const double var_Na_Ca_exchanger__c2 = 0.0001; // millimolar
        const double var_Na_Ca_exchanger__gamma = 0.14999999999999999; // dimensionless
        const double var_T_type_Ca_channel__g_CaT = 0.050000000000000003; // milliS_per_microF
        const double var_calcium_background_current__g_Cab = 0.003016; // milliS_per_microF
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + var_chaste_interface__calcium_dynamics__Cai / var_L_type_Ca_channel_f_Ca_gate__Km_Ca); // dimensionless
        const double var_ATP_sensitive_potassium_current__GKbaraATP = pow((0.25 * mParameters[2]), var_ATP_sensitive_potassium_current__nATP) * var_ATP_sensitive_potassium_current__g_K_ATP * var_ATP_sensitive_potassium_current__pATP; // milliS_per_microF
        const double var_membrane__F = 96485.0; // coulomb_per_mole
        const double var_membrane__I_st_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_membrane__I_st = var_membrane__I_st_converted / HeartConfig::Instance()->GetCapacitance(); // microA_per_microF
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_calcium_background_current__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(mParameters[1] / var_chaste_interface__calcium_dynamics__Cai) / var_membrane__F; // millivolt
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(mParameters[3] / var_chaste_interface__ionic_concentrations__Nai) / var_membrane__F; // millivolt
        const double var_L_type_Ca_channel__I_CaCa = ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (1.042038e-5 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 1.042038e-5 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 1.042038e-5 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (7.8019226357407252 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(0.074871767015605231 * var_chaste_interface__membrane__V)) * mParameters[4] * var_chaste_interface__membrane__V / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaK = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (1.8621604999999999e-9 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 1.8621604999999999e-9 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 1.8621604999999999e-9 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.00069711623550831479 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(0.037435883507802616 * var_chaste_interface__membrane__V)) * mParameters[4] * var_chaste_interface__membrane__V / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaNa = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (6.5127375e-9 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 6.5127375e-9 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 6.5127375e-9 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.0024381008236689767 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(0.037435883507802616 * var_chaste_interface__membrane__V)) * mParameters[4] * var_chaste_interface__membrane__V / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaCa = var_L_type_Ca_channel__I_CaCa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaK = var_L_type_Ca_channel__I_CaK * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaNa = var_L_type_Ca_channel__I_CaNa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_CaCa + var_L_type_Ca_channel__i_CaK + var_L_type_Ca_channel__i_CaNa; // microA_per_microF
        const double var_Na_Ca_exchanger__i_NaCa = (-pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * mParameters[10] * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) / (1.0 + (pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_Na_Ca_exchanger__c2 * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // microA_per_microF
        const double var_T_type_Ca_channel__i_Ca_T = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2) * (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_T_type_Ca_channel__g_CaT * var_chaste_interface__T_type_Ca_channel_g_gate__g; // microA_per_microF
        const double var_calcium_background_current__i_Ca_b = (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_calcium_background_current__g_Cab; // microA_per_microF
        const double var_fast_sodium_current__i_Na = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__Na_channel_states__P_O_Na * mParameters[6]; // microA_per_microF
        const double var_non_specific_calcium_activated_current__K_m_ns_Ca = 0.0011999999999999999; // millimolar
        const double var_non_specific_calcium_activated_current__P_ns_Ca = 0; // cm_per_second
        const double var_non_specific_calcium_activated_current__I_ns_K = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * mParameters[2] + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__I_ns_Na = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * mParameters[3] + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_K = var_non_specific_calcium_activated_current__I_ns_K / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Na = var_non_specific_calcium_activated_current__I_ns_Na / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Ca = var_non_specific_calcium_activated_current__i_ns_K + var_non_specific_calcium_activated_current__i_ns_Na; // microA_per_microF
        const double var_plateau_potassium_current__Kp = 1 / (1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_plateau_potassium_current__g_Kp = 0.0055199999999999997; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__E_Kr = var_membrane__R * var_membrane__T * log(mParameters[2] / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_rapid_delayed_rectifier_potassium_current__g_Kr = pow(mParameters[2], 0.58999999999999997) * mParameters[8]; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_rapid_delayed_rectifier_potassium_current__E_Kr + var_chaste_interface__membrane__V) * var_chaste_interface__Kr_channel_states__P_O * var_rapid_delayed_rectifier_potassium_current__g_Kr; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__I_pCa = 1.1499999999999999; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__K_mpCa = 0.00050000000000000001; // millimolar
        const double var_sarcolemmal_calcium_pump__i_p_Ca = var_chaste_interface__calcium_dynamics__Cai * var_sarcolemmal_calcium_pump__I_pCa / (var_chaste_interface__calcium_dynamics__Cai + var_sarcolemmal_calcium_pump__K_mpCa); // microA_per_microF
        const double var_slow_delayed_rectifier_potassium_current__PNaK = 0.018329999999999999; // dimensionless
        const double var_slow_delayed_rectifier_potassium_current__E_Ks = var_membrane__R * var_membrane__T * log((mParameters[3] * var_slow_delayed_rectifier_potassium_current__PNaK + mParameters[2]) / (var_chaste_interface__ionic_concentrations__Nai * var_slow_delayed_rectifier_potassium_current__PNaK + var_chaste_interface__ionic_concentrations__Ki)) / var_membrane__F; // millivolt
        const double var_slow_delayed_rectifier_potassium_current__g_Ks = 0.433 * (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * mParameters[9]; // milliS_per_microF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = (-var_slow_delayed_rectifier_potassium_current__E_Ks + var_chaste_interface__membrane__V) * var_slow_delayed_rectifier_potassium_current__g_Ks * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2; // microA_per_microF
        const double var_sodium_activated_potassium_current__g_K_Na = 0; // milliS_per_microF
        const double var_sodium_activated_potassium_current__kdKNa = 66.0; // millimolar
        const double var_sodium_activated_potassium_current__nKNa = 2.7999999999999998; // dimensionless
        const double var_sodium_activated_potassium_current__pona = 0.84999999999999998 / (1.0 + pow((var_sodium_activated_potassium_current__kdKNa / var_chaste_interface__ionic_concentrations__Nai), var_sodium_activated_potassium_current__nKNa)); // dimensionless
        const double var_sodium_activated_potassium_current__pov = 0.80000000000000004 - 0.65000000000000002 / (1.0 + exp(8.3333333333333339 + 0.066666666666666666 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_sodium_background_current__g_Nab = 0.0040000000000000001; // milliS_per_microF
        const double var_sodium_background_current__i_Na_b = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_sodium_background_current__g_Nab; // microA_per_microF
        const double var_sodium_potassium_pump__I_NaK = 2.25; // microA_per_microF
        const double var_sodium_potassium_pump__K_mKo = 1.5; // millimolar
        const double var_sodium_potassium_pump__K_mNai = 10.0; // millimolar
        const double var_sodium_potassium_pump__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * mParameters[3]); // dimensionless
        const double var_sodium_potassium_pump__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + 0.036499999999999998 * var_sodium_potassium_pump__sigma * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // dimensionless
        const double var_sodium_potassium_pump__i_NaK = mParameters[2] * var_sodium_potassium_pump__I_NaK * var_sodium_potassium_pump__f_NaK / ((1.0 + pow(var_sodium_potassium_pump__K_mNai, 2) / pow(var_chaste_interface__ionic_concentrations__Nai, 2)) * (mParameters[2] + var_sodium_potassium_pump__K_mKo)); // microA_per_microF
        const double var_time_independent_potassium_current__E_K = var_membrane__R * var_membrane__T * log(mParameters[2] / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_ATP_sensitive_potassium_current__i_K_ATP = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_ATP_sensitive_potassium_current__GKbaraATP; // microA_per_microF
        const double var_plateau_potassium_current__i_Kp = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_plateau_potassium_current__Kp * var_plateau_potassium_current__g_Kp; // microA_per_microF
        const double var_sodium_activated_potassium_current__i_K_Na = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_sodium_activated_potassium_current__g_K_Na * var_sodium_activated_potassium_current__pona * var_sodium_activated_potassium_current__pov; // microA_per_microF
        const double var_time_independent_potassium_current__g_K1 = 0.43033148291193518 * sqrt(mParameters[2]) * mParameters[7]; // milliS_per_cm2
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K)); // per_second
        const double var_time_independent_potassium_current_K1_gate__beta_K1 = 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V)); // per_second
        const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_microF
        const double var_transient_outward_current__g_to = 1.1000000000000001; // milliS_per_microF
        const double var_transient_outward_current__rvdv = exp(0.01 * var_chaste_interface__membrane__V); // dimensionless
        const double var_transient_outward_current__i_to = pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_transient_outward_current__g_to * mParameters[11] * var_transient_outward_current__rvdv * var_chaste_interface__transient_outward_current_ydv_gate__ydv; // microA_per_microF
        const double var_membrane__dVdt = -(var_ATP_sensitive_potassium_current__i_K_ATP + var_L_type_Ca_channel__i_Ca_L + var_Na_Ca_exchanger__i_NaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_fast_sodium_current__i_Na + var_membrane__I_st + var_non_specific_calcium_activated_current__i_ns_Ca + var_plateau_potassium_current__i_Kp + var_rapid_delayed_rectifier_potassium_current__i_Kr + var_sarcolemmal_calcium_pump__i_p_Ca + var_slow_delayed_rectifier_potassium_current__i_Ks + var_sodium_activated_potassium_current__i_K_Na + var_sodium_background_current__i_Na_b + var_sodium_potassium_pump__i_NaK + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) / mParameters[5]; // dimensionless
        const double var_calcium_dynamics__APtrack_orig_deriv = ((var_membrane__dVdt > 150000.0) ? (100000.0 - 100500.0 * var_chaste_interface__calcium_dynamics__APtrack) : (-500.0 * var_chaste_interface__calcium_dynamics__APtrack)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__APtrack = 0.001 * var_calcium_dynamics__APtrack_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_calcium_dynamics__APtrack;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative26(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            double var_chaste_interface__calcium_dynamics__Cai = rY[1];
            // Units: millimolar; Initial value: 0.000104
            double var_chaste_interface__Na_channel_states__P_O_Na = rY[2];
            // Units: dimensionless; Initial value: 3.756e-13
            double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[11];
            // Units: dimensionless; Initial value: 3.289e-06
            double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[12];
            // Units: dimensionless; Initial value: 0.99975
            double var_chaste_interface__T_type_Ca_channel_b_gate__b = rY[13];
            // Units: dimensionless; Initial value: 0.000983
            double var_chaste_interface__T_type_Ca_channel_g_gate__g = rY[14];
            // Units: dimensionless; Initial value: 0.9942
            double var_chaste_interface__Kr_channel_states__P_O = rY[15];
            // Units: dimensionless; Initial value: 1.104e-10
            double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = rY[20];
            // Units: dimensionless; Initial value: 0.00447
            double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = rY[21];
            // Units: dimensionless; Initial value: 0.00447
            double var_chaste_interface__transient_outward_current_zdv_gate__zdv = rY[22];
            // Units: dimensionless; Initial value: 0.01167
            double var_chaste_interface__transient_outward_current_ydv_gate__ydv = rY[23];
            // Units: dimensionless; Initial value: 0.99998
            double var_chaste_interface__ionic_concentrations__Nai = rY[33];
            // Units: millimolar; Initial value: 10.532
            double var_chaste_interface__ionic_concentrations__Ki = rY[34];
            // Units: millimolar; Initial value: 140.557
            

            const double var_x0 = exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V);
            const double var_x1 = 1.0 + var_x0;
            const double var_x2 = 1 / var_x1;
            const double var_x3 = 0.0055199999999999997 * var_x2;
            const double var_x4 = pow(mParameters[2], 0.23999999999999999);
            const double var_x5 = 1.921898339896919e-8 * var_x4;
            const double var_x6 = var_chaste_interface__Na_channel_states__P_O_Na * mParameters[6];
            const double var_x7 = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2);
            const double var_x8 = var_x7 * var_chaste_interface__T_type_Ca_channel_g_gate__g;
            const double var_x9 = 0.050000000000000003 * var_x8;
            const double var_x10 = pow(mParameters[2], 0.58999999999999997) * mParameters[8];
            const double var_x11 = var_x10 * var_chaste_interface__Kr_channel_states__P_O;
            const double var_x12 = 1 / var_chaste_interface__ionic_concentrations__Ki;
            const double var_x13 = log(var_x12 * mParameters[2]);
            const double var_x14 = -26.712338705498265 * var_x13 + var_chaste_interface__membrane__V;
            const double var_x15 = 1 / var_chaste_interface__calcium_dynamics__Cai;
            const double var_x16 = pow(var_x15, 1.3999999999999999);
            const double var_x17 = 1.0 + 6.4818210260626455e-7 * var_x16;
            const double var_x18 = 1 / var_x17;
            const double var_x20 = var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2;
            const double var_x23 = exp(9.9999999999999995e-8);
            const double var_x24 = 1 / (-1.0 + var_x23);
            const double var_x25 = -0.75 * mParameters[2];
            const double var_x26 = 0.75 * var_chaste_interface__ionic_concentrations__Ki;
            const double var_x27 = var_x24 * (var_x25 + var_x23 * var_x26);
            const double var_x28 = exp(-9.9999999999999995e-8);
            const double var_x29 = 1 / (-1.0 + var_x28);
            const double var_x30 = var_x29 * (var_x25 + var_x26 * var_x28);
            const double var_x31 = fabs(var_chaste_interface__membrane__V);
            const double var_x32 = var_x31 < 2.6712338705498262e-6;
            const double var_x33 = 0.037435883507802616 * var_chaste_interface__membrane__V;
            const double var_x34 = exp(var_x33);
            const double var_x35 = var_x25 + var_x26 * var_x34;
            const double var_x36 = -1.0 + var_x34;
            const double var_x37 = mParameters[4] / var_x36;
            const double var_x38 = 0.00069711623550831479 * var_x35 * var_x37;
            const double var_x42 = 1 / (1.0 + 1666.6666666666667 * var_chaste_interface__calcium_dynamics__Cai);
            const double var_x43 = var_x42;
            const double var_x44 = var_x43 * var_chaste_interface__L_type_Ca_channel_f_gate__f;
            const double var_x45 = var_x44 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
            const double var_x47 = -0.75 * mParameters[3];
            const double var_x48 = 0.75 * var_chaste_interface__ionic_concentrations__Nai;
            const double var_x49 = var_x24 * (var_x47 + var_x23 * var_x48);
            const double var_x50 = var_x29 * (var_x47 + var_x28 * var_x48);
            const double var_x51 = var_x47 + var_x34 * var_x48;
            const double var_x52 = 0.0024381008236689767 * var_x37 * var_x51;
            const double var_x54 = -0.34100000000000003 * mParameters[1];
            const double var_x55 = var_chaste_interface__calcium_dynamics__Cai;
            const double var_x56 = var_x24 * (var_x54 + var_x23 * var_x55);
            const double var_x57 = var_x29 * (var_x54 + var_x28 * var_x55);
            const double var_x59 = var_x31 < 1.3356169352749131e-6;
            const double var_x60 = exp(0.074871767015605231 * var_chaste_interface__membrane__V);
            const double var_x61 = var_x54 + var_x55 * var_x60;
            const double var_x62 = -1.0 + var_x60;
            const double var_x63 = mParameters[4] / var_x62;
            const double var_x64 = 7.8019226357407252 * var_x63;
            const double var_x65 = var_x61 * var_x64;
            const double var_x71 = exp(0.01 * var_chaste_interface__membrane__V);
            const double var_x72 = var_x71 * pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * mParameters[11];
            const double var_x73 = var_x72 * var_chaste_interface__transient_outward_current_ydv_gate__ydv;
            const double var_x74 = 1.1000000000000001 * var_x73;
            const double var_x75 = exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 6.3708927812613361 * var_x13);
            const double var_x76 = 1.0 + var_x75;
            const double var_x77 = 1 / var_x76;
            const double var_x78 = exp(-2.4444678999999998 + 13.738155796237757 * var_x13 - 0.51429999999999998 * var_chaste_interface__membrane__V);
            const double var_x79 = 1.0 + var_x78;
            const double var_x80 = 1 / var_x79;
            const double var_x81 = exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 2.1455350448256207 * var_x13);
            const double var_x82 = exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 1.6494869150645177 * var_x13);
            const double var_x83 = var_x82 + 0.49124000000000001 * var_x81;
            const double var_x84 = var_x80 * var_x83;
            const double var_x85 = 1 / (1000.0 * var_x84 + 1020.0 * var_x77);
            const double var_x86 = sqrt(mParameters[2]);
            const double var_x87 = var_x77 * var_x86 * mParameters[7];
            const double var_x88 = var_x85 * var_x87;
            const double var_x89 = 438.93811257017387 * var_x88;
            const double var_x90 = pow(mParameters[3], 3);
            const double var_x91 = var_x90 * var_chaste_interface__calcium_dynamics__Cai;
            const double var_x92 = pow(var_chaste_interface__ionic_concentrations__Nai, 3);
            const double var_x93 = var_x34 * mParameters[1];
            const double var_x94 = var_x92 * var_x93;
            const double var_x95 = var_x94 - var_x91;
            const double var_x96 = exp(-0.031820500981632228 * var_chaste_interface__membrane__V);
            const double var_x98 = 1.0 + 0.0001 * var_x96 * (var_x91 + var_x94);
            const double var_x99 = mParameters[10] / var_x98;
            const double var_x103 = 1 / (1.5 + mParameters[2]);
            const double var_x104 = exp(-0.003743588350780262 * var_chaste_interface__membrane__V);
            const double var_x105 = exp(0.01485884101040119 * mParameters[3]);
            const double var_x106 = exp(-var_x33);
            const double var_x107 = 1.0 + 0.1245 * var_x104 + 0.036499999999999998 * var_x106 * (-0.14285714285714285 + 0.14285714285714285 * var_x105);
            const double var_x108 = pow(var_chaste_interface__ionic_concentrations__Nai, 2);
            const double var_x109 = 1 / var_x108;
            const double var_x110 = 2.25 / (1.0 + 100.0 * var_x109);
            const double var_x111 = var_x96 * var_x99;
            const double var_x119 = 1 / mParameters[5];
            const double var_x122 = 6.5127375e-9 * mParameters[4];
            const double var_x123 = var_x122 * var_x50;
            const double var_x124 = var_x123 + var_x122 * var_x49;
            const double var_x126 = -var_x123;
            const double var_x127 = var_x52 * var_chaste_interface__membrane__V;
            const double var_x132 = 1.8621604999999999e-9 * mParameters[4];
            const double var_x133 = var_x132 * var_x30;
            const double var_x134 = var_x133 + var_x132 * var_x27;
            const double var_x135 = -var_x133;
            const double var_x136 = var_x38 * var_chaste_interface__membrane__V;
            const double var_x142 = 1 / (0.018329999999999999 * var_chaste_interface__ionic_concentrations__Nai + var_chaste_interface__ionic_concentrations__Ki);
            const double var_x143 = -26.712338705498265 * log(var_x142 * (0.018329999999999999 * mParameters[3] + mParameters[2])) + var_chaste_interface__membrane__V;
            const double var_x144 = var_x143 * var_x20 * mParameters[9];
            const double var_x145 = 1.042038e-5 * mParameters[4];
            const double var_x151 = var_x145 * var_x57;
            const double var_x152 = 374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (var_x151 + var_x145 * var_x56);
            const double var_x154 = var_x65 * var_chaste_interface__membrane__V;
            const double var_x156 = 0.00050000000000000001 + var_chaste_interface__calcium_dynamics__Cai;
            const double var_x157 = 1.1499999999999999 / var_x156;
            const double var_x161 = 1 / var_chaste_interface__ionic_concentrations__Nai;
            const double var_x162 = log(var_x161 * mParameters[3]);
            const double var_x163 = -26.712338705498265 * var_x162 + var_chaste_interface__membrane__V;
            const double var_x166 = log(var_x15 * mParameters[1]);
            const double var_x167 = -13.356169352749133 * var_x166 + var_chaste_interface__membrane__V;
            const double var_x174 = 0.5 + 187179.41753901311 * var_chaste_interface__membrane__V;
            const double var_x177 = var_x103 * mParameters[2] / var_x107;
            const double var_x187 = var_x111 * var_x95;
            const double var_x212 = 0.040282206767891383 * var_x166;
            const double var_x213 = var_x157 * var_chaste_interface__calcium_dynamics__Cai;
            const double var_x214 = var_x167 * var_x9;
            const double var_x215 = var_x213 + var_x214 - var_x212;
            const double var_x216 = var_x42 * var_chaste_interface__L_type_Ca_channel_f_gate__f;
            const double var_x403 = var_x216 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
            const double var_x404 = 0.0070159999999999997 * var_chaste_interface__membrane__V;
            const double var_x405 = 0.10684935482199306 * var_x162;
            const double var_x406 = GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted) / HeartConfig::Instance()->GetCapacitance();
            const double var_x407 = var_x14 * var_x3;
            const double var_x408 = var_x14 * var_x5;
            const double var_x409 = var_x163 * var_x6;
            const double var_x410 = var_x11 * var_x14;
            const double var_x411 = var_x110 * var_x177;
            const double var_x412 = var_x14 * var_x74;
            const double var_x413 = 0.433 * var_x144 * (1.0 + 0.59999999999999998 * var_x18);
            const double var_x414 = var_x14 * var_x89;
            const double var_x415 = var_x187 + var_x215 + var_x404 + var_x406 + var_x407 + var_x408 + var_x409 + var_x410 + var_x411 + var_x412 + var_x413 + var_x414 - var_x405 + var_x154 * var_x403;
            const double var_x416 = var_x119;
            const double var_x417 = var_x45 * (var_x126 + var_x124 * var_x174);
            const double var_x418 = var_x45 * (var_x135 + var_x134 * var_x174);
            
            partialF = 0.001 * (((((var_x59) || (var_x31 >= 2.6712338705498262e-6) || (var_x416 * (var_x415 + var_x417 + var_x418) < -150000.0))) && (((var_x32) || (var_x59) || (var_x416 * (var_x415 + var_x127 * var_x403 + var_x136 * var_x403) < -150000.0))) && (((var_x31 >= 1.3356169352749131e-6) || (var_x416 * (var_x212 + var_x405 - var_x187 - var_x213 - var_x214 - var_x404 - var_x406 - var_x407 - var_x408 - var_x409 - var_x410 - var_x411 - var_x412 - var_x413 - var_x414 - var_x417 - var_x418 + var_x45 * (var_x151 - var_x152)) > 150000.0)))) ? (-100500.0) : (-500.0));
        }
        else
        {
            const double y_save = rY[26];
            rY[26] += delta;
            const double temp = EvaluateYDerivative26(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[26])/delta;
            rY[26] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative27(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__calcium_dynamics__APtrack = rY[26];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__APtrack2 = rY[27];
        // Units: dimensionless; Initial value: 0.0
        

        // Mathematics
        const double var_calcium_dynamics__APtrack2_orig_deriv = (((var_chaste_interface__calcium_dynamics__APtrack > 0.17999999999999999) && (var_chaste_interface__calcium_dynamics__APtrack < 0.20000000000000001)) ? (100000.0 - 100500.0 * var_chaste_interface__calcium_dynamics__APtrack2) : (-500.0 * var_chaste_interface__calcium_dynamics__APtrack2)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__APtrack2 = 0.001 * var_calcium_dynamics__APtrack2_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_calcium_dynamics__APtrack2;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative27(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__calcium_dynamics__APtrack = rY[26];
            // Units: dimensionless; Initial value: 0.0
            

            const double var_x419 = (var_chaste_interface__calcium_dynamics__APtrack > 0.17999999999999999) && (var_chaste_interface__calcium_dynamics__APtrack < 0.20000000000000001);
            
            partialF = 0.001 * ((var_x419) ? (-100500.0) : (-500.0));
        }
        else
        {
            const double y_save = rY[27];
            rY[27] += delta;
            const double temp = EvaluateYDerivative27(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[27])/delta;
            rY[27] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative28(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__calcium_dynamics__APtrack = rY[26];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__APtrack3 = rY[28];
        // Units: dimensionless; Initial value: 0.0
        

        // Mathematics
        const double var_calcium_dynamics__APtrack3_orig_deriv = (((var_chaste_interface__calcium_dynamics__APtrack > 0.17999999999999999) && (var_chaste_interface__calcium_dynamics__APtrack < 0.20000000000000001)) ? (100000.0 - 100500.0 * var_chaste_interface__calcium_dynamics__APtrack3) : (-10.0 * var_chaste_interface__calcium_dynamics__APtrack3)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__APtrack3 = 0.001 * var_calcium_dynamics__APtrack3_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_calcium_dynamics__APtrack3;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative28(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__calcium_dynamics__APtrack = rY[26];
            // Units: dimensionless; Initial value: 0.0
            

            const double var_x419 = (var_chaste_interface__calcium_dynamics__APtrack > 0.17999999999999999) && (var_chaste_interface__calcium_dynamics__APtrack < 0.20000000000000001);
            
            partialF = 0.001 * ((var_x419) ? (-100500.0) : (-10.0));
        }
        else
        {
            const double y_save = rY[28];
            rY[28] += delta;
            const double temp = EvaluateYDerivative28(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[28])/delta;
            rY[28] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative29(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000104
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[11];
        // Units: dimensionless; Initial value: 3.289e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[12];
        // Units: dimensionless; Initial value: 0.99975
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = rY[13];
        // Units: dimensionless; Initial value: 0.000983
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = rY[14];
        // Units: dimensionless; Initial value: 0.9942
        double var_chaste_interface__calcium_dynamics__APtrack = rY[26];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__APtrack2 = rY[27];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__Cainfluxtrack = rY[29];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ionic_concentrations__Nai = rY[33];
        // Units: millimolar; Initial value: 10.532
        

        // Mathematics
        const double var_L_type_Ca_channel_f_Ca_gate__Km_Ca = 0.00059999999999999995; // millimolar
        const double var_Na_Ca_exchanger__c2 = 0.0001; // millimolar
        const double var_Na_Ca_exchanger__gamma = 0.14999999999999999; // dimensionless
        const double var_T_type_Ca_channel__g_CaT = 0.050000000000000003; // milliS_per_microF
        const double var_calcium_background_current__g_Cab = 0.003016; // milliS_per_microF
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + var_chaste_interface__calcium_dynamics__Cai / var_L_type_Ca_channel_f_Ca_gate__Km_Ca); // dimensionless
        const double var_ionic_concentrations__A_cap = 1.434e-7; // mm2
        const double var_ionic_concentrations__preplength = 0.001; // mm
        const double var_ionic_concentrations__radius = 0.00011; // mm
        const double var_ionic_concentrations__volume = M_PI * pow(var_ionic_concentrations__radius, 2) * var_ionic_concentrations__preplength; // micro_litre
        const double var_ionic_concentrations__V_myo = 0.68000000000000005 * var_ionic_concentrations__volume; // micro_litre
        const double var_membrane__F = 96485.0; // coulomb_per_mole
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_calcium_background_current__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(mParameters[1] / var_chaste_interface__calcium_dynamics__Cai) / var_membrane__F; // millivolt
        const double var_L_type_Ca_channel__I_CaCa = ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (1.042038e-5 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 1.042038e-5 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 1.042038e-5 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (7.8019226357407252 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(0.074871767015605231 * var_chaste_interface__membrane__V)) * mParameters[4] * var_chaste_interface__membrane__V / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaCa = var_L_type_Ca_channel__I_CaCa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_Na_Ca_exchanger__i_NaCa = (-pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * mParameters[10] * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) / (1.0 + (pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_Na_Ca_exchanger__c2 * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // microA_per_microF
        const double var_T_type_Ca_channel__i_Ca_T = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2) * (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_T_type_Ca_channel__g_CaT * var_chaste_interface__T_type_Ca_channel_g_gate__g; // microA_per_microF
        const double var_calcium_background_current__i_Ca_b = (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_calcium_background_current__g_Cab; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__I_pCa = 1.1499999999999999; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__K_mpCa = 0.00050000000000000001; // millimolar
        const double var_sarcolemmal_calcium_pump__i_p_Ca = var_chaste_interface__calcium_dynamics__Cai * var_sarcolemmal_calcium_pump__I_pCa / (var_chaste_interface__calcium_dynamics__Cai + var_sarcolemmal_calcium_pump__K_mpCa); // microA_per_microF
        const double var_calcium_dynamics__Cainfluxtrack_orig_deriv = ((var_chaste_interface__calcium_dynamics__APtrack > 0.20000000000000001) ? (-0.5 * (-var_Na_Ca_exchanger__i_NaCa + var_L_type_Ca_channel__i_CaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_sarcolemmal_calcium_pump__i_p_Ca) * var_ionic_concentrations__A_cap / (var_ionic_concentrations__V_myo * var_membrane__F)) : ((var_chaste_interface__calcium_dynamics__APtrack2 > 0.01) ? (0) : (-500.0 * var_chaste_interface__calcium_dynamics__Cainfluxtrack))); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Cainfluxtrack = 0.001 * var_calcium_dynamics__Cainfluxtrack_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_calcium_dynamics__Cainfluxtrack;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative29(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
            // Units: millivolt; Initial value: -88.78
            double var_chaste_interface__calcium_dynamics__APtrack = rY[26];
            // Units: dimensionless; Initial value: 0.0
            double var_chaste_interface__calcium_dynamics__APtrack2 = rY[27];
            // Units: dimensionless; Initial value: 0.0
            

            const double var_x31 = fabs(var_chaste_interface__membrane__V);
            const double var_x59 = var_x31 < 1.3356169352749131e-6;
            const double var_x421 = var_chaste_interface__calcium_dynamics__APtrack > 0.20000000000000001;
            const double var_x428 = var_chaste_interface__calcium_dynamics__APtrack2 > 0.01;
            
            partialF = 0.001 * (((((var_x421) || (var_x428))) && (((var_x421) || (var_x428) || (var_x59)))) ? (0) : (-500.0));
        }
        else
        {
            const double y_save = rY[29];
            rY[29] += delta;
            const double temp = EvaluateYDerivative29(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[29])/delta;
            rY[29] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative30(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__calcium_dynamics__Ca_NSR = rY[25];
        // Units: millimolar; Initial value: 1.518
        double var_chaste_interface__calcium_dynamics__APtrack3 = rY[28];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack = rY[30];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack3 = rY[32];
        // Units: dimensionless; Initial value: 0.0
        

        // Mathematics
        const double var_calcium_dynamics__CSQNthresh = 0.69999999999999996; // millimolar
        const double var_calcium_dynamics__K_mCSQN = 0.80000000000000004; // millimolar
        const double var_calcium_dynamics__OVRLDtrack_orig_deriv = (((var_chaste_interface__calcium_dynamics__APtrack3 < 0.37) && (var_chaste_interface__calcium_dynamics__OVRLDtrack3 < 0.37) && (var_calcium_dynamics__CSQNthresh < 1 / (1.0 + var_calcium_dynamics__K_mCSQN / var_chaste_interface__calcium_dynamics__Ca_NSR))) ? (50000.0 - 50000.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack) : (-500.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack = 0.001 * var_calcium_dynamics__OVRLDtrack_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative30(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__calcium_dynamics__Ca_NSR = rY[25];
            // Units: millimolar; Initial value: 1.518
            double var_chaste_interface__calcium_dynamics__APtrack3 = rY[28];
            // Units: dimensionless; Initial value: 0.0
            double var_chaste_interface__calcium_dynamics__OVRLDtrack3 = rY[32];
            // Units: dimensionless; Initial value: 0.0
            

            
            partialF = 0.001 * (((var_chaste_interface__calcium_dynamics__APtrack3 < 0.37) && (var_chaste_interface__calcium_dynamics__OVRLDtrack3 < 0.37) && (1 / (1.0 + 0.80000000000000004 / var_chaste_interface__calcium_dynamics__Ca_NSR) > 0.69999999999999996)) ? (-50000.0) : (-500.0));
        }
        else
        {
            const double y_save = rY[30];
            rY[30] += delta;
            const double temp = EvaluateYDerivative30(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[30])/delta;
            rY[30] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative31(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__calcium_dynamics__OVRLDtrack = rY[30];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack2 = rY[31];
        // Units: dimensionless; Initial value: 0.0
        

        // Mathematics
        const double var_calcium_dynamics__Logicthresh = 0.97999999999999998; // dimensionless
        const double var_calcium_dynamics__OVRLDtrack2_orig_deriv = (((var_calcium_dynamics__Logicthresh > var_chaste_interface__calcium_dynamics__OVRLDtrack2) && (var_calcium_dynamics__Logicthresh < var_chaste_interface__calcium_dynamics__OVRLDtrack)) ? (50000.0 - 50000.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (-500.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack2)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack2 = 0.001 * var_calcium_dynamics__OVRLDtrack2_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack2;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative31(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__calcium_dynamics__OVRLDtrack = rY[30];
            // Units: dimensionless; Initial value: 0.0
            double var_chaste_interface__calcium_dynamics__OVRLDtrack2 = rY[31];
            // Units: dimensionless; Initial value: 0.0
            

            const double var_x429 = var_chaste_interface__calcium_dynamics__OVRLDtrack > 0.97999999999999998;
            
            partialF = 0.001 * (((var_x429) && (var_chaste_interface__calcium_dynamics__OVRLDtrack2 < 0.97999999999999998)) ? (-50000.0) : (-500.0));
        }
        else
        {
            const double y_save = rY[31];
            rY[31] += delta;
            const double temp = EvaluateYDerivative31(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[31])/delta;
            rY[31] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative32(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        double var_chaste_interface__calcium_dynamics__OVRLDtrack = rY[30];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack3 = rY[32];
        // Units: dimensionless; Initial value: 0.0
        

        // Mathematics
        const double var_calcium_dynamics__Logicthresh = 0.97999999999999998; // dimensionless
        const double var_calcium_dynamics__OVRLDtrack3_orig_deriv = (((var_calcium_dynamics__Logicthresh > var_chaste_interface__calcium_dynamics__OVRLDtrack3) && (var_calcium_dynamics__Logicthresh < var_chaste_interface__calcium_dynamics__OVRLDtrack)) ? (50000.0 - 50000.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack3) : (-10.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack3)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack3 = 0.001 * var_calcium_dynamics__OVRLDtrack3_orig_deriv; // 1 / millisecond

        return d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack3;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative32(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            double var_chaste_interface__calcium_dynamics__OVRLDtrack = rY[30];
            // Units: dimensionless; Initial value: 0.0
            double var_chaste_interface__calcium_dynamics__OVRLDtrack3 = rY[32];
            // Units: dimensionless; Initial value: 0.0
            

            const double var_x429 = var_chaste_interface__calcium_dynamics__OVRLDtrack > 0.97999999999999998;
            
            partialF = 0.001 * (((var_x429) && (var_chaste_interface__calcium_dynamics__OVRLDtrack3 < 0.97999999999999998)) ? (-50000.0) : (-10.0));
        }
        else
        {
            const double y_save = rY[32];
            rY[32] += delta;
            const double temp = EvaluateYDerivative32(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[32])/delta;
            rY[32] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative33(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        

        // Mathematics
        const double var_ionic_concentrations__Nai_orig_deriv = 0; // millimolar / second
        const double d_dt_chaste_interface_var_ionic_concentrations__Nai = 0.001 * var_ionic_concentrations__Nai_orig_deriv; // millimolar / millisecond

        return d_dt_chaste_interface_var_ionic_concentrations__Nai;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative33(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            

            
            partialF = 0;
        }
        else
        {
            const double y_save = rY[33];
            rY[33] += delta;
            const double temp = EvaluateYDerivative33(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[33])/delta;
            rY[33] = y_save;
        }
        return partialF;
    }
    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluateYDerivative34(double var_chaste_interface__environment__time_converted, std::vector<double>& rY)
    {
        
        

        // Mathematics
        const double var_ionic_concentrations__Ki_orig_deriv = 0; // millimolar / second
        const double d_dt_chaste_interface_var_ionic_concentrations__Ki = 0.001 * var_ionic_concentrations__Ki_orig_deriv; // millimolar / millisecond

        return d_dt_chaste_interface_var_ionic_concentrations__Ki;
    }

    double Cellclancy_rudy_2002FromCellMLGRL1::EvaluatePartialDerivative34(double var_chaste_interface__environment__time_converted, std::vector<double>& rY, double delta, bool forceNumerical)
    {
        double partialF;
        if (!forceNumerical && this->mUseAnalyticJacobian)
        {
            

            
            partialF = 0;
        }
        else
        {
            const double y_save = rY[34];
            rY[34] += delta;
            const double temp = EvaluateYDerivative34(var_chaste_interface__environment__time_converted, rY);
            partialF = (temp-mEvalF[34])/delta;
            rY[34] = y_save;
        }
        return partialF;
    }

    std::vector<double> Cellclancy_rudy_2002FromCellMLGRL1::ComputeDerivedQuantities(double var_chaste_interface__environment__time_converted, const std::vector<double> & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.78
        double var_chaste_interface__calcium_dynamics__Cai = rY[1];
        // Units: millimolar; Initial value: 0.000104
        double var_chaste_interface__Na_channel_states__P_O_Na = rY[2];
        // Units: dimensionless; Initial value: 3.756e-13
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[11];
        // Units: dimensionless; Initial value: 3.289e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[12];
        // Units: dimensionless; Initial value: 0.99975
        double var_chaste_interface__Kr_channel_states__P_O = rY[15];
        // Units: dimensionless; Initial value: 1.104e-10
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = rY[20];
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = rY[21];
        // Units: dimensionless; Initial value: 0.00447
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = rY[22];
        // Units: dimensionless; Initial value: 0.01167
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = rY[23];
        // Units: dimensionless; Initial value: 0.99998
        double var_chaste_interface__calcium_dynamics__Ca_JSR = rY[24];
        // Units: millimolar; Initial value: 1.516
        double var_chaste_interface__calcium_dynamics__APtrack2 = rY[27];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__Cainfluxtrack = rY[29];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack2 = rY[31];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ionic_concentrations__Nai = rY[33];
        // Units: millimolar; Initial value: 10.532
        double var_chaste_interface__ionic_concentrations__Ki = rY[34];
        // Units: millimolar; Initial value: 140.557
        
        // Mathematics
        const double var_L_type_Ca_channel_f_Ca_gate__Km_Ca = 0.00059999999999999995; // millimolar
        const double var_Na_Ca_exchanger__c2 = 0.0001; // millimolar
        const double var_Na_Ca_exchanger__gamma = 0.14999999999999999; // dimensionless
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + var_chaste_interface__calcium_dynamics__Cai / var_L_type_Ca_channel_f_Ca_gate__Km_Ca); // dimensionless
        const double var_calcium_dynamics__G_rel_overload = 4000.0; // per_second
        const double var_calcium_dynamics__K_mrel = 0.00080000000000000004; // millimolar
        const double var_calcium_dynamics__delta_Ca_ith = 0.00018000000000000001; // millimolar
        const double var_calcium_dynamics__G_rel = ((var_chaste_interface__calcium_dynamics__Cainfluxtrack > var_calcium_dynamics__delta_Ca_ith) ? ((1.0 - var_chaste_interface__calcium_dynamics__APtrack2) * (-var_calcium_dynamics__delta_Ca_ith + var_chaste_interface__calcium_dynamics__Cainfluxtrack) * var_chaste_interface__calcium_dynamics__APtrack2 * mParameters[0] / (-var_calcium_dynamics__delta_Ca_ith + var_chaste_interface__calcium_dynamics__Cainfluxtrack + var_calcium_dynamics__K_mrel)) : ((var_chaste_interface__calcium_dynamics__OVRLDtrack2 > 0) ? ((1.0 - var_chaste_interface__calcium_dynamics__OVRLDtrack2) * var_calcium_dynamics__G_rel_overload * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (0))); // per_second
        const double var_calcium_dynamics__i_rel = (-var_chaste_interface__calcium_dynamics__Cai + var_chaste_interface__calcium_dynamics__Ca_JSR) * var_calcium_dynamics__G_rel; // millimolar_per_second
        const double var_membrane__F = 96485.0; // coulomb_per_mole
        const double var_membrane__I_st_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(mParameters[3] / var_chaste_interface__ionic_concentrations__Nai) / var_membrane__F; // millivolt
        const double var_L_type_Ca_channel__I_CaCa = ((fabs(var_chaste_interface__membrane__V) < 1.3356169352749131e-6) ? (374358.83507802623 * (1.3356169352749131e-6 + var_chaste_interface__membrane__V) * (1.042038e-5 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 1.042038e-5 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 1.042038e-5 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (7.8019226357407252 * (-0.34100000000000003 * mParameters[1] + var_chaste_interface__calcium_dynamics__Cai * exp(0.074871767015605231 * var_chaste_interface__membrane__V)) * mParameters[4] * var_chaste_interface__membrane__V / (-1.0 + exp(0.074871767015605231 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaK = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (1.8621604999999999e-9 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 1.8621604999999999e-9 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 1.8621604999999999e-9 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.00069711623550831479 * (-0.75 * mParameters[2] + 0.75 * var_chaste_interface__ionic_concentrations__Ki * exp(0.037435883507802616 * var_chaste_interface__membrane__V)) * mParameters[4] * var_chaste_interface__membrane__V / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaNa = ((fabs(var_chaste_interface__membrane__V) < 2.6712338705498262e-6) ? (187179.41753901311 * (2.6712338705498262e-6 + var_chaste_interface__membrane__V) * (6.5127375e-9 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(9.9999999999999995e-8)) + 6.5127375e-9 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) - 6.5127375e-9 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(-9.9999999999999995e-8)) * mParameters[4] / (-1.0 + exp(-9.9999999999999995e-8))) : (0.0024381008236689767 * (-0.75 * mParameters[3] + 0.75 * var_chaste_interface__ionic_concentrations__Nai * exp(0.037435883507802616 * var_chaste_interface__membrane__V)) * mParameters[4] * var_chaste_interface__membrane__V / (-1.0 + exp(0.037435883507802616 * var_chaste_interface__membrane__V)))); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaCa = var_L_type_Ca_channel__I_CaCa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaK = var_L_type_Ca_channel__I_CaK * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaNa = var_L_type_Ca_channel__I_CaNa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_CaCa + var_L_type_Ca_channel__i_CaK + var_L_type_Ca_channel__i_CaNa; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L_converted = HeartConfig::Instance()->GetCapacitance() * var_L_type_Ca_channel__i_Ca_L; // uA_per_cm2
        const double var_Na_Ca_exchanger__i_NaCa = (-pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * mParameters[10] * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) / (1.0 + (pow(mParameters[3], 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * mParameters[1] * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_Na_Ca_exchanger__c2 * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // microA_per_microF
        const double var_Na_Ca_exchanger__i_NaCa_converted = HeartConfig::Instance()->GetCapacitance() * var_Na_Ca_exchanger__i_NaCa; // uA_per_cm2
        const double var_fast_sodium_current__i_Na = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__Na_channel_states__P_O_Na * mParameters[6]; // microA_per_microF
        const double var_fast_sodium_current__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na; // uA_per_cm2
        const double var_rapid_delayed_rectifier_potassium_current__E_Kr = var_membrane__R * var_membrane__T * log(mParameters[2] / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_rapid_delayed_rectifier_potassium_current__g_Kr = pow(mParameters[2], 0.58999999999999997) * mParameters[8]; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_rapid_delayed_rectifier_potassium_current__E_Kr + var_chaste_interface__membrane__V) * var_chaste_interface__Kr_channel_states__P_O * var_rapid_delayed_rectifier_potassium_current__g_Kr; // microA_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_rapid_delayed_rectifier_potassium_current__i_Kr; // uA_per_cm2
        const double var_slow_delayed_rectifier_potassium_current__PNaK = 0.018329999999999999; // dimensionless
        const double var_slow_delayed_rectifier_potassium_current__E_Ks = var_membrane__R * var_membrane__T * log((mParameters[3] * var_slow_delayed_rectifier_potassium_current__PNaK + mParameters[2]) / (var_chaste_interface__ionic_concentrations__Nai * var_slow_delayed_rectifier_potassium_current__PNaK + var_chaste_interface__ionic_concentrations__Ki)) / var_membrane__F; // millivolt
        const double var_slow_delayed_rectifier_potassium_current__g_Ks = 0.433 * (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow((1 / var_chaste_interface__calcium_dynamics__Cai), 1.3999999999999999))) * mParameters[9]; // milliS_per_microF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = (-var_slow_delayed_rectifier_potassium_current__E_Ks + var_chaste_interface__membrane__V) * var_slow_delayed_rectifier_potassium_current__g_Ks * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2; // microA_per_microF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks_converted = HeartConfig::Instance()->GetCapacitance() * var_slow_delayed_rectifier_potassium_current__i_Ks; // uA_per_cm2
        const double var_time_independent_potassium_current__E_K = var_membrane__R * var_membrane__T * log(mParameters[2] / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_time_independent_potassium_current__g_K1 = 0.43033148291193518 * sqrt(mParameters[2]) * mParameters[7]; // milliS_per_cm2
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K)); // per_second
        const double var_time_independent_potassium_current_K1_gate__beta_K1 = 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V)); // per_second
        const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_microF
        const double var_time_independent_potassium_current__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_time_independent_potassium_current__i_K1; // uA_per_cm2
        const double var_transient_outward_current__g_to = 1.1000000000000001; // milliS_per_microF
        const double var_transient_outward_current__rvdv = exp(0.01 * var_chaste_interface__membrane__V); // dimensionless
        const double var_transient_outward_current__i_to = pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_transient_outward_current__g_to * mParameters[11] * var_transient_outward_current__rvdv * var_chaste_interface__transient_outward_current_ydv_gate__ydv; // microA_per_microF
        const double var_transient_outward_current__i_to_converted = HeartConfig::Instance()->GetCapacitance() * var_transient_outward_current__i_to; // uA_per_cm2

        std::vector<double> dqs(10);
        dqs[0] = var_calcium_dynamics__i_rel;
        dqs[1] = var_L_type_Ca_channel__i_Ca_L_converted;
        dqs[2] = var_fast_sodium_current__i_Na_converted;
        dqs[3] = var_time_independent_potassium_current__i_K1_converted;
        dqs[4] = var_rapid_delayed_rectifier_potassium_current__i_Kr_converted;
        dqs[5] = var_slow_delayed_rectifier_potassium_current__i_Ks_converted;
        dqs[6] = var_Na_Ca_exchanger__i_NaCa_converted;
        dqs[7] = var_membrane__I_st_converted;
        dqs[8] = var_transient_outward_current__i_to_converted;
        dqs[9] = var_chaste_interface__environment__time_converted;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellclancy_rudy_2002FromCellMLGRL1>::Initialise(void)
{
    this->mSystemName = "clancy_rudy_2002";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-88.78);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.000104);

    // rY[2]:
    this->mVariableNames.push_back("Na_channel_states__P_O_Na");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.756e-13);

    // rY[3]:
    this->mVariableNames.push_back("Na_channel_states__P_C1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(4.744e-10);

    // rY[4]:
    this->mVariableNames.push_back("Na_channel_states__P_C2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.776e-08);

    // rY[5]:
    this->mVariableNames.push_back("Na_channel_states__P_C3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(7.583e-06);

    // rY[6]:
    this->mVariableNames.push_back("Na_channel_states__P_IF");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.147e-11);

    // rY[7]:
    this->mVariableNames.push_back("Na_channel_states__P_IC3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.302e-06);

    // rY[8]:
    this->mVariableNames.push_back("Na_channel_states__P_IC2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.679e-08);

    // rY[9]:
    this->mVariableNames.push_back("Na_channel_states__P_IM1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.736e-12);

    // rY[10]:
    this->mVariableNames.push_back("Na_channel_states__P_IM2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(6.187e-14);

    // rY[11]:
    this->mVariableNames.push_back("L_type_Ca_channel_d_gate__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.289e-06);

    // rY[12]:
    this->mVariableNames.push_back("L_type_Ca_channel_f_gate__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99975);

    // rY[13]:
    this->mVariableNames.push_back("T_type_Ca_channel_b_gate__b");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000983);

    // rY[14]:
    this->mVariableNames.push_back("T_type_Ca_channel_g_gate__g");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9942);

    // rY[15]:
    this->mVariableNames.push_back("Kr_channel_states__P_O");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.104e-10);

    // rY[16]:
    this->mVariableNames.push_back("Kr_channel_states__P_C1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.4083e-08);

    // rY[17]:
    this->mVariableNames.push_back("Kr_channel_states__P_C2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.69e-08);

    // rY[18]:
    this->mVariableNames.push_back("Kr_channel_states__P_C3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(4.949e-06);

    // rY[19]:
    this->mVariableNames.push_back("Kr_channel_states__P_I");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.386e-11);

    // rY[20]:
    this->mVariableNames.push_back("slow_delayed_rectifier_potassium_current_xs1_gate__xs1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00447);

    // rY[21]:
    this->mVariableNames.push_back("slow_delayed_rectifier_potassium_current_xs2_gate__xs2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00447);

    // rY[22]:
    this->mVariableNames.push_back("transient_outward_current_zdv_gate__zdv");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.01167);

    // rY[23]:
    this->mVariableNames.push_back("transient_outward_current_ydv_gate__ydv");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99998);

    // rY[24]:
    this->mVariableNames.push_back("calcium_dynamics__Ca_JSR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.516);

    // rY[25]:
    this->mVariableNames.push_back("calcium_dynamics__Ca_NSR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.518);

    // rY[26]:
    this->mVariableNames.push_back("calcium_dynamics__APtrack");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[27]:
    this->mVariableNames.push_back("calcium_dynamics__APtrack2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[28]:
    this->mVariableNames.push_back("calcium_dynamics__APtrack3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[29]:
    this->mVariableNames.push_back("calcium_dynamics__Cainfluxtrack");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[30]:
    this->mVariableNames.push_back("calcium_dynamics__OVRLDtrack");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[31]:
    this->mVariableNames.push_back("calcium_dynamics__OVRLDtrack2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[32]:
    this->mVariableNames.push_back("calcium_dynamics__OVRLDtrack3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[33]:
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(10.532);

    // rY[34]:
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(140.557);

    // mParameters[0]:
    this->mParameterNames.push_back("SR_release_current_max");
    this->mParameterUnits.push_back("per_second");

    // mParameters[1]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[2]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[3]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[4]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[5]:
    this->mParameterNames.push_back("membrane_capacitance");
    this->mParameterUnits.push_back("microF");

    // mParameters[6]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_cm2");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("microA_per_microF");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
    this->mParameterUnits.push_back("dimensionless");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("SR_release_current");
    this->mDerivedQuantityUnits.push_back("millimolar_per_second");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellclancy_rudy_2002FromCellMLGRL1)

