//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: tentusscher_panfilov_2006_epi
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on Wed Mar 11 16:55:39 2020
//! 
//! <autogenerated>

#include "ten_tusscher_model_2006_epi.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "CardiacNewtonSolver.hpp"
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    boost::shared_ptr<RegularStimulus> Dynamicten_tusscher_model_2006_epiFromCellMLBackwardEuler::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__i_Stim_Start = 10.0; // millisecond
        const double var_chaste_interface__membrane__i_Stim_Period = 1000.0; // millisecond
        const double var_chaste_interface__membrane__i_Stim_PulseDuration = 1.0; // millisecond
        const double var_chaste_interface__membrane__i_Stim_Amplitude =  -52.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__i_Stim_Amplitude),
                var_chaste_interface__membrane__i_Stim_PulseDuration,
                var_chaste_interface__membrane__i_Stim_Period,
                var_chaste_interface__membrane__i_Stim_Start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    double Dynamicten_tusscher_model_2006_epiFromCellMLBackwardEuler::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    
    Dynamicten_tusscher_model_2006_epiFromCellMLBackwardEuler::Dynamicten_tusscher_model_2006_epiFromCellMLBackwardEuler(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractBackwardEulerCardiacCell<7>(
                19,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Dynamicten_tusscher_model_2006_epiFromCellMLBackwardEuler>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
    }
    
    Dynamicten_tusscher_model_2006_epiFromCellMLBackwardEuler::~Dynamicten_tusscher_model_2006_epiFromCellMLBackwardEuler()
    {
    }
    
    double Dynamicten_tusscher_model_2006_epiFromCellMLBackwardEuler::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.23
        double var_chaste_interface__calcium_dynamics__Ca_i = rY[1];
        // Units: millimolar; Initial value: 0.000126
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = rY[2];
        // Units: dimensionless; Initial value: 0.00621
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = rY[3];
        // Units: dimensionless; Initial value: 0.4712
        double var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs = rY[4];
        // Units: dimensionless; Initial value: 0.0095
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[5];
        // Units: dimensionless; Initial value: 0.00172
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[6];
        // Units: dimensionless; Initial value: 0.7444
        double var_chaste_interface__fast_sodium_current_j_gate__j = rY[7];
        // Units: dimensionless; Initial value: 0.7045
        double var_chaste_interface__L_type_Ca_current_d_gate__d = rY[8];
        // Units: dimensionless; Initial value: 3.373e-5
        double var_chaste_interface__L_type_Ca_current_f_gate__f = rY[9];
        // Units: dimensionless; Initial value: 0.7888
        double var_chaste_interface__L_type_Ca_current_f2_gate__f2 = rY[10];
        // Units: dimensionless; Initial value: 0.9755
        double var_chaste_interface__L_type_Ca_current_fCass_gate__fCass = rY[11];
        // Units: dimensionless; Initial value: 0.9953
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[12];
        // Units: dimensionless; Initial value: 0.999998
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[13];
        // Units: dimensionless; Initial value: 2.42e-8
        double var_chaste_interface__calcium_dynamics__Ca_ss = rY[15];
        // Units: millimolar; Initial value: 0.00036
        double var_chaste_interface__sodium_dynamics__Na_i = rY[17];
        // Units: millimolar; Initial value: 8.604
        double var_chaste_interface__potassium_dynamics__K_i = rY[18];
        // Units: millimolar; Initial value: 136.89
        
        const double var_reversal_potentials__E_K = 26.713760659695648 * log(5.4000000000000004 / var_chaste_interface__potassium_dynamics__K_i); // millivolt
        const double var_inward_rectifier_potassium_current__alpha_K1 = 0.10000000000000001 / (1.0 + exp(0.059999999999999998 * ((var_chaste_interface__membrane__V - var_reversal_potentials__E_K) - 200.0))); // dimensionless
        const double var_inward_rectifier_potassium_current__i_K1 = (var_inward_rectifier_potassium_current__alpha_K1 / (var_inward_rectifier_potassium_current__alpha_K1 + (((3.0 * exp(0.00020000000000000001 * ((var_chaste_interface__membrane__V - var_reversal_potentials__E_K) + 100.0))) + exp(0.10000000000000001 * ((var_chaste_interface__membrane__V - var_reversal_potentials__E_K) - 10.0))) / (1.0 + exp( -0.5 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K)))))) * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K) * 5.4050000000000002; // picoA_per_picoF
        const double var_transient_outward_current__g_to = 0.29399999999999998; // nanoS_per_picoF
        const double var_transient_outward_current__i_to = var_transient_outward_current__g_to * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // picoA_per_picoF
        const double var_rapid_time_dependent_potassium_current__g_Kr = 0.153; // nanoS_per_picoF
        const double var_rapid_time_dependent_potassium_current__i_Kr = var_rapid_time_dependent_potassium_current__g_Kr * 1.0 * var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 * var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // picoA_per_picoF
        const double var_slow_time_dependent_potassium_current__i_Ks = 0.39200000000000002 * pow(var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs, 2.0) * (var_chaste_interface__membrane__V - (26.713760659695648 * log(9.6000000000000014 / (var_chaste_interface__potassium_dynamics__K_i + (0.029999999999999999 * var_chaste_interface__sodium_dynamics__Na_i))))); // picoA_per_picoF
        const double var_L_type_Ca_current__g_CaL = 3.9799999999999998e-05; // litre_per_farad_second
        const double var_L_type_Ca_current__i_CaL = (((var_L_type_Ca_current__g_CaL * var_chaste_interface__L_type_Ca_current_d_gate__d * var_chaste_interface__L_type_Ca_current_f_gate__f * var_chaste_interface__L_type_Ca_current_f2_gate__f2 * var_chaste_interface__L_type_Ca_current_fCass_gate__fCass * (var_chaste_interface__membrane__V - 15.0) * 37237684497.486488) * 3.8797490106562429e-07) * ((0.25 * var_chaste_interface__calcium_dynamics__Ca_ss * exp(((var_chaste_interface__membrane__V - 15.0) * 192970.68299999999) * 3.8797490106562429e-07)) - 2.0)) / (exp(((var_chaste_interface__membrane__V - 15.0) * 192970.68299999999) * 3.8797490106562429e-07) - 1.0); // picoA_per_picoF
        const double var_sodium_potassium_pump_current__i_NaK = ((2.2983750000000001 * var_chaste_interface__sodium_dynamics__Na_i) / (var_chaste_interface__sodium_dynamics__Na_i + 40.0)) / (1.0 + (0.1245 * exp((var_chaste_interface__membrane__V *  -9648.5341499999995) * 3.8797490106562429e-07)) + (0.035299999999999998 * exp(((-var_chaste_interface__membrane__V) * 96485.341499999995) * 3.8797490106562429e-07))); // picoA_per_picoF
        const double var_fast_sodium_current__g_Na = 14.837999999999999; // nanoS_per_picoF
        const double var_reversal_potentials__E_Na = 26.713760659695648 * log(140.0 / var_chaste_interface__sodium_dynamics__Na_i); // millivolt
        const double var_fast_sodium_current__i_Na = var_fast_sodium_current__g_Na * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3.0) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j * (var_chaste_interface__membrane__V - var_reversal_potentials__E_Na); // picoA_per_picoF
        const double var_sodium_background_current__i_b_Na = 0.00029 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_Na); // picoA_per_picoF
        const double var_sodium_calcium_exchanger_current__i_NaCa = (1000.0 * ((exp((var_chaste_interface__membrane__V * 33769.869524999995) * 3.8797490106562429e-07) * pow(var_chaste_interface__sodium_dynamics__Na_i, 3.0) * 2.0) - (exp((var_chaste_interface__membrane__V *  -62715.471975) * 3.8797490106562429e-07) * var_chaste_interface__calcium_dynamics__Ca_i * 6860000.0))) / ((1.0 + (0.10000000000000001 * exp((var_chaste_interface__membrane__V *  -62715.471975) * 3.8797490106562429e-07))) * 11539055.9375); // picoA_per_picoF
        const double var_calcium_background_current__i_b_Ca = 0.00059199999999999997 * (var_chaste_interface__membrane__V - (13.356880329847824 * log(2.0 / var_chaste_interface__calcium_dynamics__Ca_i))); // picoA_per_picoF
        const double var_potassium_pump_current__i_p_K = (0.0146 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K)) / (1.0 + exp((25.0 - var_chaste_interface__membrane__V) * 0.16722408026755853)); // picoA_per_picoF
        const double var_calcium_pump_current__i_p_Ca = (0.12379999999999999 * var_chaste_interface__calcium_dynamics__Ca_i) / (var_chaste_interface__calcium_dynamics__Ca_i + 0.00050000000000000001); // picoA_per_picoF
        const double var_chaste_interface__i_ionic = (var_inward_rectifier_potassium_current__i_K1 + var_transient_outward_current__i_to + var_rapid_time_dependent_potassium_current__i_Kr + var_slow_time_dependent_potassium_current__i_Ks + var_L_type_Ca_current__i_CaL + var_sodium_potassium_pump_current__i_NaK + var_fast_sodium_current__i_Na + var_sodium_background_current__i_b_Na + var_sodium_calcium_exchanger_current__i_NaCa + var_calcium_background_current__i_b_Ca + var_potassium_pump_current__i_p_K + var_calcium_pump_current__i_p_Ca) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Dynamicten_tusscher_model_2006_epiFromCellMLBackwardEuler::ComputeResidual(double var_chaste_interface__environment__time, const double rCurrentGuess[7], double rResidual[7])
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.23
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = rY[2];
        // Units: dimensionless; Initial value: 0.00621
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = rY[3];
        // Units: dimensionless; Initial value: 0.4712
        double var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs = rY[4];
        // Units: dimensionless; Initial value: 0.0095
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[5];
        // Units: dimensionless; Initial value: 0.00172
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[6];
        // Units: dimensionless; Initial value: 0.7444
        double var_chaste_interface__fast_sodium_current_j_gate__j = rY[7];
        // Units: dimensionless; Initial value: 0.7045
        double var_chaste_interface__L_type_Ca_current_d_gate__d = rY[8];
        // Units: dimensionless; Initial value: 3.373e-5
        double var_chaste_interface__L_type_Ca_current_f_gate__f = rY[9];
        // Units: dimensionless; Initial value: 0.7888
        double var_chaste_interface__L_type_Ca_current_f2_gate__f2 = rY[10];
        // Units: dimensionless; Initial value: 0.9755
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[12];
        // Units: dimensionless; Initial value: 0.999998
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[13];
        // Units: dimensionless; Initial value: 2.42e-8
        
        //output_nonlinear_state_assignments
        double var_chaste_interface__L_type_Ca_current_fCass_gate__fCass = rCurrentGuess[0];
        double var_chaste_interface__calcium_dynamics__Ca_SR = rCurrentGuess[1];
        double var_chaste_interface__calcium_dynamics__Ca_i = rCurrentGuess[2];
        double var_chaste_interface__calcium_dynamics__Ca_ss = rCurrentGuess[3];
        double var_chaste_interface__calcium_dynamics__R_prime = rCurrentGuess[4];
        double var_chaste_interface__potassium_dynamics__K_i = rCurrentGuess[5];
        double var_chaste_interface__sodium_dynamics__Na_i = rCurrentGuess[6];
        
        //output_equations
        const double var_membrane__Cm = 0.185; // microF
        const double var_reversal_potentials__E_K = 26.713760659695648 * log(5.4000000000000004 / var_chaste_interface__potassium_dynamics__K_i); // millivolt
        const double var_inward_rectifier_potassium_current__alpha_K1 = 0.10000000000000001 / (1.0 + exp(0.059999999999999998 * ((var_chaste_interface__membrane__V - var_reversal_potentials__E_K) - 200.0))); // dimensionless
        const double var_inward_rectifier_potassium_current__i_K1 = (var_inward_rectifier_potassium_current__alpha_K1 / (var_inward_rectifier_potassium_current__alpha_K1 + (((3.0 * exp(0.00020000000000000001 * ((var_chaste_interface__membrane__V - var_reversal_potentials__E_K) + 100.0))) + exp(0.10000000000000001 * ((var_chaste_interface__membrane__V - var_reversal_potentials__E_K) - 10.0))) / (1.0 + exp( -0.5 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K)))))) * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K) * 5.4050000000000002; // picoA_per_picoF
        const double var_transient_outward_current__g_to = 0.29399999999999998; // nanoS_per_picoF
        const double var_transient_outward_current__i_to = var_transient_outward_current__g_to * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // picoA_per_picoF
        const double var_rapid_time_dependent_potassium_current__g_Kr = 0.153; // nanoS_per_picoF
        const double var_rapid_time_dependent_potassium_current__i_Kr = var_rapid_time_dependent_potassium_current__g_Kr * 1.0 * var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 * var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // picoA_per_picoF
        const double var_slow_time_dependent_potassium_current__i_Ks = 0.39200000000000002 * pow(var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs, 2.0) * (var_chaste_interface__membrane__V - (26.713760659695648 * log(9.6000000000000014 / (var_chaste_interface__potassium_dynamics__K_i + (0.029999999999999999 * var_chaste_interface__sodium_dynamics__Na_i))))); // picoA_per_picoF
        const double var_L_type_Ca_current__g_CaL = 3.9799999999999998e-05; // litre_per_farad_second
        const double var_L_type_Ca_current__i_CaL = (((var_L_type_Ca_current__g_CaL * var_chaste_interface__L_type_Ca_current_d_gate__d * var_chaste_interface__L_type_Ca_current_f_gate__f * var_chaste_interface__L_type_Ca_current_f2_gate__f2 * var_chaste_interface__L_type_Ca_current_fCass_gate__fCass * (var_chaste_interface__membrane__V - 15.0) * 37237684497.486488) * 3.8797490106562429e-07) * ((0.25 * var_chaste_interface__calcium_dynamics__Ca_ss * exp(((var_chaste_interface__membrane__V - 15.0) * 192970.68299999999) * 3.8797490106562429e-07)) - 2.0)) / (exp(((var_chaste_interface__membrane__V - 15.0) * 192970.68299999999) * 3.8797490106562429e-07) - 1.0); // picoA_per_picoF
        const double var_sodium_potassium_pump_current__i_NaK = ((2.2983750000000001 * var_chaste_interface__sodium_dynamics__Na_i) / (var_chaste_interface__sodium_dynamics__Na_i + 40.0)) / (1.0 + (0.1245 * exp((var_chaste_interface__membrane__V *  -9648.5341499999995) * 3.8797490106562429e-07)) + (0.035299999999999998 * exp(((-var_chaste_interface__membrane__V) * 96485.341499999995) * 3.8797490106562429e-07))); // picoA_per_picoF
        const double var_fast_sodium_current__g_Na = 14.837999999999999; // nanoS_per_picoF
        const double var_reversal_potentials__E_Na = 26.713760659695648 * log(140.0 / var_chaste_interface__sodium_dynamics__Na_i); // millivolt
        const double var_fast_sodium_current__i_Na = var_fast_sodium_current__g_Na * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3.0) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j * (var_chaste_interface__membrane__V - var_reversal_potentials__E_Na); // picoA_per_picoF
        const double var_sodium_background_current__i_b_Na = 0.00029 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_Na); // picoA_per_picoF
        const double var_sodium_calcium_exchanger_current__i_NaCa = (1000.0 * ((exp((var_chaste_interface__membrane__V * 33769.869524999995) * 3.8797490106562429e-07) * pow(var_chaste_interface__sodium_dynamics__Na_i, 3.0) * 2.0) - (exp((var_chaste_interface__membrane__V *  -62715.471975) * 3.8797490106562429e-07) * var_chaste_interface__calcium_dynamics__Ca_i * 6860000.0))) / ((1.0 + (0.10000000000000001 * exp((var_chaste_interface__membrane__V *  -62715.471975) * 3.8797490106562429e-07))) * 11539055.9375); // picoA_per_picoF
        const double var_calcium_background_current__i_b_Ca = 0.00059199999999999997 * (var_chaste_interface__membrane__V - (13.356880329847824 * log(2.0 / var_chaste_interface__calcium_dynamics__Ca_i))); // picoA_per_picoF
        const double var_potassium_pump_current__i_p_K = (0.0146 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K)) / (1.0 + exp((25.0 - var_chaste_interface__membrane__V) * 0.16722408026755853)); // picoA_per_picoF
        const double var_calcium_pump_current__i_p_Ca = (0.12379999999999999 * var_chaste_interface__calcium_dynamics__Ca_i) / (var_chaste_interface__calcium_dynamics__Ca_i + 0.00050000000000000001); // picoA_per_picoF
        const double var_chaste_interface__membrane__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
        const double var_calcium_dynamics__kcasr = 2.5 - (1.5 / (1.0 + pow(1.5 / var_chaste_interface__calcium_dynamics__Ca_SR, 2.0))); // dimensionless
        const double var_calcium_dynamics__k1 = 0.14999999999999999 / var_calcium_dynamics__kcasr; // per_millimolar2_per_millisecond
        const double var_calcium_dynamics__i_rel = 0.10199999999999999 * ((var_calcium_dynamics__k1 * pow(var_chaste_interface__calcium_dynamics__Ca_ss, 2.0) * var_chaste_interface__calcium_dynamics__R_prime) / (0.059999999999999998 + (var_calcium_dynamics__k1 * pow(var_chaste_interface__calcium_dynamics__Ca_ss, 2.0)))) * (var_chaste_interface__calcium_dynamics__Ca_SR - var_chaste_interface__calcium_dynamics__Ca_ss); // millimolar_per_millisecond
        const double var_calcium_dynamics__i_up = 0.0063749999999999996 / (1.0 + (6.2499999999999997e-08 / pow(var_chaste_interface__calcium_dynamics__Ca_i, 2.0))); // millimolar_per_millisecond
        const double var_calcium_dynamics__i_leak = 0.00036000000000000002 * (var_chaste_interface__calcium_dynamics__Ca_SR - var_chaste_interface__calcium_dynamics__Ca_i); // millimolar_per_millisecond
        const double var_calcium_dynamics__i_xfer = 0.0038 * (var_chaste_interface__calcium_dynamics__Ca_ss - var_chaste_interface__calcium_dynamics__Ca_i); // millimolar_per_millisecond
        const double d_dt_chaste_interface__calcium_dynamics__Ca_i = (1.0 / (1.0 + (0.00020000000000000001 / pow(var_chaste_interface__calcium_dynamics__Ca_i + 0.001, 2.0)))) * (((((var_calcium_dynamics__i_leak - var_calcium_dynamics__i_up) * 0.0010939999999999999) * 60.960741282614002) + var_calcium_dynamics__i_xfer) - ((1.0 * ((var_calcium_background_current__i_b_Ca + var_calcium_pump_current__i_p_Ca) - (2.0 * var_sodium_calcium_exchanger_current__i_NaCa)) * var_membrane__Cm) * 0.00031590674984870111)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__L_type_Ca_current_fCass_gate__fCass = (((0.59999999999999998 / (1.0 + pow(var_chaste_interface__calcium_dynamics__Ca_ss * 20.0, 2.0))) + 0.40000000000000002) - var_chaste_interface__L_type_Ca_current_fCass_gate__fCass) / ((80.0 / (1.0 + pow(var_chaste_interface__calcium_dynamics__Ca_ss * 20.0, 2.0))) + 2.0); // per_millisecond
        const double d_dt_chaste_interface__calcium_dynamics__Ca_SR = (1.0 / (1.0 + (3.0 / pow(var_chaste_interface__calcium_dynamics__Ca_SR + 0.29999999999999999, 2.0)))) * (var_calcium_dynamics__i_up - (var_calcium_dynamics__i_rel + var_calcium_dynamics__i_leak)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__calcium_dynamics__Ca_ss = (1.0 / (1.0 + (0.0001 / pow(var_chaste_interface__calcium_dynamics__Ca_ss + 0.00025000000000000001, 2.0)))) * (((( -1.0 * var_L_type_Ca_current__i_CaL * var_membrane__Cm) * 0.094772024954610345) + ((var_calcium_dynamics__i_rel * 0.0010939999999999999) * 18288.2223847842)) - ((var_calcium_dynamics__i_xfer * 0.016403999999999998) * 18288.2223847842)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__calcium_dynamics__R_prime = ((-(0.044999999999999998 * var_calcium_dynamics__kcasr)) * var_chaste_interface__calcium_dynamics__Ca_ss * var_chaste_interface__calcium_dynamics__R_prime) + (0.0050000000000000001 * (1.0 - var_chaste_interface__calcium_dynamics__R_prime)); // per_millisecond
        const double d_dt_chaste_interface__sodium_dynamics__Na_i = (( -1.0 * (var_fast_sodium_current__i_Na + var_sodium_background_current__i_b_Na + (3.0 * var_sodium_potassium_pump_current__i_NaK) + (3.0 * var_sodium_calcium_exchanger_current__i_NaCa))) * 0.00063181349969740222) * var_membrane__Cm; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__potassium_dynamics__K_i = (( -1.0 * ((var_inward_rectifier_potassium_current__i_K1 + var_transient_outward_current__i_to + var_rapid_time_dependent_potassium_current__i_Kr + var_slow_time_dependent_potassium_current__i_Ks + var_potassium_pump_current__i_p_K + (var_chaste_interface__membrane__i_Stim / HeartConfig::Instance()->GetCapacitance())) - (2.0 * var_sodium_potassium_pump_current__i_NaK))) * 0.00063181349969740222) * var_membrane__Cm; // 'millimole per litre per millisecond'
        
        rResidual[2] = rCurrentGuess[2] - rY[1] - mDt*d_dt_chaste_interface__calcium_dynamics__Ca_i;
        rResidual[0] = rCurrentGuess[0] - rY[11] - mDt*d_dt_chaste_interface__L_type_Ca_current_fCass_gate__fCass;
        rResidual[1] = rCurrentGuess[1] - rY[14] - mDt*d_dt_chaste_interface__calcium_dynamics__Ca_SR;
        rResidual[3] = rCurrentGuess[3] - rY[15] - mDt*d_dt_chaste_interface__calcium_dynamics__Ca_ss;
        rResidual[4] = rCurrentGuess[4] - rY[16] - mDt*d_dt_chaste_interface__calcium_dynamics__R_prime;
        rResidual[6] = rCurrentGuess[6] - rY[17] - mDt*d_dt_chaste_interface__sodium_dynamics__Na_i;
        rResidual[5] = rCurrentGuess[5] - rY[18] - mDt*d_dt_chaste_interface__potassium_dynamics__K_i;
    }
    
    void Dynamicten_tusscher_model_2006_epiFromCellMLBackwardEuler::ComputeJacobian(double var_chaste_interface__environment__time, const double rCurrentGuess[7], double rJacobian[7][7])
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.23
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = rY[2];
        // Units: dimensionless; Initial value: 0.00621
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = rY[3];
        // Units: dimensionless; Initial value: 0.4712
        double var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs = rY[4];
        // Units: dimensionless; Initial value: 0.0095
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[5];
        // Units: dimensionless; Initial value: 0.00172
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[6];
        // Units: dimensionless; Initial value: 0.7444
        double var_chaste_interface__fast_sodium_current_j_gate__j = rY[7];
        // Units: dimensionless; Initial value: 0.7045
        double var_chaste_interface__L_type_Ca_current_d_gate__d = rY[8];
        // Units: dimensionless; Initial value: 3.373e-5
        double var_chaste_interface__L_type_Ca_current_f_gate__f = rY[9];
        // Units: dimensionless; Initial value: 0.7888
        double var_chaste_interface__L_type_Ca_current_f2_gate__f2 = rY[10];
        // Units: dimensionless; Initial value: 0.9755
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[12];
        // Units: dimensionless; Initial value: 0.999998
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[13];
        // Units: dimensionless; Initial value: 2.42e-8
        
        double var_chaste_interface__L_type_Ca_current_fCass_gate__fCass = rCurrentGuess[0];
        double var_chaste_interface__calcium_dynamics__Ca_SR = rCurrentGuess[1];
        double var_chaste_interface__calcium_dynamics__Ca_i = rCurrentGuess[2];
        double var_chaste_interface__calcium_dynamics__Ca_ss = rCurrentGuess[3];
        double var_chaste_interface__calcium_dynamics__R_prime = rCurrentGuess[4];
        double var_chaste_interface__potassium_dynamics__K_i = rCurrentGuess[5];
        double var_chaste_interface__sodium_dynamics__Na_i = rCurrentGuess[6];
        
        const double var_chaste_interface__environment__dt = mDt;

        const double var_membrane__Cm = 0.185; // microF
        const double var_transient_outward_current__g_to = 0.29399999999999998; // nanoS_per_picoF
        const double var_rapid_time_dependent_potassium_current__g_Kr = 0.153; // nanoS_per_picoF
        const double var_L_type_Ca_current__g_CaL = 3.9799999999999998e-05; // litre_per_farad_second
        const double var_fast_sodium_current__g_Na = 14.837999999999999; // nanoS_per_picoF
        const double var_t4 = 1.0 / var_chaste_interface__potassium_dynamics__K_i; // dimensionless
        const double var_t8 = 26.713760659695648 * log(5.4000000000000004 * var_t4); // dimensionless
        const double var_t11 = exp(((0.059999999999999998 * var_chaste_interface__membrane__V) - (0.059999999999999998 * var_t8)) - 12.0); // dimensionless
        const double var_t12 = 1.0 + var_t11; // dimensionless
        const double var_t14 = 1.0 / pow(var_t12, 2.0); // dimensionless
        const double var_t15 = 5.4050000000000002 * var_t14; // dimensionless
        const double var_t16 = 1.0 / var_t12; // dimensionless
        const double var_t21 = exp(((0.00020000000000000001 * var_chaste_interface__membrane__V) - (0.00020000000000000001 * var_t8)) + 0.02); // dimensionless
        const double var_t23 = 0.10000000000000001 * var_chaste_interface__membrane__V; // dimensionless
        const double var_t26 = exp((var_t23 - (0.10000000000000001 * var_t8)) - 1.0); // dimensionless
        const double var_t27 = (3.0 * var_t21) + var_t26; // dimensionless
        const double var_t31 = exp(( -0.5 * var_chaste_interface__membrane__V) + (0.5 * var_t8)); // dimensionless
        const double var_t32 = 1.0 + var_t31; // dimensionless
        const double var_t33 = 1.0 / var_t32; // dimensionless
        const double var_t35 = (0.10000000000000001 * var_t16) + (var_t27 * var_t33); // dimensionless
        const double var_t36 = 1.0 / var_t35; // dimensionless
        const double var_t39 = var_chaste_interface__membrane__V - var_t8; // dimensionless
        const double var_t40 = 2.3237900077244502 * var_t39; // dimensionless
        const double var_t44 = 5.4050000000000002 * var_t16; // dimensionless
        const double var_t47 = var_t44 / pow(var_t35, 2.0); // dimensionless
        const double var_t56 = var_t27 / pow(var_t32, 2.0); // dimensionless
        const double var_t63 = var_t36 * 2.3237900077244502; // dimensionless
        const double var_t64 = var_t44 * var_t63; // dimensionless
        const double var_t66 = var_transient_outward_current__g_to * var_chaste_interface__transient_outward_current_r_gate__r; // dimensionless
        const double var_t67 = var_t66 * var_chaste_interface__transient_outward_current_s_gate__s; // dimensionless
        const double var_t70 = ((var_rapid_time_dependent_potassium_current__g_Kr * 2.3237900077244502) * var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1) * var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2; // dimensionless
        const double var_t73 = 0.39200000000000002 * pow(var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs, 2.0); // dimensionless
        const double var_t74 = var_L_type_Ca_current__g_CaL * var_chaste_interface__L_type_Ca_current_d_gate__d; // dimensionless
        const double var_t75 = var_chaste_interface__L_type_Ca_current_f_gate__f * var_chaste_interface__L_type_Ca_current_f2_gate__f2; // dimensionless
        const double var_t82 = var_chaste_interface__membrane__V - 15.0; // dimensionless
        const double var_t87 = exp(((2.0 * var_t82) * 96485.341499999995) * 3.8797490106562429e-07); // dimensionless
        const double var_t88 = var_chaste_interface__calcium_dynamics__Ca_ss * var_t87; // dimensionless
        const double var_t90 = (0.25 * var_t88) - 2.0; // dimensionless
        const double var_t92 = var_t87 - 1.0; // dimensionless
        const double var_t93 = 1.0 / var_t92; // dimensionless
        const double var_t98 = var_t74 * var_chaste_interface__L_type_Ca_current_f_gate__f; // dimensionless
        const double var_t99 = var_chaste_interface__L_type_Ca_current_f2_gate__f2 * var_chaste_interface__L_type_Ca_current_fCass_gate__fCass; // dimensionless
        const double var_t101 = var_t98 * (var_t99 * var_t82); // dimensionless
        const double var_t124 = var_chaste_interface__sodium_dynamics__Na_i + 40.0; // dimensionless
        const double var_t125 = 1.0 / var_t124; // dimensionless
        const double var_t128 = (var_chaste_interface__membrane__V * 96485.341499999995) * 3.8797490106562429e-07; // dimensionless
        const double var_t130 = exp( -0.10000000000000001 * var_t128); // dimensionless
        const double var_t132 = exp(-var_t128); // dimensionless
        const double var_t134 = (1.0 + (0.1245 * var_t130)) + (0.035299999999999998 * var_t132); // dimensionless
        const double var_t148 = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 2.0); // dimensionless
        const double var_t152 = ((var_fast_sodium_current__g_Na * var_t148) * var_chaste_interface__fast_sodium_current_m_gate__m) * (var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j); // dimensionless
        const double var_t158 = exp((0.34999999999999998 * var_chaste_interface__membrane__V) * 0.037433890822745473); // dimensionless
        const double var_t160 = pow(var_chaste_interface__sodium_dynamics__Na_i, 2.0); // dimensionless
        const double var_t161 = var_t160 * var_chaste_interface__sodium_dynamics__Na_i; // dimensionless
        const double var_t170 = exp(( -0.65000000000000002 * var_chaste_interface__membrane__V) * 0.037433890822745473); // dimensionless
        const double var_t175 = ((var_t170 * 2744000.0) * var_chaste_interface__calcium_dynamics__Ca_i) * 2.5; // dimensionless
        const double var_t187 = 1.0 + (0.10000000000000001 * var_t170); // dimensionless
        const double var_t188 = 1.0 / var_t187; // dimensionless
        const double var_t189 = 8.666220229942447e-08 * var_t188; // dimensionless
        const double var_t194 = 1000.0 * (((var_t158 * var_t161) * 2.0) - var_t175); // dimensionless
        const double var_t206 = exp(4.1806020080000001 - (0.16722408029999999 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_t207 = 1.0 + var_t206; // dimensionless
        const double var_t208 = 1.0 / var_t207; // dimensionless
        const double var_t228 = 1.0 / (var_chaste_interface__potassium_dynamics__K_i + (0.029999999999999999 * var_chaste_interface__sodium_dynamics__Na_i)); // dimensionless
        const double var_t237 = 1.0 / var_chaste_interface__sodium_dynamics__Na_i; // dimensionless
        const double var_t269 = 1000.0 * var_t170; // dimensionless
        const double var_t272 = 0.29585798816568049 * var_t188; // dimensionless
        const double var_t277 = 1.0 / var_chaste_interface__calcium_dynamics__Ca_i; // dimensionless
        const double var_t281 = var_chaste_interface__calcium_dynamics__Ca_i + 0.00050000000000000001; // dimensionless
        const double var_t282 = 1.0 / var_t281; // dimensionless
        const double var_t284 = 0.12379999999999999 * var_chaste_interface__calcium_dynamics__Ca_i; // dimensionless
        const double var_t296 = var_t73 * 8314.4719999999998; // dimensionless
        const double var_t301 = 1.0 / var_t134; // dimensionless
        const double var_t303 = (2.2983750000000001 * var_t125) * var_t301; // dimensionless
        const double var_t308 = ((2.2983750000000001 * var_chaste_interface__sodium_dynamics__Na_i) / pow(var_t124, 2.0)) * var_t301; // dimensionless
        const double var_t324 = 1.0364268649036186e-05 * var_t4; // dimensionless
        const double var_t325 = var_t324 * var_t11; // dimensionless
        const double var_t350 = 2577486.3199999998 * var_t324; // dimensionless
        const double var_t795 = pow(var_chaste_interface__calcium_dynamics__Ca_ss, 2.0); // dimensionless
        const double var_t797 = 1.0 + (400.0 * var_t795); // dimensionless
        const double var_t798 = 1.0 / var_t797; // dimensionless
        const double var_t800 = (80.0 * var_t798) + 2.0; // dimensionless
        const double var_t801 = 1.0 / var_t800; // dimensionless
        const double var_t804 = (1.0 / pow(var_t797, 2.0)) * var_chaste_interface__calcium_dynamics__Ca_ss; // dimensionless
        const double var_t880 = var_chaste_interface__calcium_dynamics__Ca_i + 0.001; // dimensionless
        const double var_t881 = pow(var_t880, 2.0); // dimensionless
        const double var_t884 = 1.0 + (0.00020000000000000001 / var_t881); // dimensionless
        const double var_t885 = 1.0 / var_t884; // dimensionless
        const double var_t892 = (var_membrane__Cm * 60.960741282614002) * 1.0364268649036186e-05; // dimensionless
        const double var_t898 = 0.00036000000000000002 * (var_chaste_interface__calcium_dynamics__Ca_SR - var_chaste_interface__calcium_dynamics__Ca_i); // dimensionless
        const double var_t900 = pow(var_chaste_interface__calcium_dynamics__Ca_i, 2.0); // dimensionless
        const double var_t903 = 1.0 + (6.2499999999999997e-08 / var_t900); // dimensionless
        const double var_t905 = 0.0063749999999999996 / var_t903; // dimensionless
        const double var_t910 = 0.0038 * (var_chaste_interface__calcium_dynamics__Ca_ss - var_chaste_interface__calcium_dynamics__Ca_i); // dimensionless
        const double var_t941 =  -0.00036000000000000002 - ((((0.012749999999999999 / pow(var_t903, 2.0)) * 6.2499999999999997e-08) / var_t900) / var_chaste_interface__calcium_dynamics__Ca_i); // dimensionless
        const double var_t964 = var_chaste_interface__calcium_dynamics__Ca_SR + 0.29999999999999999; // dimensionless
        const double var_t965 = pow(var_t964, 2.0); // dimensionless
        const double var_t968 = 1.0 + (3.0 / var_t965); // dimensionless
        const double var_t969 = 1.0 / var_t968; // dimensionless
        const double var_t976 = pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2.0); // dimensionless
        const double var_t979 = 1.0 + (2.25 / var_t976); // dimensionless
        const double var_t982 = 2.5 - (1.5 / var_t979); // dimensionless
        const double var_t983 = 1.0 / var_t982; // dimensionless
        const double var_t984 = 0.015299999999999998 * var_t983; // dimensionless
        const double var_t985 = var_t795 * var_chaste_interface__calcium_dynamics__R_prime; // dimensionless
        const double var_t986 = 0.14999999999999999 * var_t983; // dimensionless
        const double var_t988 = 0.059999999999999998 + (var_t986 * var_t795); // dimensionless
        const double var_t989 = 1.0 / var_t988; // dimensionless
        const double var_t990 = var_chaste_interface__calcium_dynamics__Ca_SR - var_chaste_interface__calcium_dynamics__Ca_ss; // dimensionless
        const double var_t991 = var_t989 * var_t990; // dimensionless
        const double var_t1001 = pow(var_t982, 2.0); // dimensionless
        const double var_t1002 = 1.0 / var_t1001; // dimensionless
        const double var_t1008 = 1.0 / pow(var_t979, 2.0); // dimensionless
        const double var_t1011 = (1.0 / var_t976) / var_chaste_interface__calcium_dynamics__Ca_SR; // dimensionless
        const double var_t1012 = (var_t1008 * 2.25) * var_t1011; // dimensionless
        const double var_t1019 = (1.0 / var_t1001) / var_t982; // dimensionless
        const double var_t1020 = pow(var_t795, 2.0); // dimensionless
        const double var_t1025 = 1.0 / pow(var_t988, 2.0); // dimensionless
        const double var_t1026 = var_t1025 * var_t990; // dimensionless
        const double var_t1031 = var_t985 * var_t989; // dimensionless
        const double var_t1032 = var_t984 * var_t1031; // dimensionless
        const double var_t1036 = var_chaste_interface__calcium_dynamics__Ca_ss * var_chaste_interface__calcium_dynamics__R_prime; // dimensionless
        const double var_t1041 = var_t795 * var_chaste_interface__calcium_dynamics__Ca_ss; // dimensionless
        const double var_t1050 = var_t983 * var_t795; // dimensionless
        const double var_t1054 = var_chaste_interface__calcium_dynamics__Ca_ss + 0.00025000000000000001; // dimensionless
        const double var_t1055 = pow(var_t1054, 2.0); // dimensionless
        const double var_t1058 = 1.0 + (0.0001 / var_t1055); // dimensionless
        const double var_t1059 = 1.0 / var_t1058; // dimensionless
        const double var_t1074 = var_membrane__Cm * 18288.2223847842; // dimensionless
        const double var_t1093 = ((0.037433890822745473 * var_t90) * var_t93) * var_t1074; // dimensionless
        const double var_t1112 = (var_t990 * 0.0010939999999999999) * 18288.2223847842; // dimensionless
        const double var_t1114 = 2.25 * var_t1011; // dimensionless
        const double var_t1116 = ((var_t1112 * 1.5) * var_t1008) * var_t1114; // dimensionless
        const double var_t1125 = 0.015299999999999998 * var_t1050; // dimensionless
        const double var_t1126 = var_chaste_interface__calcium_dynamics__R_prime * var_t989; // dimensionless
        const double var_t1129 = ((var_t1125 * var_t1126) * 0.0010939999999999999) * 18288.2223847842; // dimensionless
        const double var_t1136 = var_t1126 * var_t1112; // dimensionless
        const double var_t1174 = 0.044999999999999998 * var_t982; // dimensionless
        const double var_t1183 = 1.0364268649036186e-05 * var_membrane__Cm; // dimensionless
        
        rJacobian[0][0] = 1.0 - (var_chaste_interface__environment__dt * (-var_t801));
        rJacobian[0][1] = 0.0;
        rJacobian[0][2] = 0.0;
        rJacobian[0][3] = -(var_chaste_interface__environment__dt * ((( -480.0 * var_t804) * var_t801) + (((64000.0 * (((0.59999999999999998 * var_t798) + 0.40000000000000002) - var_chaste_interface__L_type_Ca_current_fCass_gate__fCass)) / pow(var_t800, 2.0)) * var_t804)));
        rJacobian[0][4] = 0.0;
        rJacobian[0][5] = 0.0;
        rJacobian[0][6] = 0.0;
        rJacobian[1][0] = 0.0;
        rJacobian[1][1] = 1.0 - (var_chaste_interface__environment__dt * ((((((2.0 / pow(var_t968, 2.0)) * ((var_t905 - ((var_t984 * var_t985) * var_t991)) - var_t898)) * 3.0) / var_t965) / var_t964) + (var_t969 * ((((((((( -0.030599999999999995 * var_t1002) * var_t795) * var_chaste_interface__calcium_dynamics__R_prime) * var_t991) * 1.5) * var_t1012) + ((((((0.0045899999999999995 * var_t1019) * var_t1020) * var_chaste_interface__calcium_dynamics__R_prime) * var_t1026) * 1.5) * var_t1012)) - var_t1032) - 0.00036000000000000002))));
        rJacobian[1][2] = -(var_chaste_interface__environment__dt * ((-var_t969) * var_t941));
        rJacobian[1][3] = -(var_chaste_interface__environment__dt * (var_t969 * ((((( -2.0 * var_t984) * var_t1036) * var_t991) + ((((0.0045899999999999995 * var_t1002) * var_t1041) * var_chaste_interface__calcium_dynamics__R_prime) * var_t1026)) + var_t1032)));
        rJacobian[1][4] = -(var_chaste_interface__environment__dt * (((((-var_t969) * 0.10199999999999999) * 0.14999999999999999) * var_t1050) * var_t991));
        rJacobian[1][5] = 0.0;
        rJacobian[1][6] = 0.0;
        rJacobian[2][0] = 0.0;
        rJacobian[2][1] = -(var_chaste_interface__environment__dt * (((var_t885 * 0.00036000000000000002) * 0.0010939999999999999) * 60.960741282614002));
        rJacobian[2][2] = 1.0 - (var_chaste_interface__environment__dt * ((((((2.0 / pow(var_t884, 2.0)) * (((((var_t898 - var_t905) * 0.0010939999999999999) * 60.960741282614002) + var_t910) - (((0.5 * (((0.00059199999999999997 * (var_chaste_interface__membrane__V - (13.356880329847824 * log(2.0 * var_t277)))) + (var_t284 * var_t282)) - ((2.0 * var_t194) * var_t189))) * var_membrane__Cm) * 0.00063181349969740233))) * 0.00020000000000000001) / var_t881) / var_t880) + (var_t885 * ((((var_t941 * 0.0010939999999999999) * 60.960741282614002) - 0.0038) - (((0.5 * ((((0.0079072731552699109 * var_t277) + (0.12379999999999999 * var_t282)) - (var_t284 / pow(var_t281, 2.0))) + (2.0 * ((((var_t269 * 2744000.0) * 2.5) * 2.9291824377205469e-07) * var_t272)))) * var_membrane__Cm) * 0.00063181349969740233)))));
        rJacobian[2][3] = -(var_chaste_interface__environment__dt * (var_t885 * 0.0038));
        rJacobian[2][4] = 0.0;
        rJacobian[2][5] = 0.0;
        rJacobian[2][6] = -(var_chaste_interface__environment__dt * (((((((3.0 * var_t885) * 1000.0) * var_t158) * var_t160) * 2.0) * var_t189) * var_t892));
        rJacobian[3][0] = -(var_chaste_interface__environment__dt * ((( -2.0 * ((var_t1059 * var_L_type_Ca_current__g_CaL) * var_chaste_interface__L_type_Ca_current_d_gate__d)) * (var_t75 * var_t82)) * var_t1093));
        rJacobian[3][1] = -(var_chaste_interface__environment__dt * (var_t1059 * (((((0.030599999999999995 * var_t1002) * var_t1031) * var_t1116) - (((((0.0045899999999999995 * var_t1019) * var_t1020) * var_chaste_interface__calcium_dynamics__R_prime) * var_t1025) * var_t1116)) + var_t1129)));
        rJacobian[3][2] = -(var_chaste_interface__environment__dt * ((var_t1059 * 0.0038) * 300.0));
        rJacobian[3][3] = 1.0 - (var_chaste_interface__environment__dt * ((((((2.0 / pow(var_t1058, 2.0)) * (((( -2.0 * var_t101) * var_t1093) + (var_t1125 * var_t1136)) - (var_t910 * 300.0))) * 0.0001) / var_t1055) / var_t1054) + (var_t1059 * ((((((( -0.5 * var_t101) * 0.037433890822745473) * ((var_t87 * var_t93) * var_t1074)) + (((0.030599999999999995 * var_t983) * var_chaste_interface__calcium_dynamics__Ca_ss) * var_t1136)) - (((((0.0045899999999999995 * var_t1002) * var_t1041) * var_chaste_interface__calcium_dynamics__R_prime) * var_t1025) * var_t1112)) - var_t1129) - 1.1399999999999999))));
        rJacobian[3][4] = -(var_chaste_interface__environment__dt * (((((var_t1059 * 0.10199999999999999) * var_t986) * var_t795) * var_t989) * var_t1112));
        rJacobian[3][5] = 0.0;
        rJacobian[3][6] = 0.0;
        rJacobian[4][0] = 0.0;
        rJacobian[4][1] = -(var_chaste_interface__environment__dt * (((0.13500000000000001 * var_t1008) * var_t1114) * var_t1036));
        rJacobian[4][2] = 0.0;
        rJacobian[4][3] = -(var_chaste_interface__environment__dt * ((-var_t1174) * var_chaste_interface__calcium_dynamics__R_prime));
        rJacobian[4][4] = 1.0 - (var_chaste_interface__environment__dt * (((-var_t1174) * var_chaste_interface__calcium_dynamics__Ca_ss) - 0.0050000000000000001));
        rJacobian[4][5] = 0.0;
        rJacobian[4][6] = 0.0;
        rJacobian[5][0] = 0.0;
        rJacobian[5][1] = 0.0;
        rJacobian[5][2] = 0.0;
        rJacobian[5][3] = 0.0;
        rJacobian[5][4] = 0.0;
        rJacobian[5][5] = 1.0 - (var_chaste_interface__environment__dt * (((((((((((((0.0025819888969999998 * var_t15) * var_t63) * var_t39) * 2577486.3199999998) * var_t325) + (((0.043033148290000003 * var_t47) * var_t40) * (((((( -0.0060000000000000001 * var_t14) * 8314.4719999999998) * 310.0) * var_t325) + ((((1546.4917919999998 * var_t324) * var_t21) + ((257748.63199999998 * var_t324) * var_t26)) * var_t33)) + (((((0.5 * var_t56) * 8314.4719999999998) * 0.0032129232812012176) * var_t4) * var_t31)))) - ((0.043033148290000003 * var_t64) * var_t350)) - (var_t67 * var_t350)) - ((0.43033148290000001 * var_t70) * var_t350)) - ((var_t296 * 0.0032129232812012176) * var_t228)) - ((37631.300272 * var_t324) * var_t208)) * 60.960741282614002) * var_t1183));
        rJacobian[5][6] = -(var_chaste_interface__environment__dt * (((-(((((var_t296 * 0.0032129232812012176) * var_t228) * 0.029999999999999999) - (2.0 * var_t303)) + (2.0 * var_t308))) * 60.960741282614002) * var_t1183));
        rJacobian[6][0] = 0.0;
        rJacobian[6][1] = 0.0;
        rJacobian[6][2] = -(var_chaste_interface__environment__dt * ((((((3.0 * var_t269) * 2744000.0) * 2.5) * 2.9291824377205469e-07) * var_t272) * var_t892));
        rJacobian[6][3] = 0.0;
        rJacobian[6][4] = 0.0;
        rJacobian[6][5] = 0.0;
        rJacobian[6][6] = 1.0 - (var_chaste_interface__environment__dt * (((-(((((((var_t152 * 2577486.3199999998) * 1.0364268649036186e-05) * var_t237) + (0.0077469905913117379 * var_t237)) + (3.0 * var_t303)) - (3.0 * var_t308)) + (9.0 * (((((1000.0 * var_t158) * var_t160) * 2.0) * 2.9291824377205469e-07) * var_t272)))) * 60.960741282614002) * var_t1183));
    }
    
    void Dynamicten_tusscher_model_2006_epiFromCellMLBackwardEuler::UpdateTransmembranePotential(double var_chaste_interface__environment__time)
    {
        // Time units: millisecond
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.23
        double var_chaste_interface__calcium_dynamics__Ca_i = rY[1];
        // Units: millimolar; Initial value: 0.000126
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = rY[2];
        // Units: dimensionless; Initial value: 0.00621
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = rY[3];
        // Units: dimensionless; Initial value: 0.4712
        double var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs = rY[4];
        // Units: dimensionless; Initial value: 0.0095
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[5];
        // Units: dimensionless; Initial value: 0.00172
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[6];
        // Units: dimensionless; Initial value: 0.7444
        double var_chaste_interface__fast_sodium_current_j_gate__j = rY[7];
        // Units: dimensionless; Initial value: 0.7045
        double var_chaste_interface__L_type_Ca_current_d_gate__d = rY[8];
        // Units: dimensionless; Initial value: 3.373e-5
        double var_chaste_interface__L_type_Ca_current_f_gate__f = rY[9];
        // Units: dimensionless; Initial value: 0.7888
        double var_chaste_interface__L_type_Ca_current_f2_gate__f2 = rY[10];
        // Units: dimensionless; Initial value: 0.9755
        double var_chaste_interface__L_type_Ca_current_fCass_gate__fCass = rY[11];
        // Units: dimensionless; Initial value: 0.9953
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[12];
        // Units: dimensionless; Initial value: 0.999998
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[13];
        // Units: dimensionless; Initial value: 2.42e-8
        double var_chaste_interface__calcium_dynamics__Ca_ss = rY[15];
        // Units: millimolar; Initial value: 0.00036
        double var_chaste_interface__sodium_dynamics__Na_i = rY[17];
        // Units: millimolar; Initial value: 8.604
        double var_chaste_interface__potassium_dynamics__K_i = rY[18];
        // Units: millimolar; Initial value: 136.89
        
        const double var_reversal_potentials__E_K = 26.713760659695648 * log(5.4000000000000004 / var_chaste_interface__potassium_dynamics__K_i); // millivolt
        const double var_inward_rectifier_potassium_current__alpha_K1 = 0.10000000000000001 / (1.0 + exp(0.059999999999999998 * ((var_chaste_interface__membrane__V - var_reversal_potentials__E_K) - 200.0))); // dimensionless
        const double var_inward_rectifier_potassium_current__i_K1 = (var_inward_rectifier_potassium_current__alpha_K1 / (var_inward_rectifier_potassium_current__alpha_K1 + (((3.0 * exp(0.00020000000000000001 * ((var_chaste_interface__membrane__V - var_reversal_potentials__E_K) + 100.0))) + exp(0.10000000000000001 * ((var_chaste_interface__membrane__V - var_reversal_potentials__E_K) - 10.0))) / (1.0 + exp( -0.5 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K)))))) * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K) * 5.4050000000000002; // picoA_per_picoF
        const double var_transient_outward_current__g_to = 0.29399999999999998; // nanoS_per_picoF
        const double var_transient_outward_current__i_to = var_transient_outward_current__g_to * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // picoA_per_picoF
        const double var_rapid_time_dependent_potassium_current__g_Kr = 0.153; // nanoS_per_picoF
        const double var_rapid_time_dependent_potassium_current__i_Kr = var_rapid_time_dependent_potassium_current__g_Kr * 1.0 * var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 * var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K); // picoA_per_picoF
        const double var_slow_time_dependent_potassium_current__i_Ks = 0.39200000000000002 * pow(var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs, 2.0) * (var_chaste_interface__membrane__V - (26.713760659695648 * log(9.6000000000000014 / (var_chaste_interface__potassium_dynamics__K_i + (0.029999999999999999 * var_chaste_interface__sodium_dynamics__Na_i))))); // picoA_per_picoF
        const double var_L_type_Ca_current__g_CaL = 3.9799999999999998e-05; // litre_per_farad_second
        const double var_L_type_Ca_current__i_CaL = (((var_L_type_Ca_current__g_CaL * var_chaste_interface__L_type_Ca_current_d_gate__d * var_chaste_interface__L_type_Ca_current_f_gate__f * var_chaste_interface__L_type_Ca_current_f2_gate__f2 * var_chaste_interface__L_type_Ca_current_fCass_gate__fCass * (var_chaste_interface__membrane__V - 15.0) * 37237684497.486488) * 3.8797490106562429e-07) * ((0.25 * var_chaste_interface__calcium_dynamics__Ca_ss * exp(((var_chaste_interface__membrane__V - 15.0) * 192970.68299999999) * 3.8797490106562429e-07)) - 2.0)) / (exp(((var_chaste_interface__membrane__V - 15.0) * 192970.68299999999) * 3.8797490106562429e-07) - 1.0); // picoA_per_picoF
        const double var_sodium_potassium_pump_current__i_NaK = ((2.2983750000000001 * var_chaste_interface__sodium_dynamics__Na_i) / (var_chaste_interface__sodium_dynamics__Na_i + 40.0)) / (1.0 + (0.1245 * exp((var_chaste_interface__membrane__V *  -9648.5341499999995) * 3.8797490106562429e-07)) + (0.035299999999999998 * exp(((-var_chaste_interface__membrane__V) * 96485.341499999995) * 3.8797490106562429e-07))); // picoA_per_picoF
        const double var_fast_sodium_current__g_Na = 14.837999999999999; // nanoS_per_picoF
        const double var_reversal_potentials__E_Na = 26.713760659695648 * log(140.0 / var_chaste_interface__sodium_dynamics__Na_i); // millivolt
        const double var_fast_sodium_current__i_Na = var_fast_sodium_current__g_Na * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3.0) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j * (var_chaste_interface__membrane__V - var_reversal_potentials__E_Na); // picoA_per_picoF
        const double var_sodium_background_current__i_b_Na = 0.00029 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_Na); // picoA_per_picoF
        const double var_sodium_calcium_exchanger_current__i_NaCa = (1000.0 * ((exp((var_chaste_interface__membrane__V * 33769.869524999995) * 3.8797490106562429e-07) * pow(var_chaste_interface__sodium_dynamics__Na_i, 3.0) * 2.0) - (exp((var_chaste_interface__membrane__V *  -62715.471975) * 3.8797490106562429e-07) * var_chaste_interface__calcium_dynamics__Ca_i * 6860000.0))) / ((1.0 + (0.10000000000000001 * exp((var_chaste_interface__membrane__V *  -62715.471975) * 3.8797490106562429e-07))) * 11539055.9375); // picoA_per_picoF
        const double var_calcium_background_current__i_b_Ca = 0.00059199999999999997 * (var_chaste_interface__membrane__V - (13.356880329847824 * log(2.0 / var_chaste_interface__calcium_dynamics__Ca_i))); // picoA_per_picoF
        const double var_potassium_pump_current__i_p_K = (0.0146 * (var_chaste_interface__membrane__V - var_reversal_potentials__E_K)) / (1.0 + exp((25.0 - var_chaste_interface__membrane__V) * 0.16722408026755853)); // picoA_per_picoF
        const double var_calcium_pump_current__i_p_Ca = (0.12379999999999999 * var_chaste_interface__calcium_dynamics__Ca_i) / (var_chaste_interface__calcium_dynamics__Ca_i + 0.00050000000000000001); // picoA_per_picoF
        const double var_chaste_interface__membrane__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
        const double d_dt_chaste_interface__membrane__V = -(var_inward_rectifier_potassium_current__i_K1 + var_transient_outward_current__i_to + var_rapid_time_dependent_potassium_current__i_Kr + var_slow_time_dependent_potassium_current__i_Ks + var_L_type_Ca_current__i_CaL + var_sodium_potassium_pump_current__i_NaK + var_fast_sodium_current__i_Na + var_sodium_background_current__i_b_Na + var_sodium_calcium_exchanger_current__i_NaCa + var_calcium_background_current__i_b_Ca + var_potassium_pump_current__i_p_K + var_calcium_pump_current__i_p_Ca + (var_chaste_interface__membrane__i_Stim / HeartConfig::Instance()->GetCapacitance())); // 'millivolt per millisecond'
        
        rY[0] += mDt*d_dt_chaste_interface__membrane__V;
    }
    
    void Dynamicten_tusscher_model_2006_epiFromCellMLBackwardEuler::ComputeOneStepExceptVoltage(double var_chaste_interface__environment__time)
    {
        // Time units: millisecond
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -85.23
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = rY[2];
        // Units: dimensionless; Initial value: 0.00621
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = rY[3];
        // Units: dimensionless; Initial value: 0.4712
        double var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs = rY[4];
        // Units: dimensionless; Initial value: 0.0095
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[5];
        // Units: dimensionless; Initial value: 0.00172
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[6];
        // Units: dimensionless; Initial value: 0.7444
        double var_chaste_interface__fast_sodium_current_j_gate__j = rY[7];
        // Units: dimensionless; Initial value: 0.7045
        double var_chaste_interface__L_type_Ca_current_d_gate__d = rY[8];
        // Units: dimensionless; Initial value: 3.373e-5
        double var_chaste_interface__L_type_Ca_current_f_gate__f = rY[9];
        // Units: dimensionless; Initial value: 0.7888
        double var_chaste_interface__L_type_Ca_current_f2_gate__f2 = rY[10];
        // Units: dimensionless; Initial value: 0.9755
        double var_chaste_interface__transient_outward_current_s_gate__s = rY[12];
        // Units: dimensionless; Initial value: 0.999998
        double var_chaste_interface__transient_outward_current_r_gate__r = rY[13];
        // Units: dimensionless; Initial value: 2.42e-8
        
        const double var_chaste_interface__environment__dt = mDt;

        const double var_rapid_time_dependent_potassium_current_Xr1_gate__tau_xr1 = 1.0 * (450.0 / (1.0 + exp(( -45.0 - var_chaste_interface__membrane__V) * 0.10000000000000001))) * (6.0 / (1.0 + exp((var_chaste_interface__membrane__V + 30.0) * 0.086956521739130432))); // millisecond
        const double var_rapid_time_dependent_potassium_current_Xr2_gate__tau_xr2 = 1.0 * (3.0 / (1.0 + exp(( -60.0 - var_chaste_interface__membrane__V) * 0.050000000000000003))) * (1.1200000000000001 / (1.0 + exp((var_chaste_interface__membrane__V - 60.0) * 0.050000000000000003))); // millisecond
        const double var_slow_time_dependent_potassium_current_Xs_gate__tau_xs = (1.0 * (1400.0 / sqrt(1.0 + exp((5.0 - var_chaste_interface__membrane__V) * 0.16666666666666666))) * (1.0 / (1.0 + exp((var_chaste_interface__membrane__V - 35.0) * 0.066666666666666666)))) + 80.0; // millisecond
        const double var_fast_sodium_current_m_gate__tau_m = 1.0 * (1.0 / (1.0 + exp(( -60.0 - var_chaste_interface__membrane__V) * 0.20000000000000001))) * ((0.10000000000000001 / (1.0 + exp((var_chaste_interface__membrane__V + 35.0) * 0.20000000000000001))) + (0.10000000000000001 / (1.0 + exp((var_chaste_interface__membrane__V - 50.0) * 0.0050000000000000001)))); // millisecond
        const double var_fast_sodium_current_h_gate__tau_h = 1.0 / (((var_chaste_interface__membrane__V <  -40.0) ? (0.057000000000000002 * exp((-(var_chaste_interface__membrane__V + 80.0)) * 0.14705882352941177)) : 0.0) + ((var_chaste_interface__membrane__V <  -40.0) ? ((2.7000000000000002 * exp(0.079000000000000001 * var_chaste_interface__membrane__V)) + (310000.0 * exp(0.34849999999999998 * var_chaste_interface__membrane__V))) : (0.77000000000000002 / (0.13 * (1.0 + exp((var_chaste_interface__membrane__V + 10.66) *  -0.0900900900900901)))))); // millisecond
        const double var_fast_sodium_current_j_gate__tau_j = 1.0 / (((var_chaste_interface__membrane__V <  -40.0) ? ((((( -25428.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__V)) - (6.9480000000000002e-06 * exp( -0.043909999999999998 * var_chaste_interface__membrane__V))) * (var_chaste_interface__membrane__V + 37.780000000000001)) * 1.0) / (1.0 + exp(0.311 * (var_chaste_interface__membrane__V + 79.230000000000004)))) : 0.0) + ((var_chaste_interface__membrane__V <  -40.0) ? ((0.024240000000000001 * exp( -0.01052 * var_chaste_interface__membrane__V)) / (1.0 + exp( -0.13780000000000001 * (var_chaste_interface__membrane__V + 40.140000000000001)))) : ((0.59999999999999998 * exp(0.057000000000000002 * var_chaste_interface__membrane__V)) / (1.0 + exp( -0.10000000000000001 * (var_chaste_interface__membrane__V + 32.0)))))); // millisecond
        const double var_L_type_Ca_current_d_gate__tau_d = (1.0 * ((1.3999999999999999 / (1.0 + exp(( -35.0 - var_chaste_interface__membrane__V) * 0.076923076923076927))) + 0.25) * (1.3999999999999999 / (1.0 + exp((var_chaste_interface__membrane__V + 5.0) * 0.20000000000000001)))) + (1.0 / (1.0 + exp((50.0 - var_chaste_interface__membrane__V) * 0.050000000000000003))); // millisecond
        const double var_L_type_Ca_current_f_gate__tau_f = (1102.5 * exp((-pow(var_chaste_interface__membrane__V + 27.0, 2.0)) * 0.0044444444444444444)) + (200.0 / (1.0 + exp((13.0 - var_chaste_interface__membrane__V) * 0.10000000000000001))) + (180.0 / (1.0 + exp((var_chaste_interface__membrane__V + 30.0) * 0.10000000000000001))) + 20.0; // millisecond
        const double var_L_type_Ca_current_f2_gate__tau_f2 = (562.0 * exp((-pow(var_chaste_interface__membrane__V + 27.0, 2.0)) * 0.0041666666666666666)) + (31.0 / (1.0 + exp((25.0 - var_chaste_interface__membrane__V) * 0.10000000000000001))) + (80.0 / (1.0 + exp((var_chaste_interface__membrane__V + 30.0) * 0.10000000000000001))); // millisecond
        const double var_transient_outward_current_s_gate__tau_s = (85.0 * exp((-pow(var_chaste_interface__membrane__V + 45.0, 2.0)) * 0.0031250000000000002)) + (5.0 / (1.0 + exp((var_chaste_interface__membrane__V - 20.0) * 0.20000000000000001))) + 3.0; // millisecond
        const double var_transient_outward_current_r_gate__tau_r = (9.5 * exp((-pow(var_chaste_interface__membrane__V + 40.0, 2.0)) * 0.00055555555555555556)) + 0.80000000000000004; // millisecond
        
        rY[8] = (var_chaste_interface__L_type_Ca_current_d_gate__d + (((1.0 / (1.0 + exp(( -8.0 - var_chaste_interface__membrane__V) * 0.13333333333333333))) / var_L_type_Ca_current_d_gate__tau_d) * var_chaste_interface__environment__dt)) / (1.0 - (( -1.0 / var_L_type_Ca_current_d_gate__tau_d) * var_chaste_interface__environment__dt));
        rY[10] = (var_chaste_interface__L_type_Ca_current_f2_gate__f2 + ((((0.67000000000000004 / (1.0 + exp((var_chaste_interface__membrane__V + 35.0) * 0.14285714285714285))) + 0.33000000000000002) / var_L_type_Ca_current_f2_gate__tau_f2) * var_chaste_interface__environment__dt)) / (1.0 - (( -1.0 / var_L_type_Ca_current_f2_gate__tau_f2) * var_chaste_interface__environment__dt));
        rY[9] = (var_chaste_interface__L_type_Ca_current_f_gate__f + (((1.0 / (1.0 + exp((var_chaste_interface__membrane__V + 20.0) * 0.14285714285714285))) / var_L_type_Ca_current_f_gate__tau_f) * var_chaste_interface__environment__dt)) / (1.0 - (( -1.0 / var_L_type_Ca_current_f_gate__tau_f) * var_chaste_interface__environment__dt));
        rY[6] = (var_chaste_interface__fast_sodium_current_h_gate__h + (((1.0 / pow(1.0 + exp((var_chaste_interface__membrane__V + 71.549999999999997) * 0.13458950201884254), 2.0)) / var_fast_sodium_current_h_gate__tau_h) * var_chaste_interface__environment__dt)) / (1.0 - (( -1.0 / var_fast_sodium_current_h_gate__tau_h) * var_chaste_interface__environment__dt));
        rY[7] = (var_chaste_interface__fast_sodium_current_j_gate__j + (((1.0 / pow(1.0 + exp((var_chaste_interface__membrane__V + 71.549999999999997) * 0.13458950201884254), 2.0)) / var_fast_sodium_current_j_gate__tau_j) * var_chaste_interface__environment__dt)) / (1.0 - (( -1.0 / var_fast_sodium_current_j_gate__tau_j) * var_chaste_interface__environment__dt));
        rY[5] = (var_chaste_interface__fast_sodium_current_m_gate__m + (((1.0 / pow(1.0 + exp(( -56.859999999999999 - var_chaste_interface__membrane__V) * 0.11074197120708749), 2.0)) / var_fast_sodium_current_m_gate__tau_m) * var_chaste_interface__environment__dt)) / (1.0 - (( -1.0 / var_fast_sodium_current_m_gate__tau_m) * var_chaste_interface__environment__dt));
        rY[2] = (var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 + (((1.0 / (1.0 + exp(( -26.0 - var_chaste_interface__membrane__V) * 0.14285714285714285))) / var_rapid_time_dependent_potassium_current_Xr1_gate__tau_xr1) * var_chaste_interface__environment__dt)) / (1.0 - (( -1.0 / var_rapid_time_dependent_potassium_current_Xr1_gate__tau_xr1) * var_chaste_interface__environment__dt));
        rY[3] = (var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 + (((1.0 / (1.0 + exp((var_chaste_interface__membrane__V + 88.0) * 0.041666666666666664))) / var_rapid_time_dependent_potassium_current_Xr2_gate__tau_xr2) * var_chaste_interface__environment__dt)) / (1.0 - (( -1.0 / var_rapid_time_dependent_potassium_current_Xr2_gate__tau_xr2) * var_chaste_interface__environment__dt));
        rY[4] = (var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs + (((1.0 / (1.0 + exp(( -5.0 - var_chaste_interface__membrane__V) * 0.071428571428571425))) / var_slow_time_dependent_potassium_current_Xs_gate__tau_xs) * var_chaste_interface__environment__dt)) / (1.0 - (( -1.0 / var_slow_time_dependent_potassium_current_Xs_gate__tau_xs) * var_chaste_interface__environment__dt));
        rY[13] = (var_chaste_interface__transient_outward_current_r_gate__r + (((1.0 / (1.0 + exp((20.0 - var_chaste_interface__membrane__V) * 0.16666666666666666))) / var_transient_outward_current_r_gate__tau_r) * var_chaste_interface__environment__dt)) / (1.0 - (( -1.0 / var_transient_outward_current_r_gate__tau_r) * var_chaste_interface__environment__dt));
        rY[12] = (var_chaste_interface__transient_outward_current_s_gate__s + (((1.0 / (1.0 + exp((var_chaste_interface__membrane__V + 20.0) * 0.20000000000000001))) / var_transient_outward_current_s_gate__tau_s) * var_chaste_interface__environment__dt)) / (1.0 - (( -1.0 / var_transient_outward_current_s_gate__tau_s) * var_chaste_interface__environment__dt));
        
        double _guess[7] = {rY[11],rY[14],rY[1],rY[15],rY[16],rY[18],rY[17]};
        CardiacNewtonSolver<7,Dynamicten_tusscher_model_2006_epiFromCellMLBackwardEuler>* _p_solver = CardiacNewtonSolver<7,Dynamicten_tusscher_model_2006_epiFromCellMLBackwardEuler>::Instance();
        _p_solver->Solve(*this, var_chaste_interface__environment__time, _guess);
        rY[11] = _guess[0];
        rY[14] = _guess[1];
        rY[1] = _guess[2];
        rY[15] = _guess[3];
        rY[16] = _guess[4];
        rY[18] = _guess[5];
        rY[17] = _guess[6];
    }
    
template<>
void OdeSystemInformation<Dynamicten_tusscher_model_2006_epiFromCellMLBackwardEuler>::Initialise(void)
{
    this->mSystemName = "tentusscher_panfilov_2006_epi";
    this->mFreeVariableName = "environment__time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-85.23);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.000126);

    // rY[2]:
    this->mVariableNames.push_back("rapid_time_dependent_potassium_current_Xr1_gate__Xr1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00621);

    // rY[3]:
    this->mVariableNames.push_back("rapid_time_dependent_potassium_current_Xr2_gate__Xr2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.4712);

    // rY[4]:
    this->mVariableNames.push_back("slow_time_dependent_potassium_current_Xs_gate__Xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0095);

    // rY[5]:
    this->mVariableNames.push_back("fast_sodium_current_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00172);

    // rY[6]:
    this->mVariableNames.push_back("fast_sodium_current_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7444);

    // rY[7]:
    this->mVariableNames.push_back("fast_sodium_current_j_gate__j");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7045);

    // rY[8]:
    this->mVariableNames.push_back("L_type_Ca_current_d_gate__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.373e-5);

    // rY[9]:
    this->mVariableNames.push_back("L_type_Ca_current_f_gate__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7888);

    // rY[10]:
    this->mVariableNames.push_back("L_type_Ca_current_f2_gate__f2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9755);

    // rY[11]:
    this->mVariableNames.push_back("L_type_Ca_current_fCass_gate__fCass");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9953);

    // rY[12]:
    this->mVariableNames.push_back("transient_outward_current_s_gate__s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999998);

    // rY[13]:
    this->mVariableNames.push_back("transient_outward_current_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.42e-8);

    // rY[14]:
    this->mVariableNames.push_back("calcium_dynamics__Ca_SR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(3.64);

    // rY[15]:
    this->mVariableNames.push_back("calcium_dynamics__Ca_ss");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.00036);

    // rY[16]:
    this->mVariableNames.push_back("calcium_dynamics__R_prime");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9073);

    // rY[17]:
    this->mVariableNames.push_back("sodium_dynamics__Na_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.604);

    // rY[18]:
    this->mVariableNames.push_back("potassium_dynamics__K_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(136.89);

    this->mAttributes["SuggestedForwardEulerTimestep"] = 0.001;
    
    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Dynamicten_tusscher_model_2006_epiFromCellMLBackwardEuler)
extern "C"
{
    AbstractCardiacCellInterface* MakeCardiacCell(
            boost::shared_ptr<AbstractIvpOdeSolver> pSolver,
            boost::shared_ptr<AbstractStimulusFunction> pStimulus)
    {
        return new Dynamicten_tusscher_model_2006_epiFromCellMLBackwardEuler(pSolver, pStimulus);
    }
    
}

