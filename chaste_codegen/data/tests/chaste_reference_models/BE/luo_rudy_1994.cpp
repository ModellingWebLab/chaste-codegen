//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: luo_rudy_1994
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on Wed Mar 11 16:49:42 2020
//! 
//! <autogenerated>

#include "luo_rudy_1994.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "CardiacNewtonSolver.hpp"
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    boost::shared_ptr<RegularStimulus> Dynamicluo_rudy_1994FromCellMLBackwardEuler::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__stimPeriod = 1000.0; // millisecond
        const double var_chaste_interface__membrane__stimDuration = 0.5; // millisecond
        const double var_chaste_interface__membrane__stimCurrent = 50.0; // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__stimCurrent),
                var_chaste_interface__membrane__stimDuration,
                var_chaste_interface__membrane__stimPeriod,
                0.0
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    double Dynamicluo_rudy_1994FromCellMLBackwardEuler::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    
    Dynamicluo_rudy_1994FromCellMLBackwardEuler::Dynamicluo_rudy_1994FromCellMLBackwardEuler(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractBackwardEulerCardiacCell<5>(
                12,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Dynamicluo_rudy_1994FromCellMLBackwardEuler>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
    }
    
    Dynamicluo_rudy_1994FromCellMLBackwardEuler::~Dynamicluo_rudy_1994FromCellMLBackwardEuler()
    {
    }
    
    double Dynamicluo_rudy_1994FromCellMLBackwardEuler::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -84.624
        double var_chaste_interface__ionic_concentrations__Cai = rY[1];
        // Units: millimolar; Initial value: 0.12e-3
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__fast_sodium_current_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[6];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__time_dependent_potassium_current_X_gate__X = rY[7];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ionic_concentrations__Nai = rY[8];
        // Units: mM; Initial value: 10.0
        double var_chaste_interface__ionic_concentrations__Ki = rY[9];
        // Units: mM; Initial value: 145.0
        
        const double var_fast_sodium_current__g_Na = 0.16; // mS_per_mm2
        const double var_ionic_concentrations__Nao = 140.0; // mM
        const double var_fast_sodium_current__E_Na = 26.614641953637257 * log(var_ionic_concentrations__Nao / var_chaste_interface__ionic_concentrations__Nai); // mV
        const double var_fast_sodium_current__i_Na = var_fast_sodium_current__g_Na * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3.0) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j * (var_chaste_interface__membrane__V - var_fast_sodium_current__E_Na); // uA_per_mm2
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1.0 / (1.0 + pow(var_chaste_interface__ionic_concentrations__Cai * 1666.6666666666667, 2.0)); // dimensionless
        const double var_ionic_concentrations__Cao = 1.8; // mM
        const double var_L_type_Ca_channel__i_CaCa = var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_L_type_Ca_channel_f_Ca_gate__f_Ca * (((var_chaste_interface__membrane__V * 9378954025.0) * 3.8797359451715714e-07) * (((1.0 * var_chaste_interface__ionic_concentrations__Cai * exp((var_chaste_interface__membrane__V * 193690.0) * 3.8797359451715714e-07)) - (0.34000000000000002 * var_ionic_concentrations__Cao)) / (exp((var_chaste_interface__membrane__V * 193690.0) * 3.8797359451715714e-07) - 1.0)) * 2.16e-05); // uA_per_mm2
        const double var_L_type_Ca_channel__i_CaNa = var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_L_type_Ca_channel_f_Ca_gate__f_Ca * (((var_chaste_interface__membrane__V * 9378954025.0) * 3.8797359451715714e-07) * (((0.75 * var_chaste_interface__ionic_concentrations__Nai * exp((var_chaste_interface__membrane__V * 96845.0) * 3.8797359451715714e-07)) - (0.75 * var_ionic_concentrations__Nao)) / (exp((var_chaste_interface__membrane__V * 96845.0) * 3.8797359451715714e-07) - 1.0)) * 6.7500000000000001e-09); // uA_per_mm2
        const double var_ionic_concentrations__Ko = 5.4000000000000004; // mM
        const double var_L_type_Ca_channel__i_CaK = var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_L_type_Ca_channel_f_Ca_gate__f_Ca * (((var_chaste_interface__membrane__V * 9378954025.0) * 3.8797359451715714e-07) * (((0.75 * var_chaste_interface__ionic_concentrations__Ki * exp((var_chaste_interface__membrane__V * 96845.0) * 3.8797359451715714e-07)) - (0.75 * var_ionic_concentrations__Ko)) / (exp((var_chaste_interface__membrane__V * 96845.0) * 3.8797359451715714e-07) - 1.0)) * 1.9300000000000002e-09); // uA_per_mm2
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_CaCa + var_L_type_Ca_channel__i_CaK + var_L_type_Ca_channel__i_CaNa; // uA_per_mm2
        const double var_sarcolemmal_calcium_pump__i_p_Ca = 0.0115 * (var_chaste_interface__ionic_concentrations__Cai / (0.00050000000000000001 + var_chaste_interface__ionic_concentrations__Cai)); // uA_per_mm2
        const double var_sodium_background_current__i_Na_b = 1.4100000000000001e-05 * (var_chaste_interface__membrane__V - var_fast_sodium_current__E_Na); // uA_per_mm2
        const double var_sodium_potassium_pump__i_NaK = 0.014999999999999999 * (1.0 / ((1.0 + (0.1245 * exp( -0.10000000000000001 * ((var_chaste_interface__membrane__V * 96845.0) * 3.8797359451715714e-07)))) + (0.036499999999999998 * (0.14285714285714285 * (exp(var_ionic_concentrations__Nao * 0.01485884101040119) - 1.0)) * exp(-((var_chaste_interface__membrane__V * 96845.0) * 3.8797359451715714e-07))))) * (1.0 / (1.0 + pow(10.0 / var_chaste_interface__ionic_concentrations__Nai, 1.5))) * (var_ionic_concentrations__Ko / (var_ionic_concentrations__Ko + 1.5)); // uA_per_mm2
        const double var_time_dependent_potassium_current__i_K = (0.00282 * sqrt(var_ionic_concentrations__Ko * 0.18518518518518517)) * pow(var_chaste_interface__time_dependent_potassium_current_X_gate__X, 2.0) * (1.0 / (1.0 + exp((var_chaste_interface__membrane__V - 56.259999999999998) * 0.031152647975077882))) * (var_chaste_interface__membrane__V - (26.614641953637257 * log((var_ionic_concentrations__Ko + (0.018329999999999999 * var_ionic_concentrations__Nao)) / (var_chaste_interface__ionic_concentrations__Ki + (0.018329999999999999 * var_chaste_interface__ionic_concentrations__Nai))))); // uA_per_mm2
        const double var_calcium_background_current__i_Ca_b = 3.0159999999999999e-05 * (var_chaste_interface__membrane__V - (13.307320976818628 * log(var_ionic_concentrations__Cao / var_chaste_interface__ionic_concentrations__Cai))); // uA_per_mm2
        const double var_non_specific_calcium_activated_current__Vns = var_chaste_interface__membrane__V - (26.614641953637257 * log((var_ionic_concentrations__Ko + var_ionic_concentrations__Nao) / (var_chaste_interface__ionic_concentrations__Ki + var_chaste_interface__ionic_concentrations__Nai))); // mV
        const double var_non_specific_calcium_activated_current__i_ns_Na = (((var_non_specific_calcium_activated_current__Vns * 9378954025.0) * 3.8797359451715714e-07) * (((0.75 * var_chaste_interface__ionic_concentrations__Nai * exp((var_non_specific_calcium_activated_current__Vns * 96845.0) * 3.8797359451715714e-07)) - (0.75 * var_ionic_concentrations__Nao)) / (exp((var_non_specific_calcium_activated_current__Vns * 96845.0) * 3.8797359451715714e-07) - 1.0)) * 1.75e-09) * (1.0 / (1.0 + pow(0.0011999999999999999 / var_chaste_interface__ionic_concentrations__Cai, 3.0))); // uA_per_mm2
        const double var_non_specific_calcium_activated_current__i_ns_K = (((var_non_specific_calcium_activated_current__Vns * 9378954025.0) * 3.8797359451715714e-07) * (((0.75 * var_chaste_interface__ionic_concentrations__Ki * exp((var_non_specific_calcium_activated_current__Vns * 96845.0) * 3.8797359451715714e-07)) - (0.75 * var_ionic_concentrations__Ko)) / (exp((var_non_specific_calcium_activated_current__Vns * 96845.0) * 3.8797359451715714e-07) - 1.0)) * 1.75e-09) * (1.0 / (1.0 + pow(0.0011999999999999999 / var_chaste_interface__ionic_concentrations__Cai, 3.0))); // uA_per_mm2
        const double var_non_specific_calcium_activated_current__i_ns_Ca = var_non_specific_calcium_activated_current__i_ns_Na + var_non_specific_calcium_activated_current__i_ns_K; // uA_per_mm2
        const double var_Na_Ca_exchanger__i_NaCa = 20.0 * (1.0 / (669921.875 + pow(var_ionic_concentrations__Nao, 3.0))) * (1.0 / (1.3799999999999999 + var_ionic_concentrations__Cao)) * (1.0 / (1.0 + (0.10000000000000001 * exp(var_chaste_interface__membrane__V *  -0.024422646794659157)))) * ((exp(var_chaste_interface__membrane__V * 0.013150655966354931) * pow(var_chaste_interface__ionic_concentrations__Nai, 3.0) * var_ionic_concentrations__Cao) - (exp(var_chaste_interface__membrane__V *  -0.024422646794659157) * pow(var_ionic_concentrations__Nao, 3.0) * var_chaste_interface__ionic_concentrations__Cai)); // uA_per_mm2
        const double var_time_independent_potassium_current__E_K1 = 26.614641953637257 * log(var_ionic_concentrations__Ko / var_chaste_interface__ionic_concentrations__Ki); // mV
        const double var_plateau_potassium_current__i_Kp = 0.000183 * (1.0 / (1.0 + exp((7.4880000000000004 - var_chaste_interface__membrane__V) * 0.16722408026755853))) * (var_chaste_interface__membrane__V - var_time_independent_potassium_current__E_K1); // uA_per_mm2
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1.02 / (1.0 + exp(0.23849999999999999 * ((var_chaste_interface__membrane__V - var_time_independent_potassium_current__E_K1) - 59.215000000000003))); // per_ms
        const double var_time_independent_potassium_current__g_K1_max = 0.0074999999999999997; // mS_per_mm2
        const double var_time_independent_potassium_current__i_K1 = (var_time_independent_potassium_current__g_K1_max * sqrt(var_ionic_concentrations__Ko * 0.18518518518518517)) * (var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + (((0.49124000000000001 * exp(0.080320000000000003 * ((var_chaste_interface__membrane__V + 5.476) - var_time_independent_potassium_current__E_K1))) + exp(0.061749999999999999 * (var_chaste_interface__membrane__V - (var_time_independent_potassium_current__E_K1 + 594.30999999999995)))) / (1.0 + exp( -0.51429999999999998 * ((var_chaste_interface__membrane__V - var_time_independent_potassium_current__E_K1) + 4.7530000000000001)))))) * (var_chaste_interface__membrane__V - var_time_independent_potassium_current__E_K1); // uA_per_mm2
        const double var_chaste_interface__time_independent_potassium_current__i_K1 = var_time_independent_potassium_current__i_K1; // uA_per_mm2
        const double var_chaste_interface__fast_sodium_current__i_Na = var_fast_sodium_current__i_Na; // uA_per_mm2
        const double var_chaste_interface__i_ionic = (100.0 * var_chaste_interface__fast_sodium_current__i_Na) + (100.0 * var_L_type_Ca_channel__i_Ca_L) + (100.0 * var_time_dependent_potassium_current__i_K) + (100.0 * var_chaste_interface__time_independent_potassium_current__i_K1) + (100.0 * var_plateau_potassium_current__i_Kp) + (100.0 * var_Na_Ca_exchanger__i_NaCa) + (100.0 * var_sarcolemmal_calcium_pump__i_p_Ca) + (100.0 * var_sodium_background_current__i_Na_b) + (100.0 * var_calcium_background_current__i_Ca_b) + (100.0 * var_sodium_potassium_pump__i_NaK) + (100.0 * var_non_specific_calcium_activated_current__i_ns_Ca); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Dynamicluo_rudy_1994FromCellMLBackwardEuler::ComputeResidual(double var_chaste_interface__environment__time, const double rCurrentGuess[5], double rResidual[5])
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -84.624
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__fast_sodium_current_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[6];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__time_dependent_potassium_current_X_gate__X = rY[7];
        // Units: dimensionless; Initial value: 0.0
        
        //output_nonlinear_state_assignments
        double var_chaste_interface__ionic_concentrations__Ca_JSR = rCurrentGuess[0];
        double var_chaste_interface__ionic_concentrations__Ca_NSR = rCurrentGuess[1];
        double var_chaste_interface__ionic_concentrations__Cai = rCurrentGuess[2];
        double var_chaste_interface__ionic_concentrations__Ki = rCurrentGuess[3];
        double var_chaste_interface__ionic_concentrations__Nai = rCurrentGuess[4];
        
        //output_equations
        const double var_fast_sodium_current__g_Na = 0.16; // mS_per_mm2
        const double var_ionic_concentrations__Nao = 140.0; // mM
        const double var_fast_sodium_current__E_Na = 26.614641953637257 * log(var_ionic_concentrations__Nao / var_chaste_interface__ionic_concentrations__Nai); // mV
        const double var_fast_sodium_current__i_Na = var_fast_sodium_current__g_Na * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3.0) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j * (var_chaste_interface__membrane__V - var_fast_sodium_current__E_Na); // uA_per_mm2
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1.0 / (1.0 + pow(var_chaste_interface__ionic_concentrations__Cai * 1666.6666666666667, 2.0)); // dimensionless
        const double var_ionic_concentrations__Cao = 1.8; // mM
        const double var_L_type_Ca_channel__i_CaCa = var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_L_type_Ca_channel_f_Ca_gate__f_Ca * (((var_chaste_interface__membrane__V * 9378954025.0) * 3.8797359451715714e-07) * (((1.0 * var_chaste_interface__ionic_concentrations__Cai * exp((var_chaste_interface__membrane__V * 193690.0) * 3.8797359451715714e-07)) - (0.34000000000000002 * var_ionic_concentrations__Cao)) / (exp((var_chaste_interface__membrane__V * 193690.0) * 3.8797359451715714e-07) - 1.0)) * 2.16e-05); // uA_per_mm2
        const double var_L_type_Ca_channel__i_CaNa = var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_L_type_Ca_channel_f_Ca_gate__f_Ca * (((var_chaste_interface__membrane__V * 9378954025.0) * 3.8797359451715714e-07) * (((0.75 * var_chaste_interface__ionic_concentrations__Nai * exp((var_chaste_interface__membrane__V * 96845.0) * 3.8797359451715714e-07)) - (0.75 * var_ionic_concentrations__Nao)) / (exp((var_chaste_interface__membrane__V * 96845.0) * 3.8797359451715714e-07) - 1.0)) * 6.7500000000000001e-09); // uA_per_mm2
        const double var_ionic_concentrations__Ko = 5.4000000000000004; // mM
        const double var_L_type_Ca_channel__i_CaK = var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_L_type_Ca_channel_f_Ca_gate__f_Ca * (((var_chaste_interface__membrane__V * 9378954025.0) * 3.8797359451715714e-07) * (((0.75 * var_chaste_interface__ionic_concentrations__Ki * exp((var_chaste_interface__membrane__V * 96845.0) * 3.8797359451715714e-07)) - (0.75 * var_ionic_concentrations__Ko)) / (exp((var_chaste_interface__membrane__V * 96845.0) * 3.8797359451715714e-07) - 1.0)) * 1.9300000000000002e-09); // uA_per_mm2
        const double var_sarcolemmal_calcium_pump__i_p_Ca = 0.0115 * (var_chaste_interface__ionic_concentrations__Cai / (0.00050000000000000001 + var_chaste_interface__ionic_concentrations__Cai)); // uA_per_mm2
        const double var_sodium_background_current__i_Na_b = 1.4100000000000001e-05 * (var_chaste_interface__membrane__V - var_fast_sodium_current__E_Na); // uA_per_mm2
        const double var_sodium_potassium_pump__i_NaK = 0.014999999999999999 * (1.0 / ((1.0 + (0.1245 * exp( -0.10000000000000001 * ((var_chaste_interface__membrane__V * 96845.0) * 3.8797359451715714e-07)))) + (0.036499999999999998 * (0.14285714285714285 * (exp(var_ionic_concentrations__Nao * 0.01485884101040119) - 1.0)) * exp(-((var_chaste_interface__membrane__V * 96845.0) * 3.8797359451715714e-07))))) * (1.0 / (1.0 + pow(10.0 / var_chaste_interface__ionic_concentrations__Nai, 1.5))) * (var_ionic_concentrations__Ko / (var_ionic_concentrations__Ko + 1.5)); // uA_per_mm2
        const double var_time_dependent_potassium_current__i_K = (0.00282 * sqrt(var_ionic_concentrations__Ko * 0.18518518518518517)) * pow(var_chaste_interface__time_dependent_potassium_current_X_gate__X, 2.0) * (1.0 / (1.0 + exp((var_chaste_interface__membrane__V - 56.259999999999998) * 0.031152647975077882))) * (var_chaste_interface__membrane__V - (26.614641953637257 * log((var_ionic_concentrations__Ko + (0.018329999999999999 * var_ionic_concentrations__Nao)) / (var_chaste_interface__ionic_concentrations__Ki + (0.018329999999999999 * var_chaste_interface__ionic_concentrations__Nai))))); // uA_per_mm2
        const double var_calcium_background_current__i_Ca_b = 3.0159999999999999e-05 * (var_chaste_interface__membrane__V - (13.307320976818628 * log(var_ionic_concentrations__Cao / var_chaste_interface__ionic_concentrations__Cai))); // uA_per_mm2
        const double var_non_specific_calcium_activated_current__Vns = var_chaste_interface__membrane__V - (26.614641953637257 * log((var_ionic_concentrations__Ko + var_ionic_concentrations__Nao) / (var_chaste_interface__ionic_concentrations__Ki + var_chaste_interface__ionic_concentrations__Nai))); // mV
        const double var_non_specific_calcium_activated_current__i_ns_Na = (((var_non_specific_calcium_activated_current__Vns * 9378954025.0) * 3.8797359451715714e-07) * (((0.75 * var_chaste_interface__ionic_concentrations__Nai * exp((var_non_specific_calcium_activated_current__Vns * 96845.0) * 3.8797359451715714e-07)) - (0.75 * var_ionic_concentrations__Nao)) / (exp((var_non_specific_calcium_activated_current__Vns * 96845.0) * 3.8797359451715714e-07) - 1.0)) * 1.75e-09) * (1.0 / (1.0 + pow(0.0011999999999999999 / var_chaste_interface__ionic_concentrations__Cai, 3.0))); // uA_per_mm2
        const double var_non_specific_calcium_activated_current__i_ns_K = (((var_non_specific_calcium_activated_current__Vns * 9378954025.0) * 3.8797359451715714e-07) * (((0.75 * var_chaste_interface__ionic_concentrations__Ki * exp((var_non_specific_calcium_activated_current__Vns * 96845.0) * 3.8797359451715714e-07)) - (0.75 * var_ionic_concentrations__Ko)) / (exp((var_non_specific_calcium_activated_current__Vns * 96845.0) * 3.8797359451715714e-07) - 1.0)) * 1.75e-09) * (1.0 / (1.0 + pow(0.0011999999999999999 / var_chaste_interface__ionic_concentrations__Cai, 3.0))); // uA_per_mm2
        const double var_Na_Ca_exchanger__i_NaCa = 20.0 * (1.0 / (669921.875 + pow(var_ionic_concentrations__Nao, 3.0))) * (1.0 / (1.3799999999999999 + var_ionic_concentrations__Cao)) * (1.0 / (1.0 + (0.10000000000000001 * exp(var_chaste_interface__membrane__V *  -0.024422646794659157)))) * ((exp(var_chaste_interface__membrane__V * 0.013150655966354931) * pow(var_chaste_interface__ionic_concentrations__Nai, 3.0) * var_ionic_concentrations__Cao) - (exp(var_chaste_interface__membrane__V *  -0.024422646794659157) * pow(var_ionic_concentrations__Nao, 3.0) * var_chaste_interface__ionic_concentrations__Cai)); // uA_per_mm2
        const double var_time_independent_potassium_current__E_K1 = 26.614641953637257 * log(var_ionic_concentrations__Ko / var_chaste_interface__ionic_concentrations__Ki); // mV
        const double var_plateau_potassium_current__i_Kp = 0.000183 * (1.0 / (1.0 + exp((7.4880000000000004 - var_chaste_interface__membrane__V) * 0.16722408026755853))) * (var_chaste_interface__membrane__V - var_time_independent_potassium_current__E_K1); // uA_per_mm2
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1.02 / (1.0 + exp(0.23849999999999999 * ((var_chaste_interface__membrane__V - var_time_independent_potassium_current__E_K1) - 59.215000000000003))); // per_ms
        const double var_time_independent_potassium_current__g_K1_max = 0.0074999999999999997; // mS_per_mm2
        const double var_time_independent_potassium_current__i_K1 = (var_time_independent_potassium_current__g_K1_max * sqrt(var_ionic_concentrations__Ko * 0.18518518518518517)) * (var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + (((0.49124000000000001 * exp(0.080320000000000003 * ((var_chaste_interface__membrane__V + 5.476) - var_time_independent_potassium_current__E_K1))) + exp(0.061749999999999999 * (var_chaste_interface__membrane__V - (var_time_independent_potassium_current__E_K1 + 594.30999999999995)))) / (1.0 + exp( -0.51429999999999998 * ((var_chaste_interface__membrane__V - var_time_independent_potassium_current__E_K1) + 4.7530000000000001)))))) * (var_chaste_interface__membrane__V - var_time_independent_potassium_current__E_K1); // uA_per_mm2
        const double var_calcium_fluxes_in_the_SR__i_rel =  -0.0 * (var_chaste_interface__ionic_concentrations__Ca_JSR - var_chaste_interface__ionic_concentrations__Cai); // mM_per_ms
        const double var_calcium_fluxes_in_the_SR__i_up = 0.0050000000000000001 * (var_chaste_interface__ionic_concentrations__Cai / (var_chaste_interface__ionic_concentrations__Cai + 0.00092000000000000003)); // mM_per_ms
        const double var_calcium_fluxes_in_the_SR__i_leak = 0.00033333333333333332 * var_chaste_interface__ionic_concentrations__Ca_NSR; // mM_per_ms
        const double var_calcium_fluxes_in_the_SR__i_tr = (var_chaste_interface__ionic_concentrations__Ca_NSR - var_chaste_interface__ionic_concentrations__Ca_JSR) * 0.0055555555555555558; // mM_per_ms
        const double d_dt_chaste_interface__ionic_concentrations__Cai = ((-((var_L_type_Ca_channel__i_CaCa + var_sarcolemmal_calcium_pump__i_p_Ca + var_calcium_background_current__i_Ca_b) - var_Na_Ca_exchanger__i_NaCa)) * 0.0015184968096382029) + (var_calcium_fluxes_in_the_SR__i_rel * 0.0070588235294117632) + ((var_calcium_fluxes_in_the_SR__i_leak - var_calcium_fluxes_in_the_SR__i_up) * 0.081176470588235281); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__ionic_concentrations__Nai = (-(var_fast_sodium_current__i_Na + var_L_type_Ca_channel__i_CaNa + var_sodium_background_current__i_Na_b + var_non_specific_calcium_activated_current__i_ns_Na + (var_Na_Ca_exchanger__i_NaCa * 3.0) + (var_sodium_potassium_pump__i_NaK * 3.0))) * 0.0030369936192764057; // 'nanomole per millimetre^3 per millisecond'
        const double d_dt_chaste_interface__ionic_concentrations__Ki = (-(var_L_type_Ca_channel__i_CaK + var_time_dependent_potassium_current__i_K + var_time_independent_potassium_current__i_K1 + var_plateau_potassium_current__i_Kp + var_non_specific_calcium_activated_current__i_ns_K + (-(var_sodium_potassium_pump__i_NaK * 2.0)))) * 0.0030369936192764057; // 'nanomole per millimetre^3 per millisecond'
        const double d_dt_chaste_interface__ionic_concentrations__Ca_JSR = -(var_calcium_fluxes_in_the_SR__i_rel - (var_calcium_fluxes_in_the_SR__i_tr * 11.5)); // 'nanomole per millimetre^3 per millisecond'
        const double d_dt_chaste_interface__ionic_concentrations__Ca_NSR = -((var_calcium_fluxes_in_the_SR__i_leak + var_calcium_fluxes_in_the_SR__i_tr) - var_calcium_fluxes_in_the_SR__i_up); // 'nanomole per millimetre^3 per millisecond'
        
        rResidual[2] = rCurrentGuess[2] - rY[1] - mDt*d_dt_chaste_interface__ionic_concentrations__Cai;
        rResidual[4] = rCurrentGuess[4] - rY[8] - mDt*d_dt_chaste_interface__ionic_concentrations__Nai;
        rResidual[3] = rCurrentGuess[3] - rY[9] - mDt*d_dt_chaste_interface__ionic_concentrations__Ki;
        rResidual[0] = rCurrentGuess[0] - rY[10] - mDt*d_dt_chaste_interface__ionic_concentrations__Ca_JSR;
        rResidual[1] = rCurrentGuess[1] - rY[11] - mDt*d_dt_chaste_interface__ionic_concentrations__Ca_NSR;
    }
    
    void Dynamicluo_rudy_1994FromCellMLBackwardEuler::ComputeJacobian(double var_chaste_interface__environment__time, const double rCurrentGuess[5], double rJacobian[5][5])
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -84.624
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__fast_sodium_current_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[6];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__time_dependent_potassium_current_X_gate__X = rY[7];
        // Units: dimensionless; Initial value: 0.0
        
        double var_chaste_interface__ionic_concentrations__Cai = rCurrentGuess[2];
        double var_chaste_interface__ionic_concentrations__Ki = rCurrentGuess[3];
        double var_chaste_interface__ionic_concentrations__Nai = rCurrentGuess[4];
        
        const double var_chaste_interface__environment__dt = mDt;

        const double var_fast_sodium_current__g_Na = 0.16; // mS_per_mm2
        const double var_ionic_concentrations__Nao = 140.0; // mM
        const double var_ionic_concentrations__Cao = 1.8; // mM
        const double var_ionic_concentrations__Ko = 5.4000000000000004; // mM
        const double var_time_independent_potassium_current__g_K1_max = 0.0074999999999999997; // mS_per_mm2
        const double var_t4 = pow(var_ionic_concentrations__Nao, 2.0) * var_ionic_concentrations__Nao; // dimensionless
        const double var_t7 = 20.0 / (669921.875 + var_t4); // dimensionless
        const double var_t9 = 1.0 / (1.3799999999999999 + var_ionic_concentrations__Cao); // dimensionless
        const double var_t17 = exp(( -0.65000000000000002 * var_chaste_interface__membrane__V) * 0.037573302761014081); // dimensionless
        const double var_t19 = (var_t17 * 0.10000000000000001) + 1.0; // dimensionless
        const double var_t20 = 1.0 / var_t19; // dimensionless
        const double var_t21 = var_t9 * var_t20; // dimensionless
        const double var_t26 = exp((0.34999999999999998 * var_chaste_interface__membrane__V) * 0.037573302761014081); // dimensionless
        const double var_t28 = pow(var_chaste_interface__ionic_concentrations__Nai, 2.0); // dimensionless
        const double var_t42 = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 2.0); // dimensionless
        const double var_t46 = ((var_fast_sodium_current__g_Na * var_t42) * var_chaste_interface__fast_sodium_current_m_gate__m) * (var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j); // dimensionless
        const double var_t47 = pow(var_ionic_concentrations__Ko, 0.5); // dimensionless
        const double var_t48 = 0.00282 * var_t47; // dimensionless
        const double var_t49 = pow(var_chaste_interface__time_dependent_potassium_current_X_gate__X, 2.0); // dimensionless
        const double var_t52 = exp((0.03115264798 * var_chaste_interface__membrane__V) - 1.7526479749999999); // dimensionless
        const double var_t53 = 1.0 + var_t52; // dimensionless
        const double var_t56 = (var_t48 * var_t49) * (1.0 / var_t53); // dimensionless
        const double var_t58 = var_time_independent_potassium_current__g_K1_max * var_t47; // dimensionless
        const double var_t62 = 1.0 / var_chaste_interface__ionic_concentrations__Ki; // dimensionless
        const double var_t66 = 26.614641953637257 * log(var_ionic_concentrations__Ko * var_t62); // dimensionless
        const double var_t69 = exp(((0.23849999999999999 * var_chaste_interface__membrane__V) - (0.23849999999999999 * var_t66)) - 14.1227775); // dimensionless
        const double var_t70 = 1.0 + var_t69; // dimensionless
        const double var_t71 = 1.0 / var_t70; // dimensionless
        const double var_t76 = exp(((0.080320000000000003 * var_chaste_interface__membrane__V) + 0.43983232) - (0.080320000000000003 * var_t66)); // dimensionless
        const double var_t81 = exp(((0.061749999999999999 * var_chaste_interface__membrane__V) - (0.061749999999999999 * var_t66)) - 36.698642499999998); // dimensionless
        const double var_t82 = (0.49124000000000001 * var_t76) + var_t81; // dimensionless
        const double var_t86 = exp((( -0.51429999999999998 * var_chaste_interface__membrane__V) + (0.51429999999999998 * var_t66)) - 2.4444678999999998); // dimensionless
        const double var_t87 = 1.0 + var_t86; // dimensionless
        const double var_t88 = 1.0 / var_t87; // dimensionless
        const double var_t90 = (1.02 * var_t71) + (var_t82 * var_t88); // dimensionless
        const double var_t91 = 1.0 / var_t90; // dimensionless
        const double var_t93 = (var_t58 * var_t71) * var_t91; // dimensionless
        const double var_t97 = exp(1.252173913 - (0.16722408029999999 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_t98 = 1.0 + var_t97; // dimensionless
        const double var_t102 = var_chaste_interface__membrane__V - var_t66; // dimensionless
        const double var_t107 = 0.000183 / var_t98; // dimensionless
        const double var_t108 = var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f; // dimensionless
        const double var_t109 = pow(var_chaste_interface__ionic_concentrations__Cai, 2.0); // dimensionless
        const double var_t113 = (var_t109 * 2777777.7777777785) + 1.0; // dimensionless
        const double var_t114 = 1.0 / var_t113; // dimensionless
        const double var_t116 = 1.9300000000000002e-09 * var_chaste_interface__membrane__V; // dimensionless
        const double var_t129 = (var_chaste_interface__membrane__V * 96845.0) * 3.8797359451715714e-07; // dimensionless
        const double var_t130 = exp(var_t129); // dimensionless
        const double var_t132 = var_t130 - 1.0; // dimensionless
        const double var_t133 = 1.0 / var_t132; // dimensionless
        const double var_t137 = 6.7500000000000001e-09 * var_chaste_interface__membrane__V; // dimensionless
        const double var_t145 = 5.4e-06 * var_chaste_interface__membrane__V; // dimensionless
        const double var_t150 = exp(2.0 * var_t129); // dimensionless
        const double var_t152 = var_t150 - 1.0; // dimensionless
        const double var_t153 = 1.0 / var_t152; // dimensionless
        const double var_t160 = 0.75 * var_chaste_interface__ionic_concentrations__Nai; // dimensionless
        const double var_t163 = 1.0 / (var_chaste_interface__ionic_concentrations__Ki + var_chaste_interface__ionic_concentrations__Nai); // dimensionless
        const double var_t168 = (((-log((var_ionic_concentrations__Ko + var_ionic_concentrations__Nao) * var_t163)) * 2577495.0) * 1.032577830553978e-05) + var_chaste_interface__membrane__V; // dimensionless
        const double var_t171 = exp((var_t168 * 96845.0) * 3.8797359451715714e-07); // dimensionless
        const double var_t173 = 0.75 * var_ionic_concentrations__Nao; // dimensionless
        const double var_t174 = (var_t160 * var_t171) - var_t173; // dimensionless
        const double var_t176 = var_t171 - 1.0; // dimensionless
        const double var_t177 = 1.0 / var_t176; // dimensionless
        const double var_t183 = 1.0 + ((1.7279999999999996e-09 / var_t109) / var_chaste_interface__ionic_concentrations__Cai); // dimensionless
        const double var_t184 = 1.0 / var_t183; // dimensionless
        const double var_t185 = var_t177 * var_t184; // dimensionless
        const double var_t188 = 0.75 * var_chaste_interface__ionic_concentrations__Ki; // dimensionless
        const double var_t190 = 0.75 * var_ionic_concentrations__Ko; // dimensionless
        const double var_t191 = (var_t171 * var_t188) - var_t190; // dimensionless
        const double var_t195 = var_t114 * 5.4e-06; // dimensionless
        const double var_t201 = ((var_t150 * var_chaste_interface__ionic_concentrations__Cai) * 1.0) - (var_ionic_concentrations__Cao * 0.34000000000000002); // dimensionless
        const double var_t208 = var_t114 * 1.9300000000000002e-09; // dimensionless
        const double var_t211 = (var_t130 * var_t188) - var_t190; // dimensionless
        const double var_t216 = var_t114 * 6.7500000000000001e-09; // dimensionless
        const double var_t219 = (var_t130 * var_t160) - var_t173; // dimensionless
        const double var_t224 = 1.75e-09 * var_t168; // dimensionless
        const double var_t229 = 1.0 / pow(var_t176, 2.0); // dimensionless
        const double var_t238 = (var_t108 * var_t208) * var_chaste_interface__membrane__V; // dimensionless
        const double var_t247 = (var_t108 * var_t216) * var_chaste_interface__membrane__V; // dimensionless
        const double var_t253 = (var_t108 * var_t195) * var_chaste_interface__membrane__V; // dimensionless
        const double var_t278 = (var_t171 * var_t177) * var_t184; // dimensionless
        const double var_t284 = 1.0 / pow(var_t70, 2.0); // dimensionless
        const double var_t291 = exp( -0.10000000000000001 * var_t129); // dimensionless
        const double var_t295 = exp(0.01485884101 * var_ionic_concentrations__Nao) - 1.0; // dimensionless
        const double var_t296 = exp(-var_t129); // dimensionless
        const double var_t299 = (1.0 + (0.1245 * var_t291)) + ((0.0052142857139999997 * var_t295) * var_t296); // dimensionless
        const double var_t303 = 1.0 / var_chaste_interface__ionic_concentrations__Nai; // dimensionless
        const double var_t304 = 10.0 * var_t303; // dimensionless
        const double var_t306 = 1.0 + pow(var_t304, 1.5); // dimensionless
        const double var_t310 = 1.0 / (var_ionic_concentrations__Ko + 1.5); // dimensionless
        const double var_t329 = 1.0 / ((var_chaste_interface__ionic_concentrations__Nai * 0.018329999999999999) + var_chaste_interface__ionic_concentrations__Ki); // dimensionless
        const double var_t339 = var_t58 * var_t71; // dimensionless
        const double var_t342 = (1.0 / pow(var_t90, 2.0)) * var_t102; // dimensionless
        const double var_t351 = var_t82 / pow(var_t87, 2.0); // dimensionless
        const double var_t404 = ((var_t46 * 2577495.0) * 1.032577830553978e-05) * var_t303; // dimensionless
        const double var_t409 = (((var_t247 * 3638.7865058904094) * 0.75) * var_t130) * var_t133; // dimensionless
        const double var_t410 = 1.032577830553978e-05 * var_t329; // dimensionless
        const double var_t414 = (((0.43033148290000001 * var_t56) * 2577495.0) * var_t410) * 0.018329999999999999; // dimensionless
        const double var_t415 = var_t7 * var_t9; // dimensionless
        const double var_t417 = var_t28 * var_ionic_concentrations__Cao; // dimensionless
        const double var_t419 = ((var_t415 * var_t20) * var_t26) * var_t417; // dimensionless
        const double var_t424 = 0.00037526645154628536 * var_t303; // dimensionless
        const double var_t436 = ((((((0.014999999999999999 / var_t299) / pow(var_t306, 2.0)) * var_ionic_concentrations__Ko) * var_t310) * pow(var_t304, 0.5)) * 10.0) / var_t28; // dimensionless
        const double var_t439 = 0.00016947874999999999 * var_t163; // dimensionless
        const double var_t440 = var_t174 * var_t177; // dimensionless
        const double var_t442 = (var_t439 * var_t440) * var_t184; // dimensionless
        const double var_t443 = var_t224 * 1128023.8168260269; // dimensionless
        const double var_t445 = var_t163 * var_t171; // dimensionless
        const double var_t450 = ((var_t443 * 0.0032258064516129032) * ((var_t160 * var_t445) + (var_t171 * 0.75))) * var_t185; // dimensionless
        const double var_t451 = var_t224 * 3638.7865058904094; // dimensionless
        const double var_t454 = (var_t184 * var_t163) * var_t171; // dimensionless
        const double var_t456 = ((var_t451 * var_t174) * var_t229) * var_t454; // dimensionless
        const double var_t457 = var_t191 * var_t177; // dimensionless
        const double var_t459 = (var_t439 * var_t457) * var_t184; // dimensionless
        const double var_t462 = ((var_t451 * var_t188) * var_t163) * var_t278; // dimensionless
        const double var_t465 = ((var_t451 * var_t191) * var_t229) * var_t454; // dimensionless
        const double var_t470 = var_t108 / pow(var_t113, 2.0); // dimensionless
        const double var_t473 = 3.8797359451715714e-07 * var_t201; // dimensionless
        const double var_t486 = 3.8797359451715714e-07 * var_t211; // dimensionless
        const double var_t488 = (var_t133 * var_chaste_interface__ionic_concentrations__Cai) * 2777777.7777777785; // dimensionless
        const double var_t494 = 3.8797359451715714e-07 * var_t219; // dimensionless
        const double var_t500 = ((var_t415 * var_t20) * var_t17) * var_t4; // dimensionless
        const double var_t501 = 0.00050000000000000001 + var_chaste_interface__ionic_concentrations__Cai; // dimensionless
        const double var_t518 = ((1.0 / pow(var_t183, 2.0)) * 1.7279999999999996e-09) / pow(var_t109, 2.0); // dimensionless
        const double var_t530 = (((var_t238 * 3638.7865058904094) * 0.75) * var_t130) * var_t133; // dimensionless
        const double var_t533 = ((0.43033148290000001 * var_t56) * 2577495.0) * var_t410; // dimensionless
        const double var_t537 = 1.032577830553978e-05 * var_t62; // dimensionless
        const double var_t538 = var_t537 * var_t69; // dimensionless
        const double var_t541 = (((((0.10468673990000001 * var_t58) * var_t284) * var_t91) * var_t102) * 2577495.0) * var_t538; // dimensionless
        const double var_t562 = ((0.43893811259999999 * var_t339) * var_t342) * (((((( -0.24326999999999999 * var_t284) * 8314.5) * 310.0) * var_t538) + ((((101698.665470016 * var_t537) * var_t76) + ((159160.31625 * var_t537) * var_t81)) * var_t88)) + (((((0.51429999999999998 * var_t351) * 8314.5) * 0.003200991274717332) * var_t62) * var_t86)); // dimensionless
        const double var_t565 = ((0.43893811259999999 * var_t93) * 2577495.0) * var_t537; // dimensionless
        const double var_t568 = ((var_t107 * 8314.5) * 0.003200991274717332) * var_t62; // dimensionless
        const double var_t571 = ((var_t451 * var_t160) * var_t163) * var_t278; // dimensionless
        const double var_t577 = ((var_t443 * 0.0032258064516129032) * ((var_t171 * 0.75) + (var_t188 * var_t445))) * var_t185; // dimensionless
        const double var_t939 = var_chaste_interface__ionic_concentrations__Cai + 0.00092000000000000003; // dimensionless
        const double var_t946 = ( -0.0050000000000000001 / var_t939) + ((0.0050000000000000001 * var_chaste_interface__ionic_concentrations__Cai) / pow(var_t939, 2.0)); // dimensionless
        
        rJacobian[0][0] = 1.0 - (var_chaste_interface__environment__dt *  -0.063888888888888898);
        rJacobian[0][1] = -(var_chaste_interface__environment__dt * 0.063888888888888898);
        rJacobian[0][2] = -(var_chaste_interface__environment__dt *  -0.0);
        rJacobian[0][3] = 0.0;
        rJacobian[0][4] = 0.0;
        rJacobian[1][0] = -(var_chaste_interface__environment__dt * 0.0055555555555555558);
        rJacobian[1][1] = 1.0 - (var_chaste_interface__environment__dt *  -0.0058888888888888888);
        rJacobian[1][2] = -(var_chaste_interface__environment__dt * (-var_t946));
        rJacobian[1][3] = 0.0;
        rJacobian[1][4] = 0.0;
        rJacobian[2][0] = -(var_chaste_interface__environment__dt *  -0.0);
        rJacobian[2][1] = -(var_chaste_interface__environment__dt * 2.7058823529411762e-05);
        rJacobian[2][2] = 1.0 - (var_chaste_interface__environment__dt * (((((0.5 * ((((((((((((8.0 * var_t470) * var_t145) * 9378954025.0) * var_t473) * var_t153) * var_chaste_interface__ionic_concentrations__Cai) * 2777777.7777777785) - (((((4.0 * var_t253) * 3638.7865058904094) * 1.0) * var_t150) * var_t153)) - (0.0115 / var_t501)) + ((0.0115 * var_chaste_interface__ionic_concentrations__Cai) / pow(var_t501, 2.0))) - (0.00040134880066084984 / var_chaste_interface__ionic_concentrations__Cai)) - var_t500)) * 200.0) * 1.5184968096382028e-05) -  -0.0) + ((var_t946 * 0.055199999999999999) * 1.4705882352941175)));
        rJacobian[2][3] = 0.0;
        rJacobian[2][4] = -(var_chaste_interface__environment__dt * (((((((1.5 * var_t7) * var_t21) * var_t26) * var_t417) * 200.0) * 1.4705882352941175) * 1.032577830553978e-05));
        rJacobian[3][0] = 0.0;
        rJacobian[3][1] = 0.0;
        rJacobian[3][2] = -(var_chaste_interface__environment__dt * ((((((((2.0 * var_t470) * var_t116) * 9378954025.0) * var_t486) * var_t488) - (((3.0 * var_t451) * var_t457) * var_t518)) * 200.0) * 1.5184968096382028e-05));
        rJacobian[3][3] = 1.0 - (var_chaste_interface__environment__dt * (((((((((((-var_t530) - var_t533) + var_t541) + var_t562) - var_t565) - var_t568) - var_t459) - var_t577) + var_t465) * 200.0) * 1.5184968096382028e-05));
        rJacobian[3][4] = -(var_chaste_interface__environment__dt * (((((((-var_t414) - var_t459) - var_t462) + var_t465) + (3.0 * var_t436)) * 200.0) * 1.5184968096382028e-05));
        rJacobian[4][0] = 0.0;
        rJacobian[4][1] = 0.0;
        rJacobian[4][2] = -(var_chaste_interface__environment__dt * (((((((((2.0 * var_t470) * var_t137) * 9378954025.0) * var_t494) * var_t488) - (((3.0 * var_t451) * var_t440) * var_t518)) + (3.0 * var_t500)) * 200.0) * 1.5184968096382028e-05));
        rJacobian[4][3] = -(var_chaste_interface__environment__dt * (((((-var_t442) - var_t571) + var_t456) * 200.0) * 1.5184968096382028e-05));
        rJacobian[4][4] = 1.0 - (var_chaste_interface__environment__dt * ((((((((((-var_t404) - var_t409) - var_t424) - var_t442) - var_t450) + var_t456) - (9.0 * var_t419)) - (4.5 * var_t436)) * 200.0) * 1.5184968096382028e-05));
    }
    
    void Dynamicluo_rudy_1994FromCellMLBackwardEuler::UpdateTransmembranePotential(double var_chaste_interface__environment__time)
    {
        // Time units: millisecond
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -84.624
        double var_chaste_interface__ionic_concentrations__Cai = rY[1];
        // Units: millimolar; Initial value: 0.12e-3
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__fast_sodium_current_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[6];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__time_dependent_potassium_current_X_gate__X = rY[7];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ionic_concentrations__Nai = rY[8];
        // Units: mM; Initial value: 10.0
        double var_chaste_interface__ionic_concentrations__Ki = rY[9];
        // Units: mM; Initial value: 145.0
        
        const double var_fast_sodium_current__g_Na = 0.16; // mS_per_mm2
        const double var_ionic_concentrations__Nao = 140.0; // mM
        const double var_fast_sodium_current__E_Na = 26.614641953637257 * log(var_ionic_concentrations__Nao / var_chaste_interface__ionic_concentrations__Nai); // mV
        const double var_fast_sodium_current__i_Na = var_fast_sodium_current__g_Na * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3.0) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j * (var_chaste_interface__membrane__V - var_fast_sodium_current__E_Na); // uA_per_mm2
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1.0 / (1.0 + pow(var_chaste_interface__ionic_concentrations__Cai * 1666.6666666666667, 2.0)); // dimensionless
        const double var_ionic_concentrations__Cao = 1.8; // mM
        const double var_L_type_Ca_channel__i_CaCa = var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_L_type_Ca_channel_f_Ca_gate__f_Ca * (((var_chaste_interface__membrane__V * 9378954025.0) * 3.8797359451715714e-07) * (((1.0 * var_chaste_interface__ionic_concentrations__Cai * exp((var_chaste_interface__membrane__V * 193690.0) * 3.8797359451715714e-07)) - (0.34000000000000002 * var_ionic_concentrations__Cao)) / (exp((var_chaste_interface__membrane__V * 193690.0) * 3.8797359451715714e-07) - 1.0)) * 2.16e-05); // uA_per_mm2
        const double var_L_type_Ca_channel__i_CaNa = var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_L_type_Ca_channel_f_Ca_gate__f_Ca * (((var_chaste_interface__membrane__V * 9378954025.0) * 3.8797359451715714e-07) * (((0.75 * var_chaste_interface__ionic_concentrations__Nai * exp((var_chaste_interface__membrane__V * 96845.0) * 3.8797359451715714e-07)) - (0.75 * var_ionic_concentrations__Nao)) / (exp((var_chaste_interface__membrane__V * 96845.0) * 3.8797359451715714e-07) - 1.0)) * 6.7500000000000001e-09); // uA_per_mm2
        const double var_ionic_concentrations__Ko = 5.4000000000000004; // mM
        const double var_L_type_Ca_channel__i_CaK = var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__L_type_Ca_channel_f_gate__f * var_L_type_Ca_channel_f_Ca_gate__f_Ca * (((var_chaste_interface__membrane__V * 9378954025.0) * 3.8797359451715714e-07) * (((0.75 * var_chaste_interface__ionic_concentrations__Ki * exp((var_chaste_interface__membrane__V * 96845.0) * 3.8797359451715714e-07)) - (0.75 * var_ionic_concentrations__Ko)) / (exp((var_chaste_interface__membrane__V * 96845.0) * 3.8797359451715714e-07) - 1.0)) * 1.9300000000000002e-09); // uA_per_mm2
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_CaCa + var_L_type_Ca_channel__i_CaK + var_L_type_Ca_channel__i_CaNa; // uA_per_mm2
        const double var_sarcolemmal_calcium_pump__i_p_Ca = 0.0115 * (var_chaste_interface__ionic_concentrations__Cai / (0.00050000000000000001 + var_chaste_interface__ionic_concentrations__Cai)); // uA_per_mm2
        const double var_sodium_background_current__i_Na_b = 1.4100000000000001e-05 * (var_chaste_interface__membrane__V - var_fast_sodium_current__E_Na); // uA_per_mm2
        const double var_sodium_potassium_pump__i_NaK = 0.014999999999999999 * (1.0 / ((1.0 + (0.1245 * exp( -0.10000000000000001 * ((var_chaste_interface__membrane__V * 96845.0) * 3.8797359451715714e-07)))) + (0.036499999999999998 * (0.14285714285714285 * (exp(var_ionic_concentrations__Nao * 0.01485884101040119) - 1.0)) * exp(-((var_chaste_interface__membrane__V * 96845.0) * 3.8797359451715714e-07))))) * (1.0 / (1.0 + pow(10.0 / var_chaste_interface__ionic_concentrations__Nai, 1.5))) * (var_ionic_concentrations__Ko / (var_ionic_concentrations__Ko + 1.5)); // uA_per_mm2
        const double var_time_dependent_potassium_current__i_K = (0.00282 * sqrt(var_ionic_concentrations__Ko * 0.18518518518518517)) * pow(var_chaste_interface__time_dependent_potassium_current_X_gate__X, 2.0) * (1.0 / (1.0 + exp((var_chaste_interface__membrane__V - 56.259999999999998) * 0.031152647975077882))) * (var_chaste_interface__membrane__V - (26.614641953637257 * log((var_ionic_concentrations__Ko + (0.018329999999999999 * var_ionic_concentrations__Nao)) / (var_chaste_interface__ionic_concentrations__Ki + (0.018329999999999999 * var_chaste_interface__ionic_concentrations__Nai))))); // uA_per_mm2
        const double var_chaste_interface__membrane__I_st = -GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
        const double var_calcium_background_current__i_Ca_b = 3.0159999999999999e-05 * (var_chaste_interface__membrane__V - (13.307320976818628 * log(var_ionic_concentrations__Cao / var_chaste_interface__ionic_concentrations__Cai))); // uA_per_mm2
        const double var_non_specific_calcium_activated_current__Vns = var_chaste_interface__membrane__V - (26.614641953637257 * log((var_ionic_concentrations__Ko + var_ionic_concentrations__Nao) / (var_chaste_interface__ionic_concentrations__Ki + var_chaste_interface__ionic_concentrations__Nai))); // mV
        const double var_non_specific_calcium_activated_current__i_ns_Na = (((var_non_specific_calcium_activated_current__Vns * 9378954025.0) * 3.8797359451715714e-07) * (((0.75 * var_chaste_interface__ionic_concentrations__Nai * exp((var_non_specific_calcium_activated_current__Vns * 96845.0) * 3.8797359451715714e-07)) - (0.75 * var_ionic_concentrations__Nao)) / (exp((var_non_specific_calcium_activated_current__Vns * 96845.0) * 3.8797359451715714e-07) - 1.0)) * 1.75e-09) * (1.0 / (1.0 + pow(0.0011999999999999999 / var_chaste_interface__ionic_concentrations__Cai, 3.0))); // uA_per_mm2
        const double var_non_specific_calcium_activated_current__i_ns_K = (((var_non_specific_calcium_activated_current__Vns * 9378954025.0) * 3.8797359451715714e-07) * (((0.75 * var_chaste_interface__ionic_concentrations__Ki * exp((var_non_specific_calcium_activated_current__Vns * 96845.0) * 3.8797359451715714e-07)) - (0.75 * var_ionic_concentrations__Ko)) / (exp((var_non_specific_calcium_activated_current__Vns * 96845.0) * 3.8797359451715714e-07) - 1.0)) * 1.75e-09) * (1.0 / (1.0 + pow(0.0011999999999999999 / var_chaste_interface__ionic_concentrations__Cai, 3.0))); // uA_per_mm2
        const double var_non_specific_calcium_activated_current__i_ns_Ca = var_non_specific_calcium_activated_current__i_ns_Na + var_non_specific_calcium_activated_current__i_ns_K; // uA_per_mm2
        const double var_membrane__Cm = 0.01; // uF_per_mm2
        const double var_Na_Ca_exchanger__i_NaCa = 20.0 * (1.0 / (669921.875 + pow(var_ionic_concentrations__Nao, 3.0))) * (1.0 / (1.3799999999999999 + var_ionic_concentrations__Cao)) * (1.0 / (1.0 + (0.10000000000000001 * exp(var_chaste_interface__membrane__V *  -0.024422646794659157)))) * ((exp(var_chaste_interface__membrane__V * 0.013150655966354931) * pow(var_chaste_interface__ionic_concentrations__Nai, 3.0) * var_ionic_concentrations__Cao) - (exp(var_chaste_interface__membrane__V *  -0.024422646794659157) * pow(var_ionic_concentrations__Nao, 3.0) * var_chaste_interface__ionic_concentrations__Cai)); // uA_per_mm2
        const double var_time_independent_potassium_current__E_K1 = 26.614641953637257 * log(var_ionic_concentrations__Ko / var_chaste_interface__ionic_concentrations__Ki); // mV
        const double var_plateau_potassium_current__i_Kp = 0.000183 * (1.0 / (1.0 + exp((7.4880000000000004 - var_chaste_interface__membrane__V) * 0.16722408026755853))) * (var_chaste_interface__membrane__V - var_time_independent_potassium_current__E_K1); // uA_per_mm2
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1.02 / (1.0 + exp(0.23849999999999999 * ((var_chaste_interface__membrane__V - var_time_independent_potassium_current__E_K1) - 59.215000000000003))); // per_ms
        const double var_time_independent_potassium_current__g_K1_max = 0.0074999999999999997; // mS_per_mm2
        const double var_time_independent_potassium_current__i_K1 = (var_time_independent_potassium_current__g_K1_max * sqrt(var_ionic_concentrations__Ko * 0.18518518518518517)) * (var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + (((0.49124000000000001 * exp(0.080320000000000003 * ((var_chaste_interface__membrane__V + 5.476) - var_time_independent_potassium_current__E_K1))) + exp(0.061749999999999999 * (var_chaste_interface__membrane__V - (var_time_independent_potassium_current__E_K1 + 594.30999999999995)))) / (1.0 + exp( -0.51429999999999998 * ((var_chaste_interface__membrane__V - var_time_independent_potassium_current__E_K1) + 4.7530000000000001)))))) * (var_chaste_interface__membrane__V - var_time_independent_potassium_current__E_K1); // uA_per_mm2
        const double d_dt_chaste_interface__membrane__V = ((0.01 * var_chaste_interface__membrane__I_st) - (var_fast_sodium_current__i_Na + var_L_type_Ca_channel__i_Ca_L + var_time_dependent_potassium_current__i_K + var_time_independent_potassium_current__i_K1 + var_plateau_potassium_current__i_Kp + var_Na_Ca_exchanger__i_NaCa + var_sarcolemmal_calcium_pump__i_p_Ca + var_sodium_background_current__i_Na_b + var_calcium_background_current__i_Ca_b + var_sodium_potassium_pump__i_NaK + var_non_specific_calcium_activated_current__i_ns_Ca)) / var_membrane__Cm; // 'millivolt per millisecond'
        
        rY[0] += mDt*d_dt_chaste_interface__membrane__V;
    }
    
    void Dynamicluo_rudy_1994FromCellMLBackwardEuler::ComputeOneStepExceptVoltage(double var_chaste_interface__environment__time)
    {
        // Time units: millisecond
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -84.624
        double var_chaste_interface__fast_sodium_current_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__fast_sodium_current_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__fast_sodium_current_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = rY[6];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__time_dependent_potassium_current_X_gate__X = rY[7];
        // Units: dimensionless; Initial value: 0.0
        
        const double var_chaste_interface__environment__dt = mDt;

        const double var_fast_sodium_current_m_gate__alpha_m = (0.32000000000000001 * (var_chaste_interface__membrane__V + 47.130000000000003)) / (1.0 - exp( -0.10000000000000001 * (var_chaste_interface__membrane__V + 47.130000000000003))); // per_ms
        const double var_fast_sodium_current_h_gate__alpha_h = (var_chaste_interface__membrane__V <  -40.0) ? (0.13500000000000001 * exp((80.0 + var_chaste_interface__membrane__V) *  -0.14705882352941177)) : 0.0; // per_ms
        const double var_fast_sodium_current_j_gate__alpha_j = (var_chaste_interface__membrane__V <  -40.0) ? ((( -127140.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__V)) - (3.4740000000000003e-05 * exp( -0.043909999999999998 * var_chaste_interface__membrane__V))) * ((var_chaste_interface__membrane__V + 37.780000000000001) / (1.0 + exp(0.311 * (var_chaste_interface__membrane__V + 79.230000000000004))))) : 0.0; // per_ms
        const double var_L_type_Ca_channel_d_gate__d_infinity = 1.0 / (1.0 + exp(-((var_chaste_interface__membrane__V + 10.0) * 0.16025641025641024))); // dimensionless
        const double var_L_type_Ca_channel_d_gate__tau_d = var_L_type_Ca_channel_d_gate__d_infinity * ((1.0 - exp(-((var_chaste_interface__membrane__V + 10.0) * 0.16025641025641024))) / (0.035000000000000003 * (var_chaste_interface__membrane__V + 10.0))); // ms
        const double var_L_type_Ca_channel_d_gate__alpha_d = var_L_type_Ca_channel_d_gate__d_infinity / var_L_type_Ca_channel_d_gate__tau_d; // per_ms
        const double var_L_type_Ca_channel_f_gate__f_infinity = (1.0 / (1.0 + exp((var_chaste_interface__membrane__V + 35.060000000000002) * 0.11627906976744186))) + (0.59999999999999998 / (1.0 + exp((50.0 - var_chaste_interface__membrane__V) * 0.050000000000000003))); // dimensionless
        const double var_L_type_Ca_channel_f_gate__tau_f = 1.0 / ((0.019699999999999999 * exp(-pow(0.033700000000000001 * (var_chaste_interface__membrane__V + 10.0), 2.0))) + 0.02); // ms
        const double var_L_type_Ca_channel_f_gate__alpha_f = var_L_type_Ca_channel_f_gate__f_infinity / var_L_type_Ca_channel_f_gate__tau_f; // per_ms
        const double var_time_dependent_potassium_current_X_gate__alpha_X = (7.1899999999999999e-05 * (var_chaste_interface__membrane__V + 30.0)) / (1.0 - exp( -0.14799999999999999 * (var_chaste_interface__membrane__V + 30.0))); // per_ms
        
        rY[5] = (var_chaste_interface__L_type_Ca_channel_d_gate__d + ((var_L_type_Ca_channel_d_gate__alpha_d * 1.0) * var_chaste_interface__environment__dt)) / (1.0 - (((var_L_type_Ca_channel_d_gate__alpha_d *  -1.0) - (((1.0 - var_L_type_Ca_channel_d_gate__d_infinity) / var_L_type_Ca_channel_d_gate__tau_d) * 1.0)) * var_chaste_interface__environment__dt));
        rY[6] = (var_chaste_interface__L_type_Ca_channel_f_gate__f + ((var_L_type_Ca_channel_f_gate__alpha_f * 1.0) * var_chaste_interface__environment__dt)) / (1.0 - (((var_L_type_Ca_channel_f_gate__alpha_f *  -1.0) - (((1.0 - var_L_type_Ca_channel_f_gate__f_infinity) / var_L_type_Ca_channel_f_gate__tau_f) * 1.0)) * var_chaste_interface__environment__dt));
        rY[3] = (var_chaste_interface__fast_sodium_current_h_gate__h + ((var_fast_sodium_current_h_gate__alpha_h * 1.0) * var_chaste_interface__environment__dt)) / (1.0 - (((var_fast_sodium_current_h_gate__alpha_h *  -1.0) - (((var_chaste_interface__membrane__V <  -40.0) ? ((3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__membrane__V)) + (310000.0 * exp(0.34999999999999998 * var_chaste_interface__membrane__V))) : (1.0 / (0.13 * (1.0 + exp((var_chaste_interface__membrane__V + 10.66) *  -0.0900900900900901))))) * 1.0)) * var_chaste_interface__environment__dt));
        rY[4] = (var_chaste_interface__fast_sodium_current_j_gate__j + ((var_fast_sodium_current_j_gate__alpha_j * 1.0) * var_chaste_interface__environment__dt)) / (1.0 - (((var_fast_sodium_current_j_gate__alpha_j *  -1.0) - (((var_chaste_interface__membrane__V <  -40.0) ? ((0.1212 * exp( -0.01052 * var_chaste_interface__membrane__V)) / (1.0 + exp( -0.13780000000000001 * (var_chaste_interface__membrane__V + 40.140000000000001)))) : ((0.29999999999999999 * exp( -2.5349999999999999e-07 * var_chaste_interface__membrane__V)) / (1.0 + exp( -0.10000000000000001 * (var_chaste_interface__membrane__V + 32.0))))) * 1.0)) * var_chaste_interface__environment__dt));
        rY[2] = (var_chaste_interface__fast_sodium_current_m_gate__m + ((var_fast_sodium_current_m_gate__alpha_m * 1.0) * var_chaste_interface__environment__dt)) / (1.0 - (((var_fast_sodium_current_m_gate__alpha_m *  -1.0) - ((0.080000000000000002 * exp((-var_chaste_interface__membrane__V) * 0.090909090909090912)) * 1.0)) * var_chaste_interface__environment__dt));
        rY[7] = (var_chaste_interface__time_dependent_potassium_current_X_gate__X + ((var_time_dependent_potassium_current_X_gate__alpha_X * 1.0) * var_chaste_interface__environment__dt)) / (1.0 - (((var_time_dependent_potassium_current_X_gate__alpha_X *  -1.0) - (((0.00013100000000000001 * (var_chaste_interface__membrane__V + 30.0)) / ( -1.0 + exp(0.068699999999999997 * (var_chaste_interface__membrane__V + 30.0)))) * 1.0)) * var_chaste_interface__environment__dt));
        
        double _guess[5] = {rY[10],rY[11],rY[1],rY[9],rY[8]};
        CardiacNewtonSolver<5,Dynamicluo_rudy_1994FromCellMLBackwardEuler>* _p_solver = CardiacNewtonSolver<5,Dynamicluo_rudy_1994FromCellMLBackwardEuler>::Instance();
        _p_solver->Solve(*this, var_chaste_interface__environment__time, _guess);
        rY[10] = _guess[0];
        rY[11] = _guess[1];
        rY[1] = _guess[2];
        rY[9] = _guess[3];
        rY[8] = _guess[4];
    }
    
template<>
void OdeSystemInformation<Dynamicluo_rudy_1994FromCellMLBackwardEuler>::Initialise(void)
{
    this->mSystemName = "luo_rudy_1994";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-84.624);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.12e-3);

    // rY[2]:
    this->mVariableNames.push_back("fast_sodium_current_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[3]:
    this->mVariableNames.push_back("fast_sodium_current_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // rY[4]:
    this->mVariableNames.push_back("fast_sodium_current_j_gate__j");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // rY[5]:
    this->mVariableNames.push_back("L_type_Ca_channel_d_gate__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[6]:
    this->mVariableNames.push_back("L_type_Ca_channel_f_gate__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // rY[7]:
    this->mVariableNames.push_back("time_dependent_potassium_current_X_gate__X");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[8]:
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(10.0);

    // rY[9]:
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(145.0);

    // rY[10]:
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(1.8);

    // rY[11]:
    this->mVariableNames.push_back("NSR_calcium_concentration");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(1.8);

    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Dynamicluo_rudy_1994FromCellMLBackwardEuler)
extern "C"
{
    AbstractCardiacCellInterface* MakeCardiacCell(
            boost::shared_ptr<AbstractIvpOdeSolver> pSolver,
            boost::shared_ptr<AbstractStimulusFunction> pStimulus)
    {
        return new Dynamicluo_rudy_1994FromCellMLBackwardEuler(pSolver, pStimulus);
    }
    
}

