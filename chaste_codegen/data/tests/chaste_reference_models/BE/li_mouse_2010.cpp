//! @file
//!
//! This source file was generated from CellML by chaste_codegen version (version omitted as unimportant)
//!
//! Model: Li_Mouse_2010
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: BackwardEuler)
//! on (date omitted as unimportant)
//!
//! <autogenerated>

#include "li_mouse_2010.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "Warnings.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"
#include "CardiacNewtonSolver.hpp"


    boost::shared_ptr<RegularStimulus> Cellli_mouse_2010FromCellMLBackwardEulerNoLut::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__cell__stim_amplitude_converted = -15.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        const double var_chaste_interface__cell__stim_duration = 3.0; // millisecond
        const double var_chaste_interface__cell__stim_offset = 0; // millisecond
        const double var_chaste_interface__cell__stim_period = 333.33300000000003; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__cell__stim_amplitude_converted),
                var_chaste_interface__cell__stim_duration,
                var_chaste_interface__cell__stim_period,
                var_chaste_interface__cell__stim_offset
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    double Cellli_mouse_2010FromCellMLBackwardEulerNoLut::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    Cellli_mouse_2010FromCellMLBackwardEulerNoLut::Cellli_mouse_2010FromCellMLBackwardEulerNoLut(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractBackwardEulerCardiacCell<26>(
                36,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<Cellli_mouse_2010FromCellMLBackwardEulerNoLut>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        
        this->mParameters[0] = 4.5; // (var_calcium_fluxes__v1) [per_millisecond]
        this->mParameters[1] = 1400.0; // (var_cell__Cao) [micromolar]
        this->mParameters[2] = 5400.0; // (var_cell__Ko) [micromolar]
        this->mParameters[3] = 134000.0; // (var_cell__Nao) [micromolar]
        this->mParameters[4] = 2.5; // (var_L_type_calcium_current__P_CaL) [per_millisecond]
        this->mParameters[5] = 1.0; // (var_cell__Cm) [microF_per_cm2]
        this->mParameters[6] = 16.0; // (var_fast_sodium_current__g_Na) [milliS_per_microF]
        this->mParameters[7] = 0.34999999999999998; // (var_time_independent_K_I__g_K1) [milliS_per_microF]
        this->mParameters[8] = 0.059499999999999997; // (var_non_inactivating_steady_state_K_I__g_Kss) [milliS_per_microF]
        this->mParameters[9] = 0.016500000000000001; // (var_rapid_delayed_rectifier_K_I__g_Kr) [milliS_per_microF]
        this->mParameters[10] = 0.0057499999999999999; // (var_slow_delayed_rectifier_K_I__g_Ks) [milliS_per_microF]
        this->mParameters[11] = 3.9390000000000001; // (var_sodium_calcium_exchange_current__V_max_NCX) [picoA_per_picoF]
    }

    Cellli_mouse_2010FromCellMLBackwardEulerNoLut::~Cellli_mouse_2010FromCellMLBackwardEulerNoLut()
    {
    }

    
    double Cellli_mouse_2010FromCellMLBackwardEulerNoLut::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -78.9452115785979
        double var_chaste_interface__calcium_concentration__Cai_converted = rY[1];
        // Units: millimolar; Initial value: 9.499150681398009e-05
        double var_chaste_interface__calcium_concentration__Cass = rY[2];
        // Units: micromolar; Initial value: 0.0954184301907784
        double var_chaste_interface__L_type_calcium_current__O = rY[10];
        // Units: dimensionless; Initial value: 1.23713515513533e-06
        double var_chaste_interface__L_type_calcium_current__y_gate = rY[12];
        // Units: dimensionless; Initial value: 0.845044436980163
        double var_chaste_interface__sodium_concentration__Nai = rY[13];
        // Units: micromolar; Initial value: 12364.7482121793
        double var_chaste_interface__fast_sodium_current__O_Na = rY[14];
        // Units: dimensionless; Initial value: 1.46826771436314e-06
        double var_chaste_interface__potassium_concentration__Ki = rY[22];
        // Units: micromolar; Initial value: 115599.50642567
        double var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_K_I__aur = rY[23];
        // Units: dimensionless; Initial value: 0.00346258606821817
        double var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_K_I__iur = rY[24];
        // Units: dimensionless; Initial value: 0.955684946168062
        double var_chaste_interface__non_inactivating_steady_state_K_I__aKss = rY[25];
        // Units: dimensionless; Initial value: 0.287585636847048
        double var_chaste_interface__non_inactivating_steady_state_K_I__iKss = rY[26];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__rapid_delayed_rectifier_K_I__O_K = rY[27];
        // Units: dimensionless; Initial value: 0.0131742086125972
        double var_chaste_interface__slow_delayed_rectifier_K_I__nKs = rY[31];
        // Units: dimensionless; Initial value: 0.00336735013094628
        double var_chaste_interface__fast_transient_outward_K_I__ato_f = rY[32];
        // Units: dimensionless; Initial value: 0.0142335908879204
        double var_chaste_interface__fast_transient_outward_K_I__ito_f = rY[33];
        // Units: dimensionless; Initial value: 0.996989882138174
        double var_chaste_interface__slow_transient_outward_K_I__ato_s = rY[34];
        // Units: dimensionless; Initial value: 0.0443263407760382
        double var_chaste_interface__slow_transient_outward_K_I__ito_s = rY[35];
        // Units: dimensionless; Initial value: 0.887568880831388
        
        const double var_calcium_activated_chloride_current__E_Cl = -40.0; // millivolt
        const double var_calcium_activated_chloride_current__Km_Cl = 10.0; // micromolar
        const double var_calcium_activated_chloride_current__g_ClCa = 10.0; // milliS_per_microF
        const double var_calcium_background_current__g_Cab = 0.00069999999999999999; // milliS_per_microF
        const double var_calcium_concentration__Cai = 1000.0 * var_chaste_interface__calcium_concentration__Cai_converted; // micromolar
        const double var_calcium_pump_current__Km_pCa = 0.28849999999999998; // micromolar
        const double var_calcium_pump_current__i_pCa_max = 0.095500000000000002; // picoA_per_picoF
        const double var_calcium_pump_current__i_pCa = pow(var_calcium_concentration__Cai, 2) * var_calcium_pump_current__i_pCa_max / (pow(var_calcium_concentration__Cai, 2) + pow(var_calcium_pump_current__Km_pCa, 2)); // picoA_per_picoF
        const double var_cell__Acap = 0.00013866; // cm2
        const double var_cell__F = 96.5; // coulomb_per_millimole
        const double var_cell__R = 8.3140000000000001; // joule_per_mole_kelvin
        const double var_cell__T = 308.0; // kelvin
        const double var_calcium_background_current__E_CaN = 0.5 * var_cell__R * var_cell__T * log(mParameters[1] / var_calcium_concentration__Cai) / var_cell__F; // millivolt
        const double var_L_type_calcium_current__FVRT = var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T); // dimensionless
        const double var_L_type_calcium_current__FVRT_Ca = 2.0 * var_L_type_calcium_current__FVRT; // dimensionless
        const double var_calcium_activated_chloride_current__O_ClCa = 0.20000000000000001 / (1.0 + exp(5.9871794871794881 - 0.12820512820512822 * var_chaste_interface__cell__V)); // dimensionless
        const double var_calcium_activated_chloride_current__i_ClCa = (-var_calcium_activated_chloride_current__E_Cl + var_chaste_interface__cell__V) * var_calcium_activated_chloride_current__O_ClCa * var_calcium_activated_chloride_current__g_ClCa * var_calcium_concentration__Cai / (var_calcium_activated_chloride_current__Km_Cl + var_calcium_concentration__Cai); // picoA_per_picoF
        const double var_calcium_background_current__i_Cab = (-var_calcium_background_current__E_CaN + var_chaste_interface__cell__V) * var_calcium_background_current__g_Cab; // picoA_per_picoF
        const double var_cell__Vss = 2.1999999999999998e-8; // microlitre
        const double var_L_type_calcium_current__i_CaL = ((fabs(var_L_type_calcium_current__FVRT_Ca) > 1.0000000000000001e-5) ? (-2.0 * (-var_chaste_interface__calcium_concentration__Cass + mParameters[1] * exp(-var_L_type_calcium_current__FVRT_Ca)) * var_L_type_calcium_current__FVRT_Ca * var_chaste_interface__L_type_calcium_current__O * mParameters[4] * var_chaste_interface__L_type_calcium_current__y_gate * var_cell__F * var_cell__Vss / ((1.0 - exp(-var_L_type_calcium_current__FVRT_Ca)) * var_cell__Acap * mParameters[5])) : (-2.0000000000000002e-5 * (-var_chaste_interface__calcium_concentration__Cass + mParameters[1] * exp(-1.0000000000000001e-5)) * var_chaste_interface__L_type_calcium_current__O * mParameters[4] * var_chaste_interface__L_type_calcium_current__y_gate * var_cell__F * var_cell__Vss / ((1.0 - exp(-1.0000000000000001e-5)) * var_cell__Acap * mParameters[5]))); // picoA_per_picoF
        const double var_L_type_calcium_current__i_CaL_converted = HeartConfig::Instance()->GetCapacitance() * var_L_type_calcium_current__i_CaL; // uA_per_cm2
        const double var_fast_transient_outward_K_I__g_Kto_f = 0.53469999999999995; // milliS_per_microF
        const double var_fast_transient_outward_K_I__E_K = var_cell__R * var_cell__T * log(mParameters[2] / var_chaste_interface__potassium_concentration__Ki) / var_cell__F; // millivolt
        const double var_fast_transient_outward_K_I__i_Kto_f = pow(var_chaste_interface__fast_transient_outward_K_I__ato_f, 3) * (-var_fast_transient_outward_K_I__E_K + var_chaste_interface__cell__V) * var_fast_transient_outward_K_I__g_Kto_f * var_chaste_interface__fast_transient_outward_K_I__ito_f; // picoA_per_picoF
        const double var_non_inactivating_steady_state_K_I__i_Kss = (-var_fast_transient_outward_K_I__E_K + var_chaste_interface__cell__V) * var_chaste_interface__non_inactivating_steady_state_K_I__aKss * mParameters[8] * var_chaste_interface__non_inactivating_steady_state_K_I__iKss; // picoA_per_picoF
        const double var_non_inactivating_steady_state_K_I__i_Kss_converted = HeartConfig::Instance()->GetCapacitance() * var_non_inactivating_steady_state_K_I__i_Kss; // uA_per_cm2
        const double var_slow_delayed_rectifier_K_I__i_Ks = pow(var_chaste_interface__slow_delayed_rectifier_K_I__nKs, 2) * (-var_fast_transient_outward_K_I__E_K + var_chaste_interface__cell__V) * mParameters[10]; // picoA_per_picoF
        const double var_slow_delayed_rectifier_K_I__i_Ks_converted = HeartConfig::Instance()->GetCapacitance() * var_slow_delayed_rectifier_K_I__i_Ks; // uA_per_cm2
        const double var_slow_transient_outward_K_I__g_Kto_s = 0; // milliS_per_microF
        const double var_slow_transient_outward_K_I__i_Kto_s = (-var_fast_transient_outward_K_I__E_K + var_chaste_interface__cell__V) * var_chaste_interface__slow_transient_outward_K_I__ato_s * var_slow_transient_outward_K_I__g_Kto_s * var_chaste_interface__slow_transient_outward_K_I__ito_s; // picoA_per_picoF
        const double var_sodium_background_current__g_Nab = 0.0025999999999999999; // milliS_per_microF
        const double var_sodium_calcium_exchange_current__K_mAllo = 0; // micromolar
        const double var_sodium_calcium_exchange_current__K_mCai = 3.6000000000000001; // micromolar
        const double var_sodium_calcium_exchange_current__K_mCao = 1400.0; // micromolar
        const double var_sodium_calcium_exchange_current__K_mNai = 12000.0; // micromolar
        const double var_sodium_calcium_exchange_current__K_mNao = 88000.0; // micromolar
        const double var_sodium_calcium_exchange_current__eta = 0.34999999999999998; // dimensionless
        const double var_sodium_calcium_exchange_current__k_sat = 0.27000000000000002; // dimensionless
        const double var_fast_sodium_current__E_Na = var_cell__R * var_cell__T * log((mParameters[3] + 0.1111111111111111 * mParameters[2]) / (var_chaste_interface__sodium_concentration__Nai + 0.1111111111111111 * var_chaste_interface__potassium_concentration__Ki)) / var_cell__F; // millivolt
        const double var_fast_sodium_current__i_Na = (-var_fast_sodium_current__E_Na + var_chaste_interface__cell__V) * var_chaste_interface__fast_sodium_current__O_Na * mParameters[6]; // picoA_per_picoF
        const double var_fast_sodium_current__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na; // uA_per_cm2
        const double var_rapid_delayed_rectifier_K_I__i_Kr = (-var_cell__R * var_cell__T * log((mParameters[2] + 0.020408163265306124 * mParameters[3]) / (var_chaste_interface__potassium_concentration__Ki + 0.020408163265306124 * var_chaste_interface__sodium_concentration__Nai)) / var_cell__F + var_chaste_interface__cell__V) * var_chaste_interface__rapid_delayed_rectifier_K_I__O_K * mParameters[9]; // picoA_per_picoF
        const double var_rapid_delayed_rectifier_K_I__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_rapid_delayed_rectifier_K_I__i_Kr; // uA_per_cm2
        const double var_sodium_background_current__i_Nab = (-var_fast_sodium_current__E_Na + var_chaste_interface__cell__V) * var_sodium_background_current__g_Nab; // picoA_per_picoF
        const double var_sodium_calcium_exchange_current__i_NCX = (pow(var_chaste_interface__sodium_concentration__Nai, 3) * mParameters[1] * exp(var_cell__F * var_chaste_interface__cell__V * var_sodium_calcium_exchange_current__eta / (var_cell__R * var_cell__T)) - pow(mParameters[3], 3) * var_calcium_concentration__Cai * exp((-1.0 + var_sodium_calcium_exchange_current__eta) * var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * mParameters[11] / ((1.0 + pow(var_sodium_calcium_exchange_current__K_mAllo, 2) / pow(var_calcium_concentration__Cai, 2)) * (1.0 + var_sodium_calcium_exchange_current__k_sat * exp((-1.0 + var_sodium_calcium_exchange_current__eta) * var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * (pow(mParameters[3], 3) * var_calcium_concentration__Cai + pow(var_sodium_calcium_exchange_current__K_mNao, 3) * var_calcium_concentration__Cai + pow(var_chaste_interface__sodium_concentration__Nai, 3) * mParameters[1] + pow(var_chaste_interface__sodium_concentration__Nai, 3) * var_sodium_calcium_exchange_current__K_mCao + pow(mParameters[3], 3) * (1.0 + pow(var_chaste_interface__sodium_concentration__Nai, 3) / pow(var_sodium_calcium_exchange_current__K_mNai, 3)) * var_sodium_calcium_exchange_current__K_mCai + pow(var_sodium_calcium_exchange_current__K_mNai, 3) * (1.0 + var_calcium_concentration__Cai / var_sodium_calcium_exchange_current__K_mCai) * mParameters[1])); // picoA_per_picoF
        const double var_sodium_calcium_exchange_current__i_NCX_converted = HeartConfig::Instance()->GetCapacitance() * var_sodium_calcium_exchange_current__i_NCX; // uA_per_cm2
        const double var_sodium_potassium_pump_current__Km_Ko = 1500.0; // micromolar
        const double var_sodium_potassium_pump_current__Km_Nai = 16600.0; // micromolar
        const double var_sodium_potassium_pump_current__i_NaK_max = 2.4860000000000002; // picoA_per_picoF
        const double var_sodium_potassium_pump_current__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(1.4858841010401188e-5 * mParameters[3]); // dimensionless
        const double var_sodium_potassium_pump_current__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T)) + 0.036499999999999998 * var_sodium_potassium_pump_current__sigma * exp(-var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))); // dimensionless
        const double var_sodium_potassium_pump_current__i_NaK = mParameters[2] * var_sodium_potassium_pump_current__f_NaK * var_sodium_potassium_pump_current__i_NaK_max / ((1.0 + pow((var_sodium_potassium_pump_current__Km_Nai / var_chaste_interface__sodium_concentration__Nai), 2.3999999999999999)) * (mParameters[2] + var_sodium_potassium_pump_current__Km_Ko)); // picoA_per_picoF
        const double var_time_independent_K_I__i_K1 = (-var_fast_transient_outward_K_I__E_K + var_chaste_interface__cell__V) * mParameters[2] * mParameters[7] / ((1.0 + exp(0.089599999999999999 * var_chaste_interface__cell__V - 0.089599999999999999 * var_fast_transient_outward_K_I__E_K)) * (210.0 + mParameters[2])); // picoA_per_picoF
        const double var_time_independent_K_I__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_time_independent_K_I__i_K1; // uA_per_cm2
        const double var_ultra_rapidly_activating_delayed_rectifier_K_I__g_Kur = 0.25; // milliS_per_microF
        const double var_ultra_rapidly_activating_delayed_rectifier_K_I__i_Kur = (-var_fast_transient_outward_K_I__E_K + var_chaste_interface__cell__V) * var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_K_I__aur * var_ultra_rapidly_activating_delayed_rectifier_K_I__g_Kur * var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_K_I__iur; // picoA_per_picoF
        const double var_chaste_interface__i_ionic = HeartConfig::Instance()->GetCapacitance() * var_calcium_activated_chloride_current__i_ClCa + HeartConfig::Instance()->GetCapacitance() * var_calcium_background_current__i_Cab + HeartConfig::Instance()->GetCapacitance() * var_calcium_pump_current__i_pCa + HeartConfig::Instance()->GetCapacitance() * var_fast_transient_outward_K_I__i_Kto_f + HeartConfig::Instance()->GetCapacitance() * var_slow_transient_outward_K_I__i_Kto_s + HeartConfig::Instance()->GetCapacitance() * var_sodium_background_current__i_Nab + HeartConfig::Instance()->GetCapacitance() * var_sodium_potassium_pump_current__i_NaK + HeartConfig::Instance()->GetCapacitance() * var_ultra_rapidly_activating_delayed_rectifier_K_I__i_Kur + var_L_type_calcium_current__i_CaL_converted + var_fast_sodium_current__i_Na_converted + var_non_inactivating_steady_state_K_I__i_Kss_converted + var_rapid_delayed_rectifier_K_I__i_Kr_converted + var_slow_delayed_rectifier_K_I__i_Ks_converted + var_sodium_calcium_exchange_current__i_NCX_converted + var_time_independent_K_I__i_K1_converted; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellli_mouse_2010FromCellMLBackwardEulerNoLut::ComputeResidual(double var_chaste_interface__environment__time, const double rCurrentGuess[26], double rResidual[26])
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -78.9452115785979
        double var_chaste_interface__L_type_calcium_current__y_gate = rY[12];
        // Units: dimensionless; Initial value: 0.845044436980163
        double var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_K_I__aur = rY[23];
        // Units: dimensionless; Initial value: 0.00346258606821817
        double var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_K_I__iur = rY[24];
        // Units: dimensionless; Initial value: 0.955684946168062
        double var_chaste_interface__non_inactivating_steady_state_K_I__aKss = rY[25];
        // Units: dimensionless; Initial value: 0.287585636847048
        double var_chaste_interface__slow_delayed_rectifier_K_I__nKs = rY[31];
        // Units: dimensionless; Initial value: 0.00336735013094628
        double var_chaste_interface__fast_transient_outward_K_I__ato_f = rY[32];
        // Units: dimensionless; Initial value: 0.0142335908879204
        double var_chaste_interface__fast_transient_outward_K_I__ito_f = rY[33];
        // Units: dimensionless; Initial value: 0.996989882138174
        double var_chaste_interface__slow_transient_outward_K_I__ato_s = rY[34];
        // Units: dimensionless; Initial value: 0.0443263407760382
        double var_chaste_interface__slow_transient_outward_K_I__ito_s = rY[35];
        // Units: dimensionless; Initial value: 0.887568880831388
        
        //output_nonlinear_state_assignments
        double var_chaste_interface__L_type_calcium_current__I = rCurrentGuess[0];
        double var_chaste_interface__L_type_calcium_current__O = rCurrentGuess[1];
        double var_chaste_interface__calcium_concentration__CaJSR = rCurrentGuess[2];
        double var_chaste_interface__calcium_concentration__CaNSR = rCurrentGuess[3];
        double var_chaste_interface__calcium_concentration__Cai_converted = rCurrentGuess[4];
        double var_chaste_interface__calcium_concentration__Cass = rCurrentGuess[5];
        double var_chaste_interface__calcium_fluxes__CaMKt = rCurrentGuess[6];
        double var_chaste_interface__calcium_fluxes__P_RyR = rCurrentGuess[7];
        double var_chaste_interface__fast_sodium_current__C_Na1 = rCurrentGuess[8];
        double var_chaste_interface__fast_sodium_current__C_Na2 = rCurrentGuess[9];
        double var_chaste_interface__fast_sodium_current__I1_Na = rCurrentGuess[10];
        double var_chaste_interface__fast_sodium_current__I2_Na = rCurrentGuess[11];
        double var_chaste_interface__fast_sodium_current__IC_Na2 = rCurrentGuess[12];
        double var_chaste_interface__fast_sodium_current__IC_Na3 = rCurrentGuess[13];
        double var_chaste_interface__fast_sodium_current__IF_Na = rCurrentGuess[14];
        double var_chaste_interface__fast_sodium_current__O_Na = rCurrentGuess[15];
        double var_chaste_interface__non_inactivating_steady_state_K_I__iKss = rCurrentGuess[16];
        double var_chaste_interface__potassium_concentration__Ki = rCurrentGuess[17];
        double var_chaste_interface__rapid_delayed_rectifier_K_I__C_K1 = rCurrentGuess[18];
        double var_chaste_interface__rapid_delayed_rectifier_K_I__C_K2 = rCurrentGuess[19];
        double var_chaste_interface__rapid_delayed_rectifier_K_I__I_K = rCurrentGuess[20];
        double var_chaste_interface__rapid_delayed_rectifier_K_I__O_K = rCurrentGuess[21];
        double var_chaste_interface__ryanodine_receptors__P_C2 = rCurrentGuess[22];
        double var_chaste_interface__ryanodine_receptors__P_O1 = rCurrentGuess[23];
        double var_chaste_interface__ryanodine_receptors__P_O2 = rCurrentGuess[24];
        double var_chaste_interface__sodium_concentration__Nai = rCurrentGuess[25];
        
        //output_equations
        const double d_dt_chaste_interface_var_non_inactivating_steady_state_K_I__iKss = 0; // 1 / millisecond
        const double var_L_type_calcium_current__K_L = 0.29999999999999999; // micromolar
        const double var_L_type_calcium_current__C = 1.0 - var_chaste_interface__L_type_calcium_current__I - var_chaste_interface__L_type_calcium_current__O; // dimensionless
        const double var_L_type_calcium_current__V_L = 0; // millivolt
        const double var_L_type_calcium_current__a = 0.0625; // dimensionless
        const double var_L_type_calcium_current__b = 0.40000000000000002; // dimensionless
        const double var_L_type_calcium_current__delta_V_L = 6.4489000000000001; // millivolt
        const double var_L_type_calcium_current__i_CaL_max = 7.0; // picoA_per_picoF
        const double var_L_type_calcium_current__phi_L = 1.798; // dimensionless
        const double var_L_type_calcium_current__t_L = 1.5; // millisecond
        const double var_L_type_calcium_current__alpha_m = var_L_type_calcium_current__phi_L / var_L_type_calcium_current__t_L; // per_millisecond
        const double var_L_type_calcium_current__tau_L = 1150.0; // millisecond
        const double var_calcium_background_current__g_Cab = 0.00069999999999999999; // milliS_per_microF
        const double var_calcium_concentration__Bmax = 109.0; // micromolar
        const double var_calcium_concentration__CSQN_tot = 50000.0; // micromolar
        const double var_calcium_concentration__Cai = 1000.0 * var_chaste_interface__calcium_concentration__Cai_converted; // micromolar
        const double var_calcium_concentration__Kd = 0.59999999999999998; // micromolar
        const double var_calcium_concentration__Bi = 1 / (1.0 + var_calcium_concentration__Bmax * var_calcium_concentration__Kd / pow((var_calcium_concentration__Cai + var_calcium_concentration__Kd), 2)); // dimensionless
        const double var_calcium_concentration__Bss = 1 / (1.0 + var_calcium_concentration__Bmax * var_calcium_concentration__Kd / pow((var_chaste_interface__calcium_concentration__Cass + var_calcium_concentration__Kd), 2)); // dimensionless
        const double var_calcium_concentration__Km_CSQN = 630.0; // micromolar
        const double var_calcium_concentration__BJSR = 1 / (1.0 + var_calcium_concentration__CSQN_tot * var_calcium_concentration__Km_CSQN / pow((var_chaste_interface__calcium_concentration__CaJSR + var_calcium_concentration__Km_CSQN), 2)); // dimensionless
        const double var_calcium_fluxes__CaMKb = 0.050000000000000003 * (1.0 - var_chaste_interface__calcium_fluxes__CaMKt) / (1.0 + 0.69999999999999996 / var_chaste_interface__calcium_concentration__Cass); // dimensionless
        const double var_calcium_fluxes__CaMKa = var_calcium_fluxes__CaMKb + var_chaste_interface__calcium_fluxes__CaMKt; // dimensionless
        const double var_calcium_fluxes__Km_up = 0.41199999999999998; // micromolar
        const double var_calcium_fluxes__P_ryr_const1 = -0.01; // per_millisecond
        const double var_calcium_fluxes__P_ryr_const2 = -2.0; // per_millisecond
        const double var_calcium_fluxes__off_rate = 0.00020000000000000001; // per_millisecond
        const double var_calcium_fluxes__on_rate = 0.050000000000000003; // per_millisecond
        const double d_dt_chaste_interface_var_calcium_fluxes__CaMKt = -var_chaste_interface__calcium_fluxes__CaMKt * var_calcium_fluxes__off_rate + (var_calcium_fluxes__CaMKb + var_chaste_interface__calcium_fluxes__CaMKt) * var_calcium_fluxes__CaMKb * var_calcium_fluxes__on_rate; // 1 / millisecond
        const double var_calcium_fluxes__tau_tr = 20.0; // millisecond
        const double var_calcium_fluxes__J_tr = (-var_chaste_interface__calcium_concentration__CaJSR + var_chaste_interface__calcium_concentration__CaNSR) / var_calcium_fluxes__tau_tr; // micromolar_per_millisecond
        const double var_calcium_fluxes__tau_xfer = 8.0; // millisecond
        const double var_calcium_fluxes__J_xfer = (-var_calcium_concentration__Cai + var_chaste_interface__calcium_concentration__Cass) / var_calcium_fluxes__tau_xfer; // micromolar_per_millisecond
        const double var_calcium_fluxes__v1_caff = 10.0; // per_millisecond
        const double var_calcium_fluxes__v2 = 3.0000000000000001e-5; // per_millisecond
        const double var_calcium_fluxes__v2_caff = 0.10000000000000001; // per_millisecond
        const double var_calcium_fluxes__vmup_init = 0.50590000000000002; // micromolar_per_millisecond
        const double var_calcium_fluxes__vmup = (1.0 + 2.9982000000000002 * pow(var_calcium_fluxes__CaMKa, 2.5830000000000002) / (1.7590641847756086 + pow(var_calcium_fluxes__CaMKa, 2.5830000000000002))) * var_calcium_fluxes__vmup_init; // micromolar_per_millisecond
        const double var_calcium_fluxes__J_serca = pow(var_calcium_concentration__Cai, 2) * var_calcium_fluxes__vmup / (pow(var_calcium_concentration__Cai, 2) + pow(var_calcium_fluxes__Km_up, 2)); // micromolar_per_millisecond
        const double var_calcium_pump_current__Km_pCa = 0.28849999999999998; // micromolar
        const double var_calcium_pump_current__i_pCa_max = 0.095500000000000002; // picoA_per_picoF
        const double var_calcium_pump_current__i_pCa = pow(var_calcium_concentration__Cai, 2) * var_calcium_pump_current__i_pCa_max / (pow(var_calcium_concentration__Cai, 2) + pow(var_calcium_pump_current__Km_pCa, 2)); // picoA_per_picoF
        const double var_cell__Acap = 0.00013866; // cm2
        const double var_cell__F = 96.5; // coulomb_per_millimole
        const double var_cell__R = 8.3140000000000001; // joule_per_mole_kelvin
        const double var_cell__T = 308.0; // kelvin
        const double var_calcium_background_current__E_CaN = 0.5 * var_cell__R * var_cell__T * log(mParameters[1] / var_calcium_concentration__Cai) / var_cell__F; // millivolt
        const double var_L_type_calcium_current__FVRT = var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T); // dimensionless
        const double var_L_type_calcium_current__FVRT_Ca = 2.0 * var_L_type_calcium_current__FVRT; // dimensionless
        const double var_L_type_calcium_current__expVL = exp((-var_L_type_calcium_current__V_L + var_chaste_interface__cell__V) / var_L_type_calcium_current__delta_V_L); // dimensionless
        const double var_L_type_calcium_current__alpha_p = var_L_type_calcium_current__expVL / ((1.0 + var_L_type_calcium_current__expVL) * var_L_type_calcium_current__t_L); // per_millisecond
        const double d_dt_chaste_interface_var_L_type_calcium_current__O = var_L_type_calcium_current__C * var_L_type_calcium_current__alpha_p - var_chaste_interface__L_type_calcium_current__O * var_L_type_calcium_current__alpha_m; // 1 / millisecond
        const double var_L_type_calcium_current__epsilon_m = (var_L_type_calcium_current__a + var_L_type_calcium_current__expVL) * var_L_type_calcium_current__b / ((var_L_type_calcium_current__b * var_L_type_calcium_current__expVL + var_L_type_calcium_current__a) * var_L_type_calcium_current__tau_L); // per_millisecond
        const double var_L_type_calcium_current__epsilon_p = (var_L_type_calcium_current__a + var_L_type_calcium_current__expVL) / ((1.0 + var_L_type_calcium_current__expVL) * var_L_type_calcium_current__K_L * var_L_type_calcium_current__tau_L); // per_micromolar_millisecond
        const double d_dt_chaste_interface_var_L_type_calcium_current__I = -var_chaste_interface__L_type_calcium_current__I * var_L_type_calcium_current__epsilon_m + var_L_type_calcium_current__C * var_L_type_calcium_current__epsilon_p * var_chaste_interface__calcium_concentration__Cass; // 1 / millisecond
        const double var_calcium_background_current__i_Cab = (-var_calcium_background_current__E_CaN + var_chaste_interface__cell__V) * var_calcium_background_current__g_Cab; // picoA_per_picoF
        const double var_cell__VJSR = 7.7000000000000001e-8; // microlitre
        const double var_cell__VNSR = 2.3099999999999999e-7; // microlitre
        const double var_cell__Vmyo = 2.1999999999999999e-5; // microlitre
        const double var_cell__Vss = 2.1999999999999998e-8; // microlitre
        const double var_L_type_calcium_current__i_CaL = ((fabs(var_L_type_calcium_current__FVRT_Ca) > 1.0000000000000001e-5) ? (-2.0 * (-var_chaste_interface__calcium_concentration__Cass + mParameters[1] * exp(-var_L_type_calcium_current__FVRT_Ca)) * var_L_type_calcium_current__FVRT_Ca * var_chaste_interface__L_type_calcium_current__O * mParameters[4] * var_chaste_interface__L_type_calcium_current__y_gate * var_cell__F * var_cell__Vss / ((1.0 - exp(-var_L_type_calcium_current__FVRT_Ca)) * var_cell__Acap * mParameters[5])) : (-2.0000000000000002e-5 * (-var_chaste_interface__calcium_concentration__Cass + mParameters[1] * exp(-1.0000000000000001e-5)) * var_chaste_interface__L_type_calcium_current__O * mParameters[4] * var_chaste_interface__L_type_calcium_current__y_gate * var_cell__F * var_cell__Vss / ((1.0 - exp(-1.0000000000000001e-5)) * var_cell__Acap * mParameters[5]))); // picoA_per_picoF
        const double d_dt_chaste_interface_var_calcium_fluxes__P_RyR = var_chaste_interface__calcium_fluxes__P_RyR * var_calcium_fluxes__P_ryr_const1 + var_L_type_calcium_current__i_CaL * var_calcium_fluxes__P_ryr_const2 * exp(-0.038580246913580245 * pow((-1 + 0.20000000000000001 * var_chaste_interface__cell__V), 2)) / var_L_type_calcium_current__i_CaL_max; // 1 / millisecond
        const double var_cell__prepulses_number = 10000000000.0; // dimensionless
        const double var_chaste_interface__cell__stim_period = 333.33300000000003; // millisecond
        const double var_calcium_fluxes__J_leak = ((var_chaste_interface__environment__time < var_cell__prepulses_number * var_chaste_interface__cell__stim_period) ? ((-var_calcium_concentration__Cai + var_chaste_interface__calcium_concentration__CaNSR) * var_calcium_fluxes__v2) : ((-var_calcium_concentration__Cai + var_chaste_interface__calcium_concentration__CaNSR) * var_calcium_fluxes__v2_caff)); // micromolar_per_millisecond
        const double d_dt_chaste_interface_var_calcium_concentration__CaNSR = (-var_calcium_fluxes__J_leak + var_calcium_fluxes__J_serca) * var_cell__Vmyo / var_cell__VNSR - var_calcium_fluxes__J_tr * var_cell__VJSR / var_cell__VNSR; // micromolar / millisecond
        const double var_cell__i_Stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
        const double var_cell__i_Stim = var_cell__i_Stim_converted / HeartConfig::Instance()->GetCapacitance(); // picoA_per_picoF
        const double var_fast_sodium_current__C_Na3 = 1.0 - var_chaste_interface__fast_sodium_current__C_Na1 - var_chaste_interface__fast_sodium_current__C_Na2 - var_chaste_interface__fast_sodium_current__I1_Na - var_chaste_interface__fast_sodium_current__I2_Na - var_chaste_interface__fast_sodium_current__IC_Na2 - var_chaste_interface__fast_sodium_current__IC_Na3 - var_chaste_interface__fast_sodium_current__IF_Na - var_chaste_interface__fast_sodium_current__O_Na; // dimensionless
        const double var_fast_sodium_current__alpha_Na11 = 3.802 / (0.20000000000000001 * exp(-0.016666666666666666 - 0.0066666666666666671 * var_chaste_interface__cell__V) + 0.1027 * exp(-0.14705882352941177 - 0.058823529411764705 * var_chaste_interface__cell__V)); // per_millisecond
        const double var_fast_sodium_current__alpha_Na12 = 3.802 / (0.1027 * exp(-0.16666666666666666 - 0.066666666666666666 * var_chaste_interface__cell__V) + 0.23000000000000001 * exp(-0.016666666666666666 - 0.0066666666666666671 * var_chaste_interface__cell__V)); // per_millisecond
        const double var_fast_sodium_current__alpha_Na13 = 3.802 / (0.25 * exp(-0.016666666666666666 - 0.0066666666666666671 * var_chaste_interface__cell__V) + 0.1027 * exp(-0.20833333333333334 - 0.083333333333333329 * var_chaste_interface__cell__V)); // per_millisecond
        const double var_fast_sodium_current__alpha_Na2 = 1 / (0.39395599999999997 + 0.188495 * exp(-0.42168674698795178 - 0.060240963855421679 * var_chaste_interface__cell__V)); // per_millisecond
        const double var_fast_sodium_current__alpha_Na3 = 6.9999999999999997e-7 * exp(-0.90909090909090906 - 0.12987012987012986 * var_chaste_interface__cell__V); // per_millisecond
        const double var_fast_sodium_current__alpha_Na4 = 0.001 * var_fast_sodium_current__alpha_Na2; // per_millisecond
        const double var_fast_sodium_current__alpha_Na5 = 1.0526315789473684e-5 * var_fast_sodium_current__alpha_Na2; // per_millisecond
        const double var_fast_sodium_current__beta_Na11 = 0.19170000000000001 * exp(-0.12315270935960591 - 0.04926108374384236 * var_chaste_interface__cell__V); // per_millisecond
        const double var_fast_sodium_current__beta_Na12 = 0.20000000000000001 * exp(0.12315270935960591 - 0.04926108374384236 * var_chaste_interface__cell__V); // per_millisecond
        const double var_fast_sodium_current__beta_Na13 = 0.22 * exp(0.36945812807881773 - 0.04926108374384236 * var_chaste_interface__cell__V); // per_millisecond
        const double var_fast_sodium_current__beta_Na3 = 0.008539999999999999 + 2.0000000000000002e-5 * var_chaste_interface__cell__V; // per_millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current__C_Na1 = var_chaste_interface__fast_sodium_current__C_Na2 * var_fast_sodium_current__alpha_Na12 + var_chaste_interface__fast_sodium_current__IF_Na * var_fast_sodium_current__alpha_Na3 + var_chaste_interface__fast_sodium_current__O_Na * var_fast_sodium_current__beta_Na13 - var_chaste_interface__fast_sodium_current__C_Na1 * var_fast_sodium_current__alpha_Na13 - var_chaste_interface__fast_sodium_current__C_Na1 * var_fast_sodium_current__beta_Na12 - var_chaste_interface__fast_sodium_current__C_Na1 * var_fast_sodium_current__beta_Na3; // 1 / millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current__C_Na2 = var_chaste_interface__fast_sodium_current__C_Na1 * var_fast_sodium_current__beta_Na12 + var_fast_sodium_current__C_Na3 * var_fast_sodium_current__alpha_Na11 + var_chaste_interface__fast_sodium_current__IC_Na2 * var_fast_sodium_current__alpha_Na3 - var_chaste_interface__fast_sodium_current__C_Na2 * var_fast_sodium_current__alpha_Na12 - var_chaste_interface__fast_sodium_current__C_Na2 * var_fast_sodium_current__beta_Na11 - var_chaste_interface__fast_sodium_current__C_Na2 * var_fast_sodium_current__beta_Na3; // 1 / millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current__IC_Na2 = var_chaste_interface__fast_sodium_current__C_Na2 * var_fast_sodium_current__beta_Na3 + var_chaste_interface__fast_sodium_current__IC_Na3 * var_fast_sodium_current__alpha_Na11 + var_chaste_interface__fast_sodium_current__IF_Na * var_fast_sodium_current__beta_Na12 - var_chaste_interface__fast_sodium_current__IC_Na2 * var_fast_sodium_current__alpha_Na12 - var_chaste_interface__fast_sodium_current__IC_Na2 * var_fast_sodium_current__alpha_Na3 - var_chaste_interface__fast_sodium_current__IC_Na2 * var_fast_sodium_current__beta_Na11; // 1 / millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current__IC_Na3 = var_fast_sodium_current__C_Na3 * var_fast_sodium_current__beta_Na3 + var_chaste_interface__fast_sodium_current__IC_Na2 * var_fast_sodium_current__beta_Na11 - var_chaste_interface__fast_sodium_current__IC_Na3 * var_fast_sodium_current__alpha_Na11 - var_chaste_interface__fast_sodium_current__IC_Na3 * var_fast_sodium_current__alpha_Na3; // 1 / millisecond
        const double var_fast_sodium_current__beta_Na2 = var_fast_sodium_current__alpha_Na13 * var_fast_sodium_current__alpha_Na2 * var_fast_sodium_current__alpha_Na3 / (var_fast_sodium_current__beta_Na13 * var_fast_sodium_current__beta_Na3); // per_millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current__O_Na = var_chaste_interface__fast_sodium_current__C_Na1 * var_fast_sodium_current__alpha_Na13 + var_chaste_interface__fast_sodium_current__IF_Na * var_fast_sodium_current__beta_Na2 - var_chaste_interface__fast_sodium_current__O_Na * var_fast_sodium_current__alpha_Na2 - var_chaste_interface__fast_sodium_current__O_Na * var_fast_sodium_current__beta_Na13; // 1 / millisecond
        const double var_fast_sodium_current__beta_Na4 = var_fast_sodium_current__alpha_Na3; // per_millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current__IF_Na = var_chaste_interface__fast_sodium_current__C_Na1 * var_fast_sodium_current__beta_Na3 + var_chaste_interface__fast_sodium_current__I1_Na * var_fast_sodium_current__beta_Na4 + var_chaste_interface__fast_sodium_current__IC_Na2 * var_fast_sodium_current__alpha_Na12 + var_chaste_interface__fast_sodium_current__O_Na * var_fast_sodium_current__alpha_Na2 - var_chaste_interface__fast_sodium_current__IF_Na * var_fast_sodium_current__alpha_Na3 - var_chaste_interface__fast_sodium_current__IF_Na * var_fast_sodium_current__alpha_Na4 - var_chaste_interface__fast_sodium_current__IF_Na * var_fast_sodium_current__beta_Na12 - var_chaste_interface__fast_sodium_current__IF_Na * var_fast_sodium_current__beta_Na2; // 1 / millisecond
        const double var_fast_sodium_current__beta_Na5 = 0.02 * var_fast_sodium_current__alpha_Na3; // per_millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current__I1_Na = var_chaste_interface__fast_sodium_current__I2_Na * var_fast_sodium_current__beta_Na5 + var_chaste_interface__fast_sodium_current__IF_Na * var_fast_sodium_current__alpha_Na4 - var_chaste_interface__fast_sodium_current__I1_Na * var_fast_sodium_current__alpha_Na5 - var_chaste_interface__fast_sodium_current__I1_Na * var_fast_sodium_current__beta_Na4; // 1 / millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current__I2_Na = var_chaste_interface__fast_sodium_current__I1_Na * var_fast_sodium_current__alpha_Na5 - var_chaste_interface__fast_sodium_current__I2_Na * var_fast_sodium_current__beta_Na5; // 1 / millisecond
        const double var_fast_transient_outward_K_I__g_Kto_f = 0.53469999999999995; // milliS_per_microF
        const double var_fast_transient_outward_K_I__E_K = var_cell__R * var_cell__T * log(mParameters[2] / var_chaste_interface__potassium_concentration__Ki) / var_cell__F; // millivolt
        const double var_fast_transient_outward_K_I__i_Kto_f = pow(var_chaste_interface__fast_transient_outward_K_I__ato_f, 3) * (-var_fast_transient_outward_K_I__E_K + var_chaste_interface__cell__V) * var_fast_transient_outward_K_I__g_Kto_f * var_chaste_interface__fast_transient_outward_K_I__ito_f; // picoA_per_picoF
        const double var_non_inactivating_steady_state_K_I__i_Kss = (-var_fast_transient_outward_K_I__E_K + var_chaste_interface__cell__V) * var_chaste_interface__non_inactivating_steady_state_K_I__aKss * mParameters[8] * var_chaste_interface__non_inactivating_steady_state_K_I__iKss; // picoA_per_picoF
        const double var_rapid_delayed_rectifier_K_I__C_K0 = 1.0 - var_chaste_interface__rapid_delayed_rectifier_K_I__C_K1 - var_chaste_interface__rapid_delayed_rectifier_K_I__C_K2 - var_chaste_interface__rapid_delayed_rectifier_K_I__I_K - var_chaste_interface__rapid_delayed_rectifier_K_I__O_K; // dimensionless
        const double var_rapid_delayed_rectifier_K_I__alpha_a0 = 0.022348 * exp(0.01176 * var_chaste_interface__cell__V); // per_millisecond
        const double var_rapid_delayed_rectifier_K_I__alpha_a1 = 0.033500000000000002 * exp(0.0109 * var_chaste_interface__cell__V); // per_millisecond
        const double var_rapid_delayed_rectifier_K_I__alpha_i = 0.070300000000000001 * exp(0.14349999999999999 + 0.0287 * var_chaste_interface__cell__V); // per_millisecond
        const double var_rapid_delayed_rectifier_K_I__beta_a0 = 0.047002000000000002 * exp(-0.063100000000000003 * var_chaste_interface__cell__V); // per_millisecond
        const double var_rapid_delayed_rectifier_K_I__beta_a1 = 6.8899999999999994e-5 * exp(-0.041779999999999998 * var_chaste_interface__cell__V); // per_millisecond
        const double var_rapid_delayed_rectifier_K_I__beta_i = 0.0064970000000000002 * exp(-0.16339999999999999 - 0.032680000000000001 * var_chaste_interface__cell__V); // per_millisecond
        const double d_dt_chaste_interface_var_rapid_delayed_rectifier_K_I__I_K = var_chaste_interface__rapid_delayed_rectifier_K_I__O_K * var_rapid_delayed_rectifier_K_I__alpha_i - var_chaste_interface__rapid_delayed_rectifier_K_I__I_K * var_rapid_delayed_rectifier_K_I__beta_i; // 1 / millisecond
        const double d_dt_chaste_interface_var_rapid_delayed_rectifier_K_I__O_K = var_chaste_interface__rapid_delayed_rectifier_K_I__C_K2 * var_rapid_delayed_rectifier_K_I__alpha_a1 + var_chaste_interface__rapid_delayed_rectifier_K_I__I_K * var_rapid_delayed_rectifier_K_I__beta_i - var_chaste_interface__rapid_delayed_rectifier_K_I__O_K * var_rapid_delayed_rectifier_K_I__alpha_i - var_chaste_interface__rapid_delayed_rectifier_K_I__O_K * var_rapid_delayed_rectifier_K_I__beta_a1; // 1 / millisecond
        const double var_rapid_delayed_rectifier_K_I__kb = 0.036777999999999998; // per_millisecond
        const double var_rapid_delayed_rectifier_K_I__kf = 0.023761000000000001; // per_millisecond
        const double d_dt_chaste_interface_var_rapid_delayed_rectifier_K_I__C_K1 = var_rapid_delayed_rectifier_K_I__C_K0 * var_rapid_delayed_rectifier_K_I__alpha_a0 + var_chaste_interface__rapid_delayed_rectifier_K_I__C_K2 * var_rapid_delayed_rectifier_K_I__kb - var_chaste_interface__rapid_delayed_rectifier_K_I__C_K1 * var_rapid_delayed_rectifier_K_I__beta_a0 - var_chaste_interface__rapid_delayed_rectifier_K_I__C_K1 * var_rapid_delayed_rectifier_K_I__kf; // 1 / millisecond
        const double d_dt_chaste_interface_var_rapid_delayed_rectifier_K_I__C_K2 = var_chaste_interface__rapid_delayed_rectifier_K_I__C_K1 * var_rapid_delayed_rectifier_K_I__kf + var_chaste_interface__rapid_delayed_rectifier_K_I__O_K * var_rapid_delayed_rectifier_K_I__beta_a1 - var_chaste_interface__rapid_delayed_rectifier_K_I__C_K2 * var_rapid_delayed_rectifier_K_I__alpha_a1 - var_chaste_interface__rapid_delayed_rectifier_K_I__C_K2 * var_rapid_delayed_rectifier_K_I__kb; // 1 / millisecond
        const double var_calcium_fluxes__J_rel = ((var_chaste_interface__environment__time < var_cell__prepulses_number * var_chaste_interface__cell__stim_period) ? ((-var_chaste_interface__calcium_concentration__Cass + var_chaste_interface__calcium_concentration__CaJSR) * (var_chaste_interface__ryanodine_receptors__P_O1 + var_chaste_interface__ryanodine_receptors__P_O2) * var_chaste_interface__calcium_fluxes__P_RyR * mParameters[0]) : ((-var_chaste_interface__calcium_concentration__Cass + var_chaste_interface__calcium_concentration__CaJSR) * var_calcium_fluxes__v1_caff)); // micromolar_per_millisecond
        const double d_dt_chaste_interface_var_calcium_concentration__CaJSR = (-var_calcium_fluxes__J_rel + var_calcium_fluxes__J_tr) * var_calcium_concentration__BJSR; // micromolar / millisecond
        const double d_dt_chaste_interface_var_calcium_concentration__Cass = (var_calcium_fluxes__J_rel * var_cell__VJSR / var_cell__Vss - var_calcium_fluxes__J_xfer * var_cell__Vmyo / var_cell__Vss - 0.5 * var_L_type_calcium_current__i_CaL * var_cell__Acap * mParameters[5] / (var_cell__F * var_cell__Vss)) * var_calcium_concentration__Bss; // micromolar / millisecond
        const double var_ryanodine_receptors__P_C1 = 1.0 - var_chaste_interface__ryanodine_receptors__P_C2 - var_chaste_interface__ryanodine_receptors__P_O1 - var_chaste_interface__ryanodine_receptors__P_O2; // dimensionless
        const double var_ryanodine_receptors__k_minus_a = 0.071249999999999994; // per_millisecond
        const double var_ryanodine_receptors__k_minus_b = 0.96499999999999997; // per_millisecond
        const double var_ryanodine_receptors__k_minus_c = 0.00080000000000000004; // per_millisecond
        const double var_ryanodine_receptors__k_plus_a = 0.0060749999999999997; // micromolar4_per_millisecond
        const double var_ryanodine_receptors__k_plus_b = 0.0040499999999999998; // micromolar3_per_millisecond
        const double var_ryanodine_receptors__k_plus_c = 0.0089999999999999993; // per_millisecond
        const double d_dt_chaste_interface_var_ryanodine_receptors__P_C2 = var_chaste_interface__ryanodine_receptors__P_O1 * var_ryanodine_receptors__k_plus_c - var_chaste_interface__ryanodine_receptors__P_C2 * var_ryanodine_receptors__k_minus_c; // 1 / millisecond
        const double var_ryanodine_receptors__m = 3.0; // dimensionless
        const double d_dt_chaste_interface_var_ryanodine_receptors__P_O2 = -var_chaste_interface__ryanodine_receptors__P_O2 * var_ryanodine_receptors__k_minus_b + pow(var_chaste_interface__calcium_concentration__Cass, var_ryanodine_receptors__m) * var_chaste_interface__ryanodine_receptors__P_O1 * var_ryanodine_receptors__k_plus_b; // 1 / millisecond
        const double var_ryanodine_receptors__n = 4.0; // dimensionless
        const double d_dt_chaste_interface_var_ryanodine_receptors__P_O1 = var_chaste_interface__ryanodine_receptors__P_C2 * var_ryanodine_receptors__k_minus_c + var_chaste_interface__ryanodine_receptors__P_O2 * var_ryanodine_receptors__k_minus_b - var_chaste_interface__ryanodine_receptors__P_O1 * var_ryanodine_receptors__k_minus_a - var_chaste_interface__ryanodine_receptors__P_O1 * var_ryanodine_receptors__k_plus_c + pow(var_chaste_interface__calcium_concentration__Cass, var_ryanodine_receptors__n) * var_ryanodine_receptors__P_C1 * var_ryanodine_receptors__k_plus_a - pow(var_chaste_interface__calcium_concentration__Cass, var_ryanodine_receptors__m) * var_chaste_interface__ryanodine_receptors__P_O1 * var_ryanodine_receptors__k_plus_b; // 1 / millisecond
        const double var_slow_delayed_rectifier_K_I__i_Ks = pow(var_chaste_interface__slow_delayed_rectifier_K_I__nKs, 2) * (-var_fast_transient_outward_K_I__E_K + var_chaste_interface__cell__V) * mParameters[10]; // picoA_per_picoF
        const double var_slow_transient_outward_K_I__g_Kto_s = 0; // milliS_per_microF
        const double var_slow_transient_outward_K_I__i_Kto_s = (-var_fast_transient_outward_K_I__E_K + var_chaste_interface__cell__V) * var_chaste_interface__slow_transient_outward_K_I__ato_s * var_slow_transient_outward_K_I__g_Kto_s * var_chaste_interface__slow_transient_outward_K_I__ito_s; // picoA_per_picoF
        const double var_sodium_background_current__g_Nab = 0.0025999999999999999; // milliS_per_microF
        const double var_sodium_calcium_exchange_current__K_mAllo = 0; // micromolar
        const double var_sodium_calcium_exchange_current__K_mCai = 3.6000000000000001; // micromolar
        const double var_sodium_calcium_exchange_current__K_mCao = 1400.0; // micromolar
        const double var_sodium_calcium_exchange_current__K_mNai = 12000.0; // micromolar
        const double var_sodium_calcium_exchange_current__K_mNao = 88000.0; // micromolar
        const double var_sodium_calcium_exchange_current__eta = 0.34999999999999998; // dimensionless
        const double var_sodium_calcium_exchange_current__k_sat = 0.27000000000000002; // dimensionless
        const double var_fast_sodium_current__E_Na = var_cell__R * var_cell__T * log((mParameters[3] + 0.1111111111111111 * mParameters[2]) / (var_chaste_interface__sodium_concentration__Nai + 0.1111111111111111 * var_chaste_interface__potassium_concentration__Ki)) / var_cell__F; // millivolt
        const double var_fast_sodium_current__i_Na = (-var_fast_sodium_current__E_Na + var_chaste_interface__cell__V) * var_chaste_interface__fast_sodium_current__O_Na * mParameters[6]; // picoA_per_picoF
        const double var_rapid_delayed_rectifier_K_I__i_Kr = (-var_cell__R * var_cell__T * log((mParameters[2] + 0.020408163265306124 * mParameters[3]) / (var_chaste_interface__potassium_concentration__Ki + 0.020408163265306124 * var_chaste_interface__sodium_concentration__Nai)) / var_cell__F + var_chaste_interface__cell__V) * var_chaste_interface__rapid_delayed_rectifier_K_I__O_K * mParameters[9]; // picoA_per_picoF
        const double var_sodium_background_current__i_Nab = (-var_fast_sodium_current__E_Na + var_chaste_interface__cell__V) * var_sodium_background_current__g_Nab; // picoA_per_picoF
        const double var_sodium_calcium_exchange_current__i_NCX = (pow(var_chaste_interface__sodium_concentration__Nai, 3) * mParameters[1] * exp(var_cell__F * var_chaste_interface__cell__V * var_sodium_calcium_exchange_current__eta / (var_cell__R * var_cell__T)) - pow(mParameters[3], 3) * var_calcium_concentration__Cai * exp((-1.0 + var_sodium_calcium_exchange_current__eta) * var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * mParameters[11] / ((1.0 + pow(var_sodium_calcium_exchange_current__K_mAllo, 2) / pow(var_calcium_concentration__Cai, 2)) * (1.0 + var_sodium_calcium_exchange_current__k_sat * exp((-1.0 + var_sodium_calcium_exchange_current__eta) * var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * (pow(mParameters[3], 3) * var_calcium_concentration__Cai + pow(var_sodium_calcium_exchange_current__K_mNao, 3) * var_calcium_concentration__Cai + pow(var_chaste_interface__sodium_concentration__Nai, 3) * mParameters[1] + pow(var_chaste_interface__sodium_concentration__Nai, 3) * var_sodium_calcium_exchange_current__K_mCao + pow(mParameters[3], 3) * (1.0 + pow(var_chaste_interface__sodium_concentration__Nai, 3) / pow(var_sodium_calcium_exchange_current__K_mNai, 3)) * var_sodium_calcium_exchange_current__K_mCai + pow(var_sodium_calcium_exchange_current__K_mNai, 3) * (1.0 + var_calcium_concentration__Cai / var_sodium_calcium_exchange_current__K_mCai) * mParameters[1])); // picoA_per_picoF
        const double var_calcium_concentration__Cai_orig_deriv = (-var_calcium_fluxes__J_serca - 0.5 * (-2.0 * var_sodium_calcium_exchange_current__i_NCX + var_calcium_background_current__i_Cab + var_calcium_pump_current__i_pCa) * var_cell__Acap * mParameters[5] / (var_cell__F * var_cell__Vmyo) + var_calcium_fluxes__J_leak + var_calcium_fluxes__J_xfer) * var_calcium_concentration__Bi; // micromolar / millisecond
        const double d_dt_chaste_interface_var_calcium_concentration__Cai_converted = 0.001 * var_calcium_concentration__Cai_orig_deriv; // millimolar / millisecond
        const double var_sodium_potassium_pump_current__Km_Ko = 1500.0; // micromolar
        const double var_sodium_potassium_pump_current__Km_Nai = 16600.0; // micromolar
        const double var_sodium_potassium_pump_current__i_NaK_max = 2.4860000000000002; // picoA_per_picoF
        const double var_sodium_potassium_pump_current__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(1.4858841010401188e-5 * mParameters[3]); // dimensionless
        const double var_sodium_potassium_pump_current__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T)) + 0.036499999999999998 * var_sodium_potassium_pump_current__sigma * exp(-var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))); // dimensionless
        const double var_sodium_potassium_pump_current__i_NaK = mParameters[2] * var_sodium_potassium_pump_current__f_NaK * var_sodium_potassium_pump_current__i_NaK_max / ((1.0 + pow((var_sodium_potassium_pump_current__Km_Nai / var_chaste_interface__sodium_concentration__Nai), 2.3999999999999999)) * (mParameters[2] + var_sodium_potassium_pump_current__Km_Ko)); // picoA_per_picoF
        const double d_dt_chaste_interface_var_sodium_concentration__Nai = (-var_fast_sodium_current__i_Na - var_sodium_background_current__i_Nab - 3.0 * var_sodium_calcium_exchange_current__i_NCX - 3.0 * var_sodium_potassium_pump_current__i_NaK) * var_cell__Acap * mParameters[5] / (var_cell__F * var_cell__Vmyo); // micromolar / millisecond
        const double var_time_independent_K_I__i_K1 = (-var_fast_transient_outward_K_I__E_K + var_chaste_interface__cell__V) * mParameters[2] * mParameters[7] / ((1.0 + exp(0.089599999999999999 * var_chaste_interface__cell__V - 0.089599999999999999 * var_fast_transient_outward_K_I__E_K)) * (210.0 + mParameters[2])); // picoA_per_picoF
        const double var_ultra_rapidly_activating_delayed_rectifier_K_I__g_Kur = 0.25; // milliS_per_microF
        const double var_ultra_rapidly_activating_delayed_rectifier_K_I__i_Kur = (-var_fast_transient_outward_K_I__E_K + var_chaste_interface__cell__V) * var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_K_I__aur * var_ultra_rapidly_activating_delayed_rectifier_K_I__g_Kur * var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_K_I__iur; // picoA_per_picoF
        const double d_dt_chaste_interface_var_potassium_concentration__Ki = (-var_cell__i_Stim - var_fast_transient_outward_K_I__i_Kto_f - var_non_inactivating_steady_state_K_I__i_Kss - var_rapid_delayed_rectifier_K_I__i_Kr - var_slow_delayed_rectifier_K_I__i_Ks - var_slow_transient_outward_K_I__i_Kto_s - var_time_independent_K_I__i_K1 - var_ultra_rapidly_activating_delayed_rectifier_K_I__i_Kur + 2.0 * var_sodium_potassium_pump_current__i_NaK) * var_cell__Acap * mParameters[5] / (var_cell__F * var_cell__Vmyo); // micromolar / millisecond
        
        rResidual[4] = rCurrentGuess[4] - rY[1] - mDt*d_dt_chaste_interface_var_calcium_concentration__Cai_converted;
        rResidual[5] = rCurrentGuess[5] - rY[2] - mDt*d_dt_chaste_interface_var_calcium_concentration__Cass;
        rResidual[2] = rCurrentGuess[2] - rY[3] - mDt*d_dt_chaste_interface_var_calcium_concentration__CaJSR;
        rResidual[3] = rCurrentGuess[3] - rY[4] - mDt*d_dt_chaste_interface_var_calcium_concentration__CaNSR;
        rResidual[7] = rCurrentGuess[7] - rY[5] - mDt*d_dt_chaste_interface_var_calcium_fluxes__P_RyR;
        rResidual[6] = rCurrentGuess[6] - rY[6] - mDt*d_dt_chaste_interface_var_calcium_fluxes__CaMKt;
        rResidual[23] = rCurrentGuess[23] - rY[7] - mDt*d_dt_chaste_interface_var_ryanodine_receptors__P_O1;
        rResidual[24] = rCurrentGuess[24] - rY[8] - mDt*d_dt_chaste_interface_var_ryanodine_receptors__P_O2;
        rResidual[22] = rCurrentGuess[22] - rY[9] - mDt*d_dt_chaste_interface_var_ryanodine_receptors__P_C2;
        rResidual[1] = rCurrentGuess[1] - rY[10] - mDt*d_dt_chaste_interface_var_L_type_calcium_current__O;
        rResidual[0] = rCurrentGuess[0] - rY[11] - mDt*d_dt_chaste_interface_var_L_type_calcium_current__I;
        rResidual[25] = rCurrentGuess[25] - rY[13] - mDt*d_dt_chaste_interface_var_sodium_concentration__Nai;
        rResidual[15] = rCurrentGuess[15] - rY[14] - mDt*d_dt_chaste_interface_var_fast_sodium_current__O_Na;
        rResidual[8] = rCurrentGuess[8] - rY[15] - mDt*d_dt_chaste_interface_var_fast_sodium_current__C_Na1;
        rResidual[9] = rCurrentGuess[9] - rY[16] - mDt*d_dt_chaste_interface_var_fast_sodium_current__C_Na2;
        rResidual[10] = rCurrentGuess[10] - rY[17] - mDt*d_dt_chaste_interface_var_fast_sodium_current__I1_Na;
        rResidual[11] = rCurrentGuess[11] - rY[18] - mDt*d_dt_chaste_interface_var_fast_sodium_current__I2_Na;
        rResidual[14] = rCurrentGuess[14] - rY[19] - mDt*d_dt_chaste_interface_var_fast_sodium_current__IF_Na;
        rResidual[12] = rCurrentGuess[12] - rY[20] - mDt*d_dt_chaste_interface_var_fast_sodium_current__IC_Na2;
        rResidual[13] = rCurrentGuess[13] - rY[21] - mDt*d_dt_chaste_interface_var_fast_sodium_current__IC_Na3;
        rResidual[17] = rCurrentGuess[17] - rY[22] - mDt*d_dt_chaste_interface_var_potassium_concentration__Ki;
        rResidual[16] = rCurrentGuess[16] - rY[26] - mDt*d_dt_chaste_interface_var_non_inactivating_steady_state_K_I__iKss;
        rResidual[21] = rCurrentGuess[21] - rY[27] - mDt*d_dt_chaste_interface_var_rapid_delayed_rectifier_K_I__O_K;
        rResidual[18] = rCurrentGuess[18] - rY[28] - mDt*d_dt_chaste_interface_var_rapid_delayed_rectifier_K_I__C_K1;
        rResidual[19] = rCurrentGuess[19] - rY[29] - mDt*d_dt_chaste_interface_var_rapid_delayed_rectifier_K_I__C_K2;
        rResidual[20] = rCurrentGuess[20] - rY[30] - mDt*d_dt_chaste_interface_var_rapid_delayed_rectifier_K_I__I_K;
    }

    void Cellli_mouse_2010FromCellMLBackwardEulerNoLut::ComputeJacobian(double var_chaste_interface__environment__time, const double rCurrentGuess[26], double rJacobian[26][26])
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -78.9452115785979
        double var_chaste_interface__L_type_calcium_current__y_gate = rY[12];
        // Units: dimensionless; Initial value: 0.845044436980163
        double var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_K_I__aur = rY[23];
        // Units: dimensionless; Initial value: 0.00346258606821817
        double var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_K_I__iur = rY[24];
        // Units: dimensionless; Initial value: 0.955684946168062
        double var_chaste_interface__non_inactivating_steady_state_K_I__aKss = rY[25];
        // Units: dimensionless; Initial value: 0.287585636847048
        double var_chaste_interface__slow_delayed_rectifier_K_I__nKs = rY[31];
        // Units: dimensionless; Initial value: 0.00336735013094628
        double var_chaste_interface__fast_transient_outward_K_I__ato_f = rY[32];
        // Units: dimensionless; Initial value: 0.0142335908879204
        double var_chaste_interface__fast_transient_outward_K_I__ito_f = rY[33];
        // Units: dimensionless; Initial value: 0.996989882138174
        
        double var_chaste_interface__L_type_calcium_current__I = rCurrentGuess[0];
        double var_chaste_interface__L_type_calcium_current__O = rCurrentGuess[1];
        double var_chaste_interface__calcium_concentration__CaJSR = rCurrentGuess[2];
        double var_chaste_interface__calcium_concentration__CaNSR = rCurrentGuess[3];
        double var_chaste_interface__calcium_concentration__Cai_converted = rCurrentGuess[4];
        double var_chaste_interface__calcium_concentration__Cass = rCurrentGuess[5];
        double var_chaste_interface__calcium_fluxes__CaMKt = rCurrentGuess[6];
        double var_chaste_interface__calcium_fluxes__P_RyR = rCurrentGuess[7];
        double var_chaste_interface__fast_sodium_current__O_Na = rCurrentGuess[15];
        double var_chaste_interface__non_inactivating_steady_state_K_I__iKss = rCurrentGuess[16];
        double var_chaste_interface__potassium_concentration__Ki = rCurrentGuess[17];
        double var_chaste_interface__rapid_delayed_rectifier_K_I__O_K = rCurrentGuess[21];
        double var_chaste_interface__ryanodine_receptors__P_C2 = rCurrentGuess[22];
        double var_chaste_interface__ryanodine_receptors__P_O1 = rCurrentGuess[23];
        double var_chaste_interface__ryanodine_receptors__P_O2 = rCurrentGuess[24];
        double var_chaste_interface__sodium_concentration__Nai = rCurrentGuess[25];
        
        const double var_x0 = exp(0.15506520491866829 * var_chaste_interface__cell__V);
        const double var_x1 = 0.0625 + var_x0;
        const double var_x2 = 1 / (1.0 + var_x0);
        const double var_x3 = 0.0028985507246376812 * var_x1 * var_x2;
        const double var_x4 = -var_x3 * var_chaste_interface__calcium_concentration__Cass;
        const double var_x5 = -0.66666666666666663 * var_x0 * var_x2;
        const double var_x6 = 1 + 0.0015873015873015873 * var_chaste_interface__calcium_concentration__CaJSR;
        const double var_x7 = pow(var_x6, (-2));
        const double var_x8 = 1 / (1.0 + 79.365079365079367 * var_x7);
        const double var_x9 = var_chaste_interface__ryanodine_receptors__P_O1 + var_chaste_interface__ryanodine_receptors__P_O2;
        const double var_x10 = var_chaste_interface__calcium_fluxes__P_RyR * mParameters[0];
        const double var_x11 = var_x10 * var_x9;
        const double var_x12 = var_chaste_interface__environment__time < 3333330000000.0005;
        const double var_x13 = ((var_x12) ? (var_x11) : (10.0));
        const double var_x14 = -var_chaste_interface__calcium_concentration__Cass;
        const double var_x15 = var_x14 + var_chaste_interface__calcium_concentration__CaJSR;
        const double var_x16 = ((var_x12) ? (var_x11 * var_x15) : (10.0 * var_chaste_interface__calcium_concentration__CaJSR - 10.0 * var_chaste_interface__calcium_concentration__Cass));
        const double var_x17 = -var_chaste_interface__ryanodine_receptors__P_O1 - var_chaste_interface__ryanodine_receptors__P_O2;
        const double var_x18 = ((var_x12) ? (var_x10 * var_x17) : (-10.0));
        const double var_x19 = ((var_x12) ? (var_x15 * var_x9 * mParameters[0]) : (0));
        const double var_x20 = ((var_x12) ? (var_x10 * var_x15) : (0));
        const double var_x21 = -var_x20 * var_x8;
        const double var_x22 = ((var_x12) ? (3.0000000000000001e-5) : (0.10000000000000001));
        const double var_x23 = ((var_x12) ? (-0.029999999999999999) : (-100.0));
        const double var_x24 = pow(var_chaste_interface__calcium_concentration__Cai_converted, 2);
        const double var_x25 = 1000000.0 * var_x24;
        const double var_x26 = 1 / (0.16974399999999998 + var_x25);
        const double var_x27 = 1.0 - var_chaste_interface__calcium_fluxes__CaMKt;
        const double var_x28 = 1.0 + 0.69999999999999996 / var_chaste_interface__calcium_concentration__Cass;
        const double var_x29 = 1 / var_x28;
        const double var_x30 = 0.050000000000000003 * var_x29;
        const double var_x31 = var_x27 * var_x30 + var_chaste_interface__calcium_fluxes__CaMKt;
        const double var_x32 = pow(var_x31, 2.5830000000000002);
        const double var_x33 = 1 / (1.7590641847756086 + var_x32);
        const double var_x34 = 1.5167893800000001 * var_x33;
        const double var_x35 = 0.50590000000000002 + var_x32 * var_x34;
        const double var_x36 = var_x26 * var_x35;
        const double var_x37 = var_x36 * var_chaste_interface__calcium_concentration__Cai_converted;
        const double var_x38 = pow(var_chaste_interface__calcium_concentration__Cai_converted, 3);
        const double var_x39 = var_x35 * var_x38 / pow((1.6974399999999999e-7 + var_x24), 2);
        const double var_x40 = pow(var_x31, 1.5830000000000002);
        const double var_x41 = pow(var_chaste_interface__calcium_concentration__Cass, (-2));
        const double var_x42 = var_x27 * var_x41 / pow(var_x28, 2);
        const double var_x43 = pow(var_x31, 4.1660000000000004) / pow((1 + 0.56848408867329814 * var_x32), 2);
        const double var_x44 = var_x26 * (-0.044315367702357472 * var_x42 * var_x43 + 0.13712534389890002 * var_x33 * var_x40 * var_x42);
        const double var_x45 = 95238095.238095239 * var_x24;
        const double var_x46 = 2.5830000000000002 - 0.12915000000000001 * var_x29;
        const double var_x47 = var_x26 * (-0.49018713237495126 * var_x43 * var_x46 + var_x34 * var_x40 * var_x46);
        const double var_x48 = 0.00059999999999999995 + var_chaste_interface__calcium_concentration__Cai_converted;
        const double var_x49 = 1.0 + 6.5400000000000004e-5 / pow(var_x48, 2);
        const double var_x50 = 1 / var_x49;
        const double var_x51 = 0.001 * var_x50;
        const double var_x52 = 1 / var_chaste_interface__calcium_concentration__Cai_converted;
        const double var_x53 = 1 / (0.083232249999999994 + var_x25);
        const double var_x54 = pow(mParameters[3], 3);
        const double var_x55 = 1000.0 * var_x54;
        const double var_x56 = -6.81472e+17 - var_x55 - 480000000000000.0 * mParameters[1];
        const double var_x57 = pow(var_chaste_interface__sodium_concentration__Nai, 3);
        const double var_x58 = var_x54 * (1.0 + 5.7870370370370368e-13 * var_x57);
        const double var_x59 = (1.0 + 277.77777777777777 * var_chaste_interface__calcium_concentration__Cai_converted) * mParameters[1];
        const double var_x60 = var_x57 * mParameters[1];
        const double var_x61 = exp(-0.024495140414072337 * var_chaste_interface__cell__V);
        const double var_x62 = 1 / (1.0 + 0.27000000000000002 * var_x61);
        const double var_x63 = exp(0.013189690992192795 * var_chaste_interface__cell__V);
        const double var_x64 = var_x55 * var_chaste_interface__calcium_concentration__Cai_converted;
        const double var_x65 = var_x62 * (var_x60 * var_x63 - var_x61 * var_x64) * mParameters[11];
        const double var_x66 = var_x65 / pow((2.0543764087152516e-15 * var_x57 + 5.282682193839219e-18 * var_x58 + 2.535687453042825e-6 * var_x59 + 1.4674117205108941e-18 * var_x60 + 1.4674117205108941e-15 * var_x54 * var_chaste_interface__calcium_concentration__Cai_converted + var_chaste_interface__calcium_concentration__Cai_converted), 2);
        const double var_x67 = 1.4063880539705308e-37 * var_x66;
        const double var_x68 = 1 / (var_x60 + var_x64 + 1400.0 * var_x57 + 1728000000000.0 * var_x59 + 3.6000000000000001 * var_x58 + 6.81472e+17 * var_chaste_interface__calcium_concentration__Cai_converted);
        const double var_x69 = var_x62 * var_x68 * mParameters[11];
        const double var_x70 = var_x54 * var_x61 * var_x69;
        const double var_x71 = pow(var_chaste_interface__sodium_concentration__Nai, 2);
        const double var_x72 = var_x71 * mParameters[1];
        const double var_x73 = -3 * var_x72 - 4200.0 * var_x71 - 6.2500000000000002e-12 * var_x54 * var_x71;
        const double var_x74 = var_x63 * var_x69 * var_x72;
        const double var_x75 = 0.59999999999999998 + var_chaste_interface__calcium_concentration__Cass;
        const double var_x76 = pow(var_x75, (-2));
        const double var_x77 = 1 / (1.0 + 65.399999999999991 * var_x76);
        const double var_x78 = 0.075369662812530269 * var_chaste_interface__cell__V;
        const double var_x79 = exp(-var_x78);
        const double var_x80 = mParameters[4] * var_chaste_interface__L_type_calcium_current__y_gate / mParameters[5];
        const double var_x81 = 0.0023079445283571576 * var_x80 * var_chaste_interface__cell__V / (1.0 - var_x79);
        const double var_x82 = var_x81 * (var_x14 + var_x79 * mParameters[1]);
        const double var_x83 = fabs(var_x78) > 1.0000000000000001e-5;
        const double var_x84 = exp(-1.0000000000000001e-5);
        const double var_x85 = 3.062166450310111e-7 * var_x80 / (1.0 - var_x84);
        const double var_x86 = var_x85 * (var_x14 + var_x84 * mParameters[1]);
        const double var_x87 = ((var_x83) ? (-var_x82) : (-var_x86));
        const double var_x88 = 32.656617993405561 * mParameters[5];
        const double var_x89 = 3.5000000000000004 * var_x77;
        const double var_x90 = ((var_x83) ? (var_x81 * var_chaste_interface__L_type_calcium_current__O) : (var_x85 * var_chaste_interface__L_type_calcium_current__O));
        const double var_x91 = var_x20 * var_x89;
        const double var_x92 = 0.0025000000000000005 * var_x29;
        const double var_x93 = 0.2857142857142857 * exp(-0.038580246913580245 * pow((-1 + 0.20000000000000001 * var_chaste_interface__cell__V), 2));
        const double var_x94 = -0.04926108374384236 * var_chaste_interface__cell__V;
        const double var_x95 = 0.20000000000000001 * exp(0.12315270935960591 + var_x94);
        const double var_x96 = -var_x95;
        const double var_x97 = exp(-0.016666666666666666 - 0.0066666666666666671 * var_chaste_interface__cell__V);
        const double var_x98 = 1 / (0.25 * var_x97 + 0.1027 * exp(-0.20833333333333334 - 0.083333333333333329 * var_chaste_interface__cell__V));
        const double var_x99 = 3.802 * var_x98;
        const double var_x100 = 2.0000000000000002e-5 * var_chaste_interface__cell__V;
        const double var_x101 = -0.008539999999999999 - var_x100;
        const double var_x102 = 3.802 / (0.1027 * exp(-0.16666666666666666 - 0.066666666666666666 * var_chaste_interface__cell__V) + 0.23000000000000001 * var_x97);
        const double var_x103 = exp(-0.90909090909090906 - 0.12987012987012986 * var_chaste_interface__cell__V);
        const double var_x104 = 6.9999999999999997e-7 * var_x103;
        const double var_x105 = exp(0.36945812807881773 + var_x94);
        const double var_x106 = 0.22 * var_x105;
        const double var_x107 = 3.802 / (0.20000000000000001 * var_x97 + 0.1027 * exp(-0.14705882352941177 - 0.058823529411764705 * var_chaste_interface__cell__V));
        const double var_x108 = -var_x107;
        const double var_x109 = 0.19170000000000001 * exp(-0.12315270935960591 + var_x94);
        const double var_x110 = -var_x102 - var_x109;
        const double var_x111 = var_x101 + var_x108;
        const double var_x112 = -var_x104;
        const double var_x113 = 1 / (0.39395599999999997 + 0.188495 * exp(-0.42168674698795178 - 0.060240963855421679 * var_chaste_interface__cell__V));
        const double var_x114 = 1.0526315789473684e-5 * var_x113;
        const double var_x115 = 1.4e-8 * var_x103;
        const double var_x116 = 0.001 * var_x113;
        const double var_x117 = 0.008539999999999999 + var_x100;
        const double var_x118 = 1.2097272727272726e-5 * var_x103 * var_x113 * var_x98 / (var_x105 * var_x117);
        const double var_x119 = var_x113;
        const double var_x120 = -var_chaste_interface__cell__V;
        const double var_x121 = 1 / var_chaste_interface__potassium_concentration__Ki;
        const double var_x122 = var_x121 * mParameters[2];
        const double var_x123 = log(var_x122);
        const double var_x124 = 26.535875647668394 * var_x123;
        const double var_x125 = 0.065313235986811116 * mParameters[5];
        const double var_x126 = var_chaste_interface__non_inactivating_steady_state_K_I__aKss * mParameters[8];
        const double var_x127 = 1 / (var_chaste_interface__potassium_concentration__Ki + 0.020408163265306124 * var_chaste_interface__sodium_concentration__Nai);
        const double var_x128 = var_x127 * var_chaste_interface__rapid_delayed_rectifier_K_I__O_K * mParameters[9];
        const double var_x129 = 1.7331439082928402 * var_x121;
        const double var_x130 = exp(0.089599999999999999 * var_chaste_interface__cell__V - 2.3776144580310881 * var_x123);
        const double var_x131 = 1.0 + var_x130;
        const double var_x132 = var_x122 * mParameters[7] / (210.0 + mParameters[2]);
        const double var_x133 = 1 / var_chaste_interface__sodium_concentration__Nai;
        const double var_x134 = pow(var_x133, 2.3999999999999999);
        const double var_x135 = var_x133 * var_x134 * mParameters[2] / ((1500.0 + mParameters[2]) * pow((7.44287265976699e-11 + var_x134), 2) * (1.0 + 0.1245 * exp(-0.0037684831406265135 * var_chaste_interface__cell__V) + 0.036499999999999998 * (-0.14285714285714285 + 0.14285714285714285 * exp(1.4858841010401188e-5 * mParameters[3])) * exp(-0.037684831406265135 * var_chaste_interface__cell__V)));
        const double var_x136 = -0.022348 * exp(0.01176 * var_chaste_interface__cell__V);
        const double var_x137 = 0.033500000000000002 * exp(0.0109 * var_chaste_interface__cell__V);
        const double var_x138 = 6.8899999999999994e-5 * exp(-0.041779999999999998 * var_chaste_interface__cell__V);
        const double var_x139 = 0.0064970000000000002 * exp(-0.16339999999999999 - 0.032680000000000001 * var_chaste_interface__cell__V);
        const double var_x140 = 0.070300000000000001 * exp(0.14349999999999999 + 0.0287 * var_chaste_interface__cell__V);
        const double var_x141 = pow(var_chaste_interface__calcium_concentration__Cass, 3.0);
        const double var_x142 = 0.012149999999999999 * pow(var_chaste_interface__calcium_concentration__Cass, 2.0) * var_chaste_interface__ryanodine_receptors__P_O1;
        const double var_x143 = -0.0060749999999999997 * pow(var_chaste_interface__calcium_concentration__Cass, 4.0);
        const double var_x144 = 0.0040499999999999998 * var_x141;
        const double var_x145 = 4.2191641619115923e-37 * var_x66;
        const double var_x146 = 1 / (var_chaste_interface__sodium_concentration__Nai + 0.1111111111111111 * var_chaste_interface__potassium_concentration__Ki);
        const double var_x147 = var_x146 * var_chaste_interface__fast_sodium_current__O_Na * mParameters[6];
        
        
        rJacobian[0][0] = 1.0 - (mDt * (var_x4 - 0.00034782608695652176 * var_x1 / (0.0625 + 0.40000000000000002 * var_x0)));
        rJacobian[0][1] = -(mDt * (var_x4));
        rJacobian[0][2] = 0.0;
        rJacobian[0][3] = 0.0;
        rJacobian[0][4] = 0.0;
        rJacobian[0][5] = -(mDt * (var_x3 * (1.0 - var_chaste_interface__L_type_calcium_current__I - var_chaste_interface__L_type_calcium_current__O)));
        rJacobian[0][6] = 0.0;
        rJacobian[0][7] = 0.0;
        rJacobian[0][8] = 0.0;
        rJacobian[0][9] = 0.0;
        rJacobian[0][10] = 0.0;
        rJacobian[0][11] = 0.0;
        rJacobian[0][12] = 0.0;
        rJacobian[0][13] = 0.0;
        rJacobian[0][14] = 0.0;
        rJacobian[0][15] = 0.0;
        rJacobian[0][16] = 0.0;
        rJacobian[0][17] = 0.0;
        rJacobian[0][18] = 0.0;
        rJacobian[0][19] = 0.0;
        rJacobian[0][20] = 0.0;
        rJacobian[0][21] = 0.0;
        rJacobian[0][22] = 0.0;
        rJacobian[0][23] = 0.0;
        rJacobian[0][24] = 0.0;
        rJacobian[0][25] = 0.0;
        rJacobian[1][0] = -(mDt * (var_x5));
        rJacobian[1][1] = 1.0 - (mDt * (-1.1986666666666668 + var_x5));
        rJacobian[1][2] = 0.0;
        rJacobian[1][3] = 0.0;
        rJacobian[1][4] = 0.0;
        rJacobian[1][5] = 0.0;
        rJacobian[1][6] = 0.0;
        rJacobian[1][7] = 0.0;
        rJacobian[1][8] = 0.0;
        rJacobian[1][9] = 0.0;
        rJacobian[1][10] = 0.0;
        rJacobian[1][11] = 0.0;
        rJacobian[1][12] = 0.0;
        rJacobian[1][13] = 0.0;
        rJacobian[1][14] = 0.0;
        rJacobian[1][15] = 0.0;
        rJacobian[1][16] = 0.0;
        rJacobian[1][17] = 0.0;
        rJacobian[1][18] = 0.0;
        rJacobian[1][19] = 0.0;
        rJacobian[1][20] = 0.0;
        rJacobian[1][21] = 0.0;
        rJacobian[1][22] = 0.0;
        rJacobian[1][23] = 0.0;
        rJacobian[1][24] = 0.0;
        rJacobian[1][25] = 0.0;
        rJacobian[2][0] = 0.0;
        rJacobian[2][1] = 0.0;
        rJacobian[2][2] = 1.0 - (mDt * (var_x8 * (-0.050000000000000003 - var_x13) + 4.0000000000000003e-5 * (-var_x16 + 0.050000000000000003 * var_chaste_interface__calcium_concentration__CaNSR - 0.050000000000000003 * var_chaste_interface__calcium_concentration__CaJSR) / (pow(var_x6, 3) * pow((0.0126 + var_x7), 2))));
        rJacobian[2][3] = -(mDt * (0.050000000000000003 * var_x8));
        rJacobian[2][4] = 0.0;
        rJacobian[2][5] = -(mDt * (-var_x18 * var_x8));
        rJacobian[2][6] = 0.0;
        rJacobian[2][7] = -(mDt * (-var_x19 * var_x8));
        rJacobian[2][8] = 0.0;
        rJacobian[2][9] = 0.0;
        rJacobian[2][10] = 0.0;
        rJacobian[2][11] = 0.0;
        rJacobian[2][12] = 0.0;
        rJacobian[2][13] = 0.0;
        rJacobian[2][14] = 0.0;
        rJacobian[2][15] = 0.0;
        rJacobian[2][16] = 0.0;
        rJacobian[2][17] = 0.0;
        rJacobian[2][18] = 0.0;
        rJacobian[2][19] = 0.0;
        rJacobian[2][20] = 0.0;
        rJacobian[2][21] = 0.0;
        rJacobian[2][22] = 0.0;
        rJacobian[2][23] = -(mDt * (var_x21));
        rJacobian[2][24] = -(mDt * (var_x21));
        rJacobian[2][25] = 0.0;
        rJacobian[3][0] = 0.0;
        rJacobian[3][1] = 0.0;
        rJacobian[3][2] = -(mDt * (0.016666666666666666));
        rJacobian[3][3] = 1.0 - (mDt * (-0.016666666666666666 - 95.238095238095241 * var_x22));
        rJacobian[3][4] = -(mDt * (190476190.47619048 * var_x37 - 95.238095238095241 * var_x23 - 190.47619047619048 * var_x39));
        rJacobian[3][5] = -(mDt * (var_x44 * var_x45));
        rJacobian[3][6] = -(mDt * (var_x45 * var_x47));
        rJacobian[3][7] = 0.0;
        rJacobian[3][8] = 0.0;
        rJacobian[3][9] = 0.0;
        rJacobian[3][10] = 0.0;
        rJacobian[3][11] = 0.0;
        rJacobian[3][12] = 0.0;
        rJacobian[3][13] = 0.0;
        rJacobian[3][14] = 0.0;
        rJacobian[3][15] = 0.0;
        rJacobian[3][16] = 0.0;
        rJacobian[3][17] = 0.0;
        rJacobian[3][18] = 0.0;
        rJacobian[3][19] = 0.0;
        rJacobian[3][20] = 0.0;
        rJacobian[3][21] = 0.0;
        rJacobian[3][22] = 0.0;
        rJacobian[3][23] = 0.0;
        rJacobian[3][24] = 0.0;
        rJacobian[3][25] = 0.0;
        rJacobian[4][0] = 0.0;
        rJacobian[4][1] = 0.0;
        rJacobian[4][2] = 0.0;
        rJacobian[4][3] = -(mDt * (var_x22 * var_x51));
        rJacobian[4][4] = 1.0 - (mDt * (var_x51 * (-125.0 + var_x23 + 2.0 * var_x39 - 2000000.0 * var_x37 + (-65.313235986811122 * var_x70 - 0.00030330018395124703 * var_x52 + var_x56 * var_x67 + 0.0062374140367404624 * var_x38 / pow((8.3232249999999994e-8 + var_x24), 2) - 6237.4140367404616 * var_x53 * var_chaste_interface__calcium_concentration__Cai_converted) * mParameters[5]) + 1.3080000000000001e-7 * (0.125 * var_chaste_interface__calcium_concentration__Cass - 125.0 * var_chaste_interface__calcium_concentration__Cai_converted - var_x25 * var_x36 - 0.032656617993405558 * (0.00069999999999999999 * var_chaste_interface__cell__V - 0.0092875564766839377 * log(0.001 * var_x52 * mParameters[1]) + 95500.0 * var_x24 * var_x53 - 2.0 * var_x65 * var_x68) * mParameters[5] + ((var_x12) ? (3.0000000000000001e-5 * var_chaste_interface__calcium_concentration__CaNSR - 0.029999999999999999 * var_chaste_interface__calcium_concentration__Cai_converted) : (0.10000000000000001 * var_chaste_interface__calcium_concentration__CaNSR - 100.0 * var_chaste_interface__calcium_concentration__Cai_converted))) / (pow(var_x48, 3) * pow(var_x49, 2))));
        rJacobian[4][5] = -(mDt * (var_x51 * (0.125 - var_x25 * var_x44)));
        rJacobian[4][6] = -(mDt * (-1000.0 * var_x24 * var_x47 * var_x50));
        rJacobian[4][7] = 0.0;
        rJacobian[4][8] = 0.0;
        rJacobian[4][9] = 0.0;
        rJacobian[4][10] = 0.0;
        rJacobian[4][11] = 0.0;
        rJacobian[4][12] = 0.0;
        rJacobian[4][13] = 0.0;
        rJacobian[4][14] = 0.0;
        rJacobian[4][15] = 0.0;
        rJacobian[4][16] = 0.0;
        rJacobian[4][17] = 0.0;
        rJacobian[4][18] = 0.0;
        rJacobian[4][19] = 0.0;
        rJacobian[4][20] = 0.0;
        rJacobian[4][21] = 0.0;
        rJacobian[4][22] = 0.0;
        rJacobian[4][23] = 0.0;
        rJacobian[4][24] = 0.0;
        rJacobian[4][25] = -(mDt * (var_x51 * (0.19593970796043336 * var_x74 + var_x67 * var_x73) * mParameters[5]));
        rJacobian[5][0] = 0.0;
        rJacobian[5][1] = -(mDt * (-var_x77 * var_x87 * var_x88));
        rJacobian[5][2] = -(mDt * (var_x13 * var_x89));
        rJacobian[5][3] = 0.0;
        rJacobian[5][4] = -(mDt * (125000.0 * var_x77));
        rJacobian[5][5] = 1.0 - (mDt * (var_x77 * (-125.0 + 3.5000000000000004 * var_x18 - var_x88 * var_x90) + 0.030581039755351685 * (125000.0 * var_chaste_interface__calcium_concentration__Cai_converted + 3.5000000000000004 * var_x16 - 125.0 * var_chaste_interface__calcium_concentration__Cass - var_x88 * ((var_x83) ? (-var_x82 * var_chaste_interface__L_type_calcium_current__O) : (-var_x86 * var_chaste_interface__L_type_calcium_current__O))) / (pow(var_x75, 3) * pow((0.015290519877675841 + var_x76), 2))));
        rJacobian[5][6] = 0.0;
        rJacobian[5][7] = -(mDt * (var_x19 * var_x89));
        rJacobian[5][8] = 0.0;
        rJacobian[5][9] = 0.0;
        rJacobian[5][10] = 0.0;
        rJacobian[5][11] = 0.0;
        rJacobian[5][12] = 0.0;
        rJacobian[5][13] = 0.0;
        rJacobian[5][14] = 0.0;
        rJacobian[5][15] = 0.0;
        rJacobian[5][16] = 0.0;
        rJacobian[5][17] = 0.0;
        rJacobian[5][18] = 0.0;
        rJacobian[5][19] = 0.0;
        rJacobian[5][20] = 0.0;
        rJacobian[5][21] = 0.0;
        rJacobian[5][22] = 0.0;
        rJacobian[5][23] = -(mDt * (var_x91));
        rJacobian[5][24] = -(mDt * (var_x91));
        rJacobian[5][25] = 0.0;
        rJacobian[6][0] = 0.0;
        rJacobian[6][1] = 0.0;
        rJacobian[6][2] = 0.0;
        rJacobian[6][3] = 0.0;
        rJacobian[6][4] = 0.0;
        rJacobian[6][5] = -(mDt * (0.00175 * var_x31 * var_x42 + 8.7500000000000013e-5 * var_x41 * pow(var_x27, 2) / pow(var_x28, 3)));
        rJacobian[6][6] = 1.0 - (mDt * (-0.00020000000000000001 - var_x31 * var_x92 + var_x27 * var_x92 * (1 - var_x30)));
        rJacobian[6][7] = 0.0;
        rJacobian[6][8] = 0.0;
        rJacobian[6][9] = 0.0;
        rJacobian[6][10] = 0.0;
        rJacobian[6][11] = 0.0;
        rJacobian[6][12] = 0.0;
        rJacobian[6][13] = 0.0;
        rJacobian[6][14] = 0.0;
        rJacobian[6][15] = 0.0;
        rJacobian[6][16] = 0.0;
        rJacobian[6][17] = 0.0;
        rJacobian[6][18] = 0.0;
        rJacobian[6][19] = 0.0;
        rJacobian[6][20] = 0.0;
        rJacobian[6][21] = 0.0;
        rJacobian[6][22] = 0.0;
        rJacobian[6][23] = 0.0;
        rJacobian[6][24] = 0.0;
        rJacobian[6][25] = 0.0;
        rJacobian[7][0] = 0.0;
        rJacobian[7][1] = -(mDt * (-var_x87 * var_x93));
        rJacobian[7][2] = 0.0;
        rJacobian[7][3] = 0.0;
        rJacobian[7][4] = 0.0;
        rJacobian[7][5] = -(mDt * (-var_x90 * var_x93));
        rJacobian[7][6] = 0.0;
        rJacobian[7][7] = 1.0 - (mDt * (-0.01));
        rJacobian[7][8] = 0.0;
        rJacobian[7][9] = 0.0;
        rJacobian[7][10] = 0.0;
        rJacobian[7][11] = 0.0;
        rJacobian[7][12] = 0.0;
        rJacobian[7][13] = 0.0;
        rJacobian[7][14] = 0.0;
        rJacobian[7][15] = 0.0;
        rJacobian[7][16] = 0.0;
        rJacobian[7][17] = 0.0;
        rJacobian[7][18] = 0.0;
        rJacobian[7][19] = 0.0;
        rJacobian[7][20] = 0.0;
        rJacobian[7][21] = 0.0;
        rJacobian[7][22] = 0.0;
        rJacobian[7][23] = 0.0;
        rJacobian[7][24] = 0.0;
        rJacobian[7][25] = 0.0;
        rJacobian[8][0] = 0.0;
        rJacobian[8][1] = 0.0;
        rJacobian[8][2] = 0.0;
        rJacobian[8][3] = 0.0;
        rJacobian[8][4] = 0.0;
        rJacobian[8][5] = 0.0;
        rJacobian[8][6] = 0.0;
        rJacobian[8][7] = 0.0;
        rJacobian[8][8] = 1.0 - (mDt * (var_x101 + var_x96 - var_x99));
        rJacobian[8][9] = -(mDt * (var_x102));
        rJacobian[8][10] = 0.0;
        rJacobian[8][11] = 0.0;
        rJacobian[8][12] = 0.0;
        rJacobian[8][13] = 0.0;
        rJacobian[8][14] = -(mDt * (var_x104));
        rJacobian[8][15] = -(mDt * (var_x106));
        rJacobian[8][16] = 0.0;
        rJacobian[8][17] = 0.0;
        rJacobian[8][18] = 0.0;
        rJacobian[8][19] = 0.0;
        rJacobian[8][20] = 0.0;
        rJacobian[8][21] = 0.0;
        rJacobian[8][22] = 0.0;
        rJacobian[8][23] = 0.0;
        rJacobian[8][24] = 0.0;
        rJacobian[8][25] = 0.0;
        rJacobian[9][0] = 0.0;
        rJacobian[9][1] = 0.0;
        rJacobian[9][2] = 0.0;
        rJacobian[9][3] = 0.0;
        rJacobian[9][4] = 0.0;
        rJacobian[9][5] = 0.0;
        rJacobian[9][6] = 0.0;
        rJacobian[9][7] = 0.0;
        rJacobian[9][8] = -(mDt * (var_x108 + var_x95));
        rJacobian[9][9] = 1.0 - (mDt * (var_x110 + var_x111));
        rJacobian[9][10] = -(mDt * (var_x108));
        rJacobian[9][11] = -(mDt * (var_x108));
        rJacobian[9][12] = -(mDt * (var_x104 + var_x108));
        rJacobian[9][13] = -(mDt * (var_x108));
        rJacobian[9][14] = -(mDt * (var_x108));
        rJacobian[9][15] = -(mDt * (var_x108));
        rJacobian[9][16] = 0.0;
        rJacobian[9][17] = 0.0;
        rJacobian[9][18] = 0.0;
        rJacobian[9][19] = 0.0;
        rJacobian[9][20] = 0.0;
        rJacobian[9][21] = 0.0;
        rJacobian[9][22] = 0.0;
        rJacobian[9][23] = 0.0;
        rJacobian[9][24] = 0.0;
        rJacobian[9][25] = 0.0;
        rJacobian[10][0] = 0.0;
        rJacobian[10][1] = 0.0;
        rJacobian[10][2] = 0.0;
        rJacobian[10][3] = 0.0;
        rJacobian[10][4] = 0.0;
        rJacobian[10][5] = 0.0;
        rJacobian[10][6] = 0.0;
        rJacobian[10][7] = 0.0;
        rJacobian[10][8] = 0.0;
        rJacobian[10][9] = 0.0;
        rJacobian[10][10] = 1.0 - (mDt * (var_x112 - var_x114));
        rJacobian[10][11] = -(mDt * (var_x115));
        rJacobian[10][12] = 0.0;
        rJacobian[10][13] = 0.0;
        rJacobian[10][14] = -(mDt * (var_x116));
        rJacobian[10][15] = 0.0;
        rJacobian[10][16] = 0.0;
        rJacobian[10][17] = 0.0;
        rJacobian[10][18] = 0.0;
        rJacobian[10][19] = 0.0;
        rJacobian[10][20] = 0.0;
        rJacobian[10][21] = 0.0;
        rJacobian[10][22] = 0.0;
        rJacobian[10][23] = 0.0;
        rJacobian[10][24] = 0.0;
        rJacobian[10][25] = 0.0;
        rJacobian[11][0] = 0.0;
        rJacobian[11][1] = 0.0;
        rJacobian[11][2] = 0.0;
        rJacobian[11][3] = 0.0;
        rJacobian[11][4] = 0.0;
        rJacobian[11][5] = 0.0;
        rJacobian[11][6] = 0.0;
        rJacobian[11][7] = 0.0;
        rJacobian[11][8] = 0.0;
        rJacobian[11][9] = 0.0;
        rJacobian[11][10] = -(mDt * (var_x114));
        rJacobian[11][11] = 1.0 - (mDt * (-var_x115));
        rJacobian[11][12] = 0.0;
        rJacobian[11][13] = 0.0;
        rJacobian[11][14] = 0.0;
        rJacobian[11][15] = 0.0;
        rJacobian[11][16] = 0.0;
        rJacobian[11][17] = 0.0;
        rJacobian[11][18] = 0.0;
        rJacobian[11][19] = 0.0;
        rJacobian[11][20] = 0.0;
        rJacobian[11][21] = 0.0;
        rJacobian[11][22] = 0.0;
        rJacobian[11][23] = 0.0;
        rJacobian[11][24] = 0.0;
        rJacobian[11][25] = 0.0;
        rJacobian[12][0] = 0.0;
        rJacobian[12][1] = 0.0;
        rJacobian[12][2] = 0.0;
        rJacobian[12][3] = 0.0;
        rJacobian[12][4] = 0.0;
        rJacobian[12][5] = 0.0;
        rJacobian[12][6] = 0.0;
        rJacobian[12][7] = 0.0;
        rJacobian[12][8] = 0.0;
        rJacobian[12][9] = -(mDt * (var_x117));
        rJacobian[12][10] = 0.0;
        rJacobian[12][11] = 0.0;
        rJacobian[12][12] = 1.0 - (mDt * (var_x110 + var_x112));
        rJacobian[12][13] = -(mDt * (var_x107));
        rJacobian[12][14] = -(mDt * (var_x95));
        rJacobian[12][15] = 0.0;
        rJacobian[12][16] = 0.0;
        rJacobian[12][17] = 0.0;
        rJacobian[12][18] = 0.0;
        rJacobian[12][19] = 0.0;
        rJacobian[12][20] = 0.0;
        rJacobian[12][21] = 0.0;
        rJacobian[12][22] = 0.0;
        rJacobian[12][23] = 0.0;
        rJacobian[12][24] = 0.0;
        rJacobian[12][25] = 0.0;
        rJacobian[13][0] = 0.0;
        rJacobian[13][1] = 0.0;
        rJacobian[13][2] = 0.0;
        rJacobian[13][3] = 0.0;
        rJacobian[13][4] = 0.0;
        rJacobian[13][5] = 0.0;
        rJacobian[13][6] = 0.0;
        rJacobian[13][7] = 0.0;
        rJacobian[13][8] = -(mDt * (var_x101));
        rJacobian[13][9] = -(mDt * (var_x101));
        rJacobian[13][10] = -(mDt * (var_x101));
        rJacobian[13][11] = -(mDt * (var_x101));
        rJacobian[13][12] = -(mDt * (var_x101 + var_x109));
        rJacobian[13][13] = 1.0 - (mDt * (var_x111 + var_x112));
        rJacobian[13][14] = -(mDt * (var_x101));
        rJacobian[13][15] = -(mDt * (var_x101));
        rJacobian[13][16] = 0.0;
        rJacobian[13][17] = 0.0;
        rJacobian[13][18] = 0.0;
        rJacobian[13][19] = 0.0;
        rJacobian[13][20] = 0.0;
        rJacobian[13][21] = 0.0;
        rJacobian[13][22] = 0.0;
        rJacobian[13][23] = 0.0;
        rJacobian[13][24] = 0.0;
        rJacobian[13][25] = 0.0;
        rJacobian[14][0] = 0.0;
        rJacobian[14][1] = 0.0;
        rJacobian[14][2] = 0.0;
        rJacobian[14][3] = 0.0;
        rJacobian[14][4] = 0.0;
        rJacobian[14][5] = 0.0;
        rJacobian[14][6] = 0.0;
        rJacobian[14][7] = 0.0;
        rJacobian[14][8] = -(mDt * (var_x117));
        rJacobian[14][9] = 0.0;
        rJacobian[14][10] = -(mDt * (var_x104));
        rJacobian[14][11] = 0.0;
        rJacobian[14][12] = -(mDt * (var_x102));
        rJacobian[14][13] = 0.0;
        rJacobian[14][14] = 1.0 - (mDt * (var_x112 + var_x96 - var_x116 - var_x118));
        rJacobian[14][15] = -(mDt * (var_x119));
        rJacobian[14][16] = 0.0;
        rJacobian[14][17] = 0.0;
        rJacobian[14][18] = 0.0;
        rJacobian[14][19] = 0.0;
        rJacobian[14][20] = 0.0;
        rJacobian[14][21] = 0.0;
        rJacobian[14][22] = 0.0;
        rJacobian[14][23] = 0.0;
        rJacobian[14][24] = 0.0;
        rJacobian[14][25] = 0.0;
        rJacobian[15][0] = 0.0;
        rJacobian[15][1] = 0.0;
        rJacobian[15][2] = 0.0;
        rJacobian[15][3] = 0.0;
        rJacobian[15][4] = 0.0;
        rJacobian[15][5] = 0.0;
        rJacobian[15][6] = 0.0;
        rJacobian[15][7] = 0.0;
        rJacobian[15][8] = -(mDt * (var_x99));
        rJacobian[15][9] = 0.0;
        rJacobian[15][10] = 0.0;
        rJacobian[15][11] = 0.0;
        rJacobian[15][12] = 0.0;
        rJacobian[15][13] = 0.0;
        rJacobian[15][14] = -(mDt * (var_x118));
        rJacobian[15][15] = 1.0 - (mDt * (-var_x106 - var_x119));
        rJacobian[15][16] = 0.0;
        rJacobian[15][17] = 0.0;
        rJacobian[15][18] = 0.0;
        rJacobian[15][19] = 0.0;
        rJacobian[15][20] = 0.0;
        rJacobian[15][21] = 0.0;
        rJacobian[15][22] = 0.0;
        rJacobian[15][23] = 0.0;
        rJacobian[15][24] = 0.0;
        rJacobian[15][25] = 0.0;
        rJacobian[16][0] = 0.0;
        rJacobian[16][1] = 0.0;
        rJacobian[16][2] = 0.0;
        rJacobian[16][3] = 0.0;
        rJacobian[16][4] = 0.0;
        rJacobian[16][5] = 0.0;
        rJacobian[16][6] = 0.0;
        rJacobian[16][7] = 0.0;
        rJacobian[16][8] = 0.0;
        rJacobian[16][9] = 0.0;
        rJacobian[16][10] = 0.0;
        rJacobian[16][11] = 0.0;
        rJacobian[16][12] = 0.0;
        rJacobian[16][13] = 0.0;
        rJacobian[16][14] = 0.0;
        rJacobian[16][15] = 0.0;
        rJacobian[16][16] = 1.0;
        rJacobian[16][17] = 0.0;
        rJacobian[16][18] = 0.0;
        rJacobian[16][19] = 0.0;
        rJacobian[16][20] = 0.0;
        rJacobian[16][21] = 0.0;
        rJacobian[16][22] = 0.0;
        rJacobian[16][23] = 0.0;
        rJacobian[16][24] = 0.0;
        rJacobian[16][25] = 0.0;
        rJacobian[17][0] = 0.0;
        rJacobian[17][1] = 0.0;
        rJacobian[17][2] = 0.0;
        rJacobian[17][3] = 0.0;
        rJacobian[17][4] = 0.0;
        rJacobian[17][5] = 0.0;
        rJacobian[17][6] = 0.0;
        rJacobian[17][7] = 0.0;
        rJacobian[17][8] = 0.0;
        rJacobian[17][9] = 0.0;
        rJacobian[17][10] = 0.0;
        rJacobian[17][11] = 0.0;
        rJacobian[17][12] = 0.0;
        rJacobian[17][13] = 0.0;
        rJacobian[17][14] = 0.0;
        rJacobian[17][15] = 0.0;
        rJacobian[17][16] = -(mDt * (var_x125 * var_x126 * (var_x120 + var_x124)));
        rJacobian[17][17] = 1.0 - (mDt * ((-1.7331439082928402 * var_x128 - 1.7331439082928402 * var_x132 / var_x131 - var_x126 * var_x129 * var_chaste_interface__non_inactivating_steady_state_K_I__iKss - var_x129 * pow(var_chaste_interface__slow_delayed_rectifier_K_I__nKs, 2) * mParameters[10] - 0.43328597707321004 * var_x121 * var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_K_I__aur * var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_K_I__iur - 0.92671204776418159 * var_x121 * pow(var_chaste_interface__fast_transient_outward_K_I__ato_f, 3) * var_chaste_interface__fast_transient_outward_K_I__ito_f + 0.15528969418303848 * var_x130 * var_x132 * (-var_x124 + var_chaste_interface__cell__V) / pow(var_x131, 2)) * mParameters[5]));
        rJacobian[17][18] = 0.0;
        rJacobian[17][19] = 0.0;
        rJacobian[17][20] = 0.0;
        rJacobian[17][21] = -(mDt * (var_x125 * (var_x120 + 26.535875647668394 * log(var_x127 * (mParameters[2] + 0.020408163265306124 * mParameters[3]))) * mParameters[9]));
        rJacobian[17][22] = 0.0;
        rJacobian[17][23] = 0.0;
        rJacobian[17][24] = 0.0;
        rJacobian[17][25] = -(mDt * ((5.8007500451501034e-11 * var_x135 - 0.035370283842711021 * var_x128) * mParameters[5]));
        rJacobian[18][0] = 0.0;
        rJacobian[18][1] = 0.0;
        rJacobian[18][2] = 0.0;
        rJacobian[18][3] = 0.0;
        rJacobian[18][4] = 0.0;
        rJacobian[18][5] = 0.0;
        rJacobian[18][6] = 0.0;
        rJacobian[18][7] = 0.0;
        rJacobian[18][8] = 0.0;
        rJacobian[18][9] = 0.0;
        rJacobian[18][10] = 0.0;
        rJacobian[18][11] = 0.0;
        rJacobian[18][12] = 0.0;
        rJacobian[18][13] = 0.0;
        rJacobian[18][14] = 0.0;
        rJacobian[18][15] = 0.0;
        rJacobian[18][16] = 0.0;
        rJacobian[18][17] = 0.0;
        rJacobian[18][18] = 1.0 - (mDt * (-0.023761000000000001 + var_x136 - 0.047002000000000002 * exp(-0.063100000000000003 * var_chaste_interface__cell__V)));
        rJacobian[18][19] = -(mDt * (0.036777999999999998 + var_x136));
        rJacobian[18][20] = -(mDt * (var_x136));
        rJacobian[18][21] = -(mDt * (var_x136));
        rJacobian[18][22] = 0.0;
        rJacobian[18][23] = 0.0;
        rJacobian[18][24] = 0.0;
        rJacobian[18][25] = 0.0;
        rJacobian[19][0] = 0.0;
        rJacobian[19][1] = 0.0;
        rJacobian[19][2] = 0.0;
        rJacobian[19][3] = 0.0;
        rJacobian[19][4] = 0.0;
        rJacobian[19][5] = 0.0;
        rJacobian[19][6] = 0.0;
        rJacobian[19][7] = 0.0;
        rJacobian[19][8] = 0.0;
        rJacobian[19][9] = 0.0;
        rJacobian[19][10] = 0.0;
        rJacobian[19][11] = 0.0;
        rJacobian[19][12] = 0.0;
        rJacobian[19][13] = 0.0;
        rJacobian[19][14] = 0.0;
        rJacobian[19][15] = 0.0;
        rJacobian[19][16] = 0.0;
        rJacobian[19][17] = 0.0;
        rJacobian[19][18] = -(mDt * (0.023761000000000001));
        rJacobian[19][19] = 1.0 - (mDt * (-0.036777999999999998 - var_x137));
        rJacobian[19][20] = 0.0;
        rJacobian[19][21] = -(mDt * (var_x138));
        rJacobian[19][22] = 0.0;
        rJacobian[19][23] = 0.0;
        rJacobian[19][24] = 0.0;
        rJacobian[19][25] = 0.0;
        rJacobian[20][0] = 0.0;
        rJacobian[20][1] = 0.0;
        rJacobian[20][2] = 0.0;
        rJacobian[20][3] = 0.0;
        rJacobian[20][4] = 0.0;
        rJacobian[20][5] = 0.0;
        rJacobian[20][6] = 0.0;
        rJacobian[20][7] = 0.0;
        rJacobian[20][8] = 0.0;
        rJacobian[20][9] = 0.0;
        rJacobian[20][10] = 0.0;
        rJacobian[20][11] = 0.0;
        rJacobian[20][12] = 0.0;
        rJacobian[20][13] = 0.0;
        rJacobian[20][14] = 0.0;
        rJacobian[20][15] = 0.0;
        rJacobian[20][16] = 0.0;
        rJacobian[20][17] = 0.0;
        rJacobian[20][18] = 0.0;
        rJacobian[20][19] = 0.0;
        rJacobian[20][20] = 1.0 - (mDt * (-var_x139));
        rJacobian[20][21] = -(mDt * (var_x140));
        rJacobian[20][22] = 0.0;
        rJacobian[20][23] = 0.0;
        rJacobian[20][24] = 0.0;
        rJacobian[20][25] = 0.0;
        rJacobian[21][0] = 0.0;
        rJacobian[21][1] = 0.0;
        rJacobian[21][2] = 0.0;
        rJacobian[21][3] = 0.0;
        rJacobian[21][4] = 0.0;
        rJacobian[21][5] = 0.0;
        rJacobian[21][6] = 0.0;
        rJacobian[21][7] = 0.0;
        rJacobian[21][8] = 0.0;
        rJacobian[21][9] = 0.0;
        rJacobian[21][10] = 0.0;
        rJacobian[21][11] = 0.0;
        rJacobian[21][12] = 0.0;
        rJacobian[21][13] = 0.0;
        rJacobian[21][14] = 0.0;
        rJacobian[21][15] = 0.0;
        rJacobian[21][16] = 0.0;
        rJacobian[21][17] = 0.0;
        rJacobian[21][18] = 0.0;
        rJacobian[21][19] = -(mDt * (var_x137));
        rJacobian[21][20] = -(mDt * (var_x139));
        rJacobian[21][21] = 1.0 - (mDt * (-var_x138 - var_x140));
        rJacobian[21][22] = 0.0;
        rJacobian[21][23] = 0.0;
        rJacobian[21][24] = 0.0;
        rJacobian[21][25] = 0.0;
        rJacobian[22][0] = 0.0;
        rJacobian[22][1] = 0.0;
        rJacobian[22][2] = 0.0;
        rJacobian[22][3] = 0.0;
        rJacobian[22][4] = 0.0;
        rJacobian[22][5] = 0.0;
        rJacobian[22][6] = 0.0;
        rJacobian[22][7] = 0.0;
        rJacobian[22][8] = 0.0;
        rJacobian[22][9] = 0.0;
        rJacobian[22][10] = 0.0;
        rJacobian[22][11] = 0.0;
        rJacobian[22][12] = 0.0;
        rJacobian[22][13] = 0.0;
        rJacobian[22][14] = 0.0;
        rJacobian[22][15] = 0.0;
        rJacobian[22][16] = 0.0;
        rJacobian[22][17] = 0.0;
        rJacobian[22][18] = 0.0;
        rJacobian[22][19] = 0.0;
        rJacobian[22][20] = 0.0;
        rJacobian[22][21] = 0.0;
        rJacobian[22][22] = 1.0 - (mDt * (-0.00080000000000000004));
        rJacobian[22][23] = -(mDt * (0.0089999999999999993));
        rJacobian[22][24] = 0.0;
        rJacobian[22][25] = 0.0;
        rJacobian[23][0] = 0.0;
        rJacobian[23][1] = 0.0;
        rJacobian[23][2] = 0.0;
        rJacobian[23][3] = 0.0;
        rJacobian[23][4] = 0.0;
        rJacobian[23][5] = -(mDt * (-var_x142 + 0.024299999999999999 * var_x141 * (1.0 + var_x17 - var_chaste_interface__ryanodine_receptors__P_C2)));
        rJacobian[23][6] = 0.0;
        rJacobian[23][7] = 0.0;
        rJacobian[23][8] = 0.0;
        rJacobian[23][9] = 0.0;
        rJacobian[23][10] = 0.0;
        rJacobian[23][11] = 0.0;
        rJacobian[23][12] = 0.0;
        rJacobian[23][13] = 0.0;
        rJacobian[23][14] = 0.0;
        rJacobian[23][15] = 0.0;
        rJacobian[23][16] = 0.0;
        rJacobian[23][17] = 0.0;
        rJacobian[23][18] = 0.0;
        rJacobian[23][19] = 0.0;
        rJacobian[23][20] = 0.0;
        rJacobian[23][21] = 0.0;
        rJacobian[23][22] = -(mDt * (0.00080000000000000004 + var_x143));
        rJacobian[23][23] = 1.0 - (mDt * (-0.080249999999999988 + var_x143 - var_x144));
        rJacobian[23][24] = -(mDt * (0.96499999999999997 + var_x143));
        rJacobian[23][25] = 0.0;
        rJacobian[24][0] = 0.0;
        rJacobian[24][1] = 0.0;
        rJacobian[24][2] = 0.0;
        rJacobian[24][3] = 0.0;
        rJacobian[24][4] = 0.0;
        rJacobian[24][5] = -(mDt * (var_x142));
        rJacobian[24][6] = 0.0;
        rJacobian[24][7] = 0.0;
        rJacobian[24][8] = 0.0;
        rJacobian[24][9] = 0.0;
        rJacobian[24][10] = 0.0;
        rJacobian[24][11] = 0.0;
        rJacobian[24][12] = 0.0;
        rJacobian[24][13] = 0.0;
        rJacobian[24][14] = 0.0;
        rJacobian[24][15] = 0.0;
        rJacobian[24][16] = 0.0;
        rJacobian[24][17] = 0.0;
        rJacobian[24][18] = 0.0;
        rJacobian[24][19] = 0.0;
        rJacobian[24][20] = 0.0;
        rJacobian[24][21] = 0.0;
        rJacobian[24][22] = 0.0;
        rJacobian[24][23] = -(mDt * (var_x144));
        rJacobian[24][24] = 1.0 - (mDt * (-0.96499999999999997));
        rJacobian[24][25] = 0.0;
        rJacobian[25][0] = 0.0;
        rJacobian[25][1] = 0.0;
        rJacobian[25][2] = 0.0;
        rJacobian[25][3] = 0.0;
        rJacobian[25][4] = -(mDt * ((195.93970796043337 * var_x70 - var_x145 * var_x56) * mParameters[5]));
        rJacobian[25][5] = 0.0;
        rJacobian[25][6] = 0.0;
        rJacobian[25][7] = 0.0;
        rJacobian[25][8] = 0.0;
        rJacobian[25][9] = 0.0;
        rJacobian[25][10] = 0.0;
        rJacobian[25][11] = 0.0;
        rJacobian[25][12] = 0.0;
        rJacobian[25][13] = 0.0;
        rJacobian[25][14] = 0.0;
        rJacobian[25][15] = -(mDt * (var_x125 * (var_x120 + 26.535875647668394 * log(var_x146 * (mParameters[3] + 0.1111111111111111 * mParameters[2]))) * mParameters[6]));
        rJacobian[25][16] = 0.0;
        rJacobian[25][17] = -(mDt * ((-0.0005006860179512649 * var_x146 - 0.19257154536587112 * var_x147) * mParameters[5]));
        rJacobian[25][18] = 0.0;
        rJacobian[25][19] = 0.0;
        rJacobian[25][20] = 0.0;
        rJacobian[25][21] = 0.0;
        rJacobian[25][22] = 0.0;
        rJacobian[25][23] = 0.0;
        rJacobian[25][24] = 0.0;
        rJacobian[25][25] = 1.0 - (mDt * ((-1.7331439082928402 * var_x147 - 0.004506174161561384 * var_x146 - 0.58781912388130009 * var_x74 - 8.7011250677251544e-11 * var_x135 - var_x145 * var_x73) * mParameters[5]));
    }

    void Cellli_mouse_2010FromCellMLBackwardEulerNoLut::UpdateTransmembranePotential(double var_chaste_interface__environment__time)
    {
        // Time units: millisecond
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -78.9452115785979
        double var_chaste_interface__calcium_concentration__Cai_converted = rY[1];
        // Units: millimolar; Initial value: 9.499150681398009e-05
        double var_chaste_interface__calcium_concentration__Cass = rY[2];
        // Units: micromolar; Initial value: 0.0954184301907784
        double var_chaste_interface__L_type_calcium_current__O = rY[10];
        // Units: dimensionless; Initial value: 1.23713515513533e-06
        double var_chaste_interface__L_type_calcium_current__y_gate = rY[12];
        // Units: dimensionless; Initial value: 0.845044436980163
        double var_chaste_interface__sodium_concentration__Nai = rY[13];
        // Units: micromolar; Initial value: 12364.7482121793
        double var_chaste_interface__fast_sodium_current__O_Na = rY[14];
        // Units: dimensionless; Initial value: 1.46826771436314e-06
        double var_chaste_interface__potassium_concentration__Ki = rY[22];
        // Units: micromolar; Initial value: 115599.50642567
        double var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_K_I__aur = rY[23];
        // Units: dimensionless; Initial value: 0.00346258606821817
        double var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_K_I__iur = rY[24];
        // Units: dimensionless; Initial value: 0.955684946168062
        double var_chaste_interface__non_inactivating_steady_state_K_I__aKss = rY[25];
        // Units: dimensionless; Initial value: 0.287585636847048
        double var_chaste_interface__non_inactivating_steady_state_K_I__iKss = rY[26];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__rapid_delayed_rectifier_K_I__O_K = rY[27];
        // Units: dimensionless; Initial value: 0.0131742086125972
        double var_chaste_interface__slow_delayed_rectifier_K_I__nKs = rY[31];
        // Units: dimensionless; Initial value: 0.00336735013094628
        double var_chaste_interface__fast_transient_outward_K_I__ato_f = rY[32];
        // Units: dimensionless; Initial value: 0.0142335908879204
        double var_chaste_interface__fast_transient_outward_K_I__ito_f = rY[33];
        // Units: dimensionless; Initial value: 0.996989882138174
        double var_chaste_interface__slow_transient_outward_K_I__ato_s = rY[34];
        // Units: dimensionless; Initial value: 0.0443263407760382
        double var_chaste_interface__slow_transient_outward_K_I__ito_s = rY[35];
        // Units: dimensionless; Initial value: 0.887568880831388
        
        const double var_calcium_activated_chloride_current__E_Cl = -40.0; // millivolt
        const double var_calcium_activated_chloride_current__Km_Cl = 10.0; // micromolar
        const double var_calcium_activated_chloride_current__g_ClCa = 10.0; // milliS_per_microF
        const double var_calcium_background_current__g_Cab = 0.00069999999999999999; // milliS_per_microF
        const double var_calcium_concentration__Cai = 1000.0 * var_chaste_interface__calcium_concentration__Cai_converted; // micromolar
        const double var_calcium_pump_current__Km_pCa = 0.28849999999999998; // micromolar
        const double var_calcium_pump_current__i_pCa_max = 0.095500000000000002; // picoA_per_picoF
        const double var_calcium_pump_current__i_pCa = pow(var_calcium_concentration__Cai, 2) * var_calcium_pump_current__i_pCa_max / (pow(var_calcium_concentration__Cai, 2) + pow(var_calcium_pump_current__Km_pCa, 2)); // picoA_per_picoF
        const double var_cell__Acap = 0.00013866; // cm2
        const double var_cell__F = 96.5; // coulomb_per_millimole
        const double var_cell__R = 8.3140000000000001; // joule_per_mole_kelvin
        const double var_cell__T = 308.0; // kelvin
        const double var_calcium_background_current__E_CaN = 0.5 * var_cell__R * var_cell__T * log(mParameters[1] / var_calcium_concentration__Cai) / var_cell__F; // millivolt
        const double var_L_type_calcium_current__FVRT = var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T); // dimensionless
        const double var_L_type_calcium_current__FVRT_Ca = 2.0 * var_L_type_calcium_current__FVRT; // dimensionless
        const double var_calcium_activated_chloride_current__O_ClCa = 0.20000000000000001 / (1.0 + exp(5.9871794871794881 - 0.12820512820512822 * var_chaste_interface__cell__V)); // dimensionless
        const double var_calcium_activated_chloride_current__i_ClCa = (-var_calcium_activated_chloride_current__E_Cl + var_chaste_interface__cell__V) * var_calcium_activated_chloride_current__O_ClCa * var_calcium_activated_chloride_current__g_ClCa * var_calcium_concentration__Cai / (var_calcium_activated_chloride_current__Km_Cl + var_calcium_concentration__Cai); // picoA_per_picoF
        const double var_calcium_background_current__i_Cab = (-var_calcium_background_current__E_CaN + var_chaste_interface__cell__V) * var_calcium_background_current__g_Cab; // picoA_per_picoF
        const double var_cell__Vss = 2.1999999999999998e-8; // microlitre
        const double var_L_type_calcium_current__i_CaL = ((fabs(var_L_type_calcium_current__FVRT_Ca) > 1.0000000000000001e-5) ? (-2.0 * (-var_chaste_interface__calcium_concentration__Cass + mParameters[1] * exp(-var_L_type_calcium_current__FVRT_Ca)) * var_L_type_calcium_current__FVRT_Ca * var_chaste_interface__L_type_calcium_current__O * mParameters[4] * var_chaste_interface__L_type_calcium_current__y_gate * var_cell__F * var_cell__Vss / ((1.0 - exp(-var_L_type_calcium_current__FVRT_Ca)) * var_cell__Acap * mParameters[5])) : (-2.0000000000000002e-5 * (-var_chaste_interface__calcium_concentration__Cass + mParameters[1] * exp(-1.0000000000000001e-5)) * var_chaste_interface__L_type_calcium_current__O * mParameters[4] * var_chaste_interface__L_type_calcium_current__y_gate * var_cell__F * var_cell__Vss / ((1.0 - exp(-1.0000000000000001e-5)) * var_cell__Acap * mParameters[5]))); // picoA_per_picoF
        const double var_cell__i_Stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
        const double var_cell__i_Stim = var_cell__i_Stim_converted / HeartConfig::Instance()->GetCapacitance(); // picoA_per_picoF
        const double var_fast_transient_outward_K_I__g_Kto_f = 0.53469999999999995; // milliS_per_microF
        const double var_fast_transient_outward_K_I__E_K = var_cell__R * var_cell__T * log(mParameters[2] / var_chaste_interface__potassium_concentration__Ki) / var_cell__F; // millivolt
        const double var_fast_transient_outward_K_I__i_Kto_f = pow(var_chaste_interface__fast_transient_outward_K_I__ato_f, 3) * (-var_fast_transient_outward_K_I__E_K + var_chaste_interface__cell__V) * var_fast_transient_outward_K_I__g_Kto_f * var_chaste_interface__fast_transient_outward_K_I__ito_f; // picoA_per_picoF
        const double var_non_inactivating_steady_state_K_I__i_Kss = (-var_fast_transient_outward_K_I__E_K + var_chaste_interface__cell__V) * var_chaste_interface__non_inactivating_steady_state_K_I__aKss * mParameters[8] * var_chaste_interface__non_inactivating_steady_state_K_I__iKss; // picoA_per_picoF
        const double var_slow_delayed_rectifier_K_I__i_Ks = pow(var_chaste_interface__slow_delayed_rectifier_K_I__nKs, 2) * (-var_fast_transient_outward_K_I__E_K + var_chaste_interface__cell__V) * mParameters[10]; // picoA_per_picoF
        const double var_slow_transient_outward_K_I__g_Kto_s = 0; // milliS_per_microF
        const double var_slow_transient_outward_K_I__i_Kto_s = (-var_fast_transient_outward_K_I__E_K + var_chaste_interface__cell__V) * var_chaste_interface__slow_transient_outward_K_I__ato_s * var_slow_transient_outward_K_I__g_Kto_s * var_chaste_interface__slow_transient_outward_K_I__ito_s; // picoA_per_picoF
        const double var_sodium_background_current__g_Nab = 0.0025999999999999999; // milliS_per_microF
        const double var_sodium_calcium_exchange_current__K_mAllo = 0; // micromolar
        const double var_sodium_calcium_exchange_current__K_mCai = 3.6000000000000001; // micromolar
        const double var_sodium_calcium_exchange_current__K_mCao = 1400.0; // micromolar
        const double var_sodium_calcium_exchange_current__K_mNai = 12000.0; // micromolar
        const double var_sodium_calcium_exchange_current__K_mNao = 88000.0; // micromolar
        const double var_sodium_calcium_exchange_current__eta = 0.34999999999999998; // dimensionless
        const double var_sodium_calcium_exchange_current__k_sat = 0.27000000000000002; // dimensionless
        const double var_fast_sodium_current__E_Na = var_cell__R * var_cell__T * log((mParameters[3] + 0.1111111111111111 * mParameters[2]) / (var_chaste_interface__sodium_concentration__Nai + 0.1111111111111111 * var_chaste_interface__potassium_concentration__Ki)) / var_cell__F; // millivolt
        const double var_fast_sodium_current__i_Na = (-var_fast_sodium_current__E_Na + var_chaste_interface__cell__V) * var_chaste_interface__fast_sodium_current__O_Na * mParameters[6]; // picoA_per_picoF
        const double var_rapid_delayed_rectifier_K_I__i_Kr = (-var_cell__R * var_cell__T * log((mParameters[2] + 0.020408163265306124 * mParameters[3]) / (var_chaste_interface__potassium_concentration__Ki + 0.020408163265306124 * var_chaste_interface__sodium_concentration__Nai)) / var_cell__F + var_chaste_interface__cell__V) * var_chaste_interface__rapid_delayed_rectifier_K_I__O_K * mParameters[9]; // picoA_per_picoF
        const double var_sodium_background_current__i_Nab = (-var_fast_sodium_current__E_Na + var_chaste_interface__cell__V) * var_sodium_background_current__g_Nab; // picoA_per_picoF
        const double var_sodium_calcium_exchange_current__i_NCX = (pow(var_chaste_interface__sodium_concentration__Nai, 3) * mParameters[1] * exp(var_cell__F * var_chaste_interface__cell__V * var_sodium_calcium_exchange_current__eta / (var_cell__R * var_cell__T)) - pow(mParameters[3], 3) * var_calcium_concentration__Cai * exp((-1.0 + var_sodium_calcium_exchange_current__eta) * var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * mParameters[11] / ((1.0 + pow(var_sodium_calcium_exchange_current__K_mAllo, 2) / pow(var_calcium_concentration__Cai, 2)) * (1.0 + var_sodium_calcium_exchange_current__k_sat * exp((-1.0 + var_sodium_calcium_exchange_current__eta) * var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * (pow(mParameters[3], 3) * var_calcium_concentration__Cai + pow(var_sodium_calcium_exchange_current__K_mNao, 3) * var_calcium_concentration__Cai + pow(var_chaste_interface__sodium_concentration__Nai, 3) * mParameters[1] + pow(var_chaste_interface__sodium_concentration__Nai, 3) * var_sodium_calcium_exchange_current__K_mCao + pow(mParameters[3], 3) * (1.0 + pow(var_chaste_interface__sodium_concentration__Nai, 3) / pow(var_sodium_calcium_exchange_current__K_mNai, 3)) * var_sodium_calcium_exchange_current__K_mCai + pow(var_sodium_calcium_exchange_current__K_mNai, 3) * (1.0 + var_calcium_concentration__Cai / var_sodium_calcium_exchange_current__K_mCai) * mParameters[1])); // picoA_per_picoF
        const double var_sodium_potassium_pump_current__Km_Ko = 1500.0; // micromolar
        const double var_sodium_potassium_pump_current__Km_Nai = 16600.0; // micromolar
        const double var_sodium_potassium_pump_current__i_NaK_max = 2.4860000000000002; // picoA_per_picoF
        const double var_sodium_potassium_pump_current__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(1.4858841010401188e-5 * mParameters[3]); // dimensionless
        const double var_sodium_potassium_pump_current__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T)) + 0.036499999999999998 * var_sodium_potassium_pump_current__sigma * exp(-var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))); // dimensionless
        const double var_sodium_potassium_pump_current__i_NaK = mParameters[2] * var_sodium_potassium_pump_current__f_NaK * var_sodium_potassium_pump_current__i_NaK_max / ((1.0 + pow((var_sodium_potassium_pump_current__Km_Nai / var_chaste_interface__sodium_concentration__Nai), 2.3999999999999999)) * (mParameters[2] + var_sodium_potassium_pump_current__Km_Ko)); // picoA_per_picoF
        const double var_time_independent_K_I__i_K1 = (-var_fast_transient_outward_K_I__E_K + var_chaste_interface__cell__V) * mParameters[2] * mParameters[7] / ((1.0 + exp(0.089599999999999999 * var_chaste_interface__cell__V - 0.089599999999999999 * var_fast_transient_outward_K_I__E_K)) * (210.0 + mParameters[2])); // picoA_per_picoF
        const double var_ultra_rapidly_activating_delayed_rectifier_K_I__g_Kur = 0.25; // milliS_per_microF
        const double var_ultra_rapidly_activating_delayed_rectifier_K_I__i_Kur = (-var_fast_transient_outward_K_I__E_K + var_chaste_interface__cell__V) * var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_K_I__aur * var_ultra_rapidly_activating_delayed_rectifier_K_I__g_Kur * var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_K_I__iur; // picoA_per_picoF
        const double d_dt_chaste_interface_var_cell__V = -var_L_type_calcium_current__i_CaL - var_calcium_activated_chloride_current__i_ClCa - var_calcium_background_current__i_Cab - var_calcium_pump_current__i_pCa - var_cell__i_Stim - var_fast_sodium_current__i_Na - var_fast_transient_outward_K_I__i_Kto_f - var_non_inactivating_steady_state_K_I__i_Kss - var_rapid_delayed_rectifier_K_I__i_Kr - var_slow_delayed_rectifier_K_I__i_Ks - var_slow_transient_outward_K_I__i_Kto_s - var_sodium_background_current__i_Nab - var_sodium_calcium_exchange_current__i_NCX - var_sodium_potassium_pump_current__i_NaK - var_time_independent_K_I__i_K1 - var_ultra_rapidly_activating_delayed_rectifier_K_I__i_Kur; // millivolt / millisecond
        
        rY[0] += mDt*d_dt_chaste_interface_var_cell__V;
    }
    
    void Cellli_mouse_2010FromCellMLBackwardEulerNoLut::ComputeOneStepExceptVoltage(double var_chaste_interface__environment__time)
    {
        // Time units: millisecond
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -78.9452115785979
        double var_chaste_interface__L_type_calcium_current__y_gate = rY[12];
        // Units: dimensionless; Initial value: 0.845044436980163
        double var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_K_I__aur = rY[23];
        // Units: dimensionless; Initial value: 0.00346258606821817
        double var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_K_I__iur = rY[24];
        // Units: dimensionless; Initial value: 0.955684946168062
        double var_chaste_interface__non_inactivating_steady_state_K_I__aKss = rY[25];
        // Units: dimensionless; Initial value: 0.287585636847048
        double var_chaste_interface__slow_delayed_rectifier_K_I__nKs = rY[31];
        // Units: dimensionless; Initial value: 0.00336735013094628
        double var_chaste_interface__fast_transient_outward_K_I__ato_f = rY[32];
        // Units: dimensionless; Initial value: 0.0142335908879204
        double var_chaste_interface__fast_transient_outward_K_I__ito_f = rY[33];
        // Units: dimensionless; Initial value: 0.996989882138174
        double var_chaste_interface__slow_transient_outward_K_I__ato_s = rY[34];
        // Units: dimensionless; Initial value: 0.0443263407760382
        double var_chaste_interface__slow_transient_outward_K_I__ito_s = rY[35];
        // Units: dimensionless; Initial value: 0.887568880831388
        
        const double var_L_type_calcium_current__const5 = 8.1999999999999993;
        const double var_L_type_calcium_current__y_gate_tau_const1 = 8.0;
        const double var_L_type_calcium_current__y_gate_tau_const2 = 315.0;
        const double var_L_type_calcium_current__y_gate_inf = 1 / (1.0 + exp((33.0 + var_chaste_interface__cell__V) / var_L_type_calcium_current__const5)) + 0.10000000000000001 / (1.0 + exp(6.666666666666667 - 0.16666666666666666 * var_chaste_interface__cell__V));
        const double var_L_type_calcium_current__y_gate_tau = var_L_type_calcium_current__y_gate_tau_const2 / (1.0 + exp(7.5 + 0.25 * var_chaste_interface__cell__V)) + var_L_type_calcium_current__y_gate_tau_const1;
        const double var_fast_transient_outward_K_I__alpha_a = 0.18064 * exp(1.6096500000000002 + 0.035770000000000003 * var_chaste_interface__cell__V);
        const double var_fast_transient_outward_K_I__beta_a = 0.39560000000000001 * exp(-2.8066499999999999 - 0.062370000000000002 * var_chaste_interface__cell__V);
        const double var_fast_transient_outward_K_I__itof_iss = 1 / (1.0 + exp(10.279999999999999 + 0.20000000000000001 * var_chaste_interface__cell__V));
        const double var_fast_transient_outward_K_I__tau_ito_f = 9.6645000000000003 + 10.936199999999999 / (1.0 + exp(10.279999999999999 + 0.20000000000000001 * var_chaste_interface__cell__V));
        const double var_non_inactivating_steady_state_K_I__tau_Kss = 13.17 + 39.299999999999997 * exp(-0.050000000000000003 * var_chaste_interface__cell__V);
        const double var_slow_delayed_rectifier_K_I__alpha_n = ((fabs(26.5 + var_chaste_interface__cell__V) < 7.8124999999817923e-7) ? (3.7604140624912359e-12 / (1.0 - exp(-9.9999999999766942e-8)) - 640000.00000149151 * (26.499999218749998 + var_chaste_interface__cell__V) * (-3.7604140624912359e-12 / (1.0 - exp(9.9999999999766942e-8)) - 3.7604140624912359e-12 / (1.0 - exp(-9.9999999999766942e-8)))) : (4.8133299999999997e-6 * (26.5 + var_chaste_interface__cell__V) / (1.0 - exp(-3.3919999999999999 - 0.128 * var_chaste_interface__cell__V))));
        const double var_slow_delayed_rectifier_K_I__beta_n = 9.5333299999999997e-5 * exp(-1.0069999999999999 - 0.037999999999999999 * var_chaste_interface__cell__V);
        const double var_slow_transient_outward_K_I__tau_ta_s = 2.0579999999999998 + 0.49299999999999999 * exp(-0.062899999999999998 * var_chaste_interface__cell__V);
        const double var_slow_transient_outward_K_I__tau_ti_s = 270.0 + 1050.0 / (1.0 + exp(7.9298245614035094 + 0.17543859649122806 * var_chaste_interface__cell__V));
        const double var_ultra_rapidly_activating_delayed_rectifier_K_I__ass = 1 / (1.0 + exp(-0.64479166666666676 - 0.10416666666666667 * var_chaste_interface__cell__V));
        const double var_ultra_rapidly_activating_delayed_rectifier_K_I__iss = 1 / (1.0 + exp(7.7962962962962958 + 0.18518518518518517 * var_chaste_interface__cell__V));
        const double var_ultra_rapidly_activating_delayed_rectifier_K_I__tau_aur = 2.0579999999999998 + 0.49299999999999999 * exp(-0.062899999999999998 * var_chaste_interface__cell__V);
        const double var_ultra_rapidly_activating_delayed_rectifier_K_I__tau_i_const = 643.0;
        const double var_ultra_rapidly_activating_delayed_rectifier_K_I__tau_iur = 1000.0 / (1.0 + exp(7.7962962962962958 + 0.18518518518518517 * var_chaste_interface__cell__V)) + var_ultra_rapidly_activating_delayed_rectifier_K_I__tau_i_const;
        
        
        rY[12] = (var_chaste_interface__L_type_calcium_current__y_gate + ((var_L_type_calcium_current__y_gate_inf / var_L_type_calcium_current__y_gate_tau) * mDt)) / (1.0 - ((-1 / var_L_type_calcium_current__y_gate_tau) * mDt));
        rY[32] = (var_chaste_interface__fast_transient_outward_K_I__ato_f + ((var_fast_transient_outward_K_I__alpha_a) * mDt)) / (1.0 - ((-var_fast_transient_outward_K_I__alpha_a - var_fast_transient_outward_K_I__beta_a) * mDt));
        rY[33] = (var_chaste_interface__fast_transient_outward_K_I__ito_f + ((var_fast_transient_outward_K_I__itof_iss / var_fast_transient_outward_K_I__tau_ito_f) * mDt)) / (1.0 - ((-1 / var_fast_transient_outward_K_I__tau_ito_f) * mDt));
        rY[25] = (var_chaste_interface__non_inactivating_steady_state_K_I__aKss + ((var_ultra_rapidly_activating_delayed_rectifier_K_I__ass / var_non_inactivating_steady_state_K_I__tau_Kss) * mDt)) / (1.0 - ((-1 / var_non_inactivating_steady_state_K_I__tau_Kss) * mDt));
        rY[31] = (var_chaste_interface__slow_delayed_rectifier_K_I__nKs + ((var_slow_delayed_rectifier_K_I__alpha_n) * mDt)) / (1.0 - ((-var_slow_delayed_rectifier_K_I__alpha_n - var_slow_delayed_rectifier_K_I__beta_n) * mDt));
        rY[34] = (var_chaste_interface__slow_transient_outward_K_I__ato_s + ((var_ultra_rapidly_activating_delayed_rectifier_K_I__ass / var_slow_transient_outward_K_I__tau_ta_s) * mDt)) / (1.0 - ((-1 / var_slow_transient_outward_K_I__tau_ta_s) * mDt));
        rY[35] = (var_chaste_interface__slow_transient_outward_K_I__ito_s + ((var_ultra_rapidly_activating_delayed_rectifier_K_I__iss / var_slow_transient_outward_K_I__tau_ti_s) * mDt)) / (1.0 - ((-1 / var_slow_transient_outward_K_I__tau_ti_s) * mDt));
        rY[23] = (var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_K_I__aur + ((var_ultra_rapidly_activating_delayed_rectifier_K_I__ass / var_ultra_rapidly_activating_delayed_rectifier_K_I__tau_aur) * mDt)) / (1.0 - ((-1 / var_ultra_rapidly_activating_delayed_rectifier_K_I__tau_aur) * mDt));
        rY[24] = (var_chaste_interface__ultra_rapidly_activating_delayed_rectifier_K_I__iur + ((var_ultra_rapidly_activating_delayed_rectifier_K_I__iss / var_ultra_rapidly_activating_delayed_rectifier_K_I__tau_iur) * mDt)) / (1.0 - ((-1 / var_ultra_rapidly_activating_delayed_rectifier_K_I__tau_iur) * mDt));
        
        double _guess[26] = {rY[11],rY[10],rY[3],rY[4],rY[1],rY[2],rY[6],rY[5],rY[15],rY[16],rY[17],rY[18],rY[20],rY[21],rY[19],rY[14],rY[26],rY[22],rY[28],rY[29],rY[30],rY[27],rY[9],rY[7],rY[8],rY[13]};
        CardiacNewtonSolver<26,Cellli_mouse_2010FromCellMLBackwardEulerNoLut>* _p_solver = CardiacNewtonSolver<26,Cellli_mouse_2010FromCellMLBackwardEulerNoLut>::Instance();
        _p_solver->Solve(*this, var_chaste_interface__environment__time, _guess);
        rY[11] = _guess[0];
        rY[10] = _guess[1];
        rY[3] = _guess[2];
        rY[4] = _guess[3];
        rY[1] = _guess[4];
        rY[2] = _guess[5];
        rY[6] = _guess[6];
        rY[5] = _guess[7];
        rY[15] = _guess[8];
        rY[16] = _guess[9];
        rY[17] = _guess[10];
        rY[18] = _guess[11];
        rY[20] = _guess[12];
        rY[21] = _guess[13];
        rY[19] = _guess[14];
        rY[14] = _guess[15];
        rY[26] = _guess[16];
        rY[22] = _guess[17];
        rY[28] = _guess[18];
        rY[29] = _guess[19];
        rY[30] = _guess[20];
        rY[27] = _guess[21];
        rY[9] = _guess[22];
        rY[7] = _guess[23];
        rY[8] = _guess[24];
        rY[13] = _guess[25];
    }

    std::vector<double> Cellli_mouse_2010FromCellMLBackwardEulerNoLut::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const std::vector<double> & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -78.9452115785979
        double var_chaste_interface__calcium_concentration__Cai_converted = rY[1];
        // Units: millimolar; Initial value: 9.499150681398009e-05
        double var_chaste_interface__calcium_concentration__Cass = rY[2];
        // Units: micromolar; Initial value: 0.0954184301907784
        double var_chaste_interface__calcium_concentration__CaJSR = rY[3];
        // Units: micromolar; Initial value: 171.167969039613
        double var_chaste_interface__calcium_fluxes__P_RyR = rY[5];
        // Units: dimensionless; Initial value: 0.000280539508743811
        double var_chaste_interface__ryanodine_receptors__P_O1 = rY[7];
        // Units: dimensionless; Initial value: 0.00571393383393735
        double var_chaste_interface__ryanodine_receptors__P_O2 = rY[8];
        // Units: dimensionless; Initial value: 2.09864618235341e-08
        double var_chaste_interface__L_type_calcium_current__O = rY[10];
        // Units: dimensionless; Initial value: 1.23713515513533e-06
        double var_chaste_interface__L_type_calcium_current__y_gate = rY[12];
        // Units: dimensionless; Initial value: 0.845044436980163
        double var_chaste_interface__sodium_concentration__Nai = rY[13];
        // Units: micromolar; Initial value: 12364.7482121793
        double var_chaste_interface__fast_sodium_current__O_Na = rY[14];
        // Units: dimensionless; Initial value: 1.46826771436314e-06
        double var_chaste_interface__potassium_concentration__Ki = rY[22];
        // Units: micromolar; Initial value: 115599.50642567
        double var_chaste_interface__non_inactivating_steady_state_K_I__aKss = rY[25];
        // Units: dimensionless; Initial value: 0.287585636847048
        double var_chaste_interface__non_inactivating_steady_state_K_I__iKss = rY[26];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__rapid_delayed_rectifier_K_I__O_K = rY[27];
        // Units: dimensionless; Initial value: 0.0131742086125972
        double var_chaste_interface__slow_delayed_rectifier_K_I__nKs = rY[31];
        // Units: dimensionless; Initial value: 0.00336735013094628
        
        // Mathematics
        const double var_calcium_concentration__Cai = 1000.0 * var_chaste_interface__calcium_concentration__Cai_converted; // micromolar
        const double var_calcium_fluxes__v1_caff = 10.0; // per_millisecond
        const double var_cell__Acap = 0.00013866; // cm2
        const double var_cell__F = 96.5; // coulomb_per_millimole
        const double var_cell__R = 8.3140000000000001; // joule_per_mole_kelvin
        const double var_cell__T = 308.0; // kelvin
        const double var_L_type_calcium_current__FVRT = var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T); // dimensionless
        const double var_L_type_calcium_current__FVRT_Ca = 2.0 * var_L_type_calcium_current__FVRT; // dimensionless
        const double var_cell__Vss = 2.1999999999999998e-8; // microlitre
        const double var_L_type_calcium_current__i_CaL = ((fabs(var_L_type_calcium_current__FVRT_Ca) > 1.0000000000000001e-5) ? (-2.0 * (-var_chaste_interface__calcium_concentration__Cass + mParameters[1] * exp(-var_L_type_calcium_current__FVRT_Ca)) * var_L_type_calcium_current__FVRT_Ca * var_chaste_interface__L_type_calcium_current__O * mParameters[4] * var_chaste_interface__L_type_calcium_current__y_gate * var_cell__F * var_cell__Vss / ((1.0 - exp(-var_L_type_calcium_current__FVRT_Ca)) * var_cell__Acap * mParameters[5])) : (-2.0000000000000002e-5 * (-var_chaste_interface__calcium_concentration__Cass + mParameters[1] * exp(-1.0000000000000001e-5)) * var_chaste_interface__L_type_calcium_current__O * mParameters[4] * var_chaste_interface__L_type_calcium_current__y_gate * var_cell__F * var_cell__Vss / ((1.0 - exp(-1.0000000000000001e-5)) * var_cell__Acap * mParameters[5]))); // picoA_per_picoF
        const double var_L_type_calcium_current__i_CaL_converted = HeartConfig::Instance()->GetCapacitance() * var_L_type_calcium_current__i_CaL; // uA_per_cm2
        const double var_cell__prepulses_number = 10000000000.0; // dimensionless
        const double var_chaste_interface__cell__stim_period = 333.33300000000003; // millisecond
        const double var_cell__i_Stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2
        const double var_fast_transient_outward_K_I__E_K = var_cell__R * var_cell__T * log(mParameters[2] / var_chaste_interface__potassium_concentration__Ki) / var_cell__F; // millivolt
        const double var_non_inactivating_steady_state_K_I__i_Kss = (-var_fast_transient_outward_K_I__E_K + var_chaste_interface__cell__V) * var_chaste_interface__non_inactivating_steady_state_K_I__aKss * mParameters[8] * var_chaste_interface__non_inactivating_steady_state_K_I__iKss; // picoA_per_picoF
        const double var_non_inactivating_steady_state_K_I__i_Kss_converted = HeartConfig::Instance()->GetCapacitance() * var_non_inactivating_steady_state_K_I__i_Kss; // uA_per_cm2
        const double var_calcium_fluxes__J_rel = ((var_chaste_interface__environment__time < var_cell__prepulses_number * var_chaste_interface__cell__stim_period) ? ((-var_chaste_interface__calcium_concentration__Cass + var_chaste_interface__calcium_concentration__CaJSR) * (var_chaste_interface__ryanodine_receptors__P_O1 + var_chaste_interface__ryanodine_receptors__P_O2) * var_chaste_interface__calcium_fluxes__P_RyR * mParameters[0]) : ((-var_chaste_interface__calcium_concentration__Cass + var_chaste_interface__calcium_concentration__CaJSR) * var_calcium_fluxes__v1_caff)); // micromolar_per_millisecond
        const double var_slow_delayed_rectifier_K_I__i_Ks = pow(var_chaste_interface__slow_delayed_rectifier_K_I__nKs, 2) * (-var_fast_transient_outward_K_I__E_K + var_chaste_interface__cell__V) * mParameters[10]; // picoA_per_picoF
        const double var_slow_delayed_rectifier_K_I__i_Ks_converted = HeartConfig::Instance()->GetCapacitance() * var_slow_delayed_rectifier_K_I__i_Ks; // uA_per_cm2
        const double var_sodium_calcium_exchange_current__K_mAllo = 0; // micromolar
        const double var_sodium_calcium_exchange_current__K_mCai = 3.6000000000000001; // micromolar
        const double var_sodium_calcium_exchange_current__K_mCao = 1400.0; // micromolar
        const double var_sodium_calcium_exchange_current__K_mNai = 12000.0; // micromolar
        const double var_sodium_calcium_exchange_current__K_mNao = 88000.0; // micromolar
        const double var_sodium_calcium_exchange_current__eta = 0.34999999999999998; // dimensionless
        const double var_sodium_calcium_exchange_current__k_sat = 0.27000000000000002; // dimensionless
        const double var_fast_sodium_current__E_Na = var_cell__R * var_cell__T * log((mParameters[3] + 0.1111111111111111 * mParameters[2]) / (var_chaste_interface__sodium_concentration__Nai + 0.1111111111111111 * var_chaste_interface__potassium_concentration__Ki)) / var_cell__F; // millivolt
        const double var_fast_sodium_current__i_Na = (-var_fast_sodium_current__E_Na + var_chaste_interface__cell__V) * var_chaste_interface__fast_sodium_current__O_Na * mParameters[6]; // picoA_per_picoF
        const double var_fast_sodium_current__i_Na_converted = HeartConfig::Instance()->GetCapacitance() * var_fast_sodium_current__i_Na; // uA_per_cm2
        const double var_rapid_delayed_rectifier_K_I__i_Kr = (-var_cell__R * var_cell__T * log((mParameters[2] + 0.020408163265306124 * mParameters[3]) / (var_chaste_interface__potassium_concentration__Ki + 0.020408163265306124 * var_chaste_interface__sodium_concentration__Nai)) / var_cell__F + var_chaste_interface__cell__V) * var_chaste_interface__rapid_delayed_rectifier_K_I__O_K * mParameters[9]; // picoA_per_picoF
        const double var_rapid_delayed_rectifier_K_I__i_Kr_converted = HeartConfig::Instance()->GetCapacitance() * var_rapid_delayed_rectifier_K_I__i_Kr; // uA_per_cm2
        const double var_sodium_calcium_exchange_current__i_NCX = (pow(var_chaste_interface__sodium_concentration__Nai, 3) * mParameters[1] * exp(var_cell__F * var_chaste_interface__cell__V * var_sodium_calcium_exchange_current__eta / (var_cell__R * var_cell__T)) - pow(mParameters[3], 3) * var_calcium_concentration__Cai * exp((-1.0 + var_sodium_calcium_exchange_current__eta) * var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * mParameters[11] / ((1.0 + pow(var_sodium_calcium_exchange_current__K_mAllo, 2) / pow(var_calcium_concentration__Cai, 2)) * (1.0 + var_sodium_calcium_exchange_current__k_sat * exp((-1.0 + var_sodium_calcium_exchange_current__eta) * var_cell__F * var_chaste_interface__cell__V / (var_cell__R * var_cell__T))) * (pow(mParameters[3], 3) * var_calcium_concentration__Cai + pow(var_sodium_calcium_exchange_current__K_mNao, 3) * var_calcium_concentration__Cai + pow(var_chaste_interface__sodium_concentration__Nai, 3) * mParameters[1] + pow(var_chaste_interface__sodium_concentration__Nai, 3) * var_sodium_calcium_exchange_current__K_mCao + pow(mParameters[3], 3) * (1.0 + pow(var_chaste_interface__sodium_concentration__Nai, 3) / pow(var_sodium_calcium_exchange_current__K_mNai, 3)) * var_sodium_calcium_exchange_current__K_mCai + pow(var_sodium_calcium_exchange_current__K_mNai, 3) * (1.0 + var_calcium_concentration__Cai / var_sodium_calcium_exchange_current__K_mCai) * mParameters[1])); // picoA_per_picoF
        const double var_sodium_calcium_exchange_current__i_NCX_converted = HeartConfig::Instance()->GetCapacitance() * var_sodium_calcium_exchange_current__i_NCX; // uA_per_cm2
        const double var_time_independent_K_I__i_K1 = (-var_fast_transient_outward_K_I__E_K + var_chaste_interface__cell__V) * mParameters[2] * mParameters[7] / ((1.0 + exp(0.089599999999999999 * var_chaste_interface__cell__V - 0.089599999999999999 * var_fast_transient_outward_K_I__E_K)) * (210.0 + mParameters[2])); // picoA_per_picoF
        const double var_time_independent_K_I__i_K1_converted = HeartConfig::Instance()->GetCapacitance() * var_time_independent_K_I__i_K1; // uA_per_cm2

        std::vector<double> dqs(11);
        dqs[0] = var_calcium_fluxes__J_rel;
        dqs[1] = var_chaste_interface__calcium_concentration__Cai_converted;
        dqs[2] = var_L_type_calcium_current__i_CaL_converted;
        dqs[3] = var_fast_sodium_current__i_Na_converted;
        dqs[4] = var_time_independent_K_I__i_K1_converted;
        dqs[5] = var_non_inactivating_steady_state_K_I__i_Kss_converted;
        dqs[6] = var_rapid_delayed_rectifier_K_I__i_Kr_converted;
        dqs[7] = var_slow_delayed_rectifier_K_I__i_Ks_converted;
        dqs[8] = var_sodium_calcium_exchange_current__i_NCX_converted;
        dqs[9] = var_cell__i_Stim_converted;
        dqs[10] = var_chaste_interface__environment__time;
        return dqs;
    }

template<>
void OdeSystemInformation<Cellli_mouse_2010FromCellMLBackwardEulerNoLut>::Initialise(void)
{
    this->mSystemName = "Li_Mouse_2010";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-78.9452115785979);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(9.499150681398009e-05);

    // rY[2]:
    this->mVariableNames.push_back("dyadic_space_calcium_concentration");
    this->mVariableUnits.push_back("micromolar");
    this->mInitialConditions.push_back(0.0954184301907784);

    // rY[3]:
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("micromolar");
    this->mInitialConditions.push_back(171.167969039613);

    // rY[4]:
    this->mVariableNames.push_back("calcium_concentration__CaNSR");
    this->mVariableUnits.push_back("micromolar");
    this->mInitialConditions.push_back(404.825013216286);

    // rY[5]:
    this->mVariableNames.push_back("calcium_fluxes__P_RyR");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000280539508743811);

    // rY[6]:
    this->mVariableNames.push_back("calcium_fluxes__CaMKt");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.729027738385079);

    // rY[7]:
    this->mVariableNames.push_back("ryanodine_receptors__P_O1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00571393383393735);

    // rY[8]:
    this->mVariableNames.push_back("ryanodine_receptors__P_O2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.09864618235341e-08);

    // rY[9]:
    this->mVariableNames.push_back("ryanodine_receptors__P_C2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.565182571165673);

    // rY[10]:
    this->mVariableNames.push_back("L_type_calcium_current__O");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.23713515513533e-06);

    // rY[11]:
    this->mVariableNames.push_back("L_type_calcium_current__I");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.427651445872853);

    // rY[12]:
    this->mVariableNames.push_back("L_type_calcium_current__y_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.845044436980163);

    // rY[13]:
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("micromolar");
    this->mInitialConditions.push_back(12364.7482121793);

    // rY[14]:
    this->mVariableNames.push_back("fast_sodium_current__O_Na");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.46826771436314e-06);

    // rY[15]:
    this->mVariableNames.push_back("fast_sodium_current__C_Na1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000420472760277688);

    // rY[16]:
    this->mVariableNames.push_back("fast_sodium_current__C_Na2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0240114508843199);

    // rY[17]:
    this->mVariableNames.push_back("fast_sodium_current__I1_Na");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000517471697712382);

    // rY[18]:
    this->mVariableNames.push_back("fast_sodium_current__I2_Na");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.45406116958509e-05);

    // rY[19]:
    this->mVariableNames.push_back("fast_sodium_current__IF_Na");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000306123648969581);

    // rY[20]:
    this->mVariableNames.push_back("fast_sodium_current__IC_Na2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0174528857380179);

    // rY[21]:
    this->mVariableNames.push_back("fast_sodium_current__IC_Na3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.402980726914811);

    // rY[22]:
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("micromolar");
    this->mInitialConditions.push_back(115599.50642567);

    // rY[23]:
    this->mVariableNames.push_back("ultra_rapidly_activating_delayed_rectifier_K_I__aur");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00346258606821817);

    // rY[24]:
    this->mVariableNames.push_back("ultra_rapidly_activating_delayed_rectifier_K_I__iur");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.955684946168062);

    // rY[25]:
    this->mVariableNames.push_back("non_inactivating_steady_state_K_I__aKss");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.287585636847048);

    // rY[26]:
    this->mVariableNames.push_back("non_inactivating_steady_state_K_I__iKss");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // rY[27]:
    this->mVariableNames.push_back("rapid_delayed_rectifier_K_I__O_K");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0131742086125972);

    // rY[28]:
    this->mVariableNames.push_back("rapid_delayed_rectifier_K_I__C_K1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0011733433957123);

    // rY[29]:
    this->mVariableNames.push_back("rapid_delayed_rectifier_K_I__C_K2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00105586824723736);

    // rY[30]:
    this->mVariableNames.push_back("rapid_delayed_rectifier_K_I__I_K");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00140618453684944);

    // rY[31]:
    this->mVariableNames.push_back("slow_delayed_rectifier_K_I__nKs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00336735013094628);

    // rY[32]:
    this->mVariableNames.push_back("fast_transient_outward_K_I__ato_f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0142335908879204);

    // rY[33]:
    this->mVariableNames.push_back("fast_transient_outward_K_I__ito_f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.996989882138174);

    // rY[34]:
    this->mVariableNames.push_back("slow_transient_outward_K_I__ato_s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0443263407760382);

    // rY[35]:
    this->mVariableNames.push_back("slow_transient_outward_K_I__ito_s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.887568880831388);

    // mParameters[0]:
    this->mParameterNames.push_back("SR_release_current_max");
    this->mParameterUnits.push_back("per_millisecond");

    // mParameters[1]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("micromolar");

    // mParameters[2]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("micromolar");

    // mParameters[3]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("micromolar");

    // mParameters[4]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("per_millisecond");

    // mParameters[5]:
    this->mParameterNames.push_back("membrane_capacitance");
    this->mParameterUnits.push_back("microF_per_cm2");

    // mParameters[6]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_non_inactivating_steady_state_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("picoA_per_picoF");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("SR_release_current");
    this->mDerivedQuantityUnits.push_back("micromolar_per_millisecond");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("cytosolic_calcium_concentration");
    this->mDerivedQuantityUnits.push_back("millimolar");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [5]:
    this->mDerivedQuantityNames.push_back("membrane_non_inactivating_steady_state_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [6]:
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [7]:
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [8]:
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [9]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [10]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellli_mouse_2010FromCellMLBackwardEulerNoLut)

