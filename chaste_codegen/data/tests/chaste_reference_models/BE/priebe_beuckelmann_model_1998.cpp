//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: priebe_beuckelmann_model_1998
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on Wed Mar 11 17:28:16 2020
//! 
//! <autogenerated>

#include "priebe_beuckelmann_model_1998.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "CardiacNewtonSolver.hpp"
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    boost::shared_ptr<RegularStimulus> Dynamicpriebe_beuckelmann_model_1998FromCellMLBackwardEuler::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__cell__stim_offset = 0.0; // millisecond
        const double var_chaste_interface__cell__stim_period = 1000.0; // millisecond
        const double var_chaste_interface__cell__stim_duration = 3.0; // millisecond
        const double var_chaste_interface__cell__stim_amplitude =  -15.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__cell__stim_amplitude),
                var_chaste_interface__cell__stim_duration,
                var_chaste_interface__cell__stim_period,
                var_chaste_interface__cell__stim_offset
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    double Dynamicpriebe_beuckelmann_model_1998FromCellMLBackwardEuler::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    
    Dynamicpriebe_beuckelmann_model_1998FromCellMLBackwardEuler::Dynamicpriebe_beuckelmann_model_1998FromCellMLBackwardEuler(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractBackwardEulerCardiacCell<12>(
                22,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Dynamicpriebe_beuckelmann_model_1998FromCellMLBackwardEuler>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
    }
    
    Dynamicpriebe_beuckelmann_model_1998FromCellMLBackwardEuler::~Dynamicpriebe_beuckelmann_model_1998FromCellMLBackwardEuler()
    {
    }
    
    double Dynamicpriebe_beuckelmann_model_1998FromCellMLBackwardEuler::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -90.7796417483135
        double var_chaste_interface__Ionic_concentrations__Cai = rY[1];
        // Units: millimolar; Initial value: 0.0002
        double var_chaste_interface__INa_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.000585525582501575
        double var_chaste_interface__INa_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.995865529216237
        double var_chaste_interface__INa_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.997011204496203
        double var_chaste_interface__ICa_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 2.50653215966786e-10
        double var_chaste_interface__ICa_f_gate__f = rY[6];
        // Units: dimensionless; Initial value: 0.92130376850548
        double var_chaste_interface__Ito_r_gate__r = rY[7];
        // Units: dimensionless; Initial value: 1.75032478501027e-5
        double var_chaste_interface__Ito_t_gate__t = rY[8];
        // Units: dimensionless; Initial value: 0.999897251531651
        double var_chaste_interface__IKs_Xs_gate__Xs = rY[9];
        // Units: dimensionless; Initial value: 0.00885658064818147
        double var_chaste_interface__IKr_Xr_gate__Xr = rY[10];
        // Units: dimensionless; Initial value: 0.000215523048438941
        double var_chaste_interface__Ionic_concentrations__Nai = rY[18];
        // Units: mM; Initial value: 10
        double var_chaste_interface__Ionic_concentrations__Ki = rY[19];
        // Units: mM; Initial value: 140
        
        const double var_INa__E_Na = log(138.0 / var_chaste_interface__Ionic_concentrations__Nai) * 26.725757487819564; // mV
        const double var_INa__g_Na = 16.0; // mS_per_uF
        const double var_INa__i_Na = var_INa__g_Na * pow(var_chaste_interface__INa_m_gate__m, 3.0) * var_chaste_interface__INa_h_gate__h * var_chaste_interface__INa_j_gate__j * (var_chaste_interface__cell__V - var_INa__E_Na); // uA_per_uF
        const double var_ICa__E_Ca = log(2.0 / var_chaste_interface__Ionic_concentrations__Cai) * 13.362878743909782; // mV
        const double var_ICa__g_Ca_max = 0.064000000000000001; // mS_per_uF
        const double var_ICa__i_Ca = var_ICa__g_Ca_max * var_chaste_interface__ICa_d_gate__d * var_chaste_interface__ICa_f_gate__f * (0.00059999999999999995 / (0.00059999999999999995 + var_chaste_interface__Ionic_concentrations__Cai)) * (var_chaste_interface__cell__V - var_ICa__E_Ca); // uA_per_uF
        const double var_Ito__i_to = 0.29999999999999999 * var_chaste_interface__Ito_r_gate__r * var_chaste_interface__Ito_t_gate__t * (var_chaste_interface__cell__V - (log(9.9339999999999993 / ((0.042999999999999997 * var_chaste_interface__Ionic_concentrations__Nai) + var_chaste_interface__Ionic_concentrations__Ki)) * 26.725757487819564)); // uA_per_uF
        const double var_IKr__g_Kr_max = 0.014999999999999999; // mS_per_uF
        const double var_IKr__i_Kr = var_IKr__g_Kr_max * var_chaste_interface__IKr_Xr_gate__Xr * (1.0 / (1.0 + exp((var_chaste_interface__cell__V + 26.0) * 0.043478260869565216))) * (var_chaste_interface__cell__V - (log(4.0 / var_chaste_interface__Ionic_concentrations__Ki) * 26.725757487819564)); // uA_per_uF
        const double var_IKs__i_Ks = 0.02 * pow(var_chaste_interface__IKs_Xs_gate__Xs, 2.0) * (var_chaste_interface__cell__V - (log(6.5295399999999999 / ((0.018329999999999999 * var_chaste_interface__Ionic_concentrations__Nai) + var_chaste_interface__Ionic_concentrations__Ki)) * 26.725757487819564)); // uA_per_uF
        const double var_IK1__E_K1 = log(4.0 / var_chaste_interface__Ionic_concentrations__Ki) * 26.725757487819564; // mV
        const double var_IK1_K1_gate__alpha_K1 = 0.10000000000000001 / (1.0 + exp(0.059999999999999998 * (var_chaste_interface__cell__V - (var_IK1__E_K1 + 200.0)))); // per_ms
        const double var_IK1__i_K1 = 2.5 * (var_IK1_K1_gate__alpha_K1 / (var_IK1_K1_gate__alpha_K1 + (((3.0 * exp(0.00020000000000000001 * (var_chaste_interface__cell__V + 100.0 + (-var_IK1__E_K1)))) + (1.0 * exp(0.10000000000000001 * (var_chaste_interface__cell__V - (10.0 + var_IK1__E_K1))))) / (1.0 + exp( -0.5 * (var_chaste_interface__cell__V - var_IK1__E_K1)))))) * (var_chaste_interface__cell__V - var_IK1__E_K1); // uA_per_uF
        const double var_INaCa__i_NaCa = (8.9708471082494196e-05 / (1.0 + (0.10000000000000001 * exp(var_chaste_interface__cell__V *  -0.024321106718724127)))) * ((exp(var_chaste_interface__cell__V * 0.013095980540851452) * pow(var_chaste_interface__Ionic_concentrations__Nai, 3.0) * 2.0) - (exp(var_chaste_interface__cell__V *  -0.024321106718724127) * 2628072.0 * var_chaste_interface__Ionic_concentrations__Cai)); // uA_per_uF
        const double var_INaK__i_NaK = ((((1.0 / (1.0 + (0.1245 * exp(var_chaste_interface__cell__V *  -0.0037417087259575578)) + (exp((-var_chaste_interface__cell__V) * 0.037417087259575578) * 0.035310840049036757))) * 1.3) / (1.0 + pow(10.0 / var_chaste_interface__Ionic_concentrations__Nai, 1.5))) * 4.0) * 0.18181818181818182; // uA_per_uF
        const double var_INab__i_b_Na = 0.001 * (var_chaste_interface__cell__V - var_INa__E_Na); // uA_per_uF
        const double var_ICab__i_b_Ca = 0.00084999999999999995 * (var_chaste_interface__cell__V - var_ICa__E_Ca); // uA_per_uF
        const double var_chaste_interface__cell__i_Stim = 0.0;
        const double var_cell__dVdt =  -1.0 * (var_INa__i_Na + var_ICa__i_Ca + var_Ito__i_to + var_IKr__i_Kr + var_IKs__i_Ks + var_IK1__i_K1 + var_INaCa__i_NaCa + var_INaK__i_NaK + var_INab__i_b_Na + var_ICab__i_b_Ca + (var_chaste_interface__cell__i_Stim / HeartConfig::Instance()->GetCapacitance())); // mV_per_ms
        const double var_chaste_interface__i_ionic = (var_cell__dVdt) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        
        const double i_ionic = -(var_chaste_interface__i_ionic);
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Dynamicpriebe_beuckelmann_model_1998FromCellMLBackwardEuler::ComputeResidual(double var_chaste_interface__environment__time, const double rCurrentGuess[12], double rResidual[12])
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -90.7796417483135
        double var_chaste_interface__INa_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.000585525582501575
        double var_chaste_interface__INa_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.995865529216237
        double var_chaste_interface__INa_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.997011204496203
        double var_chaste_interface__ICa_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 2.50653215966786e-10
        double var_chaste_interface__ICa_f_gate__f = rY[6];
        // Units: dimensionless; Initial value: 0.92130376850548
        double var_chaste_interface__Ito_r_gate__r = rY[7];
        // Units: dimensionless; Initial value: 1.75032478501027e-5
        double var_chaste_interface__Ito_t_gate__t = rY[8];
        // Units: dimensionless; Initial value: 0.999897251531651
        double var_chaste_interface__IKs_Xs_gate__Xs = rY[9];
        // Units: dimensionless; Initial value: 0.00885658064818147
        double var_chaste_interface__IKr_Xr_gate__Xr = rY[10];
        // Units: dimensionless; Initial value: 0.000215523048438941
        
        //output_nonlinear_state_assignments
        double var_chaste_interface__Ionic_concentrations__Ca_JSR = rCurrentGuess[0];
        double var_chaste_interface__Ionic_concentrations__Ca_NSR = rCurrentGuess[1];
        double var_chaste_interface__Ionic_concentrations__Cai = rCurrentGuess[2];
        double var_chaste_interface__Ionic_concentrations__Ki = rCurrentGuess[3];
        double var_chaste_interface__Ionic_concentrations__Nai = rCurrentGuess[4];
        double var_chaste_interface__Irel__APtrack = rCurrentGuess[5];
        double var_chaste_interface__Irel__APtrack2 = rCurrentGuess[6];
        double var_chaste_interface__Irel__APtrack3 = rCurrentGuess[7];
        double var_chaste_interface__Irel__Cainfluxtrack = rCurrentGuess[8];
        double var_chaste_interface__Irel__OVRLDtrack = rCurrentGuess[9];
        double var_chaste_interface__Irel__OVRLDtrack2 = rCurrentGuess[10];
        double var_chaste_interface__Irel__OVRLDtrack3 = rCurrentGuess[11];
        
        //output_equations
        const double var_INa__E_Na = log(138.0 / var_chaste_interface__Ionic_concentrations__Nai) * 26.725757487819564; // mV
        const double var_INa__g_Na = 16.0; // mS_per_uF
        const double var_INa__i_Na = var_INa__g_Na * pow(var_chaste_interface__INa_m_gate__m, 3.0) * var_chaste_interface__INa_h_gate__h * var_chaste_interface__INa_j_gate__j * (var_chaste_interface__cell__V - var_INa__E_Na); // uA_per_uF
        const double var_ICa__E_Ca = log(2.0 / var_chaste_interface__Ionic_concentrations__Cai) * 13.362878743909782; // mV
        const double var_ICa__g_Ca_max = 0.064000000000000001; // mS_per_uF
        const double var_ICa__i_Ca = var_ICa__g_Ca_max * var_chaste_interface__ICa_d_gate__d * var_chaste_interface__ICa_f_gate__f * (0.00059999999999999995 / (0.00059999999999999995 + var_chaste_interface__Ionic_concentrations__Cai)) * (var_chaste_interface__cell__V - var_ICa__E_Ca); // uA_per_uF
        const double var_Ito__i_to = 0.29999999999999999 * var_chaste_interface__Ito_r_gate__r * var_chaste_interface__Ito_t_gate__t * (var_chaste_interface__cell__V - (log(9.9339999999999993 / ((0.042999999999999997 * var_chaste_interface__Ionic_concentrations__Nai) + var_chaste_interface__Ionic_concentrations__Ki)) * 26.725757487819564)); // uA_per_uF
        const double var_IKr__g_Kr_max = 0.014999999999999999; // mS_per_uF
        const double var_IKr__i_Kr = var_IKr__g_Kr_max * var_chaste_interface__IKr_Xr_gate__Xr * (1.0 / (1.0 + exp((var_chaste_interface__cell__V + 26.0) * 0.043478260869565216))) * (var_chaste_interface__cell__V - (log(4.0 / var_chaste_interface__Ionic_concentrations__Ki) * 26.725757487819564)); // uA_per_uF
        const double var_IKs__i_Ks = 0.02 * pow(var_chaste_interface__IKs_Xs_gate__Xs, 2.0) * (var_chaste_interface__cell__V - (log(6.5295399999999999 / ((0.018329999999999999 * var_chaste_interface__Ionic_concentrations__Nai) + var_chaste_interface__Ionic_concentrations__Ki)) * 26.725757487819564)); // uA_per_uF
        const double var_IK1__E_K1 = log(4.0 / var_chaste_interface__Ionic_concentrations__Ki) * 26.725757487819564; // mV
        const double var_IK1_K1_gate__alpha_K1 = 0.10000000000000001 / (1.0 + exp(0.059999999999999998 * (var_chaste_interface__cell__V - (var_IK1__E_K1 + 200.0)))); // per_ms
        const double var_IK1__i_K1 = 2.5 * (var_IK1_K1_gate__alpha_K1 / (var_IK1_K1_gate__alpha_K1 + (((3.0 * exp(0.00020000000000000001 * (var_chaste_interface__cell__V + 100.0 + (-var_IK1__E_K1)))) + (1.0 * exp(0.10000000000000001 * (var_chaste_interface__cell__V - (10.0 + var_IK1__E_K1))))) / (1.0 + exp( -0.5 * (var_chaste_interface__cell__V - var_IK1__E_K1)))))) * (var_chaste_interface__cell__V - var_IK1__E_K1); // uA_per_uF
        const double var_INaCa__i_NaCa = (8.9708471082494196e-05 / (1.0 + (0.10000000000000001 * exp(var_chaste_interface__cell__V *  -0.024321106718724127)))) * ((exp(var_chaste_interface__cell__V * 0.013095980540851452) * pow(var_chaste_interface__Ionic_concentrations__Nai, 3.0) * 2.0) - (exp(var_chaste_interface__cell__V *  -0.024321106718724127) * 2628072.0 * var_chaste_interface__Ionic_concentrations__Cai)); // uA_per_uF
        const double var_INaK__i_NaK = ((((1.0 / (1.0 + (0.1245 * exp(var_chaste_interface__cell__V *  -0.0037417087259575578)) + (exp((-var_chaste_interface__cell__V) * 0.037417087259575578) * 0.035310840049036757))) * 1.3) / (1.0 + pow(10.0 / var_chaste_interface__Ionic_concentrations__Nai, 1.5))) * 4.0) * 0.18181818181818182; // uA_per_uF
        const double var_INab__i_b_Na = 0.001 * (var_chaste_interface__cell__V - var_INa__E_Na); // uA_per_uF
        const double var_ICab__i_b_Ca = 0.00084999999999999995 * (var_chaste_interface__cell__V - var_ICa__E_Ca); // uA_per_uF
        const double var_chaste_interface__cell__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
        const double var_cell__dVdt =  -1.0 * (var_INa__i_Na + var_ICa__i_Ca + var_Ito__i_to + var_IKr__i_Kr + var_IKs__i_Ks + var_IK1__i_K1 + var_INaCa__i_NaCa + var_INaK__i_NaK + var_INab__i_b_Na + var_ICab__i_b_Ca + (var_chaste_interface__cell__i_Stim / HeartConfig::Instance()->GetCapacitance())); // mV_per_ms
        const double var_Irel__i_rel = ((var_chaste_interface__Irel__Cainfluxtrack > 5.0000000000000004e-06) ? ((((var_chaste_interface__Irel__Cainfluxtrack - 5.0000000000000004e-06) * 22.0) / ((0.00080000000000000004 + var_chaste_interface__Irel__Cainfluxtrack) - 5.0000000000000004e-06)) * (1.0 - var_chaste_interface__Irel__APtrack2) * var_chaste_interface__Irel__APtrack2) : ((var_chaste_interface__Irel__Cainfluxtrack <= 5.0000000000000004e-06) && (var_chaste_interface__Irel__OVRLDtrack2 > 0.0)) ? ((1.0 - var_chaste_interface__Irel__OVRLDtrack2) * var_chaste_interface__Irel__OVRLDtrack2 * 0.0) : 0.0) * (var_chaste_interface__Ionic_concentrations__Ca_JSR - var_chaste_interface__Ionic_concentrations__Cai); // mM_per_ms
        const double var_Iup__i_up = (0.0044999999999999997 * var_chaste_interface__Ionic_concentrations__Cai) / (var_chaste_interface__Ionic_concentrations__Cai + 0.00092000000000000003); // mM_per_ms
        const double var_Ileak__i_leak = 0.00025999999999999998 * var_chaste_interface__Ionic_concentrations__Ca_NSR; // mM_per_ms
        const double var_Itr__i_tr = (1.0 * (var_chaste_interface__Ionic_concentrations__Ca_NSR - var_chaste_interface__Ionic_concentrations__Ca_JSR)) * 0.0055555555555555558; // mM_per_ms
        const double d_dt_chaste_interface__Ionic_concentrations__Cai = (1.0 / (1.0 + (1.0 * ((0.00011900000000000002 / pow(0.0023800000000000002 + var_chaste_interface__Ionic_concentrations__Cai, 2.0)) + (3.5000000000000004e-05 / pow(0.00050000000000000001 + var_chaste_interface__Ionic_concentrations__Cai, 2.0)))))) * ((( -153.40000000000001 * ((var_ICa__i_Ca - (2.0 * var_INaCa__i_NaCa)) + var_ICab__i_b_Ca)) * 2.0047415681574306e-07) + ((var_Irel__i_rel * 182.46370132049518) * 3.8686179652867115e-05) + (((var_Ileak__i_leak - var_Iup__i_up) * 2098.3325651856949) * 3.8686179652867115e-05)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Irel__APtrack = (var_cell__dVdt > 150.0) ? ((100.0 * (1.0 - var_chaste_interface__Irel__APtrack)) - (0.5 * var_chaste_interface__Irel__APtrack)) : ( -0.5 * var_chaste_interface__Irel__APtrack); // 'per millisecond'
        const double d_dt_chaste_interface__Irel__APtrack2 = ((var_chaste_interface__Irel__APtrack < 0.20000000000000001) && (var_chaste_interface__Irel__APtrack > 0.17999999999999999)) ? ((100.0 * (1.0 - var_chaste_interface__Irel__APtrack2)) - (0.5 * var_chaste_interface__Irel__APtrack2)) : ( -0.5 * var_chaste_interface__Irel__APtrack2); // 'per millisecond'
        const double d_dt_chaste_interface__Irel__APtrack3 = ((var_chaste_interface__Irel__APtrack < 0.20000000000000001) && (var_chaste_interface__Irel__APtrack > 0.17999999999999999)) ? ((100.0 * (1.0 - var_chaste_interface__Irel__APtrack3)) - (0.5 * var_chaste_interface__Irel__APtrack3)) : ( -0.01 * var_chaste_interface__Irel__APtrack3); // 'per millisecond'
        const double d_dt_chaste_interface__Irel__Cainfluxtrack = (var_chaste_interface__Irel__APtrack > 0.20000000000000001) ? (( -153.40000000000001 * ((var_ICa__i_Ca - var_INaCa__i_NaCa) + var_ICab__i_b_Ca)) * 2.0047415681574306e-07) : ((var_chaste_interface__Irel__APtrack2 > 0.01) && (var_chaste_interface__Irel__APtrack <= 0.20000000000000001)) ? 0.0 : ( -0.5 * var_chaste_interface__Irel__Cainfluxtrack); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Irel__OVRLDtrack = (((1.0 / (1.0 + (0.80000000000000004 / var_chaste_interface__Ionic_concentrations__Ca_JSR))) > 0.69999999999999996) && (var_chaste_interface__Irel__OVRLDtrack3 < 0.37) && (var_chaste_interface__Irel__APtrack3 < 0.37)) ? ((1.0 - var_chaste_interface__Irel__OVRLDtrack) * 0.0) : (var_chaste_interface__Irel__OVRLDtrack *  -0.0); // 'per millisecond'
        const double d_dt_chaste_interface__Irel__OVRLDtrack2 = ((var_chaste_interface__Irel__OVRLDtrack > 0.97999999999999998) && (var_chaste_interface__Irel__OVRLDtrack2 < 0.97999999999999998)) ? ((1.0 - var_chaste_interface__Irel__OVRLDtrack2) * 0.0) : (var_chaste_interface__Irel__OVRLDtrack2 *  -0.0); // 'per millisecond'
        const double d_dt_chaste_interface__Irel__OVRLDtrack3 = ((var_chaste_interface__Irel__OVRLDtrack > 0.97999999999999998) && (var_chaste_interface__Irel__OVRLDtrack3 < 0.97999999999999998)) ? ((1.0 - var_chaste_interface__Irel__OVRLDtrack3) * 0.0) : (var_chaste_interface__Irel__OVRLDtrack3 *  -0.0); // 'per millisecond'
        const double d_dt_chaste_interface__Ionic_concentrations__Nai = ((var_INa__i_Na + var_INab__i_b_Na + (var_INaCa__i_NaCa * 3.0) + (var_INaK__i_NaK * 3.0)) *  -153.40000000000001) * 4.0094831363148611e-07; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ionic_concentrations__Ki = (((var_Ito__i_to + var_IKr__i_Kr + var_IK1__i_K1 + (var_chaste_interface__cell__i_Stim / HeartConfig::Instance()->GetCapacitance()) + var_IKs__i_Ks) - (2.0 * var_INaK__i_NaK)) *  -153.40000000000001) * 4.0094831363148611e-07; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ionic_concentrations__Ca_JSR = (1.0 / (1.0 + (8.0 / pow(0.80000000000000004 + var_chaste_interface__Ionic_concentrations__Ca_JSR, 2.0)))) * (var_Itr__i_tr - var_Irel__i_rel); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ionic_concentrations__Ca_NSR =  -1.0 * ((var_Ileak__i_leak + (0.086956521739130418 * var_Itr__i_tr)) - var_Iup__i_up); // 'millimole per litre per millisecond'
        
        rResidual[2] = rCurrentGuess[2] - rY[1] - mDt*d_dt_chaste_interface__Ionic_concentrations__Cai;
        rResidual[5] = rCurrentGuess[5] - rY[11] - mDt*d_dt_chaste_interface__Irel__APtrack;
        rResidual[6] = rCurrentGuess[6] - rY[12] - mDt*d_dt_chaste_interface__Irel__APtrack2;
        rResidual[7] = rCurrentGuess[7] - rY[13] - mDt*d_dt_chaste_interface__Irel__APtrack3;
        rResidual[8] = rCurrentGuess[8] - rY[14] - mDt*d_dt_chaste_interface__Irel__Cainfluxtrack;
        rResidual[9] = rCurrentGuess[9] - rY[15] - mDt*d_dt_chaste_interface__Irel__OVRLDtrack;
        rResidual[10] = rCurrentGuess[10] - rY[16] - mDt*d_dt_chaste_interface__Irel__OVRLDtrack2;
        rResidual[11] = rCurrentGuess[11] - rY[17] - mDt*d_dt_chaste_interface__Irel__OVRLDtrack3;
        rResidual[4] = rCurrentGuess[4] - rY[18] - mDt*d_dt_chaste_interface__Ionic_concentrations__Nai;
        rResidual[3] = rCurrentGuess[3] - rY[19] - mDt*d_dt_chaste_interface__Ionic_concentrations__Ki;
        rResidual[0] = rCurrentGuess[0] - rY[20] - mDt*d_dt_chaste_interface__Ionic_concentrations__Ca_JSR;
        rResidual[1] = rCurrentGuess[1] - rY[21] - mDt*d_dt_chaste_interface__Ionic_concentrations__Ca_NSR;
    }
    
    void Dynamicpriebe_beuckelmann_model_1998FromCellMLBackwardEuler::ComputeJacobian(double var_chaste_interface__environment__time, const double rCurrentGuess[12], double rJacobian[12][12])
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -90.7796417483135
        double var_chaste_interface__INa_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.000585525582501575
        double var_chaste_interface__INa_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.995865529216237
        double var_chaste_interface__INa_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.997011204496203
        double var_chaste_interface__ICa_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 2.50653215966786e-10
        double var_chaste_interface__ICa_f_gate__f = rY[6];
        // Units: dimensionless; Initial value: 0.92130376850548
        double var_chaste_interface__Ito_r_gate__r = rY[7];
        // Units: dimensionless; Initial value: 1.75032478501027e-5
        double var_chaste_interface__Ito_t_gate__t = rY[8];
        // Units: dimensionless; Initial value: 0.999897251531651
        double var_chaste_interface__IKs_Xs_gate__Xs = rY[9];
        // Units: dimensionless; Initial value: 0.00885658064818147
        double var_chaste_interface__IKr_Xr_gate__Xr = rY[10];
        // Units: dimensionless; Initial value: 0.000215523048438941
        
        double var_chaste_interface__Ionic_concentrations__Ca_JSR = rCurrentGuess[0];
        double var_chaste_interface__Ionic_concentrations__Ca_NSR = rCurrentGuess[1];
        double var_chaste_interface__Ionic_concentrations__Cai = rCurrentGuess[2];
        double var_chaste_interface__Ionic_concentrations__Ki = rCurrentGuess[3];
        double var_chaste_interface__Ionic_concentrations__Nai = rCurrentGuess[4];
        double var_chaste_interface__Irel__APtrack = rCurrentGuess[5];
        double var_chaste_interface__Irel__APtrack2 = rCurrentGuess[6];
        double var_chaste_interface__Irel__APtrack3 = rCurrentGuess[7];
        double var_chaste_interface__Irel__Cainfluxtrack = rCurrentGuess[8];
        double var_chaste_interface__Irel__OVRLDtrack = rCurrentGuess[9];
        double var_chaste_interface__Irel__OVRLDtrack2 = rCurrentGuess[10];
        double var_chaste_interface__Irel__OVRLDtrack3 = rCurrentGuess[11];
        
        const double var_chaste_interface__environment__dt = mDt;

        const double var_INa__g_Na = 16.0; // mS_per_uF
        const double var_ICa__g_Ca_max = 0.064000000000000001; // mS_per_uF
        const double var_IKr__g_Kr_max = 0.014999999999999999; // mS_per_uF
        const double var_chaste_interface__cell__stim_offset = 0.0; // millisecond
        const double var_chaste_interface__cell__stim_period = 1000.0; // millisecond
        const double var_chaste_interface__cell__stim_duration = 3.0; // millisecond
        const double var_t3 = (pow(var_chaste_interface__INa_m_gate__m, 2.0) * var_chaste_interface__INa_m_gate__m) * var_INa__g_Na; // dimensionless
        const double var_t4 = var_chaste_interface__INa_h_gate__h * var_chaste_interface__INa_j_gate__j; // dimensionless
        const double var_t5 = var_t4 * var_t3; // dimensionless
        const double var_t6 = var_ICa__g_Ca_max * var_chaste_interface__ICa_d_gate__d; // dimensionless
        const double var_t7 = 0.00059999999999999995 * var_chaste_interface__ICa_f_gate__f; // dimensionless
        const double var_t8 = 0.00059999999999999995 + var_chaste_interface__Ionic_concentrations__Cai; // dimensionless
        const double var_t9 = 1.0 / var_t8; // dimensionless
        const double var_t14 = var_chaste_interface__Ito_r_gate__r * 0.191; // dimensionless
        const double var_t15 = var_chaste_interface__Ito_t_gate__t * var_t14; // dimensionless
        const double var_t16 = var_IKr__g_Kr_max * var_chaste_interface__IKr_Xr_gate__Xr; // dimensionless
        const double var_t19 = exp((0.043478260869565216 * var_chaste_interface__cell__V) + 1.1304347826086956); // dimensionless
        const double var_t20 = 1.0 + var_t19; // dimensionless
        const double var_t23 = 1.0 / var_chaste_interface__Ionic_concentrations__Ki; // dimensionless
        const double var_t29 = 26.725757487819564 * log(var_t23 * 4.0); // dimensionless
        const double var_t30 = var_chaste_interface__cell__V - var_t29; // dimensionless
        const double var_t35 = 1.0 / var_t20; // dimensionless
        const double var_t36 = var_t35 * var_t16; // dimensionless
        const double var_t38 = pow(var_chaste_interface__IKs_Xs_gate__Xs, 2.0) * 0.02; // dimensionless
        const double var_t43 = exp(((0.059999999999999998 * var_chaste_interface__cell__V) - (0.059999999999999998 * var_t29)) - 12.0); // dimensionless
        const double var_t44 = 1.0 + var_t43; // dimensionless
        const double var_t46 = 1.0 / pow(var_t44, 2.0); // dimensionless
        const double var_t47 = var_t46 * 2.0; // dimensionless
        const double var_t48 = 1.0 / var_t44; // dimensionless
        const double var_t53 = exp(((0.00020000000000000001 * var_chaste_interface__cell__V) + 0.02) - (0.00020000000000000001 * var_t29)); // dimensionless
        const double var_t55 = 0.10000000000000001 * var_chaste_interface__cell__V; // dimensionless
        const double var_t58 = exp((var_t55 - 1.0) - (0.10000000000000001 * var_t29)); // dimensionless
        const double var_t59 = (3.0 * var_t53) + var_t58; // dimensionless
        const double var_t63 = exp(( -0.5 * var_chaste_interface__cell__V) + (0.5 * var_t29)); // dimensionless
        const double var_t64 = 1.0 + var_t63; // dimensionless
        const double var_t65 = 1.0 / var_t64; // dimensionless
        const double var_t67 = (0.10000000000000001 * var_t48) + (var_t65 * var_t59); // dimensionless
        const double var_t68 = 1.0 / var_t67; // dimensionless
        const double var_t69 = var_t30 * var_t68; // dimensionless
        const double var_t73 = var_t48 * 2.0; // dimensionless
        const double var_t76 = var_t30 / pow(var_t67, 2.0); // dimensionless
        const double var_t85 = (1.0 / pow(var_t64, 2.0)) * var_t59; // dimensionless
        const double var_t92 = var_t68 * var_t73; // dimensionless
        const double var_t111 = exp((0.037417087259575578 * var_chaste_interface__cell__V) *  -0.65000000000000002); // dimensionless
        const double var_t113 = 1.0 + (var_t111 * 0.10000000000000001); // dimensionless
        const double var_t119 = exp(0.013095980540851452 * var_chaste_interface__cell__V); // dimensionless
        const double var_t120 = pow(var_chaste_interface__Ionic_concentrations__Nai, 2.0); // dimensionless
        const double var_t121 = var_t120 * var_chaste_interface__Ionic_concentrations__Nai; // dimensionless
        const double var_t124 = 2628072.0 * var_t111; // dimensionless
        const double var_t126 = ((2.0 * var_t121) * var_t119) - (var_chaste_interface__Ionic_concentrations__Cai * var_t124); // dimensionless
        const double var_t135 = 1.0 / var_t113; // dimensionless
        const double var_t136 = var_t135 * 0.29585798816568049; // dimensionless
        const double var_t154 = (0.00038779528431976198 * var_chaste_interface__cell__V) * 96.486699999999999; // dimensionless
        const double var_t156 = exp( -0.10000000000000001 * var_t154); // dimensionless
        const double var_t161 = exp(-var_t154); // dimensionless
        const double var_t164 = (1.0 + (0.1245 * var_t156)) + ((0.0052142857139999997 * var_t161) * 6.771941926782242); // dimensionless
        const double var_t168 = 1.0 / var_chaste_interface__Ionic_concentrations__Nai; // dimensionless
        const double var_t169 = var_t168 * 10.0; // dimensionless
        const double var_t171 = 1.0 + pow(var_t169, 1.5); // dimensionless
        const double var_t172 = 1.0 / var_t171; // dimensionless
        const double var_t195 = var_chaste_interface__cell__V - (26.725757487819564 * log(var_t168 * 138.0)); // dimensionless
        const double var_t205 = 1.0 / var_chaste_interface__Ionic_concentrations__Cai; // dimensionless
        const double var_t211 = var_chaste_interface__cell__V - (13.362878743909782 * log(var_t205 * 2.0)); // dimensionless
        const double var_t220 = 1.0 / ((0.042999999999999997 * var_chaste_interface__Ionic_concentrations__Nai) + var_chaste_interface__Ionic_concentrations__Ki); // dimensionless
        const double var_t233 = 1.0 / ((0.018329999999999999 * var_chaste_interface__Ionic_concentrations__Nai) + var_chaste_interface__Ionic_concentrations__Ki); // dimensionless
        const double var_t248 = (26.725757487819564 * var_t220) * var_t15; // dimensionless
        const double var_t253 = (26.725757487819564 * var_t233) * var_t38; // dimensionless
        const double var_t257 = 2.0 * var_t120; // dimensionless
        const double var_t262 = (1.0 / var_t164) * 0.75; // dimensionless
        const double var_t272 = ((((((1.0 / var_t120) * 10.0) * pow(var_t169, 0.5)) * 0.18181818181818182) * 4.0) / pow(var_t171, 2.0)) * var_t262; // dimensionless
        const double var_t277 = var_chaste_interface__ICa_f_gate__f * var_t6; // dimensionless
        const double var_t282 = ((var_t211 / pow(var_t8, 2.0)) * 0.00059999999999999995) * var_t277; // dimensionless
        const double var_t287 = (((13.362878743909782 * var_t205) * var_t9) * var_t7) * var_t6; // dimensionless
        const double var_t290 = ((2628072.0 * var_t111) * var_t135) * 0.00014801897728611543; // dimensionless
        const double var_t293 = (13.362878743909782 * var_t205) * 0.0012999999999999999; // dimensionless
        const double var_t295 = 0.010364122723649996 * var_t23; // dimensionless
        const double var_t296 = 2578.6801449999998 * var_t295; // dimensionless
        const double var_t299 = var_t43 * 2578.6801449999998; // dimensionless
        const double var_t728 = ((var_t211 * var_t9) * 0.00059999999999999995) * var_t277; // dimensionless
        const double var_t737 = (var_t126 * var_t136) * 0.0005003041432270701; // dimensionless
        const double var_t742 = var_t211 * 0.0012999999999999999; // dimensionless
        const double var_t747 = var_chaste_interface__environment__time - (var_chaste_interface__cell__stim_period * floor(var_chaste_interface__environment__time / var_chaste_interface__cell__stim_period)); // dimensionless
        const double var_t754 = 150.0 < ((((((((((((-(var_t195 * var_t4)) * var_t3) - var_t728) - (((var_chaste_interface__cell__V - (26.725757487819564 * log(var_t220 * 9.9339999999999993))) * var_chaste_interface__Ito_t_gate__t) * var_t14)) - ((var_t30 * var_t35) * var_t16)) - ((var_chaste_interface__cell__V - (26.725757487819564 * log(var_t233 * 6.5295399999999999))) * var_t38)) - ((0.10000000000000001 * var_t69) * var_t73)) - var_t737) - ((0.72727272727272729 * var_t172) * var_t262)) - (var_t195 * 0.0)) - var_t742) - (((var_chaste_interface__cell__stim_offset <= var_t747) && (var_t747 <= (var_chaste_interface__cell__stim_offset + var_chaste_interface__cell__stim_duration))) ?  -15.0 : 0.0)); // dimensionless
        const double var_t755 = var_t754 ? 0.0 : 0.0; // dimensionless
        const double var_t762 = (var_chaste_interface__Irel__APtrack < 0.20000000000000001) && (0.17999999999999999 < var_chaste_interface__Irel__APtrack); // dimensionless
        const double var_t765 = 0.20000000000000001 < var_chaste_interface__Irel__APtrack; // dimensionless
        const double var_t779 = (0.01 < var_chaste_interface__Irel__APtrack2) && (var_chaste_interface__Irel__APtrack <= 0.20000000000000001); // dimensionless
        const double var_t794 = var_t765 ? 0.0 : var_t779 ? 0.0 : 0.0; // dimensionless
        const double var_t820 = ((0.69999999999999996 < (1.0 / (1.0 + (0.80000000000000004 / var_chaste_interface__Ionic_concentrations__Ca_JSR)))) && (var_chaste_interface__Irel__OVRLDtrack3 < 0.37) && (var_chaste_interface__Irel__APtrack3 < 0.37)) ? 0.0 : 0.0; // dimensionless
        const double var_t821 = 0.97999999999999998 < var_chaste_interface__Irel__OVRLDtrack; // dimensionless
        const double var_t824 = (var_t821 && (var_chaste_interface__Irel__OVRLDtrack2 < 0.97999999999999998)) ? 0.0 : 0.0; // dimensionless
        const double var_t827 = (var_t821 && (var_chaste_interface__Irel__OVRLDtrack3 < 0.97999999999999998)) ? 0.0 : 0.0; // dimensionless
        const double var_t860 = (var_t135 * 0.29585798816568049) * 3.0321463225883039e-07; // dimensionless
        const double var_t867 = 0.0023800000000000002 + var_chaste_interface__Ionic_concentrations__Cai; // dimensionless
        const double var_t868 = pow(var_t867, 2.0); // dimensionless
        const double var_t872 = 0.00050000000000000001 + var_chaste_interface__Ionic_concentrations__Cai; // dimensionless
        const double var_t873 = pow(var_t872, 2.0); // dimensionless
        const double var_t878 = 1.0 + ((((1.0 / var_t868) * 0.00011900000000000002) + ((1.0 / var_t873) * 3.5000000000000004e-05)) * 1.0); // dimensionless
        const double var_t879 = 1.0 / var_t878; // dimensionless
        const double var_t901 = 5.0000000000000004e-06 < var_chaste_interface__Irel__Cainfluxtrack; // dimensionless
        const double var_t903 = 22.0 * (var_chaste_interface__Irel__Cainfluxtrack - 5.0000000000000004e-06); // dimensionless
        const double var_t904 = (0.00080000000000000004 + var_chaste_interface__Irel__Cainfluxtrack) - 5.0000000000000004e-06; // dimensionless
        const double var_t905 = 1.0 / var_t904; // dimensionless
        const double var_t908 = 1.0 - var_chaste_interface__Irel__APtrack2; // dimensionless
        const double var_t909 = var_t908 * var_t905; // dimensionless
        const double var_t914 = (var_chaste_interface__Irel__Cainfluxtrack <= 5.0000000000000004e-06) && (0.0 < var_chaste_interface__Irel__OVRLDtrack2); // dimensionless
        const double var_t915 = var_t901 ? ((((-var_chaste_interface__Irel__APtrack2) * var_t905) * var_t903) + (var_t909 * var_t903)) : var_t914 ? 0.0 : 0.0; // dimensionless
        const double var_t917 = var_chaste_interface__Ionic_concentrations__Ca_JSR - var_chaste_interface__Ionic_concentrations__Cai; // dimensionless
        const double var_t929 = var_t901 ? ((((var_chaste_interface__Irel__APtrack2 * var_t908) * var_t905) * 22.0) - (((var_chaste_interface__Irel__APtrack2 * var_t908) / pow(var_t904, 2.0)) * var_t903)) : var_t914 ? 0.0 : 0.0; // dimensionless
        const double var_t933 = var_t901 ? 0.0 : var_t914 ? 0.0 : 0.0; // dimensionless
        const double var_t954 = var_t901 ? ((var_chaste_interface__Irel__APtrack2 * var_t909) * var_t903) : var_t914 ? 0.0 : 0.0; // dimensionless
        const double var_t955 = var_t917 * var_t954; // dimensionless
        const double var_t961 = var_chaste_interface__Ionic_concentrations__Cai * 0.0015; // dimensionless
        const double var_t962 = var_chaste_interface__Ionic_concentrations__Cai + 0.00092000000000000003; // dimensionless
        const double var_t963 = 1.0 / var_t962; // dimensionless
        const double var_t984 = var_t963 * 0.0015; // dimensionless
        const double var_t988 = (1.0 / pow(var_t962, 2.0)) * var_t961; // dimensionless
        const double var_t1031 = 0.80000000000000004 + var_chaste_interface__Ionic_concentrations__Ca_JSR; // dimensionless
        const double var_t1032 = pow(var_t1031, 2.0); // dimensionless
        const double var_t1035 = 1.0 + ((1.0 / var_t1032) * 8.0); // dimensionless
        const double var_t1036 = 1.0 / var_t1035; // dimensionless
        
        rJacobian[0][0] = 1.0 - (var_chaste_interface__environment__dt * ((((((2.0 / var_t1032) / var_t1031) * 8.0) * ((0.0055555555555555558 * (var_chaste_interface__Ionic_concentrations__Ca_NSR - var_chaste_interface__Ionic_concentrations__Ca_JSR)) - var_t955)) / pow(var_t1035, 2.0)) + (( -0.0055555555555555558 - var_t954) * var_t1036)));
        rJacobian[0][1] = -(var_chaste_interface__environment__dt * (0.0055555555555555558 * var_t1036));
        rJacobian[0][2] = -(var_chaste_interface__environment__dt * (var_t954 * var_t1036));
        rJacobian[0][3] = 0.0;
        rJacobian[0][4] = 0.0;
        rJacobian[0][5] = 0.0;
        rJacobian[0][6] = -(var_chaste_interface__environment__dt * (((-var_t917) * var_t915) * var_t1036));
        rJacobian[0][7] = 0.0;
        rJacobian[0][8] = -(var_chaste_interface__environment__dt * (((-var_t917) * var_t929) * var_t1036));
        rJacobian[0][9] = 0.0;
        rJacobian[0][10] = -(var_chaste_interface__environment__dt * (((-var_t917) * var_t933) * var_t1036));
        rJacobian[0][11] = 0.0;
        rJacobian[1][0] = -(var_chaste_interface__environment__dt * 0.00048309178744444445);
        rJacobian[1][1] = 1.0 - (var_chaste_interface__environment__dt *  -0.00065309178744444446);
        rJacobian[1][2] = -(var_chaste_interface__environment__dt * (var_t984 - var_t988));
        rJacobian[1][3] = 0.0;
        rJacobian[1][4] = 0.0;
        rJacobian[1][5] = 0.0;
        rJacobian[1][6] = 0.0;
        rJacobian[1][7] = 0.0;
        rJacobian[1][8] = 0.0;
        rJacobian[1][9] = 0.0;
        rJacobian[1][10] = 0.0;
        rJacobian[1][11] = 0.0;
        rJacobian[2][0] = -(var_chaste_interface__environment__dt * ((0.0070588235289999997 * var_t954) * var_t879));
        rJacobian[2][1] = -(var_chaste_interface__environment__dt * (1.38000000003e-05 * var_t879));
        rJacobian[2][2] = 1.0 - (var_chaste_interface__environment__dt * ((((( -2.0 * (((( -1.0 / var_t868) / var_t867) * 0.00011900000000000002) - (((1.0 / var_t873) / var_t872) * 3.5000000000000004e-05))) * 1.0) * ((((( -2.004741567756483e-07 * ((var_t728 - (2.0 * var_t737)) + var_t742)) * 153.40000000000001) + (0.0070588235289999997 * var_t955)) + ((0.081176470589999994 * var_chaste_interface__Ionic_concentrations__Ca_NSR) * 0.00017000000000000001)) - ((0.081176470589999994 * var_t963) * var_t961))) / pow(var_t878, 2.0)) + (((((( -2.004741567756483e-07 * ((((-var_t282) + var_t287) + (2.0 * var_t290)) + var_t293)) * 153.40000000000001) - (0.0070588235289999997 * var_t954)) - (0.081176470589999994 * var_t984)) + (0.081176470589999994 * var_t988)) * var_t879)));
        rJacobian[2][3] = 0.0;
        rJacobian[2][4] = -(var_chaste_interface__environment__dt * (((((2.4056898813077802e-06 * var_t120) * var_t119) * var_t860) * 1650.0) * (153.40000000000001 * var_t879)));
        rJacobian[2][5] = 0.0;
        rJacobian[2][6] = -(var_chaste_interface__environment__dt * (((0.0070588235289999997 * var_t917) * var_t915) * var_t879));
        rJacobian[2][7] = 0.0;
        rJacobian[2][8] = -(var_chaste_interface__environment__dt * (((0.0070588235289999997 * var_t917) * var_t929) * var_t879));
        rJacobian[2][9] = 0.0;
        rJacobian[2][10] = -(var_chaste_interface__environment__dt * (((0.0070588235289999997 * var_t917) * var_t933) * var_t879));
        rJacobian[2][11] = 0.0;
        rJacobian[3][0] = 0.0;
        rJacobian[3][1] = 0.0;
        rJacobian[3][2] = 0.0;
        rJacobian[3][3] = 1.0 - (var_chaste_interface__environment__dt * ((4.009483135512966e-07 * ((((((-var_t248) - (var_t296 * var_t36)) - var_t253) + ((((0.0060000000000000001 * var_t299) * var_t295) * var_t69) * var_t47)) + (((0.10000000000000001 * (((((( -0.0060000000000000001 * var_t299) * 0.010364122723649996) * var_t23) * var_t46) + (var_t65 * ((((0.00059999999999999995 * var_t53) * 2578.6801449999998) * var_t295) + (((0.10000000000000001 * var_t58) * 2578.6801449999998) * var_t295)))) + (((((0.5 * var_t63) * 310.14999999999998) * 0.086170425561243158) * var_t23) * var_t85))) * var_t76) * var_t73)) - ((0.10000000000000001 * var_t296) * var_t92))) * 153.40000000000001));
        rJacobian[3][4] = -(var_chaste_interface__environment__dt * (( -4.009483135512966e-07 * (((0.042999999999999997 * var_t248) + (0.018329999999999999 * var_t253)) - (3.0 * var_t272))) * 153.40000000000001));
        rJacobian[3][5] = 0.0;
        rJacobian[3][6] = 0.0;
        rJacobian[3][7] = 0.0;
        rJacobian[3][8] = 0.0;
        rJacobian[3][9] = 0.0;
        rJacobian[3][10] = 0.0;
        rJacobian[3][11] = 0.0;
        rJacobian[4][0] = 0.0;
        rJacobian[4][1] = 0.0;
        rJacobian[4][2] = -(var_chaste_interface__environment__dt * (((1.2028449406538899e-06 * var_t124) * var_t860) * 253110.0));
        rJacobian[4][3] = 0.0;
        rJacobian[4][4] = 1.0 - (var_chaste_interface__environment__dt * (( -4.009483135512966e-07 * (((((26.725757487819564 * var_t168) * var_t5) + ((26.725757487819564 * var_t168) * 0.0)) + (9.0 * (((var_t257 * var_t119) * var_t135) * 0.00014801897728611543))) + (4.5 * var_t272))) * 153.40000000000001));
        rJacobian[4][5] = 0.0;
        rJacobian[4][6] = 0.0;
        rJacobian[4][7] = 0.0;
        rJacobian[4][8] = 0.0;
        rJacobian[4][9] = 0.0;
        rJacobian[4][10] = 0.0;
        rJacobian[4][11] = 0.0;
        rJacobian[5][0] = 0.0;
        rJacobian[5][1] = 0.0;
        rJacobian[5][2] = -(var_chaste_interface__environment__dt * var_t755);
        rJacobian[5][3] = -(var_chaste_interface__environment__dt * var_t755);
        rJacobian[5][4] = -(var_chaste_interface__environment__dt * var_t755);
        rJacobian[5][5] = 1.0 - (var_chaste_interface__environment__dt * (var_t754 ?  -100.5 :  -0.5));
        rJacobian[5][6] = 0.0;
        rJacobian[5][7] = 0.0;
        rJacobian[5][8] = 0.0;
        rJacobian[5][9] = 0.0;
        rJacobian[5][10] = 0.0;
        rJacobian[5][11] = 0.0;
        rJacobian[6][0] = 0.0;
        rJacobian[6][1] = 0.0;
        rJacobian[6][2] = 0.0;
        rJacobian[6][3] = 0.0;
        rJacobian[6][4] = 0.0;
        rJacobian[6][5] = -(var_chaste_interface__environment__dt * 0.0);
        rJacobian[6][6] = 1.0 - (var_chaste_interface__environment__dt * (var_t762 ?  -100.5 :  -0.5));
        rJacobian[6][7] = 0.0;
        rJacobian[6][8] = 0.0;
        rJacobian[6][9] = 0.0;
        rJacobian[6][10] = 0.0;
        rJacobian[6][11] = 0.0;
        rJacobian[7][0] = 0.0;
        rJacobian[7][1] = 0.0;
        rJacobian[7][2] = 0.0;
        rJacobian[7][3] = 0.0;
        rJacobian[7][4] = 0.0;
        rJacobian[7][5] = -(var_chaste_interface__environment__dt * 0.0);
        rJacobian[7][6] = 0.0;
        rJacobian[7][7] = 1.0 - (var_chaste_interface__environment__dt * (var_t762 ?  -100.5 :  -0.01));
        rJacobian[7][8] = 0.0;
        rJacobian[7][9] = 0.0;
        rJacobian[7][10] = 0.0;
        rJacobian[7][11] = 0.0;
        rJacobian[8][0] = 0.0;
        rJacobian[8][1] = 0.0;
        rJacobian[8][2] = -(var_chaste_interface__environment__dt * (var_t765 ? (( -2.004741567756483e-07 * ((((-var_t282) + var_t287) + var_t290) + var_t293)) * 153.40000000000001) : var_t779 ? 0.0 : 0.0));
        rJacobian[8][3] = 0.0;
        rJacobian[8][4] = -(var_chaste_interface__environment__dt * (var_t765 ? (((((6.014224701906225e-07 * var_t257) * var_t119) * var_t136) * 3.0321463225883039e-07) * 253110.0) : var_t779 ? 0.0 : 0.0));
        rJacobian[8][5] = -(var_chaste_interface__environment__dt * var_t794);
        rJacobian[8][6] = -(var_chaste_interface__environment__dt * var_t794);
        rJacobian[8][7] = 0.0;
        rJacobian[8][8] = 1.0 - (var_chaste_interface__environment__dt * (var_t765 ? 0.0 : var_t779 ? 0.0 :  -0.5));
        rJacobian[8][9] = 0.0;
        rJacobian[8][10] = 0.0;
        rJacobian[8][11] = 0.0;
        rJacobian[9][0] = -(var_chaste_interface__environment__dt * var_t820);
        rJacobian[9][1] = 0.0;
        rJacobian[9][2] = 0.0;
        rJacobian[9][3] = 0.0;
        rJacobian[9][4] = 0.0;
        rJacobian[9][5] = 0.0;
        rJacobian[9][6] = 0.0;
        rJacobian[9][7] = -(var_chaste_interface__environment__dt * var_t820);
        rJacobian[9][8] = 0.0;
        rJacobian[9][9] = 1.0;
        rJacobian[9][10] = 0.0;
        rJacobian[9][11] = -(var_chaste_interface__environment__dt * var_t820);
        rJacobian[10][0] = 0.0;
        rJacobian[10][1] = 0.0;
        rJacobian[10][2] = 0.0;
        rJacobian[10][3] = 0.0;
        rJacobian[10][4] = 0.0;
        rJacobian[10][5] = 0.0;
        rJacobian[10][6] = 0.0;
        rJacobian[10][7] = 0.0;
        rJacobian[10][8] = 0.0;
        rJacobian[10][9] = -(var_chaste_interface__environment__dt * var_t824);
        rJacobian[10][10] = 1.0 - (var_chaste_interface__environment__dt * var_t824);
        rJacobian[10][11] = 0.0;
        rJacobian[11][0] = 0.0;
        rJacobian[11][1] = 0.0;
        rJacobian[11][2] = 0.0;
        rJacobian[11][3] = 0.0;
        rJacobian[11][4] = 0.0;
        rJacobian[11][5] = 0.0;
        rJacobian[11][6] = 0.0;
        rJacobian[11][7] = 0.0;
        rJacobian[11][8] = 0.0;
        rJacobian[11][9] = -(var_chaste_interface__environment__dt * var_t827);
        rJacobian[11][10] = 0.0;
        rJacobian[11][11] = 1.0 - (var_chaste_interface__environment__dt * var_t827);
    }
    
    void Dynamicpriebe_beuckelmann_model_1998FromCellMLBackwardEuler::UpdateTransmembranePotential(double var_chaste_interface__environment__time)
    {
        // Time units: millisecond
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -90.7796417483135
        double var_chaste_interface__Ionic_concentrations__Cai = rY[1];
        // Units: millimolar; Initial value: 0.0002
        double var_chaste_interface__INa_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.000585525582501575
        double var_chaste_interface__INa_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.995865529216237
        double var_chaste_interface__INa_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.997011204496203
        double var_chaste_interface__ICa_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 2.50653215966786e-10
        double var_chaste_interface__ICa_f_gate__f = rY[6];
        // Units: dimensionless; Initial value: 0.92130376850548
        double var_chaste_interface__Ito_r_gate__r = rY[7];
        // Units: dimensionless; Initial value: 1.75032478501027e-5
        double var_chaste_interface__Ito_t_gate__t = rY[8];
        // Units: dimensionless; Initial value: 0.999897251531651
        double var_chaste_interface__IKs_Xs_gate__Xs = rY[9];
        // Units: dimensionless; Initial value: 0.00885658064818147
        double var_chaste_interface__IKr_Xr_gate__Xr = rY[10];
        // Units: dimensionless; Initial value: 0.000215523048438941
        double var_chaste_interface__Ionic_concentrations__Nai = rY[18];
        // Units: mM; Initial value: 10
        double var_chaste_interface__Ionic_concentrations__Ki = rY[19];
        // Units: mM; Initial value: 140
        
        const double var_INa__E_Na = log(138.0 / var_chaste_interface__Ionic_concentrations__Nai) * 26.725757487819564; // mV
        const double var_INa__g_Na = 16.0; // mS_per_uF
        const double var_INa__i_Na = var_INa__g_Na * pow(var_chaste_interface__INa_m_gate__m, 3.0) * var_chaste_interface__INa_h_gate__h * var_chaste_interface__INa_j_gate__j * (var_chaste_interface__cell__V - var_INa__E_Na); // uA_per_uF
        const double var_ICa__E_Ca = log(2.0 / var_chaste_interface__Ionic_concentrations__Cai) * 13.362878743909782; // mV
        const double var_ICa__g_Ca_max = 0.064000000000000001; // mS_per_uF
        const double var_ICa__i_Ca = var_ICa__g_Ca_max * var_chaste_interface__ICa_d_gate__d * var_chaste_interface__ICa_f_gate__f * (0.00059999999999999995 / (0.00059999999999999995 + var_chaste_interface__Ionic_concentrations__Cai)) * (var_chaste_interface__cell__V - var_ICa__E_Ca); // uA_per_uF
        const double var_Ito__i_to = 0.29999999999999999 * var_chaste_interface__Ito_r_gate__r * var_chaste_interface__Ito_t_gate__t * (var_chaste_interface__cell__V - (log(9.9339999999999993 / ((0.042999999999999997 * var_chaste_interface__Ionic_concentrations__Nai) + var_chaste_interface__Ionic_concentrations__Ki)) * 26.725757487819564)); // uA_per_uF
        const double var_IKr__g_Kr_max = 0.014999999999999999; // mS_per_uF
        const double var_IKr__i_Kr = var_IKr__g_Kr_max * var_chaste_interface__IKr_Xr_gate__Xr * (1.0 / (1.0 + exp((var_chaste_interface__cell__V + 26.0) * 0.043478260869565216))) * (var_chaste_interface__cell__V - (log(4.0 / var_chaste_interface__Ionic_concentrations__Ki) * 26.725757487819564)); // uA_per_uF
        const double var_IKs__i_Ks = 0.02 * pow(var_chaste_interface__IKs_Xs_gate__Xs, 2.0) * (var_chaste_interface__cell__V - (log(6.5295399999999999 / ((0.018329999999999999 * var_chaste_interface__Ionic_concentrations__Nai) + var_chaste_interface__Ionic_concentrations__Ki)) * 26.725757487819564)); // uA_per_uF
        const double var_IK1__E_K1 = log(4.0 / var_chaste_interface__Ionic_concentrations__Ki) * 26.725757487819564; // mV
        const double var_IK1_K1_gate__alpha_K1 = 0.10000000000000001 / (1.0 + exp(0.059999999999999998 * (var_chaste_interface__cell__V - (var_IK1__E_K1 + 200.0)))); // per_ms
        const double var_IK1__i_K1 = 2.5 * (var_IK1_K1_gate__alpha_K1 / (var_IK1_K1_gate__alpha_K1 + (((3.0 * exp(0.00020000000000000001 * (var_chaste_interface__cell__V + 100.0 + (-var_IK1__E_K1)))) + (1.0 * exp(0.10000000000000001 * (var_chaste_interface__cell__V - (10.0 + var_IK1__E_K1))))) / (1.0 + exp( -0.5 * (var_chaste_interface__cell__V - var_IK1__E_K1)))))) * (var_chaste_interface__cell__V - var_IK1__E_K1); // uA_per_uF
        const double var_INaCa__i_NaCa = (8.9708471082494196e-05 / (1.0 + (0.10000000000000001 * exp(var_chaste_interface__cell__V *  -0.024321106718724127)))) * ((exp(var_chaste_interface__cell__V * 0.013095980540851452) * pow(var_chaste_interface__Ionic_concentrations__Nai, 3.0) * 2.0) - (exp(var_chaste_interface__cell__V *  -0.024321106718724127) * 2628072.0 * var_chaste_interface__Ionic_concentrations__Cai)); // uA_per_uF
        const double var_INaK__i_NaK = ((((1.0 / (1.0 + (0.1245 * exp(var_chaste_interface__cell__V *  -0.0037417087259575578)) + (exp((-var_chaste_interface__cell__V) * 0.037417087259575578) * 0.035310840049036757))) * 1.3) / (1.0 + pow(10.0 / var_chaste_interface__Ionic_concentrations__Nai, 1.5))) * 4.0) * 0.18181818181818182; // uA_per_uF
        const double var_INab__i_b_Na = 0.001 * (var_chaste_interface__cell__V - var_INa__E_Na); // uA_per_uF
        const double var_ICab__i_b_Ca = 0.00084999999999999995 * (var_chaste_interface__cell__V - var_ICa__E_Ca); // uA_per_uF
        const double var_chaste_interface__cell__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
        const double var_cell__dVdt =  -1.0 * (var_INa__i_Na + var_ICa__i_Ca + var_Ito__i_to + var_IKr__i_Kr + var_IKs__i_Ks + var_IK1__i_K1 + var_INaCa__i_NaCa + var_INaK__i_NaK + var_INab__i_b_Na + var_ICab__i_b_Ca + (var_chaste_interface__cell__i_Stim / HeartConfig::Instance()->GetCapacitance())); // mV_per_ms
        const double d_dt_chaste_interface__cell__V = var_cell__dVdt; // 'millivolt per millisecond'
        
        rY[0] += mDt*d_dt_chaste_interface__cell__V;
    }
    
    void Dynamicpriebe_beuckelmann_model_1998FromCellMLBackwardEuler::ComputeOneStepExceptVoltage(double var_chaste_interface__environment__time)
    {
        // Time units: millisecond
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -90.7796417483135
        double var_chaste_interface__INa_m_gate__m = rY[2];
        // Units: dimensionless; Initial value: 0.000585525582501575
        double var_chaste_interface__INa_h_gate__h = rY[3];
        // Units: dimensionless; Initial value: 0.995865529216237
        double var_chaste_interface__INa_j_gate__j = rY[4];
        // Units: dimensionless; Initial value: 0.997011204496203
        double var_chaste_interface__ICa_d_gate__d = rY[5];
        // Units: dimensionless; Initial value: 2.50653215966786e-10
        double var_chaste_interface__ICa_f_gate__f = rY[6];
        // Units: dimensionless; Initial value: 0.92130376850548
        double var_chaste_interface__Ito_r_gate__r = rY[7];
        // Units: dimensionless; Initial value: 1.75032478501027e-5
        double var_chaste_interface__Ito_t_gate__t = rY[8];
        // Units: dimensionless; Initial value: 0.999897251531651
        double var_chaste_interface__IKs_Xs_gate__Xs = rY[9];
        // Units: dimensionless; Initial value: 0.00885658064818147
        double var_chaste_interface__IKr_Xr_gate__Xr = rY[10];
        // Units: dimensionless; Initial value: 0.000215523048438941
        
        const double var_chaste_interface__environment__dt = mDt;

        const double var_INa_m_gate__alpha_m = (fabs(var_chaste_interface__cell__V + 47.130000000000003) > 0.001) ? ((0.32000000000000001 * (var_chaste_interface__cell__V + 47.130000000000003)) / (1.0 - exp( -0.10000000000000001 * (var_chaste_interface__cell__V + 47.130000000000003)))) : 3.2000000000000002; // per_ms
        const double var_INa_h_gate__alpha_h = (var_chaste_interface__cell__V <  -40.0) ? (0.13500000000000001 * exp((80.0 + var_chaste_interface__cell__V) *  -0.14705882352941177)) : 0.0; // per_ms
        const double var_INa_j_gate__alpha_j = (var_chaste_interface__cell__V <  -40.0) ? (((( -127140.0 * exp(0.24399999999999999 * var_chaste_interface__cell__V)) - (3.4740000000000003e-05 * exp( -0.043909999999999998 * var_chaste_interface__cell__V))) * (var_chaste_interface__cell__V + 37.780000000000001)) / (1.0 + exp(0.311 * (var_chaste_interface__cell__V + 79.230000000000004)))) : 0.0; // per_ms
        const double var_ICa_d_gate__alpha_d = 0.3583958756132814 * exp((-pow((var_chaste_interface__cell__V - 22.359999999999999) * 0.059947366212465457, 2.0)) * 0.5); // per_ms
        const double var_ICa_f_gate__alpha_f = 0.0068719999999999996 / (1.0 + exp((var_chaste_interface__cell__V - 6.1546000000000003) * 0.16333730787449161)); // per_ms
        const double var_Ito_r_gate__alpha_r = (0.52659999999999996 * exp( -0.0166 * (var_chaste_interface__cell__V - 42.291200000000003))) / (1.0 + exp( -0.094299999999999995 * (var_chaste_interface__cell__V - 42.291200000000003))); // per_ms
        const double var_Ito_t_gate__alpha_t = ((5.6119999999999998e-05 * var_chaste_interface__cell__V) + (0.072099999999999997 * exp( -0.17299999999999999 * (var_chaste_interface__cell__V + 34.253100000000003)))) / (1.0 + exp( -0.17319999999999999 * (var_chaste_interface__cell__V + 34.253100000000003))); // per_ms
        const double var_IKs_Xs_gate__alpha_Xs = 0.0030130000000000001 / (1.0 + exp((7.4454000000000002 - (var_chaste_interface__cell__V + 10.0)) * 0.069846547135942336)); // per_ms
        const double var_IKr_Xr_gate__alpha_Xr = (0.0050000000000000001 * exp(0.00052660000000000001 * (var_chaste_interface__cell__V + 4.0670000000000002))) / (1.0 + exp( -0.12620000000000001 * (var_chaste_interface__cell__V + 4.0670000000000002))); // per_ms
        
        rY[5] = (var_chaste_interface__ICa_d_gate__d + ((var_ICa_d_gate__alpha_d * 1.0) * var_chaste_interface__environment__dt)) / (1.0 - (((var_ICa_d_gate__alpha_d *  -1.0) - ((0.14710000000000001 - (0.14162050141511009 * exp((-pow((var_chaste_interface__cell__V - 6.2744) * 0.066979236436704628, 2.0)) * 0.5))) * 1.0)) * var_chaste_interface__environment__dt));
        rY[6] = (var_chaste_interface__ICa_f_gate__f + ((var_ICa_f_gate__alpha_f * 1.0) * var_chaste_interface__environment__dt)) / (1.0 - (((var_ICa_f_gate__alpha_f *  -1.0) - (((((0.068699999999999997 * exp( -0.1081 * (var_chaste_interface__cell__V + 9.8254999999999999))) + 0.0112) / (1.0 + exp( -0.27789999999999998 * (var_chaste_interface__cell__V + 9.8254999999999999)))) + 0.00054739999999999997) * 1.0)) * var_chaste_interface__environment__dt));
        rY[10] = (var_chaste_interface__IKr_Xr_gate__Xr + ((var_IKr_Xr_gate__alpha_Xr * 1.0) * var_chaste_interface__environment__dt)) / (1.0 - (((var_IKr_Xr_gate__alpha_Xr *  -1.0) - (((0.016 * exp(0.0016000000000000001 * (var_chaste_interface__cell__V + 65.659999999999997))) / (1.0 + exp(0.078299999999999995 * (var_chaste_interface__cell__V + 65.659999999999997)))) * 1.0)) * var_chaste_interface__environment__dt));
        rY[9] = (var_chaste_interface__IKs_Xs_gate__Xs + ((var_IKs_Xs_gate__alpha_Xs * 1.0) * var_chaste_interface__environment__dt)) / (1.0 - (((var_IKs_Xs_gate__alpha_Xs *  -1.0) - ((0.0058700000000000002 / (1.0 + exp((var_chaste_interface__cell__V + 15.949999999999999) * 0.063211125158027806))) * 1.0)) * var_chaste_interface__environment__dt));
        rY[3] = (var_chaste_interface__INa_h_gate__h + ((var_INa_h_gate__alpha_h * 1.0) * var_chaste_interface__environment__dt)) / (1.0 - (((var_INa_h_gate__alpha_h *  -1.0) - (((var_chaste_interface__cell__V <  -40.0) ? ((3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__cell__V)) + (310000.0 * exp(0.34999999999999998 * var_chaste_interface__cell__V))) : (1.0 / (0.13 * (1.0 + exp((-(var_chaste_interface__cell__V + 10.66)) * 0.0900900900900901))))) * 1.0)) * var_chaste_interface__environment__dt));
        rY[4] = (var_chaste_interface__INa_j_gate__j + ((var_INa_j_gate__alpha_j * 1.0) * var_chaste_interface__environment__dt)) / (1.0 - (((var_INa_j_gate__alpha_j *  -1.0) - (((var_chaste_interface__cell__V <  -40.0) ? ((0.1212 * exp( -0.01052 * var_chaste_interface__cell__V)) / (1.0 + exp( -0.13780000000000001 * (var_chaste_interface__cell__V + 40.140000000000001)))) : ((0.29999999999999999 * exp( -2.5349999999999999e-07 * var_chaste_interface__cell__V)) / (1.0 + exp( -0.10000000000000001 * (var_chaste_interface__cell__V + 32.0))))) * 1.0)) * var_chaste_interface__environment__dt));
        rY[2] = (var_chaste_interface__INa_m_gate__m + ((var_INa_m_gate__alpha_m * 1.0) * var_chaste_interface__environment__dt)) / (1.0 - (((var_INa_m_gate__alpha_m *  -1.0) - ((0.080000000000000002 * exp((-var_chaste_interface__cell__V) * 0.090909090909090912)) * 1.0)) * var_chaste_interface__environment__dt));
        rY[7] = (var_chaste_interface__Ito_r_gate__r + ((var_Ito_r_gate__alpha_r * 1.0) * var_chaste_interface__environment__dt)) / (1.0 - (((var_Ito_r_gate__alpha_r *  -1.0) - ((((5.1860000000000002e-05 * var_chaste_interface__cell__V) + (0.51490000000000002 * exp( -0.13439999999999999 * (var_chaste_interface__cell__V - 5.0026999999999999)))) / (1.0 + exp( -0.1348 * (var_chaste_interface__cell__V - 5.1860000000000002e-05)))) * 1.0)) * var_chaste_interface__environment__dt));
        rY[8] = (var_chaste_interface__Ito_t_gate__t + ((var_Ito_t_gate__alpha_t * 1.0) * var_chaste_interface__environment__dt)) / (1.0 - (((var_Ito_t_gate__alpha_t *  -1.0) - ((((0.0001215 * var_chaste_interface__cell__V) + (0.076700000000000004 * exp( -1.6600000000000001e-09 * (var_chaste_interface__cell__V + 34.023499999999999)))) / (1.0 + exp( -0.16039999999999999 * (var_chaste_interface__cell__V + 34.023499999999999)))) * 1.0)) * var_chaste_interface__environment__dt));
        
        double _guess[12] = {rY[20],rY[21],rY[1],rY[19],rY[18],rY[11],rY[12],rY[13],rY[14],rY[15],rY[16],rY[17]};
        CardiacNewtonSolver<12,Dynamicpriebe_beuckelmann_model_1998FromCellMLBackwardEuler>* _p_solver = CardiacNewtonSolver<12,Dynamicpriebe_beuckelmann_model_1998FromCellMLBackwardEuler>::Instance();
        _p_solver->Solve(*this, var_chaste_interface__environment__time, _guess);
        rY[20] = _guess[0];
        rY[21] = _guess[1];
        rY[1] = _guess[2];
        rY[19] = _guess[3];
        rY[18] = _guess[4];
        rY[11] = _guess[5];
        rY[12] = _guess[6];
        rY[13] = _guess[7];
        rY[14] = _guess[8];
        rY[15] = _guess[9];
        rY[16] = _guess[10];
        rY[17] = _guess[11];
    }
    
template<>
void OdeSystemInformation<Dynamicpriebe_beuckelmann_model_1998FromCellMLBackwardEuler>::Initialise(void)
{
    this->mSystemName = "priebe_beuckelmann_model_1998";
    this->mFreeVariableName = "environment__time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-90.7796417483135);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0002);

    // rY[2]:
    this->mVariableNames.push_back("INa_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000585525582501575);

    // rY[3]:
    this->mVariableNames.push_back("INa_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.995865529216237);

    // rY[4]:
    this->mVariableNames.push_back("INa_j_gate__j");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.997011204496203);

    // rY[5]:
    this->mVariableNames.push_back("ICa_d_gate__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.50653215966786e-10);

    // rY[6]:
    this->mVariableNames.push_back("ICa_f_gate__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.92130376850548);

    // rY[7]:
    this->mVariableNames.push_back("Ito_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.75032478501027e-5);

    // rY[8]:
    this->mVariableNames.push_back("Ito_t_gate__t");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999897251531651);

    // rY[9]:
    this->mVariableNames.push_back("IKs_Xs_gate__Xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00885658064818147);

    // rY[10]:
    this->mVariableNames.push_back("IKr_Xr_gate__Xr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000215523048438941);

    // rY[11]:
    this->mVariableNames.push_back("Irel__APtrack");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(-1.372158997089e-136);

    // rY[12]:
    this->mVariableNames.push_back("Irel__APtrack2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(-7.58517896402761e-136);

    // rY[13]:
    this->mVariableNames.push_back("Irel__APtrack3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(4.82035353592764e-5);

    // rY[14]:
    this->mVariableNames.push_back("Irel__Cainfluxtrack");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(-7.71120176147331e-138);

    // rY[15]:
    this->mVariableNames.push_back("Irel__OVRLDtrack");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1e-6);

    // rY[16]:
    this->mVariableNames.push_back("Irel__OVRLDtrack2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1e-6);

    // rY[17]:
    this->mVariableNames.push_back("Irel__OVRLDtrack3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1e-6);

    // rY[18]:
    this->mVariableNames.push_back("Ionic_concentrations__Nai");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(10);

    // rY[19]:
    this->mVariableNames.push_back("Ionic_concentrations__Ki");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(140);

    // rY[20]:
    this->mVariableNames.push_back("Ionic_concentrations__Ca_JSR");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(2.5);

    // rY[21]:
    this->mVariableNames.push_back("Ionic_concentrations__Ca_NSR");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(2.5);

    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Dynamicpriebe_beuckelmann_model_1998FromCellMLBackwardEuler)
extern "C"
{
    AbstractCardiacCellInterface* MakeCardiacCell(
            boost::shared_ptr<AbstractIvpOdeSolver> pSolver,
            boost::shared_ptr<AbstractStimulusFunction> pStimulus)
    {
        return new Dynamicpriebe_beuckelmann_model_1998FromCellMLBackwardEuler(pSolver, pStimulus);
    }
    
}

