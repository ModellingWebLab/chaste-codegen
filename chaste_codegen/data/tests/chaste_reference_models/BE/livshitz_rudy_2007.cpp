//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: LivshitzRudy2007
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on Wed Mar 11 16:49:18 2020
//! 
//! <autogenerated>

#include "livshitz_rudy_2007.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "CardiacNewtonSolver.hpp"
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    boost::shared_ptr<RegularStimulus> Dynamiclivshitz_rudy_2007FromCellMLBackwardEuler::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__cell__stim_offset = 0.0; // millisecond
        const double var_chaste_interface__cell__stim_period = 400.0; // millisecond
        const double var_chaste_interface__cell__stim_duration = 3.0; // millisecond
        const double var_chaste_interface__cell__stim_amplitude =  -15.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__cell__stim_amplitude),
                var_chaste_interface__cell__stim_duration,
                var_chaste_interface__cell__stim_period,
                var_chaste_interface__cell__stim_offset
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    Dynamiclivshitz_rudy_2007FromCellMLBackwardEuler::Dynamiclivshitz_rudy_2007FromCellMLBackwardEuler(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractBackwardEulerCardiacCell<7>(
                18,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Dynamiclivshitz_rudy_2007FromCellMLBackwardEuler>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
    }
    
    Dynamiclivshitz_rudy_2007FromCellMLBackwardEuler::~Dynamiclivshitz_rudy_2007FromCellMLBackwardEuler()
    {
    }
    
    double Dynamiclivshitz_rudy_2007FromCellMLBackwardEuler::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -89.4356034692784
        double var_chaste_interface__INa__H = rY[1];
        // Units: dimensionless; Initial value: 0.994401369032678
        double var_chaste_interface__INa__m = rY[2];
        // Units: dimensionless; Initial value: 0.000734780346592185
        double var_chaste_interface__INa__J = rY[3];
        // Units: dimensionless; Initial value: 0.996100688673679
        double var_chaste_interface__ICaL__d = rY[4];
        // Units: dimensionless; Initial value: 3.2514786721066e-27
        double var_chaste_interface__ICaL__f = rY[5];
        // Units: dimensionless; Initial value: 0.997404948824816
        double var_chaste_interface__IKr__xr = rY[6];
        // Units: dimensionless; Initial value: 0.000162194715543637
        double var_chaste_interface__IKs__xs1 = rY[7];
        // Units: dimensionless; Initial value: 0.0285147332973946
        double var_chaste_interface__IKs__xs2 = rY[8];
        // Units: dimensionless; Initial value: 0.0764114040188678
        double var_chaste_interface__ICaT__b = rY[9];
        // Units: dimensionless; Initial value: 0.000927461915392873
        double var_chaste_interface__ICaT__g = rY[10];
        // Units: dimensionless; Initial value: 0.952834331760863
        double var_chaste_interface__Na__Na_i = rY[12];
        // Units: mM; Initial value: 16.612739313555
        double var_chaste_interface__K__K_i = rY[13];
        // Units: mM; Initial value: 139.730914103161
        double var_chaste_interface__Ca__Ca_T = rY[14];
        // Units: mM; Initial value: 0.0257059808595638
        
        const double var_ICaL__G_CaL_mult = 1.0; // dimensionless
        const double var_Ca__bmyo = (0.12000000000000001 - var_chaste_interface__Ca__Ca_T) + 0.0028800000000000002; // mM
        const double var_Ca__cmyo = (1.19e-06 - (var_chaste_interface__Ca__Ca_T * 0.0028800000000000002)) + 0.00019160000000000005; // mM2
        const double var_Ca__Ca_i = (((2.0 * sqrt((var_Ca__bmyo * var_Ca__bmyo) - (3.0 * var_Ca__cmyo))) * 0.33333333333333331) * cos(acos((((9.0 * var_Ca__bmyo * var_Ca__cmyo) - (2.0 * var_Ca__bmyo * var_Ca__bmyo * var_Ca__bmyo)) - (27.0 * (var_chaste_interface__Ca__Ca_T *  -1.19e-06))) / (2.0 * pow((var_Ca__bmyo * var_Ca__bmyo) - (3.0 * var_Ca__cmyo), 1.5))) * 0.33333333333333331)) - (var_Ca__bmyo * 0.33333333333333331); // mM
        const double var_ICaL__fca = 1.0 / (1.0 + (var_Ca__Ca_i * 1666.6666666666667)); // dimensionless
        const double var_ICaL__ilca = var_chaste_interface__ICaL__d * var_chaste_interface__ICaL__f * var_ICaL__fca * ((var_ICaL__G_CaL_mult * var_chaste_interface__cell__V * ((1.0 * var_Ca__Ca_i * exp(var_chaste_interface__cell__V * 0.074871767015605245)) - 0.61380000000000001) * 7.8019226357407261) / (exp(var_chaste_interface__cell__V * 0.074871767015605245) - 1.0)); // uA_per_uF
        const double var_INaCa__inaca = (0.00025000000000000001 * exp(var_chaste_interface__cell__V *  -0.031820500981632228) * ((exp(var_chaste_interface__cell__V * 0.037435883507802623) * pow(var_chaste_interface__Na__Na_i, 3.0) * 1.8) - (2744000.0 * var_Ca__Ca_i))) / (1.0 + (0.0001 * exp(var_chaste_interface__cell__V *  -0.031820500981632228) * ((exp(var_chaste_interface__cell__V * 0.037435883507802623) * pow(var_chaste_interface__Na__Na_i, 3.0) * 1.8) + (2744000.0 * var_Ca__Ca_i)))); // uA_per_uF
        const double var_INa__GNa = 16.0; // mS_per_uF
        const double var_reversal_potentials__ENa = log(140.0 / var_chaste_interface__Na__Na_i) * 26.712338705498262; // mV
        const double var_INaK__inak = ((2.25 * (1.0 / (1.0 + (0.1245 * exp(var_chaste_interface__cell__V *  -0.0037435883507802624)) + (exp((-var_chaste_interface__cell__V) * 0.037435883507802623) * 0.036533226130519084)))) / (1.0 + pow(10.0 / var_chaste_interface__Na__Na_i, 2.0))) * 0.75; // uA_per_uF
        const double var_reversal_potentials__EK = log(4.5 / var_chaste_interface__K__K_i) * 26.712338705498262; // mV
        const double var_IKr__gkrmax = 0.02614; // mS_per_uF
        const double var_IK1__ak1 = 1.02 / (1.0 + exp(0.23849999999999999 * ((var_chaste_interface__cell__V - var_reversal_potentials__EK) - 59.215000000000003))); // per_ms
        const double var_cell__caiont = ((var_ICaL__ilca + (0.003016 * (var_chaste_interface__cell__V - (log(1.8 / var_Ca__Ca_i) * 13.356169352749131))) + ((1.1499999999999999 * var_Ca__Ca_i) / (0.00050000000000000001 + var_Ca__Ca_i))) - (2.0 * var_INaCa__inaca)) + (0.050000000000000003 * var_chaste_interface__ICaT__b * var_chaste_interface__ICaT__b * var_chaste_interface__ICaT__g * (var_chaste_interface__cell__V - ((log(1.8 / var_Ca__Ca_i) * 0.5) * 26.712338705498262))); // uA_per_uF
        const double var_cell__naiont = (var_INa__GNa * var_chaste_interface__INa__m * var_chaste_interface__INa__m * var_chaste_interface__INa__m * var_chaste_interface__INa__H * var_chaste_interface__INa__J * (var_chaste_interface__cell__V - var_reversal_potentials__ENa)) + (0.0040000000000000001 * (var_chaste_interface__cell__V - var_reversal_potentials__ENa)) + (3.0 * var_INaCa__inaca) + (var_chaste_interface__ICaL__d * var_chaste_interface__ICaL__f * var_ICaL__fca * ((var_ICaL__G_CaL_mult * var_chaste_interface__cell__V * ((0.75 * var_chaste_interface__Na__Na_i * exp(var_chaste_interface__cell__V * 0.037435883507802623)) - 105.0) * 0.0024381008236689767) / (exp(var_chaste_interface__cell__V * 0.037435883507802623) - 1.0))) + (3.0 * var_INaK__inak); // uA_per_uF
        const double var_chaste_interface__cell__i_Stim = 0.0;
        const double var_cell__kiont = (((var_IKr__gkrmax * 0.91287092917527679 * var_chaste_interface__IKr__xr * (1.0 / (1.0 + exp((var_chaste_interface__cell__V + 9.0) * 0.044642857142857144))) * (var_chaste_interface__cell__V - var_reversal_potentials__EK)) + ((0.433 * (1.0 + (0.59999999999999998 / (1.0 + pow(3.8000000000000002e-05 / var_Ca__Ca_i, 1.3999999999999999))))) * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2 * (var_chaste_interface__cell__V - (log(7.0662000000000003 / (var_chaste_interface__K__K_i + (0.018329999999999999 * var_chaste_interface__Na__Na_i))) * 26.712338705498262))) + (((0.68465319688145754 * var_IK1__ak1) / (var_IK1__ak1 + (((0.49124000000000001 * exp(0.080320000000000003 * ((var_chaste_interface__cell__V - var_reversal_potentials__EK) + 5.476))) + (1.0 * exp(0.061749999999999999 * ((var_chaste_interface__cell__V - var_reversal_potentials__EK) - 594.30999999999995)))) / (1.0 + exp( -0.51429999999999998 * ((var_chaste_interface__cell__V - var_reversal_potentials__EK) + 4.7530000000000001)))))) * (var_chaste_interface__cell__V - var_reversal_potentials__EK)) + ((0.0055199999999999997 * (var_chaste_interface__cell__V - var_reversal_potentials__EK)) / (1.0 + exp((7.4880000000000004 - var_chaste_interface__cell__V) * 0.16722408026755853))) + (var_chaste_interface__ICaL__d * var_chaste_interface__ICaL__f * var_ICaL__fca * ((var_ICaL__G_CaL_mult * var_chaste_interface__cell__V * ((0.75 * var_chaste_interface__K__K_i * exp(var_chaste_interface__cell__V * 0.037435883507802623)) - 3.375) * 0.00069711623550831479) / (exp(var_chaste_interface__cell__V * 0.037435883507802623) - 1.0)))) - (2.0 * var_INaK__inak)) + (var_chaste_interface__cell__i_Stim / HeartConfig::Instance()->GetCapacitance()); // uA_per_uF
        const double var_chaste_interface__i_ionic = (var_cell__naiont + var_cell__kiont + var_cell__caiont) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Dynamiclivshitz_rudy_2007FromCellMLBackwardEuler::ComputeResidual(double var_chaste_interface__Environment__time, const double rCurrentGuess[7], double rResidual[7])
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -89.4356034692784
        double var_chaste_interface__INa__H = rY[1];
        // Units: dimensionless; Initial value: 0.994401369032678
        double var_chaste_interface__INa__m = rY[2];
        // Units: dimensionless; Initial value: 0.000734780346592185
        double var_chaste_interface__INa__J = rY[3];
        // Units: dimensionless; Initial value: 0.996100688673679
        double var_chaste_interface__ICaL__d = rY[4];
        // Units: dimensionless; Initial value: 3.2514786721066e-27
        double var_chaste_interface__ICaL__f = rY[5];
        // Units: dimensionless; Initial value: 0.997404948824816
        double var_chaste_interface__IKr__xr = rY[6];
        // Units: dimensionless; Initial value: 0.000162194715543637
        double var_chaste_interface__IKs__xs1 = rY[7];
        // Units: dimensionless; Initial value: 0.0285147332973946
        double var_chaste_interface__IKs__xs2 = rY[8];
        // Units: dimensionless; Initial value: 0.0764114040188678
        double var_chaste_interface__ICaT__b = rY[9];
        // Units: dimensionless; Initial value: 0.000927461915392873
        double var_chaste_interface__ICaT__g = rY[10];
        // Units: dimensionless; Initial value: 0.952834331760863
        
        //output_nonlinear_state_assignments
        double var_chaste_interface__Ca__Ca_JSR_T = rCurrentGuess[0];
        double var_chaste_interface__Ca__Ca_NSR = rCurrentGuess[1];
        double var_chaste_interface__Ca__Ca_T = rCurrentGuess[2];
        double var_chaste_interface__Irel__Rel = rCurrentGuess[4];
        double var_chaste_interface__K__K_i = rCurrentGuess[5];
        double var_chaste_interface__Na__Na_i = rCurrentGuess[6];
        
        //output_equations
        const double var_ICaL__G_CaL_mult = 1.0; // dimensionless
        const double var_Ca__bmyo = (0.12000000000000001 - var_chaste_interface__Ca__Ca_T) + 0.0028800000000000002; // mM
        const double var_Ca__cmyo = (1.19e-06 - (var_chaste_interface__Ca__Ca_T * 0.0028800000000000002)) + 0.00019160000000000005; // mM2
        const double var_Ca__Ca_i = (((2.0 * sqrt((var_Ca__bmyo * var_Ca__bmyo) - (3.0 * var_Ca__cmyo))) * 0.33333333333333331) * cos(acos((((9.0 * var_Ca__bmyo * var_Ca__cmyo) - (2.0 * var_Ca__bmyo * var_Ca__bmyo * var_Ca__bmyo)) - (27.0 * (var_chaste_interface__Ca__Ca_T *  -1.19e-06))) / (2.0 * pow((var_Ca__bmyo * var_Ca__bmyo) - (3.0 * var_Ca__cmyo), 1.5))) * 0.33333333333333331)) - (var_Ca__bmyo * 0.33333333333333331); // mM
        const double var_ICaL__fca = 1.0 / (1.0 + (var_Ca__Ca_i * 1666.6666666666667)); // dimensionless
        const double var_ICaL__ilca = var_chaste_interface__ICaL__d * var_chaste_interface__ICaL__f * var_ICaL__fca * ((var_ICaL__G_CaL_mult * var_chaste_interface__cell__V * ((1.0 * var_Ca__Ca_i * exp(var_chaste_interface__cell__V * 0.074871767015605245)) - 0.61380000000000001) * 7.8019226357407261) / (exp(var_chaste_interface__cell__V * 0.074871767015605245) - 1.0)); // uA_per_uF
        const double var_INaCa__inaca = (0.00025000000000000001 * exp(var_chaste_interface__cell__V *  -0.031820500981632228) * ((exp(var_chaste_interface__cell__V * 0.037435883507802623) * pow(var_chaste_interface__Na__Na_i, 3.0) * 1.8) - (2744000.0 * var_Ca__Ca_i))) / (1.0 + (0.0001 * exp(var_chaste_interface__cell__V *  -0.031820500981632228) * ((exp(var_chaste_interface__cell__V * 0.037435883507802623) * pow(var_chaste_interface__Na__Na_i, 3.0) * 1.8) + (2744000.0 * var_Ca__Ca_i)))); // uA_per_uF
        const double var_INa__GNa = 16.0; // mS_per_uF
        const double var_reversal_potentials__ENa = log(140.0 / var_chaste_interface__Na__Na_i) * 26.712338705498262; // mV
        const double var_INaK__inak = ((2.25 * (1.0 / (1.0 + (0.1245 * exp(var_chaste_interface__cell__V *  -0.0037435883507802624)) + (exp((-var_chaste_interface__cell__V) * 0.037435883507802623) * 0.036533226130519084)))) / (1.0 + pow(10.0 / var_chaste_interface__Na__Na_i, 2.0))) * 0.75; // uA_per_uF
        const double var_reversal_potentials__EK = log(4.5 / var_chaste_interface__K__K_i) * 26.712338705498262; // mV
        const double var_IKr__gkrmax = 0.02614; // mS_per_uF
        const double var_IK1__ak1 = 1.02 / (1.0 + exp(0.23849999999999999 * ((var_chaste_interface__cell__V - var_reversal_potentials__EK) - 59.215000000000003))); // per_ms
        const double var_cell__caiont = ((var_ICaL__ilca + (0.003016 * (var_chaste_interface__cell__V - (log(1.8 / var_Ca__Ca_i) * 13.356169352749131))) + ((1.1499999999999999 * var_Ca__Ca_i) / (0.00050000000000000001 + var_Ca__Ca_i))) - (2.0 * var_INaCa__inaca)) + (0.050000000000000003 * var_chaste_interface__ICaT__b * var_chaste_interface__ICaT__b * var_chaste_interface__ICaT__g * (var_chaste_interface__cell__V - ((log(1.8 / var_Ca__Ca_i) * 0.5) * 26.712338705498262))); // uA_per_uF
        const double var_cell__naiont = (var_INa__GNa * var_chaste_interface__INa__m * var_chaste_interface__INa__m * var_chaste_interface__INa__m * var_chaste_interface__INa__H * var_chaste_interface__INa__J * (var_chaste_interface__cell__V - var_reversal_potentials__ENa)) + (0.0040000000000000001 * (var_chaste_interface__cell__V - var_reversal_potentials__ENa)) + (3.0 * var_INaCa__inaca) + (var_chaste_interface__ICaL__d * var_chaste_interface__ICaL__f * var_ICaL__fca * ((var_ICaL__G_CaL_mult * var_chaste_interface__cell__V * ((0.75 * var_chaste_interface__Na__Na_i * exp(var_chaste_interface__cell__V * 0.037435883507802623)) - 105.0) * 0.0024381008236689767) / (exp(var_chaste_interface__cell__V * 0.037435883507802623) - 1.0))) + (3.0 * var_INaK__inak); // uA_per_uF
        const double var_chaste_interface__cell__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__Environment__time);
        const double var_cell__kiont = (((var_IKr__gkrmax * 0.91287092917527679 * var_chaste_interface__IKr__xr * (1.0 / (1.0 + exp((var_chaste_interface__cell__V + 9.0) * 0.044642857142857144))) * (var_chaste_interface__cell__V - var_reversal_potentials__EK)) + ((0.433 * (1.0 + (0.59999999999999998 / (1.0 + pow(3.8000000000000002e-05 / var_Ca__Ca_i, 1.3999999999999999))))) * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2 * (var_chaste_interface__cell__V - (log(7.0662000000000003 / (var_chaste_interface__K__K_i + (0.018329999999999999 * var_chaste_interface__Na__Na_i))) * 26.712338705498262))) + (((0.68465319688145754 * var_IK1__ak1) / (var_IK1__ak1 + (((0.49124000000000001 * exp(0.080320000000000003 * ((var_chaste_interface__cell__V - var_reversal_potentials__EK) + 5.476))) + (1.0 * exp(0.061749999999999999 * ((var_chaste_interface__cell__V - var_reversal_potentials__EK) - 594.30999999999995)))) / (1.0 + exp( -0.51429999999999998 * ((var_chaste_interface__cell__V - var_reversal_potentials__EK) + 4.7530000000000001)))))) * (var_chaste_interface__cell__V - var_reversal_potentials__EK)) + ((0.0055199999999999997 * (var_chaste_interface__cell__V - var_reversal_potentials__EK)) / (1.0 + exp((7.4880000000000004 - var_chaste_interface__cell__V) * 0.16722408026755853))) + (var_chaste_interface__ICaL__d * var_chaste_interface__ICaL__f * var_ICaL__fca * ((var_ICaL__G_CaL_mult * var_chaste_interface__cell__V * ((0.75 * var_chaste_interface__K__K_i * exp(var_chaste_interface__cell__V * 0.037435883507802623)) - 3.375) * 0.00069711623550831479) / (exp(var_chaste_interface__cell__V * 0.037435883507802623) - 1.0)))) - (2.0 * var_INaK__inak)) + (var_chaste_interface__cell__i_Stim / HeartConfig::Instance()->GetCapacitance()); // uA_per_uF
        const double var_Irel__bbb = 10.800000000000001 - var_chaste_interface__Ca__Ca_JSR_T; // mM
        const double var_Irel__Ca_JSR_free = ((-var_Irel__bbb) * 0.5) + (sqrt(pow(var_Irel__bbb, 2.0) + (4.0 * (var_chaste_interface__Ca__Ca_JSR_T * 0.80000000000000004))) * 0.5); // mM
        const double var_Iup_Ileak__iup = (0.0087500000000000008 * var_Ca__Ca_i) / (var_Ca__Ca_i + 0.00092000000000000003); // mM_per_ms
        const double var_Iup_Ileak__ileak = (0.0087500000000000008 * var_chaste_interface__Ca__Ca_NSR) * 0.066666666666666666; // mM_per_ms
        const double var_Itr__itr = (var_chaste_interface__Ca__Ca_NSR - var_Irel__Ca_JSR_free) * 0.0083333333333333332; // mM_per_ms
        const double d_dt_chaste_interface__Irel__Rel = (-(((var_ICaL__ilca * 0.59375) / (1.0 + pow(1.0 / var_Irel__Ca_JSR_free, 9.0))) + var_chaste_interface__Irel__Rel)) / (4.75 / (1.0 + (0.0123 / var_Irel__Ca_JSR_free))); // 'mM per millisecond per ms'
        const double d_dt_chaste_interface__Na__Na_i = ((-var_cell__naiont) * 1.5902511810263306e-09) * 38686.179652867118; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__K__K_i = ((-var_cell__kiont) * 1.5902511810263306e-09) * 38686.179652867118; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca__Ca_T = (((-var_cell__caiont) * 1.5902511810263306e-09) * 19343.089826433559) + (((var_Iup_Ileak__ileak - var_Iup_Ileak__iup) * 2.0983325651856948e-06) * 38686.179652867118) + ((var_chaste_interface__Irel__Rel * 1.8246370132049518e-07) * 38686.179652867118); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca__Ca_JSR_T = var_Itr__itr - var_chaste_interface__Irel__Rel; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca__Ca_NSR = (var_Iup_Ileak__iup - ((var_Itr__itr * 1.8246370132049518e-07) * 476568.87978169642)) - var_Iup_Ileak__ileak; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca__Over = 0.0; // 'per millisecond'
        
        rResidual[4] = rCurrentGuess[4] - rY[11] - mDt*d_dt_chaste_interface__Irel__Rel;
        rResidual[6] = rCurrentGuess[6] - rY[12] - mDt*d_dt_chaste_interface__Na__Na_i;
        rResidual[5] = rCurrentGuess[5] - rY[13] - mDt*d_dt_chaste_interface__K__K_i;
        rResidual[2] = rCurrentGuess[2] - rY[14] - mDt*d_dt_chaste_interface__Ca__Ca_T;
        rResidual[0] = rCurrentGuess[0] - rY[15] - mDt*d_dt_chaste_interface__Ca__Ca_JSR_T;
        rResidual[1] = rCurrentGuess[1] - rY[16] - mDt*d_dt_chaste_interface__Ca__Ca_NSR;
        rResidual[3] = rCurrentGuess[3] - rY[17] - mDt*d_dt_chaste_interface__Ca__Over;
    }
    
    void Dynamiclivshitz_rudy_2007FromCellMLBackwardEuler::ComputeJacobian(double var_chaste_interface__Environment__time, const double rCurrentGuess[7], double rJacobian[7][7])
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -89.4356034692784
        double var_chaste_interface__INa__H = rY[1];
        // Units: dimensionless; Initial value: 0.994401369032678
        double var_chaste_interface__INa__m = rY[2];
        // Units: dimensionless; Initial value: 0.000734780346592185
        double var_chaste_interface__INa__J = rY[3];
        // Units: dimensionless; Initial value: 0.996100688673679
        double var_chaste_interface__ICaL__d = rY[4];
        // Units: dimensionless; Initial value: 3.2514786721066e-27
        double var_chaste_interface__ICaL__f = rY[5];
        // Units: dimensionless; Initial value: 0.997404948824816
        double var_chaste_interface__IKr__xr = rY[6];
        // Units: dimensionless; Initial value: 0.000162194715543637
        double var_chaste_interface__IKs__xs1 = rY[7];
        // Units: dimensionless; Initial value: 0.0285147332973946
        double var_chaste_interface__IKs__xs2 = rY[8];
        // Units: dimensionless; Initial value: 0.0764114040188678
        double var_chaste_interface__ICaT__b = rY[9];
        // Units: dimensionless; Initial value: 0.000927461915392873
        double var_chaste_interface__ICaT__g = rY[10];
        // Units: dimensionless; Initial value: 0.952834331760863
        
        double var_chaste_interface__Ca__Ca_JSR_T = rCurrentGuess[0];
        double var_chaste_interface__Ca__Ca_T = rCurrentGuess[2];
        double var_chaste_interface__Irel__Rel = rCurrentGuess[4];
        double var_chaste_interface__K__K_i = rCurrentGuess[5];
        double var_chaste_interface__Na__Na_i = rCurrentGuess[6];
        
        const double var_chaste_interface__Environment__dt = mDt;

        const double var_ICaL__G_CaL_mult = 1.0; // dimensionless
        const double var_INa__GNa = 16.0; // mS_per_uF
        const double var_IKr__gkrmax = 0.02614; // mS_per_uF
        const double var_t4 = 1.0 / var_chaste_interface__K__K_i; // dimensionless
        const double var_t10 = (log(4.5 * var_t4) * 1.0364305332435094e-05) * 2577340.0; // dimensionless
        const double var_t13 = exp(((0.23849999999999999 * var_chaste_interface__cell__V) - (0.23849999999999999 * var_t10)) - 14.1227775); // dimensionless
        const double var_t14 = 1.0 + var_t13; // dimensionless
        const double var_t15 = 1.0 / var_t14; // dimensionless
        const double var_t20 = exp(((0.080320000000000003 * var_chaste_interface__cell__V) - (0.080320000000000003 * var_t10)) + 0.43983232); // dimensionless
        const double var_t25 = exp(((0.061749999999999999 * var_chaste_interface__cell__V) - (0.061749999999999999 * var_t10)) - 36.698642499999998); // dimensionless
        const double var_t26 = (0.49124000000000001 * var_t20) + var_t25; // dimensionless
        const double var_t30 = exp((( -0.51429999999999998 * var_chaste_interface__cell__V) + (0.51429999999999998 * var_t10)) - 2.4444678999999998); // dimensionless
        const double var_t31 = 1.0 + var_t30; // dimensionless
        const double var_t32 = 1.0 / var_t31; // dimensionless
        const double var_t34 = (1.02 * var_t15) + (var_t26 * var_t32); // dimensionless
        const double var_t35 = 1.0 / var_t34; // dimensionless
        const double var_t37 = (1.5909902576697319 * var_t15) * var_t35; // dimensionless
        const double var_t39 = pow(var_chaste_interface__INa__m, 2.0); // dimensionless
        const double var_t41 = (var_INa__GNa * var_t39) * var_chaste_interface__INa__m; // dimensionless
        const double var_t42 = var_chaste_interface__INa__H * var_chaste_interface__INa__J; // dimensionless
        const double var_t43 = var_t41 * var_t42; // dimensionless
        const double var_t44 = var_IKr__gkrmax * 2.1213203435596424; // dimensionless
        const double var_t47 = exp((0.044642857139999999 * var_chaste_interface__cell__V) + 0.40178571429999999); // dimensionless
        const double var_t48 = 1.0 + var_t47; // dimensionless
        const double var_t49 = 1.0 / var_t48; // dimensionless
        const double var_t51 = (var_t44 * var_chaste_interface__IKr__xr) * var_t49; // dimensionless
        const double var_t74 = pow((((((((((0.0093072100000000015 - (0.10000000000000001 * var_chaste_interface__Ca__Ca_T)) + 0.00023800000000000004) + 0.0049000000000000007) - (0.14000000000000001 * var_chaste_interface__Ca__Ca_T)) + 7.0000000000000007e-05) + pow(var_chaste_interface__Ca__Ca_T, 2.0)) + (var_chaste_interface__Ca__Ca_T * 0.00050000000000000001)) + (var_chaste_interface__Ca__Ca_T * 0.0023800000000000002)) + 2.4999999999999999e-07) + 5.6644000000000012e-06, 0.5); // dimensionless
        const double var_t75 = ((0.12000000000000001 - var_chaste_interface__Ca__Ca_T) + 0.00050000000000000001) + 0.0023800000000000002; // dimensionless
        const double var_t77 = var_chaste_interface__Ca__Ca_T * 0.0028800000000000002; // dimensionless
        const double var_t81 = pow(var_t75, 2.0); // dimensionless
        const double var_t86 = (((9.0 * var_t75) * (((1.19e-06 - var_t77) + 0.00016660000000000004) + 2.5000000000000001e-05)) - ((2.0 * var_t81) * var_t75)) + (3.2129999999999999e-05 * var_chaste_interface__Ca__Ca_T); // dimensionless
        const double var_t91 = (((var_t81 - 3.5700000000000001e-06) + (3.0 * var_t77)) - 0.00049980000000000011) - 7.5000000000000007e-05; // dimensionless
        const double var_t92 = 1.0 / pow(var_t91, 1.5); // dimensionless
        const double var_t96 = 0.33333333333333331 * acos((0.5 * var_t86) * var_t92); // dimensionless
        const double var_t97 = cos(var_t96); // dimensionless
        const double var_t99 = (0.66666666666666663 * var_t74) * var_t97; // dimensionless
        const double var_t102 = 0.33333333333333331 * var_chaste_interface__Ca__Ca_T; // dimensionless
        const double var_t105 = ((((var_t99 - 0.016666666666666666) - 0.023333333333333334) + var_t102) - 0.00016666666666666666) - 0.00079333333333333339; // dimensionless
        const double var_t106 = 1.0 / var_t105; // dimensionless
        const double var_t109 = 1.0 + (6.481821026e-07 * pow(var_t106, 1.3999999999999999)); // dimensionless
        const double var_t113 = 0.433 * (1.0 + (0.59999999999999998 / var_t109)); // dimensionless
        const double var_t115 = (var_t113 * var_chaste_interface__IKs__xs1) * var_chaste_interface__IKs__xs2; // dimensionless
        const double var_t116 = var_chaste_interface__cell__V - var_t10; // dimensionless
        const double var_t120 = exp(1.252173913 - (0.16722408029999999 * var_chaste_interface__cell__V)); // dimensionless
        const double var_t121 = 1.0 + var_t120; // dimensionless
        const double var_t134 = 1.5909902576697319 * var_t15; // dimensionless
        const double var_t137 = (1.0 / pow(var_t34, 2.0)) * var_t116; // dimensionless
        const double var_t139 = 1.0 / pow(var_t14, 2.0); // dimensionless
        const double var_t148 = var_t26 / pow(var_t31, 2.0); // dimensionless
        const double var_t167 = exp((( -0.84999999999999998 * var_chaste_interface__cell__V) * 311.24193548387098) * 0.00012027904738994468); // dimensionless
        const double var_t168 = 0.00025000000000000001 * var_t167; // dimensionless
        const double var_t171 = (var_chaste_interface__cell__V * 96485.0) * 3.8799692706433766e-07; // dimensionless
        const double var_t172 = exp(var_t171); // dimensionless
        const double var_t173 = pow(var_chaste_interface__Na__Na_i, 2.0); // dimensionless
        const double var_t174 = var_t173 * var_chaste_interface__Na__Na_i; // dimensionless
        const double var_t176 = (var_t172 * var_t174) * 1.8; // dimensionless
        const double var_t179 = 2744000.0 * var_t105; // dimensionless
        const double var_t180 = var_t176 - var_t179; // dimensionless
        const double var_t181 = 0.0001 * var_t167; // dimensionless
        const double var_t182 = var_t176 + var_t179; // dimensionless
        const double var_t184 = 1.0 + (var_t181 * var_t182); // dimensionless
        const double var_t186 = 1.0 / pow(var_t184, 2.0); // dimensionless
        const double var_t187 = var_t180 * var_t186; // dimensionless
        const double var_t202 = exp( -0.10000000000000001 * var_t171); // dimensionless
        const double var_t207 = exp(-var_t171); // dimensionless
        const double var_t210 = (1.0 + (0.1245 * var_t202)) + (0.036533226126172443 * var_t207); // dimensionless
        const double var_t217 = 1.0 + (100.0 / var_t173); // dimensionless
        const double var_t234 = 1.0 / var_t121; // dimensionless
        const double var_t237 = 0.050000000000000003 * pow(var_chaste_interface__ICaT__b, 2.0); // dimensionless
        const double var_t243 = 1.0 / var_t184; // dimensionless
        const double var_t251 = var_chaste_interface__ICaL__d * var_chaste_interface__ICaL__f; // dimensionless
        const double var_t254 = 1.0 + (var_t105 * 1666.6666666666667); // dimensionless
        const double var_t255 = 1.0 / var_t254; // dimensionless
        const double var_t256 = var_t255 * var_ICaL__G_CaL_mult; // dimensionless
        const double var_t261 = 0.75 * var_chaste_interface__Na__Na_i; // dimensionless
        const double var_t264 = (var_t261 * var_t172) - 105.0; // dimensionless
        const double var_t266 = var_t172 - 1.0; // dimensionless
        const double var_t267 = 1.0 / var_t266; // dimensionless
        const double var_t271 = var_t251 * var_t255; // dimensionless
        const double var_t273 = (var_ICaL__G_CaL_mult * 6.75e-07) * var_chaste_interface__cell__V; // dimensionless
        const double var_t274 = var_t271 * var_t273; // dimensionless
        const double var_t294 = 0.75 * var_chaste_interface__K__K_i; // dimensionless
        const double var_t297 = (var_t294 * var_t172) - 3.375; // dimensionless
        const double var_t303 = (var_ICaL__G_CaL_mult * 1.9299999999999999e-07) * var_chaste_interface__cell__V; // dimensionless
        const double var_t304 = var_t271 * var_t303; // dimensionless
        const double var_t314 = 1.0 * var_t105; // dimensionless
        const double var_t316 = exp(2.0 * var_t171); // dimensionless
        const double var_t319 = (var_t314 * var_t316) - 0.61380000000000001; // dimensionless
        const double var_t320 = 0.00012027904738994468 * var_t319; // dimensionless
        const double var_t321 = var_t316 - 1.0; // dimensionless
        const double var_t322 = 1.0 / var_t321; // dimensionless
        const double var_t327 = var_ICaL__G_CaL_mult * 0.00054000000000000001; // dimensionless
        const double var_t328 = var_t327 * var_chaste_interface__cell__V; // dimensionless
        const double var_t329 = var_t271 * var_t328; // dimensionless
        const double var_t330 = var_t316 * var_t322; // dimensionless
        const double var_t344 = 1.0 / var_chaste_interface__Na__Na_i; // dimensionless
        const double var_t383 = 1.0 / (var_chaste_interface__K__K_i + (0.018329999999999999 * var_chaste_interface__Na__Na_i)); // dimensionless
        const double var_t388 = var_chaste_interface__cell__V - ((log(7.0662000000000003 * var_t383) * 1.0364305332435094e-05) * 2577340.0); // dimensionless
        const double var_t389 = var_chaste_interface__IKs__xs2 * var_t388; // dimensionless
        const double var_t412 = var_t173 * 1.8; // dimensionless
        const double var_t414 = ((var_t168 * var_t172) * var_t412) * var_t243; // dimensionless
        const double var_t417 = 0.00025000000000000001 * pow(var_t167, 2.0); // dimensionless
        const double var_t421 = (((var_t417 * var_t187) * 0.0001) * var_t172) * var_t412; // dimensionless
        const double var_t436 = ((((2.25 / var_t210) / pow(var_t217, 2.0)) * 0.75) * 100.0) / var_t174; // dimensionless
        const double var_t442 = var_t4 * 1.0364305332435094e-05; // dimensionless
        const double var_t443 = var_t442 * 2577340.0; // dimensionless
        const double var_t452 = 2577340.0 * var_t13; // dimensionless
        const double var_t493 = (( -0.24000000000000002 + (2.0 * var_chaste_interface__Ca__Ca_T)) + 0.00050000000000000001) + 0.0023800000000000002; // dimensionless
        const double var_t522 = ((((0.33333333333333331 / var_t74) * var_t97) * var_t493) + ((((0.44444444444444442 * var_t74) * sin(var_t96)) * (((0.5 * (((((2.1420000000000002e-05 + (9.0 * var_t77)) - 0.0014994000000000003) - 0.00022500000000000002) - ((9.0 * var_t75) * 0.0028800000000000002)) + (6.0 * var_t81))) * var_t92) - (((0.75 * var_t86) * (1.0 / pow(var_t91, 2.5))) * var_t493))) / pow(4.0 - (pow(var_t86, 2.0) * (1.0 / pow(var_t91, 3.0))), 0.5))) + 0.33333333333333331; // dimensionless
        const double var_t523 = 2744000.0 * var_t522; // dimensionless
        const double var_t525 = (var_t168 * var_t523) * var_t243; // dimensionless
        const double var_t529 = (((var_t417 * var_t180) * var_t186) * 0.0001) * var_t523; // dimensionless
        const double var_t531 = 1.0 / pow(var_t254, 2.0); // dimensionless
        const double var_t532 = var_t251 * var_t531; // dimensionless
        const double var_t535 = var_t522 * 1666.6666666666667; // dimensionless
        const double var_t538 = ((((var_t532 * var_t273) * 3612.0012202503358) * var_t264) * var_t267) * var_t535; // dimensionless
        const double var_t550 = (((((2.3575679436459999e-07 / pow(var_t109, 2.0)) * pow(var_t106, 0.40000000000000002)) / pow(var_t105, 2.0)) * var_t522) * var_chaste_interface__IKs__xs1) * var_t389; // dimensionless
        const double var_t555 = ((((var_t532 * var_t303) * 3612.0012202503358) * var_t297) * var_t267) * var_t535; // dimensionless
        const double var_t557 = var_t319 * var_t322; // dimensionless
        const double var_t561 = ((((4.0 * var_t532) * var_t328) * 3612.0012202503358) * var_t557) * var_t535; // dimensionless
        const double var_t566 = ((((4.0 * var_t329) * 3612.0012202503358) * 1.0) * var_t522) * var_t330; // dimensionless
        const double var_t570 = ((0.001508 * var_t106) * var_t522) * 26.712338705498265; // dimensionless
        const double var_t572 = (((((0.00050000000000000001 + var_t99) - 0.016666666666666666) - 0.023333333333333334) + var_t102) - 0.00016666666666666666) - 0.00079333333333333339; // dimensionless
        const double var_t574 = (1.1499999999999999 * var_t522) / var_t572; // dimensionless
        const double var_t579 = ((1.1499999999999999 * var_t105) / pow(var_t572, 2.0)) * var_t522; // dimensionless
        const double var_t585 = (((((0.5 * var_t237) * var_chaste_interface__ICaT__g) * var_t106) * var_t522) * 1.0364305332435094e-05) * 2577340.0; // dimensionless
        const double var_t977 = 3.8799692706433766e-07 * var_t319; // dimensionless
        const double var_t978 = var_t322 * 4.75; // dimensionless
        const double var_t989 = pow((((116.0 - (20.0 * var_chaste_interface__Ca__Ca_JSR_T)) + 0.64000000000000012) + ((2.0 * var_chaste_interface__Ca__Ca_JSR_T) * 0.80000000000000004)) + pow(var_chaste_interface__Ca__Ca_JSR_T, 2.0), 0.5); // dimensionless
        const double var_t990 = ( -10.800000000000001 + var_chaste_interface__Ca__Ca_JSR_T) + var_t989; // dimensionless
        const double var_t991 = 2.0 / var_t990; // dimensionless
        const double var_t993 = pow(1.0 * var_t991, 9.0); // dimensionless
        const double var_t994 = 1.0 + var_t993; // dimensionless
        const double var_t995 = 1.0 / var_t994; // dimensionless
        const double var_t996 = 0.125 * var_t995; // dimensionless
        const double var_t997 = var_t978 * var_t996; // dimensionless
        const double var_t1001 = var_t251 * var_t256; // dimensionless
        const double var_t1002 = 0.00054000000000000001 * var_chaste_interface__cell__V; // dimensionless
        const double var_t1026 = 1.0 + (0.0123 * var_t991); // dimensionless
        const double var_t1044 = var_t1002 * 30030178.14516129; // dimensionless
        const double var_t1070 = 0.5 + ((0.5 / var_t989) * ( -9.1999999999999993 + var_chaste_interface__Ca__Ca_JSR_T)); // dimensionless
        const double var_t1217 = (((((var_t99 - 0.016666666666666666) - 0.023333333333333334) + var_t102) - 0.00016666666666666666) - 0.00079333333333333339) + 0.00092000000000000003; // dimensionless
        const double var_t1219 = (0.0087500000000000008 * var_t522) / var_t1217; // dimensionless
        const double var_t1225 = ((0.0087500000000000008 * var_t105) / pow(var_t1217, 2.0)) * var_t522; // dimensionless
        const double var_t1232 = (-var_t1070) * 0.0083333333333333332; // dimensionless
        
        rJacobian[0][0] = 1.0 - (var_chaste_interface__Environment__dt * var_t1232);
        rJacobian[0][1] = -(var_chaste_interface__Environment__dt * 0.0083333333333333332);
        rJacobian[0][2] = 0.0;
        rJacobian[0][3] = 0.0;
        rJacobian[0][4] = -(var_chaste_interface__Environment__dt *  -1.0);
        rJacobian[0][5] = 0.0;
        rJacobian[0][6] = 0.0;
        rJacobian[1][0] = -(var_chaste_interface__Environment__dt * ( -0.086956521740000001 * var_t1232));
        rJacobian[1][1] = 1.0 - (var_chaste_interface__Environment__dt *  -0.0013079710144999999);
        rJacobian[1][2] = -(var_chaste_interface__Environment__dt * (var_t1219 - var_t1225));
        rJacobian[1][3] = 0.0;
        rJacobian[1][4] = 0.0;
        rJacobian[1][5] = 0.0;
        rJacobian[1][6] = 0.0;
        rJacobian[2][0] = 0.0;
        rJacobian[2][1] = -(var_chaste_interface__Environment__dt * 4.73529411775e-05);
        rJacobian[2][2] = 1.0 - (var_chaste_interface__Environment__dt * (((((( -0.0029411764700000001 * ((((((((-var_t561) + var_t566) + var_t570) + var_t574) - var_t579) + (2.0 * var_t525)) + (2.0 * var_t529)) + var_t585)) * 3.8358846300331376e-05) * 1.0364305332435094e-05) * 26306602.163949642) - (0.081176470589999994 * var_t1219)) + (0.081176470589999994 * var_t1225)));
        rJacobian[2][3] = 0.0;
        rJacobian[2][4] = -(var_chaste_interface__Environment__dt * 0.0070588235289999997);
        rJacobian[2][5] = 0.0;
        rJacobian[2][6] = -(var_chaste_interface__Environment__dt * (((( -0.017647058819999999 * ((-var_t414) + var_t421)) * 3.8358846300331376e-05) * 1.0364305332435094e-05) * 26306602.163949642));
        rJacobian[3][0] = 0.0;
        rJacobian[3][1] = 0.0;
        rJacobian[3][2] = 0.0;
        rJacobian[3][3] = 1.0;
        rJacobian[3][4] = 0.0;
        rJacobian[3][5] = 0.0;
        rJacobian[3][6] = 0.0;
        rJacobian[4][0] = -(var_chaste_interface__Environment__dt * (((((((((((( -4.0 * var_t1001) * var_t1002) * 3612.0012202503358) * var_t557) * 0.125) / pow(var_t994, 2.0)) * var_t993) * 9.0) * var_t991) * var_t1070) * var_t1026) - ((((0.049200000000000001 * (((((( -4.0 * var_t271) * var_t327) * var_chaste_interface__cell__V) * 9309355225.0) * (var_t977 * var_t997)) - var_chaste_interface__Irel__Rel)) * 0.21052631578947367) / pow(var_t990, 2.0)) * var_t1070)));
        rJacobian[4][1] = 0.0;
        rJacobian[4][2] = -(var_chaste_interface__Environment__dt * (((4.0 * ((((((((var_t251 * var_t531) * var_ICaL__G_CaL_mult) * var_t1044) * var_t320) * var_t978) * var_t996) * var_t535) - ((((((var_t1001 * var_t1044) * 0.00012027904738994468) * 1.0) * var_t522) * var_t316) * var_t997))) * 0.21052631578947367) * var_t1026));
        rJacobian[4][3] = 0.0;
        rJacobian[4][4] = 1.0 - (var_chaste_interface__Environment__dt * ( -0.21052631578947367 * var_t1026));
        rJacobian[4][5] = 0.0;
        rJacobian[4][6] = 0.0;
        rJacobian[5][0] = 0.0;
        rJacobian[5][1] = 0.0;
        rJacobian[5][2] = -(var_chaste_interface__Environment__dt * (((( -0.0058823529400000001 * (var_t550 - var_t555)) * 3.8358846300331376e-05) * 1.0364305332435094e-05) * 26306602.163949642));
        rJacobian[5][3] = 0.0;
        rJacobian[5][4] = 0.0;
        rJacobian[5][5] = 1.0 - (var_chaste_interface__Environment__dt * ((((0.0058823529400000001 * (((((((( -0.43033148290000001 * var_t51) * var_t443) - (((var_t115 * var_t383) * 1.0364305332435094e-05) * 2577340.0)) + (((((0.16655558328810521 * var_t139) * var_t35) * var_t116) * var_t442) * var_t452)) + (((0.43893811259999999 * var_t134) * var_t137) * (((((( -0.24326999999999999 * var_t139) * var_t4) * 1.0364305332435094e-05) * var_t452) + (((((0.039456396800000001 * var_t442) * 2577340.0) * var_t20) + (((0.061749999999999999 * var_t442) * 2577340.0) * var_t25)) * var_t32)) + (((((0.51429999999999998 * var_t148) * var_t4) * 0.003212934653054879) * 8314.0) * var_t30)))) - ((0.43893811259999999 * var_t37) * var_t443)) - ((((0.0055199999999999997 * var_t4) * 1.0364305332435094e-05) * 2577340.0) * var_t234)) - ((((var_t304 * 3612.0012202503358) * 0.75) * var_t172) * var_t267))) * 3.8358846300331376e-05) * 1.0364305332435094e-05) * 26306602.163949642));
        rJacobian[5][6] = -(var_chaste_interface__Environment__dt * (((( -0.0058823529400000001 * ((((var_t115 * var_t383) * 0.018329999999999999) * 26.712338705498265) - (4.0 * var_t436))) * 3.8358846300331376e-05) * 1.0364305332435094e-05) * 26306602.163949642));
        rJacobian[6][0] = 0.0;
        rJacobian[6][1] = 0.0;
        rJacobian[6][2] = -(var_chaste_interface__Environment__dt * (((( -0.0058823529400000001 * ((( -3.0 * var_t525) - (3.0 * var_t529)) - var_t538)) * 3.8358846300331376e-05) * 1.0364305332435094e-05) * 26306602.163949642));
        rJacobian[6][3] = 0.0;
        rJacobian[6][4] = 0.0;
        rJacobian[6][5] = 0.0;
        rJacobian[6][6] = 1.0 - (var_chaste_interface__Environment__dt * (((( -0.0058823529400000001 * ((((((((var_t43 * var_t344) * 1.0364305332435094e-05) * 2577340.0) + ((0.0040000000000000001 * var_t344) * 26.712338705498265)) + (9.0 * var_t414)) - (9.0 * var_t421)) + ((((var_t274 * 3612.0012202503358) * 0.75) * var_t172) * var_t267)) + (6.0 * var_t436))) * 3.8358846300331376e-05) * 1.0364305332435094e-05) * 26306602.163949642));
    }
    
    void Dynamiclivshitz_rudy_2007FromCellMLBackwardEuler::UpdateTransmembranePotential(double var_chaste_interface__Environment__time)
    {
        // Time units: millisecond
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -89.4356034692784
        double var_chaste_interface__INa__H = rY[1];
        // Units: dimensionless; Initial value: 0.994401369032678
        double var_chaste_interface__INa__m = rY[2];
        // Units: dimensionless; Initial value: 0.000734780346592185
        double var_chaste_interface__INa__J = rY[3];
        // Units: dimensionless; Initial value: 0.996100688673679
        double var_chaste_interface__ICaL__d = rY[4];
        // Units: dimensionless; Initial value: 3.2514786721066e-27
        double var_chaste_interface__ICaL__f = rY[5];
        // Units: dimensionless; Initial value: 0.997404948824816
        double var_chaste_interface__IKr__xr = rY[6];
        // Units: dimensionless; Initial value: 0.000162194715543637
        double var_chaste_interface__IKs__xs1 = rY[7];
        // Units: dimensionless; Initial value: 0.0285147332973946
        double var_chaste_interface__IKs__xs2 = rY[8];
        // Units: dimensionless; Initial value: 0.0764114040188678
        double var_chaste_interface__ICaT__b = rY[9];
        // Units: dimensionless; Initial value: 0.000927461915392873
        double var_chaste_interface__ICaT__g = rY[10];
        // Units: dimensionless; Initial value: 0.952834331760863
        double var_chaste_interface__Na__Na_i = rY[12];
        // Units: mM; Initial value: 16.612739313555
        double var_chaste_interface__K__K_i = rY[13];
        // Units: mM; Initial value: 139.730914103161
        double var_chaste_interface__Ca__Ca_T = rY[14];
        // Units: mM; Initial value: 0.0257059808595638
        
        const double var_ICaL__G_CaL_mult = 1.0; // dimensionless
        const double var_Ca__bmyo = (0.12000000000000001 - var_chaste_interface__Ca__Ca_T) + 0.0028800000000000002; // mM
        const double var_Ca__cmyo = (1.19e-06 - (var_chaste_interface__Ca__Ca_T * 0.0028800000000000002)) + 0.00019160000000000005; // mM2
        const double var_Ca__Ca_i = (((2.0 * sqrt((var_Ca__bmyo * var_Ca__bmyo) - (3.0 * var_Ca__cmyo))) * 0.33333333333333331) * cos(acos((((9.0 * var_Ca__bmyo * var_Ca__cmyo) - (2.0 * var_Ca__bmyo * var_Ca__bmyo * var_Ca__bmyo)) - (27.0 * (var_chaste_interface__Ca__Ca_T *  -1.19e-06))) / (2.0 * pow((var_Ca__bmyo * var_Ca__bmyo) - (3.0 * var_Ca__cmyo), 1.5))) * 0.33333333333333331)) - (var_Ca__bmyo * 0.33333333333333331); // mM
        const double var_ICaL__fca = 1.0 / (1.0 + (var_Ca__Ca_i * 1666.6666666666667)); // dimensionless
        const double var_ICaL__ilca = var_chaste_interface__ICaL__d * var_chaste_interface__ICaL__f * var_ICaL__fca * ((var_ICaL__G_CaL_mult * var_chaste_interface__cell__V * ((1.0 * var_Ca__Ca_i * exp(var_chaste_interface__cell__V * 0.074871767015605245)) - 0.61380000000000001) * 7.8019226357407261) / (exp(var_chaste_interface__cell__V * 0.074871767015605245) - 1.0)); // uA_per_uF
        const double var_INaCa__inaca = (0.00025000000000000001 * exp(var_chaste_interface__cell__V *  -0.031820500981632228) * ((exp(var_chaste_interface__cell__V * 0.037435883507802623) * pow(var_chaste_interface__Na__Na_i, 3.0) * 1.8) - (2744000.0 * var_Ca__Ca_i))) / (1.0 + (0.0001 * exp(var_chaste_interface__cell__V *  -0.031820500981632228) * ((exp(var_chaste_interface__cell__V * 0.037435883507802623) * pow(var_chaste_interface__Na__Na_i, 3.0) * 1.8) + (2744000.0 * var_Ca__Ca_i)))); // uA_per_uF
        const double var_INa__GNa = 16.0; // mS_per_uF
        const double var_reversal_potentials__ENa = log(140.0 / var_chaste_interface__Na__Na_i) * 26.712338705498262; // mV
        const double var_INaK__inak = ((2.25 * (1.0 / (1.0 + (0.1245 * exp(var_chaste_interface__cell__V *  -0.0037435883507802624)) + (exp((-var_chaste_interface__cell__V) * 0.037435883507802623) * 0.036533226130519084)))) / (1.0 + pow(10.0 / var_chaste_interface__Na__Na_i, 2.0))) * 0.75; // uA_per_uF
        const double var_reversal_potentials__EK = log(4.5 / var_chaste_interface__K__K_i) * 26.712338705498262; // mV
        const double var_IKr__gkrmax = 0.02614; // mS_per_uF
        const double var_IK1__ak1 = 1.02 / (1.0 + exp(0.23849999999999999 * ((var_chaste_interface__cell__V - var_reversal_potentials__EK) - 59.215000000000003))); // per_ms
        const double var_cell__caiont = ((var_ICaL__ilca + (0.003016 * (var_chaste_interface__cell__V - (log(1.8 / var_Ca__Ca_i) * 13.356169352749131))) + ((1.1499999999999999 * var_Ca__Ca_i) / (0.00050000000000000001 + var_Ca__Ca_i))) - (2.0 * var_INaCa__inaca)) + (0.050000000000000003 * var_chaste_interface__ICaT__b * var_chaste_interface__ICaT__b * var_chaste_interface__ICaT__g * (var_chaste_interface__cell__V - ((log(1.8 / var_Ca__Ca_i) * 0.5) * 26.712338705498262))); // uA_per_uF
        const double var_cell__naiont = (var_INa__GNa * var_chaste_interface__INa__m * var_chaste_interface__INa__m * var_chaste_interface__INa__m * var_chaste_interface__INa__H * var_chaste_interface__INa__J * (var_chaste_interface__cell__V - var_reversal_potentials__ENa)) + (0.0040000000000000001 * (var_chaste_interface__cell__V - var_reversal_potentials__ENa)) + (3.0 * var_INaCa__inaca) + (var_chaste_interface__ICaL__d * var_chaste_interface__ICaL__f * var_ICaL__fca * ((var_ICaL__G_CaL_mult * var_chaste_interface__cell__V * ((0.75 * var_chaste_interface__Na__Na_i * exp(var_chaste_interface__cell__V * 0.037435883507802623)) - 105.0) * 0.0024381008236689767) / (exp(var_chaste_interface__cell__V * 0.037435883507802623) - 1.0))) + (3.0 * var_INaK__inak); // uA_per_uF
        const double var_chaste_interface__cell__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__Environment__time);
        const double var_cell__kiont = (((var_IKr__gkrmax * 0.91287092917527679 * var_chaste_interface__IKr__xr * (1.0 / (1.0 + exp((var_chaste_interface__cell__V + 9.0) * 0.044642857142857144))) * (var_chaste_interface__cell__V - var_reversal_potentials__EK)) + ((0.433 * (1.0 + (0.59999999999999998 / (1.0 + pow(3.8000000000000002e-05 / var_Ca__Ca_i, 1.3999999999999999))))) * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2 * (var_chaste_interface__cell__V - (log(7.0662000000000003 / (var_chaste_interface__K__K_i + (0.018329999999999999 * var_chaste_interface__Na__Na_i))) * 26.712338705498262))) + (((0.68465319688145754 * var_IK1__ak1) / (var_IK1__ak1 + (((0.49124000000000001 * exp(0.080320000000000003 * ((var_chaste_interface__cell__V - var_reversal_potentials__EK) + 5.476))) + (1.0 * exp(0.061749999999999999 * ((var_chaste_interface__cell__V - var_reversal_potentials__EK) - 594.30999999999995)))) / (1.0 + exp( -0.51429999999999998 * ((var_chaste_interface__cell__V - var_reversal_potentials__EK) + 4.7530000000000001)))))) * (var_chaste_interface__cell__V - var_reversal_potentials__EK)) + ((0.0055199999999999997 * (var_chaste_interface__cell__V - var_reversal_potentials__EK)) / (1.0 + exp((7.4880000000000004 - var_chaste_interface__cell__V) * 0.16722408026755853))) + (var_chaste_interface__ICaL__d * var_chaste_interface__ICaL__f * var_ICaL__fca * ((var_ICaL__G_CaL_mult * var_chaste_interface__cell__V * ((0.75 * var_chaste_interface__K__K_i * exp(var_chaste_interface__cell__V * 0.037435883507802623)) - 3.375) * 0.00069711623550831479) / (exp(var_chaste_interface__cell__V * 0.037435883507802623) - 1.0)))) - (2.0 * var_INaK__inak)) + (var_chaste_interface__cell__i_Stim / HeartConfig::Instance()->GetCapacitance()); // uA_per_uF
        const double d_dt_chaste_interface__cell__V = -(var_cell__naiont + var_cell__kiont + var_cell__caiont); // 'millivolt per millisecond'
        
        rY[0] += mDt*d_dt_chaste_interface__cell__V;
    }
    
    void Dynamiclivshitz_rudy_2007FromCellMLBackwardEuler::ComputeOneStepExceptVoltage(double var_chaste_interface__Environment__time)
    {
        // Time units: millisecond
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -89.4356034692784
        double var_chaste_interface__INa__H = rY[1];
        // Units: dimensionless; Initial value: 0.994401369032678
        double var_chaste_interface__INa__m = rY[2];
        // Units: dimensionless; Initial value: 0.000734780346592185
        double var_chaste_interface__INa__J = rY[3];
        // Units: dimensionless; Initial value: 0.996100688673679
        double var_chaste_interface__ICaL__d = rY[4];
        // Units: dimensionless; Initial value: 3.2514786721066e-27
        double var_chaste_interface__ICaL__f = rY[5];
        // Units: dimensionless; Initial value: 0.997404948824816
        double var_chaste_interface__IKr__xr = rY[6];
        // Units: dimensionless; Initial value: 0.000162194715543637
        double var_chaste_interface__IKs__xs1 = rY[7];
        // Units: dimensionless; Initial value: 0.0285147332973946
        double var_chaste_interface__IKs__xs2 = rY[8];
        // Units: dimensionless; Initial value: 0.0764114040188678
        double var_chaste_interface__ICaT__b = rY[9];
        // Units: dimensionless; Initial value: 0.000927461915392873
        double var_chaste_interface__ICaT__g = rY[10];
        // Units: dimensionless; Initial value: 0.952834331760863
        
        const double var_chaste_interface__Environment__dt = mDt;

        const double var_INa__a = 1.0 - (1.0 / (1.0 + exp((-(var_chaste_interface__cell__V + 40.0)) * 41.666666666666664))); // per_ms
        const double var_INa__aH = var_INa__a * 0.13500000000000001 * exp((80.0 + var_chaste_interface__cell__V) *  -0.14705882352941177); // per_ms
        const double var_INa__aj = (var_INa__a * (( -127140.0 * exp(0.24440000000000001 * var_chaste_interface__cell__V)) - (3.4740000000000003e-05 * exp( -0.043909999999999998 * var_chaste_interface__cell__V))) * 1.0 * (var_chaste_interface__cell__V + 37.780000000000001)) / (1.0 + exp(0.311 * (var_chaste_interface__cell__V + 79.230000000000004))); // per_ms
        const double var_INa__am = ((var_chaste_interface__cell__V + 47.130000000000003) * 0.32000000000000001) / (1.0 - exp( -0.10000000000000001 * (var_chaste_interface__cell__V + 47.130000000000003))); // per_ms
        const double var_ICaL__dss0 = 1.0 / (1.0 + exp((-(var_chaste_interface__cell__V + 10.0)) * 0.16025641025641024)); // dimensionless
        const double var_ICaL__taud = (var_ICaL__dss0 * 1.0 * (1.0 - exp((-(var_chaste_interface__cell__V + 10.0)) * 0.16025641025641024))) / (0.035000000000000003 * (var_chaste_interface__cell__V + 10.0)); // ms
        const double var_ICaL__tauf = 1.0 / ((0.019699999999999999 * exp(-pow(0.033700000000000001 * (var_chaste_interface__cell__V + 10.0), 2.0))) + 0.02); // ms
        const double var_IKr__tauxr = 1.0 / (((0.0013799999999999999 * (var_chaste_interface__cell__V + 14.199999999999999)) / (1.0 - exp( -0.123 * (var_chaste_interface__cell__V + 14.199999999999999)))) + ((0.00060999999999999997 * (var_chaste_interface__cell__V + 38.899999999999999)) / (exp(0.14499999999999999 * (var_chaste_interface__cell__V + 38.899999999999999)) - 1.0))); // ms
        const double var_IKs__xss = 1.0 / (1.0 + exp((-(var_chaste_interface__cell__V - 1.5)) * 0.059880239520958084)); // dimensionless
        const double var_IKs__tauxs = 1.0 / (((7.1899999999999999e-05 * (var_chaste_interface__cell__V + 30.0)) / (1.0 - exp( -0.14799999999999999 * (var_chaste_interface__cell__V + 30.0)))) + ((0.00013100000000000001 * (var_chaste_interface__cell__V + 30.0)) / (exp(0.068699999999999997 * (var_chaste_interface__cell__V + 30.0)) - 1.0))); // ms
        const double var_ICaT__taub = 3.7000000000000002 + (6.0999999999999996 / (1.0 + exp((var_chaste_interface__cell__V + 25.0) * 0.22222222222222221))); // ms
        const double var_ICaT__aa = 1.0 - (1.0 / (1.0 + exp((-var_chaste_interface__cell__V) * 416.66666666666669))); // dimensionless
        const double var_ICaT__taug = (var_ICaT__aa * 1.0 * (( -0.875 * var_chaste_interface__cell__V) + 12.0)) + (12.0 * (1.0 - var_ICaT__aa)); // ms
        
        rY[4] = (var_chaste_interface__ICaL__d + (((var_ICaL__dss0 * (1.0 / (1.0 + exp((-(var_chaste_interface__cell__V + 60.0)) * 41.666666666666664)))) / var_ICaL__taud) * var_chaste_interface__Environment__dt)) / (1.0 - (( -1.0 / var_ICaL__taud) * var_chaste_interface__Environment__dt));
        rY[5] = (var_chaste_interface__ICaL__f + ((((1.0 / (1.0 + exp((var_chaste_interface__cell__V + 32.0) * 0.125))) + (0.59999999999999998 / (1.0 + exp((50.0 - var_chaste_interface__cell__V) * 0.050000000000000003)))) / var_ICaL__tauf) * var_chaste_interface__Environment__dt)) / (1.0 - (( -1.0 / var_ICaL__tauf) * var_chaste_interface__Environment__dt));
        rY[9] = (var_chaste_interface__ICaT__b + (((1.0 / (1.0 + exp((-(var_chaste_interface__cell__V + 14.0)) * 0.092592592592592587))) / var_ICaT__taub) * var_chaste_interface__Environment__dt)) / (1.0 - (( -1.0 / var_ICaT__taub) * var_chaste_interface__Environment__dt));
        rY[10] = (var_chaste_interface__ICaT__g + (((1.0 / (1.0 + exp((var_chaste_interface__cell__V + 60.0) * 0.17857142857142858))) / var_ICaT__taug) * var_chaste_interface__Environment__dt)) / (1.0 - (( -1.0 / var_ICaT__taug) * var_chaste_interface__Environment__dt));
        rY[6] = (var_chaste_interface__IKr__xr + (((1.0 / (1.0 + exp((-(var_chaste_interface__cell__V + 10.085000000000001)) * 0.23529411764705882))) / var_IKr__tauxr) * var_chaste_interface__Environment__dt)) / (1.0 - (( -1.0 / var_IKr__tauxr) * var_chaste_interface__Environment__dt));
        rY[7] = (var_chaste_interface__IKs__xs1 + ((var_IKs__xss / var_IKs__tauxs) * var_chaste_interface__Environment__dt)) / (1.0 - (( -1.0 / var_IKs__tauxs) * var_chaste_interface__Environment__dt));
        rY[8] = (var_chaste_interface__IKs__xs2 + (((var_IKs__xss / var_IKs__tauxs) * 0.25) * var_chaste_interface__Environment__dt)) / (1.0 - ((( -1.0 / var_IKs__tauxs) * 0.25) * var_chaste_interface__Environment__dt));
        rY[1] = (var_chaste_interface__INa__H + ((var_INa__aH * 1.0) * var_chaste_interface__Environment__dt)) / (1.0 - (((var_INa__aH *  -1.0) - ((((1.0 - var_INa__a) / (0.13 * (1.0 + exp((var_chaste_interface__cell__V + 10.66) *  -0.0900900900900901)))) + (var_INa__a * ((3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__cell__V)) + (exp(0.34999999999999998 * var_chaste_interface__cell__V) * 310000.0)))) * 1.0)) * var_chaste_interface__Environment__dt));
        rY[3] = (var_chaste_interface__INa__J + ((var_INa__aj * 1.0) * var_chaste_interface__Environment__dt)) / (1.0 - (((var_INa__aj *  -1.0) - (((((1.0 - var_INa__a) * 0.29999999999999999 * exp( -2.5349999999999999e-07 * var_chaste_interface__cell__V)) / (1.0 + exp( -0.10000000000000001 * (var_chaste_interface__cell__V + 32.0)))) + ((var_INa__a * 0.1212 * exp( -0.01052 * var_chaste_interface__cell__V)) / (1.0 + exp( -0.13780000000000001 * (var_chaste_interface__cell__V + 40.140000000000001))))) * 1.0)) * var_chaste_interface__Environment__dt));
        rY[2] = (var_chaste_interface__INa__m + ((var_INa__am * 1.0) * var_chaste_interface__Environment__dt)) / (1.0 - (((var_INa__am *  -1.0) - ((0.080000000000000002 * exp((-var_chaste_interface__cell__V) * 0.090909090909090912)) * 1.0)) * var_chaste_interface__Environment__dt));
        
        double _guess[7] = {rY[15],rY[16],rY[14],rY[17],rY[11],rY[13],rY[12]};
        CardiacNewtonSolver<7,Dynamiclivshitz_rudy_2007FromCellMLBackwardEuler>* _p_solver = CardiacNewtonSolver<7,Dynamiclivshitz_rudy_2007FromCellMLBackwardEuler>::Instance();
        _p_solver->Solve(*this, var_chaste_interface__Environment__time, _guess);
        rY[15] = _guess[0];
        rY[16] = _guess[1];
        rY[14] = _guess[2];
        rY[17] = _guess[3];
        rY[11] = _guess[4];
        rY[13] = _guess[5];
        rY[12] = _guess[6];
    }
    
    std::vector<double> Dynamiclivshitz_rudy_2007FromCellMLBackwardEuler::ComputeDerivedQuantities(double var_chaste_interface__Environment__time, const std::vector<double> & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__Ca__Ca_T = rY[14];
        // Units: mM; Initial value: 0.0257059808595638
        
        
        // Mathematics
        const double var_Ca__bmyo = (0.12000000000000001 - var_chaste_interface__Ca__Ca_T) + 0.0028800000000000002; // mM
        const double var_Ca__cmyo = (1.19e-06 - (var_chaste_interface__Ca__Ca_T * 0.0028800000000000002)) + 0.00019160000000000005; // mM2
        const double var_Ca__Ca_i = (((2.0 * sqrt((var_Ca__bmyo * var_Ca__bmyo) - (3.0 * var_Ca__cmyo))) * 0.33333333333333331) * cos(acos((((9.0 * var_Ca__bmyo * var_Ca__cmyo) - (2.0 * var_Ca__bmyo * var_Ca__bmyo * var_Ca__bmyo)) - (27.0 * (var_chaste_interface__Ca__Ca_T *  -1.19e-06))) / (2.0 * pow((var_Ca__bmyo * var_Ca__bmyo) - (3.0 * var_Ca__cmyo), 1.5))) * 0.33333333333333331)) - (var_Ca__bmyo * 0.33333333333333331); // mM
        const double var_chaste_interface__Ca__Ca_i = var_Ca__Ca_i; // millimolar
        
        std::vector<double> dqs(1);
        dqs[0] = var_chaste_interface__Ca__Ca_i;
        return dqs;
    }
    
template<>
void OdeSystemInformation<Dynamiclivshitz_rudy_2007FromCellMLBackwardEuler>::Initialise(void)
{
    this->mSystemName = "LivshitzRudy2007";
    this->mFreeVariableName = "Environment__time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-89.4356034692784);

    // rY[1]:
    this->mVariableNames.push_back("INa__H");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.994401369032678);

    // rY[2]:
    this->mVariableNames.push_back("INa__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000734780346592185);

    // rY[3]:
    this->mVariableNames.push_back("INa__J");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.996100688673679);

    // rY[4]:
    this->mVariableNames.push_back("ICaL__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.2514786721066e-27);

    // rY[5]:
    this->mVariableNames.push_back("ICaL__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.997404948824816);

    // rY[6]:
    this->mVariableNames.push_back("IKr__xr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000162194715543637);

    // rY[7]:
    this->mVariableNames.push_back("IKs__xs1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0285147332973946);

    // rY[8]:
    this->mVariableNames.push_back("IKs__xs2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0764114040188678);

    // rY[9]:
    this->mVariableNames.push_back("ICaT__b");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000927461915392873);

    // rY[10]:
    this->mVariableNames.push_back("ICaT__g");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.952834331760863);

    // rY[11]:
    this->mVariableNames.push_back("Irel__Rel");
    this->mVariableUnits.push_back("mM_per_ms");
    this->mInitialConditions.push_back(1.06874246141923e-23);

    // rY[12]:
    this->mVariableNames.push_back("Na__Na_i");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(16.612739313555);

    // rY[13]:
    this->mVariableNames.push_back("K__K_i");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(139.730914103161);

    // rY[14]:
    this->mVariableNames.push_back("Ca__Ca_T");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.0257059808595638);

    // rY[15]:
    this->mVariableNames.push_back("Ca__Ca_JSR_T");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(7.87371650296567);

    // rY[16]:
    this->mVariableNames.push_back("Ca__Ca_NSR");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(2.71518235696672);

    // rY[17]:
    this->mVariableNames.push_back("Ca__Over");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1e-12);

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("cytosolic_calcium_concentration");
    this->mDerivedQuantityUnits.push_back("millimolar");
    
    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Dynamiclivshitz_rudy_2007FromCellMLBackwardEuler)
extern "C"
{
    AbstractCardiacCellInterface* MakeCardiacCell(
            boost::shared_ptr<AbstractIvpOdeSolver> pSolver,
            boost::shared_ptr<AbstractStimulusFunction> pStimulus)
    {
        return new Dynamiclivshitz_rudy_2007FromCellMLBackwardEuler(pSolver, pStimulus);
    }
    
}

