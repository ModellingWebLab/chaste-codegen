#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version 0.0.1
//!
//! Model: mahajan_shiferaw_model_2008
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: normal)
//! on 2020-03-04 14:15:53
//!
//! <autogenerated>

#include "mahajan_2008.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    boost::shared_ptr<RegularStimulus> Cellmahajan_2008FromCellMLCvode::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__cell__stim_amplitude = -15.0 * HeartConfig::Instance()->GetCapacitance(); // nA_per_nF
        const double var_chaste_interface__cell__stim_duration = 3.0; // millisecond
        const double var_chaste_interface__cell__stim_offset = 0.0; // millisecond
        const double var_chaste_interface__cell__stim_period = 400.0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__cell__stim_amplitude),
                var_chaste_interface__cell__stim_duration,
                var_chaste_interface__cell__stim_period,
                var_chaste_interface__cell__stim_offset
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }

    double Cellmahajan_2008FromCellMLCvode::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
       
    Cellmahajan_2008FromCellMLCvode::Cellmahajan_2008FromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                26,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Cellmahajan_2008FromCellMLCvode>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
        
        NV_Ith_S(this->mParameters, 0) = 1.0; // (var_IKr__ScaleFactorGkr) [dimensionless]
        NV_Ith_S(this->mParameters, 1) = 1.0; // (var_IKs__ScaleFactorGks) [dimensionless]
        NV_Ith_S(this->mParameters, 2) = 1.0; // (var_Ito__ScaleFactorIto) [dimensionless]
    }

    Cellmahajan_2008FromCellMLCvode::~Cellmahajan_2008FromCellMLCvode()
    {
    }
    
    double Cellmahajan_2008FromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: mV; Initial value: -87.169816169406
        double var_chaste_interface__Ca__Ca_i_converted = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.000256752008084
        double var_chaste_interface__INa__xm = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.001075453357
        double var_chaste_interface__INa__xh = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.990691306716
        double var_chaste_interface__INa__xj = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.993888937283
        double var_chaste_interface__ICaL__c1 = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 1.8211252e-05
        double var_chaste_interface__ICaL__c2 = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.979322592773
        double var_chaste_interface__ICaL__xi1ca = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.001208153482
        double var_chaste_interface__ICaL__xi1ba = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 3.3616596e-05
        double var_chaste_interface__ICaL__xi2ca = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.004173008466
        double var_chaste_interface__ICaL__xi2ba = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.015242594688
        double var_chaste_interface__IKr__xr = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.007074239331
        double var_chaste_interface__IKs__xs1 = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.048267587131
        double var_chaste_interface__IKs__xs2 = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.105468807033
        double var_chaste_interface__Ito__xtos = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.00364776906
        double var_chaste_interface__Ito__ytos = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.174403618112
        double var_chaste_interface__Ito__xtof = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.003643592594
        double var_chaste_interface__Ito__ytof = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 0.993331326442
        double var_chaste_interface__Na__Na_i = NV_Ith_S(rY, 20);
        // Units: mM; Initial value: 11.441712311614
        double var_chaste_interface__Ca__Ca_submem = NV_Ith_S(rY, 22);
        // Units: uM; Initial value: 0.226941113355
        
        const double var_Ca__Ca_i = 1000.0 * var_chaste_interface__Ca__Ca_i_converted; // uM
        const double var_Ca__csm = 0.001 * var_chaste_interface__Ca__Ca_submem; // mM
        const double var_Environment__Ca_o = 1.8; // mM
        const double var_Environment__F = 96.485341500000004; // coulomb_per_mmole
        const double var_Environment__K_o = 5.4000000000000004; // mM
        const double var_Environment__Na_o = 136.0; // mM
        const double var_Environment__R = 8.3144720000000003; // J_per_moleK
        const double var_Environment__T = 308.0; // kelvin
        const double var_Environment__FonRT = var_Environment__F / (var_Environment__R * var_Environment__T); // per_mV
        const double var_ICaL__gca = 182.0; // mmole_per_coulomb_cm
        const double var_ICaL__pca = 0.00054000000000000001; // cm_per_s
        const double var_ICaL__po = 1.0 - var_chaste_interface__ICaL__c1 - var_chaste_interface__ICaL__c2 - var_chaste_interface__ICaL__xi1ba - var_chaste_interface__ICaL__xi1ca - var_chaste_interface__ICaL__xi2ba - var_chaste_interface__ICaL__xi2ca; // dimensionless
        const double var_IK1__gkix = 0.29999999999999999; // uS_per_nF
        const double var_IKr__gkr = 0.012500000000000001; // uS_per_nF
        const double var_IKs__gks = 0.1386; // uS_per_nF
        const double var_IKs__gksx = 1.0 + 0.80000000000000004 / (1.0 + 0.125 * pow(1 / var_Ca__Ca_i, 3.0)); // dimensionless
        const double var_INa__gna = 12.0; // uS_per_nF
        const double var_INaCa__gNaCa = 0.83999999999999997; // uM_per_ms
        const double var_INaCa__xkdna = 0.29999999999999999; // uM
        const double var_INaCa__aloss = 1.0 / (1.0 + pow((var_INaCa__xkdna / var_chaste_interface__Ca__Ca_submem), 3.0)); // dimensionless
        const double var_INaCa__xmcai = 0.0035999999999999999; // mM
        const double var_INaCa__xmcao = 1.3; // mM
        const double var_INaCa__xmnai = 12.300000000000001; // mM
        const double var_INaCa__xmnao = 87.5; // mM
        const double var_INaCa__yz2 = pow(var_INaCa__xmnai, 3.0) * (1.0 + var_Ca__csm / var_INaCa__xmcai) * var_Environment__Ca_o; // mM4
        const double var_INaK__gNaK = 1.5; // nA_per_nF
        const double var_INaK__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * var_Environment__Na_o); // dimensionless
        const double var_INaK__xkmko = 1.5; // mM
        const double var_INaK__xkmnai = 12.0; // mM
        const double var_Ito__gtof = 0.040000000000000001; // uS_per_nF
        const double var_Ito__gtos = 0.11; // uS_per_nF
        const double var_INaCa__yz1 = pow(var_INaCa__xmnao, 3.0) * var_Ca__csm + pow(var_chaste_interface__Na__Na_i, 3.0) * var_INaCa__xmcao; // mM4
        const double var_INaCa__yz3 = pow(var_Environment__Na_o, 3.0) * (1.0 + pow((var_chaste_interface__Na__Na_i / var_INaCa__xmnai), 3.0)) * var_INaCa__xmcai; // mM4
        const double var_INaCa__yz4 = pow(var_Environment__Na_o, 3.0) * var_Ca__csm + pow(var_chaste_interface__Na__Na_i, 3.0) * var_Environment__Ca_o; // mM4
        const double var_INaCa__zw8 = var_INaCa__yz1 + var_INaCa__yz2 + var_INaCa__yz3 + var_INaCa__yz4; // mM4
        const double var_ICaL__za = 2.0 * var_Environment__FonRT * var_chaste_interface__cell__V; // dimensionless
        const double var_ICaL__rxa = ((fabs(var_ICaL__za) < 0.001) ? (2.0 * (-0.34100000000000003 * var_Environment__Ca_o + var_Ca__csm * exp(var_ICaL__za)) * var_Environment__F * var_ICaL__pca) : (4.0 * (-0.34100000000000003 * var_Environment__Ca_o + var_Ca__csm * exp(var_ICaL__za)) * var_Environment__F * var_Environment__FonRT * var_ICaL__pca * var_chaste_interface__cell__V / (-1.0 + exp(var_ICaL__za)))); // mA_per_cm2
        const double var_ICaL__jca = var_ICaL__gca * var_ICaL__po * var_ICaL__rxa; // uM_per_ms
        const double var_IKr__rg = 1.0 / (1.0 + exp(1.4732142857142858 + 0.044642857142857144 * var_chaste_interface__cell__V)); // dimensionless
        const double var_INaCa__zw3 = pow(var_chaste_interface__Na__Na_i, 3.0) * var_Environment__Ca_o * exp(0.34999999999999998 * var_Environment__FonRT * var_chaste_interface__cell__V) - pow(var_Environment__Na_o, 3.0) * var_Ca__csm * exp(-0.65000000000000002 * var_Environment__FonRT * var_chaste_interface__cell__V); // mM4
        const double var_INaCa__zw4 = 1.0 + 0.20000000000000001 * exp(-0.65000000000000002 * var_Environment__FonRT * var_chaste_interface__cell__V); // dimensionless
        const double var_INaCa__jNaCa = var_INaCa__aloss * var_INaCa__gNaCa * var_INaCa__zw3 / (var_INaCa__zw4 * var_INaCa__zw8); // uM_per_ms
        const double var_INaK__fNaK = 1.0 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_Environment__FonRT * var_chaste_interface__cell__V) + 0.036499999999999998 * var_INaK__sigma * exp(-var_Environment__FonRT * var_chaste_interface__cell__V)); // dimensionless
        const double var_INaK__xiNaK = var_Environment__K_o * var_INaK__fNaK * var_INaK__gNaK * var_chaste_interface__Na__Na_i / ((var_Environment__K_o + var_INaK__xkmko) * (var_INaK__xkmnai + var_chaste_interface__Na__Na_i)); // nA_per_nF
        const double var_Ito__rt2 = 3.3500000000000001 + 0.10000000000000001 * var_chaste_interface__cell__V; // dimensionless
        const double var_Ito__rs_inf = 1.0 / (1.0 + exp(var_Ito__rt2)); // dimensionless
        const double var_cell__i_Stim = 0.0; // nA_per_nF
        const double var_cell__wca = 8.0; // mV_per_uM
        const double var_ICaL__xica = 2.0 * var_ICaL__jca * var_cell__wca; // nA_per_nF
        const double var_INaCa__xiNaCa = var_INaCa__jNaCa * var_cell__wca; // nA_per_nF
        const double var_reversal_potentials__K_i = 140.0; // mM
        const double var_reversal_potentials__ek = 1.0 * log(var_Environment__K_o / var_reversal_potentials__K_i) / var_Environment__FonRT; // mV
        const double var_IK1__aki = 1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__cell__V - 0.23849999999999999 * var_reversal_potentials__ek)); // per_ms
        const double var_IK1__bki = (1.0 * exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__cell__V - 0.061749999999999999 * var_reversal_potentials__ek) + 0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__cell__V - 0.080320000000000003 * var_reversal_potentials__ek)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_reversal_potentials__ek - 0.51429999999999998 * var_chaste_interface__cell__V)); // per_ms
        const double var_IK1__xkin = var_IK1__aki / (var_IK1__aki + var_IK1__bki); // dimensionless
        const double var_IK1__xik1 = 0.43033148291193518 * sqrt(var_Environment__K_o) * (-var_reversal_potentials__ek + var_chaste_interface__cell__V) * var_IK1__gkix * var_IK1__xkin; // nA_per_nF
        const double var_IKr__xikr = 0.43033148291193518 * sqrt(var_Environment__K_o) * (-var_reversal_potentials__ek + var_chaste_interface__cell__V) * NV_Ith_S(mParameters, 0) * var_IKr__gkr * var_IKr__rg * var_chaste_interface__IKr__xr; // nA_per_nF
        const double var_Ito__xitof = (-var_reversal_potentials__ek + var_chaste_interface__cell__V) * var_Ito__gtof * var_chaste_interface__Ito__xtof * var_chaste_interface__Ito__ytof; // nA_per_nF
        const double var_Ito__xitos = (-var_reversal_potentials__ek + var_chaste_interface__cell__V) * (0.5 * var_Ito__rs_inf + var_chaste_interface__Ito__ytos) * NV_Ith_S(mParameters, 2) * var_Ito__gtos * var_chaste_interface__Ito__xtos; // nA_per_nF
        const double var_Ito__xito = var_Ito__xitof + var_Ito__xitos; // nA_per_nF
        const double var_reversal_potentials__ena = 1.0 * log(var_Environment__Na_o / var_chaste_interface__Na__Na_i) / var_Environment__FonRT; // mV
        const double var_INa__xina = pow(var_chaste_interface__INa__xm, 3) * (-var_reversal_potentials__ena + var_chaste_interface__cell__V) * var_INa__gna * var_chaste_interface__INa__xh * var_chaste_interface__INa__xj; // nA_per_nF
        const double var_reversal_potentials__prNaK = 0.018329999999999999; // dimensionless
        const double var_reversal_potentials__eks = 1.0 * log((var_Environment__Na_o * var_reversal_potentials__prNaK + var_Environment__K_o) / (var_chaste_interface__Na__Na_i * var_reversal_potentials__prNaK + var_reversal_potentials__K_i)) / var_Environment__FonRT; // mV
        const double var_IKs__xiks = (-var_reversal_potentials__eks + var_chaste_interface__cell__V) * NV_Ith_S(mParameters, 1) * var_IKs__gks * var_IKs__gksx * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2; // nA_per_nF
        const double var_cell__Itotal = -var_ICaL__xica - var_IK1__xik1 - var_IKr__xikr - var_IKs__xiks - var_INa__xina - var_INaCa__xiNaCa - var_INaK__xiNaK - var_Ito__xito - var_cell__i_Stim; // nA_per_nF
        const double var_chaste_interface__i_ionic = HeartConfig::Instance()->GetCapacitance() * var_cell__Itotal; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void Cellmahajan_2008FromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__Environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: mV; Initial value: -87.169816169406
        double var_chaste_interface__Ca__Ca_i_converted = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.000256752008084
        double var_chaste_interface__INa__xm = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.001075453357
        double var_chaste_interface__INa__xh = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.990691306716
        double var_chaste_interface__INa__xj = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.993888937283
        double var_chaste_interface__ICaL__c1 = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 1.8211252e-05
        double var_chaste_interface__ICaL__c2 = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.979322592773
        double var_chaste_interface__ICaL__xi1ca = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.001208153482
        double var_chaste_interface__ICaL__xi1ba = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 3.3616596e-05
        double var_chaste_interface__ICaL__xi2ca = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.004173008466
        double var_chaste_interface__ICaL__xi2ba = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.015242594688
        double var_chaste_interface__IKr__xr = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.007074239331
        double var_chaste_interface__IKs__xs1 = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.048267587131
        double var_chaste_interface__IKs__xs2 = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.105468807033
        double var_chaste_interface__Ito__xtos = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.00364776906
        double var_chaste_interface__Ito__ytos = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.174403618112
        double var_chaste_interface__Ito__xtof = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.003643592594
        double var_chaste_interface__Ito__ytof = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 0.993331326442
        double var_chaste_interface__Irel__Ca_JSR = NV_Ith_S(rY, 18);
        // Units: uM; Initial value: 97.505463697266
        double var_chaste_interface__Irel__xir = NV_Ith_S(rY, 19);
        // Units: uM_per_ms; Initial value: 0.006679257264
        double var_chaste_interface__Na__Na_i = NV_Ith_S(rY, 20);
        // Units: mM; Initial value: 11.441712311614
        double var_chaste_interface__Ca__Ca_dyad = NV_Ith_S(rY, 21);
        // Units: uM; Initial value: 1.716573130685
        double var_chaste_interface__Ca__Ca_submem = NV_Ith_S(rY, 22);
        // Units: uM; Initial value: 0.226941113355
        double var_chaste_interface__Ca__Ca_NSR = NV_Ith_S(rY, 23);
        // Units: uM; Initial value: 104.450004990523
        double var_chaste_interface__Ca__tropi = NV_Ith_S(rY, 24);
        // Units: uM; Initial value: 22.171689894953
        double var_chaste_interface__Ca__trops = NV_Ith_S(rY, 25);
        // Units: uM; Initial value: 19.864701949854
        
        
        // Mathematics
        double d_dt_chaste_interface_var_cell__V;
        const double var_Ca__Ca_i = 1000.0 * var_chaste_interface__Ca__Ca_i_converted; // uM
        const double var_Ca__bcal = 24.0; // uM
        const double var_Ca__bmem = 15.0; // uM
        const double var_Ca__bsar = 42.0; // uM
        const double var_Ca__btrop = 70.0; // uM
        const double var_Ca__csm = 0.001 * var_chaste_interface__Ca__Ca_submem; // mM
        const double var_Ca__kmem = 0.29999999999999999; // uM
        const double var_Ca__ksar = 13.0; // uM
        const double var_Ca__mempxi = var_Ca__bmem * var_Ca__kmem / pow((var_Ca__Ca_i + var_Ca__kmem), 2); // dimensionless
        const double var_Ca__mempxs = var_Ca__bmem * var_Ca__kmem / pow((var_chaste_interface__Ca__Ca_submem + var_Ca__kmem), 2); // dimensionless
        const double var_Ca__sarpxi = var_Ca__bsar * var_Ca__ksar / pow((var_Ca__Ca_i + var_Ca__ksar), 2); // dimensionless
        const double var_Ca__sarpxs = var_Ca__bsar * var_Ca__ksar / pow((var_chaste_interface__Ca__Ca_submem + var_Ca__ksar), 2); // dimensionless
        const double var_Ca__srkd = 0.59999999999999998; // uM
        const double var_Ca__srmax = 47.0; // uM
        const double var_Ca__spxi = var_Ca__srkd * var_Ca__srmax / pow((var_Ca__Ca_i + var_Ca__srkd), 2); // dimensionless
        const double var_Ca__spxs = var_Ca__srkd * var_Ca__srmax / pow((var_chaste_interface__Ca__Ca_submem + var_Ca__srkd), 2); // dimensionless
        const double var_Ca__taud = 4.0; // ms
        const double var_Ca__jd = (-var_Ca__Ca_i + var_chaste_interface__Ca__Ca_submem) / var_Ca__taud; // uM_per_ms
        const double var_Ca__taups = 0.5; // ms
        const double var_Ca__xkcal = 7.0; // uM
        const double var_Ca__bpxi = var_Ca__bcal * var_Ca__xkcal / pow((var_Ca__Ca_i + var_Ca__xkcal), 2); // dimensionless
        const double var_Ca__bpxs = var_Ca__bcal * var_Ca__xkcal / pow((var_chaste_interface__Ca__Ca_submem + var_Ca__xkcal), 2); // dimensionless
        const double var_Ca__dciib = 1.0 / (1.0 + var_Ca__bpxi + var_Ca__mempxi + var_Ca__sarpxi + var_Ca__spxi); // dimensionless
        const double var_Ca__dcsib = 1.0 / (1.0 + var_Ca__bpxs + var_Ca__mempxs + var_Ca__sarpxs + var_Ca__spxs); // dimensionless
        const double var_Ca__xkoff = 0.019599999999999999; // per_ms
        const double var_Ca__xkon = 0.0327; // per_uM_per_ms
        const double var_Ca__xbi = -var_chaste_interface__Ca__tropi * var_Ca__xkoff + (-var_chaste_interface__Ca__tropi + var_Ca__btrop) * var_Ca__Ca_i * var_Ca__xkon; // uM_per_ms
        const double var_Ca__xbs = -var_chaste_interface__Ca__trops * var_Ca__xkoff + (-var_chaste_interface__Ca__trops + var_Ca__btrop) * var_chaste_interface__Ca__Ca_submem * var_Ca__xkon; // uM_per_ms
        const double d_dt_chaste_interface_var_Ca__tropi = var_Ca__xbi; // uM / ms
        const double d_dt_chaste_interface_var_Ca__trops = var_Ca__xbs; // uM / ms
        const double var_Environment__Ca_o = 1.8; // mM
        const double var_Environment__F = 96.485341500000004; // coulomb_per_mmole
        const double var_Environment__K_o = 5.4000000000000004; // mM
        const double var_Environment__Na_o = 136.0; // mM
        const double var_Environment__R = 8.3144720000000003; // J_per_moleK
        const double var_Environment__T = 308.0; // kelvin
        const double var_Environment__FonRT = var_Environment__F / (var_Environment__R * var_Environment__T); // per_mV
        const double var_ICaL__cat = 3.0; // uM
        const double var_ICaL__cpt = 6.0936500000000002; // uM
        const double var_ICaL__fca = 1.0 / (1.0 + pow((var_ICaL__cat / var_chaste_interface__Ca__Ca_dyad), 3.0)); // dimensionless
        const double var_ICaL__gca = 182.0; // mmole_per_coulomb_cm
        const double var_ICaL__k1 = 0.024167999999999999 * var_ICaL__fca; // per_ms
        const double var_ICaL__k1t = 0.00413; // per_ms
        const double var_ICaL__k2 = 0.000103615; // per_ms
        const double var_ICaL__k2t = 0.0022399999999999998; // per_ms
        const double var_ICaL__pca = 0.00054000000000000001; // cm_per_s
        const double var_ICaL__r1 = 0.29999999999999999; // per_ms
        const double var_ICaL__r2 = 3.0; // per_ms
        const double var_ICaL__s1 = 0.018268800000000002 * var_ICaL__fca; // per_ms
        const double var_ICaL__s1t = 0.0019499999999999999; // per_ms
        const double var_ICaL__s2 = var_ICaL__k2 * var_ICaL__r1 * var_ICaL__s1 / (var_ICaL__k1 * var_ICaL__r2); // per_ms
        const double var_ICaL__s2t = var_ICaL__k2t * var_ICaL__r1 * var_ICaL__s1t / (var_ICaL__k1t * var_ICaL__r2); // per_ms
        const double var_ICaL__s6 = 8.0; // mV
        const double var_ICaL__sx = 3.0; // mV
        const double var_ICaL__sy = 4.0; // mV
        const double var_ICaL__syr = 11.32; // mV
        const double var_ICaL__tau3 = 3.0; // ms
        const double var_ICaL__taupo = 1.0; // ms
        const double var_ICaL__tca = 78.032899999999998; // ms
        const double var_ICaL__tau_ca = 0.10000000000000001 + var_ICaL__tca / (1.0 + pow((var_chaste_interface__Ca__Ca_dyad / var_ICaL__cpt), 4.0)); // ms
        const double var_ICaL__vth = 0.0; // mV
        const double var_ICaL__vx = -40.0; // mV
        const double var_ICaL__vy = -40.0; // mV
        const double var_ICaL__vyr = -40.0; // mV
        const double var_ICaL__po = 1.0 - var_chaste_interface__ICaL__c1 - var_chaste_interface__ICaL__c2 - var_chaste_interface__ICaL__xi1ba - var_chaste_interface__ICaL__xi1ca - var_chaste_interface__ICaL__xi2ba - var_chaste_interface__ICaL__xi2ca; // dimensionless
        const double var_INa__gna = 12.0; // uS_per_nF
        const double var_INaCa__gNaCa = 0.83999999999999997; // uM_per_ms
        const double var_INaCa__xkdna = 0.29999999999999999; // uM
        const double var_INaCa__aloss = 1.0 / (1.0 + pow((var_INaCa__xkdna / var_chaste_interface__Ca__Ca_submem), 3.0)); // dimensionless
        const double var_INaCa__xmcai = 0.0035999999999999999; // mM
        const double var_INaCa__xmcao = 1.3; // mM
        const double var_INaCa__xmnai = 12.300000000000001; // mM
        const double var_INaCa__xmnao = 87.5; // mM
        const double var_INaCa__yz2 = pow(var_INaCa__xmnai, 3.0) * (1.0 + var_Ca__csm / var_INaCa__xmcai) * var_Environment__Ca_o; // mM4
        const double var_INaK__gNaK = 1.5; // nA_per_nF
        const double var_INaK__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * var_Environment__Na_o); // dimensionless
        const double var_INaK__xkmko = 1.5; // mM
        const double var_INaK__xkmnai = 12.0; // mM
        const double var_Ileak_Iup_Ixfer__cup = 0.5; // uM
        const double var_Ileak_Iup_Ixfer__gleak = 2.069e-5; // per_ms
        const double var_Ileak_Iup_Ixfer__kj = 50.0; // uM
        const double var_Ileak_Iup_Ixfer__jleak = pow(var_chaste_interface__Ca__Ca_NSR, 2) * (-var_Ca__Ca_i + 16.667000000000002 * var_chaste_interface__Ca__Ca_NSR) * var_Ileak_Iup_Ixfer__gleak / (pow(var_chaste_interface__Ca__Ca_NSR, 2) + pow(var_Ileak_Iup_Ixfer__kj, 2)); // uM_per_ms
        const double var_Ileak_Iup_Ixfer__vup = 0.40000000000000002; // uM_per_ms
        const double var_Ileak_Iup_Ixfer__jup = pow(var_Ca__Ca_i, 2) * var_Ileak_Iup_Ixfer__vup / (pow(var_Ca__Ca_i, 2) + pow(var_Ileak_Iup_Ixfer__cup, 2)); // uM_per_ms
        const double var_Ca__Ca_i_orig_deriv = (-var_Ca__xbi - var_Ileak_Iup_Ixfer__jup + var_Ca__jd + var_Ileak_Iup_Ixfer__jleak) * var_Ca__dciib; // uM / ms
        const double d_dt_chaste_interface_var_Ca__Ca_i_converted = 0.001 * var_Ca__Ca_i_orig_deriv; // millimolar / ms
        const double var_Irel__av = 11.300000000000001; // per_ms
        const double var_Irel__ax = 0.35759999999999997; // per_mV
        const double var_Irel__ay = 0.050000000000000003; // per_mV
        const double var_Irel__cstar = 90.0; // uM
        const double var_Irel__bv = -50.0 + (1.0 - var_Irel__av) * var_Irel__cstar; // uM_per_ms
        const double var_Irel__Qr0 = (((var_chaste_interface__Irel__Ca_JSR > 50.0) && (var_chaste_interface__Irel__Ca_JSR < var_Irel__cstar)) ? (-50.0 + 1.0 * var_chaste_interface__Irel__Ca_JSR) : ((var_chaste_interface__Irel__Ca_JSR >= var_Irel__cstar) ? (var_chaste_interface__Irel__Ca_JSR * var_Irel__av + var_Irel__bv) : (0.0))); // uM_per_ms
        const double var_Irel__Qr = var_chaste_interface__Ca__Ca_NSR * var_Irel__Qr0 / var_Irel__cstar; // uM_per_ms
        const double var_Irel__gbarsr = 26841.799999999999; // dimensionless
        const double var_Irel__gdyad = 9000.0; // mmole_per_coulomb_cm
        const double var_Irel__gryr = 2.5807899999999999; // per_ms
        const double var_Irel__taua = 100.0; // ms
        const double d_dt_chaste_interface_var_Irel__Ca_JSR = (-var_chaste_interface__Irel__Ca_JSR + var_chaste_interface__Ca__Ca_NSR) / var_Irel__taua; // uM / ms
        const double var_Irel__taur = 30.0; // ms
        const double var_Ca__dCa_JSR = -var_Ileak_Iup_Ixfer__jleak - var_chaste_interface__Irel__xir + var_Ileak_Iup_Ixfer__jup; // uM_per_ms
        const double d_dt_chaste_interface_var_Ca__Ca_NSR = var_Ca__dCa_JSR; // uM / ms
        const double var_INaCa__yz1 = pow(var_INaCa__xmnao, 3.0) * var_Ca__csm + pow(var_chaste_interface__Na__Na_i, 3.0) * var_INaCa__xmcao; // mM4
        const double var_INaCa__yz3 = pow(var_Environment__Na_o, 3.0) * (1.0 + pow((var_chaste_interface__Na__Na_i / var_INaCa__xmnai), 3.0)) * var_INaCa__xmcai; // mM4
        const double var_INaCa__yz4 = pow(var_Environment__Na_o, 3.0) * var_Ca__csm + pow(var_chaste_interface__Na__Na_i, 3.0) * var_Environment__Ca_o; // mM4
        const double var_INaCa__zw8 = var_INaCa__yz1 + var_INaCa__yz2 + var_INaCa__yz3 + var_INaCa__yz4; // mM4
        const double var_ICaL__Pr = 1.0 - 1.0 / (1.0 + exp((-var_chaste_interface__cell__V + var_ICaL__vy) / var_ICaL__sy)); // dimensionless
        const double var_ICaL__Ps = 1.0 / (1.0 + exp((-var_chaste_interface__cell__V + var_ICaL__vyr) / var_ICaL__syr)); // dimensionless
        const double var_ICaL__poi = 1.0 / (1.0 + exp((-var_chaste_interface__cell__V + var_ICaL__vx) / var_ICaL__sx)); // dimensionless
        const double var_ICaL__k3 = (1.0 - var_ICaL__poi) / var_ICaL__tau3; // per_ms
        const double var_ICaL__k3t = var_ICaL__k3; // per_ms
        const double var_ICaL__poinf = 1.0 / (1.0 + exp((-var_chaste_interface__cell__V + var_ICaL__vth) / var_ICaL__s6)); // dimensionless
        const double var_ICaL__alpha = var_ICaL__poinf / var_ICaL__taupo; // per_ms
        const double var_ICaL__beta = (1.0 - var_ICaL__poinf) / var_ICaL__taupo; // per_ms
        const double d_dt_chaste_interface_var_ICaL__c1 = var_ICaL__alpha * var_chaste_interface__ICaL__c2 + var_ICaL__k2 * var_chaste_interface__ICaL__xi1ca + var_ICaL__k2t * var_chaste_interface__ICaL__xi1ba + var_ICaL__po * var_ICaL__r2 - (var_ICaL__beta + var_ICaL__k1 + var_ICaL__k1t + var_ICaL__r1) * var_chaste_interface__ICaL__c1; // 1 / ms
        const double var_ICaL__recov = 10.0 + 4954.0 * exp(0.064102564102564111 * var_chaste_interface__cell__V); // ms
        const double var_ICaL__tauba = 450.0 + (-450.0 + var_ICaL__recov) * var_ICaL__Pr; // ms
        const double var_ICaL__k5t = (1.0 - var_ICaL__Ps) / var_ICaL__tauba; // per_ms
        const double var_ICaL__k6t = var_ICaL__Ps / var_ICaL__tauba; // per_ms
        const double var_ICaL__k4t = var_ICaL__alpha * var_ICaL__k1t * var_ICaL__k3t * var_ICaL__k5t / (var_ICaL__beta * var_ICaL__k2t * var_ICaL__k6t); // per_ms
        const double d_dt_chaste_interface_var_ICaL__xi1ba = var_chaste_interface__ICaL__c1 * var_ICaL__k1t + var_ICaL__k4t * var_chaste_interface__ICaL__xi2ba + var_ICaL__po * var_ICaL__s1t - (var_ICaL__k2t + var_ICaL__k3t + var_ICaL__s2t) * var_chaste_interface__ICaL__xi1ba; // 1 / ms
        const double d_dt_chaste_interface_var_ICaL__xi2ba = var_chaste_interface__ICaL__c2 * var_ICaL__k6t + var_ICaL__k3t * var_chaste_interface__ICaL__xi1ba - (var_ICaL__k4t + var_ICaL__k5t) * var_chaste_interface__ICaL__xi2ba; // 1 / ms
        const double var_ICaL__tauca = (-var_ICaL__tau_ca + var_ICaL__recov) * var_ICaL__Pr + var_ICaL__tau_ca; // ms
        const double var_ICaL__k5 = (1.0 - var_ICaL__Ps) / var_ICaL__tauca; // per_ms
        const double var_ICaL__k6 = var_ICaL__Ps * var_ICaL__fca / var_ICaL__tauca; // per_ms
        const double d_dt_chaste_interface_var_ICaL__c2 = var_ICaL__beta * var_chaste_interface__ICaL__c1 + var_ICaL__k5 * var_chaste_interface__ICaL__xi2ca + var_ICaL__k5t * var_chaste_interface__ICaL__xi2ba - (var_ICaL__alpha + var_ICaL__k6 + var_ICaL__k6t) * var_chaste_interface__ICaL__c2; // 1 / ms
        const double var_ICaL__k4 = var_ICaL__alpha * var_ICaL__k1 * var_ICaL__k3 * var_ICaL__k5 / (var_ICaL__beta * var_ICaL__k2 * var_ICaL__k6); // per_ms
        const double d_dt_chaste_interface_var_ICaL__xi1ca = var_chaste_interface__ICaL__c1 * var_ICaL__k1 + var_ICaL__k4 * var_chaste_interface__ICaL__xi2ca + var_ICaL__po * var_ICaL__s1 - (var_ICaL__k2 + var_ICaL__k3 + var_ICaL__s2) * var_chaste_interface__ICaL__xi1ca; // 1 / ms
        const double d_dt_chaste_interface_var_ICaL__xi2ca = var_chaste_interface__ICaL__c2 * var_ICaL__k6 + var_ICaL__k3 * var_chaste_interface__ICaL__xi1ca - (var_ICaL__k4 + var_ICaL__k5) * var_chaste_interface__ICaL__xi2ca; // 1 / ms
        const double var_ICaL__za = 2.0 * var_Environment__FonRT * var_chaste_interface__cell__V; // dimensionless
        const double var_ICaL__rxa = ((fabs(var_ICaL__za) < 0.001) ? (2.0 * (-0.34100000000000003 * var_Environment__Ca_o + var_Ca__csm * exp(var_ICaL__za)) * var_Environment__F * var_ICaL__pca) : (4.0 * (-0.34100000000000003 * var_Environment__Ca_o + var_Ca__csm * exp(var_ICaL__za)) * var_Environment__F * var_Environment__FonRT * var_ICaL__pca * var_chaste_interface__cell__V / (-1.0 + exp(var_ICaL__za)))); // mA_per_cm2
        const double var_ICaL__jca = var_ICaL__gca * var_ICaL__po * var_ICaL__rxa; // uM_per_ms
        const double var_IKr__xkrinf = 1.0 / (1.0 + exp(-6.666666666666667 - 0.13333333333333333 * var_chaste_interface__cell__V)); // dimensionless
        const double var_IKr__xkrv1 = ((fabs(7.0 + var_chaste_interface__cell__V) > 0.001) ? (0.0013799999999999999 * (7.0 + var_chaste_interface__cell__V) / (1.0 - exp(-0.86099999999999999 - 0.123 * var_chaste_interface__cell__V))) : (0.011219512195121951)); // per_ms
        const double var_IKr__xkrv2 = ((fabs(10.0 + var_chaste_interface__cell__V) > 0.001) ? (0.00060999999999999997 * (10.0 + var_chaste_interface__cell__V) / (-1.0 + exp(1.45 + 0.14499999999999999 * var_chaste_interface__cell__V))) : (0.0042068965517241376)); // per_ms
        const double var_IKr__taukr = 1.0 / (var_IKr__xkrv1 + var_IKr__xkrv2); // ms
        const double d_dt_chaste_interface_var_IKr__xr = (-var_chaste_interface__IKr__xr + var_IKr__xkrinf) / var_IKr__taukr; // 1 / ms
        const double var_IKs__tauxs1 = ((fabs(30.0 + var_chaste_interface__cell__V) < 0.014556040756914121) ? (417.94625266107982) : (1.0 / (0.00013100000000000001 * (30.0 + var_chaste_interface__cell__V) / (-1.0 + exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__cell__V)) + 7.1899999999999999e-5 * (30.0 + var_chaste_interface__cell__V) / (1.0 - exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__cell__V))))); // ms
        const double var_IKs__tauxs2 = 4.0 * var_IKs__tauxs1; // ms
        const double var_IKs__xs1ss = 1.0 / (1.0 + exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__cell__V)); // dimensionless
        const double d_dt_chaste_interface_var_IKs__xs1 = (-var_chaste_interface__IKs__xs1 + var_IKs__xs1ss) / var_IKs__tauxs1; // 1 / ms
        const double var_IKs__xs2ss = var_IKs__xs1ss; // dimensionless
        const double d_dt_chaste_interface_var_IKs__xs2 = (-var_chaste_interface__IKs__xs2 + var_IKs__xs2ss) / var_IKs__tauxs2; // 1 / ms
        const double var_INa__ah = ((var_chaste_interface__cell__V < -40.0) ? (0.13500000000000001 * exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__cell__V)) : (0.0)); // per_ms
        const double var_INa__aj = ((var_chaste_interface__cell__V < -40.0) ? (1.0 * (37.780000000000001 + var_chaste_interface__cell__V) * (-127140.0 * exp(0.24440000000000001 * var_chaste_interface__cell__V) - 3.4740000000000003e-5 * exp(-0.043909999999999998 * var_chaste_interface__cell__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__cell__V))) : (0.0)); // per_ms
        const double var_INa__am = ((fabs(47.130000000000003 + var_chaste_interface__cell__V) > 0.001) ? (0.32000000000000001 * (47.130000000000003 + var_chaste_interface__cell__V) / (1.0 - exp(-4.7130000000000001 - 0.10000000000000001 * var_chaste_interface__cell__V))) : (3.2000000000000002)); // per_ms
        const double var_INa__bh = ((var_chaste_interface__cell__V < -40.0) ? (310000.0 * exp(0.34999999999999998 * var_chaste_interface__cell__V) + 3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__cell__V)) : (7.6923076923076916 / (1.0 + exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__cell__V)))); // per_ms
        const double d_dt_chaste_interface_var_INa__xh = (1.0 - var_chaste_interface__INa__xh) * var_INa__ah - var_INa__bh * var_chaste_interface__INa__xh; // 1 / ms
        const double var_INa__bj = ((var_chaste_interface__cell__V < -40.0) ? (0.1212 * exp(-0.01052 * var_chaste_interface__cell__V) / (1.0 + exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__cell__V))) : (0.29999999999999999 * exp(-2.5349999999999999e-7 * var_chaste_interface__cell__V) / (1.0 + exp(-3.2000000000000002 - 0.10000000000000001 * var_chaste_interface__cell__V)))); // per_ms
        const double d_dt_chaste_interface_var_INa__xj = (1.0 - var_chaste_interface__INa__xj) * var_INa__aj - var_INa__bj * var_chaste_interface__INa__xj; // 1 / ms
        const double var_INa__bm = 0.080000000000000002 * exp(-0.090909090909090912 * var_chaste_interface__cell__V); // per_ms
        const double d_dt_chaste_interface_var_INa__xm = (1.0 - var_chaste_interface__INa__xm) * var_INa__am - var_INa__bm * var_chaste_interface__INa__xm; // 1 / ms
        const double var_INaCa__zw3 = pow(var_chaste_interface__Na__Na_i, 3.0) * var_Environment__Ca_o * exp(0.34999999999999998 * var_Environment__FonRT * var_chaste_interface__cell__V) - pow(var_Environment__Na_o, 3.0) * var_Ca__csm * exp(-0.65000000000000002 * var_Environment__FonRT * var_chaste_interface__cell__V); // mM4
        const double var_INaCa__zw4 = 1.0 + 0.20000000000000001 * exp(-0.65000000000000002 * var_Environment__FonRT * var_chaste_interface__cell__V); // dimensionless
        const double var_INaCa__jNaCa = var_INaCa__aloss * var_INaCa__gNaCa * var_INaCa__zw3 / (var_INaCa__zw4 * var_INaCa__zw8); // uM_per_ms
        const double d_dt_chaste_interface_var_Ca__Ca_submem = (-var_Ca__xbs + 50.0 * var_INaCa__jNaCa + 50.0 * var_chaste_interface__Irel__xir - 50.0 * var_Ca__jd - 50.0 * var_ICaL__jca) * var_Ca__dcsib; // uM / ms
        const double var_INaK__fNaK = 1.0 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_Environment__FonRT * var_chaste_interface__cell__V) + 0.036499999999999998 * var_INaK__sigma * exp(-var_Environment__FonRT * var_chaste_interface__cell__V)); // dimensionless
        const double var_INaK__xiNaK = var_Environment__K_o * var_INaK__fNaK * var_INaK__gNaK * var_chaste_interface__Na__Na_i / ((var_Environment__K_o + var_INaK__xkmko) * (var_INaK__xkmnai + var_chaste_interface__Na__Na_i)); // nA_per_nF
        const double var_Irel__sparkV = exp(-(30.0 + var_chaste_interface__cell__V) * var_Irel__ay) / (1.0 + exp(-(30.0 + var_chaste_interface__cell__V) * var_Irel__ay)); // dimensionless
        const double var_Irel__spark_rate = 1.0 * var_ICaL__po * var_Irel__gryr * var_Irel__sparkV * fabs(var_ICaL__rxa); // per_ms
        const double d_dt_chaste_interface_var_Irel__xir = var_Irel__Qr * var_Irel__spark_rate - (1.0 - var_Ca__dCa_JSR * var_Irel__taur / var_chaste_interface__Ca__Ca_NSR) * var_chaste_interface__Irel__xir / var_Irel__taur; // uM_per_ms / ms
        const double var_Irel__xicap = var_ICaL__po * var_Irel__gdyad * fabs(var_ICaL__rxa); // uM_per_ms
        const double var_Irel__xirp = 1.0 * var_ICaL__po * var_Irel__Qr * var_Irel__gbarsr * fabs(var_ICaL__rxa) * exp(-(30.0 + var_chaste_interface__cell__V) * var_Irel__ax) / (1.0 + exp(-(30.0 + var_chaste_interface__cell__V) * var_Irel__ax)); // uM_per_ms
        const double var_Irel__xiryr = var_Irel__xicap + var_Irel__xirp; // uM_per_ms
        const double d_dt_chaste_interface_var_Ca__Ca_dyad = -(-var_chaste_interface__Ca__Ca_submem + var_chaste_interface__Ca__Ca_dyad) / var_Ca__taups + var_Irel__xiryr; // uM / ms
        const double var_Ito__rt1 = -0.20000000000000001 - 0.066666666666666666 * var_chaste_interface__cell__V; // dimensionless
        const double var_Ito__rt2 = 3.3500000000000001 + 0.10000000000000001 * var_chaste_interface__cell__V; // dimensionless
        const double var_Ito__rt3 = 6.0 + 0.10000000000000001 * var_chaste_interface__cell__V; // dimensionless
        const double var_Ito__rt4 = -0.0011111111111111111 * pow(var_chaste_interface__cell__V, 2); // dimensionless
        const double var_Ito__rt5 = 3.3500000000000001 + 0.10000000000000001 * var_chaste_interface__cell__V; // dimensionless
        const double var_Ito__txf = 1.5 + 3.5 * exp(var_Ito__rt4); // ms
        const double var_Ito__txs = 0.5 + 9.0 / (1.0 + exp(-var_Ito__rt1)); // ms
        const double var_Ito__tyf = 20.0 + 20.0 / (1.0 + exp(var_Ito__rt5)); // ms
        const double var_Ito__tys = 30.0 + 3000.0 / (1.0 + exp(var_Ito__rt3)); // ms
        const double var_Ito__xtos_inf = 1.0 / (1.0 + exp(var_Ito__rt1)); // dimensionless
        const double d_dt_chaste_interface_var_Ito__xtos = (-var_chaste_interface__Ito__xtos + var_Ito__xtos_inf) / var_Ito__txs; // 1 / ms
        const double var_Ito__xtof_inf = var_Ito__xtos_inf; // dimensionless
        const double d_dt_chaste_interface_var_Ito__xtof = (-var_chaste_interface__Ito__xtof + var_Ito__xtof_inf) / var_Ito__txf; // 1 / ms
        const double var_Ito__ytos_inf = 1.0 / (1.0 + exp(var_Ito__rt2)); // dimensionless
        const double d_dt_chaste_interface_var_Ito__ytos = (-var_chaste_interface__Ito__ytos + var_Ito__ytos_inf) / var_Ito__tys; // 1 / ms
        const double var_Ito__ytof_inf = var_Ito__ytos_inf; // dimensionless
        const double d_dt_chaste_interface_var_Ito__ytof = (-var_chaste_interface__Ito__ytof + var_Ito__ytof_inf) / var_Ito__tyf; // 1 / ms
        const double var_cell__wca = 8.0; // mV_per_uM
        const double var_INaCa__xiNaCa = var_INaCa__jNaCa * var_cell__wca; // nA_per_nF
        const double var_reversal_potentials__ena = 1.0 * log(var_Environment__Na_o / var_chaste_interface__Na__Na_i) / var_Environment__FonRT; // mV
        const double var_INa__xina = pow(var_chaste_interface__INa__xm, 3) * (-var_reversal_potentials__ena + var_chaste_interface__cell__V) * var_INa__gna * var_chaste_interface__INa__xh * var_chaste_interface__INa__xj; // nA_per_nF
        const double d_dt_chaste_interface_var_Na__Na_i = 0.001 * (-var_INa__xina - 3.0 * var_INaCa__xiNaCa - 3.0 * var_INaK__xiNaK) / var_cell__wca; // mM / ms

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_cell__V = 0.0;
        }
        else
        {
            const double var_IK1__gkix = 0.29999999999999999; // uS_per_nF
            const double var_IKr__gkr = 0.012500000000000001; // uS_per_nF
            const double var_IKs__gks = 0.1386; // uS_per_nF
            const double var_IKs__gksx = 1.0 + 0.80000000000000004 / (1.0 + 0.125 * pow(1 / var_Ca__Ca_i, 3.0)); // dimensionless
            const double var_Ito__gtof = 0.040000000000000001; // uS_per_nF
            const double var_Ito__gtos = 0.11; // uS_per_nF
            const double var_IKr__rg = 1.0 / (1.0 + exp(1.4732142857142858 + 0.044642857142857144 * var_chaste_interface__cell__V)); // dimensionless
            const double var_Ito__rs_inf = 1.0 / (1.0 + exp(var_Ito__rt2)); // dimensionless
            const double var_cell__i_Stim_converter = GetIntracellularAreaStimulus(var_chaste_interface__Environment__time); // uA_per_cm2
            const double var_cell__i_Stim = var_cell__i_Stim_converter / HeartConfig::Instance()->GetCapacitance(); // nA_per_nF
            const double var_ICaL__xica = 2.0 * var_ICaL__jca * var_cell__wca; // nA_per_nF
            const double var_reversal_potentials__K_i = 140.0; // mM
            const double var_reversal_potentials__ek = 1.0 * log(var_Environment__K_o / var_reversal_potentials__K_i) / var_Environment__FonRT; // mV
            const double var_IK1__aki = 1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__cell__V - 0.23849999999999999 * var_reversal_potentials__ek)); // per_ms
            const double var_IK1__bki = (1.0 * exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__cell__V - 0.061749999999999999 * var_reversal_potentials__ek) + 0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__cell__V - 0.080320000000000003 * var_reversal_potentials__ek)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_reversal_potentials__ek - 0.51429999999999998 * var_chaste_interface__cell__V)); // per_ms
            const double var_IK1__xkin = var_IK1__aki / (var_IK1__aki + var_IK1__bki); // dimensionless
            const double var_IK1__xik1 = 0.43033148291193518 * sqrt(var_Environment__K_o) * (-var_reversal_potentials__ek + var_chaste_interface__cell__V) * var_IK1__gkix * var_IK1__xkin; // nA_per_nF
            const double var_IKr__xikr = 0.43033148291193518 * sqrt(var_Environment__K_o) * (-var_reversal_potentials__ek + var_chaste_interface__cell__V) * NV_Ith_S(mParameters, 0) * var_IKr__gkr * var_IKr__rg * var_chaste_interface__IKr__xr; // nA_per_nF
            const double var_Ito__xitof = (-var_reversal_potentials__ek + var_chaste_interface__cell__V) * var_Ito__gtof * var_chaste_interface__Ito__xtof * var_chaste_interface__Ito__ytof; // nA_per_nF
            const double var_Ito__xitos = (-var_reversal_potentials__ek + var_chaste_interface__cell__V) * (0.5 * var_Ito__rs_inf + var_chaste_interface__Ito__ytos) * NV_Ith_S(mParameters, 2) * var_Ito__gtos * var_chaste_interface__Ito__xtos; // nA_per_nF
            const double var_Ito__xito = var_Ito__xitof + var_Ito__xitos; // nA_per_nF
            const double var_reversal_potentials__prNaK = 0.018329999999999999; // dimensionless
            const double var_reversal_potentials__eks = 1.0 * log((var_Environment__Na_o * var_reversal_potentials__prNaK + var_Environment__K_o) / (var_chaste_interface__Na__Na_i * var_reversal_potentials__prNaK + var_reversal_potentials__K_i)) / var_Environment__FonRT; // mV
            const double var_IKs__xiks = (-var_reversal_potentials__eks + var_chaste_interface__cell__V) * NV_Ith_S(mParameters, 1) * var_IKs__gks * var_IKs__gksx * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2; // nA_per_nF
            const double var_cell__Itotal = -var_ICaL__xica - var_IK1__xik1 - var_IKr__xikr - var_IKs__xiks - var_INa__xina - var_INaCa__xiNaCa - var_INaK__xiNaK - var_Ito__xito - var_cell__i_Stim; // nA_per_nF
            d_dt_chaste_interface_var_cell__V = var_cell__Itotal; // mV / ms
        }
        
        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_cell__V;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_Ca__Ca_i_converted;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_INa__xm;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_INa__xh;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_INa__xj;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_ICaL__c1;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_ICaL__c2;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_ICaL__xi1ca;
        NV_Ith_S(rDY,8) = d_dt_chaste_interface_var_ICaL__xi1ba;
        NV_Ith_S(rDY,9) = d_dt_chaste_interface_var_ICaL__xi2ca;
        NV_Ith_S(rDY,10) = d_dt_chaste_interface_var_ICaL__xi2ba;
        NV_Ith_S(rDY,11) = d_dt_chaste_interface_var_IKr__xr;
        NV_Ith_S(rDY,12) = d_dt_chaste_interface_var_IKs__xs1;
        NV_Ith_S(rDY,13) = d_dt_chaste_interface_var_IKs__xs2;
        NV_Ith_S(rDY,14) = d_dt_chaste_interface_var_Ito__xtos;
        NV_Ith_S(rDY,15) = d_dt_chaste_interface_var_Ito__ytos;
        NV_Ith_S(rDY,16) = d_dt_chaste_interface_var_Ito__xtof;
        NV_Ith_S(rDY,17) = d_dt_chaste_interface_var_Ito__ytof;
        NV_Ith_S(rDY,18) = d_dt_chaste_interface_var_Irel__Ca_JSR;
        NV_Ith_S(rDY,19) = d_dt_chaste_interface_var_Irel__xir;
        NV_Ith_S(rDY,20) = d_dt_chaste_interface_var_Na__Na_i;
        NV_Ith_S(rDY,21) = d_dt_chaste_interface_var_Ca__Ca_dyad;
        NV_Ith_S(rDY,22) = d_dt_chaste_interface_var_Ca__Ca_submem;
        NV_Ith_S(rDY,23) = d_dt_chaste_interface_var_Ca__Ca_NSR;
        NV_Ith_S(rDY,24) = d_dt_chaste_interface_var_Ca__tropi;
        NV_Ith_S(rDY,25) = d_dt_chaste_interface_var_Ca__trops;
    }

    void Cellmahajan_2008FromCellMLCvode::EvaluateAnalyticJacobian(double var_chaste_interface__Environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: mV; Initial value: -87.169816169406
        double var_chaste_interface__Ca__Ca_i_converted = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.000256752008084
        double var_chaste_interface__INa__xm = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.001075453357
        double var_chaste_interface__INa__xh = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.990691306716
        double var_chaste_interface__INa__xj = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.993888937283
        double var_chaste_interface__ICaL__c1 = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 1.8211252e-05
        double var_chaste_interface__ICaL__c2 = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.979322592773
        double var_chaste_interface__ICaL__xi1ca = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.001208153482
        double var_chaste_interface__ICaL__xi1ba = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 3.3616596e-05
        double var_chaste_interface__ICaL__xi2ca = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.004173008466
        double var_chaste_interface__ICaL__xi2ba = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.015242594688
        double var_chaste_interface__IKr__xr = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.007074239331
        double var_chaste_interface__IKs__xs1 = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.048267587131
        double var_chaste_interface__IKs__xs2 = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.105468807033
        double var_chaste_interface__Ito__xtos = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.00364776906
        double var_chaste_interface__Ito__ytos = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.174403618112
        double var_chaste_interface__Ito__xtof = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.003643592594
        double var_chaste_interface__Ito__ytof = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 0.993331326442
        double var_chaste_interface__Irel__Ca_JSR = NV_Ith_S(rY, 18);
        // Units: uM; Initial value: 97.505463697266
        double var_chaste_interface__Irel__xir = NV_Ith_S(rY, 19);
        // Units: uM_per_ms; Initial value: 0.006679257264
        double var_chaste_interface__Na__Na_i = NV_Ith_S(rY, 20);
        // Units: mM; Initial value: 11.441712311614
        double var_chaste_interface__Ca__Ca_dyad = NV_Ith_S(rY, 21);
        // Units: uM; Initial value: 1.716573130685
        double var_chaste_interface__Ca__Ca_submem = NV_Ith_S(rY, 22);
        // Units: uM; Initial value: 0.226941113355
        double var_chaste_interface__Ca__Ca_NSR = NV_Ith_S(rY, 23);
        // Units: uM; Initial value: 104.450004990523
        double var_chaste_interface__Ca__tropi = NV_Ith_S(rY, 24);
        // Units: uM; Initial value: 22.171689894953
        double var_chaste_interface__Ca__trops = NV_Ith_S(rY, 25);
        // Units: uM; Initial value: 19.864701949854
        
        const double var_x0 = 1.0 - var_chaste_interface__ICaL__c1 - var_chaste_interface__ICaL__c2 - var_chaste_interface__ICaL__xi1ba - var_chaste_interface__ICaL__xi1ca - var_chaste_interface__ICaL__xi2ba - var_chaste_interface__ICaL__xi2ca;
        const double var_x1 = 0.075353936071760372 * var_chaste_interface__cell__V;
        const double var_x2 = exp(var_x1);
        const double var_x3 = var_x2 * var_chaste_interface__Ca__Ca_submem;
        const double var_x4 = var_x0 * var_x3;
        const double var_x5 = exp(6.4833277106546534 + 0.23849999999999999 * var_chaste_interface__cell__V);
        const double var_x6 = 1.0 + var_x5;
        const double var_x7 = 1 / var_x6;
        const double var_x8 = exp(-46.879352217986117 - 0.51429999999999998 * var_chaste_interface__cell__V);
        const double var_x9 = 1.0 + var_x8;
        const double var_x10 = 1 / var_x9;
        const double var_x11 = exp(-31.363518823866141 + 0.061749999999999999 * var_chaste_interface__cell__V);
        const double var_x12 = exp(7.3793810433533835 + 0.080320000000000003 * var_chaste_interface__cell__V);
        const double var_x13 = 1.0 * var_x11 + 0.49124000000000001 * var_x12;
        const double var_x14 = var_x10 * var_x13;
        const double var_x15 = 1 / (var_x14 + 1.02 * var_x7);
        const double var_x16 = 0.10000000000000001 * var_chaste_interface__cell__V;
        const double var_x17 = exp(3.3500000000000001 + var_x16);
        const double var_x18 = 1.0 + var_x17;
        const double var_x19 = 1 / var_x18;
        const double var_x20 = NV_Ith_S(mParameters, 2) * var_chaste_interface__Ito__xtos;
        const double var_x21 = pow(var_chaste_interface__INa__xm, 3);
        const double var_x22 = var_x21 * var_chaste_interface__INa__xj;
        const double var_x23 = 12.0 * var_x22;
        const double var_x24 = NV_Ith_S(mParameters, 0) * var_chaste_interface__IKr__xr;
        const double var_x25 = exp(1.4732142857142858 + 0.044642857142857144 * var_chaste_interface__cell__V);
        const double var_x26 = 1.0 + var_x25;
        const double var_x27 = 0.012500000000000001 / var_x26;
        const double var_x28 = 1 / var_chaste_interface__Ca__Ca_i_converted;
        const double var_x29 = pow(var_x28, 3.0);
        const double var_x30 = 1.0 + 1.2500000000000001e-10 * var_x29;
        const double var_x31 = -0.1386 - 0.11088000000000001 / var_x30;
        const double var_x32 = var_x31 * NV_Ith_S(mParameters, 1) * var_chaste_interface__IKs__xs2;
        const double var_x33 = var_x32 * var_chaste_interface__IKs__xs1;
        const double var_x34 = 86.398763985973389 + var_chaste_interface__cell__V;
        const double var_x35 = var_x5 / pow(var_x6, 2);
        const double var_x36 = pow(var_chaste_interface__Na__Na_i, 3.0);
        const double var_x37 = exp(0.013186938812558063 * var_chaste_interface__cell__V);
        const double var_x38 = var_x36 * var_x37;
        const double var_x39 = exp(-0.024490029223322121 * var_chaste_interface__cell__V);
        const double var_x40 = var_x39 * var_chaste_interface__Ca__Ca_submem;
        const double var_x41 = 1 / (12405.2022 + 4115.8113750000002 * var_chaste_interface__Ca__Ca_submem + 7.9663561662386391 * var_x36);
        const double var_x42 = 1.0 + 0.20000000000000001 * var_x39;
        const double var_x43 = 1 / var_x42;
        const double var_x44 = 1 / var_chaste_interface__Ca__Ca_submem;
        const double var_x45 = pow(var_x44, 3.0);
        const double var_x46 = 1.0 + 0.026999999999999996 * var_x45;
        const double var_x47 = 1 / var_x46;
        const double var_x48 = var_x43 * var_x47;
        const double var_x49 = var_x41 * var_x48;
        const double var_x50 = var_x49 * (0.023736489862604515 * var_x38 + 61.603590949980969 * var_x40);
        const double var_x51 = 1 / (12.0 + var_chaste_interface__Na__Na_i);
        const double var_x52 = exp(-0.0037676968035880187 * var_chaste_interface__cell__V);
        const double var_x53 = exp(2.0208023774145616);
        const double var_x54 = exp(-0.037676968035880186 * var_chaste_interface__cell__V);
        const double var_x55 = 1.0 + 0.1245 * var_x52 + 0.036499999999999998 * var_x54 * (-0.14285714285714285 + 0.14285714285714285 * var_x53);
        const double var_x56 = var_x51 * (0.00046907825204670832 * var_x52 + 0.037676968035880186 * var_x54 * (-0.0052142857142857138 + 0.0052142857142857138 * var_x53)) * var_chaste_interface__Na__Na_i / pow(var_x55, 2);
        const double var_x57 = 1.8 * var_x38 - 2515.4560000000001 * var_x40;
        const double var_x58 = var_x41 * var_x57;
        const double var_x59 = var_x39 * var_x47 * var_x58 / pow(var_x42, 2);
        const double var_x60 = -9.5038640384570741 - 0.11 * var_chaste_interface__cell__V;
        const double var_x61 = var_x20 * var_x60;
        const double var_x62 = var_x17 / pow(var_x18, 2);
        const double var_x63 = var_x33 - 6.7199999999999998 * var_x50 - 1.173913043478261 * var_x56 - 0.032914599276144929 * var_x59 + var_x20 * (-0.055 * var_x19 - 0.11 * var_chaste_interface__Ito__ytos) - var_x23 * var_chaste_interface__INa__xh - var_x24 * var_x27 - 0.040000000000000001 * var_chaste_interface__Ito__xtof * var_chaste_interface__Ito__ytof - 0.30599999999999999 * var_x15 * var_x7 - 0.050000000000000003 * var_x61 * var_x62 + 0.07298099999999999 * var_x15 * var_x34 * var_x35 + 0.00055803571428571436 * var_x24 * var_x25 * var_x34 / pow(var_x26, 2) - 0.29411764705882354 * var_x34 * var_x7 * (0.24326999999999999 * var_x35 - var_x10 * (0.061749999999999999 * var_x11 + 0.039456396800000001 * var_x12) - 0.51429999999999998 * var_x13 * var_x8 / pow(var_x9, 2)) / pow((var_x7 + 0.98039215686274506 * var_x14), 2);
        const double var_x64 = fabs(var_x1) < 0.001;
        const double var_x65 = -1.0 + var_x2;
        const double var_x66 = 1 / var_x65;
        const double var_x67 = -0.61380000000000001 + 0.001 * var_x3;
        const double var_x68 = var_x66 * var_x67;
        const double var_x69 = var_x0 * var_x68;
        const double var_x70 = var_x0 * var_x2;
        const double var_x71 = var_x67 * var_chaste_interface__cell__V / pow(var_x65, 2);
        const double var_x72 = var_x70 * var_x71;
        const double var_x73 = var_x66 * var_chaste_interface__cell__V;
        const double var_x74 = var_x4 * var_x73;
        const double var_x75 = -26.541413816729872 * log(7.8928799999999999 / (140.0 + 0.018329999999999999 * var_chaste_interface__Na__Na_i)) + var_chaste_interface__cell__V;
        const double var_x76 = var_x75 * NV_Ith_S(mParameters, 1) * var_chaste_interface__IKs__xs1;
        const double var_x77 = 1 / var_chaste_interface__Na__Na_i;
        const double var_x78 = -26.541413816729872 * log(136.0 * var_x77) + var_chaste_interface__cell__V;
        const double var_x79 = var_x78 * var_chaste_interface__INa__xh;
        const double var_x80 = var_x79 * pow(var_chaste_interface__INa__xm, 2) * var_chaste_interface__INa__xj;
        const double var_x81 = var_x21 * var_x79;
        const double var_x82 = var_x68 * var_chaste_interface__cell__V;
        const double var_x83 = ((var_x64) ? (-186.25303080883702 + 0.30344253960384004 * var_x3) : (22.865589730760373 * var_x82));
        const double var_x84 = -3.4559505594389357 - 0.040000000000000001 * var_chaste_interface__cell__V;
        const double var_x85 = 1 / var_x55;
        const double var_x86 = var_x51 * var_x85;
        const double var_x87 = var_x85 * var_chaste_interface__Na__Na_i / pow((1 + 0.083333333333333329 * var_chaste_interface__Na__Na_i), 2);
        const double var_x88 = var_x22 * var_x77 * var_chaste_interface__INa__xh;
        const double var_x89 = pow(var_chaste_interface__Na__Na_i, 2.0);
        const double var_x90 = var_x48 * var_x57 / pow((1 + 0.0006421786632577935 * var_x36 + 0.33178107931203249 * var_chaste_interface__Ca__Ca_submem), 2);
        const double var_x91 = var_x89 * var_x90;
        const double var_x92 = var_x37 * var_x49 * var_x89;
        const double var_x93 = var_x39 * var_x49;
        const double var_x94 = var_x43 * var_x44 * var_x45 * var_x58 / pow(var_x46, 2);
        const double var_x95 = 16903.864320000001 * var_x93 + 0.00017972853783688092 * var_x90 - 0.54431999999999992 * var_x94;
        const double var_x96 = var_x70 * var_x73;
        const double var_x97 = 32.700000000000003 * var_chaste_interface__Ca__tropi;
        const double var_x98 = pow(var_chaste_interface__Ca__Ca_i_converted, 2);
        const double var_x99 = 0.80000000000000004 * pow(var_chaste_interface__Ca__Ca_i_converted, 3) / pow((2.4999999999999999e-7 + var_x98), 2);
        const double var_x100 = pow(var_chaste_interface__Ca__Ca_NSR, 2);
        const double var_x101 = 1 / (2500.0 + var_x100);
        const double var_x102 = var_x100 * var_x101;
        const double var_x103 = 0.02069 * var_x102;
        const double var_x104 = 1 / (0.25 + 1000000.0 * var_x98);
        const double var_x105 = 800000.0 * var_x104 * var_chaste_interface__Ca__Ca_i_converted;
        const double var_x106 = 0.0070000000000000001 + var_chaste_interface__Ca__Ca_i_converted;
        const double var_x107 = 0.012999999999999999 + var_chaste_interface__Ca__Ca_i_converted;
        const double var_x108 = 0.00029999999999999997 + var_chaste_interface__Ca__Ca_i_converted;
        const double var_x109 = 0.00059999999999999995 + var_chaste_interface__Ca__Ca_i_converted;
        const double var_x110 = 1.0 + 0.00016799999999999999 / pow(var_x106, 2) + 0.00054599999999999994 / pow(var_x107, 2) + 4.4999999999999993e-6 / pow(var_x108, 2) + 2.8199999999999998e-5 / pow(var_x109, 2);
        const double var_x111 = 1 / var_x110;
        const double var_x112 = 0.001 * var_x111;
        const double var_x113 = 32.700000000000003 * var_chaste_interface__Ca__Ca_i_converted;
        const double var_x114 = 400000.0 * var_x104 * var_x98;
        const double var_x115 = 16.667000000000002 * var_chaste_interface__Ca__Ca_NSR - 1000.0 * var_chaste_interface__Ca__Ca_i_converted;
        const double var_x116 = 2.069e-5 * var_x102 * var_x115;
        const double var_x117 = 0.00034484023000000001 * var_x102;
        const double var_x118 = 4.138e-5 * var_x101 * var_x115 * var_chaste_interface__Ca__Ca_NSR;
        const double var_x119 = 6.6208000000000002e-12 * var_x115 * pow(var_chaste_interface__Ca__Ca_NSR, 3) / pow((1 + 0.00040000000000000002 * var_x100), 2);
        const double var_x120 = 1.0 - var_chaste_interface__INa__xm;
        const double var_x121 = -0.10000000000000001 * var_chaste_interface__cell__V;
        const double var_x122 = exp(-4.7130000000000001 + var_x121);
        const double var_x123 = 1.0 - var_x122;
        const double var_x124 = 0.32000000000000001 / var_x123;
        const double var_x125 = exp(-0.090909090909090912 * var_chaste_interface__cell__V);
        const double var_x126 = 0.0072727272727272727 * var_x125 * var_chaste_interface__INa__xm;
        const double var_x127 = 47.130000000000003 + var_chaste_interface__cell__V;
        const double var_x128 = fabs(var_x127) > 0.001;
        const double var_x129 = -0.080000000000000002 * var_x125;
        const double var_x130 = exp(0.079000000000000001 * var_chaste_interface__cell__V);
        const double var_x131 = exp(0.34999999999999998 * var_chaste_interface__cell__V);
        const double var_x132 = exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__cell__V);
        const double var_x133 = var_chaste_interface__cell__V < -40.0;
        const double var_x134 = exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__cell__V);
        const double var_x135 = 1.0 + var_x134;
        const double var_x136 = 1.0 - var_chaste_interface__INa__xj;
        const double var_x137 = exp(0.24440000000000001 * var_chaste_interface__cell__V);
        const double var_x138 = exp(-0.043909999999999998 * var_chaste_interface__cell__V);
        const double var_x139 = -127140.0 * var_x137 - 3.4740000000000003e-5 * var_x138;
        const double var_x140 = var_x136 * var_x139;
        const double var_x141 = exp(24.640530000000002 + 0.311 * var_chaste_interface__cell__V);
        const double var_x142 = 1.0 + var_x141;
        const double var_x143 = 1.0 / var_x142;
        const double var_x144 = exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__cell__V);
        const double var_x145 = 1.0 + var_x144;
        const double var_x146 = exp(-0.01052 * var_chaste_interface__cell__V);
        const double var_x147 = var_x146 / var_x145;
        const double var_x148 = 37.780000000000001 + var_chaste_interface__cell__V;
        const double var_x149 = var_x143 * var_x148;
        const double var_x150 = exp(-3.2000000000000002 + var_x121);
        const double var_x151 = 1.0 + var_x150;
        const double var_x152 = exp(-2.5349999999999999e-7 * var_chaste_interface__cell__V);
        const double var_x153 = var_x152 / var_x151;
        const double var_x154 = exp(-0.125 * var_chaste_interface__cell__V);
        const double var_x155 = 1.0 + var_x154;
        const double var_x156 = var_x154 / pow(var_x155, 2);
        const double var_x157 = 0.125 * var_x156;
        const double var_x158 = var_x157 * var_chaste_interface__ICaL__c1;
        const double var_x159 = 1 / var_x155;
        const double var_x160 = 1.0 * var_x159;
        const double var_x161 = 1 / var_chaste_interface__Ca__Ca_dyad;
        const double var_x162 = pow(var_x161, 3.0);
        const double var_x163 = 1 / (1.0 + 27.0 * var_x162);
        const double var_x164 = var_x161 * var_x162;
        const double var_x165 = var_x164 / pow((0.037037037037037035 + var_x162), 2);
        const double var_x166 = 0.002685333333333333 * var_x165 * var_chaste_interface__ICaL__c1;
        const double var_x167 = exp(-10.0 - 0.25 * var_chaste_interface__cell__V);
        const double var_x168 = 1.0 + var_x167;
        const double var_x169 = 1.0 - 1.0 / var_x168;
        const double var_x170 = exp(0.064102564102564111 * var_chaste_interface__cell__V);
        const double var_x171 = 4954.0 * var_x170;
        const double var_x172 = -440.0 + var_x171;
        const double var_x173 = var_x169 * var_x172;
        const double var_x174 = 1 / (450.0 + var_x173);
        const double var_x175 = exp(-3.5335689045936394 - 0.088339222614840993 * var_chaste_interface__cell__V);
        const double var_x176 = 1.0 + var_x175;
        const double var_x177 = 0.088339222614840993 * var_x175 / pow(var_x176, 2);
        const double var_x178 = var_x174 * var_x177;
        const double var_x179 = 1 / var_x176;
        const double var_x180 = -317.5641025641026 * var_x169 * var_x170;
        const double var_x181 = 0.25 * var_x167 / pow(var_x168, 2);
        const double var_x182 = 4.9382716049382717e-6 * (var_x180 + var_x172 * var_x181) / pow((1 + 0.0022222222222222222 * var_x173), 2);
        const double var_x183 = var_x179 * var_x182;
        const double var_x184 = 1.0 + 0.00072525373756441506 * pow(var_chaste_interface__Ca__Ca_dyad, 4.0);
        const double var_x185 = 1 / var_x184;
        const double var_x186 = 78.032899999999998 * var_x185;
        const double var_x187 = 9.9000000000000004 + var_x171 - var_x186;
        const double var_x188 = var_x169 * var_x187;
        const double var_x189 = 1 / (0.10000000000000001 + var_x186 + var_x188);
        const double var_x190 = var_x163 * var_x189;
        const double var_x191 = var_x177 * var_x190;
        const double var_x192 = 0.00016422697956757767 / pow((0.0012815107473898831 + var_x185 + 0.012815107473898831 * var_x188), 2);
        const double var_x193 = var_x192 * (var_x180 + var_x181 * var_x187);
        const double var_x194 = var_x163 * var_x179;
        const double var_x195 = var_x193 * var_x194;
        const double var_x196 = 1.0 * var_x179;
        const double var_x197 = 1.0 - var_x196;
        const double var_x198 = var_x182 * var_x197;
        const double var_x199 = var_x193 * var_x197;
        const double var_x200 = var_x177 * var_x189;
        const double var_x201 = -var_x160;
        const double var_x202 = 1.0 + var_x201;
        const double var_x203 = var_x174 * var_x196;
        const double var_x204 = var_x190 * var_x196;
        const double var_x205 = var_x189 * var_x197;
        const double var_x206 = var_x174 * var_x197;
        const double var_x207 = 0.22637460951196098 * pow(var_chaste_interface__Ca__Ca_dyad, 3.0) / pow(var_x184, 2);
        const double var_x208 = var_x192 * (var_x207 - var_x169 * var_x207);
        const double var_x209 = var_x194 * var_x208;
        const double var_x210 = 0.1111111111111111 * var_x165 * var_x179 * var_x189;
        const double var_x211 = var_x197 * var_chaste_interface__ICaL__xi2ca;
        const double var_x212 = var_x208 * var_x211;
        const double var_x213 = exp(-13.333333333333334 - 0.33333333333333331 * var_chaste_interface__cell__V);
        const double var_x214 = 1.0 + var_x213;
        const double var_x215 = var_x213 / pow(var_x214, 2);
        const double var_x216 = 0.1111111111111111 * var_x215;
        const double var_x217 = var_x216 * var_chaste_interface__ICaL__xi1ca;
        const double var_x218 = 0.33333333333333331 / var_x214;
        const double var_x219 = 0.33333333333333331 - var_x218;
        const double var_x220 = 1 / var_x202;
        const double var_x221 = var_x159 * var_x220;
        const double var_x222 = var_x175 * var_x219 * var_x221;
        const double var_x223 = 20.604954226274931 * var_x222;
        const double var_x224 = var_x179 * var_x223;
        const double var_x225 = var_x156 * var_x220;
        const double var_x226 = var_x176 * var_x219;
        const double var_x227 = 29.156010230179024 * var_x211 * var_x226;
        const double var_x228 = var_x154 / (pow(var_x155, 3) * pow(var_x202, 2));
        const double var_x229 = -0.018268800000000002 * var_x163;
        const double var_x230 = 41.377027474346242 + 1117.1797418073486 * var_x162;
        const double var_x231 = var_x197 * var_x226;
        const double var_x232 = var_x221 * var_x231;
        const double var_x233 = 233.2480818414322 * var_x232;
        const double var_x234 = var_x216 * var_chaste_interface__ICaL__xi1ba;
        const double var_x235 = 0.16287544169611309 * var_x222;
        const double var_x236 = var_x179 * var_x235;
        const double var_x237 = var_x197 * var_x235;
        const double var_x238 = 0.23046875000000003 * var_x231;
        const double var_x239 = var_x225 * var_x238;
        const double var_x240 = var_x228 * var_x238;
        const double var_x241 = var_x176 * var_x197 * var_x215 * var_x221;
        const double var_x242 = 0.20486111111111113 * var_x241;
        const double var_x243 = 1.8437500000000002 * var_x232;
        const double var_x244 = 29.156010230179024 * var_x231;
        const double var_x245 = exp(-6.666666666666667 - 0.13333333333333333 * var_chaste_interface__cell__V);
        const double var_x246 = 1.0 + var_x245;
        const double var_x247 = -var_chaste_interface__IKr__xr + 1.0 / var_x246;
        const double var_x248 = exp(-0.86099999999999999 - 0.123 * var_chaste_interface__cell__V);
        const double var_x249 = 1.0 - var_x248;
        const double var_x250 = 0.0013799999999999999 / var_x249;
        const double var_x251 = 7.0 + var_chaste_interface__cell__V;
        const double var_x252 = var_x250 - 0.00016973999999999998 * var_x248 * var_x251 / pow(var_x249, 2);
        const double var_x253 = exp(1.45 + 0.14499999999999999 * var_chaste_interface__cell__V);
        const double var_x254 = -1.0 + var_x253;
        const double var_x255 = 0.00060999999999999997 / var_x254;
        const double var_x256 = 10.0 + var_chaste_interface__cell__V;
        const double var_x257 = var_x255 - 8.8449999999999995e-5 * var_x253 * var_x256 / pow(var_x254, 2);
        const double var_x258 = var_x255 * var_x256;
        const double var_x259 = var_x250 * var_x251;
        const double var_x260 = var_x245 / pow(var_x246, 2);
        const double var_x261 = 0.13333333333333333 * var_x260;
        const double var_x262 = fabs(var_x251) > 0.001;
        const double var_x263 = fabs(var_x256) > 0.001;
        const double var_x264 = (var_x262) && (var_x263);
        const double var_x265 = -var_x258;
        const double var_x266 = -var_x259;
        const double var_x267 = exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__cell__V);
        const double var_x268 = 1.0 + var_x267;
        const double var_x269 = var_x267 / pow(var_x268, 2);
        const double var_x270 = 30.0 + var_chaste_interface__cell__V;
        const double var_x271 = fabs(var_x270) < 0.014556040756914121;
        const double var_x272 = 1.0 / var_x268;
        const double var_x273 = exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__cell__V);
        const double var_x274 = -1.0 + var_x273;
        const double var_x275 = 1 / var_x274;
        const double var_x276 = 0.00013100000000000001 * var_x275;
        const double var_x277 = exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__cell__V);
        const double var_x278 = 1.0 - var_x277;
        const double var_x279 = 1 / var_x278;
        const double var_x280 = 7.1899999999999999e-5 * var_x279;
        const double var_x281 = var_x270 * var_x273 / pow(var_x274, 2);
        const double var_x282 = var_x270 * var_x277 / pow(var_x278, 2);
        const double var_x283 = var_x270 * var_x276;
        const double var_x284 = var_x270 * var_x280;
        const double var_x285 = 0.059880239520958084 * var_x269;
        const double var_x286 = 3.2750000000000003e-5 * var_x275;
        const double var_x287 = 1.7975e-5 * var_x279;
        const double var_x288 = var_x270 * var_x286;
        const double var_x289 = var_x270 * var_x287;
        const double var_x290 = 0.066666666666666666 * var_chaste_interface__cell__V;
        const double var_x291 = exp(0.20000000000000001 + var_x290);
        const double var_x292 = 1.0 + var_x291;
        const double var_x293 = 1 / var_x292;
        const double var_x294 = 1 / (0.5 + 9.0 * var_x293);
        const double var_x295 = exp(-0.20000000000000001 - var_x290);
        const double var_x296 = 1.0 + var_x295;
        const double var_x297 = 0.066666666666666666 * var_x295 / pow(var_x296, 2);
        const double var_x298 = 1.0 / var_x296;
        const double var_x299 = exp(6.0 + var_x16);
        const double var_x300 = 1.0 + var_x299;
        const double var_x301 = 1 / var_x300;
        const double var_x302 = 1 / (30.0 + 3000.0 * var_x301);
        const double var_x303 = 0.10000000000000001 * var_x62;
        const double var_x304 = 1.0 * var_x19;
        const double var_x305 = exp(-0.0011111111111111111 * pow(var_chaste_interface__cell__V, 2));
        const double var_x306 = 1 / (1.5 + 3.5 * var_x305);
        const double var_x307 = 1 / (20.0 + 20.0 * var_x19);
        const double var_x308 = -50.0 + 1.0 * var_chaste_interface__Irel__Ca_JSR;
        const double var_x309 = -0.063960518821716009 + 0.00010420416882000001 * var_x3;
        const double var_x310 = fabs(var_x309);
        const double var_x311 = var_x310 * var_chaste_interface__Ca__Ca_NSR;
        const double var_x312 = var_x308 * var_x311;
        const double var_x313 = var_x0 * var_x312;
        const double var_x314 = 0.0014337722222222222 * var_x313;
        const double var_x315 = exp(-1.5 - 0.050000000000000003 * var_chaste_interface__cell__V);
        const double var_x316 = 1.0 + var_x315;
        const double var_x317 = pow(var_x315, 2) / pow(var_x316, 2);
        const double var_x318 = var_x315 / var_x316;
        const double var_x319 = Signum(var_x309);
        const double var_x320 = var_x319 * var_chaste_interface__Ca__Ca_NSR;
        const double var_x321 = var_x320 * var_x4;
        const double var_x322 = var_x308 * var_x318;
        const double var_x323 = 2.2516516071905168e-7 * var_x322;
        const double var_x324 = var_chaste_interface__Irel__Ca_JSR > 50.0;
        const double var_x325 = var_chaste_interface__Irel__Ca_JSR < 90.0;
        const double var_x326 = (var_x324) && (var_x325) && (var_x64);
        const double var_x327 = 0.0014337722222222222 * var_x317;
        const double var_x328 = -977.00000000000011 + 11.300000000000001 * var_chaste_interface__Irel__Ca_JSR;
        const double var_x329 = var_x0 * var_x311;
        const double var_x330 = var_x328 * var_x329;
        const double var_x331 = 0.0014337722222222222 * var_x318;
        const double var_x332 = var_x318 * var_x328;
        const double var_x333 = 2.2516516071905168e-7 * var_x332;
        const double var_x334 = var_chaste_interface__Irel__Ca_JSR >= 90.0;
        const double var_x335 = (var_x334) && (var_x64);
        const double var_x336 = 0.0078521942756732046 * var_x68;
        const double var_x337 = fabs(var_x336 * var_chaste_interface__cell__V);
        const double var_x338 = var_x337 * var_chaste_interface__Ca__Ca_NSR;
        const double var_x339 = var_x0 * var_x338;
        const double var_x340 = var_x308 * var_x339;
        const double var_x341 = 0.028675444444444444 * var_x318;
        const double var_x342 = var_x308 * var_x341;
        const double var_x343 = var_x336 + 5.916937454721214e-7 * var_x3 * var_x73 - 0.00059169374547212144 * var_x2 * var_x71;
        const double var_x344 = Signum(var_x82);
        const double var_x345 = var_x344 * var_chaste_interface__Ca__Ca_NSR;
        const double var_x346 = var_x0 * var_x343 * var_x345;
        const double var_x347 = (var_x324) && (var_x325);
        const double var_x348 = var_x328 * var_x339;
        const double var_x349 = var_x328 * var_x341;
        const double var_x350 = var_x103 + var_x105 - var_x99;
        const double var_x351 = 1.0 / var_chaste_interface__Ca__Ca_NSR;
        const double var_x352 = var_x351 * var_chaste_interface__Irel__xir;
        const double var_x353 = ((var_x326) ? (-var_x312 * var_x341) : ((var_x335) ? (-var_x311 * var_x349) : ((var_x64) ? (0) : ((var_x347) ? (-var_x338 * var_x342) : ((var_x334) ? (-var_x338 * var_x349) : (0))))));
        const double var_x354 = 0.32403252222222223 * var_x318;
        const double var_x355 = var_x114 - var_x116 - var_chaste_interface__Irel__xir;
        const double var_x356 = var_x320 * var_x70;
        const double var_x357 = 2.9881008538774201e-6 * var_x356;
        const double var_x358 = var_x345 * var_x96;
        const double var_x359 = var_x119 - var_x117 - var_x118;
        const double var_x360 = (var_x351 * var_x359 - 1.0 * var_x355 / var_x100) * var_chaste_interface__Irel__xir;
        const double var_x361 = var_x0 * var_x310;
        const double var_x362 = var_x0 * var_x337;
        const double var_x363 = 0.0015 * var_x22;
        const double var_x364 = 9000.0 - 9000.0 * var_chaste_interface__ICaL__c1 - 9000.0 * var_chaste_interface__ICaL__c2 - 9000.0 * var_chaste_interface__ICaL__xi1ba - 9000.0 * var_chaste_interface__ICaL__xi1ca - 9000.0 * var_chaste_interface__ICaL__xi2ba - 9000.0 * var_chaste_interface__ICaL__xi2ca;
        const double var_x365 = var_x319 * var_x364;
        const double var_x366 = 7.8521942756732062e-6 * var_x3 * var_x365;
        const double var_x367 = 106.65141866666666 * var_x313;
        const double var_x368 = exp(-10.728 - 0.35759999999999997 * var_chaste_interface__cell__V);
        const double var_x369 = 1.0 + var_x368;
        const double var_x370 = pow(var_x368, 2) / pow(var_x369, 2);
        const double var_x371 = var_x368 / var_x369;
        const double var_x372 = var_x308 * var_x371;
        const double var_x373 = 0.0023418558700973894 * var_x321;
        const double var_x374 = 106.65141866666666 * var_x330;
        const double var_x375 = var_x328 * var_x371;
        const double var_x376 = var_x344 * var_x364;
        const double var_x377 = var_x343 * var_x376;
        const double var_x378 = 106.65141866666666 * var_x340;
        const double var_x379 = 298.24222222222221 * var_x371;
        const double var_x380 = var_x308 * var_x379;
        const double var_x381 = 106.65141866666666 * var_x348;
        const double var_x382 = var_x328 * var_x379;
        const double var_x383 = -9000.0 * var_x310;
        const double var_x384 = -9000.0 * var_x337;
        const double var_x385 = ((var_x326) ? (var_x383 - var_x312 * var_x379) : ((var_x335) ? (var_x383 - var_x311 * var_x382) : ((var_x64) ? (var_x383) : ((var_x347) ? (var_x384 - var_x338 * var_x380) : ((var_x334) ? (var_x384 - var_x338 * var_x382) : (var_x384))))));
        const double var_x386 = 3370.1371111111112 * var_x371;
        const double var_x387 = 0.0310780828736964 * var_x356;
        const double var_x388 = 2.0 + 0.00010420416882000001 * var_x2 * var_x365;
        const double var_x389 = 0.0023418558700973894 * var_x358;
        const double var_x390 = 2.0 + 7.8521942756732062e-6 * var_x2 * var_x376 * var_x73;
        const double var_x391 = 42.0 * var_x50 + 0.20571624547590581 * var_x59;
        const double var_x392 = 0.29999999999999999 + var_chaste_interface__Ca__Ca_submem;
        const double var_x393 = pow(var_x392, (-2));
        const double var_x394 = 1 + 0.076923076923076927 * var_chaste_interface__Ca__Ca_submem;
        const double var_x395 = pow(var_x394, (-2));
        const double var_x396 = 0.59999999999999998 + var_chaste_interface__Ca__Ca_submem;
        const double var_x397 = pow(var_x396, (-2));
        const double var_x398 = 1 + 0.14285714285714285 * var_chaste_interface__Ca__Ca_submem;
        const double var_x399 = pow(var_x398, (-2));
        const double var_x400 = 1 / (1.0 + 4.5 * var_x393 + 3.2307692307692308 * var_x395 + 28.199999999999999 * var_x397 + 3.4285714285714284 * var_x399);
        const double var_x401 = 1.0 * var_x400;
        const double var_x402 = 71.454967908626173 * var_x82;
        const double var_x403 = ((var_x64) ? (var_x401 * (-582.04072127761572 + 0.94825793626200006 * var_x3)) : (var_x400 * var_x402));
        const double var_x404 = 0.0327 * var_chaste_interface__Ca__trops;
        const double var_x405 = -14.789 + var_x404 + 3.4019999999999997 * var_x94 - 0.0011233033614805057 * var_x90 - 105649.152 * var_x93;
        const double var_x406 = 0.0327 * var_chaste_interface__Ca__Ca_submem;
        const double var_x407 = 50.0 * var_chaste_interface__Irel__xir + 12500.0 * var_chaste_interface__Ca__Ca_i_converted + 0.019599999999999999 * var_chaste_interface__Ca__trops - 12.5 * var_chaste_interface__Ca__Ca_submem - var_x406 * (70.0 - var_chaste_interface__Ca__trops) + 42.0 * var_x49 * var_x57;
        const double var_x408 = 0.0012574820180071425 * (9.0 / pow(var_x392, 3) + 56.399999999999999 / pow(var_x396, 3) + 0.97959183673469385 / pow(var_x398, 3) + 0.49704142011834318 / pow(var_x394, 3)) / pow((0.035460992907801421 + var_x397 + 0.15957446808510639 * var_x393 + 0.12158054711246201 * var_x399 + 0.11456628477905074 * var_x395), 2);
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = mSetVoltageDerivativeToZero ? 0.0 : (((var_x64) ? (var_x63 - 0.022865589730760374 * var_x4) : (var_x63 + 1.7230121868148176 * var_x72 - 22.865589730760373 * var_x69 - 0.0017230121868148176 * var_x74)));
        IJth(rJacobian, 2, 0) = ((var_x128) ? (var_x126 + var_x120 * var_x124 - 0.032000000000000001 * var_x120 * var_x122 * var_x127 / pow(var_x123, 2)) : (var_x126));
        IJth(rJacobian, 3, 0) = ((var_x133) ? ((-0.28123999999999999 * var_x130 - 108500.0 * var_x131) * var_chaste_interface__INa__xh - 0.14705882352941177 * var_x132 * (0.13500000000000001 - 0.13500000000000001 * var_chaste_interface__INa__xh)) : (-0.693000693000693 * var_x134 * var_chaste_interface__INa__xh / pow(var_x135, 2)));
        IJth(rJacobian, 4, 0) = ((var_x133) ? (var_x140 * var_x143 + 0.001275024 * var_x147 * var_chaste_interface__INa__xj + var_x136 * var_x149 * (1.5254334000000001e-6 * var_x138 - 31073.016 * var_x137) - 0.311 * var_x140 * var_x141 * var_x148 / pow(var_x142, 2) - 0.016701360000000002 * var_x144 * var_x146 * var_chaste_interface__INa__xj / pow(var_x145, 2)) : (7.6049999999999996e-8 * var_x153 * var_chaste_interface__INa__xj - 0.029999999999999999 * var_x150 * var_x152 * var_chaste_interface__INa__xj / pow(var_x151, 2)));
        IJth(rJacobian, 5, 0) = var_x158 + var_x157 * var_chaste_interface__ICaL__c2;
        IJth(rJacobian, 6, 0) = -var_x158 + var_x198 * var_chaste_interface__ICaL__xi2ba + var_x199 * var_chaste_interface__ICaL__xi2ca + (-var_x157 - var_x178 - var_x183 - var_x191 - var_x195) * var_chaste_interface__ICaL__c2 - var_x178 * var_chaste_interface__ICaL__xi2ba - var_x200 * var_chaste_interface__ICaL__xi2ca;
        IJth(rJacobian, 7, 0) = var_x217 + var_x225 * var_x227 + var_x227 * var_x228 - var_x211 * var_x223 - var_x224 * var_chaste_interface__ICaL__xi2ca - 25.91645353793691 * var_x176 * var_x211 * var_x215 * var_x221;
        IJth(rJacobian, 8, 0) = var_x234 + var_x239 * var_chaste_interface__ICaL__xi2ba + var_x240 * var_chaste_interface__ICaL__xi2ba - var_x236 * var_chaste_interface__ICaL__xi2ba - var_x237 * var_chaste_interface__ICaL__xi2ba - var_x242 * var_chaste_interface__ICaL__xi2ba;
        IJth(rJacobian, 9, 0) = -var_x217 + var_x191 * var_chaste_interface__ICaL__c2 + var_x195 * var_chaste_interface__ICaL__c2 + (var_x200 + var_x224 - var_x199 + 25.91645353793691 * var_x241 + var_x197 * var_x223 - var_x225 * var_x244 - var_x228 * var_x244) * var_chaste_interface__ICaL__xi2ca;
        IJth(rJacobian, 10, 0) = -var_x234 + var_x178 * var_chaste_interface__ICaL__c2 + var_x183 * var_chaste_interface__ICaL__c2 + (var_x178 + var_x236 + var_x237 + var_x242 - var_x198 - var_x239 - var_x240) * var_chaste_interface__ICaL__xi2ba;
        IJth(rJacobian, 11, 0) = ((var_x264) ? (var_x247 * (var_x252 + var_x257) + var_x261 * (var_x258 + var_x259)) : ((var_x262) ? (var_x247 * var_x252 + var_x261 * (0.0042068965517241376 + var_x259)) : ((var_x263) ? (var_x247 * var_x257 + var_x261 * (0.011219512195121951 + var_x258)) : (0.0020568544995794784 * var_x260))));
        IJth(rJacobian, 12, 0) = ((var_x271) ? (0.00014327258383033299 * var_x269) : (var_x285 * (var_x283 + var_x284) + (var_x272 - var_chaste_interface__IKs__xs1) * (var_x276 + var_x280 - 8.9997000000000013e-6 * var_x281 - 1.0641199999999999e-5 * var_x282)));
        IJth(rJacobian, 13, 0) = ((var_x271) ? (3.5818145957583247e-5 * var_x269) : (var_x285 * (var_x288 + var_x289) + (var_x272 - var_chaste_interface__IKs__xs2) * (var_x286 + var_x287 - 2.2499250000000003e-6 * var_x281 - 2.6602999999999998e-6 * var_x282)));
        IJth(rJacobian, 14, 0) = var_x294 * var_x297 + 0.0074074074074074077 * var_x291 * (var_x298 - var_chaste_interface__Ito__xtos) / (pow(var_x292, 2) * pow((0.055555555555555552 + var_x293), 2));
        IJth(rJacobian, 15, 0) = -var_x302 * var_x303 + 3.3333333333333335e-5 * var_x299 * (var_x304 - var_chaste_interface__Ito__ytos) / (pow(var_x300, 2) * pow((0.01 + var_x301), 2));
        IJth(rJacobian, 16, 0) = var_x297 * var_x306 + 0.00063492063492063492 * var_x305 * (var_x298 - var_chaste_interface__Ito__xtof) * var_chaste_interface__cell__V / pow((0.42857142857142855 + var_x305), 2);
        IJth(rJacobian, 17, 0) = -var_x303 * var_x307 + 0.0050000000000000001 * var_x62 * (var_x304 - var_chaste_interface__Ito__ytof) / pow((1 + var_x19), 2);
        IJth(rJacobian, 19, 0) = ((var_x326) ? (var_x314 * var_x317 + var_x321 * var_x323 - var_x314 * var_x318) : ((var_x335) ? (var_x321 * var_x333 + var_x327 * var_x330 - var_x330 * var_x331) : ((var_x64) ? (0) : ((var_x347) ? (var_x327 * var_x340 + var_x342 * var_x346 - var_x331 * var_x340) : ((var_x334) ? (var_x327 * var_x348 + var_x346 * var_x349 - var_x331 * var_x348) : (0))))));
        IJth(rJacobian, 20, 0) = -1.2342974728554348e-5 * var_x59 - 0.0025200000000000001 * var_x50 - 0.00044021739130434783 * var_x56 - var_x363 * var_chaste_interface__INa__xh;
        IJth(rJacobian, 21, 0) = ((var_x326) ? (var_x366 + var_x367 * var_x370 + var_x372 * var_x373 - var_x367 * var_x371) : ((var_x335) ? (var_x366 + var_x370 * var_x374 + var_x373 * var_x375 - var_x371 * var_x374) : ((var_x64) ? (var_x366) : ((var_x347) ? (var_x377 + var_x346 * var_x380 + var_x370 * var_x378 - var_x371 * var_x378) : ((var_x334) ? (var_x377 + var_x346 * var_x382 + var_x370 * var_x381 - var_x371 * var_x381) : (var_x377))))));
        IJth(rJacobian, 22, 0) = ((var_x64) ? (var_x401 * (var_x391 - 0.071454967908626169 * var_x4)) : (var_x401 * (var_x391 + 5.3844130837963045 * var_x72 - 0.0053844130837963052 * var_x74 - 71.454967908626173 * var_x69)));
        IJth(rJacobian, 0, 1) = mSetVoltageDerivativeToZero ? 0.0 : (-4.1580000000000007e-11 * var_x28 * var_x29 * var_x76 * var_chaste_interface__IKs__xs2 / pow(var_x30, 2));
        IJth(rJacobian, 1, 1) = var_x112 * (-2539.0 + var_x97 + var_x99 - var_x103 - var_x105) + 0.001 * (0.00033599999999999998 / pow(var_x106, 3) + 0.0010919999999999999 / pow(var_x107, 3) + 8.9999999999999985e-6 / pow(var_x108, 3) + 5.6399999999999995e-5 / pow(var_x109, 3)) * (var_x116 - var_x114 + 0.25 * var_chaste_interface__Ca__Ca_submem + 0.019599999999999999 * var_chaste_interface__Ca__tropi - 250.0 * var_chaste_interface__Ca__Ca_i_converted - var_x113 * (70.0 - var_chaste_interface__Ca__tropi)) / pow(var_x110, 2);
        IJth(rJacobian, 19, 1) = var_x350 * var_x352;
        IJth(rJacobian, 22, 1) = 12500.0 * var_x400;
        IJth(rJacobian, 23, 1) = var_x350;
        IJth(rJacobian, 24, 1) = 2289.0 - var_x97;
        IJth(rJacobian, 0, 2) = mSetVoltageDerivativeToZero ? 0.0 : (-36.0 * var_x80);
        IJth(rJacobian, 2, 2) = ((var_x128) ? (var_x129 - var_x124 * var_x127) : (-3.2000000000000002 + var_x129));
        IJth(rJacobian, 20, 2) = -0.0044999999999999997 * var_x80;
        IJth(rJacobian, 0, 3) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x23 * var_x78);
        IJth(rJacobian, 3, 3) = ((var_x133) ? (-310000.0 * var_x131 - 0.13500000000000001 * var_x132 - 3.5600000000000001 * var_x130) : (-7.6923076923076916 / var_x135));
        IJth(rJacobian, 20, 3) = -var_x363 * var_x78;
        IJth(rJacobian, 0, 4) = mSetVoltageDerivativeToZero ? 0.0 : (-12.0 * var_x81);
        IJth(rJacobian, 4, 4) = ((var_x133) ? (-0.1212 * var_x147 - var_x139 * var_x149) : (-0.29999999999999999 * var_x153));
        IJth(rJacobian, 20, 4) = -0.0015 * var_x81;
        IJth(rJacobian, 0, 5) = mSetVoltageDerivativeToZero ? 0.0 : (var_x83);
        IJth(rJacobian, 5, 5) = -4.3041299999999998 + var_x160 - 0.024167999999999999 * var_x163;
        IJth(rJacobian, 6, 5) = var_x202;
        IJth(rJacobian, 7, 5) = 0.0058991999999999968 * var_x163;
        IJth(rJacobian, 8, 5) = 0.0021800000000000001;
        IJth(rJacobian, 19, 5) = var_x353;
        IJth(rJacobian, 21, 5) = var_x385;
        IJth(rJacobian, 22, 5) = var_x403;
        IJth(rJacobian, 0, 6) = mSetVoltageDerivativeToZero ? 0.0 : (var_x83);
        IJth(rJacobian, 5, 6) = -3.0 + var_x160;
        IJth(rJacobian, 6, 6) = var_x201 - var_x203 - var_x204;
        IJth(rJacobian, 7, 6) = var_x229;
        IJth(rJacobian, 8, 6) = -0.0019499999999999999;
        IJth(rJacobian, 9, 6) = var_x204;
        IJth(rJacobian, 10, 6) = var_x203;
        IJth(rJacobian, 19, 6) = var_x353;
        IJth(rJacobian, 21, 6) = var_x385;
        IJth(rJacobian, 22, 6) = var_x403;
        IJth(rJacobian, 0, 7) = mSetVoltageDerivativeToZero ? 0.0 : (var_x83);
        IJth(rJacobian, 5, 7) = -2.999896385;
        IJth(rJacobian, 7, 7) = -0.33343694833333332 + var_x218 + var_x229 - 1.8929217120000003e-7 * var_x163 * var_x230;
        IJth(rJacobian, 8, 7) = -0.0019499999999999999;
        IJth(rJacobian, 9, 7) = var_x219;
        IJth(rJacobian, 19, 7) = var_x353;
        IJth(rJacobian, 21, 7) = var_x385;
        IJth(rJacobian, 22, 7) = var_x403;
        IJth(rJacobian, 0, 8) = mSetVoltageDerivativeToZero ? 0.0 : (var_x83);
        IJth(rJacobian, 5, 8) = -2.99776;
        IJth(rJacobian, 7, 8) = var_x229;
        IJth(rJacobian, 8, 8) = -0.33762909604519775 + var_x218;
        IJth(rJacobian, 10, 8) = var_x219;
        IJth(rJacobian, 19, 8) = var_x353;
        IJth(rJacobian, 21, 8) = var_x385;
        IJth(rJacobian, 22, 8) = var_x403;
        IJth(rJacobian, 0, 9) = mSetVoltageDerivativeToZero ? 0.0 : (var_x83);
        IJth(rJacobian, 5, 9) = -3.0;
        IJth(rJacobian, 6, 9) = var_x205;
        IJth(rJacobian, 7, 9) = var_x229 + var_x233;
        IJth(rJacobian, 8, 9) = -0.0019499999999999999;
        IJth(rJacobian, 9, 9) = -var_x205 - var_x233;
        IJth(rJacobian, 19, 9) = var_x353;
        IJth(rJacobian, 21, 9) = var_x385;
        IJth(rJacobian, 22, 9) = var_x403;
        IJth(rJacobian, 0, 10) = mSetVoltageDerivativeToZero ? 0.0 : (var_x83);
        IJth(rJacobian, 5, 10) = -3.0;
        IJth(rJacobian, 6, 10) = var_x206;
        IJth(rJacobian, 7, 10) = var_x229;
        IJth(rJacobian, 8, 10) = -0.0019499999999999999 + var_x243;
        IJth(rJacobian, 10, 10) = -var_x206 - var_x243;
        IJth(rJacobian, 19, 10) = var_x353;
        IJth(rJacobian, 21, 10) = var_x385;
        IJth(rJacobian, 22, 10) = var_x403;
        IJth(rJacobian, 0, 11) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x27 * var_x34 * NV_Ith_S(mParameters, 0));
        IJth(rJacobian, 11, 11) = ((var_x264) ? (var_x265 + var_x266) : ((var_x262) ? (-0.0042068965517241376 + var_x266) : ((var_x263) ? (-0.011219512195121951 + var_x265) : (-0.015426408746846089))));
        IJth(rJacobian, 0, 12) = mSetVoltageDerivativeToZero ? 0.0 : (var_x32 * var_x75);
        IJth(rJacobian, 12, 12) = ((var_x271) ? (-0.0023926521499665608) : (-var_x283 - var_x284));
        IJth(rJacobian, 0, 13) = mSetVoltageDerivativeToZero ? 0.0 : (var_x31 * var_x76);
        IJth(rJacobian, 13, 13) = ((var_x271) ? (-0.00059816303749164019) : (-var_x288 - var_x289));
        IJth(rJacobian, 0, 14) = mSetVoltageDerivativeToZero ? 0.0 : (var_x60 * (0.5 * var_x19 + var_chaste_interface__Ito__ytos) * NV_Ith_S(mParameters, 2));
        IJth(rJacobian, 14, 14) = -var_x294;
        IJth(rJacobian, 0, 15) = mSetVoltageDerivativeToZero ? 0.0 : (var_x61);
        IJth(rJacobian, 15, 15) = -var_x302;
        IJth(rJacobian, 0, 16) = mSetVoltageDerivativeToZero ? 0.0 : (var_x84 * var_chaste_interface__Ito__ytof);
        IJth(rJacobian, 16, 16) = -var_x306;
        IJth(rJacobian, 0, 17) = mSetVoltageDerivativeToZero ? 0.0 : (var_x84 * var_chaste_interface__Ito__xtof);
        IJth(rJacobian, 17, 17) = -var_x307;
        IJth(rJacobian, 18, 18) = -0.01;
        IJth(rJacobian, 19, 18) = ((var_x326) ? (var_x329 * var_x341) : ((var_x335) ? (var_x329 * var_x354) : ((var_x64) ? (0) : ((var_x347) ? (var_x339 * var_x341) : ((var_x334) ? (var_x339 * var_x354) : (0))))));
        IJth(rJacobian, 21, 18) = ((var_x326) ? (var_x329 * var_x379) : ((var_x335) ? (var_x329 * var_x386) : ((var_x64) ? (0) : ((var_x347) ? (var_x339 * var_x379) : ((var_x334) ? (var_x339 * var_x386) : (0))))));
        IJth(rJacobian, 19, 19) = -0.033333333333333333 - var_x352 + var_x351 * var_x355;
        IJth(rJacobian, 22, 19) = 50.0 * var_x400;
        IJth(rJacobian, 23, 19) = -1;
        IJth(rJacobian, 0, 20) = mSetVoltageDerivativeToZero ? 0.0 : (0.008152173913043478 * var_x87 + 1.0436203813975009e-6 * var_x91 - 1.173913043478261 * var_x86 - 318.49696580075846 * var_x88 - 36.287999999999997 * var_x92 + 0.00019591421434992582 * var_x33 * (17.737505194555091 + 0.0023223462158299631 * var_chaste_interface__Na__Na_i) / pow((1 + 0.00013092857142857142 * var_chaste_interface__Na__Na_i), 2));
        IJth(rJacobian, 20, 20) = 3.0570652173913045e-6 * var_x87 + 3.9135764302406278e-10 * var_x91 - 0.013608 * var_x92 - 0.00044021739130434783 * var_x86 - 0.039812120725094803 * var_x88;
        IJth(rJacobian, 22, 20) = var_x401 * (226.80000000000001 * var_x92 - 6.52262738373438e-6 * var_x91);
        IJth(rJacobian, 5, 21) = -var_x166;
        IJth(rJacobian, 6, 21) = var_x212 + (-var_x209 - var_x210) * var_chaste_interface__ICaL__c2;
        IJth(rJacobian, 7, 21) = var_x166 + (0.00063442013684210537 * var_x163 * var_x164 - 2.1032463466666669e-8 * var_x165 * var_x230) * var_chaste_interface__ICaL__xi1ca + 0.0020298666666666667 * var_x0 * var_x165;
        IJth(rJacobian, 9, 21) = -var_x212 + var_x209 * var_chaste_interface__ICaL__c2 + var_x210 * var_chaste_interface__ICaL__c2;
        IJth(rJacobian, 21, 21) = -2.0;
        IJth(rJacobian, 0, 22) = mSetVoltageDerivativeToZero ? 0.0 : (((var_x64) ? (var_x95 - 0.30344253960384004 * var_x70) : (var_x95 - 0.022865589730760374 * var_x96)));
        IJth(rJacobian, 1, 22) = 0.00025000000000000001 * var_x111;
        IJth(rJacobian, 19, 22) = ((var_x326) ? (var_x322 * var_x357) : ((var_x335) ? (var_x332 * var_x357) : ((var_x64) ? (0) : ((var_x347) ? (var_x323 * var_x358) : ((var_x334) ? (var_x333 * var_x358) : (0))))));
        IJth(rJacobian, 20, 22) = 6.3389491199999997 * var_x93 + 6.7398201688830334e-8 * var_x90 - 0.00020411999999999996 * var_x94;
        IJth(rJacobian, 21, 22) = ((var_x326) ? (var_x388 + var_x372 * var_x387) : ((var_x335) ? (var_x388 + var_x375 * var_x387) : ((var_x64) ? (var_x388) : ((var_x347) ? (var_x390 + var_x372 * var_x389) : ((var_x334) ? (var_x390 + var_x375 * var_x389) : (var_x390))))));
        IJth(rJacobian, 22, 22) = ((var_x64) ? (var_x401 * (var_x405 - 0.94825793626200006 * var_x70) + var_x408 * (var_x407 - 9100.0 * var_x0 * var_x309)) : (var_x401 * (var_x405 - 0.071454967908626169 * var_x96) + var_x408 * (var_x407 - var_x0 * var_x402)));
        IJth(rJacobian, 25, 22) = 2.2890000000000001 - var_x404;
        IJth(rJacobian, 1, 23) = var_x112 * (var_x117 + var_x118 - var_x119);
        IJth(rJacobian, 18, 23) = 0.01;
        IJth(rJacobian, 19, 23) = ((var_x326) ? (var_x360 + var_x342 * var_x361) : ((var_x335) ? (var_x360 + var_x349 * var_x361) : ((var_x64) ? (var_x360) : ((var_x347) ? (var_x360 + var_x342 * var_x362) : ((var_x334) ? (var_x360 + var_x349 * var_x362) : (var_x360))))));
        IJth(rJacobian, 21, 23) = ((var_x326) ? (var_x361 * var_x380) : ((var_x335) ? (var_x361 * var_x382) : ((var_x64) ? (0) : ((var_x347) ? (var_x362 * var_x380) : ((var_x334) ? (var_x362 * var_x382) : (0))))));
        IJth(rJacobian, 23, 23) = var_x359;
        IJth(rJacobian, 1, 24) = var_x112 * (0.019599999999999999 + var_x113);
        IJth(rJacobian, 24, 24) = -0.019599999999999999 - var_x113;
        IJth(rJacobian, 22, 25) = var_x401 * (0.019599999999999999 + var_x406);
        IJth(rJacobian, 25, 25) = -0.019599999999999999 - var_x406;
    }

template<>
void OdeSystemInformation<Cellmahajan_2008FromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "mahajan_shiferaw_model_2008";
    this->mFreeVariableName = "Environment__time";
    this->mFreeVariableUnits = "ms";

    // NV_Ith_S(rY,0):
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("mV");
    this->mInitialConditions.push_back(-87.169816169406);

    // NV_Ith_S(rY,1):
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.000256752008084);

    // NV_Ith_S(rY,2):
    this->mVariableNames.push_back("INa__xm");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.001075453357);

    // NV_Ith_S(rY,3):
    this->mVariableNames.push_back("INa__xh");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.990691306716);

    // NV_Ith_S(rY,4):
    this->mVariableNames.push_back("INa__xj");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.993888937283);

    // NV_Ith_S(rY,5):
    this->mVariableNames.push_back("ICaL__c1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.8211252e-05);

    // NV_Ith_S(rY,6):
    this->mVariableNames.push_back("ICaL__c2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.979322592773);

    // NV_Ith_S(rY,7):
    this->mVariableNames.push_back("ICaL__xi1ca");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.001208153482);

    // NV_Ith_S(rY,8):
    this->mVariableNames.push_back("ICaL__xi1ba");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.3616596e-05);

    // NV_Ith_S(rY,9):
    this->mVariableNames.push_back("ICaL__xi2ca");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.004173008466);

    // NV_Ith_S(rY,10):
    this->mVariableNames.push_back("ICaL__xi2ba");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.015242594688);

    // NV_Ith_S(rY,11):
    this->mVariableNames.push_back("IKr__xr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.007074239331);

    // NV_Ith_S(rY,12):
    this->mVariableNames.push_back("IKs__xs1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.048267587131);

    // NV_Ith_S(rY,13):
    this->mVariableNames.push_back("IKs__xs2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.105468807033);

    // NV_Ith_S(rY,14):
    this->mVariableNames.push_back("Ito__xtos");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00364776906);

    // NV_Ith_S(rY,15):
    this->mVariableNames.push_back("Ito__ytos");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.174403618112);

    // NV_Ith_S(rY,16):
    this->mVariableNames.push_back("Ito__xtof");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.003643592594);

    // NV_Ith_S(rY,17):
    this->mVariableNames.push_back("Ito__ytof");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.993331326442);

    // NV_Ith_S(rY,18):
    this->mVariableNames.push_back("Irel__Ca_JSR");
    this->mVariableUnits.push_back("uM");
    this->mInitialConditions.push_back(97.505463697266);

    // NV_Ith_S(rY,19):
    this->mVariableNames.push_back("Irel__xir");
    this->mVariableUnits.push_back("uM_per_ms");
    this->mInitialConditions.push_back(0.006679257264);

    // NV_Ith_S(rY,20):
    this->mVariableNames.push_back("Na__Na_i");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(11.441712311614);

    // NV_Ith_S(rY,21):
    this->mVariableNames.push_back("Ca__Ca_dyad");
    this->mVariableUnits.push_back("uM");
    this->mInitialConditions.push_back(1.716573130685);

    // NV_Ith_S(rY,22):
    this->mVariableNames.push_back("Ca__Ca_submem");
    this->mVariableUnits.push_back("uM");
    this->mInitialConditions.push_back(0.226941113355);

    // NV_Ith_S(rY,23):
    this->mVariableNames.push_back("Ca__Ca_NSR");
    this->mVariableUnits.push_back("uM");
    this->mInitialConditions.push_back(104.450004990523);

    // NV_Ith_S(rY,24):
    this->mVariableNames.push_back("Ca__tropi");
    this->mVariableUnits.push_back("uM");
    this->mInitialConditions.push_back(22.171689894953);

    // NV_Ith_S(rY,25):
    this->mVariableNames.push_back("Ca__trops");
    this->mVariableUnits.push_back("uM");
    this->mInitialConditions.push_back(19.864701949854);

    // mParameters[0]:
    this->mParameterNames.push_back("ScaleFactorGkr");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[1]:
    this->mParameterNames.push_back("ScaleFactorGks");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[2]:
    this->mParameterNames.push_back("ScaleFactorIto");
    this->mParameterUnits.push_back("dimensionless");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellmahajan_2008FromCellMLCvode)
#endif // CHASTE_CVODE
