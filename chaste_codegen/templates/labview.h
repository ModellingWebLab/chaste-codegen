//===========================================================================
// This source file was generated from CellML by chaste_codegen version {{converter_version}}
//
// Model: {{model_name}}
//
// Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//     (translator: chaste_codegen, model type: {{model_type}})
// on {{generation_date}}
//
// <autogenerated>
//===========================================================================

#ifndef __{{model_name | upper}}_H__
#define __{{model_name | upper}}_H__

//------------------------------------------------------------------------------
// State variables
//------------------------------------------------------------------------------

#define _NB_OF_STATE_VARIABLES_ {{state_vars | length}}

extern double Y[_NB_OF_STATE_VARIABLES_];
extern double dY[_NB_OF_STATE_VARIABLES_];
{%- for state_var in state_vars %}
// {{loop.index0}}: {{state_var.var}} ({{state_var.units}}) (in {{components[loop.index0]}}) (Initial value: {{state_var.initial_value}})
{%- endfor %}

extern char YNames[_NB_OF_STATE_VARIABLES_][{{stat_var_name_max_length +1}}];
extern char YUnits[_NB_OF_STATE_VARIABLES_][{{unit_name_max_length +1}}];
extern char YComponents[_NB_OF_STATE_VARIABLES_][{{component_name_max_length +1 }}];

//------------------------------------------------------------------------------
// Constants
//------------------------------------------------------------------------------
{% for param in modifiable_parameters %}
extern double {{param["comment_name"]}}; // {{param["units"]}} (in {{param["component"]}}){%- endfor %}

{% for deriv in y_derivative_equations %}
{%- if deriv.is_constant%}extern double {{deriv.lhs}}; // {{deriv.units}} (in {{deriv.component}})
{% endif %}{%- endfor %}
//------------------------------------------------------------------------------
// Computed variables
//------------------------------------------------------------------------------

{% for deriv in y_derivative_equations %}
{%- if not deriv.is_constant and not deriv.lhs_is_sv%}extern double {{deriv.lhs}}; // {{deriv.units}} (in {{deriv.component}})
{% endif %}{%- endfor %}

//------------------------------------------------------------------------------
// Procedures
//------------------------------------------------------------------------------

extern void init();
extern void compute(double {{free_variable.var_name}});

//------------------------------------------------------------------------------

#endif

//==============================================================================
// End of file
//==============================================================================
