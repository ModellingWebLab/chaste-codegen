
    void Dynamicaslanidi_model_2009FromCellMLBackwardEuler::ComputeResidual(double {{free_variable.var_name}}, const double rCurrentGuess[{{nonlinear_state_vars|length}}], double rResidual[{{nonlinear_state_vars|length}}])
    {
        std::vector<double>& rY = rGetStateVariables();
        {% for state_var in state_vars %}
        {%- if state_var.in_y_deriv and state_var.linear %}double {{ state_var.var }} = {% if loop.index0 == membrane_voltage_index %}(mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[{{loop.index0}}]);{%- else %}rY[{{loop.index0}}];{%- endif %}
        // Units: {{state_var.units}}; Initial value: {{state_var.initial_value}}
        {% endif %}{%- endfor %}        
        //output_nonlinear_state_assignments{% include "BE/cpp/non_linear_state_vars" %}
        
        //output_equations
        {%- for deriv in y_derivative_equations %}{%- if not deriv.in_membrane_voltage %}
        const double {{deriv.lhs}} = {{deriv.rhs}}; // {{deriv.units}}{%- endif %}
        {%- endfor %}
        {% for residual_var in residual_equations %}
        rResidual[{{ residual_var.residual_index }}] = rCurrentGuess[{{ residual_var.residual_index }}] - rY[{{ residual_var.state_var_index }}] - mDt*{{ residual_var.var }};
        {%- endfor %}
    }